RPLCRD		/*

	Procedure ID:  REPLACECRD

	Description:

	This procedure definition is compiled into run-time program RPLCRD
	which generates a replacement card based upon the defined numbering
	algorithm specified at the card type level.

	---- Revision History ------------------------------------------------
	
	01/06/05 - SPR - 18555
	   	     Card Management - General DBI3 system area cleanup.
		   	
	----------------------------------------------------------------------
	*/

 quit   // Do not allow calling into the top of this procedure.


EXEC(CRDNUM,CRDTYP,ACN)	//external entry point

 type public String NCRDNUM
 type Boolean NOACT
 type Number CID
 type String GRP
 
 // Get next expiring card
 type RecordCRD crd=Db.getRecord("CRD","CRDTYP,CRDNUM")    
 
 type RecordCRD rcrd=Class.new("RecordCRD")
 set rcrd=crd.copy()
 do rcrd.setMode(0)
 
 // Get and set replacement card number
 if NCRDNUM.get().isNull() set NCRDNUM=$$^CRDNUMGN(CRDTYP,crd.acn,CRDNUM,1)

 // Could not generate replacement card number
 if NCRDNUM="" do Runtime.setErrMSG("CRD",4006) quit
 	
 set crd.rplcrd=NCRDNUM
 set rcrd.crdnum=NCRDNUM
 set rcrd.crdtyp=crd.crdtyp
 
 // Set new status 
 set rcrd.stat=0
 set rcrd.replace=0

 // Set new issue date
 set rcrd.isdt=%SystemDate
  
 // cpb - 08/11/99
 new NOACT
 set NOACT=1
 do rcrd.save() 

 // Link all accounts to the new card
 set CRDTYP=crd.crdtyp
 set CRDNUM=crd.crdnum

 type ResultSet rs=Db.select("GRP,CID","CRDGRP","CRDTYP=:CRDTYP AND CRDNUM=:CRDNUM")
 
 if rs.isEmpty() quit
 
 for  quit:'rs.next()  do {
 	set GRP=rs.getCol("GRP")
	set CID=rs.getCol("CID")
	type RecordCRDGRP crdgrp=Db.getRecord("CRDGRP","CRDTYP=:CRDTYP,CRDNUM=:CRDNUM,GRP=:GRP,CID=:CID",1)
	do crdgrp.setAuditFlag(1)
	set crdgrp.crdnum=rcrd.crdnum
	do crdgrp.save()
	}

 quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60271^22775^Renga SP^1706"	// Signature - LTD^TIME^USER^SIZE
