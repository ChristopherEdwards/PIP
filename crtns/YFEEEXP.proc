YFEEEXP	//Private;Service Fee Exemption Plan function
	/*
	   ORIG: GEISS - 08/16/95
	   DESC: Service Fee Exemption Plan function

	---- Revision History ------------------------------------------------
	
	09/25/06 - GIRIDHAL - CR 22450
		   Modify section VPG1 to change the WHERE condition 
		   (MNEU='SRVFEE' instead of KEY='SRVFEE') to build the 
		   look up table for category 4. 
		   
	03/14/06 - RussellDSR - CR19897
		   Correct usage of table for category 4.
	
	08/24/05 - RussellDS - CR16911
		   Significant, but not complete rewrite to resolve logic
		   errors and screen management.
		   
		   Modify to use variables instead of dummy columns in
		   tables YFEEEXP1, 3, and 4.
		   
		   Fix PSL errors and warnings.
		   
		   Remove old revision history.

	----------------------------------------------------------------------
	*/
	
	quit
	
NEW	//

	do INIT(0)
	quit


UPD     //

	do INIT(1)
	quit


INQ     //	

	do INIT(2)
	quit


DEL	//

	do INIT(3)
	quit


INIT(%ProcessMode) //

	type public String ER

	type Boolean CAT1, CAT3, CAT4
	type Number %NOPRMT, %PAGE, %PG
	type String VFMQ

	set %PAGE=2
	if %ProcessMode=3 set %PAGE=1
	
	type RecordYFEEEXP fYFEEEXP

	do VPG00(.fYFEEEXP) 
	if ER quit
	
	kill %NOPRMT

	set %PG = 1
	set (CAT1,CAT3,CAT4)=0

	do VPG(.fYFEEEXP)

	quit


VPG(RecordYFEEEXP fYFEEEXP)

	type Boolean CAT1, CAT3, CAT4
	type public Number %PAGE, %PG
	type public String ER, VFMQ

	type Boolean FINISH
	type Number %MODS, %REPEAT
	type String DCAT1(), DCAT3(), DCAT4(), SIDX()

	set %REPEAT=13

        set FINISH=0
        for  do { quit:FINISH

		// plan parameters
                if %PG<2 do {
                	
                	type Number I
                	
                	do VPG01(.fYFEEEXP) quit:"DFQ"[VFMQ
                	
                	kill SIDX
                	
                	set I = 2
                	if CAT1 set SIDX(I) = "YFEEEXP1", I = I + 1
                	if CAT3 set SIDX(I) = "YFEEEXP3", I = I + 1
                	if CAT4 set SIDX(I) = "YFEEEXP4", I = I + 1
                	
                	set %PAGE = I - 1
                }
                else  do VPG1(fYFEEEXP, .DCAT1(), .DCAT3(), .DCAT4())
		
		if ER set FINISH=1 quit
		if VFMQ.exists(),"DFQ"[VFMQ do VER(.fYFEEEXP, .DCAT1(), .DCAT3(), .DCAT4()) set FINISH=1 quit
	
		set %PG=%PG+1
        }

	quit


VPG1(RecordYFEEEXP fYFEEEXP,	// YFEEEXP record
     String DCAT1(),		// Data for category 1 - YFEEEXP1
     String DCAT3(),		// Data for category 3 - YFEEEXP3
     String DCAT4())		// Data for category 4 - YFEEEXP4
     
     	type public Number %PAGE, %PG
     	type public String ER, SIDX(), VFMQ
     	
     	type Number CAT
	type String COL1(), COL2(), COL3(), COL4(), SID
	
	set SID = SIDX(%PG)
	set CAT = SID.extract(SID.length())	// Category number

	do VLOD(.DCAT1(), .DCAT3(),.DCAT4())

	// get screen program and execute
	set VFMQ = ""
	if (CAT = 1) do {
		
		type String CATT()
		
		// Create table look up for CAT 1 free items
		type ResultSet rs=Db.select("ETC,DES","TRN","CLS='M' AND GRP='FEE'")
		while rs.next() set CATT(rs.getCol("ETC"))=rs.getCol("DES")
		
		do LOAD(.DCAT1(), .COL1(), .COL2(), .COL3(), .COL4())
		
		do DRV^USID(%ProcessMode, "YFEEEXP1", .fYFEEEXP)
		
		if (VFMQ '= "Q") do SAVE(.DCAT1(), .COL1(), .COL2(), .COL3(), .COL4())
	}
	
	if (VFMQ '= "Q"), (CAT = 3) do {
		
		do LOAD(.DCAT3(), .COL1(), .COL2(), .COL3(), .COL4())
		
		do DRV^USID(%ProcessMode, "YFEEEXP3", .fYFEEEXP)
		
		if (VFMQ '= "Q") do SAVE(.DCAT3(), .COL1(), .COL2(), .COL3(), .COL4())
	}

	if (VFMQ '= "Q"), (CAT = 4) do {
	
		type String CATT()
		
		// Create table look up for CAT 4 free items
		type ResultSet rs=Db.select("KEY,DESC", "UTBLFEE", "MNEU='SRVFEE'")
		while rs.next() set CATT(rs.getCol("KEY"))=rs.getCol("DESC")
		
		do LOAD(.DCAT4(), .COL1(), .COL2(), .COL3(), .COL4())
		
		do DRV^USID(%ProcessMode, "YFEEEXP4", .fYFEEEXP)
		
		if (VFMQ '= "Q") do SAVE(.DCAT4(), .COL1(), .COL2(), .COL3(), .COL4())
	}

	if VFMQ="Q" set ER=1
	
	quit
	
	
LOAD(String DCAT(),	// Data from YFEEEXPn table
     String COL1(),	// Screen column 1 - FTYPE
     String COL2(),	// Screen column 2 - FAMT
     String COL3(),	// Screen column 3 - FTYPE
     String COL4())	// Screen column 4 - FAMT
     
	// Load data into screen arrays
     
	type Number CNT, ROW
	type String FTYPE
     
	set ROW = 1
	set CNT = 0
     
	kill COL1, COL2, COL3, COL4
     
	set FTYPE = ""
	for  set FTYPE = DCAT(FTYPE).order() quit:FTYPE.isNull()  do {
     	
		if ((CNT # 2) = 0) do {
			set COL1(ROW) = FTYPE
			set COL2(ROW) = DCAT(FTYPE)	// FAMT
			set CNT = CNT + 1
		}
		else  do {
			set COL3(ROW) = FTYPE
			set COL4(ROW) = DCAT(FTYPE)	// FAMT
			set CNT = CNT + 1
			set ROW = ROW + 1
		}
	}
	
	quit
	
	
SAVE(String DCAT(),	// Data from YFEEEXPn table
     String COL1(),	// Screen column 1 - FTYPE
     String COL2(),	// Screen column 2 - FAMT
     String COL3(),	// Screen column 3 - FTYPE
     String COL4())	// Screen column 4 - FAMT
     
	// Move date from screen arrays back to data array
	
	// COL1 and COL4 = FTYPE, COL2 and COL4 = FAMT
     
	type Number ROW
	
	kill DCAT
	
	set ROW = ""
	for  set ROW = COL1(ROW).order() quit:ROW.isNull()  do {
		
		if 'COL1(ROW).isNull() set DCAT(COL1(ROW)) = COL2(ROW).get()
	}
	
	for  set ROW = COL3(ROW).order() quit:ROW.isNull()  do {
		
		if 'COL3(ROW).isNull() set DCAT(COL3(ROW)) = COL4(ROW).get()
	}
	
	quit


VPG00(RecordYFEEEXP fYFEEEXP)

	type public String ER, VFMQ

	type Number OLNTB
	type String %NOPRMT, %READ, %TAB()

	set %TAB("PLAN")="[YFEEEXP]PLAN/XPP=D PLAN^YFEEEXP"
	set %TAB("EFD")="[YFEEEXP]EFD/XPP=D CHECK^YFEEEXP"

	if %ProcessMode do {
		set %TAB("PLAN")=%TAB("PLAN")_"/TBL=[YFEEEXP]:DISTINCT"
		set %TAB("EFD")=%TAB("EFD")_"/TBL=[YFEEEXP]EFD:QU ""[YFEEEXP]PLAN=<<PLAN>>"""
		}

	set %READ="@@%FN,,,PLAN#1,EFD#1" set %NOPRMT="N"
	do ^UTLREAD 
	if VFMQ="Q" set ER=1 quit

	quit


PLAN	//

	type public Number %OSAVE
	type public String ER, RM, X

	set ER=0 
	set RM=""
	
	quit:%OSAVE
	
	// Warning. ~p1 already exists
	type ResultSet rs = Db.select("TRNGRP", "UTBLTRNGRPT", "TRNGRP=:X")
	if 'rs.isEmpty() set ER="W" set RM=$$^MSG(2974,$$^MSG(3019,X)) quit
	
	if Db.isDefined("UTBLFEE","MNEU='FEESCH',KEY=:X") set ER="W" set RM=$$^MSG(2974,$$^MSG(3019,X))

	quit


VPG01(RecordYFEEEXP fYFEEEXP) // Call first screen

	type public Boolean CAT1, CAT3, CAT4
	type public Date EFD
	type public String PLAN

	set (CAT1,CAT3,CAT4)=0

	set fYFEEEXP=Db.getRecord("YFEEEXP","PLAN=:PLAN,EFD=:EFD",1)

	if fYFEEEXP.getMode()=1 do {
		type ResultSet rs1 = Db.select("FTYPE","YFEEEXP1","PLAN=:PLAN AND EFD=:EFD")
		if 'rs1.isEmpty() set CAT1=1

                type ResultSet rs3 = Db.select("FTYPE","YFEEEXP3","PLAN=:PLAN AND EFD=:EFD")
                if 'rs3.isEmpty() set CAT3=1
		
		type ResultSet rs4 = Db.select("FTYPE","YFEEEXP4","PLAN=:PLAN AND EFD=:EFD")
                if 'rs4.isEmpty() set CAT4=1

	}

	do DRV^USID(%ProcessMode,"YFEEEXP",.fYFEEEXP)

	quit


ERR	//

	type public String ER, VFMQ

	set ER=1 
	do ^UTLERR

	set VFMQ="Q"

	quit


VER(RecordYFEEEXP fYFEEEXP,
    String DCAT1(),
    String DCAT3(),
    String DCAT4())
    
    	type public Boolean CAT1, CAT3, CAT4
    	type public Date EFD
    	type public String PLAN, VFMQ
    	
    	type Number FAMT
    	type String FTYPE

	if %ProcessMode=2!(VFMQ="Q") do END quit


	/* File data
	   Creates, Updates, and Deletes [YFEEEXP]
	   update [UTBLTRNGRP] AND [UTBLFEESCH]
	*/

	if CAT1 do Db.delete("YFEEEXP1","PLAN=:PLAN AND EFD=:EFD")
	if CAT3 do Db.delete("YFEEEXP3","PLAN=:PLAN AND EFD=:EFD")
	if CAT4 do Db.delete("YFEEEXP4","PLAN=:PLAN AND EFD=:EFD")
	
	if %ProcessMode=3 do Db.delete("YFEEEXP","PLAN=:PLAN AND EFD=:EFD") quit

	do fYFEEEXP.save()

	set FTYPE = ""
	
	if CAT1 for  set FTYPE = DCAT1(FTYPE).order() quit:FTYPE.isNull()  do {
		
                type RecordYFEEEXP1 yfeeexp1 = Class.new("RecordYFEEEXP1", "PLAN=:PLAN,EFD=:EFD,FTYPE=:FTYPE")
                	
		set yfeeexp1.famt = DCAT1(FTYPE)
		
		do yfeeexp1.save()
	}

	if CAT3 for  set FTYPE = DCAT3(FTYPE).order() quit:FTYPE.isNull()  do {
		
                type RecordYFEEEXP3 yfeeexp3 = Class.new("RecordYFEEEXP3", "PLAN=:PLAN,EFD=:EFD,FTYPE=:FTYPE")
                	
		set yfeeexp3.famt = DCAT3(FTYPE)
		
		do yfeeexp3.save()
	}


	if CAT4 for  set FTYPE = DCAT4(FTYPE).order() quit:FTYPE.isNull()  do {
		
                type RecordYFEEEXP4 yfeeexp4 = Class.new("RecordYFEEEXP4", "PLAN=:PLAN,EFD=:EFD,FTYPE=:FTYPE")
                	
		set yfeeexp4.famt = DCAT4(FTYPE)
		
		do yfeeexp4.save()
	}
                
	do END

	quit


END	//

	type public String ER, PLAN, RM, VFMQ

	if ER!(%ProcessMode=2)!(%ProcessMode=4) quit

	set ER="W"
	if VFMQ="Q" do {
		// Plan ~p1 not created
		if %ProcessMode=0 set RM=$$^MSG(2191,PLAN) quit

		// Plan ~p1 not modified
		if %ProcessMode=1 set RM=$$^MSG(2193,PLAN) quit

		// Plan ~p1 not deleted
		set RM=$$^MSG(2192,PLAN)
		}
	else  do {
		// Plan ~p1 created
		if %ProcessMode=0 set RM=$$^MSG(2188,PLAN) quit

		// Plan ~p1 modified
		if %ProcessMode=1 set RM=$$^MSG(2190,PLAN) quit

		// Plan ~p1 deleted
		set RM=$$^MSG(2189,PLAN)
		}

	quit


CHECK	//

	type public Number %OSAVE
	type public String ER, PLAN, RM, X
	
	// Effective date must be the same as or after the system date
	if %OSAVE<2,X<%SystemDate set ER=1 set RM=$$^MSG(879) quit

	if '%OSAVE do {
		// ~p1 already exists
		if Db.isDefined("YFEEEXP","PLAN=:PLAN,EFD=:X") set ER=1 set RM=$$^MSG(3019,X) quit
	
		// Transaction group already exist
		if Db.isDefined("UTBLTRNGRPT","TRNGRP=:PLAN,TRNGRPDT=:X") set ER=1 set RM=$$^MSG(2716) quit
	
		// Fee schedule already exist
		if Db.isDefined("UTBLFEESCH","FEESCH=:PLAN,FEESCHDT=:X") set ER=1 set RM=$$^MSG(2717) quit
		}

	quit


VLOD(String DCAT1(),	
     String DCAT3(),
     String DCAT4())
     
	// vlod section for controlling screens
	
	type public Boolean CAT1, CAT3, CAT4
	type public Date EFD
	type public String PLAN
	
	if CAT1 do {
		
		type ResultSet rs = Db.select("FTYPE,FAMT", "YFEEEXP1", "PLAN=:PLAN AND EFD=:EFD")
		
		while rs.next() set DCAT1(rs.getCol("FTYPE")) = rs.getCol("FAMT")
	}
		
	if CAT3 do {
		
		type ResultSet rs = Db.select("FTYPE,FAMT", "YFEEEXP3", "PLAN=:PLAN AND EFD=:EFD")
		
		while rs.next() set DCAT3(rs.getCol("FTYPE")) = rs.getCol("FAMT")
	}

	if CAT4 do {
		
		type ResultSet rs = Db.select("FTYPE,FAMT", "YFEEEXP4", "PLAN=:PLAN AND EFD=:EFD")
		
		while rs.next() set DCAT4(rs.getCol("FTYPE")) = rs.getCol("FAMT")
       	}
		
	quit	

vSIG()	quit "60533^39907^Lakshmi Giridharan^9951"	// Signature - LTD^TIME^USER^SIZE
