HLD10FL(RecordHLD10 hld10, String vpar, Boolean vparNorm) // HLD10 - Donor Risk Hold File Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:16 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (4)              11/22/2003
	// Trigger Definition (2)                      11/22/2005
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = hld10.getMode()                       // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(hld10,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(hld10,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String CID = hld10.cid
	type String EXPDT = hld10.expdt
	type String RCID = hld10.rcid

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("CID").exists()!vx("EXPDT").exists()!vx("RCID").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("HLD10",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("HLD10","CID = :hld10.cid and EXPDT = :hld10.expdt and RCID = :hld10.rcid") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String CID
	type public String EXPDT
	type public String RCID

	type RecordHLD10 hld10 = Db.getRecord("HLD10","CID=:CID,EXPDT=:EXPDT,RCID=:RCID")
	if (%ProcessMode = 2) do {
		do hld10.setMode(2)

		do HLD10FL(hld10,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordHLD10 hld10

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("HLD10","CID = :hld10.cid and EXPDT = :hld10.expdt and RCID = :hld10.rcid") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(hld10)) S ^HLD(10,vobj(hld10,-3),vobj(hld10,-4),vobj(hld10,-5))=vobj(hld10)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordHLD10 hld10


	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^HLD(10,vobj(hld10,-3),vobj(hld10,-4),vobj(hld10,-5))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordHLD10 hld10

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordHLD10 hld10

	if hld10.cid.isNull() do vreqerr("CID") quit
	if hld10.expdt.isNull() do vreqerr("EXPDT") quit
	if hld10.rcid.isNull() do vreqerr("RCID") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("HLD10","MSG",1767,"HLD10."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordHLD10 hld10
	if 'hld10.cid.isNull() set vfkey("^ACN("_""""_hld10.cid_""""_","_50_")")="HLD10(CID) -> ACN"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordHLD10 hld10
	type public Number %O
	type String vERRMSG

	if 'Db.isDefined("ACN",":hld10.cid") set vERRMSG = $$^MSG(8563,"HLD10(CID) -> ACN") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit


VAI //
	type public Number ER = 0
	type public String vx(),RM
	do vai1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vai1 // Trigger AFTER_INSERT - HLD10 After Insert Trigger

	type public RecordHLD10 hld10
	// HLD10 after insert trigger

	/* 
	   Revision History
	   
	   11/22/05 - NATRAJAH - 13734
		      General DBI3 cleanup.

	   09/10/99 - CHOK
		      Converted to PSL
	*/
	
	type Public Boolean ER
	// Donor and recipient accounts do not have the same owner
	if 'Db.isDefined("DEPDONOR","RCID,CID") do Runtime.setErrMSG("HLD10",3470) quit:ER 
	quit
	

vau1 // Trigger AU_HLD10 - HLD10 After Update trigger

	type public RecordHLD10 hld10
	/*
	   Revision History

	   11/22/05 - NATRAJAH - 13734
		      General DBI3 cleanup.

	   12/8/99 - CHOK - 33890
		     Converted to PSL
	*/

	// HLD10 After Update trigger
	type Public Boolean ER
	// Donor and recipient accounts do not have the same owner	
	if 'Db.isDefined("DEPDONOR","RCID,CID") do Runtime.setErrMSG("HLD10",3470) quit:ER 
	quit
	


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordHLD10 hld10

	set X = hld10.cid if 'X.isNull(),'Db.isDefined("ACN","X") set vRM = $$^MSG(1485,X) do vdderr("CID", vRM) quit
	set X = hld10.expdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("EXPDT", vRM) quit
	set X = hld10.rcid if 'X.isNull(),'Db.isDefined("ACN","X") set vRM = $$^MSG(1485,X) do vdderr("RCID", vRM) quit
	set X = hld10.rskamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"HLD10.RSKAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("HLD10","MSG",979,"HLD10."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordHLD10 hld10

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux
	type String voldpar = vpar.get()                       // Save filer switches

	if vx("CID").exists() set vux("CID") = vx("CID")
	if vx("EXPDT").exists() set vux("EXPDT") = vx("EXPDT")
	if vx("RCID").exists() set vux("RCID") = vx("RCID")
	do vkey(1) set voldkey = hld10.cid_","_hld10.expdt_","_hld10.rcid // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = hld10.cid_","_hld10.expdt_","_hld10.rcid // Copy new keys into object
	type RecordHLD10 vnewrec = hld10.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("HLD10",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update
	set vpar = voldpar
	if vpar["/TRIGAFT/" if vx("CID").exists()!vx("RCID").exists() do vau1

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordHLD10 hld10

	if vux("CID").exists() set hld10.cid = vux("CID").piece("|",i)
	if vux("EXPDT").exists() set hld10.expdt = vux("EXPDT").piece("|",i)
	if vux("RCID").exists() set hld10.rcid = vux("RCID").piece("|",i)
	quit
