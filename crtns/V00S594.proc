V00S594(%ProcessMode,RecordUTBLFPI UTBL)   // -  - SID= <UTBLFPI> Foreign Processor Interface
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:31 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLFPI",VPGM=$T(+0),VSNAME="Foreign Processor Interface"
 set VFSN("UTBLFPI")="zUTBL"
 set vPSL=1
 set KEYS(1)=UTBL.KEY
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.UTBL),VDA1(.UTBL),^DBSPNT()

 if '%ProcessMode do VNEW(.UTBL),VPR(.UTBL),VDA1(.UTBL)
 if %ProcessMode do VLOD(.UTBL) quit:$G(ER)  do VPR(.UTBL),VDA1(.UTBL)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.UTBL)
	quit


VNEW(RecordUTBLFPI UTBL) // Initialize arrays if %O=0
 
 do VDEF(.UTBL)
 do VLOD(.UTBL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLFPI UTBL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLFPI UTBL) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLFPI UTBL) // Display screen prompts
 set VO="7||13|"
 set VO(0)="10|0"
 set VO(1)=$C(10,21,38,2,0,0,0,0,0,0)_"01TForeign Processor Interface Definition"
 set VO(2)=$C(12,2,29,0,0,0,0,0,0,0)_"01T Foreign Processor Interface:"
 set VO(3)=$C(12,50,12,1,0,0,0,0,0,0)_"01T R&T Number:"
 set VO(4)=$C(13,8,23,1,0,0,0,0,0,0)_"01T Interface Description:"
 set VO(5)=$C(14,12,19,0,0,0,0,0,0,0)_"01TDiscretionary Data:"
 set VO(6)=$C(16,11,20,1,0,0,0,0,0,0)_"01T Processing Program:"
 set VO(7)=$C(17,13,18,1,0,0,0,0,0,0)_"01T Maximum Attempts:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLFPI UTBL)  // Display screen data
 new V
 //
 set VO="13|8|13|"
 set VO(8)=$C(12,32,6,2,0,0,0,0,0,0)_"01T"_$E(UTBL.KEY,1,6)
 set VO(9)=$C(12,63,9,2,0,0,0,0,0,0)_"00T"_$E(UTBL.FPRT,1,9)
 set VO(10)=$C(13,32,23,2,0,0,0,0,0,0)_"00T"_$E(UTBL.DESC,1,23)
 set VO(11)=$C(14,32,26,2,0,0,0,0,0,0)_"00T"_$E(UTBL.DISCR,1,26)
 set VO(12)=$C(16,32,8,2,0,0,0,0,0,0)_"00T"_$E(UTBL.PGM,1,8)
 set VO(13)=$C(17,32,2,2,0,0,0,0,0,0)_"00N"_UTBL.MAXTRY
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLFPI UTBL)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=6,VPT=10,VPB=17,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLFPI"
 set OLNTB=17032
 
 set VFSN("UTBLFPI")="zUTBL"
 //
 // 
	
	
 set %TAB(1)=$C(11,31,6)_"21T12401|1|[UTBLFPI]KEY"
 set %TAB(2)=$C(11,62,9)_"01T12402|1|[UTBLFPI]FPRT"
 set %TAB(3)=$C(12,31,23)_"01T12401|1|[UTBLFPI]DESC"
 set %TAB(4)=$C(13,31,26)_"00T12405|1|[UTBLFPI]DISCR"
 set %TAB(5)=$C(15,31,8)_"01T12403|1|[UTBLFPI]PGM|||do VP1^V00S594(.UTBL)"
 set %TAB(6)=$C(16,31,2)_"01N12404|1|[UTBLFPI]MAXTRY"
 do VTBL(.UTBL)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLFPI UTBL) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLFPI UTBL) //
 type public Boolean ER
 type public String X

 set ER=$$DQ^%ZRTNS(X)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLFPI UTBL
 do VPR(.UTBL)
 do VDA1(.UTBL)
 do ^DBSPNT()
 quit

VW(RecordUTBLFPI UTBL)
 do VDA1(.UTBL)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLFPI UTBL)
 do VDA1(.UTBL)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLFPI UTBL
 do VDA1(.UTBL)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLFPI UTBL
 if sn="UTBLFPI" do vSET1(.UTBL,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLFPI UTBL,di,X)
 do UTBL.setAuditFlag(1)
 set UTBL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLFPI UTBL
 if fid="UTBLFPI" quit $$vREAD1(.UTBL,di)
 quit ""
vREAD1(RecordUTBLFPI UTBL,di)
 quit UTBL.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
