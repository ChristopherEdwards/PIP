R01S334	// SCA345 - ACH Origination Batch Transaction Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:48 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA345"
	set RN="ACH Origination Batch Transaction Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[ACHDTL]COID|[ACH]:NOVAL||D EXT^DBSQRY||T|Company ID|||||"
	set %TAB("VIN2")="|255||[ACHBCH]QND|||D EXT^DBSQRY||T|Effective Entry Date|||||"
	set %TAB("VIN3")="|255||[ACHBCH]PTYPEF|||D EXT^DBSQRY||T|Payment Type|||||"
	set %TAB("VIN4")="|255||[ACHBCH]BORIG8|||D EXT^DBSQRY||T|Batch Origin (8 Digits)|||||"
	set %TAB("VIN5")="|255||[ACHBCH]BATCH|[ACHBCH]BATCH:DISTINCT:NOVAL||D EXT^DBSQRY||T|Batch Number|||||"
	set %TAB("VIN6")="|255||[ACHFIL]FORIG|[UTBLACHRT]:NOVAL||D EXT^DBSQRY||T|File Originator|||||"
	set %TAB("VIN7")="|255||[ACHFIL]FDEST|[UTBLACHRT]:NOVAL||D EXT^DBSQRY||T|File Destination|||||"
	set %TAB("VIN8")="|255||[ACHFIL]QFDATE|||D EXT^DBSQRY||T|File Creation Date|||||"
	set %TAB("VIN9")="|255||[ACHFIL]QFTIME|||D EXT^DBSQRY||T|File Creation Time|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,CONAM,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,ND1,NDF1,RID,RN,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA345",RN="ACH Origination Batch Transaction Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA345","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[ACHDTL]SEQ#1#6,[ACHDTL]INDNAM#9#22,[ACHDTL]INDID#33#15,[ACHDTL]RTNUMFULL#50#9,[ACHDTL]CID#61#17,[ACHDTL]TAMTF#96#13,[ACHDTL]TRACE#111#15"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[ACHDTL]COID "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[ACHBCH]QND "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[ACHBCH]PTYPEF "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[ACHBCH]BORIG8 "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[ACHBCH]BATCH "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[ACHFIL]FORIG "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[ACHFIL]FDEST "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[ACHFIL]QFDATE "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[ACHFIL]QFTIME "_VIN9,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("ACHDTL,ACHBCH,ACHFIL") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Company ID"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Effective Entry Date"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Payment Type"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Batch Origin (8 Digits)"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Batch Number"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"File Originator"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"File Destination"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"File Creation Date"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"File Creation Time"_"|VIN9|"_VIN9.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="ACH Origination Batch Transaction Report"
		set VBNRINFO("PGM")="R01S334"
		set VBNRINFO("RID")="SCA345"
		set VBNRINFO("TABLES")="ACHDTL,ACHBCH,ACHFIL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ACHDTL]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,ACHFIL]FORIG"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ACHDTL]FILE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,ACHBCH]BORIG5"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,ACHDTL]COID"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,ACHBCH]ND"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,ACHDTL]BATCH"
		set VBNRINFO("ORDERBY",8)="[SYSDEV,ACHDTL]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:8 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"ACHDTL.TJD,ACHFIL.FORIG,ACHDTL.FILE,ACHBCH.BORIG5,"
	set VSELECT=VSELECT_"ACHDTL.COID,ACHBCH.ND,ACHDTL.BATCH,ACHDTL.SEQ,ACHF"
	set VSELECT=VSELECT_"IL.FDATEF,ACHFIL.FTIMEF,ACHBCH.COID8,ACHBCH.CNAME,"
	set VSELECT=VSELECT_"ACHBCH.PTYPE,ACHBCH.CED,ACHFIL.FORIGF,ACHDTL.INDNA"
	set VSELECT=VSELECT_"M,ACHDTL.INDID,ACHDTL.RTNUMFULL,ACHDTL.CID,ACHDTL."
	set VSELECT=VSELECT_"TAMTF,ACHDTL.TRACE,ACHBCH.TDAMTF,ACHBCH.TCAMTF,ACH"
	set VSELECT=VSELECT_"DTL.IBSTC,ACHDTL.ACHTC,ACHDTL.FREE,ACHDTL.ADDSEQ,A"
	set VSELECT=VSELECT_"CHDTL.TAMT,ACHFIL.FDEST"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"ACHDTL,ACHBCH,ACHFIL",VWHERE,"ACHDTL.TJD,ACHFIL.FORIG,ACHDTL.FILE,ACHBCH.BORIG5,ACHDTL.COID,ACHBCH.ND,ACHDTL.BATCH,ACHDTL.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7="",vovc8=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc8,vc8
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29
	set vc1=V.piece($C(9),1)			// ACHDTL.TJD
	set vc2=V.piece($C(9),2)			// ACHFIL.FORIG
	set vc3=V.piece($C(9),3)			// ACHDTL.FILE
	set vc4=V.piece($C(9),4)			// ACHBCH.BORIG5
	set vc5=V.piece($C(9),5)			// ACHDTL.COID
	set vc6=V.piece($C(9),6)			// ACHBCH.ND
	set vc7=V.piece($C(9),7)			// ACHDTL.BATCH
	set vc8=V.piece($C(9),8)			// ACHDTL.SEQ
	set vc9=V.piece($C(9),9)			// ACHFIL.FDATEF
	set vc10=V.piece($C(9),10)			// ACHFIL.FTIMEF
	set vc11=V.piece($C(9),11)			// ACHBCH.COID8
	set vc12=V.piece($C(9),12)			// ACHBCH.CNAME
	set vc13=V.piece($C(9),13)			// ACHBCH.PTYPE
	set vc14=V.piece($C(9),14)			// ACHBCH.CED
	set vc15=V.piece($C(9),15)			// ACHFIL.FORIGF
	set vc16=V.piece($C(9),16)			// ACHDTL.INDNAM
	set vc17=V.piece($C(9),17)			// ACHDTL.INDID
	set vc18=V.piece($C(9),18)			// ACHDTL.RTNUMFULL
	set vc19=V.piece($C(9),19)			// ACHDTL.CID
	set vc20=V.piece($C(9),20)			// ACHDTL.TAMTF
	set vc21=V.piece($C(9),21)			// ACHDTL.TRACE
	set vc22=V.piece($C(9),22)			// ACHBCH.TDAMTF
	set vc23=V.piece($C(9),23)			// ACHBCH.TCAMTF
	set vc24=V.piece($C(9),24)			// ACHDTL.IBSTC
	set vc25=V.piece($C(9),25)			// ACHDTL.ACHTC
	set vc26=V.piece($C(9),26)			// ACHDTL.FREE
	set vc27=V.piece($C(9),27)			// ACHDTL.ADDSEQ
	set vc28=V.piece($C(9),28)			// ACHDTL.TAMT
	set vc29=V.piece($C(9),29)			// ACHFIL.FDEST
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0,vs(8)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1,vskp(8)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	if 'vskp(7).get() do VDTL7 quit:VFMQ
	do VHDG8 quit:VFMQ
	if 'vskp(8).get() do VDTL8 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(8)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7,vc8,vovc8
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,vb8=1,VH0=1
	if vb6!(+vovc6'=+vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,vb8=1
	if vb7!(+vovc7'=+vc7) set vs(8)=0,vh(8)=0,VD(7)=0,vb8=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(8) set vs(8)=1 do VSUM8 quit:VFMQ  do stat^DBSRWUTL(8)
	if 'vs(7) set vs(7)=1 do VSUM7 quit:VFMQ  do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(8)=VT(8)+1
	quit

VSUM3	// Summary
	type public String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,I,IOSL,ND1,NDF1,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                   "_"Totals for File Originator:"
	set V=$$VP12(vc15)				// @TBL([ACHFIL]FORIGF)
	set VL=VL_$J("",48-VL.length())_$E(V,1,20)
	set VL=VL_$J("",79-VL.length())_"Debit Amount"
	set VL=VL_$J("",99-VL.length())_"Credit Amount"
	do VOM
	set VL="                                                                           "_$J($FN(TFOD,",",2),16)
	set VL=VL_$J("",96-VL.length())_$J($FN(TFOC,",",2),16)
	do VOM
	set VL="" do VOM
	quit

VSUM5	// Summary
	type public String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,I,IOSL,ND1,NDF1,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                  "_"Totals for Batch Originator:"
	set VL=VL_$J("",48-VL.length())_$E(BORIGDEF,1,20)
	set VL=VL_$J("",79-VL.length())_"Debit Amount"
	set VL=VL_$J("",99-VL.length())_"Credit Amount"
	do VOM
	set VL="                                                                           "_$J($FN(TBOD,",",2),16)
	set VL=VL_$J("",96-VL.length())_$J($FN(TBOC,",",2),16)
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,IOSL,ND1,NDF1,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Company ID:"
	set VL=VL_$J("",12-VL.length())_$E(vc11,1,10)
	set VL=VL_$J("",25-VL.length())_"Company Name:"
	set VL=VL_$J("",39-VL.length())_$E(vc12,1,16)
	set VL=VL_$J("",57-VL.length())_"Payment Type:"
	set VL=VL_$J("",71-VL.length())_$E(vc13,1,10)
	set VL=VL_$J("",83-VL.length())_"Company Entry Description:"
	set VL=VL_$J("",110-VL.length())_$E(vc14,1,10)
	do VOM
	set VL="" do VOM
	quit

VSUM6	// Summary
	type public String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,I,IOSL,ND1,NDF1,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+10>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="                         "_"================================= COMPANY TOTALS"
	set VL=VL_$J("",74-VL.length())_"==============================="
	do VOM
	set VL="                             "_"Company ID:"
	set VL=VL_$J("",42-VL.length())_$J(vc5,10)
	set VL=VL_$J("",74-VL.length())_"Debit Amount"
	set VL=VL_$J("",92-VL.length())_"Credit Amount"
	do VOM
	set VL="                                                                "_"On-Us"
	set VL=VL_$J("",70-VL.length())_$J($FN(CDOU,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(CCOU,",",2),16)
	do VOM
	set VL="                                                              "_"Foreign"
	set VL=VL_$J("",70-VL.length())_$J($FN(CDOF,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(CCOF,",",2),16)
	do VOM
	set VL="                                                                          "_"------------"
	set VL=VL_$J("",93-VL.length())_"------------"
	do VOM
	set VL="                                                                      "_$J($FN(TCOD,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(TCOC,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit

VDTL7	// Detail
	type public String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,IOSL,ND1,NDF1,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:VD(7)  set VD(7)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="         "_"Effective Date:"
	do VP1 quit:VFMQ!verror.get()  set V=$E(ND1,1,10) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",26-VL.length())_V
	set VL=VL_$J("",39-VL.length())_"Batch #:"
	set VL=VL_$J("",48-VL.length())_$J(vc7,3)
	set VL=VL_$J("",56-VL.length())_"Company ID:"
	set VL=VL_$J("",68-VL.length())_$E(vc5,1,10)
	set VL=VL_$J("",83-VL.length())_"Company Name:"
	set VL=VL_$J("",97-VL.length())_$E(vc12,1,16)
	do VOM
	set VL="" do VOM
	quit

VSUM7	// Summary
	type public String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,I,IOSL,ND1,NDF1,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(7) quit
	if VLC+9>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="                         "_"================================== DATE TOTALS"
	set VL=VL_$J("",72-VL.length())_"================================="
	do VOM
	set VL="                             "_"Company ID:"
	set VL=VL_$J("",42-VL.length())_$J(vc5,10)
	set VL=VL_$J("",74-VL.length())_"Debit Amount"
	set VL=VL_$J("",92-VL.length())_"Credit Amount"
	do VOM
	set VL="                         "_"Effective Date:"
	do VP3 quit:VFMQ!verror.get()  set V=$E(NDF1,1,10)
	set VL=VL_$J("",42-VL.length())_V
	set VL=VL_$J("",64-VL.length())_"On-Us"
	set VL=VL_$J("",70-VL.length())_$J($FN(DDOU,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(DCOU,",",2),16)
	do VOM
	set VL="                                                              "_"Foreign"
	set VL=VL_$J("",70-VL.length())_$J($FN(DDOF,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(DCOF,",",2),16)
	do VOM
	set VL="                                                                          "_"------------"
	set VL=VL_$J("",93-VL.length())_"------------"
	do VOM
	set VL="                                                                      "_$J($FN(TDTD,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(TDTC,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit

VHDG8	// Group Header
	type public String %MSKD,%TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,CONAM,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,ER,FDES,FORDES,IOSL,ND1,NDF1,RID,RN,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:vh(8)  set vh(8)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=" "_"Seq #  Name                    ID Number        R&T RDFI   Account Number      Tran Code             Amount          Trace #"
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VDTL8	// Detail
	type public String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,IOSL,ND1,NDF1,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(8)=0 do VHDG8 quit:VFMQ

	set VL=$J(vc8,6)
	set VL=VL_$J("",8-VL.length())_$E(vc16,1,22)
	set VL=VL_$J("",32-VL.length())_$E(vc17,1,15)
	set VL=VL_$J("",48-VL.length())_$J(vc18,10)
	set VL=VL_$J("",60-VL.length())_$E(vc19,1,17)
	do VP4 quit:VFMQ!verror.get()  set V=$E(TRN,1,13)
	set VL=VL_$J("",80-VL.length())_V
	set V=vc20,VO=V set V=$J($FN(V,",",2),14) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",94-VL.length())_V		// [SYSDEV,ACHDTL]TAMTF
	set VL=VL_$J("",109-VL.length())_$J(vc21,16)
	do VOM
	quit

VSUM8	// Summary
	type public String %TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,I,IOSL,ND1,NDF1,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(8) quit
	if VLC+9>IOSL do VHDG0 quit:VFMQ  set vh(8)=0 do VHDG8 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="                         "_"================================= BATCH TOTALS"
	set VL=VL_$J("",72-VL.length())_"================================="
	do VOM
	set VL="                             "_"Company ID:"
	set VL=VL_$J("",42-VL.length())_$J(vc5,10)
	set VL=VL_$J("",74-VL.length())_"Debit Amount"
	set VL=VL_$J("",92-VL.length())_"Credit Amount"
	do VOM
	set VL="                         "_"Effective Date:"
	do VP6 quit:VFMQ!verror.get()  set V=$E(ND1,1,10)
	set VL=VL_$J("",42-VL.length())_V
	set VL=VL_$J("",64-VL.length())_"On-Us"
	set VL=VL_$J("",70-VL.length())_$J($FN(DOU,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(COU,",",2),16)
	do VOM
	set VL="                                "_"Batch #:"
	set VL=VL_$J("",42-VL.length())_$J(vc7,3)
	set VL=VL_$J("",62-VL.length())_"Foreign"
	set VL=VL_$J("",70-VL.length())_$J($FN(DOF,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(COF,",",2),16)
	do VOM
	set VL="                                                                          "_"------------"
	set VL=VL_$J("",93-VL.length())_"------------"
	do VOM
	set VL="                                                                      "_$J($FN(TBD,",",2),16)
	set VL=VL_$J("",89-VL.length())_$J($FN(TBC,",",2),16)
	do VOM
	set VL="                                       "_"*** Error in Batch Totals ***"
	set V=vc22,VO=V set V=$J($FN(V,",",2),16) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",70-VL.length())_V
	set V=vc23,VO=V set V=$J($FN(V,",",2),16) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",89-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BATCH,BORIGDEF,CCOF,CCOU,CDOF,CDOU,COF,COID,CONAM,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU,FDES,FORDES,ND1,NDF1,RID,RN,TBC,TBD,TBOC,TBOD,TCAMTF,TCOC,TCOD,TDAMTF,TDTC,TDTD,TFOC,TFOD,TRN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	set VL=" "_"File Originator:"
	do VP9 quit:VFMQ!verror.get()  set V=$E(FORDES,1,25)
	set VL=VL_$J("",19-VL.length())_V
	set VL=VL_$J("",51-VL.length())_"File Destination:"
	do VP10 quit:VFMQ!verror.get()  set V=$E(FDES,1,25)
	set VL=VL_$J("",70-VL.length())_V
	set VL=VL_$J("",105-VL.length())_"File Date:"
	set VL=VL_$J("",116-VL.length())_$J(vc9,8)
	do VOM
	set VL="Batch Originator:"
	do VP11 quit:VFMQ!verror.get()  set V=$E(BORIGDEF,1,25)
	set VL=VL_$J("",19-VL.length())_V
	set VL=VL_$J("",56-VL.length())_"File Number:"
	set VL=VL_$J("",69-VL.length())_$J(vc3,3)
	set VL=VL_$J("",105-VL.length())_"File Time:"
	set VL=VL_$J("",116-VL.length())_$J($$TIM^%ZM(vc10),8)
	do VOM
	set VL="" do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: ND1

	type public String vc6
 type public String ND1
 type String ND0,ZERO

 set ZERO="000000"
 set ND0=vc6

 if ND0.length()<6 set ND0=ZERO.extract(1,(6-ND0.length()))_ND0
 set ND1=ND0.extract(3,4)_"/"_ND0.extract(5,6)_"/"_ND0.extract(1,2)
	quit

VP2	// Column post-processor - Variable: ND1

 type public Number CCOF,CCOU,CDOF,CDOU,COF,COU,DCOF,DCOU,DDOF,DDOU,DOF,DOU
 type public Number TBC,TBD,TBOC,TBOD,TCOC,TCOD,TDTC,TDTD,TFOC,TFOD

 set (TDTC,TDTD,DDOU,DCOU,DDOF,DCOF,TBC,TBD,DOU,COU,DOF,COF)=0
 set (TFOC,TFOD,TBOC,TBOD,TCOC,TCOD,CDOU,CCOU,CDOF,CCOF)=0
	quit

VP3	// Column pre-processor - Variable: NDF1

	type public String vc6
 type public String NDF1
 type String ND0,ZERO

 set ZERO="000000"
 set ND0=vc6

 if ND0.length()<6 set ND0=ZERO.extract(1,(6-ND0.length()))_ND0
 set NDF1=ND0.extract(3,4)_"/"_ND0.extract(5,6)_"/"_ND0.extract(1,2)
	quit

VP4	// Column pre-processor - Variable: TRN

	type public String vc24,vc25
 type public String TRN

 set TRN=""

 if vc24.length() set TRN=vc24 quit
 set TRN=vc25
	quit

VP5	// Column post-processor - [SYSDEV,ACHDTL]TAMTF

	type public String vc26,vc27,vc28,vc25,vc24
 /*
 ---- Revision History ------------------------------------------------
 08/25/06 - VANITHAK - CR 22614
	    Modified to get the correct column ACHTC for TRN.
	
 06/13/06 - MBUIM - CR 21461
	    Modified to replace long variable name stblachtc
 
 ----------------------------------------------------------------------
 */

 type public Number DC,TBC,TBD,TBOC,TBOD,TCOC,TCOD,TDTC,TDTD,TFOC,TFOD
 type public String ART,ON,SET,SET1
 type Number AMT
 type String I,TRN

 set ART=vc26_vc27
 set AMT=vc28
 set TRN=vc25,ON="F"

 if $$RTB^%ZFUNC(TRN)="" set TRN=vc24,ON="U"

 set AMT=AMT/100

 if ON="F" do {
 	type RecordSTBLACHTC sachtc=Db.getRecord("STBLACHTC","ACHTC=:TRN",1)
  	set DC=sachtc.dc
	}

 else  do {
	type RecordTRN trn=Db.getRecord("TRN","ETC=:TRN",1)
	set DC=trn.itc
	}

 if DC set SET="CO"_ON,TDTC=TDTC+AMT,TBC=TBC+AMT,TCOC=TCOC+AMT,TFOC=TFOC+AMT,TBOC=TBOC+AMT
 else  set SET="DO"_ON,TDTD=TDTD+AMT,TBD=TBD+AMT,TCOD=TCOD+AMT,TFOD=TFOD+AMT,TBOD=TBOD+AMT

 for I="D","C" set SET1=SET,SET1=I_SET1,SET1=@SET1+AMT
 set SET=@SET+AMT
	quit

VP6	// Column pre-processor - Variable: ND1

	type public String vc6
 type public String ND1
 type String ND0,ZERO

 set ZERO="000000"
 set ND0=vc6

 if ND0.length()<6 set ND0=ZERO.extract(1,(6-ND0.length()))_ND0
 set ND1=ND0.extract(3,4)_"/"_ND0.extract(5,6)_"/"_ND0.extract(1,2)
	quit

VP7	// Column post-processor - [SYSDEV,ACHBCH]TDAMTF

	type public String vc22
 type public Number DOF
 type public String V
 type Boolean TOTERR

 set TOTERR=0

 if vc22'=DOF set TOTERR=1

 if 'TOTERR set V=""
	quit

VP8	// Column post-processor - [SYSDEV,ACHBCH]TCAMTF

	type public String vc23
 type public Number COF
 type public String V,VL
 type Boolean TOTERR

 set TOTERR=0

 if vc23'=COF set TOTERR=1
 quit:TOTERR

 set (V,VL)=""
	quit

VP9	// Column pre-processor - Variable: FORDES

	type public String vc2
 /*
 ---- Revision History ------------------------------------------------
 
 06/13/06 - MBUIM - CR 21461 
 	    Modified to replace long variable name utblachrt
	
 ----------------------------------------------------------------------
 */

 type public Number FDATEF
 type public String fACHFIL(),FOR,FORDES,FTIMEF

 // None Defined
 if 'FTIMEF.exists() set FTIMEF=$$^MSG(6436)

 if 'FDATEF.exists() set FDATEF=$$^MSG(6436)

 set FORDES=$$^MSG(6436)
 quit:'fACHFIL.exists()

 do STRIP^DEPDI("FOR",vc2,"L")
 quit:FOR.length()=0

 type RecordUTBLACHRT uachrt=Db.getRecord("UTBLACHRT","KEY=:FOR",1)
 set FORDES=uachrt.iname.extract(1,25)
	quit

VP10	// Column pre-processor - Variable: FDES

	type public String vc29
 /*
 ---- Revision History ------------------------------------------------

 06/13/06 - MBUIM - CR 21461
 	    Modified to replace long variable name utblachrt

 ----------------------------------------------------------------------
 */

 type public String DES,fACHFIL(),FDES

 // None Defined
 set FDES=$$^MSG(6436)
 quit:'fACHFIL.exists()

 do STRIP^DEPDI("DES",vc29,"L")
 quit:'DES.length()

 type RecordUTBLACHRT uachrt=Db.getRecord("UTBLACHRT","KEY=:DES",1)
 set FDES=uachrt.iname.extract(1,25)
	quit

VP11	// Column pre-processor - Variable: BORIGDEF

	type public String vc4
 /*
 ---- Revision History ------------------------------------------------

 06/13/06 - MBUIM - CR 21461
 	    Modified to replace long variable name utblachrt

 ----------------------------------------------------------------------
 
 */

 type public String BORIGDEF,fACHBCH(),VAL
 type String BOR
 
 // None Defined
 set BORIGDEF=$$^MSG(6436)
 quit:'fACHBCH.exists()
 set BOR=vc4,VAL=""

 type RecordUTBLACHRT uachrt=Db.getRecord("UTBLACHRT","KEY=:BOR",1)
 set BORIGDEF=uachrt.iname
	quit

VP12(KEY1)	// @TBL([ACHFIL]FORIGF)

	if KEY1="" quit ""
	type Public Cache %CACHE()
	type RecordUTBLACHRT tbl=%CACHE("UTBLACHRT").getRecord("UTBLACHRT","KEY=:KEY1")
	quit tbl.INAME
