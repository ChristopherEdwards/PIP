LNPPC1
	/*

	Loan pre/post processors - create account (1)

	   ORIG:  Neal Gorman (5053) - 06/17/86

	   Returns default values for new accounts.

	   Also called, in sections by loan filer before insert trigger
	   for default values.

	---- Revision History ------------------------------------------------

	09/15/03 - GRAY - 51349
		   Corrected undefined error on the variable PCE in the
		   PMTF section.

	02/13/02 - ARCILLAZ - 43583
		   Converted to PSL. Removed old revision history.


	10/04/02 - WARNERC - 47283
		   Section PMTFCHK, Changed NJD to temporary variable TNJD
		   to correct billing next date when billing offset is "1P"
		   and payment frequency falls one day prior to disbursment
		   date.
		   Made programming standards changes for new
		   and kill commands, and calls to UFRE.

	02/05/01 - PONGRACZD - 43665
		   Modified section CALCIRN to set $P(LN(60),"|",1) to the new
		   INDEX plan if it has been changed when creating a new account.

	*/

	quit


Public PMTF(RecordLN ln)	// Payment frequency - sets 1st due date and int-ppd-to date


	new bloff,distnd,dist1nd,icm,newld,newnd,newval,odd,pcm,pcmval
	new prodfpf,prodppif

	do DBSEDT^UFRE("[LN]DIST*FRE") if ER do FREERR quit
	set FRE=X

	if '$D(PCE) set PCE=2 set distnd=ln.dist1nd
	if PCE'=2,distnd'="" quit

	if PCE=17 set distnd=ln.dist2nd
	if PCE=20 set distnd=ln.dist3nd
	if PCE=23 set distnd=ln.dist4nd

	if FRE["*" do { quit
		// Cannot use * (asterisk) frequency for loan modeler
		if $G(LNMDLR)=1 set ER=1 set RM=$$^MSG(1096) quit
		do PMTF1(.ln)
		if ER do ^UTLERR
		}

	// Billing Date Offset
	set bloff=ln.bloff

	// Distribution 1 Next Due
	set dist1nd=ln.dist1nd

	// Interest Collection Method
	set icm=ln.icm

	// Original Disbursement Date
	set odd=ln.odd

	set pcm=ln.pcm 
	if pcm="" set pcm=15
	Type RecordSTBLPCM stblpcm=Db.getRecord("STBLPCM","KEY=:pcm")
	set pcmval=stblpcm.pcmp

	// Define CRCD
	do CHEKCRCD(.ln)

	Type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE")
	set prodppif=prodctl.ppif
	set prodfpf=prodctl.fpf
	do PMTFCHK(.ln) quit:ER

	// Interest Prepaid Date
	if $D(newval("AMODT")) set ln.amodt=newval("AMODT")

	// Distribution 1 Annual Factor
	if $D(newval("DIST1AF")) set ln.dist1af=newval("DIST1AF")


	if $D(newnd) do {
		if PCE=2 set ln.dist1nd=newnd 
		if PCE=17 set ln.dist2nd=newnd
		if PCE=20 set ln.dist3nd=newnd
		if PCE=23 set ln.dist4nd=newnd
		}
	if $D(newld) do {
		if PCE=2 set ln.dist1ld=newld
		if PCE=17 set ln.dist2ld=newld
		if PCE=20 set ln.dist3ld=newld
		if PCE=23 set ln.dist4ld=newld
		}
	quit

PMTFTRIG(RecordLN ln,distfre,FRE,bloff,distnd,dist1nd,icm,odd,pcmval,CRCD,type,newval)	//Private

	/*
	   Called from loan before insert trigger
	   Performs PMTFCHK section to create values, if necessary, for
	   AMODT, DIST1AF, DIST*ND, and DIST*LD

	   Data is returned in newval(column_name)

	*/

	new newld,newnd,PCE,prodppif,prodfpf,x

	// distfre=freq number
	set PCE=$P("2|17|20|23","|",distfre)
	if PCE'=2,distnd'="" quit
	set x=$$PMTF^LNFUNCS(ln.type)
	set prodppif=$P(x,"|",1) 
	set prodfpf=$P(x,"|",2)
	do PMTFCHK(.ln) quit:ER
	if $D(newnd) set newval("DIST"_distfre_"ND")=newnd
	if $D(newld) set newval("DIST"_distfre_"LD")=newld
	quit


PMTFCHK(RecordLN ln)	//

	new AF,TNJD,X,Z

	set X=FRE
	set ORGDT=$S(odd'="":odd,1:%SystemDate)
	if FRE="" set:PCE=2 newval("AMODT")=ORGDT kill PCE quit
	set Z=$$NJD^UFRE(%SystemDate,FRE,.AF) quit:ER
	if PCE do { quit:ER
		if PCE=17 do D2FRE^LNPPC3(.ln,dist1nd) quit
		if PCE=20 do D2FRE^LNPPC3(.ln,dist1nd) quit
		if PCE=23 do D2FRE^LNPPC3(.ln,dist1nd) quit
		}
	set JD=ORGDT
	if '(FRE["D"!(FRE["W")),'Db.isDefined("USRFRE","UFRE=:FRE"),prodfpf,+FRE>1 do { quit:ER
		set SVAF=AF 
		new SVFRE
		set SVFRE=FRE 
		set FRE=1_$P(FRE,+FRE,2,99)
		set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER
		set SV=NJD 
		set FRE=SVFRE 
		set AF=SVAF
		}
	else  set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER  set SV=NJD
	if PCE=2 set newval("DIST1AF")=AF
	else  for I=1:1 quit:SV'<dist1nd  set JD=NJD set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER  set SV=NJD

	// Frequency contains "X"
	if 'NJD do { quit
		set newnd=MDT
		set newld=JD 
		set newval("DIST1AF")=""
		kill JD,NJD,PCE,SV
		}

	if prodfpf set NJD=$$NJD^UFRE(JD,FRE,.AF,"00001") quit:ER
	if PCE=2,icm=1 do {
		set JD=NJD 
		set NJD=$$NJD^UFRE(NJD,FRE,.AF,1) quit:ER  
		set FRE=X
		}
	set BDAYS=bloff
	if bloff="1P" do {
		set JD=NJD 
		set TNJD=$$NJD^UFRE(JD,FRE,.AF,1) quit:ER 
		set BDAYS=JD-TNJD 
		set FRE=X
		}
	if NJD-BDAYS<ORGDT for  set JD=NJD set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER  quit:$S(bloff="1P":JD,1:NJD-bloff)'<ORGDT
	set newnd=NJD
	if PCE=2 set newval("DIST1AF")=AF set dist1nd=newnd
	set JD=NJD 
	set NJD=$$NJD^UFRE(JD,FRE,.AF,1) quit:ER  
	set newld=NJD 
	set FRE=X

	// Continue only for DIST1ND
	if PCE'=2 quit

	// Calculate AMODT
	set AMODT=ORGDT
	if prodppif do PPIF1 if ER quit
	if AMODT<ORGDT set AMODT=ORGDT
	set newval("AMODT")=AMODT
	set RM($O(RM(""),-1)+1)=$$DAT^%ZM(AMODT)_"|[LN]AMODT"

	set TRM=ln.ptrm 
	if TRM="" set TRM=ln.trm
	kill JD,MFRE,NJD,SV,TNJD
	quit


PMTF1(RecordLN ln)	//Private; Frequency = "*" (Payment Schedules)


	new odd

	// If secondary frequency - only available if primary frequency is "*"
	// Distribution 1 Frequency
	if PCE'=2 quit:ln.dist1fre["*"  set ER=1 set ET="PFRE*3" quit

	do PMTF1A(.ln) quit:ER

	// Original Disbursement Date
	set odd=ln.odd

	// Interest pre-paid to date
	set ln.amodt=odd

	// Interest Prepaid Date
	set RM($O(RM(""),-1)+1)=$$DAT^%ZM(ln.amodt)_"|[LN]AMODT"

	// Last due date
	set ln.dist1ld=odd

	// Last schedule date
	set ln.schld=odd

	// DIST1ND
	set ln.dist1nd=""
	quit



PMTF1A(RecordLN ln)	// Payment schedule - check values of associated data items

	/*
	   Called from ^LNNEW and screen LNUCPF
	   Do not add more calls without careful consideration

	*/

	if $G(MDT)'="",ln.mdt="" set ln.mdt=MDT

	// Check for appropriate payment calc method
	new pcm,pcmval

	// Payment Calculation Method
	set pcm=ln.pcm 
	if pcm="" set pcm=15
	Type RecordSTBLPCM stblpcm=Db.getRecord("STBLPCM","KEY=:pcm")
	set pcmval=stblpcm.pcmp
	if pcm="" set ER=1 set ET="PFRE*1" quit
	if $E(pcmval,3)'=3!$E(pcmval,2)!($E(pcmval,5)) set ER=1 set ET="PFRE*1" quit

	/*
	First character of interest accrual method must not be "0" unless
	intrest calculation period frequency has a value.
	Interest Calculation Period Frequency
	*/
	if '$E(ln.iacm),ln.icpf="" set ER=1 set ET="PFRE*4" quit

	// Flag PIACM (Calculate P&I Based on IACM) cannot be turned on.
	if ln.piacm set ER=1 set ET="PFRE*5" quit

	// Ensure that account is closed ended (has maturity date)
	// Account Maturity Date
	if 'ln.mdt set ER=1 set ET="PFRE*2" quit
	quit


Public PPIF(RecordLN ln)	//Called from LNICNV

	new dist1nd,icm,pcm,pcmval

	// Distribution 1 Next Due
	set dist1nd=ln.dist1nd

	// Interest Collection Method
	set icm=ln.icm

	// Payment Calculation Method
	set pcm=ln.pcm if pcm="" set pcm=15
	Type RecordSTBLPCM stblpcm=Db.getRecord("STBLPCM","KEY=:pcm")
	set pcmval=stblpcm.pcmp
	do PPIF1
	quit

PPIF1	//

	// Arrears
	if 'icm set JD=dist1nd set FRE="-"_X
	if   set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER  set AMODT=NJD set FRE=X quit

	// If interest in advance - prepaid-to-date is based upon:
	// 1.  whether the interest calc method specifies use of accrual.

	if $E(pcmval,2) set AMODT=dist1nd quit

	// then 2.  whether use of anticipated interest is specified.

	// Advance, not anticipated
	if '$E(pcmval,4) set AMODT=dist1nd quit

	// Advance, anticipated - use first bill date
	set Z=bloff 
	set AMODT=dist1nd-Z
	if Z="1P" do {
		set JD=AMODT+1 
		set NJD=$$NJD^UFRE(JD,FRE,.AF,1) quit:ER  
		set AMODT=NJD
		}
	quit


Public FREERR	// Frequency format error
	set RM=$$^MSG(1354) kill JD
	quit


Public NEXTDD(RecordLN ln)	// check that payment date and frequency are consistent and


	new ET
	if X="" quit

	//PRODCTL.CBPROD
	if X<ln.odd set ER=1 set ET="LNEXTDD" set DAT=ln.odd do ^UTLERR quit

	// check that date does not exceed MDT
	if 'ln.mdt do CMDT(.ln)

	// Distribution 1 Frequency
	if ln.mdt,X>ln.mdt,ln.dist1fre="*" set ER=1 set ET="DUEMDT" do ^UTLERR quit

	// Distribution 1 Frequency
	if ln.dist1fre["*" quit
	if X'?5N set X=$$^SCAJD(X) 
	if X<0 quit

	// Distribution 1 Frequency
	set FRE=ln.dist1fre quit:'$L(FRE)

	/*
	Loan create - 1st due date must be consistent with payment frequency
	and, if interest in arrears, must be > AMODT.  If interest in
	advance, must be equal to AMODT.
	*/

	// Check to see if payment frequency is daily.  If so, do not verify.
	new DAILY
	set DAILY=0

	Type RecordUSRFRE usrfre=Db.getRecord("USRFRE","UFRE=:FRE",1)
	if usrfre.getMode()=0,$P(FRE,"/",1)["D" set DAILY=1

	// else it is user defined, check if daily
	if usrfre.getMode()=1,usrfre.fre["D" set DAILY=1

	if '%ProcessMode,DAILY=0 do {
		set NJD=$$NJD^UFRE(X,FRE,.AF) quit:ER
		set NJD=$$NJD^UFRE(NJD,FRE,.AF,1) quit:ER
		if NJD-X set ER=1 quit

		// Interest Collection Method
		if 'ln.icm,X'>ln.amodt set ER=1 set ET="LBDDAT1" quit

		new PCM
		// Payment Calculation Method
		set PCM=ln.pcm
		Type RecordSTBLPCM stblpcm=Db.getRecord("STBLPCM","KEY=:ln.pcm")
		if $E(stblpcm.pcmp,2)!'$E(stblpcm.pcmp,4) do { quit
			// Interest Prepaid Date
			if X-ln.amodt set ER=1 set ET="LBDDAT2"
			}
		}
	if %ProcessMode=1 do {
		set JD=X
		set NJD=$$NJD^UFRE(JD,FRE,.AF,1) quit:ER
		set JD=NJD
		set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER
		if NJD-X set ER=1
		}
	if $E(FRE)="-" set FRE=$E(FRE,2,99)
	// If not LBDDAT1 or LBDDAT2
	if ER=1,$G(ET)="" set ET="LBDDAT" set DAT=X do ^UTLERR quit
	if ER=1 do ^UTLERR quit

	// check that difference between scheduled dates is not less than bloff
	set BLOFF=ln.bloff 
	if BLOFF="1P" quit
	set STOP=$S(Db.isDefined("USRFRE","UFRE=:FRE"):X+365,1:X+40) 
	set NJD=X
	for I=1:1 set JD=NJD set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER  set:(NJD-JD<BLOFF) ER=1 quit:(NJD>STOP)  quit:ER
	if ER set ET="LSCHDIF" do ^UTLERR
	kill STOP
	quit


CMDT(RecordLN ln)	// calc MDT using PTRM, if none use TRM


	new ER,TRM
	// Account Term
	set TRM=ln.ptrm 
	if '$L(TRM) set TRM=ln.trm
	if $L(TRM) do ^UMDT
	quit


CHEKCRCD(RecordLN ln)	// Make sure CRCD is defined.

	if $G(CRCD)'="" quit
	// Currency Code
	set CRCD=ln.crcd
	quit

vSIG()	quit "59991^50363^Irina Kin^9733"	// Signature - LTD^TIME^USER^SIZE
