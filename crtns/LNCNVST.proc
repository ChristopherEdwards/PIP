LNCNVST(RecordLN ln,CID,PAS,PAP,PMTDIST,PMTDISTF,NPC,PPDCAT)	
	/* Private;
	Convert string;
	Copyright(c)2000 Sanchez Computer Associates, Inc.  
	All Rights Reserved - 09/14/00 09:37:57 - BECKERW
	ORIG:  Tom Locke (2424) - 11/06/87

	Called by loan filer triggers to convert existing payment string in
	account to string specified by PAP and PAS

	ARGUMENTS:
		. ln 	Loan Account Object	/TYP=RecordLN/REQ if no CID

		. CID  	Account number  		/TYP=N/REQ if no ln

		. PAS  	Pmt application string 		/TYP=T/REQ

		. PAP  	Pmt application path 		/TYP=T/REQ
			Used by LNNEWF1A

		. PMTDIST Pmt distribution 		/TYP=T/REQ/MECH=REF:RW

		. PMTDISTF Pmt dist freq numbers 	/TYP=T/MECH=REF:RW

		. NPC  	No. pmt due categories 		/TYP=N/MECH=REF:W

		. PPDCAT Pmt due catetory 		/TYP=larray/MECH=REF:W
			Array of payment due 
			categories (PPDCAT1-PPDCAT10)

	RETURNS:
		. ER Error flag   			/TYP=N

		. BL Bill array (updated)  		/TYP=larray


	USES: 	VERO("TSC")=1|2 - element = position of old string | how many
		%PR(1)="TSC|2"  - position of new string = element | how many
		OLD("TSC2")=1   - element = position of old string
		NEW("TSC2")=1   - element = position of new string

	---- Revision History ------------------------------------------------
	2/27/2002 - Vitaliy Antonov - 43583
		Converted To PSL.
		Removed old change history.

	09/11/00 - BECKERW - 37168
		Changed INIT section to check for I only string
		before defaulting PMTDIST="I-P"

	----------------------------------------------------------------------
	*/
	if 'ln.getPointer() do {
		new ln
		type RecordLN ln=Db.getRecord("LN","CID")
		do INIT(.ln,PAS,PAP,.PMTDIST,.PMTDISTF,.NPC,.PPDCAT)
		} 
	else  do INIT(.ln,PAS,PAP,.PMTDIST,.PMTDISTF,.NPC,.PPDCAT)
	quit

INIT(RecordLN ln,PAS,PAP,PMTDIST,PMTDISTF,NPC,PPDCAT)

	new distno,I,J,LCDC,LPL,MCDC,MPL,MSTR,N,NEW,NSTR,OLD,%PR,rs,STR,VER,VERO,X,Y,Z
	set LCDC=""
	set MCDC=""
	set LPL=""
	set MPL="" 
	set ER=0

	// prefix new string with "-" for comparisons
	type ResultSet rs=Db.select("DISTRIB","LNPAS2","TABLE=:PAS")
	if 'rs.isEmpty(),rs.next() set MSTR=rs.getCol(1)
	else  set ER=1 quit
	set NSTR="-"_MSTR_"-"

	// Default PMTDIST to Product types if null - 10/20/97 - JMC
	if $G(PMTDIST)="" do {
		new PRODCTL,rs,TYPE
		// Currency Code
		set TYPE=ln.type 
		type ResultSet rs=Db.select("DPEF1,DPEF2,DPEF3,DPEF4","PRODCTL","TYPE=:TYPE")
		if 'rs.isEmpty(),rs.next() set PRODCTL=rs.getRow()

		for VAR="1|1|4","2|2|5","3|3|6","4|4|7" do {
			new DATA,D,A,C
			set A=$P(PRODCTL,$C(9),+VAR)
			for C=1:1 set DATA=$P(A,",",C) quit:DATA=""  do {
				set D=$P(DATA,"(",1)
				if PMTDIST="" set PMTDIST=D
				else  set PMTDIST=PMTDIST_"-"_D
				}
			}
		if PMTDIST="" do {
			if MSTR'["P" set PMTDIST="I"
			else  set PMTDIST="I-P"
			}
		}

	for I=1:1 set Y=$P(PMTDIST,"-",I) quit:Y=""  do { quit:ER
		set distno=$P(PMTDISTF,"-",I)
		// Make sure all old elements are in new string
		// Strip numbers off end of element. Ex. TSC2 -> TSC
		set Z=Y 
		set J=$L(Y)
		if $L(Y)>1,$$ESC^LNU(Y) set L=$L(Z) for J=L:-1 quit:$E(Z,J)?1A
		set Z=$E(Z,1,J)

		// ~p1 is not contained in new string
		if Z'="L",Z'="M",NSTR'[("-"_Z_"-") set ER=1 set RM=$$^MSG(3047,Z) quit
		set N=$E(Y,J+1,99) 
		set OLD(Z_N)=I 
		if 'N set N=1
		set VERO(Z)=I_"|"_N_"|"_distno
		}
	quit:ER

	set I=0
	set N=0 
	set X=1 
	set Y=""
	// Set %PR array with new elements and how many
	for I=1:1 do { quit:Y=""
		set Y=$P(MSTR,"-",I) quit:Y=""
		if Y="M"!(Y="L"),'$D(NEW(Y)) set NEW(Y)=X set %PR(I)=Y_"|1" set X=X+1 quit

		set N=0
		if $D(VERO(Y)) set N=$P(VERO(Y),"|",2) set distno=$P(VERO(Y),"|",3)
		else  set distno=1
		if 'N,(Y="L"!(Y="M")) set N=1
		set %PR(I)=Y_"|"_N_"|"_distno
		if N,$$ESC^LNU(Y) for J=1:1:N set NEW(Y_J)=X set X=X+1
		else  if N set NEW(Y)=X set X=X+1
		}

	do ^LNNEWF1A(PAS,PAP,.PMTDIST,.PMTDISTF,.NPC,.PPDCAT)
	quit

vSIG()	quit "59991^50198^Irina Kin^3636"	// Signature - LTD^TIME^USER^SIZE
