R01S700	// YER433 - T5 Year-End Forms
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/01/2007 08:54 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CNT,MYQRY,MYQRY2,RCODE,TOTTRI,acn,boo
	type String RCOD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String REPDI=CUVAR.spldir_"YER433-"_$$DAT^%ZM(%CurrentDate,"MMDD")_".PBS"
	type Number VIN2
	type String VIN3="ALL"
	type String VIN4="ALL"
	type Number ZIPYADJ

	set RID="YER433"
	set RN="T5 Year-End Forms"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("REPDI")="|40|||[DEVICE]||||T|Report Device|||||"
	set %TAB("VIN2")="|1||[T5INF]RC|RCOD(||set RCODE=X||N|Report Code|||||"
	set %TAB("VIN3")="|255||[T5INF]BOO|[UTBLBRCD]||set boo=X D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN4")="|255||[T5INF]ACN|[T5INF]ACN:DISTINCT:NOVAL||set acn=X D EXT^DBSQRY||T|Customer Number|||||"
	set %TAB("ZIPYADJ")="|1|||[STBLIPYADJ]||||N|Change Int Pr Yr Adjustment Option|||||"

	set %READ="IO/REQ,REPDI#1,VIN2#1,VIN3#1,VIN4#0,ZIPYADJ#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=37
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CNT,MYQRY,MYQRY2,RCODE,TOTTRI,acn,boo
	type public String RCOD
	type public Number VIN2,ZIPYADJ
	type public String REPDI,VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %CRCD,%TIM,ACN,AD(),AMENDTXT,CAD(),CO,CONAM,CRCD,DUMMY,NAME,RC,RID,RN,SIO,T5RECTYP,TAXID,TMP(),TRI,VL,VLOF,VRF(),VSTATS(),YEAR,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="YER433",RN="T5 Year-End Forms"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","YER433","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=99999999			// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[T5INF]RC = "_$$addqts^DBSRWUTL(VIN2),SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[T5INF]BOO "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[T5INF]ACN "_VIN4,SEQ=SEQ+1
		set DQQRY(SEQ)="[T5INF]NRI'>0",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("T5INF,DEP,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}


	// Alignment pattern
	if cuvar.alcount,IOTYP'="TRM",'VRWOPT("NOALIGN").get() do ^DBSRWALN(RID,IO,cuvar.alcount)

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"T5INF.RC,T5INF.BOO,T5INF.ACN,T5INF.CID,CIF.TAXID,T"
	set VSELECT=VSELECT_"5INF.CRI,DEP.ACNRELC,CIF.MAD1,CIF.MAD2,CIF.MAD3,CI"
	set VSELECT=VSELECT_"F.MCITY,CIF.MSTATE,CIF.MZIP,CIF.XNAME,CIF.PCNTRY,C"
	set VSELECT=VSELECT_"IF.PERS"

	#ACCEPT DATE=02/01/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"T5INF,DEP,CIF",VWHERE,"T5INF.RC,T5INF.BOO,T5INF.ACN,T5INF.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16
	set vc1=V.piece($C(9),1)			// T5INF.RC
	set vc2=V.piece($C(9),2)			// T5INF.BOO
	set vc3=V.piece($C(9),3)			// T5INF.ACN
	set vc4=V.piece($C(9),4)			// T5INF.CID
	set vc5=V.piece($C(9),5)			// CIF.TAXID
	set vc6=V.piece($C(9),6)			// T5INF.CRI
	set vc7=V.piece($C(9),7)			// DEP.ACNRELC
	set vc8=V.piece($C(9),8)			// CIF.MAD1
	set vc9=V.piece($C(9),9)			// CIF.MAD2
	set vc10=V.piece($C(9),10)			// CIF.MAD3
	set vc11=V.piece($C(9),11)			// CIF.MCITY
	set vc12=V.piece($C(9),12)			// CIF.MSTATE
	set vc13=V.piece($C(9),13)			// CIF.MZIP
	set vc14=V.piece($C(9),14)			// CIF.XNAME
	set vc15=V.piece($C(9),15)			// CIF.PCNTRY
	set vc16=V.piece($C(9),16)			// CIF.PERS
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 // If TERMINATE PRIOR YEAR UPDATE is on, then set [CUVAR]IPYADJ to off.
 
 type public Number ACN,RCODE,ZIPYADJ,YEAR
 type Number A(),BOO,BEGYR,ENDYR
 type public String %CRCD,acn,boo,CAD(),CONAM,CO,CRCD,MYQRY,MYQRY2,TMP()
 type Number CID,CRI,IPTY,MINRI,NRPPTY,NRI,NRINTPTY,RI,RTE,START,STOP,TRI
 type Boolean KEEP,RPTALL

 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 if ZIPYADJ do {
 	type String ET,DESC
 	set cuvar.ipyadj=ZIPYADJ
 	set ET=$$^MSG(3692)
 	set DESC=$$^MSG(3694)
 	do LOG^UTLEXC($T(+0),"*",DESC.get(),"","",ET.get(),"")
 	do cuvar.save()
 	}

 set BEGYR=$$BOTY^SCADAT($$BOTY^SCADAT(%SystemDate,1)-1,1)  // beginning of tax year
 set ENDYR=$$EOTY^SCADAT(BEGYR,1)                   	    // end of tax year
 set YEAR=$$DAT^%ZM(BEGYR)_"-"_$$DAT^%ZM(ENDYR)

 set MYQRY=boo.translate(",","!")  		// BOO
 set MYQRY2=acn.translate(",","!") 		// ACN
 
 if acn="ALL" do {
 	set RPTALL=1
 	do Db.fastDelete("T5INF","RC=:RCODE")
 	}
 else  do {
 	set RPTALL=0
 	}
 
 // Get company name.
 set CO=cuvar.co
 
 // Find the institution address
	do VLIB1	// User library - INSTAD
 
 // Retrieve the default currency code.
 set CRCD=cuvar.%crcd
 
 // Retrieve the minimum reportable interest value.
 set MINRI=cuvar.t5ramt

 if boo'="ALL" do {
 	type Number I,EX,X
 	set EX=""
	for I=1:1 do { quit:EX=1
 		set X=MYQRY.piece("!",I)
 		if X'="" set A(1,I)=X
		else  set EX=1
 		}
 	}
 if acn'="ALL" do {
 	type Number I,EX,X
 	set EX=""
 	set START=MYQRY2.piece("!",1)-0.0001
 	for I=1:1:2 do { quit:EX=1
		set X=MYQRY2.piece("!",I)
		if X'="" set A(2,I)=X
		else  set EX=1
 		}
	set STOP=A(2,A(2,"").order(-1))+0.0001
 	}
 else  set START=0,STOP=10000000000000000000
 set ACN=START
 
 type ResultSet rs=Db.select("ACN,BOO","CIF","ACN>:START AND ACN<:STOP")
 while rs.next() do {
 	set ACN=rs.getCol("ACN")
 	set BOO=rs.getCol("BOO")
 	if MYQRY'="ALL" set KEEP=1 do {  Q:'KEEP	// Check BOO query
	 	type Number I
 		set I=""
	 	for  set I=A(1,I).order() quit:I=""  do {
			if A(1,I)="" set KEEP=0
			}
 		}
 	if MYQRY2'="ALL" set KEEP=1 do {  Q:'KEEP  	// Check ACN query
 		type Number I
 		set I=""
 		for  set I=A(5,I).order() quit:I=""  do {
			if A(5,I)="" set KEEP=0
			}
 		}
 	if 'RPTALL do T5KILL(ACN,RCODE,BOO)
 	
 	// Delete the TMP array for every customer.
	kill TMP
	
	set CID=""
	type ResultSet rs=Db.select("CID,POI","RELCIF","ACN=:ACN")
	while rs.next() do {
		if 'rs.getCol("POI") quit
		set CID=rs.getCol("CID")
		type RecordDEP dep=Db.getRecord("DEP","CID=:CID",1)
		if 'dep.getMode() quit
		
		// Reset the amount fields
		set (RI,CRI,NRI)=""
		if dep.cls'="D" quit
		if (dep.ira)!(dep.irsexm) quit
		
		set CRCD=dep.crcd
		if CRCD.isNull() set CRCD=cuvar.%crcd
		
		 
		/* Set the Reportable Interest amounts - nonresident interest
		   Replaced fields with Tax year equivalents - 36760 */
		
		set IPTY=dep.ipty - dep.negipty
		set NRPPTY=dep.nrppty
		set NRINTPTY=dep.nrposipty - dep.nrnegipty
		if 'dep.itro,'dep.negipo set RI=(IPTY-dep.nrposipty)-(dep.penpty-NRPPTY)
		if 'dep.itro,dep.negipo set RI=(IPTY-dep.nrposipty)-(dep.penpty-NRPPTY)
		if 'dep.itro set RI=(IPTY-(dep.nrposipty-dep.nrnegipty))-(dep.penpty-NRPPTY)

 /*If the RI is a negative amount, it will not be included in the Total
 Reportable Interest (TRI).  If an account has a negative RI amount, it
 will not be reported on the T5 tax form.  However, the account will be		
 reported with a Reportable Income of $.00 on the T5 Yearend Detail Report. */
		
		if RI<0 do { quit
			set NRI=RI,(CRI,RI)=""
			set TMP(RCODE,BOO,ACN,CID)=ACN_"|"_RI_"|"_CRI_"|"_NRI_"|"_CRCD
			}
			
		//If the RI is 0, there is nothing to report, skip account.
		if RI=0 quit
		
		//Set the Canadian Reportable Interest amt to the Reportable Interest amount
		set CRI=RI
		
		/* If the account's currency code is different from the default currency
		code, convert the foriegn currency to Canadian dollars */
				
		if CRCD'=cuvar.%crcd do {
			type RecordCRCD crcd=Db.getRecord("CRCD","CO=:CO,CRCD=:CRCD")
			set RTE=crcd.exch
			if RTE.isNull() set NRI=RI.get(),(CRI,RI)="" quit
			set CRI=RI*RTE
			}
		set TMP(RCODE,BOO,ACN,CID)=ACN_"|"_RI_"|"_CRI_"|"_NRI_"|"_CRCD
		}
		
	/* ENDPRE Accumulate totals for customer's accounts.
	If the total Canadian reportable interest is greater than the minimum 
	required, then file the data for all acts for the customer. If
	the above is not true, then file any records from the customer
	with an any NON-REPORTABLE interest. */
	
		
	set CID="",TRI=0
	for  set CID=TMP(RCODE,BOO,ACN,CID).order() quit:CID=""  do {
		set TRI=TRI.get()+(TMP(RCODE,BOO,ACN,CID).piece("|",3))
		}
	// Get Branch of ownership
	type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
	set BOO=cif.boo
	
	// Check the total reportable interest against the minimum value.
	if TRI'<MINRI do {  quit
		set CID=""
		for  set CID=TMP(RCODE,BOO,ACN,CID).order() quit:CID=""  do {
			type RecordT5INF t5inf=Db.getRecord("T5INF","RC=:RCODE,BOO=:BOO,ACN=:ACN,CID=:CID",1)
			set t5inf.rc=RCODE
			set t5inf.boo=BOO
			set t5inf.acn=ACN
			set t5inf.cid=CID
			set t5inf.ri=TMP(RCODE,BOO,ACN,CID).piece("|",2)
			set t5inf.cri=TMP(RCODE,BOO,ACN,CID).piece("|",3)
			set t5inf.nri=TMP(RCODE,BOO,ACN,CID).piece("|",4)
			set t5inf.crcd=TMP(RCODE,BOO,ACN,CID).piece("|",5)
			
			do t5inf.save()
			}
		}
	// If not filing all accounts then file accounts with non-reportable interest
	set CID=""
	for  set CID=TMP(RCODE,BOO,ACN,CID).order() quit:CID=""  do {
		if +(TMP(RCODE,BOO,ACN,CID)).piece("|",4)'=0  do {
			type RecordT5INF t5inf=Db.getRecord("T5INF","RC=:RCODE,BOO=:BOO,ACN=:ACN,CID=:CID",1)
			set t5inf.rc=RCODE
			set t5inf.boo=BOO
			set t5inf.acn=ACN
			set t5inf.cid=CID
			set t5inf.ri=TMP(RCODE,BOO,ACN,CID).piece("|",2)
			set t5inf.cri=TMP(RCODE,BOO,ACN,CID).piece("|",3)
			set t5inf.nri=TMP(RCODE,BOO,ACN,CID).piece("|",4)
			set t5inf.crcd=TMP(RCODE,BOO,ACN,CID).piece("|",5)
			
			do t5inf.save()
			}
		}
	}
 quit

T5KILL(ACN,RCODE,BOO) // Kill all related T5 records for this customer

 do Db.fastDelete("T5INF","RC=:RCODE,BOO=:BOO,ACN=:ACN")

	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=CNT,TOTTRI,RCODE,boo,acn,MYQRY,MYQRY2
 
 type public Number CNT,TOTTRI
 type public String RCOD

 kill RCOD
 set RCOD(0)="this is the original slip"
 set RCOD(1)="this changes the financial or identification information"
 set CNT=CNT.get()
 set TOTTRI=TOTTRI.get()
	quit

VRPOST	// Report post-processor

 type String PGM,%NOCLOSE,%BLK
 type public String IO,MYQRY,MYQRY2,RID,RCODE,REPDI,SIO
 type public Number vcrt
 type public Boolean VFMQ
 type Number PN

 do CLOSE^SCAIO
 set SIO=IO
 set IO=REPDI
 if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
 set RID="YER434" do ^URID

 if PGM.length() set %BLK="/,"_REPDI_","_RCODE_","_MYQRY_","_MYQRY2 do ^@PGM
 set IO=SIO
 set %NOCLOSE=""
	quit

	// Pre/post-processor library code

VLIB1	// User library - INSTAD
	/*
	---- Revision History------------------------------------------------
	08/22/05 - SWARNALATHAP - CR 16781
	Converted to PSL
	---------------------------------------------------------------------
	*/
	type Public String AD(),NAME
	
	type Number I,J
	type String TEMP,CCITY
	
	type RecordCUVAR cuvar = Db.getRecord("CUVAR")
	set NAME = cuvar.cname
	
	set AD(1) = cuvar.cad1
	set AD(2) = cuvar.cad2
	set AD(3) = cuvar.cad3
	set CCITY = cuvar.ccity
	if CCITY.length() > 15 set CCITY = CCITY.extract(1,15)
	
	set AD(4) = CCITY_", "_cuvar.cstate_"  "_cuvar.czip
	set AD(5) = cuvar.telephone
	set AD(6) = cuvar.poinst
	
	for I=6:-1:2 do {
		set TEMP = $$RTB^%ZFUNC(AD(I-1))
		if TEMP = "" for J=I-1:1:5 set AD(J) = AD(J+1),AD(J+1) = ""
	}
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %CRCD,ACN,AD(),AMENDTXT,CAD(),CNT,CO,CONAM,CRCD,DUMMY,IO,IOSL,MYQRY,MYQRY2,NAME,RC,RCOD,RCODE,REPDI,RID,SIO,T5RECTYP,TAXID,TMP(),TOTTRI,TRI,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),YEAR,ZIPYADJ,acn,boo,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$E(DUMMY,1,1) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM4	// Summary
	type public String %CRCD,ACN,AD(),AMENDTXT,CAD(),CNT,CO,CONAM,CRCD,DUMMY,I,IO,IOSL,MYQRY,MYQRY2,NAME,RC,RCOD,RCODE,REPDI,RID,SIO,T5RECTYP,TAXID,TMP(),TOTTRI,TRI,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),YEAR,ZIPYADJ,acn,boo,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4

	if 'VT(4) quit
	if VLC+18>IOSL do VHDG0 quit:VFMQ

	do VP2 quit:VFMQ!verror.get()  set V=$E(AMENDTXT,1,7) set VL="                               "_V
	do VOM
	set VL="" do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(TRI,",",2),15) do VP4 quit:VFMQ!verror.get()  set VL="                                             "_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="     "_$E(YEAR,1,25)
	set VL=VL_$J("",54-VL.length())_$J(vc1,1)
	set VL=VL_$J("",59-VL.length())_$E(vc5,1,11)
	do VP5 quit:VFMQ!verror.get()  set V=$J(T5RECTYP,1)
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="" do VOM
	do VP6 quit:VFMQ!verror.get()  set V=$E(CAD(0),1,33) set VL="     "_V
	do VOM
	set VL="     "_$E(CAD(1),1,33)
	do VOM
	set VL="     "_$E(CAD(2),1,33)
	set VL=VL_$J("",41-VL.length())_$E($G(CONAM),1,32)
	do VOM
	set VL="     "_$E(CAD(3),1,33)
	set VL=VL_$J("",41-VL.length())_$E(AD(1),1,32)
	do VOM
	set VL="     "_$E(CAD(4),1,33)
	set VL=VL_$J("",41-VL.length())_$E(AD(2),1,32)
	do VOM
	set VL="     "_$E(CAD(5),1,11)
	set VL=VL_$J("",41-VL.length())_$E(AD(3),1,32)
	do VOM
	set VL="" do VOM
	set V=vc3,VO=V set V=$J(V,12) do VP7 quit:VFMQ!verror.get()  set VL="                                            "_V
	do VOM
	set VL="" do VOM
	quit

VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %CRCD,ACN,AD(),AMENDTXT,CAD(),CNT,CO,CONAM,CRCD,DUMMY,IO,MYQRY,MYQRY2,NAME,RC,RCODE,REPDI,RID,SIO,T5RECTYP,TAXID,TMP(),TOTTRI,TRI,YEAR,ZIPYADJ,acn,boo,vc1,vc3,vc5,vcrt,vovc1,vovc2,vovc3,vovc4
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="      "_"Total Number of Notices:"
	set VL=VL_$J("",35-VL.length())_$J(CNT,8)
	do VOM
	set VL="    "_"Total Reportable Interest:"
	set VL=VL_$J("",31-VL.length())_$J($FN(TOTTRI,",",2),12)
	do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %CRCD,%MSKD,%TIM,ACN,AD(),AMENDTXT,CAD(),CNT,CO,CONAM,CRCD,DUMMY,IO,MYQRY,MYQRY2,NAME,RC,RCOD,RCODE,REPDI,RID,RN,SIO,T5RECTYP,TAXID,TMP(),TOTTRI,TRI,VL,YEAR,ZIPYADJ,acn,boo,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	use IO if 'VLC,'vcrt set $Y=1
	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DUMMY

	type public String vc6
 type public String DUMMY
 type public Number TRI

 set DUMMY=""
 // Total the reportable interest for each customer.
 
 set TRI=TRI.get()+vc6
	quit

VP2	// Column pre-processor - Variable: AMENDTXT

	type public String vc1
 // If Report Code = 1 print "AMENDED" 
 type Number RC
 type public String AMENDTXT

 set RC=vc1
 if RC=1 set AMENDTXT="AMENDED"
 else  set AMENDTXT=""
	quit

VP3	// Column pre-processor - Variable: TRI

 type public Number TRI,CNT,TOTTRI

 // Set the total reportable interest.
 set TRI=TRI.get()
 
 // Count the number of forms being printed.
 set CNT=CNT.get()+1 
 
 // Keep a grand total amount for the reportable interest.
 set TOTTRI=TOTTRI.get()+TRI
	quit

VP4	// Column post-processor - Variable: TRI

 type public Number TRI

 // Reset the total reportable interest for the next customer.
 set TRI=0
	quit

VP5	// Column pre-processor - Variable: T5RECTYP

	type public String vc7
 /* retrieve the recipient type from the latest account, since all of the
  accounts for the customer should have the same recipient type.*/

 type Number RELC
 type public Number T5RECTYP
 
 set RELC=vc7
 type RecordRELCODE1 relcode1=Db.getRecord("RELCODE1","REL=:RELC")

 set T5RECTYP=relcode1.t5rectype
	quit

VP6	// Column pre-processor - Variable: CAD(0)

	type public String vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16
 type public String CAD(),COUNTRY
 type Number I
 type public Number ACN

 for I=0:1:8 set CAD(I)=""
 //type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")


 //  Set up the address.
 // Set up the CAD array with the primary owners address.

 set CAD(2)=vc8
 set CAD(3)=vc9
 set CAD(4)=vc10

 // Find the first line with no address data, starting from CAD(6) up.
 for I=4:-1:1 quit:CAD(I).length()

 // Add the City and State line of the address.
 set CAD(I+1)=vc11_", "_vc12
  
 // Set CAD(5) equal to the zip code.
 set CAD(5)=vc13
 
 // find title for the primary owner
 if ACN>0 set CAD(0)=vc14

 // find the primary owners country code.
 set COUNTRY=vc15
 
 // Restrict the address lines to 33 positions.
 for I=0:1:4 set CAD(I)=CAD(I).extract(1,33)
 
 // if primary customer is non-personal set 2nd name line to null
 if vc16'=1 quit
 else  set CAD(1)=""
	quit

VP7	// Column post-processor - [SYSDEV,T5INF]ACN

 type public Number T5RECTYP
 
 set T5RECTYP=T5RECTYP.get()
	quit
