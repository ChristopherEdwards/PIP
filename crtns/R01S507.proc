R01S507	// SCA585 - Legal Lending Limits Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:51 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1

	set RID="SCA585"
	set RN="Legal Lending Limits Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|20||[LIMLEGAL]HHACN|[LIMLEGAL]HHACN:DISTINCT:NOVAL||do LEGPOS^LIMCDI||T|Household Customer|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,ACN,AVLCOMH,AVLOUTH,CONAM,HHACN,LMTAMT,NAM,PCTCAP,RID,RN,TOTCAP,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA585",RN="Legal Lending Limits Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA585","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Household Customer"_"|VIN1|"_VIN1.get()

		set VWHERE="LIMLEGAL.HHACN=:VIN1 AND LIMLEGAL.JOB=:%ProcessID"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Legal Lending Limits Summary"
		set VBNRINFO("PGM")="R01S507"
		set VBNRINFO("RID")="SCA585"
		set VBNRINFO("TABLES")="LIMLEGAL,CIF,LIMLEGAL2"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LIMLEGAL]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LIMLEGAL]HHACN"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LIMLEGAL]ACN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LIMLEGAL]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LIMLEGAL.JOB,LIMLEGAL.HHACN,LIMLEGAL.ACN,LIMLEGAL.CID,LIMLEGAL.COMEXP,LIMLEGAL.OUTEXP,CIF.NAM","LIMLEGAL,CIF,LIMLEGAL2","LIMLEGAL.HHACN=:VIN1 AND LIMLEGAL.JOB=:%ProcessID","LIMLEGAL.JOB,LIMLEGAL.HHACN,LIMLEGAL.ACN,LIMLEGAL.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// LIMLEGAL.JOB
	set vc2=V.piece($C(9),2)			// LIMLEGAL.HHACN
	set vc3=V.piece($C(9),3)			// LIMLEGAL.ACN
	set vc4=V.piece($C(9),4)			// LIMLEGAL.CID
	set vc5=V.piece($C(9),5)			// LIMLEGAL.COMEXP
	set vc6=V.piece($C(9),6)			// LIMLEGAL.OUTEXP
	set vc7=V.piece($C(9),7)			// CIF.NAM
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type Public Number HHACN,VIN1
	type Number CID,MACN

	set HHACN=VIN1.get()
	set (CID,MACN)=0

	do Db.delete("LIMLEGAL","JOB=:%ProcessID")
	do Db.delete("LIMLEGAL2","JOB=:%ProcessID")

	type RecordCIF cif=Db.getRecord("CIF","ACN=:HHACN",1)

	if cif.nam="" quit
	
	type RecordLIMLEGAL2 limlegal2=Db.getRecord("LIMLEGAL2","JOB=:%ProcessID,HHACN=:HHACN",1)
	set limlegal2.job=%ProcessID
	set limlegal2.hhacn=HHACN
	set limlegal2.nam=cif.nam
	do limlegal2.save()

	type ResultSet rscifhh0=Db.select("MACN","CIFHH0","ACN=:HHACN")
	while rscifhh0.next() do {

		set MACN=rscifhh0.getCol("MACN")

		type ResultSet rsrelcif=Db.select("CID","RELCIF","ACN=:MACN")
		while rsrelcif.next() do {

			set CID=rsrelcif.getCol("CID")

			do setcid(MACN,HHACN,CID)
			}
		do exp(MACN,HHACN,CID)
		}

	type ResultSet rsrelcif=Db.select("CID","RELCIF","ACN=:HHACN")
	while rsrelcif.next() do {

		set CID=rsrelcif.getCol("CID")

		do setcid(HHACN,HHACN,CID)
		}
	do exp(HHACN,HHACN,CID)
	
	quit


setcid(Number ACN,
       Number HHACN,
       Number CID)

	type String TOT

	type RecordLIMLEGAL limlegal=Class.new("RecordLIMLEGAL")
	
	set limlegal.job=%ProcessID
	set limlegal.hhacn=HHACN
	set limlegal.acn=ACN
	set limlegal.cid=CID
	
	type RecordACN acn=Db.getRecord("ACN","CID",1)
	
	if ACN'=acn.acn quit
	
	if acn.cls="D" set TOT=$$DEPOSIT^PROCLIM(CID,0)
	if acn.cls="L" set TOT=$$LOAN^PROCLIM(CID,0)
	
	if 'TOT,'TOT.piece("|",2) quit

	set limlegal.comexp=TOT.get().piece("|",1)
	set limlegal.outexp=TOT.get().piece("|",2)
	
	do limlegal.bypassSave()
	
	quit


exp(Number ACN,
    Number HHACN,
    Number CID)

	type String INTPROD,RECID,SYS,TOT

	set (INTPROD,RECID,SYS)=""

	type ResultSet rsexpos=Db.select("SYS,INTPROD,RECID","EXPOS","ACN=:ACN")
	while rsexpos.next() do {

		set SYS=rsexpos.getCol("SYS")
		set INTPROD=rsexpos.getCol("INTPROD")
		set RECID=rsexpos.getCol("RECID")

		type RecordLIMLEGAL limlegal=Class.new("RecordLIMLEGAL")
		
		set limlegal.job=%ProcessID
		set limlegal.hhacn=HHACN
		set limlegal.acn=ACN
		set limlegal.cid=CID
		
		set TOT=$$EXPREC^PROCLIM(ACN,SYS,INTPROD,RECID)
		if 'TOT,'TOT.piece("|",2) quit

		set limlegal.comexp=TOT.get().piece("|",1)
		set limlegal.outexp=TOT.get().piece("|",2)		

		do limlegal.bypassSave()
		}
		
	quit


VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc5,vc6
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc5			// @TOT([LIMLEGAL]COMEXP)
	set VT(4,2,1)=VT(4,2,1)+vc6			// @TOT([LIMLEGAL]OUTEXP)
	quit

VSUM3	// Summary
	type public String %TIM,ACN,AVLCOMH,AVLOUTH,HHACN,I,IOSL,LMTAMT,NAM,PCTCAP,TOTCAP,V,VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="===================================================================================================================================="
	do VOM
	set VL="                "_"Total Household Exposure: "
	set V=VT(3,1,1)					// @TOT([LIMLEGAL]COMEXP,)
	set VL=VL_$J("",49-VL.length())_$J($FN(V,",",2),15)
	do VP1 quit:VFMQ!verror.get()  set V=$J($FN(AVLCOMH,",",2),20)
	set VL=VL_$J("",67-VL.length())_V
	set V=VT(3,2,1)					// @TOT([LIMLEGAL]OUTEXP,)
	set VL=VL_$J("",90-VL.length())_$J($FN(V,",",2),15)
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(AVLOUTH,",",2),20)
	set VL=VL_$J("",108-VL.length())_V
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,ACN,AVLCOMH,AVLOUTH,HHACN,I,IOSL,LMTAMT,NAM,PCTCAP,TOTCAP,V,VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL=" "_$J(vc3,12)
	set VL=VL_$J("",16-VL.length())_$E(vc7,1,30)
	set V=VT(4,1,1)					// @TOT([LIMLEGAL]COMEXP,)
	set VL=VL_$J("",49-VL.length())_$J($FN(V,",",2),15)
	set V=VT(4,2,1)					// @TOT([LIMLEGAL]OUTEXP,)
	set VL=VL_$J("",90-VL.length())_$J($FN(V,",",2),15)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ACN,AVLCOMH,AVLOUTH,CONAM,HHACN,LMTAMT,NAM,PCTCAP,RID,RN,TOTCAP,VIN1,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Limit Percentage of Capital: "
	do VP3 quit:VFMQ!verror.get()  set V=$J(PCTCAP,5,2)
	set VL=VL_$J("",29-VL.length())_V
	set VL=VL_$J("",41-VL.length())_"Total Capital: "
	do VP4 quit:VFMQ!verror.get()  set V=$J($FN(TOTCAP,",",2),15)
	set VL=VL_$J("",56-VL.length())_V
	set VL=VL_$J("",78-VL.length())_"Limit Amount: "
	do VP5 quit:VFMQ!verror.get()  set V=$J($FN(LMTAMT,",",2),15)
	set VL=VL_$J("",92-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                                                       "_"------ Committed Exposure ------         ----- Outstanding Exposure -----"
	do VOM
	set VL="     "_"Customer  Name                                        Total              Available             Total              Available"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: AVLCOMH

	type Public Number AVLCOMH,HHACN
	set AVLCOMH=$$AVLCOMH^LIMCDI(HHACN)
	quit

VP2	// Column pre-processor - Variable: AVLOUTH


	type Public Number AVLOUTH,HHACN
	set AVLOUTH=$$AVLOUTH^LIMCDI(HHACN)
	quit

VP3	// Column pre-processor - Variable: PCTCAP

	type Public Number PCTCAP

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set PCTCAP=cuvar.pctcap
	quit

VP4	// Column pre-processor - Variable: TOTCAP

	type Public Number TOTCAP

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set TOTCAP=cuvar.totcap
	quit

VP5	// Column pre-processor - Variable: LMTAMT

	type Public Number LMTAMT

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set LMTAMT=(cuvar.totcap*cuvar.pctcap)/100
	quit
