R01S279	// SCA269 - Document Control Batch Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:55 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD
	type String BINOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DETAIL=1
	type Date VIN2=TJD.get()
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8=1

	set RID="SCA269"
	set RN="Document Control Batch Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DETAIL")="|1|||||||L|Include Detail|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|10||[TBINDTL]TJD|[TBINDTL]TJD:DISTINCT:NOVAL||S ZTJD=$$DAT^%ZM(X)||D|System Processing Date|||||"
	set %TAB("VIN3")="|255||[TBINDTL]BRCD|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch Code|||||"
	set %TAB("VIN4")="|255||[TBINDTL]UID|[SCAU]:NOVAL||D EXT^DBSQRY||T|User ID|||||"
	set %TAB("VIN5")="|255||[TBINDTL]BIN|[UTBLBIN]:NOVAL||D EXT^DBSQRY||T|Bin|||||"
	set %TAB("VIN6")="|255||[TBINDTL]BINSEQ|[TBINDTL]BINSEQ:DISTINCT:NOVAL||D EXT^DBSQRY||T|Bin Sequence|||||"
	set %TAB("VIN7")="|255||[TBIN]BATCH|||D EXT^DBSQRY||T|Batch|||||"
	set %TAB("VIN8")="|255||[TBIN]STATUS|||D EXT^DBSQRY||T|Status|||||"

	set %READ="IO/REQ,DETAIL#1,VIN2#1,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD
	type public String BINOPT()
	type public Date VIN2
	type public Number DETAIL
	type public String VIN3,VIN4,VIN5,VIN6,VIN7,VIN8
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BIN,BINSEQ,BRCD,CONAM,DESC,RID,RN,TOTAMT,TOTCNT,UID,VL,VLOF,VRF(),VSTATS(),fTBIN,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA269",RN="Document Control Batch Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA269","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[TBINDTL]TSEQ#3#6,[TTX]ETC#13#12,[TTX]BSEAMT#33#15"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[TBINDTL]TJD = "_$$addqts^DBSRWUTL(VIN2),SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[TBINDTL]BRCD "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[TBINDTL]UID "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[TBINDTL]BIN "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[TBINDTL]BINSEQ "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[TBIN]BATCH "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[TBIN]STATUS "_VIN8,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("TBINDTL,TBIN,TTX") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"TBINDTL.TJD,TBINDTL.BRCD,TBINDTL.UID,TBINDTL.BIN,T"
	set VSELECT=VSELECT_"BINDTL.BINSEQ,TBINDTL.TSEQ,TBIN.BATCH,TBIN.STATUS,"
	set VSELECT=VSELECT_"TBIN.CUTDATE,TBIN.CUTIME,TBIN.BEGTRC,TBIN.TOTCNT,T"
	set VSELECT=VSELECT_"BIN.ENDTRC,TBIN.TOTAMT,TTX.ETC,TTX.BSEAMT"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"TBINDTL,TBIN,TTX",VWHERE,"TBINDTL.TJD,TBINDTL.BRCD,TBINDTL.UID,TBINDTL.BIN,TBINDTL.BINSEQ,TBINDTL.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16
	set vc1=V.piece($C(9),1)			// TBINDTL.TJD
	set vc2=V.piece($C(9),2)			// TBINDTL.BRCD
	set vc3=V.piece($C(9),3)			// TBINDTL.UID
	set vc4=V.piece($C(9),4)			// TBINDTL.BIN
	set vc5=V.piece($C(9),5)			// TBINDTL.BINSEQ
	set vc6=V.piece($C(9),6)			// TBINDTL.TSEQ
	set vc7=V.piece($C(9),7)			// TBIN.BATCH
	set vc8=V.piece($C(9),8)			// TBIN.STATUS
	set vc9=V.piece($C(9),9)			// TBIN.CUTDATE
	set vc10=V.piece($C(9),10)			// TBIN.CUTIME
	set vc11=V.piece($C(9),11)			// TBIN.BEGTRC
	set vc12=V.piece($C(9),12)			// TBIN.TOTCNT
	set vc13=V.piece($C(9),13)			// TBIN.ENDTRC
	set vc14=V.piece($C(9),14)			// TBIN.TOTAMT
	set vc15=V.piece($C(9),15)			// TTX.ETC
	set vc16=V.piece($C(9),16)			// TTX.BSEAMT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public String BRCD,UID,BIN,DESC,BINSEQ,fTBIN
 
 set BRCD=""
 set UID=""
 set BIN=""
 set DESC=""
 set BINSEQ=""
 set fTBIN=""
	quit

VPREBQ	// Pre-processor (before query)

 type public String BINOPT()
 set BINOPT(0)="Open"
 set BINOPT(1)="Cut"
 set BINOPT(2)="Void"

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG6 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VHDG6	// Group Header
	type public String %MSKD,%TIM,BIN,BINOPT(),BINSEQ,BRCD,CONAM,DESC,ER,IOSL,RID,RN,TJD,TOTAMT,TOTCNT,UID,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,fTBIN,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:vh(6)  set vh(6)=1				// Print flag
	if VLC+14>IOSL do VHDG0 quit:VFMQ

	set VL="                            "_"Branch:"
	set VL=VL_$J("",36-VL.length())_$E(vc2,1,6)
	do VOM
	set VL="                           "_"User ID: "
	set VL=VL_$J("",36-VL.length())_$E(vc3,1,20)
	do VOM
	set VL="" do VOM
	set VL="     "_"Bin: "
	set VL=VL_$J("",10-VL.length())_$E(vc4,1,4)
	set VL=VL_$J("",15-VL.length())_$E(DESC,1,40)
	do VOM
	set VL=" "_"Bin Seq:"
	set VL=VL_$J("",10-VL.length())_$E(vc5,1,2)
	set VL=VL_$J("",54-VL.length())_"Batch: "
	set VL=VL_$J("",61-VL.length())_$E(vc7,1,2)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_"Status: "
	set VL=VL_$J("",10-VL.length())_$E(vc8,1,8)
	set VL=VL_$J("",50-VL.length())_"Batch Cut:"
	set VL=VL_$J("",61-VL.length())_$J($$DAT^%ZM(vc9),10)
	set VL=VL_$J("",72-VL.length())_$J($$TIM^%ZM(vc10),10)
	do VOM
	set VL=" "_"Beg Seq: "
	set VL=VL_$J("",10-VL.length())_$E(vc11,1,6)
	set VL=VL_$J("",48-VL.length())_"Total Count:"
	set VL=VL_$J("",61-VL.length())_$E(vc12,1,4)
	do VOM
	set VL=" "_"End Seq: "
	set VL=VL_$J("",10-VL.length())_$E(vc13,1,6)
	set VL=VL_$J("",47-VL.length())_"Total Amount:"
	set VL=VL_$J("",61-VL.length())_$FN(vc14,",",2)_$J("",12-$L($FN(vc14,",",2)))
	do VOM
	set VL="" do VOM
	set VL="======================================================================"
	do VOM
	set VL="Tran Seq    Transaction Code          Amount"
	do VOM
	set VL="======================================================================"
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,BIN,BINOPT(),BINSEQ,BRCD,DESC,IOSL,TJD,TOTAMT,TOTCNT,UID,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),fTBIN,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(6)=0 do VHDG6 quit:VFMQ

	set V=vc6,VO=V set V=$J(V,6) do VP1 quit:VFMQ!verror.get()  set VL="  "_V
	set VL=VL_$J("",12-VL.length())_$E(vc15,1,12)
	set VL=VL_$J("",32-VL.length())_$S(vc16="":"",1:$J(vc16,0,2))
	do VOM
	quit

VSUM6	// Summary
	type public String %TIM,BIN,BINOPT(),BINSEQ,BRCD,DESC,I,IOSL,TJD,TOTAMT,TOTCNT,UID,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),fTBIN,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(6)=0 do VHDG6 quit:VFMQ

	set VL="                                "_"------------"
	do VOM
	set VL=$J(vc12,4)
	set VL=VL_$J("",5-VL.length())_"Items"
	set VL=VL_$J("",32-VL.length())_$S(vc14="":"",1:$J(vc14,0,2))
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BIN,BINOPT(),BINSEQ,BRCD,CONAM,DESC,RID,RN,TJD,TOTAMT,TOTCNT,UID,VL,fTBIN,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,40)
	set VL=VL_$J("",48-VL.length())_"Run Date:"
	set VL=VL_$J("",58-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",50-VL.length())_"System:"
	set VL=VL_$J("",58-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,TBINDTL]TSEQ

 type String ZNHDR
 set ZNHDR=1
	quit
