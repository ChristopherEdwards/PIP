UTLADDR(LOM,OF,MAXL,MAXT,FID,KEY,RPASEQ,BENSEQ) //Public; Address Utility
	/*
	;Copyright(c)1999 Sanchez Computer Associates, Inc.  All Rights

	Address Utility to return a formatted array from ADDR.
        
	KEYWORDS: CIF
        
	ARGUMENTS:

		. LOM     Legal or Mailing indicator.          /TYP=L/NOREQ
                          0 = Legal Address
                          1 = Mailing Address
        
		. OF      Output array.                        /TYP=T/NOREQ
                          If none is specified, the default is ADDR.
			  Only CAD,MADR,NM,ADDR,AD,CADDR,CADD,MADDR
			  can be specified as output array.

		. MAXL    Maximum number of lines.             /TYP=N/NOREQ
                          This determines the size of the array to be returned.
         		  If none is specified, the default is 10.  A completed
                          array will always be returned, shuffled up
                          if necessary and blank filled from the bottom.
	
		. MAXT    Maximum number of title lines        /TYP=N/NOREQ
                          This number is included in MAXL.
                          If none is specified, the default is 0.
        
		. FID     File ID                              /TYP=T/REQ
                          Either ACN or CIF - This determines what
                          file will be used to get the title/customer name.
	
		. KEY     File Key                             /TYP=N/REQ
                          Either CID or ACN, dependent on the FID. If
                          FID(KEY is invalid, ER=1 and a blank array
                          will be returned .
	
		. RPASEQ  IRATYPE File second key              /TYP=N/REQ
                          Only if FID equal to IRATYPE then RPASEQ will be
                          returned .
		. BENSEQ  IRABEN File third key              /TYP=N/REQ

	RETURNS:
		. OF       Output array                         /TYP=T
        
		. ER       Error flag                           /TYP=L
        
	EXAMPLE:
               D ^UTLADDR(LOM,OF,MAXL,MAXT,FID,KEY,RPASEQ,BENSEQ)

	---- Revision History ------------------------------------------------
	
	12/30/03 - CARROLLJ - CR7658
		Added #ACCEPT prior to xecute command.

	11/01/02 - MENYAJ - 50651:2
		Set variable ZAD to null in the INIT section to prevent
 		potential undefined errors.

	01/14/02 - APPLEYARDM - 48196
		Modified section CSZ: modified select statement to only
		retrieve DESC from table STBLCNTRY1 when the country is not
		US or Canada. POSTVALID2 and POSTVALID2 data are not needed
		or used in this context and have been removed from the
		select statement. This prevents the variable STATE from
		being set to a string containing multiple delimiting
		characters and/or extraneous data.

        06/29/01 - VETSENM - 45769
                Section CSZ has been changed to display only the Country
                name at the bottom line of the foreign addresses.

	05/14/01 - SANTOSL - 45110
		Modified the CSZ Section to set CNTRY equal to the first
		piece of ^STBL("CNTRY",CNTRY) to correctly format
		address when country is printed. Removed code that
		concatenate ZIP if the CONTRY SUPPRESS CODE SET TO
		"N" from @CUV001 to avoid displaying zip code twice.

	09/19/00 - ANTONOVS - 34101
		Add a description for BENSEQ parameter

	07/31/00 - BURNSM - 41021
		Changed CSZ to accomodate the new length of CITY.  CITY is
                now a length of 40, so CSZ extracts the first 25 characters
                of CITY instead of the entire length.

	08/6/99 - REEDD - 31426
		Changed the code to add a new beneficiary sequence parameter.

	02/19/99 - ROYTENBERGG - 31424
		Converted routine UTLADDR into procedure UTLADDR in PSL.
		Added a new logic - mailing address for Retirement
                Plan accounts.
	----------------------------------------------------------------------
	*/

START   //
	new ADFLG,CFLG,CITY,CNT,CNTRY,COMAND,CSZ,CTRY,DCNTRY
 
	new FUNC,I,J,MF,N,PRIO,STATE,TITLE,X,ZAD,ZIP
	set ER=0 set ADFLG=""
	do INIT quit:ER
	if MAXT do TITLE quit:ER
	if LOM'=""!ADFLG do ADR quit:ER
	do SET
	quit   

INIT    // Invalid file name


	if '$D(DCNTRY) set DCNTRY=Db.getOneRow("CNTRY","CUVAR","")
	if '$D(CFLG) set CFLG=Db.getOneRow("CATSUP","CUVAR","")
	if $G(FID)'="ACN"&($G(FID)'="CIF")&($G(FID)'="IRATYPE")&($G(FID)'="IRABEN") set ER=1 set RM=$$^MSG("1337") quit 
	// No key
	if $G(KEY)="" set ER=1 set RM=$$^MSG("1953") quit
	if $G(FID)="IRATYPE"&($G(RPASEQ)="") set ER=1 set RM=$$^MSG("1953") quit
	if $G(FID)="IRABEN"&($G(RPASEQ)="")&($G(BENSEQ)="") set ER=1 set RM=$$^MSG("1953") quit  
	if $G(OF)="" set OF="ADDR"
	if $G(MAXL)="" set MAXL=10
	if $G(MAXT)="" set MAXT=0
	set CNT=0
	set LOM=$G(LOM)

	// 50651:2 - MENYAJ
	set ZAD=""
 	
	if LOM'="" quit
        
	if FID="ACN" set MF=Db.getOneRow("MF","DEP","KEY",124)
        
	if FID="CIF" set MF=Db.getOneRow("MF","CIF","KEY",124)
        
	if FID="IRATYPE" set MF=Db.getOneRow("MF","IRATYPE","KEY,RPASEQ",124)

	if FID="IRABEN" set MF=1
 
	if MF="" set FUNC="$$ADD0^MFADDR"
	else  do {
		set FUNC=Db.getOneRow("FUNCALL","UTBLMF","MF")
		if FUNC="" set FUNC="$$ADD0^MFADDR"
		}
 
	set COMMAND="S ADFLG="_FUNC_"(FID,KEY)"
	#ACCEPT DATE=12/30/03;PGM=John Carroll
	xecute COMMAND
	quit

TITLE   // Set up local array PRIO, to be used later.
	
	if FID="IRATYPE" set TITLE=Db.getOneRow("NAM","CIF","KEY",124)
	
	if FID="CIF" set TITLE=Db.getOneRow("NAM,XNAME","CIF","KEY",124)

	if FID="ACN" set TITLE=Db.getOneRow("TITLE1,TITLE2,TITLE3,TITLE4","ACN","KEY",124)
 
	if FID="IRABEN" set TITLE=Db.getOneRow("BENNAME","IRABEN","KEY,RPASEQ,BENSEQ",124)

	I TITLE="" set ER=1,RM=$$^MSG("1494") quit 
	F I=1:1:MAXT if $P(TITLE,"|",I)'="" set PRIO(I)=$P(TITLE,"|",I) set CNT=CNT+1	
	
	quit

ADR     // Set up PRIO array with Address info in priority order.
	
	if LOM=0 do {
		if FID="CIF" set ZAD=Db.getOneRow("PCITY,PSTATE,PZIP,PCNTRY,PAD1,PAD2,PAD3,PAD4,PLOC","CIF","KEY",124)
		else  do {
			new x
			set x=Db.getOneRow("ACN","DEP","KEY",124)
			set ZAD=Db.getOneRow("PCITY,PSTATE,PZIP,PCNTRY,PAD1,PAD2,PAD3,PAD4,PLOC","CIF","x",124)
			}
		}
	if LOM=1 do {
		if FID="CIF" set ZAD=Db.getOneRow("MCITY,MSTATE,MZIP,MCNTRY,MAD1,MAD2,MAD3,MAD4,MLOC","CIF","KEY",124)
		else  if FID="IRATYPE" do {
			set ZAD=""
			set ZAD=Db.getOneRow("RPCITY,RPSTATE,RPZIP,RPCNTRY,RPMAD1,RPMAD2,RPMAD3","IRATYPE","KEY,RPASEQ",124)
			if $TR(ZAD,"|","")'="" set ZAD=Db.getOneRow("RPCITY,RPSTATE,RPZIP,RPCNTRY,RPMAD1,RPMAD2,RPMAD3","IRATYPE","KEY,RPASEQ",124)
			else  set ZAD=Db.getOneRow("MCITY,MSTATE,MZIP,MCNTRY,MAD1,MAD2,MAD3,MAD4,MLOC","CIF","KEY",124)
		}
		else  if FID="IRABEN" do {
			set ZAD=""
			set ZAD=Db.getOneRow("BENCITY,BENSTATE,BENZIP,BENCNTRY,BENMAD1,BENMAD2,BENMAD3","IRABEN","KEY,RPASEQ,BENSEQ",124)
		}
		else  set ZAD=Db.getOneRow("CITY,STATE,MZIP,CNTRY,AD1,AD2,AD3,AD4,LOC","ACNADDR","KEY",124)
		}
	if ZAD="" do {
		F I=1:1:MAXL S OF(I)=""
		// No address record to process
		set ER=1 set RM=$$^MSG("1893") quit    
		}
	F I=5:1:8 I $P(ZAD,"|",I)'="" S PRIO(I)=$P(ZAD,"|",I),CNT=CNT+1
		
	do CSZ
	
	quit
        

CSZ     // City state zip
	
	set CITY=$P(ZAD,"|",1)
	set STATE=$P(ZAD,"|",2)
	set ZIP=$P(ZAD,"|",3)
	set CTRY=$P(ZAD,"|",4)
	if $L(CTRY),'$D(CNTRY(CTRY)) set CNTRY(CTRY)=$P(Db.getOneRow("DESC,POSTVALID1,POSTVALID2","STBLCNTRY","CTRY",124),"|",1)   	// LJS 05/14/01
	if CTRY'="US",CTRY'="CA",STATE'="" set STATE=Db.getOneRow("DESC","STBLCNTRY1","CTRY,STATE",124)  //MCA 01/14/02
	set CSZ=$E(CITY,1,25)
	if CSZ'="",$L(STATE) set CSZ=CSZ_", "
	set CSZ=CSZ_STATE
	if CSZ'="" set CSZ=CSZ_"  "

        set CSZ=CSZ_ZIP
        if CSZ'="" set PRIO(9)=CSZ set CNT=CNT+1
        if $L(CTRY),CTRY'=DCNTRY!'CFLG set VPRIO=$S(CTRY="  ":"",1:CNTRY(CTRY)) set CNT=CNT+1  // LJS 05/08/01
        set PRIO(10)=$P($G(VPRIO),"|",1)	
	quit

SET 	// kill off PRIO array that's not needed

	if CNT>MAXL F I=4,3,2,8,7,6,10,9,5,1 if $D(PRIO(I)) kill PRIO(I) set CNT=CNT-1 quit:CNT=MAXL
	set X=""
	if $G(OF)="CAD" do {
		F I=1:1 set X=$O(PRIO(X)) quit:X=""  set CAD(I)=$G(PRIO(+X))
		// Setting Maximum number of lines according output array
		F J=I:1:MAXL set CAD(J)=""
		// Mail Flag is ~p1
		if LOM=""&('ADFLG) set CAD(I)=$$^MSG("5359",MF)
		}

	if $G(OF)="MADR" do {
		F I=1:1 set X=$O(PRIO(X)) quit:X=""  set MADR(I)=$G(PRIO(+X))
		// Setting Maximum number of lines according output array
		F J=I:1:MAXL set MADR(J)=""
		// Mail Flag is ~p1
		if LOM=""&('ADFLG) set MADR(I)=$$^MSG("5359",MF)
		}

	if $G(OF)="NM" do {
		F I=1:1 set X=$O(PRIO(X)) quit:X=""  set NM(I)=$G(PRIO(+X))
		// Setting Maximum number of lines according output array
		F J=I:1:MAXL set NM(J)=""
		// Mail Flag is ~p1
		if LOM=""&('ADFLG) set NM(I)=$$^MSG("5359",MF)
		}

	if $G(OF)="ADDR" do {
		F I=1:1 set X=$O(PRIO(X)) quit:X=""  set ADDR(I)=$G(PRIO(+X))
		// Setting Maximum number of lines according output array
		F J=I:1:MAXL set ADDR(J)=""
		// Mail Flag is ~p1
		if LOM=""&('ADFLG) set ADDR(I)=$$^MSG("5359",MF)
		}

	if $G(OF)="AD" do {
		F I=1:1 set X=$O(PRIO(X)) quit:X=""  set AD(I)=$G(PRIO(+X))
		// Setting Maximum number of lines according output array
		F J=I:1:MAXL set AD(J)=""
		// Mail Flag is ~p1
		if LOM=""&('ADFLG) set AD(I)=$$^MSG("5359",MF)
		}
	
	if $G(OF)="CADDR" do {
		F I=1:1 set X=$O(PRIO(X)) quit:X=""  set CADDR(I)=$G(PRIO(+X))
		// Setting Maximum number of lines according output array
		F J=I:1:MAXL set CADDR(J)=""
		// Mail Flag is ~p1
		if LOM=""&('ADFLG) set CADDR(I)=$$^MSG("5359",MF)
		}
	
	if $G(OF)="CADD" do {
		F I=1:1 set X=$O(PRIO(X)) quit:X=""  set CADD(I)=$G(PRIO(+X))
		// Setting Maximum number of lines according output array
		F J=I:1:MAXL set CADD(J)=""
		// Mail Flag is ~p1
		if LOM=""&('ADFLG) set CADD(I)=$$^MSG("5359",MF)
		}

	if $G(OF)="MADDR" do {
		F I=1:1 set X=$O(PRIO(X)) quit:X=""  set MADDR(I)=$G(PRIO(+X))
		// Setting Maximum number of lines according output array
		F J=I:1:MAXL set MADDR(J)=""
		// Mail Flag is ~p1
		if LOM=""&('ADFLG) set MADDR(I)=$$^MSG("5359",MF)
		}
	
        quit  
 #OPTION ResultClass ON
Public String vSIG()	quit "59886^43629^Sanchez SCM Administrator^9619"	// Signature - LTD^TIME^USER^SIZE
