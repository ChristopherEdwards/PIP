ZPDINIT		/*
	ORIG: SIGDAE - 05/24/2007
	DESC: Initial Profile-Direct setup utilities

	---- Comments --------------------------------------------------------

	---- Revision History ------------------------------------------------

	 05/08/2007 Ed Sigda
	 	Added additional logic to configure Profile-Direct.
	 	
	 04/14/2006 Ed Sigda - 
	 	Created new procedure to create Profile Direct users.
	*/

	// Create Profile Direct Users
	do DFTSCAU
	
	// Create entries for new tables used by Profile-Direct
	do USERTBL
	
	// Authorize context entries for SCA
	do CNTXT("SCA")
	
	// Authorize MRPCs for SCA
	do SCATBL5A("SCA")

	// PROFILE server routines (for 24x7 access)
	do UTBLRTNS
	
	// Create Default UTBLOFFER* entries
	do OFFER
	
	// Create Default EFT Types for Profile-Direct
	do EFTTYPE
	
	// Create Default PD Teller Editors
	do UTBLTRN
	quit


OFFER
	/*
	 Create Default EFT Types for Profile-Direct
	*/

	type String OFFER()
	type Number CHANID,PTYPE

	type ResultSet rs=Db.select("CHANID","UTBLOFFER")
	if 'rs.isEmpty() quit

	write !!,"Create Default UTBLOFFER* Entries"

	set OFFER("OFFER",1,300)=""
	set OFFER("OFFER",2,300)=""
        set OFFER("OFFER",2,500)=""
        set OFFER("OFFER",4,300)=""
        set OFFER("OFFER",4,500)=""
        
	set OFFER("OFFERREL",1,"A",300)=""
	set OFFER("OFFERREL",1,"B",300)=""
	set OFFER("OFFERREL",2,1,500)=""
	set OFFER("OFFERREL",2,2,500)=""
	set OFFER("OFFERREL",2,"A",300)=""
	set OFFER("OFFERREL",2,"B",300)=""

	set OFFER("OFFERCTYP",2,1,1,0)=""
	set OFFER("OFFERCTYP",2,2,1,0)=""
	set OFFER("OFFERCTYP",2,2,2,0)=""
	set OFFER("OFFERCTYP",2,"A",1,0)=""
        set OFFER("OFFERCTYP",2,"A",1,1)=""

	write !,"Create Default UTBLOFFER Entries"
	set (CHANID,PTYPE)=""
	for  set CHANID=OFFER("OFFER",CHANID).order() quit:CHANID=""  do {
		for  set PTYPE=OFFER("OFFER",CHANID,PTYPE).order() quit:PTYPE=""  do {
			if 'Db.isDefined("PRODCTL","TYPE=:PTYPE") quit
			type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:PTYPE")
			
			type RecordUTBLOFFER offer=Class.new("RecordUTBLOFFER")
			set offer.chanid=CHANID
			set offer.type=PTYPE
			set offer.proddesc=prodctl.des
			set offer.sdate=%SystemDate-100
			set offer.edate=99999
			set offer.url="#"
			set offer.rateflg=0
			set offer.dval=1
			set offer.cm=1
			set offer.daname=""
			set offer.dr=1
			set offer.cr=1
			do offer.bypassSave()
		}
	}
	
	write !,"Create Default UTBLOFFERREL Entries"
	set (CHANID,REL,PTYPE)=""
	for  set CHANID=OFFER("OFFERREL",CHANID).order() quit:CHANID=""  do {
		for  set REL=OFFER("OFFERREL",CHANID,REL).order() quit:REL=""  do {
			for  set PTYPE=OFFER("OFFERREL",CHANID,REL,PTYPE).order() quit:PTYPE=""  do {
				if 'Db.isDefined("PRODCTL","TYPE=:PTYPE") quit
				type RecordUTBLOFFERREL orel=Class.new("RecordUTBLOFFERREL")
				set orel.chanid=CHANID
				set orel.rel=REL
				set orel.type=PTYPE
				do orel.bypassSave()
			}
		}
	}

	write !,"Create Default UTBLOFFERCTYP Entries"
	set (CHANID,REL,ROLE,CTYP)=""
	for  set CHANID=OFFER("OFFERCTYP",CHANID).order() quit:CHANID=""  do {
		for  set REL=OFFER("OFFERCTYP",CHANID,REL).order() quit:REL=""  do {
			for  set ROLE=OFFER("OFFERCTYP",CHANID,REL,ROLE).order() quit:ROLE=""  do {
				for  set CTYP=OFFER("OFFERCTYP",CHANID,REL,ROLE,CTYP).order() quit:CTYP=""  do {
					type RecordUTBLOFFERCTYP octyp=Class.new("RecordUTBLOFFERCTYP")
					set octyp.chanid=CHANID
					set octyp.rel=REL
					set octyp.role=ROLE
					set octyp.ctyp=CTYP
					do octyp.bypassSave()
				}
			}
		}
	}

	quit
	

EFTTYPE
	/*
	 Create Default EFT Types
	 
	 The actual values used by Profile-Direct are defined in ApplicationResources.java:
	 	public static final String EFTTYPE_IC_PO = "WEBPO";
		public static final String EFTTYPE_IC_SPO = "WEBSPO";
		public static final String EFTTYPE_CO = "WEBCO";
		public static final String EFTTYPE_PO = "WEBPO";
		public static final String EFTTYPE_SCO = "WEBSCO";
		public static final String EFTTYPE_SPO = "WEBSPO";
	 
	*/
	write !!,"Begin EFT Types"

	do COPYEFT("PO","WEBICPO","Web Intra Customer Payment Order")
	do COPYEFT("SPO","WEBICSPO","Web Intra Customer Standing Payment Order")
	do COPYEFT("PO","WEBPO","Web Payment Order")
	do COPYEFT("SPO","WEBSPO","Web Standing Payment Order")
	do COPYEFT("CO","WEBCO","Web Collection Order")
	do COPYEFT("SCO","WEBSCO","Web Standing Collection Order")
	quit

	
COPYEFT(OLDTYPE,NEWTYPE,DES)
	/*
	 Copy Existing EFT type
	*/

	type RecordCTBLEFTTYPE oeft,neft
	
	if Db.isDefined("CTBLEFTTYPE","KEY=:NEWTYPE") quit
	
	set oeft=Db.getRecord("CTBLEFTTYPE","KEY=:OLDTYPE")
	
	set neft=oeft.copy()
	do neft.setMode(0)
	set neft.key=NEWTYPE
	set neft.desc=DES
	do neft.bypassSave()
	
	write !,"EFT Type "_NEWTYPE_" - "_DES_"Created" 
	quit
	
	
UTBLTRN
	/*
	 Create Default PD Teller Editors
	*/
	
	// Entries already exist
	type ResultSet rs=Db.select("ACTION","UTBLTRNTLRC")
	if 'rs.isEmpty() quit
	
	do UTBLTRNC
	do UTBLTRNO
	do UTBLTRNP
	quit
	
UTBLTRNC
	/*
	 Create default UTBLTRNTLRC entries
	*/
	
	type String TRN(),ACTION,REGION,CATEGORY,SORT
	
	write !!,"Create Default UTBLTRNTLRC Entries"
	
	set TRN("Teller.depositAction","SIMPLE","AMOUNT")=2
	set TRN("Teller.depositAction","SIMPLE","CASH")=1
	set TRN("Teller.depositAction","SIMPLE","CHECK")=0
	set TRN("Teller.loanDisbursementAction","BOTTOM","LOANDISBURSE")=0
	set TRN("Teller.loanDisbursementAction","TAB0_LC","CHECKOUT")=0
	set TRN("Teller.loanDisbursementAction","TAB0_RC","CASHOUT")=1
	set TRN("Teller.loanDisbursementAction","TAB1_ROWS","TRANSFER")=0
	set TRN("Teller.loanDisbursementAction","TAB2_ROWS","GLTRANSFER")=0
	set TRN("Teller.loanDisbursementAction","TAB3_ROWS","OFFSETROWS")=0
	set TRN("Teller.loanPaymentAction","BOTTOM","LOANPAYMENT")=0
	set TRN("Teller.loanPaymentAction","TAB0_LC","CHECK")=0
	set TRN("Teller.loanPaymentAction","TAB0_RC","CASH")=0
	set TRN("Teller.loanPaymentAction","TAB1_ROWS","TRANSFER")=0
	set TRN("Teller.loanPaymentAction","TAB2_ROWS","GLTRANSFER")=0
	set TRN("Teller.loanPaymentAction","TAB3_ROWS","OFFSETROWS")=0
	set TRN("Teller.loanPayoffAction","BOTTOM","LOANPAYOFF")=0
	set TRN("Teller.loanPayoffAction","TAB0_LC","CHECK")=0
	set TRN("Teller.loanPayoffAction","TAB0_RC","CASH")=0
	set TRN("Teller.loanPayoffAction","TAB1_ROWS","TRANSFER")=0
	set TRN("Teller.loanPayoffAction","TAB2_ROWS","GLTRANSFER")=0
	set TRN("Teller.loanPayoffAction","TAB3_ROWS","OFFSETROWS")=0
	set TRN("Teller.officialCheckAction","BOTTOM","OFFICIALCHK")=0
	set TRN("Teller.officialCheckAction","LEFTCOLUMN","CHECK")=0
	set TRN("Teller.officialCheckAction","RIGHTCOLUMN","CASH")=0
	set TRN("Teller.transferAction","TFER_FROM","TFER_FROM")=0
	set TRN("Teller.transferAction","TFER_TO","TFER_TO")=1
	set TRN("Teller.transferCashAction","BOTTOM","TRANSFER")=0
	set TRN("Teller.withdrawalAction","SIMPLE","AMOUNT")=1
	set TRN("Teller.withdrawalAction","SIMPLE","CASHOUT")=0

	set (ACTION,REGION,CATEGORY)=""
	for  set ACTION=TRN(ACTION).order() quit:ACTION=""  do {
		for  set REGION=TRN(ACTION,REGION).order() quit:REGION=""  do {
			for  set CATEGORY=TRN(ACTION,REGION,CATEGORY).order() quit:CATEGORY=""  do {
				set SORT=TRN(ACTION,REGION,CATEGORY).piece("|",1)
				
				type RecordUTBLTRNTLRC utbltrnc=Class.new("RecordUTBLTRNTLRC")
				set utbltrnc.action=ACTION
				set utbltrnc.region=REGION
				set utbltrnc.category=CATEGORY
				set utbltrnc.sortorder=SORT
				do utbltrnc.bypassSave()
			}
		}
	}
	quit

UTBLTRNO
	/*
	 Create default UTBLTRNTLRO entries
	*/
	
	type String TRN(),ACTION,CATEGORY,ETC,TLABEL,TLDESC,SORT,DFTACN

	write !!,"Create Default UTBLTRNTLRO Entries"
	
	set TRN("Teller.depositAction","CASH","CI")="Ca&sh In|Cash In|1"
	set TRN("Teller.depositAction","CHECK","CKNH")="&Checks No Hold|Checks No Hold|1"
	set TRN("Teller.loanDisbursementAction","CASHOUT","CO")="C&ash Out|CashOut|0|11110"
	set TRN("Teller.loanDisbursementAction","CHECKOUT","CKO")="Ch&ecks Out|Checks Out|0|30100"
	set TRN("Teller.loanDisbursementAction","OFFSETROWS","CKO")="Checks Out|Checks Out|0|30100"
	set TRN("Teller.loanDisbursementAction","OFFSETROWS","CO")="Cash Out|Cash Out|0|11110"
	set TRN("Teller.loanPaymentAction","CASH","CI")="C&ash In|Cash In|0|11110"
	set TRN("Teller.loanPaymentAction","CHECK","CKNH")="&Checks No Hold|Checks No Hold|0|30100"
	set TRN("Teller.loanPaymentAction","GLTRANSFER","MDR")="Miscellaneous Debit|Miscellaneous Debit|0"
	set TRN("Teller.loanPaymentAction","OFFSETROWS","CI")="Cash In|Cash In|0|11110"
	set TRN("Teller.loanPaymentAction","OFFSETROWS","CKNH")="Checks No Hold|Checks No Hold|0|30100"
	set TRN("Teller.loanPaymentAction","OFFSETROWS","MDR")="Miscellaneous Debit|Miscellaneous Debit|0"
	set TRN("Teller.loanPayoffAction","CASH","CI")="C&ash In|Cash In|0|11110"
	set TRN("Teller.loanPayoffAction","CHECK","CKNH")="&Checks No Hold|Checks No Hold|0|30100"
	set TRN("Teller.loanPayoffAction","OFFSETROWS","CI")="Cash In|Cash In|0|11110"
	set TRN("Teller.loanPayoffAction","OFFSETROWS","CKNH")="Checks No Hold|Checks No Hold|0|30100"
	set TRN("Teller.officialCheckAction","CASH","CI")="C&ash In|Cash In|0"
	set TRN("Teller.officialCheckAction","CHECK","CKNH")="&Checks No Hold|Check No Hold|0"
	set TRN("Teller.withdrawalAction","CASHOUT","CO")="Ca&sh Out|Cash Out|0|11110"

	set (ACTION,CATEGORY,ETC)=""
	for  set ACTION=TRN(ACTION).order() quit:ACTION=""  do {
		for  set CATEGORY=TRN(ACTION,CATEGORY).order() quit:CATEGORY=""  do {
			for  set ETC=TRN(ACTION,CATEGORY,ETC).order() quit:ETC=""  do {
				if 'Db.isDefined("TRN","ETC=:ETC") quit
				set TLABEL=TRN(ACTION,CATEGORY,ETC).piece("|",1)
				set TLDESC=TRN(ACTION,CATEGORY,ETC).piece("|",2)
				set SORT=TRN(ACTION,CATEGORY,ETC).piece("|",3)
				set DFTACN=TRN(ACTION,CATEGORY,ETC).piece("|",4)
				
				type RecordUTBLTRNTLRO utbltrno=Class.new("RecordUTBLTRNTLRO")
				set utbltrno.action=ACTION
				set utbltrno.category=CATEGORY
				set utbltrno.etc=ETC
				set utbltrno.tlabel=TLABEL
				set utbltrno.tldesc=TLDESC
				set utbltrno.sortorder=SORT
				set utbltrno.dftacn=DFTACN
				do utbltrno.bypassSave()
			}
		}
	}
	quit
	
UTBLTRNP
	/*
	 Create default UTBLTRNTLRP entries
	*/
	
	type String TRN(),ACTION,GRP,ETC,TLABEL,TLDESC,CATEGORY,SORT

	write !!,"Create Default UTBLTRNTLRP Entries"
	
	set TRN("Teller.depositAction","CD","CD")="&Deposit Amount|Deposit|AMOUNT|0"
	set TRN("Teller.depositAction","DDA","DD")="&Deposit Amount|Deposit|AMOUNT|0"
	set TRN("Teller.depositAction","SAV","SD")="&Deposit Amount|Deposit|AMOUNT|0"
	set TRN("Teller.loanDisbursementAction","CBL","CBD")="Disbursement|Disbursement|LOANDISBURSE|10"
	set TRN("Teller.loanDisbursementAction","COM","CMD")="Disbursement|Disbursement|LOANDISBURSE|10"
	set TRN("Teller.loanDisbursementAction","DDA","DD")="Checking Deposit|Checking Deposit|TRANSFER|10"
	set TRN("Teller.loanDisbursementAction","LN","LD")="Disbursement|Disbursement|LOANDISBURSE|10"
	set TRN("Teller.loanDisbursementAction","MISC","MCR")="General Ledger Credit|GL Credit|GLTRANSFER|0"
	set TRN("Teller.loanDisbursementAction","MTG","MD")="Disbursement|Disbursement|LOANDISBURSE|10"
	set TRN("Teller.loanDisbursementAction","RC","RA")="Disbursement|Disbursement|LOANDISBURSE|10"
	set TRN("Teller.loanDisbursementAction","SAV","SD")="Savings Deposit|Checking Deposit|TRANSFER|20"
	set TRN("Teller.loanPaymentAction","CBL","CBEO")="Escrow Payment|EscrowPayment|LOANPAYMENT|3"
	set TRN("Teller.loanPaymentAction","CBL","CBP")="Payment|Payment|LOANPAYMENT|0"
	set TRN("Teller.loanPaymentAction","CBL","CBPIO")="Interest Payment|Interest Payment|LOANPAYMENT|2"
	set TRN("Teller.loanPaymentAction","CBL","CBPLO")="Late Charge Payment|Late Charge Payment|LOANPAYMENT|4"
	set TRN("Teller.loanPaymentAction","CBL","CBPPO")="Principal Payment|Principal Payment|LOANPAYMENT|1"
	set TRN("Teller.loanPaymentAction","COM","CMEO")="Escrow Payment|EscrowPayment|LOANPAYMENT|3"
	set TRN("Teller.loanPaymentAction","COM","CMP")="Payment|Payment|LOANPAYMENT|0"
	set TRN("Teller.loanPaymentAction","COM","CMPIO")="Interest Payment|Interest Payment|LOANPAYMENT|2"
	set TRN("Teller.loanPaymentAction","COM","CMPLO")="Late Charge Payment|Late Charge Payment|LOANPAYMENT|4"
	set TRN("Teller.loanPaymentAction","COM","CMPPO")="Principal Payment|Principal Payment|LOANPAYMENT|1"
	set TRN("Teller.loanPaymentAction","DDA","DW")="Checking Withraw|Checking Withdraw|TRANSFER|10"
	set TRN("Teller.loanPaymentAction","LN","LP")="Payment|Payment|LOANPAYMENT|0"
	set TRN("Teller.loanPaymentAction","LN","LPCM")="Loan Payment Credit Memo|Loan Pay Credit Memo|LOANPAYMENT|60"
	set TRN("Teller.loanPaymentAction","LN","LPIO")="Interest Payment|Interest Payment|LOANPAYMENT|2"
	set TRN("Teller.loanPaymentAction","LN","LPLO")="Late Charge Payment|Late Charge Payment|LOANPAYMENT|3"
	set TRN("Teller.loanPaymentAction","LN","LPPO")="Principal Payment|Principal Payment|LOANPAYMENT|1"
	set TRN("Teller.loanPaymentAction","MISC","MDR")="Miscellaneous Debit|Miscellaneous Debit|GLTRANSFER|401"
	set TRN("Teller.loanPaymentAction","MTG","MEO")="Escrow Payment|Escrow Payment|LOANPAYMENT|3"
	set TRN("Teller.loanPaymentAction","MTG","MP")="Payment|Payment|LOANPAYMENT|0"
	set TRN("Teller.loanPaymentAction","MTG","MPIO")="Interest Payment|Interest Payment|LOANPAYMENT|2"
	set TRN("Teller.loanPaymentAction","MTG","MPLO")="Late Charge Payment|Late Charge Payment|LOANPAYMENT|4"
	set TRN("Teller.loanPaymentAction","MTG","MPPO")="Principal Payment|Principal Payment|LOANPAYMENT|1"
	set TRN("Teller.loanPaymentAction","RC","RP")="Payment|Payment|LOANPAYMENT|0"
	set TRN("Teller.loanPaymentAction","RC","RPIO")="Interest Payment|Interest Payment|LOANPAYMENT|2"
	set TRN("Teller.loanPaymentAction","RC","RPLO")="Late Charge Payment|Late Charge Payment|LOANPAYMENT|3"
	set TRN("Teller.loanPaymentAction","RC","RPPO")="Principal Payment|Principal Payment|LOANPAYMENT|1"
	set TRN("Teller.loanPaymentAction","SAV","SW")="Savings Withdraw|Savings Withdraw|TRANSFER|20"
	set TRN("Teller.loanPayoffAction","CBL","CMPO")="Payoff Close|Payoff Close|LOANPAYOFF|0"
	set TRN("Teller.loanPayoffAction","CBL","CMPOO")="Payoff Keep Open|Payoff Keep Open|LOANPAYOFF|1"
	set TRN("Teller.loanPayoffAction","COM","CMPO")="Payoff Close|Payoff Close|LOANPAYOFF|0"
	set TRN("Teller.loanPayoffAction","COM","CMPOO")="Payoff Keep Open|Payoff Keep Open|LOANPAYOFF|1"
	set TRN("Teller.loanPayoffAction","DDA","DW")="Checking Withraw|Checking Withdraw|TRANSFER|10"
	set TRN("Teller.loanPayoffAction","LN","LPO")="Payoff Close|Payoff Close|LOANPAYOFF|0"
	set TRN("Teller.loanPayoffAction","LN","LPOO")="Payoff Keep Open|PayoffKeep Open|LOANPAYOFF|1"
	set TRN("Teller.loanPayoffAction","MISC","MDR")="GL Debit|GL Debit|GLTRANSFER|10"
	set TRN("Teller.loanPayoffAction","MTG","MPO")="Payoff Close|Payoff Close|LOANPAYOFF|0"
	set TRN("Teller.loanPayoffAction","MTG","MPOO")="Payoff Keep Open|Payoff Keep Open|LOANPAYOFF|1"
	set TRN("Teller.loanPayoffAction","RC","RPOC")="Payoff Close|Payoff Close|LOANPAYOFF|0"
	set TRN("Teller.loanPayoffAction","RC","RPOO")="Payoff Keep Open|PayoffKeep Open|LOANPAYOFF|1"
	set TRN("Teller.loanPayoffAction","SAV","SW")="Savings Withdraw|SavingsWithdraw|TRANSFER|20"
	set TRN("Teller.officialCheckAction","MISC","CEC")="Official Check|Official Check|OFFICIALCHK|0"
	set TRN("Teller.transferAction","CD","CD")="Certificate Deposit|Certificate Deposit|TFER_TO"
	set TRN("Teller.transferAction","CD","CW")="Certificate Withdraw|Certificate Withdraw|TFER_FROM"
	set TRN("Teller.transferAction","DDA","DC")="DDA Closeout|DDA Closeout|TFER_FROM|300"
	set TRN("Teller.transferAction","DDA","DD")="Checking Deposit|Checking Deposit|TFER_TO|10"
	set TRN("Teller.transferAction","DDA","DW")="Checking Withdraw|CheckingWithdraw|TFER_FROM|10"
	set TRN("Teller.transferAction","RC","RA")="Disbursement|Disbursement|TFER_FROM|30"
	set TRN("Teller.transferAction","SAV","SD")="Savings Deposit|Savings Deposit|TFER_TO|20"
	set TRN("Teller.transferAction","SAV","SW")="Savings Withdraw|Savings Withdraw|TFER_FROM|20"
	set TRN("Teller.transferCashAction","MISC","TI")="Teller Cash Transfer-In|Misc.|TRANSFER|0"
	set TRN("Teller.transferCashAction","MISC","TO")="Teller Cash Transfer-Out|Misc.|TRANSFER|1"
	set TRN("Teller.withdrawalAction","CD","CW")="&Withdrawal Amount|Certificate Withdraw|AMOUNT|50"
	set TRN("Teller.withdrawalAction","DDA","DC")="DDA Closeout|DDA Closeout||300"
	set TRN("Teller.withdrawalAction","DDA","DW")="&Withdrawal Amount|Checking Withdraw|AMOUNT|30"
	set TRN("Teller.withdrawalAction","SAV","SW")="&Withdrawal Amount|Savings Withdraw|AMOUNT|40"
	set TRN("Tellr.loanPaymentAction","MISC","MDR")="General Ledger Debit|GL Debit|GLTRANSFER|402"

	set (ACTION,GRP,ETC)=""
	for  set ACTION=TRN(ACTION).order() quit:ACTION=""  do {
		for  set GRP=TRN(ACTION,GRP).order() quit:GRP=""  do {
			for  set ETC=TRN(ACTION,GRP,ETC).order() quit:ETC=""  do {
				if 'Db.isDefined("TRN","ETC=:ETC") quit
				set TLABEL=TRN(ACTION,GRP,ETC).piece("|",1)
				set TLDESC=TRN(ACTION,GRP,ETC).piece("|",2)
				set CATEGORY=TRN(ACTION,GRP,ETC).piece("|",3)
				set SORT=TRN(ACTION,GRP,ETC).piece("|",4)
				
				type RecordUTBLTRNTLRP utbltrnp=Class.new("RecordUTBLTRNTLRP")
				set utbltrnp.action=ACTION
				set utbltrnp.grp=GRP
				set utbltrnp.etc=ETC
				set utbltrnp.tlabel=TLABEL
				set utbltrnp.tldesc=TLDESC
				set utbltrnp.category=CATEGORY
				set utbltrnp.sortorder=SORT
				do utbltrnp.bypassSave()
			}
		}
	}
	quit
	
		
DFTSCAU
	/*
	 Create default users for Profile-Direct proxy users and developers
	*/
	
	write !!,"Begin Profile-Direct proxy users Entries"

	// Create Profile Direct Users
	do SCAU("PD8900","WebClient","SCA","XXX",,0)
	do SCAU("PD8901","WebCSR","SCA","XXX",,0)
	do SCAU("PD8902","WebAdmin","SCA","XXX",,0)
	
	// Create Profile Direct Developer Users
	//do SCAU("LARRY","Larry Z","SCA","XXX","larry.zappaterrini@fnf.com")
	//do SCAU("KEVIN","Kevin Peters","SCA","ZZZ","kevin.peters@fnf.com")
	//do SCAU("PETER","Peter Lam","SCA","XXX","peter.lam@fnf.com")
	//do SCAU("JASON","Jason Ladd","SCA","XXX","jason.ladd@fnf.com")
	//do SCAU("JAMES","James Yang","SCA","XXX","james.yang@fnf.com")
	//do SCAU("1667","Ed Sigda","SCA","UIO","edward.sigda@fnis.com")
	
	quit

SCAU( String UID, String NAME, String UCLS, String PWD, String EADDR, String BRCD)
	/*
	 Create SCAU user
	*/
 
	type String PSWDAUT
	type RecordCUVAR cuvar
	type RecordSCAU scau
	
	if Db.isDefined("SCAU","UID=:UID") quit
	
	set cuvar=Db.getRecord("CUVAR")
	set scau=Class.new("RecordSCAU")
 
	set scau.uid=UID
	set scau.%ufn=NAME
	set scau.automenu=1
	set scau.%ucls=UCLS
	set scau.pswd=$$ENC^SCAENC(PWD)
	set scau.brcd=BRCD.get()
	set scau.pexpr=99999
	set scau.tsdr=cuvar.glts
	set scau.tscr=cuvar.glts
	set scau.tpm=1
	
	set ER=$$ENC^%ENCRYPT(PWD,.PSWDAUT)
	set scau.pswdaut=PSWDAUT
	
	set scau.eaddr=EADDR.get()
 
	do scau.bypassSave()

	write !,"User "_UID_" - "_NAME_" Created"
	quit
	
USERTBL
	/*
	 Create entries for new tables used by Profile-Direct
	*/
	
	// CIF Blocked Reason Code Table
	type ResultSet rs1=Db.select("FMDESC","UTBLBLKRSN")
	if rs1.isEmpty() do BLKRSN
	
	// Client Application Channels
	type ResultSet rs2=Db.select("FMDESC","UTBLCHANNEL")
	if rs2.isEmpty() do CHANNEL

	// External Account Type
	type ResultSet rs3=Db.select("FMDESC","UTBLEXTYP")
	if rs3.isEmpty() do EXTYP
	
	// How did you hear about us
	type ResultSet rs4=Db.select("FMDESC","UTBLHOW")
	if rs4.isEmpty() do HOW

	// Application Manual Approval Reasons	
	type ResultSet rs5=Db.select("FMDESC","UTBLMAPPRSN")
	if rs5.isEmpty() do MAPPRSN

	// Pre-defined authentication questions
	type ResultSet rs6=Db.select("FMDESC","UTBLQUESTION")
	if rs6.isEmpty() do QUESTION
	
	quit

BLKRSN
	/*
	 Create default 'CIF Blocked Reason Code Table' entries
	*/
	type Number ID
	type String TBL()
	
	write !!,"Begin CIF Blocked Reason Code Table Entries"
	
	set TBL(0)="Record Not Blocked"
	set TBL(1)="Exceeded Maximum Password Failures"
	set TBL(2)="Invalid Use"
	set TBL(3)="Inactive Record"
	
	set ID=""
	for  set ID=TBL(ID).order() quit:ID=""  do {
		type RecordUTBLBLKRSN tbl=Class.new("RecordUTBLBLKRSN")
		set tbl.reason=ID
		set tbl.des=TBL(ID)
		do tbl.bypassSave()

		write !,"Entry "_ID_" - "_TBL(ID)_" Created"
	}
	quit
		
CHANNEL
	/*
	 Create default Client Application Channels
	*/
	type Number ID
	type String TBL()
	
	write !!,"Begin Client Application Channels Table Entries"
	
	set TBL(1)="Web Client"
	set TBL(2)="Web CSR|0"
	set TBL(3)="RSC Messaging"
	set TBL(4)="Teller|2"
	set TBL(5)="Web Admin|1"
	
	set ID=""
	for  set ID=TBL(ID).order() quit:ID=""  do {
		type RecordUTBLCHANNEL tbl=Class.new("RecordUTBLCHANNEL")
		set tbl.chanid=ID
		set tbl.fmdesc=TBL(ID).piece("|",1)
		set tbl.sapptyp=TBL(ID).piece("|",2)
		do tbl.bypassSave()
		
		write !,"Entry "_ID_" - "_TBL(ID)_" Created"
	}
	quit

EXTYP
	/*
	 Create default 'External Account Type' entries
	*/

	type Number ID
	type String TBL()
	
	write !!,"Begin External Account Type Table Entries"
	
	set TBL(1)="DDA|DDA Account"
	set TBL(2)="SAV|SAV Account"
	set TBL(3)="CD|Certificate"
	set TBL(4)="MISC|G/L Account"
	set TBL(5)="LN|Loan Account"
	set TBL(6)="RC|Revolving Line of Credit"
	
	set ID=""
	for  set ID=TBL(ID).order() quit:ID=""  do {
		type RecordUTBLEXTYP tbl=Class.new("RecordUTBLEXTYP")
		set tbl.acctyp=ID
		set tbl.grp=TBL(ID).piece("|",1)
		set tbl.des=TBL(ID).piece("|",2)
		do tbl.bypassSave()

		write !,"Entry "_ID_" - "_TBL(ID)_" Created"
	}
	quit
	
HOW
	/*
	 Create default 'How did you hear about us' entries
	*/

	type Number ID
	type String TBL()
	
	write !!,"Begin How did you hear about us Table Entries"
	
	set TBL(1)="Television"
	set TBL(2)="Radio"
	set TBL(3)="Newspaper"
	set TBL(4)="Friend"
	set TBL(5)="Web Site"
	
	set ID=""
	for  set ID=TBL(ID).order() quit:ID=""  do {
		type RecordUTBLHOW tbl=Class.new("RecordUTBLHOW")
		set tbl.how=ID
		set tbl.fmdesc=TBL(ID)
		do tbl.bypassSave()

		write !,"Entry "_ID_" - "_TBL(ID)_" Created"
	}
	quit

MAPPRSN
	/*
	 Create default 'Application Manual Approval Reasons' entries
	*/

	type Number ID
	type String TBL()
	
	write !!,"Begin Application Manual Approval Reasons Table Entries"
	
	set TBL(1)="Confirmed DL Contacted DMV"
	set TBL(2)="Confirmed DL Reviewed Document"
	set TBL(3)="Confirmed DL Agent records"
	set TBL(4)="Confirmed Mil ID Reviewed Document"
	set TBL(5)="Confirmed Mil ID Agent records"
	set TBL(6)="Confirmed Address Online Search"
	set TBL(7)="Confirmed Address Supporting Document"
	set TBL(8)="Confirmed Address same as Primary-owner"
	set TBL(9)="Confirmed Address Agent records"
	set TBL(10)="Confirmed SSN Reviewed Document"
	set TBL(11)="Confirmed SSN Agent Records"
	set TBL(12)="Confirmed Tel Number Online search"
	set TBL(13)="Confirmed Tel Number Agent records"
	set TBL(14)="Confirmed Tel Number Cell phone"
	set TBL(15)="State ID Contacted DMV"
	set TBL(16)="State ID Reviewed Document"
	set TBL(17)="State ID Agent records"
	set TBL(18)="Client Information on File"
	set TBL(19)="ID Theft Alert Confirmed"
	set TBL(20)="Credit not considered"
	set TBL(21)="Other-Loss Prevention Dept approval req"
	
	set ID=""
	for  set ID=TBL(ID).order() quit:ID=""  do {
		type RecordUTBLMAPPRSN tbl=Class.new("RecordUTBLMAPPRSN")
		set tbl.mapprsn=ID
		set tbl.fmdesc=TBL(ID)
		do tbl.bypassSave()

		write !,"Entry "_ID_" - "_TBL(ID)_" Created"
	}
	quit

QUESTION
	/*
	 Create default 'Pre-defined authentication questions' entries
	*/

	type Number ID
	type String TBL()
	
	write !!,"Begin Pre-defined authentication questions Table Entries"
	
	set TBL(1)="What is your favorite color?"
	set TBL(2)="What is the name of your favorite pet?"
	set TBL(3)="In what town were you born?"
	
	set ID=""
	for  set ID=TBL(ID).order() quit:ID=""  do {
		type RecordUTBLQUESTION tbl=Class.new("RecordUTBLQUESTION")
		set tbl.qid=ID
		set tbl.fmdesc=TBL(ID)
		do tbl.bypassSave()

		write !,"Entry "_ID_" - "_TBL(ID)_" Created"
	}
	quit
	
CNTXT( String UCLS)
	/*
	 Authorize all context entries for specified userclass
	*/
	
	type Number CHANID,CNTXTID,SAPP
	
	// Assumes we are using default UTBLCHANNEL entries
	set SAPP(0)=2
	set SAPP(1)=5
	set SAPP(2)=4
	
	type ResultSet rs = Db.select("CNTXTID,SAPPTYP","STBLCNTXT")
	while rs.next() do {
		set CNTXTID=rs.getCol(1)
		
		// Refresh, STBLCNTXT*, General Table Maintenance, Service Fees 
		if ",20001,20003,20004,20005,20020,20022,"[(","_CNTXTID_",") quit
		
		set CHANID=SAPP(rs.getCol(2))
		type RecordUTBLCNTXTAUT cntxtaut=Db.getRecord("UTBLCNTXTAUT","CHANNELID=:CHANID,UCLS=:UCLS,CNTXTID=:CNTXTID",1)
		set cntxtaut.channelid=CHANID
		set cntxtaut.ucls=UCLS
		set cntxtaut.cntxtid=CNTXTID
		set cntxtaut.permid=3
		do cntxtaut.bypassSave()
	}
	quit

SCATBL5A(String UCLS)
	/*
	 Authorize MRPCs for specified userclass
	*/

	type Number ID
	type String TBL()
	
	set TBL(3)=1
	set TBL(5)=1
	set TBL(19)=1
	set TBL(27)=1
	set TBL(29)=1
	set TBL(43)=1
	set TBL(44)=1
	set TBL(78)=1
	set TBL(82)=1
	set TBL(96)=1
	set TBL(97)=1
	set TBL(98)=1
	set TBL(102)=1
	set TBL(121)=1
	set TBL(135)=1
	set TBL(136)=1
	set TBL(137)=1
	set TBL(138)=1
	set TBL(139)=1
	set TBL(140)=1
	set TBL(145)=1
	set TBL(148)=1
	set TBL(149)=1
	set TBL(150)=1
	
	set ID=""
	for  set ID=TBL(ID).order() quit:ID=""  do {
		type RecordSCATBL5A tbl=Db.getRecord("SCATBL5A","RPCID=:ID,UCLS=:UCLS",1)
		set tbl.rpcid=ID
		set tbl.ucls=UCLS
		set tbl.auth=TBL(ID)
		do tbl.bypassSave()
	}
	quit
	
UTBLRTNS
	/*
	 Create default 'PROFILE server routines (for 24x7 access)' entries
	*/

	type Number ID
	type String TBL()
	
	set TBL("EXT^UMDT")=1
	set TBL("^MRPC003")=1
	set TBL("^MRPC005")=1
	set TBL("^MRPC019")=1
	set TBL("^MRPC027")=1
	set TBL("^MRPC029")=1
	set TBL("^MRPC043")=1
	set TBL("^MRPC044")=1
	set TBL("^MRPC078")=1
	set TBL("^MRPC082")=1
	set TBL("^MRPC096")=1
	set TBL("^MRPC097")=1
	set TBL("^MRPC098")=1
	set TBL("^MRPC102")=1
	set TBL("^MRPC121")=1
	set TBL("^MRPC135")=1
	set TBL("^MRPC136")=1
	set TBL("^MRPC137")=1
	set TBL("^MRPC138")=1
	set TBL("^MRPC139")=1
	set TBL("^MRPC140")=1
	set TBL("^MRPC145")=1
	set TBL("^MRPC148")=1
	set TBL("^MRPC149")=1
	set TBL("^MRPC150")=1
	
	set ID=""
	for  set ID=TBL(ID).order() quit:ID=""  do {
		type RecordUTBLRTNS tbl=Db.getRecord("UTBLRTNS","ROUTINE=:ID",1)
		set tbl.routine=ID
		set tbl.valid24x7=TBL(ID)
		do tbl.bypassSave()
	}
	quit
	
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60795^32656^e0101908^25355"	// Signature - LTD^TIME^USER^SIZE
