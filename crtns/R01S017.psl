R01S017	// SCA150 - Coupon Book Tape Production
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:53 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String TAPDAT=%CurrentTime
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VENDR
	type Date VIN2
	type Date VIN3

	set RID="SCA150"
	set RN="Coupon Book Tape Production"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VENDR")="|9|||[UTBLCBPROD]||||T|Vendor|||||"
	set %TAB("VIN2")="|10||[LNCPN]PND|[LNCPN]PND:DISTINCT:NOVAL||||D|From date|||||"
	set %TAB("VIN3")="|10||[LNCPN]PND|[LNCPN]PND:DISTINCT:NOVAL||||D|To date|||||"

	set %READ="IO/REQ,VENDR#1,VIN2#1,VIN3#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TAPDAT=%CurrentTime
	type public Date VIN2,VIN3
	type public String VENDR
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CID,CONAM,D1,D12,D19,D28,D3,D31,D32,D32A,D4,DUE,MADR(),PMET,PROCDATE,RID,RN,TPTAMT,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA150",RN="Coupon Book Tape Production"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA150","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=99999999			// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=329")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNCPN.CID,LNCPN.PMET,LNCPN.PND,LN.CID,LN.DTNT,LNCPN.NCN,LNCPN.NDD","LNCPN,LN,PRODCTL","LNCPN.PND NOT <:VIN2 AND LNCPN.PND NOT >:VIN3 AND LN.STAT NOT >0 AND :VENDR=PRODCTL.CBPROD AND ((LN.PCIDSTAT=0) OR (LN.PCIDSTAT=''))","LNCPN.PND,LNCPN.PMET,LNCPN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc3,vovc2,vovc1
	set vovc3="",vovc2="",vovc1=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc3,vc3,vovc2,vc2,vovc1,vc1
	set vovc3=vc3,vovc2=vc2,vovc1=vc1
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// LNCPN.CID
	set vc2=V.piece($C(9),2)			// LNCPN.PMET
	set vc3=V.piece($C(9),3)			// LNCPN.PND
	set vc4=V.piece($C(9),4)			// LN.CID
	set vc5=V.piece($C(9),5)			// LN.DTNT
	set vc6=V.piece($C(9),6)			// LNCPN.NCN
	set vc7=V.piece($C(9),7)			// LNCPN.NDD
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3
	type public String D1, D3, D4, D12, D19, D28, D31, D32, D32A 
	type public String VENDR
	type public Number CID, DUE, PMET, TPTAMT 
        type public Boolean ER
	type Date CBPND, JD, PND
	type String LCHG
	type Number CNT, EPMT, PMTS, PRPMT
	type public String MADR()

	set CID = vc1	// Account Number
	set PMET = vc2	// Production Type
	set PND = vc3 	// Production Date

	type RecordLN ln = Db.getRecord("LN","CID=:CID",1)

	type RecordLNCPN lncpn = Db.getRecord("LNCPN","PND=:PND,PMET=:PMET,CID=:CID",1)

	type RecordUTBLCBPROD utblcbprod = Db.getRecord("UTBLCBPROD","VENDR=:VENDR")

	set D1 = utblcbprod.clnt		// Client Number 
	set D3 = utblcbprod.srvseq		// Service Sequence
	set D4 = CID				// MICR Number

	// 4 lines of title and address
	do ^UTLADDR(1,"MADR",4,2,"ACN",CID)
	
	if PMET = 1 do {
		set JD = ln.dist1nd
		set CBPND = ln.dist1nd.nextFreqDate(ln.cbfre)
		set CNT = 0
		for  quit:JD '< CBPND  set CNT = CNT + 1 set JD=JD.nextFreqDate(ln.dist1fre)		

		set lncpn.ncp = CNT
		set lncpn.pcb = 1
		set lncpn.ndd = ln.dist1nd
		set lncpn.tpt = ln.pmt
		}

	/*
	Production Method 3 or 4: # of PMTS and Payment amount is in 
	dayend entry.

	Method 2 must be calculated.	 
	
	DUE     = Due date on coupon
	D28     = No. of Payments
	D12     = Total Payment Amount
	TPTAMT  = Payment Amount
	PRPMT   = Principle and Interest Amount
	EPMT    = Escrow Amount
	LCHG    = Late Charge
	*/

	set DUE = ""

	if PMET '= 2 do {
		set D28 = lncpn.ncp
		set TPTAMT = lncpn.tpt
		set D12 = D28 * TPTAMT
		set DUE = lncpn.ndd
		}
 
	if utblcbprod.inpty set D19 = "02"
	else  set D19 = "07"

	// Where variable D31 is C/A "Frequency of Payments", single
	// character occupying position 293 in layout.
 
	set D31 = (12/ln.dist1af)
	set D31 = D31.justify(1,0)

	// Additions to support required weekly, bi-weekly, annual values
	if ln.dist1af = 1 set D31 = "A"		// Annual
	if ln.dist1af = 26 set D31 = "B"	// Bi-weekly
	if ln.dist1af = 52 set D31 = "W"	// Weekly

	/*
	Calculate 	PMTS    -->  Number of payments
                        LCHG    -->  Late Charge
                        DUE     -->  Next Coupon Due Dat
                        TPTAMT  -->  Payment amount on coupons
                        EPMT    -->  Total Escrow Payment
                        PRPMT   -->  Total P&I Payment

	The logic below used to reside in R150^SCARPTS in lower versions.
	*/
	
	do R150^SCA150(.ln,.lncpn,PND,PMET,.PMTS,.LCHG,.DUE,.TPTAMT,.EPMT,.PRPMT) if ER do Runtime.setErrMSG("LNCPN",6363) quit

 	set LCHG = LCHG.get() * 100
	set DUE = DUE.get()
	set TPTAMT = TPTAMT.get()
	set PMTS = PMTS.get()

	if ln.pmtgrc["D" set D32A = +ln.pmtgrc
	else  set D32A = 30 * (+ln.pmtgrc)

	set D32A = (10E1+D32A)
        set D32A = D32A.extract(2,99)
	set LCHG = (10000E1+LCHG)
        set LCHG = LCHG.extract(2,99)
	set D32 = D32A_LCHG

	if PMET = 2 do {
		set D28 = PMTS
 		set D12 = D28 * TPTAMT

		set lncpn.ncp = PMTS
		set lncpn.tpt = TPTAMT
		set lncpn.pmtpi = PRPMT
		set lncpn.pmttrs = EPMT
		set lncpn.recndd = DUE
		}
	 
	do lncpn.save()

	quit



VPREBQ	// Pre-processor (before query)

	type public String TAPDAT = %CurrentTime
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc3,vovc3,vc2,vovc2,vc1,vovc1
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc3'=vc3) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String CID,D1,D12,D19,D28,D3,D31,D32,D32A,D4,DUE,ER,IOSL,MADR(),PMET,PROCDATE,TAPDAT=%CurrentTime,TPTAMT,V,VD(),VENDR,VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$E(10E30_D1,24+$L(D1),99)
	set VL=VL_$J("",9-VL.length())_"A"
	set VL=VL_$J("",10-VL.length())_$E(D3,1,1)
	set VL=VL_$J("",11-VL.length())_"00000"
	set VL=VL_$J("",16-VL.length())_$E(10E30_D4,18+$L(D4),99)
	do VP1 quit:VFMQ!verror.get()  set V=$J(PROCDATE,6)
	set VL=VL_$J("",31-VL.length())_V
	set VL=VL_$J("",37-VL.length())_"01"
	set VL=VL_$J("",39-VL.length())_$E(vc4,1,24)
	set VL=VL_$J("",63-VL.length())_$E(MADR(1),1,40)
	set VL=VL_$J("",103-VL.length())_$E(MADR(2),1,40)
	set VL=VL_$J("",143-VL.length())_$E(MADR(3),1,40)
	set VL=VL_$J("",183-VL.length())_$E(MADR(4),1,40)
	set VL=VL_$J("",223-VL.length())_$E(10E30_(D12*100\1),24+$L(D12*100\1),99)
	set VL=VL_$J("",232-VL.length())_$$^%ZD(vc5,"MM")_$$^%ZD(vc5,"DD")_$$^%ZD(vc5,"YY")
	set VL=VL_$J("",238-VL.length())_"00000000"
	set VL=VL_$J("",246-VL.length())_"000"
	set VL=VL_$J("",249-VL.length())_$E(10E30_D28,30+$L(D28),99)
	set VL=VL_$J("",252-VL.length())_$E(10E30_D28,30+$L(D28),99)
	set VL=VL_$J("",255-VL.length())_$E(10E30_vc6,30+$L(vc6),99)
	set VL=VL_$J("",258-VL.length())_$E(D19,1,2)
	set VL=VL_$J("",260-VL.length())_"               "
	set VL=VL_$J("",275-VL.length())_$E(10E30_D28,30+$L(D28),99)
	do VP2 quit:VFMQ!verror.get()  set V=$$^%ZD(DUE,"MM")_$$^%ZD(DUE,"DD")_$$^%ZD(DUE,"YY")
	set VL=VL_$J("",278-VL.length())_V
	set VL=VL_$J("",284-VL.length())_$E(10E30_(TPTAMT*100\1),25+$L(TPTAMT*100\1),99)
	set VL=VL_$J("",292-VL.length())_$E(D31,1,1)
	set VL=VL_$J("",293-VL.length())_$E(D32,1,7)
	do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CID,CONAM,D1,D12,D19,D28,D3,D31,D32,D32A,D4,DUE,MADR(),PMET,PROCDATE,RID,RN,TAPDAT=%CurrentTime,TPTAMT,VENDR,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number VLC
	type Public String IO,VL

	use IO
	write VL_$J("",328-VL.length()),!
	set VL="",VLC=VLC+1
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: PROCDATE

	type public String PROCDATE, vrundate

	set PROCDATE = vrundate.piece("/",1)_vrundate.piece("/",2)_vrundate.piece("/",3).extract(3,4)

	quit

VP2	// Column pre-processor - Variable: DUE

	type public String vc7
	type public String DUE
	
	if DUE.get() quit
	
	set DUE = vc7

	quit
