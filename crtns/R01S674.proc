R01S674	// SWIFT305 - Foreign Currency Option Confirmation
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:55 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SWIFT305"
	set RN="Foreign Currency Option Confirmation"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[SWIFT]SWFTDT|||D EXT^DBSQRY||T|Message Transfer Date|||||"
	set %TAB("VIN2")="|255||[SWIFT]TRREFNO|[SWIFT]TRREFNO:DISTINCT:NOVAL||D EXT^DBSQRY||T|Transaction Reference Number|||||"
	set %TAB("VIN3")="|255||[SWIFT]SWDIRECT|[SWIFT]SWDIRECT:DISTINCT||D EXT^DBSQRY||T|SWIFT Direction (Incoming/Outgoing)|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=38
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,MSG,RID,RN,RPNTMSG,SWDIRECT,TRREFNO,VL,VLOF,VRF(),VSTATS(),device,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SWIFT305",RN="Foreign Currency Option Confirmation"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SWIFT305","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[SWIFT]SWFTDT "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[SWIFT]TRREFNO "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[SWIFT]SWDIRECT "_VIN3,SEQ=SEQ+1
		set DQQRY(SEQ)="[SWIFT]MSG=305",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("SWIFT") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Message Transfer Date"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Transaction Reference Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"SWIFT Direction (Incoming/Outgoing)"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Foreign Currency Option Confirmation"
		set VBNRINFO("PGM")="R01S674"
		set VBNRINFO("RID")="SWIFT305"
		set VBNRINFO("TABLES")="SWIFT"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,SWIFT]SWFTDT"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SWIFT]SWDIRECT"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,SWIFT]TRREFNO"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,SWIFT]MSG"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"SWIFT.SWFTDT,SWIFT.SWDIRECT,SWIFT.TRREFNO,SWIFT.MS"
	set VSELECT=VSELECT_"G,SWIFT.NOINT,SWIFT.SNDR,SWIFT.RCVR,SWIFT.PRIORITY"
	set VSELECT=VSELECT_",SWIFT.TRNOFMT,SWIFT.RELREF,SWIFT.CMNREF,SWIFT.FUR"
	set VSELECT=VSELECT_"ID,SWIFT.TDT,SWIFT.EFMDT,SWIFT.EXPYDTL,SWIFT.FSDT,"
	set VSELECT=VSELECT_"SWIFT.STLMNTYP,SWIFT.UCRCDAMT,SWIFT.STRKPRCE,SWIFT"
	set VSELECT=VSELECT_".COCRCDA,SWIFT.PRMPRCE,SWIFT.PRMPMTYP,SWIFT.PRMPMT"
	set VSELECT=VSELECT_"P,SWIFT.SNDRTYPE,SWIFT.SNDCRACC,SWIFT.SNDRCORR,SWI"
	set VSELECT=VSELECT_"FT.SNDRCORR1,SWIFT.SNDRCORR2,SWIFT.SNDRCORR3,SWIFT"
	set VSELECT=VSELECT_".SNDRCORR4,SWIFT.INTSTYPE,SWIFT.INTSACC,SWIFT.INTS"
	set VSELECT=VSELECT_",SWIFT.INTS1,SWIFT.INTS2,SWIFT.INTS3,SWIFT.INTS4,S"
	set VSELECT=VSELECT_"WIFT.ACCSTYPE,SWIFT.ACCSACC,SWIFT.SEND,SWIFT.SEND1"
	set VSELECT=VSELECT_",SWIFT.SEND2,SWIFT.SEND3,SWIFT.SEND4,SWIFT.COND1,S"
	set VSELECT=VSELECT_"WIFT.COND2,SWIFT.COND3,SWIFT.COND4,SWIFT.COND5,SWI"
	set VSELECT=VSELECT_"FT.COND6,SWIFT.BY1,SWIFT.BY2,SWIFT.BY3,SWIFT.BY4,S"
	set VSELECT=VSELECT_"WIFT.BY5,SWIFT.BY6"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"SWIFT",VWHERE,"SWIFT.SWFTDT,SWIFT.SWDIRECT,SWIFT.TRREFNO,SWIFT.MSG","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56
	set vc1=V.piece($C(9),1)			// SWIFT.SWFTDT
	set vc2=V.piece($C(9),2)			// SWIFT.SWDIRECT
	set vc3=V.piece($C(9),3)			// SWIFT.TRREFNO
	set vc4=V.piece($C(9),4)			// SWIFT.MSG
	set vc5=V.piece($C(9),5)			// SWIFT.NOINT
	set vc6=V.piece($C(9),6)			// SWIFT.SNDR
	set vc7=V.piece($C(9),7)			// SWIFT.RCVR
	set vc8=V.piece($C(9),8)			// SWIFT.PRIORITY
	set vc9=V.piece($C(9),9)			// SWIFT.TRNOFMT
	set vc10=V.piece($C(9),10)			// SWIFT.RELREF
	set vc11=V.piece($C(9),11)			// SWIFT.CMNREF
	set vc12=V.piece($C(9),12)			// SWIFT.FURID
	set vc13=V.piece($C(9),13)			// SWIFT.TDT
	set vc14=V.piece($C(9),14)			// SWIFT.EFMDT
	set vc15=V.piece($C(9),15)			// SWIFT.EXPYDTL
	set vc16=V.piece($C(9),16)			// SWIFT.FSDT
	set vc17=V.piece($C(9),17)			// SWIFT.STLMNTYP
	set vc18=V.piece($C(9),18)			// SWIFT.UCRCDAMT
	set vc19=V.piece($C(9),19)			// SWIFT.STRKPRCE
	set vc20=V.piece($C(9),20)			// SWIFT.COCRCDA
	set vc21=V.piece($C(9),21)			// SWIFT.PRMPRCE
	set vc22=V.piece($C(9),22)			// SWIFT.PRMPMTYP
	set vc23=V.piece($C(9),23)			// SWIFT.PRMPMTP
	set vc24=V.piece($C(9),24)			// SWIFT.SNDRTYPE
	set vc25=V.piece($C(9),25)			// SWIFT.SNDCRACC
	set vc26=V.piece($C(9),26)			// SWIFT.SNDRCORR
	set vc27=V.piece($C(9),27)			// SWIFT.SNDRCORR1
	set vc28=V.piece($C(9),28)			// SWIFT.SNDRCORR2
	set vc29=V.piece($C(9),29)			// SWIFT.SNDRCORR3
	set vc30=V.piece($C(9),30)			// SWIFT.SNDRCORR4
	set vc31=V.piece($C(9),31)			// SWIFT.INTSTYPE
	set vc32=V.piece($C(9),32)			// SWIFT.INTSACC
	set vc33=V.piece($C(9),33)			// SWIFT.INTS
	set vc34=V.piece($C(9),34)			// SWIFT.INTS1
	set vc35=V.piece($C(9),35)			// SWIFT.INTS2
	set vc36=V.piece($C(9),36)			// SWIFT.INTS3
	set vc37=V.piece($C(9),37)			// SWIFT.INTS4
	set vc38=V.piece($C(9),38)			// SWIFT.ACCSTYPE
	set vc39=V.piece($C(9),39)			// SWIFT.ACCSACC
	set vc40=V.piece($C(9),40)			// SWIFT.SEND
	set vc41=V.piece($C(9),41)			// SWIFT.SEND1
	set vc42=V.piece($C(9),42)			// SWIFT.SEND2
	set vc43=V.piece($C(9),43)			// SWIFT.SEND3
	set vc44=V.piece($C(9),44)			// SWIFT.SEND4
	set vc45=V.piece($C(9),45)			// SWIFT.COND1
	set vc46=V.piece($C(9),46)			// SWIFT.COND2
	set vc47=V.piece($C(9),47)			// SWIFT.COND3
	set vc48=V.piece($C(9),48)			// SWIFT.COND4
	set vc49=V.piece($C(9),49)			// SWIFT.COND5
	set vc50=V.piece($C(9),50)			// SWIFT.COND6
	set vc51=V.piece($C(9),51)			// SWIFT.BY1
	set vc52=V.piece($C(9),52)			// SWIFT.BY2
	set vc53=V.piece($C(9),53)			// SWIFT.BY3
	set vc54=V.piece($C(9),54)			// SWIFT.BY4
	set vc55=V.piece($C(9),55)			// SWIFT.BY5
	set vc56=V.piece($C(9),56)			// SWIFT.BY6
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public String device,MSG,RPNTMSG,SWDIRECT,TRREFNO
 type String info,TMP
 type Number I

 set RPNTMSG=""
 if 'device.get() quit
 type RecordSWIFT swift=Db.getRecord("SWIFT","SWDIRECT=:SWDIRECT,TRREFNO=:TRREFNO,MSG=:MSG",1)
 set TMP=swift.repntflg
 if device'=$I&TMP do {
	set info=$$^MSG(7406) for I=1:1:9 set RPNTMSG=RPNTMSG_info
	set RPNTMSG=RPNTMSG_"COPY"
 	}
 quit

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %TIM,IOSL,MSG,RPNTMSG,SWDIRECT,TRREFNO,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),device,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="           "_"Deal Number"
	set VL=VL_$J("",36-VL.length())_$E(vc5,1,6)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="           "_"Sender"
	set VL=VL_$J("",36-VL.length())_$E(vc6,1,40)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="           "_"Receiver"
	set VL=VL_$J("",36-VL.length())_$E(vc7,1,40)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="           "_"Message"
	set VL=VL_$J("",36-VL.length())_$E(vc4,1,14)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="           "_"Priority"
	set VL=VL_$J("",36-VL.length())_$E(vc8,1,12)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"20"
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Trans. Reference Number"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc9,1,16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"21"
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Related Reference"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc10,1,16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"22"
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Code/Common Reference"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc11,1,24)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"23 :"
	set VL=VL_$J("",11-VL.length())_"Further Identification  :"
	set VL=VL_$J("",36-VL.length())_$E(vc12,1,16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"30"
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Date Contract Agreed"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc13,1,10)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"O: 31C:"
	set VL=VL_$J("",11-VL.length())_"Earliest Exercise Date  :"
	set VL=VL_$J("",36-VL.length())_$E(vc14,1,10)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M: 31G:  Expiry Details"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc15,1,24)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"O: 31E:"
	set VL=VL_$J("",11-VL.length())_"Final Settlement Date"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc16,1,10)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"26F:"
	set VL=VL_$J("",11-VL.length())_"Settlement Type"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc17,1,9)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"32B:"
	set VL=VL_$J("",11-VL.length())_"Underlying Curr and Amt :"
	set VL=VL_$J("",36-VL.length())_$E(vc18,1,18)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"36"
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Strike Price"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc19,1,12)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"33B:"
	set VL=VL_$J("",11-VL.length())_"Counter Currency and Amt:"
	set VL=VL_$J("",36-VL.length())_$E(vc20,1,18)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"37K:"
	set VL=VL_$J("",11-VL.length())_"Premium Price"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc21,1,18)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"34"
	set VL=VL_$J("",7-VL.length())_$E(vc22,1,1)
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Premium Payment"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc23,1,40)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"O:"
	set VL=VL_$J("",5-VL.length())_"53"
	set VL=VL_$J("",7-VL.length())_$E(vc24,1,1)
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Sender's Correspondent"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc25,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc26,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc27,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc28,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc29,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc30,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"O:"
	set VL=VL_$J("",5-VL.length())_"56"
	set VL=VL_$J("",7-VL.length())_$E(vc31,1,1)
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Intermediary"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc32,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc33,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc34,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc35,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc36,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc37,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"M:"
	set VL=VL_$J("",5-VL.length())_"57"
	set VL=VL_$J("",7-VL.length())_$E(vc38,1,1)
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Account/Institution"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc39,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc40,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc41,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc42,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc43,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc44,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"O: 77D:"
	set VL=VL_$J("",11-VL.length())_"Terms and Conditions"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc45,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc46,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc47,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc48,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc49,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc50,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"O:"
	set VL=VL_$J("",5-VL.length())_"72"
	set VL=VL_$J("",8-VL.length())_":"
	set VL=VL_$J("",11-VL.length())_"Sender/Receiver"
	set VL=VL_$J("",35-VL.length())_":"
	set VL=VL_$J("",36-VL.length())_$E(vc51,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc52,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc53,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc54,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc55,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                    "_$E(vc56,1,35)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,MSG,RID,RN,RPNTMSG,SWDIRECT,TRREFNO,VL,device,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=" "_$E(RPNTMSG,1,80)
	do VOM
	set VL="" do VOM
	set VL=" "_$E(CONAM,1,20)
	set VL=VL_$J("",48-VL.length())_"Run Date:"
	set VL=VL_$J("",58-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",69-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=" "_$E(RN,1,36)
	set VL=VL_$J("",39-VL.length())_$E(RID,1,8)
	set VL=VL_$J("",50-VL.length())_"System:"
	set VL=VL_$J("",58-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",69-VL.length())_"Page:"
	set VL=VL_$J("",75-VL.length())_$J(VPN,3)
	do VOM
	set VL="=============================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
