V00S626(%ProcessMode,RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)   // -  - SID= <UTBLRELMAT1> Customer Relationship Status Matrix 1D
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:39 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,MPAGES,MATRIX",VSID="UTBLRELMAT1",VPGM=$T(+0),VSNAME="Customer Relationship Status Matrix 1D"
 set VFSN("UTBLRELMAT")="zfUTBLREM",VFSN("UTBLRELMAT1")="zfUTBLREL"
 set vPSL=1
 set KEYS(1)=fUTBLREM.MATRIX
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=13 do VPR(.fUTBLREM,.fUTBLREL),VDA1(.fUTBLREM,.fUTBLREL),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fUTBLREM,.fUTBLREL) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLREM,.fUTBLREL),VPR(.fUTBLREM,.fUTBLREL),VDA1(.fUTBLREM,.fUTBLREL)
 if %ProcessMode do VLOD(.fUTBLREM,.fUTBLREL) quit:$G(ER)  do VPR(.fUTBLREM,.fUTBLREL),VDA1(.fUTBLREM,.fUTBLREL)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLREM,.fUTBLREL)
	quit


VNEW(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLREM,.fUTBLREL)
 do VLOD(.fUTBLREM,.fUTBLREL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=13
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL) // Display screen prompts
 set VO="5||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,5,39,1,0,0,0,0,0,0)_"01T Cust. Relationship Status Matrix Name:"
 set VO(2)=$C(2,25,19,1,0,0,0,0,0,0)_"01TMatrix Description:"
 set VO(3)=$C(4,44,11,0,0,0,0,0,0,0)_"01TMore Pages:"
 set VO(4)=$C(6,13,47,0,0,0,0,0,0,0)_"01TCustomer Relationship Status Matrix Maintenance"
 set VO(5)=$C(8,43,6,0,0,0,0,0,0,0)_"01TStatus"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)  // Display screen data
 new V
 s DESC=$G(DESC)
 s MATRIX=$G(MATRIX)
 s MPAGES=$G(MPAGES)
 //
 set VO="9|6|13|0"
 set VO(6)=$C(1,45,12,2,0,0,0,0,0,0)_"01T"_$E(fUTBLREL.MATRIX,1,12)
 set VO(7)=$C(2,45,36,2,0,0,0,0,0,0)_"01T"_$E(fUTBLREM.MATDESC,1,40)
 set VO(8)=$C(4,56,1,2,0,0,0,0,0,0)_"00L"_$S($G(MPAGES):"Y",1:"N")
 set VO(9)=$C(8,6,25,2,0,0,0,0,0,0)_"01T"_$G(DESC)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+3,DY=10 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLREM,.fUTBLREL)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,MATRIX(I))=$G(MATRIX(I))
 
 set V=$P(v1,"|",1) set VO(VX+1)=$C(DY,6,25,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,2))
 set VO(VX+2)=$C(DY,43,2,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",3)
 set DY=DY+1,VX=VX+2
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=4,%MOD=2,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=9+%REPEAT,BLKSIZ=(27*%REPEAT)+78,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLRELMAT",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("UTBLRELMAT")="zfUTBLREM",VFSN("UTBLRELMAT1")="zfUTBLREL"
 //
 for I=7:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,44,12)_"21T12401|1|[UTBLRELMAT1]MATRIX|[UTBLRELMAT]"
 set %TAB(2)=$C(1,44,36)_"21T12401||[UTBLRELMAT]MATDESC|||||||||40"
 set %TAB(3)=$C(3,55,1)_"00L|*MPAGES|[*]@MPAGES|||do VP1^V00S626(.fUTBLREM,.fUTBLREL)"
 set %TAB(4)=$C(7,5,25)_"20T|*DESC|[*]@DESC"
 set %TAB(5)=$C(9,5,25)_"00N12401|*MATRIX(1)|[*]@MATRIX|||do VP2^V00S626(.fUTBLREM,.fUTBLREL)||||2"
 set %TAB(6)=$C(9,42,2)_"00N12403|*MATRIX(1)|[*]@MATRIX1|||do VP3^V00S626(.fUTBLREM,.fUTBLREL)|do VP4^V00S626(.fUTBLREM,.fUTBLREL)|||0"
 do VTBL(.fUTBLREM,.fUTBLREL)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordUTBLRELMAT fUTBLREM
 type Public RecordUTBLRELMAT1 fUTBLREL
 do VSPP1(.fUTBLREM,.fUTBLREL)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)
	type String TI
	set TI=""
	for  set TI=MATRIX(TI).order() quit:TI.isNull()  do {  quit:ER
		if MATRIX(TI).piece("|",1)?1"-".N1".".N!(MATRIX(TI).piece("|",1)?.N1".".N) set MATRIX(TI).piece("|",1)=+MATRIX(TI).piece("|",1)
 	 }
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL) //
 if %O=0,X set %PAGE=%PAGE+1
 
 if %O=1,X set %PAGE=%PAGE+1
 
 quit
 
VP2(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL) //
 type String  DEC1,DEC2,I,TBL,DI,TYP,DEC,R

 if X="" do DELETE^DBSMACRO("@MATRIX1","1","0")
 if X-V=0 quit

 set R=""
 set DEC1=STBL.piece("|",2)
 if DEC1="" set DEC1=STBL.piece("|",3)
 if 'DEC1.isNull() do {
 	set TBL=DEC1.piece(".",1)
    	set DI=DEC1.piece(".",2)
    	type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS='SYSDEV', FID=:TBL,DI=:DI",1)
    	set TYP=dbtbl1d.typ
    	if TYP="$" do {
        	set DEC=$$LOAD^SCARND(%CRCD,.dp)
            if X?.N1".".N set X=$$^SCARND(X,DEC)
            if X?.N set X=$$^SCARND(+X,,,%CRCD,0)
         }
   else  if X?.N!(X?.N1".".N) set X=$$^SCARND(+X,,,%CRCD,0) quit
   }
 for I=1:1 set R=MATRIX(R).order() do { quit:R
	 if MATRIX(R).piece("|",1)=X set ER=1 quit
	 if ER set RM=$$^MSG(7609) quit
  }
VP3(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL) //
 if X="",'(MATRIX(z1).piece("|",1))=""  set ER=1,RM=$$^MSG(741) quit
VP4(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL) //
 set I(3)="[UTBLRELSTAT]RELCODE,[UTBLRELSTAT]RELDESC"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLRELMAT fUTBLREM
 type Public RecordUTBLRELMAT1 fUTBLREL
 do VPR(.fUTBLREM,.fUTBLREL)
 do VDA1(.fUTBLREM,.fUTBLREL)
 do ^DBSPNT()
 quit

VW(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)
 do VDA1(.fUTBLREM,.fUTBLREL)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)
 do VDA1(.fUTBLREM,.fUTBLREL)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLRELMAT fUTBLREM
 type Public RecordUTBLRELMAT1 fUTBLREL
 do VDA1(.fUTBLREM,.fUTBLREL)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLRELMAT fUTBLREM
 if sn="UTBLRELMAT" do vSET1(.fUTBLREM,di,X)
 type Public RecordUTBLRELMAT1 fUTBLREL
 if sn="UTBLRELMAT1" do vSET2(.fUTBLREL,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLRELMAT fUTBLREM,di,X)
 do fUTBLREM.setAuditFlag(1)
 set fUTBLREM.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLRELMAT1 fUTBLREL,di,X)
 do fUTBLREL.setAuditFlag(1)
 set fUTBLREL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLRELMAT fUTBLREM
 if fid="UTBLRELMAT" quit $$vREAD1(.fUTBLREM,di)
 type Public RecordUTBLRELMAT1 fUTBLREL
 if fid="UTBLRELMAT1" quit $$vREAD2(.fUTBLREL,di)
 quit ""
vREAD1(RecordUTBLRELMAT fUTBLREM,di)
 quit fUTBLREM.@di
vREAD2(RecordUTBLRELMAT1 fUTBLREL,di)
 quit fUTBLREL.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT1 fUTBLREL)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type Public String MATRIX,STBL
 type String ITEM
 set MATRIX=NAME
 type RecordUTBLRELMAT utblrelmat=Db.getRecord("UTBLRELMAT","NAME",1)
 set ITEM=utblrelmat.rowatt
 type RecordSTBLRELATT stblrelatt=Db.getRecord("STBLRELATT","ITEM",1)
 set DESC=stblrelatt.attdesc
 set STBL=stblrelatt.attdesc_"|"_stblrelatt.depdi_"|"_stblrelatt.lndi
 if %O=0 set %O=1
 set MPAGES=0
 if ('MATRIX(%MODS).get()=""),('MATRIX(%MODS+%REPEAT-1).get()="") 
   do {
    type String R
    set R=""
    set R=MATRIX(R).order(-1)
    if 'R="" set %PAGE= $$^SCARND(R/%REPEAT,,,,0,"+")
    if ('MATRIX(%MODS+%REPEAT-1).get()=""),R="",(%PAGE-%PG)=1 set %PAGE=%PAGE-1
    }
 if MATRIX(%MODS+%REPEAT-1).get()="" set %PAGE=%PG quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
