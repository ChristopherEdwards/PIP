public SWRTTRMV
	/*
	   ORIG: 	YANGR - 05/19/94
	   DESC: 	SWIFT Message Relocating Routine
	   	Remove message from anyone queue to another.
	   	There are four cases considered:
	   	1. From a non-date queue to a non-date queue
	   	2. From a non-date queue to a dated queue
	   	3. From a dated queue to a non-date queue
	   	4. From a dated queue to a dated queue
	   	There are a total of six queues:RTT(d), PND, REP, CMP(d), TLX(d), REV

	---- Revision History ------------------------------------------------

	01/11/06 - ratht - CR 18292
		   Modified section VPG00 to add do ACT statement.Modified 
		   section ACT to change eftpay.save()to eftpay.bypassSave() 
		   
	09/26/05 - KUMARB - CR 17050
		   Modified section VPG00, removed comma after DESC in the 
		   lookup table. Modified the look up for %TAB("SEQ") in 
		   section VPG00.
		   
	09/07/05 - KELLYP - CR 17118
		   Removed references to the MT100 message type which was
		   obsoleted by SWIFT.  Also removed pre-2003 revision history.
	  
	01/12/04 - RussellDS - CR 7514
		   Replaced use of table SWIFTTMP (obsoleted) and SWRTTRMV
		   (obsoleted) with the single table TMPRPT1.

	----------------------------------------------------------------------
	*/

	do MAIN
	
	quit

MAIN	//
	new menulist

	// Relocate,Quit
	set menulist=$$^MSG(3400)

	// set to display mode
	set %ProcessMode=2
	do INIT

	quit


INIT	//
	new VFMQ,OLNTB
	set ER=0
	set PID=%ProcessID

	do VPG00

	quit


VPG00	//set up
	new %TAB

	set %TAB("FROMQ")=".FROMQ/TBL=[STBLSWQNAM]KEY,DESC/XPP=D CHECKFR^SWRTTRMV"
	set %TAB("TOQ")=".TOQ/TBL=[STBLSWQNAM]KEY,DESC/XPP=D CHECKTO^SWRTTRMV"
	set %TAB("IO")=$$IO^SCATAB($I)
	set %READ="@@%FN,,FROMQ,,TOQ"
	set %NOPRMT="F"

	do ^UTLREAD

	// No Queue Relocation Performed
	if "Q"[VFMQ set ER="W" set RM=$$^MSG(7359) quit

	// init for new prompt
	kill %TAB,%READ

	// To build the temparary file TMPRPT1
	do MOVEFROM(FROMQ)

	set %TAB("SEQ")=".SEQ7/TBL=[TMPRPT1]KEY1:QU ""[TMPRPT1]PID=<<PID>>""/REQ"
	set %TAB("IO")=$$IO^SCATAB($I)

	// Now prompt for SEQ for swift REP queue
	set %READ="SEQ,"
	set %NOPRMT="N"

	// Set prompt position on the screen LLCCC
	set OLNTB=06030

	do ^UTLREAD

	if VFMQ="Q" do ACT quit

	// Set up current swiftq record for action (modify or quit)	
	type RecordTMPRPT1 tmprpt1=Db.getRecord("TMPRPT1","PID=:%ProcessID,KEY1=:SEQ")

	set SWDATE=tmprpt1.data.curVal.piece("|",1)
	set TRREFNO=tmprpt1.data.curVal.piece("|",2)
	set MSG=tmprpt1.data.curVal.piece("|",3)
	set QUESEQ=tmprpt1.data.curVal.piece("|",4)

	// lock the record before the change.
	// Record locked by another user
	lock +SWIFT("OUT",TRREFNO,MSG):2 else  set ER=1 set RM=$$^MSG(2333) set VFMQ="Q" do ACT quit

	// Record locked by another user
	lock +SWIFTQ(FROMQ):2 else  do { quit
		set ER=1
		set RM=$$^MSG(2333)
		lock -SWIFT("OUT",TRREFNO,MSG):2
		}
	do ACT
	quit

ACT

	// No message relocation performed
	if "Q"[VFMQ do { quit
		if 'ER!'RM do {
			set ER="W"
	 		set RM=$$^MSG(7357)
			}
		do Db.delete("TMPRPT1","PID=:%ProcessID")
		}

	// for another locking
	if ER quit

	type RecordSWQCNTD fSWQCNTD
	type RecordSWQCNT fSWQCNT

	type RecordSWIFT fSWIFT=Db.getRecord("SWIFT","SWDIRECT='OUT',TRREFNO=:TRREFNO,MSG=:MSG")

	if "DF"[VFMQ do {

		// display to-be-deleted swift message
		do DISPLAY(TRREFNO,MSG,.fSWIFT)

 		// No queue relocation performed
		if "Q"[VFMQ do { quit
			set ER="W"
			set RM=$$^MSG(7359)
			do Db.delete("TMPRPT1","PID=:%ProcessID")
			}
	
		set NEWSTAT=$S(TOQ="RTT":0,TOQ="PND":1,TOQ="REP":2,TOQ="CMP":3,TOQ="REV":6,TOQ="TLX":7,1:"")

		do fSWIFT.setAuditFlag(1)

		// update to new del status
		set fSWIFT.status=NEWSTAT

		// update to new response date
		set fSWIFT.date=%SystemDate
		set %ProcessMode=1

		// modify swift related files
		do fSWIFT.save()

		// find source EFTPAY
		type RecordEFTREF eftref=Db.getRecord("EFTREF","REFNO=:TRREFNO",1)
		if eftref.getMode() do {
			set cid=eftref.cid
			set seq=eftref.seq

			type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID=:cid,SEQ=:seq")
			if MSG=103 set eftpay.msg103dt=%SystemDate
			if MSG=202 set eftpay.msg202dt=%SystemDate
			do eftpay.bypassSave()
			}

		// find source DEAL1
		else  do {
			set noint=fSWIFT.noint
			if noint="" quit
			type RecordDEAL1 deal1=Db.getRecord("DEAL1","NOINT=:noint")
			if MSG=202 set deal1.msg202dt=%SystemDate
			if MSG=210 set deal1.msg210dt=%SystemDate
			if MSG=300 set deal1.msg300dt=%SystemDate
			do deal1.save()
			}

		if ((FROMQ="RTT")!(FROMQ="TLX")) do {

			// kill from DATED que
			do Db.delete("SWIFTQ1","QUE=:FROMQ AND DT=:SWDATE AND SEQ=:QUESEQ AND TRREFNO=:TRREFNO AND TYPE=:MSG")

			// decrease total num in FROMQ que
			set fSWQCNTD=Db.getRecord("SWQCNTD","QUE=:FROMQ,DT=:SWDATE")
			set fSWQCNTD.tot=fSWQCNTD.tot-1
			do fSWQCNTD.bypassSave()
			}

		if ((FROMQ="PND")!(FROMQ="REP")!(FROMQ="REV")) do {

			// kill from NON-DATED que
			do Db.delete("SWIFTQ2","QUE=:FROMQ AND SEQ=:QUESEQ AND TRREFNO=:TRREFNO AND TYPE=:MSG")	

			// decrease total num in FROMQ que
			set fSWQCNT=Db.getRecord("SWQCNT","QUE=:FROMQ")
			set fSWQCNT.ptoday=fSWQCNT.ptoday-1
			do fSWQCNT.bypassSave()
			}

		if ((TOQ="RTT")!(TOQ="CMP")!(TOQ="TLX")) do MOVETOD(.fSWIFT,TOQ)
		if ((TOQ="PND")!(TOQ="REP")!(TOQ="REV")) do MOVETON(TOQ)

		do Db.delete("TMPRPT1","PID=:%ProcessID")

		// ~p1 ~p2 relocated from ~p3 queue to ~p4 queue
		set ER="W"
		set RM=$$^MSG(7361,TRREFNO,MSG,FROMQ,TOQ)
		}

	// unlock the record
	lock -SWIFT("OUT",TRREFNO,MSG)
	lock -SWIFTQ(FROMQ)
	quit


MOVETON(TOQ)	//

	/* case1 relocate msg from non-date que to non-date que.
	   From: PND,REP,REV To: PND,REP,REV
	*/

	type RecordSWQCNT fSWQCNT

	// set up counter
	set fSWQCNT=Db.getRecord("SWQCNT","QUE=:TOQ",1)
	set fSWQCNT.nseq=fSWQCNT.nseq+1
	set fSWQCNT.tot=fSWQCNT.tot+1
	set fSWQCNT.ptoday=fSWQCNT.ptoday+1

	// set the next sequence
	set QSEQ=fSWQCNT.nseq
	do fSWQCNT.save()

	type RecordSWIFTQ2 SWIFTQ2=Db.getRecord("SWIFTQ2","QUE=:TOQ,SEQ=:QSEQ,TRREFNO=:TRREFNO,TYPE=:MSG",1)
	do SWIFTQ2.bypassSave()
	quit


MOVETOD(RecordSWIFT fSWIFT,TOQ)	//

	/*
	  case2 relocate msg from non-date que to dated que
	  From: PND,REP,REV To: RTT,CMP,TLX
	  if TOQ="CMP", DATE is set to TJD
	  if TOQ="RTT" or "TLX",DATE is set to [SWIFT]SWFTDT
	*/

	type RecordSWQCNTD fSWQCNTD
	set SWDATE=fSWIFT.swftdt

	set fSWQCNTD=Db.getRecord("SWQCNTD","QUE=:TOQ,DT=:SWDATE",1)
	set fSWQCNTD.nseq=fSWQCNTD.nseq+1
	set fSWQCNTD.tot=fSWQCNTD.tot+1
	set fSWQCNTD.ptoday=fSWQCNTD.ptoday+1

	set QSEQ=fSWQCNTD.nseq
	do fSWQCNTD.save()

	type RecordSWIFTQ1 SWIFTQ1=Db.getRecord("SWIFTQ1","QUE=:TOQ,DT=:SWDATE,SEQ=:QSEQ,TRREFNO=:TRREFNO,TYPE=:MSG",1)
	do SWIFTQ1.bypassSave()
	quit


MOVEFROM(FROMQ)	//

	/*
	  Build the temporary file TMPRPT1
	  in order to display the complete list of messages in FROMQ
	  $J is the processor ID,TMPRPT1 can only be delete by the owner.

	*/

	// clear tmp file
	do Db.delete("TMPRPT1","PID=:%ProcessID")

	// init temp global sequence number
	set SEQ=0

	// DATE element exists
	if ((FROMQ="RTT")!(FROMQ="TLX")) do {
		type ResultSet rs=Db.select("DT,SEQ,TRREFNO,TYPE","SWIFTQ1","QUE=:FROMQ")
		while rs.next() do {
			set SWDATE=rs.getCol("DT")
			set QUESEQ=rs.getCol("SEQ")
			set TRREFNO=rs.getCol("TRREFNO")
			set MSG=rs.getCol("TYPE")
			set SEQ=SEQ+1

			type RecordTMPRPT1 tmprpt1=Db.getRecord("TMPRPT1","PID=:%ProcessID,KEY1=:SEQ",1)
			set tmprpt1.pid=%ProcessID
			set tmprpt1.key1=SEQ
			set tmprpt1.data=SWDATE_"|"_TRREFNO_"|"_MSG_"|"_QUESEQ

			do tmprpt1.bypassSave()
			}
		}

	// No DATE element
	if ((FROMQ="PND")!(FROMQ="REP")!(FROMQ="REV")) do {
		type ResultSet rs=Db.select("SEQ,TRREFNO,TYPE","SWIFTQ2","QUE=:FROMQ")
		while rs.next() do {
			set QUESEQ=rs.getCol("SEQ")
			set TRREFNO=rs.getCol("TRREFNO")
			set MSG=rs.getCol("TYPE")

			set SEQ=SEQ+1
			type RecordTMPRPT1 tmprpt1=Db.getRecord("TMPRPT1","PID=:%ProcessID,KEY1=:SEQ",1)
			set tmprpt1.pid=%ProcessID
			set tmprpt1.key1=SEQ
			set tmprpt1.data="|"_TRREFNO_"|"_MSG_"|"_QUESEQ

			do tmprpt1.bypassSave()
			}
		}

	quit


DISPLAY(TRREFNO,MSG,RecordSWIFT fSWIFT)		//Display the swift message with SWIFT(SWDIRECT,TRREFNO,MSG)

	// currently out server only deals with out msg
	set SWDIRECT="OUT"

	set SID=$S(MSG="103":"MT103DRV",MSG="202":"MT202DRV",MSG="210":"MT210",MSG="300":"MT300DRV",MSG="200":"MT200DRV",MSG="192":"MT192DRV",MSG="292":"MT292DRV",1:"MT199PG1")

	set %ProcessMode=2

	// with SWDIRECT,TRREFNO,MSG, display the swift message.

	do DRV^USID(%ProcessMode,SID,.fSWIFT)

	set VFMQ=$$^DBSMBAR(1007)

	if VFMQ="" set VFMQ="Q" quit 
	set VFMQ=$E($P(menulist,",",VFMQ))

	quit


CHECKFR	// check "from queue" name
	set RM=""

	// No message should be moved from ~p1 queue (CMP or REC)
	if (X="CMP")!(X="REC")!(X="PRC") set ER=1,RM=$$^MSG(7358,X)
	quit


CHECKTO	// check "to queue" name
	set RM=""

	// To queue may not be From queue
	if X=FROMQ set ER=1,RM=$$^MSG(7360)
	quit

vSIG()	quit "60276^26327^Tarini Charan Rath^8513"	// Signature - LTD^TIME^USER^SIZE
