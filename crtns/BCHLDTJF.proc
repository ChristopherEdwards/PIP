BCHLDTJF //Batch BCHLETDTJFM - Account Maintenance Letters
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/08/2007 19:13 - spatola
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHLETDTJFM Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHLETDTJFM")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHLETDTJFM") quit
 do JOBMGR^BCHUTL(%FN,"BCHLETDTJFM",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHLETDTJFM")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(TJD,CLS,GRP,TYP,CID,TSEQ) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHLETDTJFM","*","",TJD.get()_","_CLS.get()_","_GRP.get()_","_TYP.get()_","_CID.get()_","_TSEQ.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHLETDTJFM",TJD.get()_","_CLS.get()_","_GRP.get()_","_TYP.get()_","_CID.get()_","_TSEQ.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHLETDTJFM",TJD.get()_","_CLS.get()_","_GRP.get()_","_TYP.get()_","_CID.get()_","_TSEQ.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,TJD,CLS,GRP,TYP,CID,TSEQ)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHLETDTJFM","*","",TJD.get()_","_CLS.get()_","_GRP.get()_","_TYP.get()_","_CID.get()_","_TSEQ.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHLETDTJFM",TJD.get()_","_CLS.get()_","_GRP.get()_","_TYP.get()_","_CID.get()_","_TSEQ.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,TJD,CLS,GRP,TYP,CID,TSEQ) //
	//Already Defined TJD,CLS,GRP,TYP,CID,TSEQ
	
	type Number ACN,AMT,PHSEQ,TYPE,STP3,STP4,STP5,SEQ	
	type String ACH,CO,CHKHI
	
	type RecordDTJFM dtjfm=Db.getRecord("DTJFM","TJD=:TJD,CLS=:CLS,GRP=:GRP,TYP=:TYP,CID=:CID,TSEQ=:TSEQ",1)
	
	set ACH=dtjfm.ach,AMT=dtjfm.amt,CHKHI=dtjfm.chkhi,PHSEQ=dtjfm.phseq
	if ACH set SEQ=dtjfm.stp5
		else  if AMT set SEQ=dtjfm.stp4
		else  if CHKHI set SEQ=dtjfm.stp3
		else  if PHSEQ set SEQ=PHSEQ
    	else SEQ=""
        
	type RecordACN dACN= Db.getRecord("ACN","CID=:CID",1)
	set ACN=dACN.acn

	set CO=$$GETCO^LETTERU(ACN,CID)
		
	set TYPE=TYP

	do DTJFM^LETTRIG

	quit

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,TJD,CLS,GRP,TYP,CID,TSEQ
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set TJD=vRECORD.piece($C(9),1)
 set CLS=vRECORD.piece($C(9),2)
 set GRP=vRECORD.piece($C(9),3)
 set TYP=vRECORD.piece($C(9),4)
 set CID=vRECORD.piece($C(9),5)
 set TSEQ=vRECORD.piece($C(9),6)
 do vPROC(TJD,CLS,GRP,TYP,CID,TSEQ)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,TJD,CLS,GRP,TYP,CID,TSEQ
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+48>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
	type public Date FORMTJD
	type Date XTJD
	
	set XTJD=FORMTJD.get(%SystemDate-1)

 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("TJD,CLS,GRP,TYP,CID,TSEQ","DTJFM","TJD=:XTJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	type Date LETTJD
	
	set LETTJD=%SystemDate

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
