CUSNOTPR	
	/*
	   ----Revision History-------------------------------------------------

	11/17/05 - Hillanbrand - CR18189
		   Corrected %PSL-E-RECNOFL error in REM^CUSNOTPR by adding the
		   ClassNew parameter of 1 to instantiate the record.  Also changed
		   coding using deprecated features throughout.

        07/27/05 - SkariahV- CR16679
	           Removed #WARN and #OPTIMIZE directives.
	
	09/07/04 - KELLYP - CR 11982
		   Replaced references to RELACN with RELCIF.  RELACN is an index 
		   and should not be directly referenced.  The RELACN table was also 
		   obsoleted from the M database.  Also modified this procedure to
		   bring it in line with current PSL standards.

	09/22/00 - Terrie Dougherty - 42063
		   Modified runtime routine name to be CUSNOTPR rather than
		   CUSNOTP. This procedure is called by procedure LNCUSNOT.		   

	01/04/00 - DOUGANM - 31126
		   %SystemDate couldn't be used directly in Db.select statement,
		   so variable XTJD was used to store it.

	07/22/99 - DUJ - 33890
		   Converted M code to PSL.
		
	   ---------------------------------------------------------------------
	
	   This procedure definition is called by processing needed for the Hire
	   Purchase Notices.
	*/

	quit 
	
Public UID(String XSRC,String XKEY)	// Back Office UID for Custom Notice

	type RecordUTBLSRC utblsrc=Db.getRecord("UTBLSRC","XSRC,XKEY")

	quit utblsrc.uid

Public NDES(String XCUSTNOT,String XCAT)	// Notice Description

	set XCAT=XCAT.extract(4)

	type RecordUTBLCUSNOT utblcusnot=Db.getRecord("UTBLCUSNOT","XCUSTNOT,XCAT")

	quit utblcusnot.desc

Public FEE(Number CID,Date EFD,String BIL,Number AMT,String ELMNT)	// Calculate Postage Fee - Called from Fee Plan

	type Public Number TAMT

	type Date XTJD
	type Number COUNT,RELAMT
	type String XCAT,XNOTICE
	
	set (COUNT,RELAMT)=0
	
	/*
	   Dayend Loan Fee processing is processing this fee. There should be 
	   a dayend notice for this date that generated this fee.
	*/
	set XTJD=%SystemDate
	type ResultSet rs=Db.select("KEY","LNDELNDA","CID=:CID AND EFD=:XTJD AND KEY LIKE '%LND%'") 
	if rs.isEmpty() quit RELAMT
	if rs.next() set XCAT=rs.getCol(1).extract(4)
	
	type RecordLN ln=Db.getRecord("LN","CID=:CID",1)
	set XNOTICE=ln.custnot
	
	type RecordUTBLCUSNOT utblcusnot=Db.getRecord("UTBLCUSNOT","XNOTICE,XCAT",1)
	/*
	   If flag to charge postage fee per each related customer, take TAMT 
	   from LNFEECMP and multiply the fee amount by each related customer.
	*/
	if utblcusnot.chgrcif do {
		// 11982 - Replaced RELACN with RELCIF
		type ResultSet rs=Db.select("ACN","RELCIF","CID=:CID") 
		if rs.isEmpty() quit
		while rs.next()  set COUNT=COUNT+1  

		set RELAMT=(COUNT-1)*TAMT
		}
	quit RELAMT

Public REM(Number CID,Date EFD)	// See if temporary reminder file exist.
	
	if CID.isNull() quit 
	if EFD.isNull() quit
	
	type RecordLNDELREM lndelrem=Db.getRecord("LNDELREM","EFD,CID",1)
	
	if lndelrem.cat do FILE(EFD,lndelrem.cat,CID)

	quit 
	
Public FILE(Date EFD,String KEY,Number CID)	// Use Filer for triggers

	type String LND
	
	if EFD.isNull() quit 
	if KEY.isNull() quit
	if CID.isNull() quit 
	
	set LND="LND"_KEY
	
	type RecordLNDELNDA lndelnda=Db.getRecord("LNDELNDA","EFD,LND,CID",1)
	do lndelnda.save()
	
	quit 

Public DELREM(Date EFD,Number RCAT,Number CID)
	/*
	   Get existing entries in dayend notice files and delete.
	*/

	type Date XEFD
	
	if EFD.isNull() quit 
	if CID.isNull() quit
	if RCAT.isNull() quit

	type ResultSet rs=Db.select("EFD","LNDELREM","CID=:CID AND EFD>:EFD AND CAT=:RCAT") 
	if rs.isEmpty() quit
	while rs.next()  do { 
		set XEFD=rs.getCol(1)
		do Db.delete("LNDELREM","CID=:CID AND EFD=:XEFD") quit 
		}
	quit

Public DELNOT(Date EFD,Number RCAT,Number CID)	
	/*
	   Get existing entries in dayend notice files and delete.
	*/

	type Date XEFD
	type String XCAT
	
	if EFD.isNull() quit
	if CID.isNull() quit
	if RCAT.isNull() quit
	
	set XCAT="LND"_RCAT
	
	type ResultSet rs=Db.select("EFD","LNDELNDA","CID=:CID AND KEY=:XCAT AND EFD>:EFD") 
	if rs.isEmpty() quit
	while rs.next()  do {
		set XEFD=rs.getCol(1)
		do Db.delete("LNDELNDA","CID=:CID AND EFD=:XEFD AND KEY=:XCAT")
		}
	quit

vSIG()	quit "60221^60793^Laura Hillanbrand^3974"	// Signature - LTD^TIME^USER^SIZE
