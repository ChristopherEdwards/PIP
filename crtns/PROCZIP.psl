PROCZIP
	/*
	-------------Revision History------------------------------------
	
	03/15/07 - RengaSP - CR 25952
		   Modified Section CA to check the first letter of ZIP code
		   must match with valid postal code range.

	09/08/06 - KumarSS - CR 22169
		   Removed the references of deprecated Db.getOneRow 
		   method and replaced with Db.getRecord method.
		   Replaced unnecessary local variables with 
		   table.column notation.
		   Added code to validate ZIP code against the third 
		   postal code range.

	07/31/06 - KELLYP - CR 22048
		   Modified ZIP section to eliminate DEAD warning.

	05/02/05 - SWARNALATHAP - 13769
		   Modified section ZIP to throw the valid errors when the
		   STATE contains only two not null zip codes and four not
		   null zip codes in STBLCNTRY1.
	
	-----------------------------------------------------------------
	LIBRARY:
		. ZIP      - Validate postal/zip code
	*/

	quit


public ZIP(String CNTRY,		// Country Code
           String STATE,		// State Code
           String ZIP)			// ZIP / Postal Code

	/*
	Validate postal/zip code format
		
	ARGUMENTS:
	   . CNTRY	Country Code		/TYP=T/REQ/MECH=VAL
	   . STATE	State Code		/TYP=T/REQ/MECH=VAL
	   . ZIP	Zip / Postal Code	/TYP=T/REQ/MECH=VAL
	
	RETURNS:
	   . ER		Error flag
	   . RM		Error message
	*/

	type public Boolean ER
	type public String RM

	// Zip Code Verification
	if CNTRY.get() = "" quit
	if STATE.get() = "" quit
	
	set ER = 0
	
	type RecordSTBLCNTRY scntry = Db.getRecord("STBLCNTRY", "CNTRY = :CNTRY", 1)

	if 'scntry.getMode() do { quit

		set ER = 1
		// Invalid country code
		set RM = $$^MSG(1485, CNTRY)
		}

	if CNTRY' = "US" do FOREIGN(CNTRY, STATE, ZIP) quit 
	// All Other Locations - nothing to check
	if STATE = "MY" quit

	// Pattern check NNNNN or NNNNN-NNNN
	if '(ZIP?5N ! (ZIP?5N1"-"4N)) do { quit

 		set ER = 1 
 		//Invalid pattern match
		set RM = $$^MSG(1420)_" ZIP "_ZIP
		}
			
	// Zip code range
	type RecordSTBLCNTRY1 scntry1 = Db.getRecord("STBLCNTRY1", "CNTRY = ""US"", STATE = :STATE", 1)

	if 'scntry1.getMode() do { quit

		set ER = 1
		// Invalid state code
		set RM = $$^MSG(1054)
		}

	if scntry1.postvalid1 = "" ! (scntry1.postvalid2 = "") quit
	// In zip code range
	if ZIP '< scntry1.postvalid1, ZIP '> scntry1.postvalid2 quit
        
	if scntry1.postvalid3 = "" ! (scntry1.postvalid4 = "") do { quit

		set ER = 1
		// Invalid zip code - Valid ZIP code range for ~p1 is ~p2 - ~p3
		set RM = $$^MSG(2918, STATE, scntry1.postvalid1, scntry1.postvalid2)
		}

	// In zip code range
	if ZIP '< scntry1.postvalid3, ZIP '> scntry1.postvalid4 quit
	
	if scntry1.postvalid5 = "" ! (scntry1.postvalid6 = "") do { quit

		set ER = 1
		// Invalid zip code - Valid ZIP code range for ~p1 is ~p2 - ~p3 and ~p4 - p5
		set RM = $$^MSG(4971, STATE, scntry1.postvalid1, scntry1.postvalid2, scntry1.postvalid3, scntry1.postvalid4)
		}

	// In zip code range
	if ZIP '< scntry1.postvalid5, ZIP '> scntry1.postvalid6 quit

	set ER = 1
	// Invalid zip code - Valid postal code range for ~p1 is ~p2, ~p3 and ~p4
	set RM = $$^MSG(5960, STATE, scntry1.postvalid1_" - "_scntry1.postvalid2, scntry1.postvalid3_" - "_scntry1.postvalid4, scntry1.postvalid5_" - "_scntry1.postvalid6)

	quit


FOREIGN(String CNTRY,				// Country Code
        String STATE,				// State Code
        String ZIP)				// Zip / Postal Code

	//Foreign country ZIP codes

	// Portugal
	if CNTRY = "PT" do PT(ZIP) quit
	// Canada
	if CNTRY = "CA" do CA(CNTRY, STATE, ZIP) quit

	quit 


PT(String ZIP)					// Zip / Postal Code

	// Portugal (pattern NNNN)

	type public Boolean ER
	type public String RM

	if ZIP'?4N do {

		set ER = 1
		//Enter 4-digit code
		set RM = $$^MSG(910)
		}

	quit


CA(String CNTRY,				// Country Code
   String STATE,				// State Code
   String ZIP)					// Zip / Postal Code

	// Canada (pattern ANA NAN)

	type public Boolean ER
	type public String RM
	
	type Boolean MATCH=0
	type Number i

	// Invalid format ~p1
	if '(ZIP?1A1N1A1" "1N1A1N) do Runtime.setErrMSG("STBLCNTRY1",1350,ZIP) quit:ER
		
        // Province code
	type RecordSTBLCNTRY1 scntry1 = Db.getRecord("STBLCNTRY1", "CNTRY = ""CA"", STATE = :STATE", 1)
	
	// Province unknown	
	if 'scntry1.getMode() do Runtime.setErrMSG("STBLCNTRY1",2280) quit:ER
		
	/*
	The first letter of the postal code must match one of the codes
	assigned to the province entered by the user.
	*/
	for i = 1:1 do { quit:scntry1.postvalid1.piece(",",i) = ""

		if ZIP.extract() = scntry1.postvalid1.piece(",", i) set MATCH = 1 quit
		}
		
	// First letter must be ~p1
	if 'MATCH do Runtime.setErrMSG("STBLCNTRY1",1116,scntry1.postvalid1) quit:ER
		
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60704^48540^Renga SP^4435"	// Signature - LTD^TIME^USER^SIZE
