V01S041(%ProcessMode,RecordEFTPAY fEFTPAY,RecordDEP DEP)   // -  - SID= <INTRVWHQ20> Int'l Payment (In) HQ Screen 2
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:55 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="INTRVWHQ20",VPGM=$T(+0),VSNAME="Int'l Payment (In) HQ Screen 2"
 set VFSN("DEP")="zDEP",VFSN("EFTPAY")="zfEFTPAY"
 set vPSL=1
 set KEYS(1)=DEP.CID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fEFTPAY,.DEP),VDA1(.fEFTPAY,.DEP),^DBSPNT()

 // Display Pre-Processor
 //
 if '%ProcessMode do VNEW(.fEFTPAY,.DEP),VDSPPRE(.fEFTPAY,.DEP) quit:$G(ER)  do VPR(.fEFTPAY,.DEP),VDA1(.fEFTPAY,.DEP)
 if %ProcessMode do VLOD(.fEFTPAY,.DEP) quit:$G(ER)  do VDSPPRE(.fEFTPAY,.DEP) quit:$G(ER)  do VPR(.fEFTPAY,.DEP),VDA1(.fEFTPAY,.DEP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEFTPAY,.DEP)
	quit


VNEW(RecordEFTPAY fEFTPAY,RecordDEP DEP) // Initialize arrays if %O=0
 
 do VDEF(.fEFTPAY,.DEP)
 do VLOD(.fEFTPAY,.DEP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordEFTPAY fEFTPAY,RecordDEP DEP)
 if fEFTPAY.DATECRE="" set fEFTPAY.DATECRE=TJD
 if fEFTPAY.TIMECRE="" set fEFTPAY.TIMECRE=$P($H,",",2)
 if fEFTPAY.UID="" set fEFTPAY.UID=%UID
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordEFTPAY fEFTPAY,RecordDEP DEP) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEFTPAY fEFTPAY,RecordDEP DEP) // Display screen prompts
 set VO="38||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,8,16,0,0,0,0,0,0,0)_"01T Account Number:"
 set VO(2)=$C(2,51,10,0,0,0,0,0,0,0)_"01T Sequence:"
 set VO(3)=$C(3,4,20,0,0,0,0,0,0,0)_"01T Tran Reference Nbr:"
 set VO(4)=$C(3,53,8,0,0,0,0,0,0,0)_"01T Status:"
 set VO(5)=$C(5,4,20,1,0,0,0,0,0,0)_"01T Customer Reference:"
 set VO(6)=$C(5,43,18,0,0,0,0,0,0,0)_"01T Date of Creation:"
 set VO(7)=$C(6,7,17,1,0,0,0,0,0,0)_"01T Fee Calc Method:"
 set VO(8)=$C(6,45,16,0,0,0,0,0,0,0)_"01T Payment Origin:"
 set VO(9)=$C(7,6,18,1,0,0,0,0,0,0)_"01T Margin/Rate Code:"
 set VO(10)=$C(7,45,16,1,0,0,0,0,0,0)_"01T Conversion Fee:"
 set VO(11)=$C(8,8,16,1,0,0,0,0,0,0)_"01T Payment Method:"
 set VO(12)=$C(8,41,20,0,0,0,0,0,0,0)_"01TOriginal Pmt Amount:"
 set VO(13)=$C(9,4,20,1,0,0,0,0,0,0)_"01T Charge Detail (71):"
 set VO(14)=$C(9,42,19,0,0,0,0,0,0,0)_"01TReceiver's Charges:"
 set VO(15)=$C(10,6,18,1,0,0,0,0,0,0)_"01T Payment Currency:"
 set VO(16)=$C(10,45,16,1,0,0,0,0,0,0)_"01T Payment Amount:"
 set VO(17)=$C(11,12,12,1,0,0,0,0,0,0)_"01T DS1 Symbol:"
 set VO(18)=$C(11,50,11,0,0,0,0,0,0,0)_"01TFee Amount:"
 set VO(19)=$C(12,12,12,1,0,0,0,0,0,0)_"01T DS2 Symbol:"
 set VO(20)=$C(12,45,16,0,0,0,0,0,0,0)_"01TConv Fee Amount:"
 set VO(21)=$C(13,7,17,1,0,0,0,0,0,0)_"01T Constant Symbol:"
 set VO(22)=$C(13,44,17,0,0,0,0,0,0,0)_"01TPayment Returned:"
 set VO(23)=$C(14,5,19,1,0,0,0,0,0,0)_"01T Internal/External:"
 set VO(24)=$C(14,43,18,0,0,0,0,0,0,0)_"01TOriginal Sequence:"
 set VO(25)=$C(15,4,20,0,0,0,0,0,0,0)_"01TSettlement Currency:"
 set VO(26)=$C(16,4,20,0,0,0,0,0,0,0)_"01T Receiver Corr (54):"
 set VO(27)=$C(16,46,15,1,0,0,0,0,0,0)_"01T Debit Account:"
 set VO(28)=$C(17,10,14,1,0,0,0,0,0,0)_"01T Payment Date:"
 set VO(29)=$C(17,44,17,1,0,0,0,0,0,0)_"01T Settlement Date:"
 set VO(30)=$C(19,14,52,2,0,0,0,0,0,0)_"01T-- Anticipated Credit Amount (Account's Currency) --"
 set VO(31)=$C(20,4,20,0,0,0,0,0,0,0)_"01T Account's Currency:"
 set VO(32)=$C(20,46,15,0,0,0,0,0,0,0)_"01TPayment Amount:"
 set VO(33)=$C(21,6,18,0,0,0,0,0,0,0)_"01TAvailable Balance:"
 set VO(34)=$C(21,50,11,0,0,0,0,0,0,0)_"01TFee Amount:"
 set VO(35)=$C(22,3,21,0,0,0,0,0,0,0)_"01TApprox Exchange Rate:"
 set VO(36)=$C(22,39,22,0,0,0,0,0,0,0)_"01TConversion Fee Amount:"
 set VO(37)=$C(23,2,22,0,0,0,0,0,0,0)_"01T Actual Exchange Rate:"
 set VO(38)=$C(23,43,18,0,0,0,0,0,0,0)_"01TAnticipated Total:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordEFTPAY fEFTPAY,RecordDEP DEP)  // Display screen data
 new V
 //
 set VO="81|39|13|0"
 set VO(39)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID(%FN))
 set VO(40)=$C(2,25,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.CID
 set VO(41)=$C(2,62,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.SEQ
 set VO(42)=$C(3,25,14,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.REFNO,1,14)
 set VO(43)=$C(3,62,3,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.STATUS,1,3)
 set VO(44)=$C(3,66,12,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.STATDSC,1,12)
 set VO(45)=$C(5,25,16,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.RELREFNO,1,16)
 set VO(46)=$C(5,62,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fEFTPAY.DATECRE)
 set VO(47)=$C(6,25,12,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.FEETYPE,1,12)
 set VO(48)=$C(6,62,1,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.ORIGIN,1,1)
 set VO(49)=$C(7,25,12,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CCODE,1,12)
 set VO(50)=$C(7,62,1,2,0,0,0,0,0,0)_"00L"_$S(fEFTPAY.FEECONV:"Y",1:"N")
 set VO(51)=$C(8,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.MET,1,10)
 set V=$S(fEFTPAY.SWORGAMT="":"",1:$J(fEFTPAY.SWORGAMT,0,2)) set VO(52)=$C(8,62,15,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.SWORGAMT="":"",1:$J(fEFTPAY.SWORGAMT,0,2))
 set VO(53)=$C(8,78,3,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.ORIGCRCD,1,3)
 set VO(54)=$C(9,25,3,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.FEEPAYOR,1,3)
 set V=$S(fEFTPAY.RCVRCHG="":"",1:$J(fEFTPAY.RCVRCHG,0,2)) set VO(55)=$C(9,62,15,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.RCVRCHG="":"",1:$J(fEFTPAY.RCVRCHG,0,2))
 set VO(56)=$C(9,78,3,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.RCVRCHGC,1,3)
 set VO(57)=$C(10,25,3,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CRCD,1,3)
 set V=$S(fEFTPAY.AMOUNT="":"",1:$J(fEFTPAY.AMOUNT,0,2)) set VO(58)=$C(10,62,15,2,0,0,0,0,0,0)_"00$"_$S(fEFTPAY.AMOUNT="":"",1:$J(fEFTPAY.AMOUNT,0,2))
 set VO(59)=$C(11,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CONSNDPO,1,10)
 set V=$S(fEFTPAY.FEEAMT="":"",1:$J(fEFTPAY.FEEAMT,0,2)) set VO(60)=$C(11,62,12,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.FEEAMT="":"",1:$J(fEFTPAY.FEEAMT,0,2))
 set VO(61)=$C(11,75,3,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.FEECRCD,1,3)
 set VO(62)=$C(12,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.VARNDPO,1,10)
 set V=$S(fEFTPAY.FEEAMT2="":"",1:$J(fEFTPAY.FEEAMT2,0,2)) set VO(63)=$C(12,62,12,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.FEEAMT2="":"",1:$J(fEFTPAY.FEEAMT2,0,2))
 set VO(64)=$C(12,75,3,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.FEECRCD2,1,3)
 set VO(65)=$C(13,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CONSTANT,1,10)
 set VO(66)=$C(13,62,1,2,0,0,0,0,0,0)_"00L"_$S(fEFTPAY.RTRNFLG:"Y",1:"N")
 set VO(67)=$C(14,25,1,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.INTEXT,1,1)
 set VO(68)=$C(14,62,12,2,0,0,0,0,0,0)_"00N"_fEFTPAY.ORIGSEQ
 set VO(69)=$C(15,25,1,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.SETCRCD,1,1)
 set VO(70)=$C(16,25,12,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.SENDCORR,1,12)
 set VO(71)=$C(16,62,12,2,0,0,0,0,0,0)_"00N"_fEFTPAY.SENDNOS
 set VO(72)=$C(17,25,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fEFTPAY.PROCDT)
 set VO(73)=$C(17,62,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fEFTPAY.EFD)
 set VO(74)=$C(20,25,3,2,0,0,0,0,0,0)_"01T"_$E(DEP.CRCD,1,3)
 set V=$S(fEFTPAY.ANTAMT="":"",1:$J(fEFTPAY.ANTAMT,0,2)) set VO(75)=$C(20,62,15,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.ANTAMT="":"",1:$J(fEFTPAY.ANTAMT,0,2))
 set VO(76)=$C(21,25,15,2,0,0,0,0,0,0)_"01$"_$S(DEP.BALAVL="":"",1:$J(DEP.BALAVL,0,2))
 set V=$S(fEFTPAY.ANTFEE1="":"",1:$J(fEFTPAY.ANTFEE1,0,2)) set VO(77)=$C(21,65,12,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.ANTFEE1="":"",1:$J(fEFTPAY.ANTFEE1,0,2))
 set V=$S(fEFTPAY.ANTRATE="":"",1:$J(fEFTPAY.ANTRATE,0,6)) set VO(78)=$C(22,25,12,2,0,0,0,0,0,0)_"00N"_$S(fEFTPAY.ANTRATE="":"",1:$J(fEFTPAY.ANTRATE,0,6))
 set V=$S(fEFTPAY.ANTFEE2="":"",1:$J(fEFTPAY.ANTFEE2,0,2)) set VO(79)=$C(22,65,12,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.ANTFEE2="":"",1:$J(fEFTPAY.ANTFEE2,0,2))
 set V=$S(fEFTPAY.RATE="":"",1:$J(fEFTPAY.RATE,0,6)) set VO(80)=$C(23,25,12,2,0,0,0,0,0,0)_"01N"_$S(fEFTPAY.RATE="":"",1:$J(fEFTPAY.RATE,0,6))
 set V=$S(fEFTPAY.ANTTOTAL="":"",1:$J(fEFTPAY.ANTTOTAL,0,2)) set VO(81)=$C(23,62,15,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.ANTTOTAL="":"",1:$J(fEFTPAY.ANTTOTAL,0,2))
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordEFTPAY fEFTPAY,RecordDEP DEP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=42,VPT=1,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="EFTPAY,DEP"
 set OLNTB=23062
 
 set VFSN("DEP")="zDEP",VFSN("EFTPAY")="zfEFTPAY"
 //
 // 
	
	
 set %TAB(1)=$C(1,24,12)_"21N12401|1|[EFTPAY]CID"
 set %TAB(2)=$C(1,61,12)_"21N12402|1|[EFTPAY]SEQ|[EFTPAY]"
 set %TAB(3)=$C(2,24,14)_"20T12404|1|[EFTPAY]REFNO|||||||||20"
 set %TAB(4)=$C(2,61,3)_"20T12412|1|[EFTPAY]STATUS|[STBLESTAT]"
 set %TAB(5)=$C(2,65,12)_"20T12400|*STATDSC|[EFTPAY]STATDSC|||||||||15"
 set %TAB(6)=$C(4,24,16)_"01T12403|1|[EFTPAY]RELREFNO"
 set %TAB(7)=$C(4,61,10)_"20D12430|1|[EFTPAY]DATECRE"
 set %TAB(8)=$C(5,24,12)_"01T12402|1|[EFTPAY]FEETYPE|[EFTFEE]"
 set %TAB(9)=$C(5,61,1)_"20T12418|1|[EFTPAY]ORIGIN|[STBLEFTORG]"
 set %TAB(10)=$C(6,24,12)_"01T12448|1|[EFTPAY]CCODE|[UTBLCC]||do VP1^V01S041(.fEFTPAY,.DEP)"
 set %TAB(11)=$C(6,61,1)_"00L12429|1|[EFTPAY]FEECONV"
 set %TAB(12)=$C(7,24,10)_"01T12413|1|[EFTPAY]MET|[STBLPAYMET]"
 set %TAB(13)=$C(7,61,15)_"20$12403|1|[EFTPAY]SWORGAMT|||||||2"
 set %TAB(14)=$C(7,77,3)_"20T12404|1|[EFTPAY]ORIGCRCD"
 set %TAB(15)=$C(8,24,3)_"01T12416|1|[EFTPAY]FEEPAYOR|[STBLFEEPAYOR]"
 set %TAB(16)=$C(8,61,15)_"20$12412|1|[EFTPAY]RCVRCHG|||||||2"
 set %TAB(17)=$C(8,77,3)_"20T12413|1|[EFTPAY]RCVRCHGC"
 set %TAB(18)=$C(9,24,3)_"01T12404|1|[EFTPAY]CRCD|[CRCD]:QU ""[CRCD]CO=<<%CO>>""||do VP2^V01S041(.fEFTPAY,.DEP)"
 set %TAB(19)=$C(9,61,15)_"01$12403|1|[EFTPAY]AMOUNT|||do VP3^V01S041(.fEFTPAY,.DEP)||||2"
 set %TAB(20)=$C(10,24,10)_"01T12446|1|[EFTPAY]CONSNDPO|[UTBLFOREX]"
 set %TAB(21)=$C(10,61,12)_"20$12428|1|[EFTPAY]FEEAMT|||||||2"
 set %TAB(22)=$C(10,74,3)_"20T12427|1|[EFTPAY]FEECRCD"
 set %TAB(23)=$C(11,24,10)_"01T12447|1|[EFTPAY]VARNDPO|[STBLCNTRY]"
 set %TAB(24)=$C(11,61,12)_"20$12431|1|[EFTPAY]FEEAMT2|||||||2"
 set %TAB(25)=$C(11,74,3)_"20T12430|1|[EFTPAY]FEECRCD2"
 set %TAB(26)=$C(12,24,10)_"01T12406|1|[EFTPAY]CONSTANT|[UTBLECOACT]"
 set %TAB(27)=$C(12,61,1)_"00L12401|1|[EFTPAY]RTRNFLG"
 set %TAB(28)=$C(13,24,1)_"01T12434|1|[EFTPAY]INTEXT|,0#Internal - Vostro Account,1#External - Nostro Account"
 set %TAB(29)=$C(13,61,12)_"00N12402|1|[EFTPAY]ORIGSEQ"
 set %TAB(30)=$C(14,24,1)_"00T12401|1|[EFTPAY]SETCRCD|[STBLEURSC]||do VP4^V01S041(.fEFTPAY,.DEP)"
 set %TAB(31)=$C(15,24,12)_"00T12435|1|[EFTPAY]SENDCORR|[UTBLCORRE]"
 set %TAB(32)=$C(15,61,12)_"01N12424|1|[EFTPAY]SENDNOS|||do VP5^V01S041(.fEFTPAY,.DEP)|do VP6^V01S041(.fEFTPAY,.DEP)"
 set %TAB(33)=$C(16,24,10)_"01D12417|1|[EFTPAY]PROCDT|||do VP7^V01S041(.fEFTPAY,.DEP)"
 set %TAB(34)=$C(16,61,10)_"01D12408|1|[EFTPAY]EFD|||do VP8^V01S041(.fEFTPAY,.DEP)"
 set %TAB(35)=$C(19,24,3)_"20T12412|1|[DEP]CRCD|[CRCD]"
 set %TAB(36)=$C(19,61,15)_"20$12410|1|[EFTPAY]ANTAMT|||||||2"
 set %TAB(37)=$C(20,24,15)_"20$12400|*BALAVL|[DEP]BALAVL|||||||2"
 set %TAB(38)=$C(20,64,12)_"20$12422|1|[EFTPAY]ANTFEE1|||||||2"
 set %TAB(39)=$C(21,24,12)_"00N12401|1|[EFTPAY]ANTRATE|||do VP9^V01S041(.fEFTPAY,.DEP)||||6"
 set %TAB(40)=$C(21,64,12)_"20$12423|1|[EFTPAY]ANTFEE2|||||||2"
 set %TAB(41)=$C(22,24,12)_"20N12434|1|[EFTPAY]RATE|||||||6"
 set %TAB(42)=$C(22,61,15)_"20$12432|1|[EFTPAY]ANTTOTAL|||||||2"
 do VTBL(.fEFTPAY,.DEP)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordEFTPAY fEFTPAY,RecordDEP DEP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type String UDRC,X
 
 // Retrieve user-defined rate code
 set UDRC=CUVAR.udrc
 
 if (X'=UDRC)!(fEFTPAY.TTYPE'<2) do PROTECT^DBSMACRO("EFTPAY.ANTRATE")
 if (X=UDRC),(fEFTPAY.TTYPE<2) do UNPROT^DBSMACRO("EFTPAY.ANTRATE")
 
 quit
VP2(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type Boolean EMUMEM
 type Date PROCDT,VALDT
 type Number SENDNOS
 type String SCDFT,SENDCORR,VARNDPO
 
 type public Boolean ER
 type public String %CO,X,V
 
 if V'=X set X=V do Runtime.setErrMSG("EFTPAY",8308) quit
 
 // If invalid currency, then quit
 type RecordCRCD crcd=Db.getRecord("CRCD","CO=:%CO,CRCD=:X",1)
 if 'crcd.getMode() quit
 set EMUMEM=crcd.emu
 
 // Validate currency and default payment currency related fields
 set VARNDPO=fEFTPAY.VARNDPO
 do CRCDIP^PROCEFT(X,.fEFTPAY)
 if ER quit
 if fEFTPAY.VARNDPO'=VARNDPO do DEFAULT^DBSMACRO("EFTPAY.VARNDPO",VARNDPO)
 
 // Default settlement currency flag
 // Settlement currency must equal 0 for a non-In currency.
 if EMUMEM=1 do {
 	set SCDFT=CUVAR.scdft
 	if fEFTPAY.SETCRCD="" do DEFAULT^DBSMACRO("EFTPAY.SETCRCD",+SCDFT)
 	}
 else  do DEFAULT^DBSMACRO("EFTPAY.SETCRCD",0)
 
 // Default SENDNOS & SENDCORR.
 set SENDNOS=fEFTPAY.SENDNOS
 set SENDCORR=fEFTPAY.SENDCORR
 do NOSIP^PROCEFT(.fEFTPAY)
 if ER quit

 if fEFTPAY.SENDNOS'=SENDNOS do DEFAULT^DBSMACRO("EFTPAY.SENDNOS",SENDNOS)
 if fEFTPAY.SENDCORR'=SENDCORR do DEFAULT^DBSMACRO("EFTPAY.SENDCORR",SENDCORR)
 
 // Default PROCDT & EFD.
 set PROCDT=fEFTPAY.PROCDT
 set VALDT=fEFTPAY.EFD
 do DATIP^PROCEFT(X,fEFTPAY.EFTTYPE,fEFTPAY.SENDCORR,.PROCDT,.VALDT)
 if ER quit
 
 if fEFTPAY.PROCDT'=PROCDT do DEFAULT^DBSMACRO("EFTPAY.PROCDT",PROCDT)
 if fEFTPAY.EFD'=VALDT do DEFAULT^DBSMACRO("EFTPAY.EFD",VALDT)
 
 quit
VP3(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type Number AAMT,ACNF,AFEE,ARTE,BALAVL,CNVAMT,FEEAMT
 type String CNVCRCD,FEECRCD
 
 type public Boolean ER
 type public Number X,V
 type public String RM
 
 if +V'=+X set X=V do Runtime.setErrMSG("EFTPAY",8307) quit
 
 // Calculate fees and anticipated amounts associated with the incoming
 // foreign payment (XEFTFCALC uses EFTPAY short name array)
 set fEFTPAY.AMOUNT=X
 do XEFTFCALC^EFTFCALC(.fEFTPAY,.FEEAMT,.FEECRCD,.CNVAMT,.CNVCRCD,.AAMT,.ARTE,.AFEE,.ACNF)
 if ER quit
 
 do DEFAULT^DBSMACRO("EFTPAY.FEEAMT",$$^SCARND(FEEAMT,0,,FEECRCD))
 do DEFAULT^DBSMACRO("EFTPAY.FEECRCD",FEECRCD)
 do DEFAULT^DBSMACRO("EFTPAY.FEEAMT2",$$^SCARND(CNVAMT,0,,CNVCRCD))
 do DEFAULT^DBSMACRO("EFTPAY.FEECRCD2",CNVCRCD)
 do DEFAULT^DBSMACRO("EFTPAY.ANTAMT",AAMT)
 do DEFAULT^DBSMACRO("EFTPAY.ANTFEE1",AFEE)
 do DEFAULT^DBSMACRO("EFTPAY.ANTFEE2",ACNF)
 do DEFAULT^DBSMACRO("EFTPAY.ANTRATE",ARTE)
 do DEFAULT^DBSMACRO("EFTPAY.ANTTOTAL",fEFTPAY.ANTAMT-fEFTPAY.ANTFEE1-fEFTPAY.ANTFEE2)
 
 // Don't calculate payment account's available balance for GLs
 if fEFTPAY.TTYPE'<2 quit
 
 // Calculate payment account's available balance.
 set BALAVL=$$TOTBALAVL^EFTFUNCS(fEFTPAY.CID)
 if ER quit
 
 set BALAVL=BALAVL+fEFTPAY.ANTTOTAL
 do DEFAULT^DBSMACRO("@BALAVL",BALAVL)
 
 quit
VP4(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type Boolean EMUMEM
 type String CO,CRCD
 type public Number X
 
 set CO=CUVAR.co
 set CRCD=fEFTPAY.CRCD
 type RecordCRCD crcd=Db.getRecord("CRCD","CO=:CO,CRCD=:CRCD",1)
 set EMUMEM=crcd.emu
 if X="" quit
 if X=1,EMUMEM'=1 do Runtime.setErrMSG("CRCD",3604) quit
VP5(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type Date PROCDT,VALDT
 type String SENDCORR
 
 type public Boolean ER
 type public Number X
 
 if X="" quit
 if X=fEFTPAY.CID do Runtime.setErrMSG("EFTPAY",7754) quit
 
 // Default SENDCORR
 set SENDCORR=fEFTPAY.SENDCORR
 do NOSIP^PROCEFT(.fEFTPAY)
 if ER quit
 
 if fEFTPAY.SENDCORR'=SENDCORR do DEFAULT^DBSMACRO("EFTPAY.SENDCORR",SENDCORR)
 
 // Validate SENDNOS and SENDCORR
 do NOSCHECK^PROCEFT(.fEFTPAY)
 if ER quit
 
 // Default PROCDT & EFD.
 set PROCDT=fEFTPAY.PROCDT
 set VALDT=fEFTPAY.EFD
 do DATIP^PROCEFT(fEFTPAY.CRCD,fEFTPAY.EFTTYPE,fEFTPAY.SENDCORR,.PROCDT,.VALDT)
 if ER quit
 
 if fEFTPAY.PROCDT'=PROCDT do DEFAULT^DBSMACRO("EFTPAY.PROCDT",PROCDT)
 
 if fEFTPAY.EFD'=VALDT do DEFAULT^DBSMACRO("EFTPAY.EFD",VALDT)
 
 quit
VP6(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type String CRCD
 type Number SETCRCD

 // Reset currency to EMU currency if SETCRCD=1
 set CRCD=fEFTPAY.CRCD
 set SETCRCD=fEFTPAY.SETCRCD
 if SETCRCD=1 set CRCD=CUVAR.emucrcd
 
 if fEFTPAY.INTEXT=0 do CHANGE^DBSMACRO("TBL","[DEP]")
 if fEFTPAY.INTEXT'=0 do CHANGE^DBSMACRO("TBL","[DEP]CORRE,[DEP]CRCD:QU ""[DEP]CRCD="_CRCD_"""")

 quit
VP7(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type Date VALDT
 
 type public Boolean ER
 type public Number X
 
 // Validate PROCDT
 do DATCHK^PROCEFT(1,X,fEFTPAY.SENDCORR)
 if ER quit
 
 // Default EFD
 set VALDT=fEFTPAY.EFD
 do DATIP^PROCEFT(fEFTPAY.CRCD,fEFTPAY.EFTTYPE,fEFTPAY.SENDCORR,X,.VALDT)
 if ER quit
 if fEFTPAY.EFD'=VALDT do DEFAULT^DBSMACRO("EFTPAY.EFD",VALDT)
 
 quit
VP8(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type public Boolean ER
 type public Number X
 
 // Settlement date cannot be less than payment date
 if X<fEFTPAY.PROCDT do Runtime.setErrMSG("EFTPAY",7542) quit
 
 // Validate EFD
 do DATCHK^PROCEFT(0,X,fEFTPAY.SENDCORR) quit:ER
 
 quit
VP9(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 type Number AAMT,ACNF,AFEE,ARTE,BALAVL,CNVAMT,FEEAMT
 type String CNVCRCD,FEECRCD,UDRC
 
 type public Boolean ER
 type public Number X
 
 if X="" quit
 
 // Retrieve user-defined rate code
 set UDRC=CUVAR.udrc
 if fEFTPAY.CCODE'=UDRC quit
 
 if (DEP.CRCD=fEFTPAY.CRCD),(X'=1) do Runtime.setErrMSG("EFTPAY",8306) quit
 
 // Calculate fees and anticipated amounts associated with the incoming
 // foreign payment (XEFTFCALC uses EFTPAY short name array)
 set fEFTPAY.ANTRATE=X
 do XEFTFCALC^EFTFCALC(.fEFTPAY,.FEEAMT,.FEECRCD,.CNVAMT,.CNVCRCD,.AAMT,.ARTE,.AFEE,.ACNF)
 if ER quit
 
 do DEFAULT^DBSMACRO("EFTPAY.FEEAMT",$$^SCARND(FEEAMT,0,,FEECRCD))
 do DEFAULT^DBSMACRO("EFTPAY.FEECRCD",FEECRCD)
 do DEFAULT^DBSMACRO("EFTPAY.FEEAMT2",$$^SCARND(CNVAMT,0,,CNVCRCD))
 do DEFAULT^DBSMACRO("EFTPAY.FEECRCD2",CNVCRCD)
 do DEFAULT^DBSMACRO("EFTPAY.ANTAMT",AAMT)
 do DEFAULT^DBSMACRO("EFTPAY.ANTFEE1",AFEE)
 do DEFAULT^DBSMACRO("EFTPAY.ANTFEE2",ACNF)
 do DEFAULT^DBSMACRO("EFTPAY.ANTRATE",ARTE)
 do DEFAULT^DBSMACRO("EFTPAY.ANTTOTAL",fEFTPAY.ANTAMT-fEFTPAY.ANTFEE1-fEFTPAY.ANTFEE2)
 
 // Don't calculate payment account's available balance for GLs
 if fEFTPAY.TTYPE'<2 quit
 
 // Calculate payment account's available balance.
 set BALAVL=$$TOTBALAVL^EFTFUNCS(fEFTPAY.CID)
 if ER quit
 
 set BALAVL=BALAVL+fEFTPAY.ANTTOTAL
 do DEFAULT^DBSMACRO("@BALAVL",BALAVL)
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEFTPAY fEFTPAY
 type Public RecordDEP DEP
 do VPR(.fEFTPAY,.DEP)
 do VDA1(.fEFTPAY,.DEP)
 do ^DBSPNT()
 quit

VW(RecordEFTPAY fEFTPAY,RecordDEP DEP)
 do VDA1(.fEFTPAY,.DEP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEFTPAY fEFTPAY,RecordDEP DEP)
 do VDA1(.fEFTPAY,.DEP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEFTPAY fEFTPAY
 type Public RecordDEP DEP
 do VDA1(.fEFTPAY,.DEP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordEFTPAY fEFTPAY
 if sn="EFTPAY" do vSET1(.fEFTPAY,di,X)
 type Public RecordDEP DEP
 if sn="DEP" do vSET2(.DEP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordEFTPAY fEFTPAY,di,X)
 do fEFTPAY.setAuditFlag(1)
 set fEFTPAY.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordDEP DEP,di,X)
 do DEP.setAuditFlag(1)
 set DEP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordEFTPAY fEFTPAY
 if fid="EFTPAY" quit $$vREAD1(.fEFTPAY,di)
 type Public RecordDEP DEP
 if fid="DEP" quit $$vREAD2(.DEP,di)
 quit ""
vREAD1(RecordEFTPAY fEFTPAY,di)
 quit fEFTPAY.@di
vREAD2(RecordDEP DEP,di)
 quit DEP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VDSPPRE(RecordEFTPAY fEFTPAY,RecordDEP DEP)  // Display Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type public Number BALAVL
 
 if (BALAVL.get()=""),(fEFTPAY.TTYPE<2) set BALAVL=fEFTPAY.ANTTOTAL+$$TOTBALAVL^EFTFUNCS(fEFTPAY.CID)
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
