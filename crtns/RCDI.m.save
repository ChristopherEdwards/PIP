RCDI	;
	;
	; **** Routine compiled from DATA-QWIK Procedure RCDI ****
	;
	; 06/04/2007 20:51 - joynerd
	;
	;
	D INIT Q:ER 
	D PROC
	;
	D ^TTXP1
	Q 
	;
PROC	; Processing
	;
	; Set up error trapping
	;
	N $ZT S $ZT="D ZX^UCGMR("_+$O(vobj(""),-1)_","_$ZL_",""vtrap1^"_$T(+0)_""")"
	D EXEC(TJD)
	Q 
	;
	;
EXEC(EFD)	; Load account information, verify that we need to cap this account
	; then build a TTX entry, update FPA and DIU , file it.
	;
	; Set up account array
	N ln S ln=$$vDb1(CID)
	 S vobj(ln,51)=$G(^ACN(vobj(ln,-3),51))
	 S vobj(ln,49)=$G(^ACN(vobj(ln,-3),49))
	 S vobj(ln,54)=$G(^ACN(vobj(ln,-3),54))
	 S vobj(ln,58)=$G(^ACN(vobj(ln,-3),58))
	 S vobj(ln,57)=$G(^ACN(vobj(ln,-3),57))
	N proddftl,vop1,vop2 S vop1=$P(vobj(ln,50),$C(124),1),proddftl=$$vDb4(vop1)
	 S vop2=$G(^UTBLDFTL(vop1,49))
	;
	I '$P(vobj(ln,51),$C(124),11) K vobj(+$G(ln)) Q 
	;
	I '(($P(vobj(ln,50),$C(124),4))="") S PCM=$P(vobj(ln,49),$C(124),28) E  S PCM=$P(vop2,$C(124),28)
	;
	; its not one that we want to cap in this routine
	I PCM'="2N" K vobj(+$G(ln)) Q 
	; nothing to cap
	I $P(vobj(ln,54),$C(124),1)'>0 K vobj(+$G(ln)) Q 
	; not set to defer/cap
	I $P(vobj(ln,58),$C(124),47)'=1 K vobj(+$G(ln)) Q 
	; Define variables
	S TYPE=$P(vobj(ln,50),$C(124),1)
	S DIU=$P(vobj(ln,57),$C(124),14)
	S BAL=$P(vobj(ln,51),$C(124),1)
	S DITGACN=$P(vobj(ln,57),$C(124),33)
	D TRANAMT(.ln)
	I TAMT>0 D FPADIU(.ln)
	;
	K vobj(+$G(ln)) Q 
	;
TRANAMT(ln)	;Calculate Transaction Amount (TAMT)
	 S:'$D(vobj(ln,54)) vobj(ln,54)=$S(vobj(ln,-2):$G(^ACN(vobj(ln,-3),54)),1:"")
	;
	S TAMT=$J(($P(vobj(ln,54),$C(124),1)),0,0)
	Q:TAMT'>0 
	I (TRND(TYPE)="") D TRANSET
	D FILETTX($S(DITGACN:DITGACN,1:CID),$piece(TRND(TYPE),"|",1),$piece(TRND(TYPE),"|",2))
	D FILETTX(CID,$piece(TRNC(TYPE),"|",1),$piece(TRNC(TYPE),"|",2))
	S TRC=((TRC\1000)+1)*1000
	Q 
	;
FPADIU(ln)	;
	; Move the amount being capitalized into [LN]FPA and [LN]DIU
	; and file to the account.
	;
	 S:'$D(vobj(ln,57)) vobj(ln,57)=$S(vobj(ln,-2):$G(^ACN(vobj(ln,-3),57)),1:"")
	S vobj(ln,-100,57)="",$P(vobj(ln,57),$C(124),14)=$P(vobj(ln,57),$C(124),14)+TAMT
	 S:'$D(vobj(ln,101)) vobj(ln,101)=$S(vobj(ln,-2):$G(^ACN(vobj(ln,-3),101)),1:"")
	S vobj(ln,-100,101)="",$P(vobj(ln,101),$C(124),13)=TAMT
	N vTp S vTp=0 S:($Tlevel=0) vTp=1 Tstart:vTp (vobj):transactionid="CS" D ^LNFILE(ln,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/",1) K vobj(ln,-100) S vobj(ln,-2)=1 Tcommit:vTp  
	Q 
	;
	;
	;-----------------------------------------------------------------------
FILETTX(CID,ETC,ITC)	; Create ^TTX entry
	;-----------------------------------------------------------------------
	;
	S T=CID_"|"_ITC_"|"_ETC_"|"_TAMT_"|"_EFD_"|"_TLO
	S T=T_"||Def Int Cap|"_$P($H,",",1)_"|"_$P($H,",",2)_"|"
	;
	I CRCD'="",CRCD'=%CRCD S $piece(T,"|",17)=CRCD
	I '$E(CTL,1) S SEQ=($order(TR(""),-1)+1) S TR(SEQ)=T D EXEC^TRNDRV
	I $E(CTL,1) D
	.	;
	.	S TRC=TRC+1
	.	N ttx,vop1,vop2,vop3,vop4,vop5 S vop4=TJD,vop3=BRCD,vop2=UID,vop1=TRC,ttx=$$vDb5(TJD,BRCD,UID,TRC,.vop5)
	. S $P(ttx,$C(124),1)=CID
	. S $P(ttx,$C(124),2)=ITC
	. S $P(ttx,$C(124),3)=ETC
	. S $P(ttx,$C(124),4)=TAMT
	. S $P(ttx,$C(124),5)=EFD
	. S $P(ttx,$C(124),6)=TLO
	. S $P(ttx,$C(124),8)="Def Int Cap"
	. S $P(ttx,$C(124),9)=$P($H,",",1)
	. S $P(ttx,$C(124),10)=$P($H,",",2)
	. S $P(ttx,$C(124),17)=CRCD
	. N vTp S vTp=0 S:($Tlevel=0) vTp=1 Tstart:vTp (vobj):transactionid="CS" S ^TTX(vop4,vop3,vop2,vop1)=$$RTBAR^%ZFUNC(ttx) S vop5=1 Tcommit:vTp  
	.	;
	.	Q 
	;
	Q 
	;
EXC	; Log error in exception file
	;
	S DESC="Deferred Interest Capitalization|1"
	D LOG^UTLEXC($T(+0),"*","Deferred Interest Capitalization|1",$get(CID),$get(%ZTSEQ),$get(ET),$S($get(CID):BAL,1:""))
	K ET,%ZTSEQ
	Q 
	;
INIT	; Initialize transaction file data
	;
	N rs,vos1,vos2 S rs=$$vOpen1()
	I $$vFetch1() S BRCD=$P(rs,$C(9),1) S %UID=$P(rs,$C(9),2)
	; Interest capitalization teller not defined
	I '$L((BRCD_%UID)) S ER=1 S RM=$$^MSG("1249") Q 
	N rs1,vos3,vos4,vos5,vos6,vos7 S rs1=$$vOpen2()
	S TRC=rs1\((1000+1)*1000)
	D ^TTXLOK I ER,'(ET="") S ET="TTXLOK" D EXC Q 
	Q 
	;
TRANSET	; Find capitalization tran codes
	;
	N rs,vos1,vos2,vos3,vos4 S rs=$$vOpen3()
	I $$vFetch3() D
	.	S DRTRNA=$P(rs,$C(9),1)
	.	S CRTRNA=$P(rs,$C(9),2)
	.	Q 
	N rs1,vos5,vos6,vos7 S rs1=$$vOpen4()
	N rs2,vos8,vos9,vos10 S rs2=$$vOpen5()
	S TRND(TYPE)=DRTRNA_"|"_rs1
	S TRNC(TYPE)=CRTRNA_"|"_rs2
	Q 
	;
	;  #OPTION ResultClass ON
vSIG()	;
	Q "60670^61826^Balasubramonian Sankar^5991" ; Signature - LTD^TIME^USER^SIZE
	;
vDb1(v1)	;	vobj()=Db.getRecord(LN,,0)
	;
	N vOid
	S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordLN"
	S vobj(vOid,50)=$G(^ACN(v1,50))
	I '($P(vobj(vOid,50),$C(124),2)="L")
	S vobj(vOid,-2)=1
	I $T K vobj(vOid) S $ZS="-1,"_$ZPOS_",%PSL-E-RECNOFL" X $ZT
	S vobj(vOid,-3)=v1
	Q vOid
	;
vDb4(v1)	;	voXN = Db.getRecord(PRODDFTL,,0)
	;
	N proddftl
	S proddftl=$G(^UTBLDFTL(v1,50))
	I proddftl="",'$D(^UTBLDFTL(v1,50))
	I $T S $ZS="-1,"_$ZPOS_",%PSL-E-RECNOFL" X $ZT
	Q proddftl
	;
vDb5(v1,v2,v3,v4,v2out)	;	voXN = Db.getRecord(TTX,,1,-2)
	;
	N ttx
	S ttx=$G(^TTX(v1,v2,v3,v4))
	I ttx="",'$D(^TTX(v1,v2,v3,v4))
	S v2out='$T
	;
	Q ttx
	;
vOpen1()	;	BRCD,UID FROM UTBLSRC WHERE SRCTYP='BOFF' AND KEY='NEGAM'
	;
	;
	S vos1=2
	D vL1a1
	Q ""
	;
vL1a0	S vos1=0 Q
vL1a1	I '($D(^UTBL("SRC","BOFF","NEGAM"))#2) G vL1a0
	Q
	;
vFetch1()	;
	;
	;
	I vos1=0 Q 0
	;
	S vos1=100
	S vos2=$G(^UTBL("SRC","BOFF","NEGAM"))
	S rs=$P(vos2,"|",2)_$C(9)_$P(vos2,"|",3)
	S vos1=0
	;
	Q 1
	;
vOpen2()	;	TSEQ FROM TTX WHERE TJD=:TJD AND BRCD=:BRCD AND UID=:%UID ORDER BY TSEQ DESC
	;
	;
	S vos3=2
	D vL2a1
	Q ""
	;
vL2a0	S vos3=0 Q
vL2a1	S vos4=$G(TJD) I vos4="" G vL2a0
	;
	S vos5=$G(BRCD) I vos5="" G vL2a0
	S vos6=$G(%UID) I vos6="" G vL2a0
	S vos7=""
vL2a6	S vos7=$O(^TTX(vos4,vos5,vos6,vos7),-1) I vos7="" G vL2a0
	Q
	;
vFetch2()	;
	;
	;
	I vos3=1 D vL2a6
	I vos3=2 S vos3=1
	;
	I vos3=0 Q 0
	;
	S rs1=vos7
	;
	Q 1
	;
vOpen3()	;	DRTRNA,CRTRNA FROM PRODCTL WHERE TYPE=:TYPE
	;
	;
	S vos1=2
	D vL3a1
	Q ""
	;
vL3a0	S vos1=0 Q
vL3a1	S vos2=$G(TYPE) I vos2="" G vL3a0
	I '($D(^UTBLCTL(vos2,50))) G vL3a0
	Q
	;
vFetch3()	;
	;
	;
	I vos1=0 Q 0
	;
	S vos1=100
	S vos3=$G(^UTBLCTL(vos2,14))
	S vos4=$G(^UTBLCTL(vos2,15))
	S rs=$P(vos3,"|",28)_$C(9)_$P(vos4,"|",29)
	S vos1=0
	;
	Q 1
	;
vOpen4()	;	ITC FROM TRN WHERE ETC=:DRTRNA
	;
	;
	S vos5=2
	D vL4a1
	Q ""
	;
vL4a0	S vos5=0 Q
vL4a1	S vos6=$G(DRTRNA) I vos6="" G vL4a0
	I '($D(^TRN(vos6))>9) G vL4a0
	Q
	;
vFetch4()	;
	;
	;
	I vos5=0 Q 0
	;
	S vos5=100
	S vos7=$G(^TRN(vos6,0))
	S rs1=$P(vos7,"|",1)
	S vos5=0
	;
	Q 1
	;
vOpen5()	;	ITC FROM TRN WHERE ETC=:CRTRNA
	;
	;
	S vos8=2
	D vL5a1
	Q ""
	;
vL5a0	S vos8=0 Q
vL5a1	S vos9=$G(CRTRNA) I vos9="" G vL5a0
	I '($D(^TRN(vos9))>9) G vL5a0
	Q
	;
vFetch5()	;
	;
	;
	I vos8=0 Q 0
	;
	S vos8=100
	S vos10=$G(^TRN(vos9,0))
	S rs2=$P(vos10,"|",1)
	S vos8=0
	;
	Q 1
	;
vtrap1	;	Error trap
	;
	N vERROR S vERROR=$ZS
	;
	S %TJD=(TJD)-1
	S %ZTHALT=0
	D ZE^UTLERR
	;System processing error
	S ER=1 S RM=$$^MSG(2575)
	D EXC
	Q 
	Q 
