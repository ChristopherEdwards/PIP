INDX0	//;PBS -  - V2.0 - Interest Index Definition Screen
	/*

	  ---- Revision History ------------------------------------------------

	    09/03/02 - DATTAR - 49451
	    	       Converted to PSL

	 ----------------------------------------------------------------------
	*/


NEW 	//
	do INIT(0)
	quit


UPD 	//
	do INIT(1)
	quit


INQ 	//
	do INIT(2)
	quit


DEL 	//
	do INIT(3)
	quit


INIT(%ProcessMode) //
	new VFMQ,OLNTB
	set %PG=0 
	set %PAGE=1
	type RecordINDEX fINDEX
	do VPG(.fINDEX)
	quit


VPG(RecordINDEX fINDEX) // Page control
	new FINISH
        set FINISH=0
        for  do { quit:FINISH
                if %PG=0 do VPG00 if ER!(VFMQ="Q") set FINISH=1 quit
                if %PG>0 do VPG01(.fINDEX) if ER!(VFMQ="Q") set FINISH=1 quit
                if "DFQ"[VFMQ do VER(.fINDEX) set FINISH=1 quit
                set %PG=%PG+1
                }
        quit


VPG00   // Set up
	set %TAB("INDEX")=".INDEX1/HLP=[INDEX]INDEX/TBL=[INDEX]/XPP=D INDPP^INDX0"
	if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)
	set OLNTB="00038"

	set %READ="@@%FN,,,INDEX/REQ"
	if %ProcessMode=2 set %READ=%READ_",,IO/REQ"

	do ^UTLREAD 

	if VFMQ="Q" quit

	if %ProcessMode=2,IO'=$I do OPEN^SCAIO

	quit


INDPP	// Index Prompt
	if X=""!%OSAVE quit

	// Entry must be a valid index
	if X'?.E1A.E set ER=1 set RM=$$^MSG(971) quit

	// Spaces are not allowed.  Please use _ (underscore) instead.
	if X[" " set ER=1 set RM=$$^MSG(2527) 

	set I(3)=""
	if 'Db.isDefined("INDEX","INDEX=:X") quit
	set ER=1

	// Index already exists in table
	set RM=$$^MSG(1213)
	quit


VPG01(RecordINDEX fINDEX) // Screen
	set fINDEX=Db.getRecord("INDEX","INDEX=:INDEX",1)

	do DRV^USID(%ProcessMode,"INDEX",.fINDEX)

	quit


BASREL(RecordINDEX fINDEX) // Index Type

	/*
	        0 - Base Index
	        1 - Tiered Index
	        2 - Comparative (Other Indexes)
	        3 - Comparative (accounts)

	*/
	if X="" quit

	// Type cannot be modified when accounts are tied to it
	type ResultSet rs=Db.select("INDEX","DEP","INDEX=:INDEX")
	if %ProcessMode,(X'=V),'rs.isEmpty() set ER=1 set RM=$$^MSG(381)

	// If not Tier Index, but was previously.
	if X'=1,(V=1) do { quit:ER
		do GLBSRH

		//If still have data in global Remove tier value before maintaining index type
		if EXT set ER=1 set RM=$$^MSG(905)
		}

	if X=0 do { quit
		do CLEAR("INDTYP")
		do CLEAR("COMP")
		do CLEAR("EXTENSION")
		do CLEAR("DIAUTH")

		do UNPROT^DBSMACRO("INDEX.IRATO")

		do UNPROT^DBSMACRO("INDEX.AVGDYS")

		}

	if X=1 do { quit
		do CLEAR("COMP")
		do CLEAR("EXTENSION")

		do UNPROT^DBSMACRO("INDEX.IRATO")

		do UNPROT^DBSMACRO("INDEX.AVGDYS")

		do UNPROT^DBSMACRO("INDEX.DIAUTH")

		do UNPROT^DBSMACRO("INDEX.INDTYP")

		// If Tier index, Modify mode, Data item Authorization="Y"
		
		// Date Item Authorization Flag
		if %ProcessMode,fINDEX.diauth do {
			do GLBSRH

			if EXT do PROTECT^DBSMACRO("INDEX.DIAUTH")

			}
		}

	 if X=2!(X=3) do {
		do CLEAR("INDTYP")
		do CLEAR("IRATO")
		do CLEAR("AVGDYS")
		do CLEAR("DIAUTH")

		do UNPROT^DBSMACRO("INDEX.C0MP")

		do UNPROT^DBSMACRO("INDEX.EXTENSION")

		}

	quit


INDTYP(RecordINDEX fINDEX) // Tiered Index Type
	if X="" quit

	// Index Type
	if fINDEX.basrel'=1 set ER=1 set RM=$$INVALID quit
	quit


COMP(RecordINDEX fINDEX)	// Comparison
	if X="" quit

	// Index Type
	if "23"'[fINDEX.basrel set ER=1 set RM=$$INVALID
	quit


IRATO(RecordINDEX fINDEX) // Index Rate Calculation Option

	if X=1 do UNPROT^DBSMACRO("INDEX.AVGDYS")

	if X-1 do {

		do DEFAULT^DBSMACRO("INDEX.AVGDYS","")

		do PROTECT^DBSMACRO("INDEX.AVGDYS")
		}
	quit


AVGDYS(RecordINDEX fINDEX) // Number of Days to Average Rate

	/*
	   Test for entry
	   Must enter value greater than 0 days
	*/

	// Must enter value greater than 0 days
	if +X'>0,fINDEX.irato=1 set ER=1 set RM=$$^MSG(1832)
	if X="" quit

	// Valid for calculation option 1 only
	if fINDEX.irato'=1 set ER=1 set RM=$$^MSG(2907)
	quit


CLEAR(DI) // Set value to null and protect
	do DEFAULT^DBSMACRO("INDEX."_DI,"")

	do PROTECT^DBSMACRO("INDEX."_DI)

	quit


VER(RecordINDEX fINDEX) //
 	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit
	if %ProcessMode=3 do {
		do Db.delete("INDEX","INDEX=:INDEX")
		}
	else  do fINDEX.save()
	do END
	quit


END	//
	if $G(ER)!(%ProcessMode=2)!(%ProcessMode=4) quit
	set INDEX=$G(INDEX)

	if VFMQ="Q" do {
		// Index ~p1 not created
		if %ProcessMode=0 set RM=$$^MSG(1225,INDEX) quit

		// Index ~p1 not modified
		if %ProcessMode=1 set RM=$$^MSG(1227,INDEX) quit

 		// Index ~p1 not deleted
		set RM=$$^MSG(1226,INDEX)
		}
	else  do {
		// Index ~p1 created
		if %ProcessMode=0 set RM=$$^MSG(1221,INDEX) quit
	
		// Index ~p1 modified
		if %ProcessMode=1 set RM=$$^MSG(1224,INDEX) quit

		// Index ~p1 deleted
		set RM=$$^MSG(1222,INDEX)
		}
	set ER="W"
	quit


INVALID(RecordINDEX fINDEX) // Not Valid for Index Type ~p1	
	quit $$^MSG(6782,fINDEX.basrel)


GLBSRH	//
	new EFD,TIER,VAR
	set (EXT,VAR,%EffectiveDate,TIER)=""
	type DbSet rs=Db.selectDbSet("INDEX1","INDEX=:INDEX")
	while rs.next() do { quit:EXT
		type RecordINDEX1 index1=rs.getRecord("INDEX1")
		set VAR=index1.rate_"|"_index1.seq_"|"_index1.tiertyp_"|"_index1.expdate_"|"_index1.dlyrate_"|"_index1.yld7d_"|"_index1.yld30d
		if (TIER["OD"!(TIER["INTR"))!(VAR["OD"!(VAR["INTR")) set EXT=1
		}
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "59886^43520^Sanchez SCM Administrator^4942"	// Signature - LTD^TIME^USER^SIZE
