R01S255	// SCA238 - Trial Balance Report by Residency Code
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA238"
	set RN="Trial Balance Report by Residency Code"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,ACR,CLASS,CLSTACR,CLSTBAL,CONAM,CRCDTACR,CRCDTBAL,CURCD,GROUP,GRPTACR,GRPTBAL,R,RID,RN,TYP,TYPTACR,TYPTBAL,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA238",RN="Trial Balance Report by Residency Code"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA238","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[ACN]CID#1#12,[ACN]GRP#15#4,[ACN]TYPE#21#4,[ACN]LNM#27#17,[ACN]BAL#45#12,[ACN]IRN#58#8"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="(ACN.PCIDSTAT=0) OR (ACN.PCIDSTAT='')"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Trial Balance Report by Residency Code"
		set VBNRINFO("PGM")="R01S255"
		set VBNRINFO("RID")="SCA238"
		set VBNRINFO("TABLES")="ACN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ACN]RESCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,ACN]CRCD"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ACN]CLS"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,ACN]GRP"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,ACN]TYPE"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,ACN]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("ACN.RESCD,ACN.CRCD,ACN.CLS,ACN.GRP,ACN.TYPE,ACN.CID,ACN.LNM,ACN.BAL,ACN.IRN","ACN","(ACN.PCIDSTAT=0) OR (ACN.PCIDSTAT='')","ACN.RESCD,ACN.CRCD,ACN.CLS,ACN.GRP,ACN.TYPE,ACN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
	set vc1=V.piece($C(9),1)			// ACN.RESCD
	set vc2=V.piece($C(9),2)			// ACN.CRCD
	set vc3=V.piece($C(9),3)			// ACN.CLS
	set vc4=V.piece($C(9),4)			// ACN.GRP
	set vc5=V.piece($C(9),5)			// ACN.TYPE
	set vc6=V.piece($C(9),6)			// ACN.CID
	set vc7=V.piece($C(9),7)			// ACN.LNM
	set vc8=V.piece($C(9),8)			// ACN.BAL
	set vc9=V.piece($C(9),9)			// ACN.IRN
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public Number CLSTBAL,CRCDTBAL,GRPTBAL,TYPTBAL
	type public Number CLSTACR,CRCDTACR,GRPTACR,TYPTACR

	// Init report totals
	set (CLSTBAL,CRCDTBAL,GRPTBAL,TYPTBAL)=0
	set (CLSTACR,CRCDTACR,GRPTACR,TYPTACR)=0

	// Define default currency DCRCD
	do CRCD^TTXSUM
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VSUM3	// Summary
	type public String %TIM,ACR,CLASS,CLSTACR,CLSTBAL,CRCDTACR,CRCDTBAL,CURCD,GROUP,GRPTACR,GRPTBAL,I,IOSL,R,TYP,TYPTACR,TYPTBAL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="CURRENCY CODE "
	do VP1 quit:VFMQ!verror.get()  set V=$E(CURCD,1,3)
	set VL=VL_$J("",14-VL.length())_V
	set VL=VL_$J("",18-VL.length())_"TOTALS:"
	set VL=VL_$J("",42-VL.length())_$J($FN(CRCDTBAL,",",2),14)
	set VL=VL_$J("",64-VL.length())_$J($FN(CRCDTACR,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %TIM,ACR,CLASS,CLSTACR,CLSTBAL,CRCDTACR,CRCDTBAL,CURCD,GROUP,GRPTACR,GRPTBAL,I,IOSL,R,TYP,TYPTACR,TYPTBAL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="CLASS "
	do VP2 quit:VFMQ!verror.get()  set V=$E(CLASS,1,1)
	set VL=VL_$J("",6-VL.length())_V
	set VL=VL_$J("",8-VL.length())_"TOTALS:"
	set VL=VL_$J("",42-VL.length())_$J($FN(CLSTBAL,",",2),14)
	set VL=VL_$J("",64-VL.length())_$J($FN(CLSTACR,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VSUM5	// Summary
	type public String %TIM,ACR,CLASS,CLSTACR,CLSTBAL,CRCDTACR,CRCDTBAL,CURCD,GROUP,GRPTACR,GRPTBAL,I,IOSL,R,TYP,TYPTACR,TYPTBAL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="GROUP "
	do VP3 quit:VFMQ!verror.get()  set V=$E(GROUP,1,4)
	set VL=VL_$J("",6-VL.length())_V
	set VL=VL_$J("",11-VL.length())_"TOTALS:"
	set VL=VL_$J("",42-VL.length())_$J($FN(GRPTBAL,",",2),14)
	set VL=VL_$J("",64-VL.length())_$J($FN(GRPTACR,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,ACR,CLASS,CLSTACR,CLSTBAL,CRCDTACR,CRCDTBAL,CURCD,GROUP,GRPTACR,GRPTBAL,IOSL,R,TYP,TYPTACR,TYPTBAL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc6,12)
	set VL=VL_$J("",14-VL.length())_$E(vc4,1,4)
	set VL=VL_$J("",19-VL.length())_$J(vc5,5)
	set VL=VL_$J("",26-VL.length())_$E(vc7,1,17)
	set V=vc8,VO=V set V=$J($FN(V,",",2),12) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",44-VL.length())_V		// [SYSDEV,ACN]BAL
	set VL=VL_$J("",57-VL.length())_$J(vc9,8,4)
	do VP5 quit:VFMQ!verror.get()  set V=$J($FN(ACR,",",2),12) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",66-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VSUM6	// Summary
	type public String %TIM,ACR,CLASS,CLSTACR,CLSTBAL,CRCDTACR,CRCDTBAL,CURCD,GROUP,GRPTACR,GRPTBAL,I,IOSL,R,TYP,TYPTACR,TYPTBAL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="TYPE "
	do VP7 quit:VFMQ!verror.get()  set V=$E(TYP,1,4)
	set VL=VL_$J("",5-VL.length())_V
	set VL=VL_$J("",10-VL.length())_"TOTALS:"
	set VL=VL_$J("",42-VL.length())_$J($FN(TYPTBAL,",",2),14)
	set VL=VL_$J("",64-VL.length())_$J($FN(TYPTACR,",",2),14)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ACR,CLASS,CLSTACR,CLSTBAL,CONAM,CRCDTACR,CRCDTBAL,CURCD,GROUP,GRPTACR,GRPTBAL,R,RID,RN,TYP,TYPTACR,TYPTBAL,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",49-VL.length())_"Run Date:"
	set VL=VL_$J("",59-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=$E(RN,1,50)
	set VL=VL_$J("",51-VL.length())_"System:"
	set VL=VL_$J("",59-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Class "_vc3
	do VOM
	set VL="Residency Code"
	do VP8 quit:VFMQ!verror.get()  set V=$E(R,1,1)
	set VL=VL_$J("",15-VL.length())_V
	do VOM
	set VL="Currency Code"
	set VL=VL_$J("",14-VL.length())_$E(vc2,1,6)
	do VOM
	set VL="" do VOM
	set VL="   "_"Account #  Group Type  Account Title          Balance Int Rate  Int Accrued"
	do VOM
	set VL="================================================================================"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: CURCD

	type public String CURCD,vovc2

	// Set CURCD to the last Currency Code saved in report buffer,
        // otherwise it will be set to the newly fetched CRCD value.
	
	set CURCD=vovc2
	quit

VP2	// Column pre-processor - Variable: CLASS

	type public String CLASS,vovc3

	// Set CLASS to the last Class saved in report buffer,
        // otherwise it will be set to the newly fetched Class value.
	
	set CLASS=vovc3
	quit

VP3	// Column pre-processor - Variable: GROUP

	type public String GROUP,vovc4

	// Set GROUP to the last Group saved in report buffer,
        // otherwise it will be set to the newly fetched Group value.

	set GROUP=vovc4
	quit

VP4	// Column post-processor - [SYSDEV,ACN]BAL

	type public String vc8
	type public Number CLSTBAL,CRCDTBAL,GRPTBAL,TYPTBAL
	type public String vc2,vc3,vc4,vc5,vovc2,vovc3,vovc4,vovc5

	type public Boolean RFLG=0  // Reaccumulation flag

	/* Accumulate Balance Totals for Type, Group, Class and Currency Code. 
	   When Type, Group, Class and Currency Code change, reset Totals 
	   and restart accumulation.	   
	   If vovc#="", this is the first record, so start accumulation.
	*/
	
	// If CRCD changes (vovc2'=vc2), reset all totals.
	if ('RFLG) , ((vovc2="") ! (vovc2=vc2)) set CRCDTBAL=CRCDTBAL+vc8
	else  do {
		set RFLG=1
		set CRCDTBAL=0 set CRCDTBAL=CRCDTBAL+vc8
		set CLSTBAL=0 set CLSTBAL=CLSTBAL+vc8
		set GRPTBAL=0 set GRPTBAL=GRPTBAL+vc8
		set TYPTBAL=0 set TYPTBAL=TYPTBAL+vc8
		}


	// If CLS changes (vovc3'=vc3), reset Class, Group and Type totals.	
	if ('RFLG), ((vovc3="") ! (vovc3=vc3)) set CLSTBAL=CLSTBAL+vc8
	else  do {
		set RFLG=1
		set CLSTBAL=0 set CLSTBAL=CLSTBAL+vc8
		set GRPTBAL=0 set GRPTBAL=GRPTBAL+vc8
		set TYPTBAL=0 set TYPTBAL=TYPTBAL+vc8
		}	


	// If GRP changes (vovc4'=vc4), reset Group and Type totals.
	if ('RFLG) , ((vovc4="") ! (vovc4=vc4)) set GRPTBAL=GRPTBAL+vc8
	else  do {
		set RFLG=1
		set GRPTBAL=0 set GRPTBAL=GRPTBAL+vc8
		set TYPTBAL=0 set TYPTBAL=TYPTBAL+vc8
		}

		
	// If TYPE changes (vovc5'=vc5), reset just Type total.
	if ('RFLG) , (vovc5="") ! (vovc5=vc5) set TYPTBAL=TYPTBAL+vc8
	else  set RFLG=1 set TYPTBAL=0 set TYPTBAL=TYPTBAL+vc8	
	quit

VP5	// Column pre-processor - Variable: ACR

	type public String vc3,vc6
	type public String CLS
	type public Number ACR,CID

	set CLS=vc3
	set CID=vc6

	if CLS="L" do {
		type RecordLN ln
		set ln=Db.getRecord("LN","CID")
		set ACR=ln.acr
		}

	if CLS="D" do {
		type RecordDEP dep
		set dep=Db.getRecord("DEP","CID")
		set ACR=dep.acr
		}
	quit

VP6	// Column post-processor - Variable: ACR

	type public Number ACR,CLSTACR,CRCDTACR,GRPTACR,TYPTACR
	type public String vc2,vc3,vc4,vc5,vovc2,vovc3,vovc4,vovc5

	type public Boolean RFLG=0  // Reaccumulation flag
 
	/* Accumulate Accrual Totals for Type, Group, Class and Currency Code.
	   When Type, Group, Class and Currency Code change, reset Totals
           and restart accumulation.
	   If vovc#="", this is the first record, so start accumulation.
	*/

	// If CRCD changes (vovc2'=vc2), reset all totals.
	if ('RFLG) , ((vovc2="") ! (vovc2=vc2)) set CRCDTACR=CRCDTACR+ACR	
	else  do {
		set RFLG=1
		set CRCDTACR=0 set CRCDTACR=CRCDTACR+ACR
		set CLSTACR=0 set CLSTACR=CLSTACR+ACR
		set GRPTACR=0 set GRPTACR=GRPTACR+ACR
		set TYPTACR=0 set TYPTACR=TYPTACR+ACR
		}


	// If CLS changes (vovc3'=vc3), reset Class, Group and Type totals.
	if ('RFLG) , ((vovc3="") ! (vovc3=vc3)) set CLSTACR=CLSTACR+ACR	
	else  do {
		set RFLG=1
		set CLSTACR=0 set CLSTACR=CLSTACR+ACR
		set GRPTACR=0 set GRPTACR=GRPTACR+ACR
		set TYPTACR=0 set TYPTACR=TYPTACR+ACR
		}


	// If GRP changes (vovc4'=vc4), reset Group and Type totals.
	if ('RFLG) , ((vovc4="") ! (vovc4=vc4)) set GRPTACR=GRPTACR+ACR
	else  do {
		set RFLG=1
		set GRPTACR=0 set GRPTACR=GRPTACR+ACR
		set TYPTACR=0 set TYPTACR=TYPTACR+ACR
		}


	// If TYPE changes (vovc5'=vc5), reset just Type total.
	if ('RFLG) , ((vovc5="") ! (vovc5=vc5)) set TYPTACR=TYPTACR+ACR
	else  set RFLG=1 set TYPTACR=0 set TYPTACR=TYPTACR+ACR
	quit

VP7	// Column pre-processor - Variable: TYP

	type public String TYP,vovc5

	// Set TYP to the last Type saved in report buffer,
	// otherwise it will be set to the newly fetched Type value.

	set TYP=vovc5
 
	quit

VP8	// Column pre-processor - Variable: R

	type public String vc1
	type Public String R

	set R=+(vc1)
	quit
