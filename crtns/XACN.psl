XACN(XACN,FILE)	
	/*
	   ORIG:  CHENARDP - 10 JUN 1992
	
	  ---- Revision History ------------------------------------------------
	  
	   11/30/05 - RussellDS - CR18400
	   	      Remove call to CRTQRY, which could not occur in any case.
	   	      CRTQRY has been modified to eliminate the top section in
	   	      order to allow obsoletion of DBSVLOD.
	  
	   05/10/05 - MBUIM - CR14643
	   	      Modified ABO section correct typo S3 not s3

	   12/30/03 - CARROLLJ - CR7658
		      Added #ACCEPT prior to xecute command.

	   01/28/02 - MBUIM - 43583
		      Converted to PSL.

	*/

	new I,%MOD,OLNTB,%OSAVE,%PAGE,%PG,PGM
	new %READ,RM,%TAB,TYPE

	set %PAGE=1 
	set %PG=1 
	set %READ="" 
	set DISPLAY=1
	
	if 'Db.isDefined("DBTBL8","'SYSDEV',FILE,XACN") quit ""

	type RecordDBTBL8 dbtbl8=Db.getRecord("DBTBL8","'SYSDEV',FILE,XACN")
       	
	for I=1:1:$L(dbtbl8.orderby,",") set ITEM=$P(dbtbl8.orderby,",",I) quit:ITEM'[$C(34) 

	type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","'SYSDEV',FILE,ITEM")
		
	set TAB="|"_dbtbl1d.len_"|||||||"_dbtbl1d.typ_"|"_dbtbl1d.des
	do BLDSCR(TAB,1,ITEM)
	
	set %NOPRMT="F"

	// Back up from bottom of Screen
	set OLNTB=(22-$L(%READ,","))*1000
	do ^UTLREAD
	if VFMQ="Q" quit ""
	if XACN="TAXID" quit @ITEM
	
	// Ver
	if VFMQ="Q" quit ""
	set ITEM=@ITEM

	type ResultSet rs=Db.select("CID","ACN","CONVACN=:ITEM")

	if rs.isEmpty() set ER=1 quit ""

	else  if rs.next() set CID=rs.getCol(1)
	if CID="" set ER=1 quit ""

	quit CID

BLDSCR(TAB,REQD,ITEM)	// Build the Screen

	new I,INDIR,REFERD,Y

	// Modified to accomodate the change in UTLREAD fields qualifier format.
	set REFERD=0
	if $D(%READ) for I=1:1:$L(%READ,",") do { quit:REFERD=1 
		if ITEM=$E($P(%READ,",",I),1,$L(ITEM)) set REFERD=1
		}
	// Already referenced
	if REFERD quit
		
	// Pre-Processor
	#ACCEPT DATE=12/30/03;PGM=John Carroll
	if $P(TAB,"|",8)'="" xecute $P(TAB,"|",8)
	
	set Y=ITEM
	if REQD set Y=Y_"/REQ"
	
	/* Put all the fields with /REQ in the front and all the fields without
	   /REQ in the end.
	*/
	if (%READ="") set %READ=%READ_Y
	else  if 'REQD set %READ=%READ_","_Y
	else  if %READ'["/REQ" set %READ=Y_","_%READ
	else  set %READ=$P(%READ,"/REQ",1,$L(%READ,"/REQ")-1)_"/REQ,"_Y_$P(%READ,"/REQ",$L(%READ,"/REQ"),999)
	
	if 'DISPLAY quit 
	
	set %TAB(ITEM)=TAB

	quit 
	
Public ABO(NUM)	// Return IBS account from the ABO account

	/*
	   This subroutine must be able to determine if the number passed in is
	   the ABO number or, if not, whether it is an FMS or IBS number.  If
	   it is an FMS number, it must get the cost center from the 3rd piece
	   and concatenate it on to the end of the number:
	
	   Treatment of Account Numbers for Incoming Transactions Received
	   via Technical Agency or Payment System
	
	   I.  Check to see if the account number exists in the
	       Conversion Account Number FILE.
	
	       A.  If it is found, then the number is an ABO number.
	
		   1.  Get the corresponding PROFILE number and its type
		       (i.e., FMS or IBS).
	
		       a.  If an IBS number, then post transaction to
			   IBS account.
	
		       b.  If an FMS number, then the general ledger
			   account number is the number defined in the
			   third field of ACN and the cost centre is
			   the number defined in the fourth field of
			   ACN.
	
	       B.  If it is not found, then it's a PROFILE number.
	
		   1.  Determine if it's an FMS or IBS account number by
		       checking for the existence of a pre-number (cost
		       centre).
	
		       a.  If a pre-number exists (FMS number), then
			   take the first part of the number
			   (pre-number) and delete the last digit.  This
			   is the cost centre of the transaction.  Take
			   the second part of the account number and
			   delete the last digit.  This is the FMS
			   general ledger account number.
	
		       b.  If a pre-number does not exist (IBS number),
			   then post the transaction to the IBS account
			   number.
	
	
	*/
	
	type String S1,S2,S3

	set CID=""

	type ResultSet rs=Db.select("CID","ACN","CONVACN=:NUM")

	if rs.next() set CID=rs.getCol(1)

	// Customer account
	if CID quit CID

	type ResultSet rs1=Db.select("TYPE,DESC1","GLAD","ACN=:NUM")

	// GL Account account
	if rs1.next() quit rs1.getCol(1)_"|"_rs1.getCol(2)
	
	if NUM["-" do { quit S3
		set S1=$P(NUM,"-",1)
		set S2=$P(NUM,"-",2)
		// fms number
		set S3=$E(S1,1,$L(S1)-1)_"|"_$E(S2,1,$L(S2)-1)
		}
	// IBS number 
	if Db.isDefined("ACN","NUM") quit NUM

	// fms number
	if Db.isDefined("GLAD","NUM") quit "|"_NUM

	quit NUM
	
 #OPTION ResultClass ON
Public String vSIG()	quit "60257^35391^Dan Russell^4337"	// Signature - LTD^TIME^USER^SIZE
