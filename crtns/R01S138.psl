R01S138	// SCA070 - Loan Sale Trial Balance Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:39 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="SCA070"
	set RN="Loan Sale Trial Balance Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNLS8]INCD|[LNLS8]:NOVAL||D EXT^DBSQRY||T|Investor Code|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA070",RN="Loan Sale Trial Balance Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA070","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNLS8]CID#1#12,[LNLS6]INVAC#15#12,[LN]BAL#28#14,[LNLS6]INBAL#43#14,[LN]TEB#58#13,[LN]UNAPF#73#10,[LN]PMTPI#88#9,[LN]IRN#99#8,[LNLS6]INVYLD#108#8,[LN]DIST1LD#117#10,[LNLS6]ACTIVE#129#1"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNLS8]INCD "_VIN1,SEQ=SEQ+1
		set DQQRY(SEQ)="[LNLS6]POBPRPF'=1",SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNLS8,LNLS2,LNLS6,LNLS1,LNLS3,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Investor Code"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Sale Trial Balance Report"
		set VBNRINFO("PGM")="R01S138"
		set VBNRINFO("RID")="SCA070"
		set VBNRINFO("TABLES")="LNLS8,LNLS2,LNLS6,LNLS1,LNLS3,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLS8]INCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLS8]PL"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNLS8]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLS8]CID"

		set VBNRINFO("DOC",1)=" Lists those accounts sold to designated investor with then current"
		set VBNRINFO("DOC",2)="static information (balances, due dates, etc.) from the loan account (rather"
		set VBNRINFO("DOC",3)="than the loan sale support) file."
		set VBNRINFO("DOC",4)="07/18/00	Pam Esterly 35504"
		set VBNRINFO("DOC",5)="		Remove account number post processor which recalculated"
		set VBNRINFO("DOC",6)="		investor yield for teaser rates.  Teaser rates are in "
		set VBNRINFO("DOC",7)="		$$INVYLD^LNCDI."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:6 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNLS8.INCD,LNLS8.PL,LNLS8.GRP,LNLS8.CID,LN.BALCMP,"
	set VSELECT=VSELECT_"LNLS6.INBAL,LN.TEB,LN.UNAPF,LN.PMTPI,LNLS6.ACTIVE,"
	set VSELECT=VSELECT_"LNLS6.INVAC,LN.BAL,LN.IRN,LNLS6.INVYLD,LN.DIST1LD,"
	set VSELECT=VSELECT_"LNLS1.DESCHDG,LNLS2.EFD,LNLS2.PP,LNLS2.PICM,LNLS2."
	set VSELECT=VSELECT_"SVN,LNLS2.YIELD,LNLS2.FEEP,LNLS2.SFCM,LNLS2.ACTGRP"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNLS8,LNLS2,LNLS6,LNLS1,LNLS3,LN",VWHERE,"LNLS8.INCD,LNLS8.PL,LNLS8.GRP,LNLS8.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24
	set vc1=V.piece($C(9),1)			// LNLS8.INCD
	set vc2=V.piece($C(9),2)			// LNLS8.PL
	set vc3=V.piece($C(9),3)			// LNLS8.GRP
	set vc4=V.piece($C(9),4)			// LNLS8.CID
	set vc5=V.piece($C(9),5)			// LN.BALCMP
	set vc6=V.piece($C(9),6)			// LNLS6.INBAL
	set vc7=V.piece($C(9),7)			// LN.TEB
	set vc8=V.piece($C(9),8)			// LN.UNAPF
	set vc9=V.piece($C(9),9)			// LN.PMTPI
	set vc10=V.piece($C(9),10)			// LNLS6.ACTIVE
	set vc11=V.piece($C(9),11)			// LNLS6.INVAC
	set vc12=V.piece($C(9),12)			// LN.BAL
	set vc13=V.piece($C(9),13)			// LN.IRN
	set vc14=V.piece($C(9),14)			// LNLS6.INVYLD
	set vc15=V.piece($C(9),15)			// LN.DIST1LD
	set vc16=V.piece($C(9),16)			// LNLS1.DESCHDG
	set vc17=V.piece($C(9),17)			// LNLS2.EFD
	set vc18=V.piece($C(9),18)			// LNLS2.PP
	set vc19=V.piece($C(9),19)			// LNLS2.PICM
	set vc20=V.piece($C(9),20)			// LNLS2.SVN
	set vc21=V.piece($C(9),21)			// LNLS2.YIELD
	set vc22=V.piece($C(9),22)			// LNLS2.FEEP
	set vc23=V.piece($C(9),23)			// LNLS2.SFCM
	set vc24=V.piece($C(9),24)			// LNLS2.ACTGRP
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc10,vc6,vc5,vc9,vc7,vc8
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc10			// @TOT([LNLS6]ACTIVE)
	set VT(4,2,1)=VT(4,2,1)+vc6			// @TOT([LNLS6]INBAL)
	set VT(4,3,1)=VT(4,3,1)+vc5			// @TOT([LN]BALCMP)
	set VT(4,4,1)=VT(4,4,1)+vc9			// @TOT([LN]PMTPI)
	set VT(4,5,1)=VT(4,5,1)+vc7			// @TOT([LN]TEB)
	set VT(4,6,1)=VT(4,6,1)+vc8			// @TOT([LN]UNAPF)
	quit

VSUM2	// Summary
	type public String %TIM,I,IOSL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=" "_"Investor:"
	set VL=VL_$J("",15-VL.length())_"Count:"
	set V=VT(2)					// @CNT(,N,4)
	set VL=VL_$J("",22-VL.length())_$J(V,4)
	set V=VT(2,3,1)					// @TOT([LN]BALCMP,)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),14)
	set V=VT(2,2,1)					// @TOT([LNLS6]INBAL,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),14)
	set V=VT(2,5,1)					// @TOT([LN]TEB,)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=VT(2,6,1)					// @TOT([LN]UNAPF,)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),10)
	set V=VT(2,4,1)					// @TOT([LN]PMTPI,)
	set VL=VL_$J("",84-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,1,1)					// @TOT([LNLS6]ACTIVE,)
	set VL=VL_$J("",126-VL.length())_$J(V,4)
	do VOM
	set VL="" do VOM
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,IOSL,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="Investor:"
	set VL=VL_$J("",10-VL.length())_$E(vc16,1,45)
	do VOM
	set VL="" do VOM
	set VL="    "_"Pool:"
	set VL=VL_$J("",10-VL.length())_$E(vc2,1,10)
	set VL=VL_$J("",22-VL.length())_"Dated:"
	set VL=VL_$J("",29-VL.length())_$J($$DAT^%ZM(vc17),10)
	set VL=VL_$J("",41-VL.length())_"Part %:"
	set VL=VL_$J("",49-VL.length())_$J(vc18,9,5)
	set VL=VL_$J("",59-VL.length())_"Rem Method:"
	set VL=VL_$J("",71-VL.length())_$J(vc19,12)
	set VL=VL_$J("",87-VL.length())_"Servicer:"
	set VL=VL_$J("",97-VL.length())_$E(vc20,1,10)
	do VOM
	set VL="                      "_"Yield:"
	set VL=VL_$J("",31-VL.length())_$J(vc21,8,5)
	set VL=VL_$J("",42-VL.length())_"Fee %:"
	set VL=VL_$J("",49-VL.length())_$J(vc22,8,5)
	set VL=VL_$J("",59-VL.length())_"Fee Method:"
	set VL=VL_$J("",71-VL.length())_$E(vc23,1,5)
	set VL=VL_$J("",85-VL.length())_"Actg Group:"
	set VL=VL_$J("",97-VL.length())_$J(vc24,7)
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,I,IOSL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(3)=0 do VHDG3 quit:VFMQ

	set VL="" do VOM
	set VL="     "_"Pool:"
	set VL=VL_$J("",15-VL.length())_"Count:"
	set V=VT(3)					// @CNT(,N,4)
	set VL=VL_$J("",22-VL.length())_$J(V,4)
	set V=VT(3,3,1)					// @TOT([LN]BALCMP,)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,2,1)					// @TOT([LNLS6]INBAL,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,5,1)					// @TOT([LN]TEB,)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=VT(3,6,1)					// @TOT([LN]UNAPF,)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),10)
	set V=VT(3,4,1)					// @TOT([LN]PMTPI,)
	set VL=VL_$J("",84-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,1,1)					// @TOT([LNLS6]ACTIVE,)
	set VL=VL_$J("",126-VL.length())_$J(V,4)
	do VOM
	set VL="" do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,IOSL,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="-------- Account ---------  ---------------------- Balance -----------------------         P & I  - Interest Rate -    Paid"
	do VOM
	set VL="Internal          Investor         Master       Investor        Escrow   Unapplied        Amount  Borrower  Inv Yld    Thru    Act"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	quit

VDTL4	// Detail
	type public String %TIM,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL=$E(vc4,1,12)
	set VL=VL_$J("",14-VL.length())_$J(vc11,12)
	set VL=VL_$J("",27-VL.length())_$J($FN(vc12,",",2),14)
	set VL=VL_$J("",42-VL.length())_$J($FN(vc6,",",2),14)
	set VL=VL_$J("",57-VL.length())_$J($FN(vc7,",",2),13)
	set VL=VL_$J("",72-VL.length())_$J($FN(vc8,",",2),10)
	set VL=VL_$J("",87-VL.length())_$J($FN(vc9,",",2),9)
	set VL=VL_$J("",98-VL.length())_$J(vc13,8,5)
	set VL=VL_$J("",107-VL.length())_$J(vc14,8,5)
	set VL=VL_$J("",116-VL.length())_$J($$DAT^%ZM(vc15),10)
	set VL=VL_$J("",128-VL.length())_$S(vc10:"Y",1:"N")
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,VPN,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="   "_"Report:     Count:"
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4))		// @CNT(0,N,4)
	set VL=VL_$J("",22-VL.length())_$J(V,4)
	set V=0						// @TOT([LN]BALCMP,0)
	for I=0:1:4 set V=V+VT(I,3,1)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6]INBAL,0)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LN]TEB,0)
	for I=0:1:4 set V=V+VT(I,5,1)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=0						// @TOT([LN]UNAPF,0)
	for I=0:1:4 set V=V+VT(I,6,1)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),10)
	set V=0						// @TOT([LN]PMTPI,0)
	for I=0:1:4 set V=V+VT(I,4,1)
	set VL=VL_$J("",84-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([LNLS6]ACTIVE,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	set VL=VL_$J("",126-VL.length())_$J(V,4)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
