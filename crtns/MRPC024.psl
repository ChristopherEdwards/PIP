MRPC024(RETURN,VERSN,CID,ETC)	//Public; Populate dropdown lists for fee and escrow transactions.
	/*

	   DESC: This routine determines and returns the drop down lists for fee assessments
	   collections, deferrals and escrow transactions based on TRN.PAC

	   KEYWORDS: RPC

	   ARGUMENTS:

	         . RETURN Loan Fee descriptions		 /TYP=T/REQ/MECH=REFNAM:W

	         . VERSN  ^MRPC024 version number        /TYP=N/REQ/MECH=VAL
	                  current version=1

	         . CID    Account Number                 /TYP=N/REQ/MECH=VAL

	         . ETC    External Transaction Code      /TYP=T/REQ/MECH=VAL

	   RETURNS:
	         . $$    Error Message                   /TYP=T
	                 Null=No Error

	   RELATED:
	         . $$^PBSMRPC -MRPC Service Class Driver

	   EXAMPLE:
	         S RM=$$^MRPC024(.VAL,1,CID,ETC)

	----Revision History --------------------------------------------

	03/31/06 - KELLYP - CR 20527
		   Modified to extract the posting control routine name
		   when TRN.PAC contains a parentheses.  The PAC's now
		   have arguments defined so the string needs to be
		   modified to extract the routine name from the parameters
		   and parentheses.

	03/02/06 - TITOVE - CR 19733
		   Modified to instantiate an LNFEEP object with
		   a "create-if-needed" qualifier.

	-----------------------------------------------------------------

	*/

	type public Cache %CACHE()

        // Protect Variables
	new CRLF,DEF,FEE,LNFEETBL,M,N,PAC,PE,STR

	// Validate Input

	// Version number of client message is not compatible with server
	if VERSN.get()'=1 quit $$ERRMSG^PBSUTL($$^MSG(2951))

	type RecordACN acn=Db.getRecord("ACN","CID",1)

	// Invalid account ~p1
	if acn.getMode()=0 quit $$ERRMSG^PBSUTL($$^MSG(1259,CID))

	// Invalid Account Class
	if acn.cls'="L" set ET="INVLDCLS" do ^UTLERR quit $$ERRMSG^PBSUTL($G(RM))

	type RecordTRN trn=%CACHE("TRN").getRecord("TRN", "ETC = :ETC")

	if ER.get() quit $$ERRMSG^PBSUTL(RM.get())

	// Posting Action Control
	set PAC=trn.pac
	if $F(PAC,"^") set PAC=PAC.piece("^",2)
	if $F(PAC,"(") set PAC=PAC.piece("(",1)
	
	set STR=""
	set CRLF=$C(13)_$C(10)
	
	// Return list for fee assessments and collections	
	if (PAC = "LNPTS8") ! (PAC = "LNPTS13") do {
		
		set FEE = $$LNFEE^CRTQRY()
		
		if ER.get() quit $$ERRMSG^PBSUTL(RM.get())
		
		if (FEE '= 1) quit
		
		set N = ""
		for  set N = LNFEETBL(N).order() quit:N.isNull()  set STR = STR_N_$C(9)_LNFEETBL(N)_CRLF
		}

	// Return list for fee deferrals
	if (PAC = "LNPTS41") do {
		
		set DEF = $$DEFFEE^CRTQRY()
		
		if ER.get() quit $$ERRMSG^PBSUTL(RM.get())
		
		if (DEF = 0) quit
		
		set N = ""
			
		// If LNFEEP.DEFINC current value included in return string
		for  set N = LNDEFFEE(N).order() quit:N.isNull()  do {
				
			type RecordLNFEEP lnfeep = Db.getRecord("LNFEEP", "FEETYP = :N", 1)	
				
			if lnfeep.definc set STR = STR_N_$C(9)_LNDEFFEE(N)_CRLF
			}
		}

	//  Return list for escrow transactions
	if (PAC="LNPTS16")!(PAC="LNPTS25")!(PAC="LNPTS28") do {
		
		do ESCA^LNES2(.ESCA,.ESCT)

		if ER.get() quit $$ERRMSG^PBSUTL(RM.get())

		set (M,N)=""
		for  set N=ESCA(N).order() quit:N.isNull()  do {
			for  set M=ESCT(M).order() quit:M.isNull()  set STR=STR_M_$C(9)_$P(ESCA(N),"|",3)_CRLF
			}
		}

	// Return list for Payment Elements
	if (PAC="LNPTS3") do {
		new PELE
		set PELE=$$PE^CRTQRY()

		if PELE=0 quit

		do TSOPE^LNCO(CID)

		set M=""
		for  set M=PE(M).order() quit:M.isNull()  set STR=STR_M_$C(9)_$P(PE(M),"|",1)_CRLF
		}

	set RETURN=$$V2LV^MSG(STR)

	quit ""
 #OPTION ResultClass ON
Public String vSIG()	quit "60355^64780^Pat Kelly^3289"	// Signature - LTD^TIME^USER^SIZE
