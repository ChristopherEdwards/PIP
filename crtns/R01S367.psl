R01S367	// SCA388 - Loans Sold Pre-Paid Payments Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1
	type String VIN2="ALL"

	set RID="SCA388"
	set RN="Loans Sold Pre-Paid Payments Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|5||[LNLS8PD]INCD|[LNLS8]INCD:DISTINCT||||T|Investor Code|||||"
	set %TAB("VIN2")="|255||[LNLS2]REMLD|||D EXT^DBSQRY||T|Last Remittances Dated|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,INCD,INCDINCD,INCDPL,MSTRINCD,MSTRPL,PL,RID,RN,TOTAL,TOTAL(),VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA388",RN="Loans Sold Pre-Paid Payments Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA388","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNLS8PD]PMTDUE#68#10,[LNLS8PD]TOTDUE#79#14,[LNLS8PD]PRNDUE#94#14,[LNLS8PD]INTDUE#109#13,[LNLS8PD]SRVFEE#123#10"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[LNLS8PD]INCD = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LNLS2]REMLD "_VIN2,SEQ=SEQ+1
		set DQQRY(SEQ)="[LN]STAT'=4",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNLS8PD,LN,LNLS1,LNLS2,LNLS6") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Investor Code"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Last Remittances Dated"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loans Sold Pre-Paid Payments Report"
		set VBNRINFO("PGM")="R01S367"
		set VBNRINFO("RID")="SCA388"
		set VBNRINFO("TABLES")="LNLS8PD,LN,LNLS1,LNLS2,LNLS6"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLS8PD]$J"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLS8PD]INCD"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNLS8PD]PL"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLS8PD]CID"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNLS8PD]SEQ"

		set VBNRINFO("DOC",1)=" The Loans Sold Pre-Paid Payments report lists, per investor, all open "
		set VBNRINFO("DOC",2)=" loans with amounts prepaid as of the specified remittance date. This"
		set VBNRINFO("DOC",3)=" report helps institutions reconcile amounts remitted (which are based on"
		set VBNRINFO("DOC",4)=" scheduled amounts due) to the custodial account balances (which are based"
		set VBNRINFO("DOC",5)=" on payments received). The report identifies the prepaid amounts for each "
		set VBNRINFO("DOC",6)=" account."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:5 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNLS8PD.INCD,LNLS8PD.PL,LNLS8PD.CID,LNLS8PD.SEQ,LN"
	set VSELECT=VSELECT_"LS8PD.TOTDUE,LNLS8PD.PRNDUE,LNLS8PD.INTDUE,LNLS8PD"
	set VSELECT=VSELECT_".SRVFEE,LNLS2.PP,LNLS2.PICM,LNLS2.ACTGRP,LNLS2.REM"
	set VSELECT=VSELECT_"LD,LNLS2.SVN,LNLS2.FEEP,LNLS2.SFCM,LNLS2.FTXPCT,LN"
	set VSELECT=VSELECT_"LS2.EFD,LNLS6.INVAC,LN.DIST1LD,LN.BALCMP,LNLS6.INB"
	set VSELECT=VSELECT_"AL,LNLS8PD.PMTDUE"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNLS8PD,LN,LNLS1,LNLS2,LNLS6",VWHERE,"LNLS8PD.INCD,LNLS8PD.PL,LNLS8PD.CID,LNLS8PD.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22
	set vc1=V.piece($C(9),1)			// LNLS8PD.INCD
	set vc2=V.piece($C(9),2)			// LNLS8PD.PL
	set vc3=V.piece($C(9),3)			// LNLS8PD.CID
	set vc4=V.piece($C(9),4)			// LNLS8PD.SEQ
	set vc5=V.piece($C(9),5)			// LNLS8PD.TOTDUE
	set vc6=V.piece($C(9),6)			// LNLS8PD.PRNDUE
	set vc7=V.piece($C(9),7)			// LNLS8PD.INTDUE
	set vc8=V.piece($C(9),8)			// LNLS8PD.SRVFEE
	set vc9=V.piece($C(9),9)			// LNLS2.PP
	set vc10=V.piece($C(9),10)			// LNLS2.PICM
	set vc11=V.piece($C(9),11)			// LNLS2.ACTGRP
	set vc12=V.piece($C(9),12)			// LNLS2.REMLD
	set vc13=V.piece($C(9),13)			// LNLS2.SVN
	set vc14=V.piece($C(9),14)			// LNLS2.FEEP
	set vc15=V.piece($C(9),15)			// LNLS2.SFCM
	set vc16=V.piece($C(9),16)			// LNLS2.FTXPCT
	set vc17=V.piece($C(9),17)			// LNLS2.EFD
	set vc18=V.piece($C(9),18)			// LNLS6.INVAC
	set vc19=V.piece($C(9),19)			// LN.DIST1LD
	set vc20=V.piece($C(9),20)			// LN.BALCMP
	set vc21=V.piece($C(9),21)			// LNLS6.INBAL
	set vc22=V.piece($C(9),22)			// LNLS8PD.PMTDUE
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 /*
 -------------Revision History----------------------------------------
 05/14/07 - SVS Kiran - CR 26751
            Renamed INVCD to INCD. and modified its scope to public.
            replaced call to LNLS8PD with INCD instead of INVCD.
            This is required to eliminated undefined error on INCD
 ---------------------------------------------------------------------
*/  
 type public Number INCDPL,MSTRPL,TOTAL()
 type public String VIN1
 type public String INCD

 kill TOTAL
 set TOTAL("INCD")="",TOTAL("MSTR")="",MSTRPL="",INCDPL=""

 set INCD=VIN1
 
 do ^LNLS8PD(INCD,11)
	quit

VRPOST	// Report post-processor

 type public Number TOTAL

 kill TOTAL
 do Db.delete("TMPRPT0","PID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	do VHDG5 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb2!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),TAX,vc7,vc6,vc8,vc5
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+TAX			// @TOT(<<TAX>>)
	set VT(5,2,1)=VT(5,2,1)+vc7			// @TOT([LNLS8PD]INTDUE)
	set VT(5,3,1)=VT(5,3,1)+vc6			// @TOT([LNLS8PD]PRNDUE)
	set VT(5,4,1)=VT(5,4,1)+vc8			// @TOT([LNLS8PD]SRVFEE)
	set VT(5,5,1)=VT(5,5,1)+vc5			// @TOT([LNLS8PD]TOTDUE)
	quit

VSUM3	// Summary
	type public String %TIM,I,INCD,INCDINCD,INCDPL,IOSL,MSTRINCD,MSTRPL,PL,TOTAL,TOTAL(),V,VFMQ,VIN1,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Investor "_vc1_" Totals: "
	do VP1 quit:VFMQ!verror.get()  set V=$J($FN(MSTRINCD,",",2),14)
	set VL=VL_$J("",37-VL.length())_V
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(INCDINCD,",",2),14)
	set VL=VL_$J("",53-VL.length())_V
	set V=VT(3,5,1)					// @TOT([LNLS8PD]TOTDUE,)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,3,1)					// @TOT([LNLS8PD]PRNDUE,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,2,1)					// @TOT([LNLS8PD]INTDUE,)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),13)
	set V=VT(3,4,1)					// @TOT([LNLS8PD]SRVFEE,)
	set VL=VL_$J("",122-VL.length())_$J($FN(V,",",2),10)
	do VOM
	set V=VT(3,1,1)					// @TOT(<<TAX>>,)
	set VL="                                                                                                                          "_$J($FN(V,",",2),10)
	do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,INCD,INCDINCD,INCDPL,IOSL,MSTRINCD,MSTRPL,PL,RID,RN,TOTAL,TOTAL(),V,VFMQ,VIN1,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Investor:"
	set VL=VL_$J("",10-VL.length())_$E(vc1,1,5)
	set VL=VL_$J("",23-VL.length())_"Sale %:"
	set VL=VL_$J("",31-VL.length())_$J(vc9,9,5)
	set VL=VL_$J("",43-VL.length())_"Rem Met:"
	set VL=VL_$J("",52-VL.length())_$J(vc10,12)
	set VL=VL_$J("",68-VL.length())_"Acct Grp:"
	set VL=VL_$J("",78-VL.length())_$J(vc11,7)
	set VL=VL_$J("",90-VL.length())_"Lst Rem: "
	set VL=VL_$J("",99-VL.length())_$J($$DAT^%ZM(vc12),10)
	set VL=VL_$J("",120-VL.length())_$E(vc13,1,10)
	do VOM
	set VL="    "_"Pool:"
	set VL=VL_$J("",10-VL.length())_$E(vc2,1,10)
	set VL=VL_$J("",24-VL.length())_"Fee %:"
	set VL=VL_$J("",31-VL.length())_$J(vc14,8)
	set VL=VL_$J("",43-VL.length())_"Fee Met:"
	set VL=VL_$J("",52-VL.length())_$E(vc15,1,5)
	set VL=VL_$J("",67-VL.length())_"Fee Tax %:"
	set VL=VL_$J("",78-VL.length())_$J(vc16,9,5)
	set VL=VL_$J("",92-VL.length())_"Dated:"
	set VL=VL_$J("",99-VL.length())_$J($$DAT^%ZM(vc17),10)
	do VOM
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %TIM,I,INCD,INCDINCD,INCDPL,IOSL,MSTRINCD,MSTRPL,PL,TOTAL,TOTAL(),V,VFMQ,VIN1,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL="" do VOM
	set VL="Pool "_vc2_" Totals: "
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(MSTRPL,",",2),14)
	set VL=VL_$J("",37-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J($FN(INCDPL,",",2),14)
	set VL=VL_$J("",53-VL.length())_V
	set V=VT(4,5,1)					// @TOT([LNLS8PD]TOTDUE,)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,3,1)					// @TOT([LNLS8PD]PRNDUE,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,2,1)					// @TOT([LNLS8PD]INTDUE,)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),13)
	set V=VT(4,4,1)					// @TOT([LNLS8PD]SRVFEE,)
	set VL=VL_$J("",122-VL.length())_$J($FN(V,",",2),10)
	do VOM
	set V=VT(4,1,1)					// @TOT(<<TAX>>,)
	set VL="                                                                                                                          "_$J($FN(V,",",2),10)
	do VOM
	quit

VHDG5	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,INCD,INCDINCD,INCDPL,IOSL,MSTRINCD,MSTRPL,PL,RID,RN,TOTAL,TOTAL(),V,VFMQ,VIN1,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc3,VO=V set V=$J(V,12) do VP5 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",13-VL.length())_$J(vc18,12)
	set VL=VL_$J("",26-VL.length())_$J($$DAT^%ZM(vc19),10)
	set VL=VL_$J("",37-VL.length())_$J($FN(vc20,",",2),14)
	set VL=VL_$J("",53-VL.length())_$J($FN(vc21,",",2),14)
	quit

VDTL5	// Detail
	type public String %TIM,INCD,INCDINCD,INCDPL,IOSL,MSTRINCD,MSTRPL,PL,TOTAL,TOTAL(),V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(5)=0 do VHDG5 quit:VFMQ

	set V=vc22,VO=V set V=$J($$DAT^%ZM(V),10) do VP6 quit:VFMQ!verror.get()  set VL=VL_$J("",67-VL.length())_V
	set VL=VL_$J("",78-VL.length())_$J($FN(vc5,",",2),14)
	set VL=VL_$J("",93-VL.length())_$J($FN(vc6,",",2),14)
	set VL=VL_$J("",108-VL.length())_$J($FN(vc7,",",2),13)
	set VL=VL_$J("",122-VL.length())_$J($FN(vc8,",",2),10)
	do VOM
	set V=VT(5,1,1)					// @TOT(<<TAX>>,)
	do VP7 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),10) set VL="                                                                                                                          "_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,INCD,INCDINCD,INCDPL,MSTRINCD,MSTRPL,PL,RID,RN,TOTAL,TOTAL(),VIN1,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="--------- Account -------    Paid        -------- Balance ---------              ------- At Investor's Percentage -------"
	do VOM
	set VL="    "_"Internal     Investor    Through         Master        Investor   Date Due       P&I Due      Principal      Interest        Fee"
	do VOM
	set VL="                                                                                                                                 "_"Tax"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,INCD,INCDINCD,INCDPL,MSTRINCD,MSTRPL,PL,TOTAL,TOTAL(),VIN1,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Report Totals: "
	set VL=VL_$J("",37-VL.length())_$J($FN(TOTAL("MSTR"),",",2),14)
	set VL=VL_$J("",53-VL.length())_$J($FN(TOTAL("INCD"),",",2),14)
	set V=0						// @TOT([LNLS8PD]TOTDUE,0)
	for I=0:1:5 set V=V+VT(I,5,1)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS8PD]PRNDUE,0)
	for I=0:1:5 set V=V+VT(I,3,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS8PD]INTDUE,0)
	for I=0:1:5 set V=V+VT(I,2,1)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),13)
	set V=0						// @TOT([LNLS8PD]SRVFEE,0)
	for I=0:1:5 set V=V+VT(I,4,1)
	set VL=VL_$J("",122-VL.length())_$J($FN(V,",",2),10)
	do VOM
	set V=0						// @TOT(<<TAX>>,0)
	for I=0:1:5 set V=V+VT(I,1,1)
	set VL="                                                                                                                          "_$J($FN(V,",",2),10)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: MSTRINCD

 type public Number MSTR,MSTRINCD,INCD,TOTAL()
  
 set MSTRINCD=TOTAL("MSTR",INCD).get()
	quit

VP2	// Column pre-processor - Variable: INCDINCD

 type public Number INCD,INCDINCD,TOTAL()

 set INCDINCD=TOTAL("INCD",INCD).get()
	quit

VP3	// Column pre-processor - Variable: MSTRPL

 type public Number INCD,MSTR,MSTRPL,PL,TOTAL()

 set MSTRPL=TOTAL("MSTR",INCD,PL).get()
	quit

VP4	// Column pre-processor - Variable: INCDPL

 type public Number INCD,INCDPL,PL,TOTAL()

 set INCDPL=TOTAL("INCD",INCD,PL).get()
	quit

VP5	// Column post-processor - [SYSDEV,LNLS8PD]CID

 type public Boolean FLAG

 set FLAG=0
	quit

VP6	// Column post-processor - [SYSDEV,LNLS8PD]PMTDUE

	type public String vc20,vc21
 type public Boolean FLAG
 type public String INCD,PL,TOTAL()

 //Accumulate totals for each investor account
 if FLAG = 0 do {
	//Do not accumulate for each SEQ detail line
 	set TOTAL("MSTR")=TOTAL("MSTR").get()+vc20
	set TOTAL("MSTR",INCD)=TOTAL("MSTR",INCD).get()+vc20
	set TOTAL("MSTR",INCD,PL)=TOTAL("MSTR",INCD,PL).get()+vc20
	set TOTAL("INCD")=TOTAL("INCD").get()+vc21
        set TOTAL("INCD",INCD)=TOTAL("INCD",INCD).get()+vc21
	set TOTAL("INCD",INCD,PL)=TOTAL("INCD",INCD,PL).get()+vc21
	set FLAG=1
	}
	quit

VP7	// Column pre-processor - @TOT(<<TAX>>,,E,10)

	type public String vc8,vc16
 type public Number CID,TAX
 type Number FTXPCT1,SRVFEE1

 set SRVFEE1=vc8
 set FTXPCT1=vc16

 set TAX=(SRVFEE1*FTXPCT1)/100
 set TAX=TAX.roundCur(,CID,0)
	quit
