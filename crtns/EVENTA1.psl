EVENTA1		/*
	ORIG: MATTSON - 05/15/2000
	DESC: Event Actions 1-99

	This procedure definition contains the procedure code that gets
	executed when an event gets triggered as specified by the
	event action table (EVENTACTIONS.PROCEDURE).

	Note that one or more actions may get triggered by a particular
	event.


	---- Comments --------------------------------------------------------

	---- Revision History ------------------------------------------------
	01/03/07 - NATRAJAH - 24542
	 	   Modified section XML to populate new Notification element.

	10/04/2000 Erik Scheetz - 41848
		   Modified code to support EVENTS schema changes.

	*/

	quit


	//--------------------------------------------------------------------
PROC001(RecordEVENTS event,RecordHIST hist,RecordCIFH cifh,String arg,String xml)	//
	//--------------------------------------------------------------------
	/*
	ARGUMENTS:
	     . event	Event object		/TYP=T/REQ/MECH=REFARR:R

	     . hist	Account History object	/TYP=T/REQ/MECH=REFARR:R

	     . cifh	Customer history object	/TYP=T/REQ/MECH=REFARR:R

	     . arg	Argument list		/TYP=T/REQ/MECH=REFARR:R

	     . xml	XML message		/TYP=T/REQ/MECH=REF:W

	INPUTS:
	     . DESCRIP	Event description (initialized in EVENTMON)
	*/
	//--------------------------------------------------------------------

	type String msg
	type public String DESCRIP,ENTITY,ENTITYID
	
	//I18N=OFF

	set msg(1)="NOTIFICATION:  The following event for which you have subscribed has been triggered."
	set msg(2)=$S(ENTITY="A":"Account",ENTITY="C":"Customer",1:"Entity ID")
	set msg(2)=msg(2)_" "_ENTITYID_", Event ID:  "_event.eventid_" - "_DESCRIP
	set msg(3)=""

	if event.eventtype="T",ENTITY="A" do {

		type Date date
		set date=hist.efd
		if date="" set date=%SystemDate

		set msg(3)="Tran Code: "_hist.etc
		set msg(3)=msg(3)_" Eff Date: "_$$DAT^%ZM(date)
		set msg(3)=msg(3)_" Tran Amt: "_$$EXT^%ZM(hist.tamt,"$",2)
		}

	//I18N=ON

	set xml=$$XML(.event,.msg)
	quit


	//--------------------------------------------------------------------
XML(RecordEVENTS event,String msg)	//Return XML EventNotification Message
	//--------------------------------------------------------------------

	/*
	EventNotification.dtd

	<!ELEMENT EventNotification (Group+)>
	   <!ATTLIST EventNotification Index ID #IMPLIED>
	   <!-- Group defines the information request -->
	   <!ELEMENT Group (Event)>
	      <!ELEMENT Event (ID, Notification, EventMessage1, EventMessage2, EventMessage3)>
		 <!ELEMENT ID (EntityType, EntityID, EventSeq, EventID)>
		 <!ELEMENT Notification (EmailAddress, SMSNumber, SMSProvider, CustomerNumber)>
		 
	*/

	type Number i
	type String xml
	type public String ENTITY,ENTITYID

	set xml="<?xml version=""1.0""?>"
	set xml=xml_"<!DOCTYPE EventNotification SYSTEM ""eventnotification.dtd"">"

	set xml=xml_"<EventNotification>"
	set xml=xml_"<Group>"
	set xml=xml_"<Event>"
	
	set xml=xml_"<ID>"	
	set xml=xml_"<EntityType>"_ENTITY_"</EntityType>"
	set xml=xml_"<EntityID>"_ENTITYID_"</EntityID>"
	set xml=xml_"<EventSeq>"_event.eventseq_"</EventSeq>"
	set xml=xml_"<EventID>"_event.eventid_"</EventID>"
	set xml=xml_"</ID>"

	set xml=xml_"<Notification>"
	set xml=xml_"<EmailAddress>"_event.email_"</EmailAddress>"
	set xml=xml_"<SMSNumber>"_event.sms_"</SMSNumber>"
	set xml=xml_"<SMSProvider>"_event.smspr_"</SMSProvider>"
	set xml=xml_"<CustomerNumber>"_event.acn_"</CustomerNumber>"
	set xml=xml_"</Notification>"
	
	for i=1:1 quit:'$d(msg(i))  do {
		set xml=xml_"<EventMessage"_i_">"_$$escape^UCHTML(msg(i))_"</EventMessage"_i_">"
		}

	set xml=xml_"</Event>"
	set xml=xml_"</Group>"
	set xml=xml_"</EventNotification>"

	quit xml
 #OPTION ResultClass ON
Public String vSIG()	quit "60633^51252^Hari Natrajan^3524"	// Signature - LTD^TIME^USER^SIZE
