V01S397(Number %ProcessMode,RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST)   // -  - SID= <LNPLCO> Charge-off/Recovery Summary
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:30 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fLNPL3A.exists() set fLNPL3A = Class.new("RecordLNPL3A")
  if 'LN.exists() set LN = Class.new("RecordLN")
  if 'fHIST.exists() set fHIST = Class.new("RecordHIST")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNPLCO",VPGM=$T(+0),VSNAME="Charge-off/Recovery Summary"
 set VFSN("HIST")="zfHIST",VFSN("LN")="zLN",VFSN("LNPL3A")="zfLNPL3A"
 set vPSL=1
 set KEYS(1)=LN.CID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=8 do VPR(.fLNPL3A,.LN,.fHIST),VDA1(.fLNPL3A,.LN,.fHIST),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fLNPL3A,.LN,.fHIST),VPR(.fLNPL3A,.LN,.fHIST),VDA1(.fLNPL3A,.LN,.fHIST)
 if %ProcessMode do VLOD(.fLNPL3A,.LN,.fHIST) quit:$G(ER)  do VPR(.fLNPL3A,.LN,.fHIST),VDA1(.fLNPL3A,.LN,.fHIST)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fLNPL3A,.LN,.fHIST)
	quit


VNEW(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST) // Initialize arrays if %O=0
 
 do VDEF(.fLNPL3A,.LN,.fHIST)
 do VLOD(.fLNPL3A,.LN,.fHIST)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=8
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST) // Display screen prompts
 set VO="20||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,9,15,0,0,0,0,0,0,0)_"01TAccount Number:"
 set VO(2)=$C(1,45,16,0,0,0,0,0,0,0)_"01TCustomer Number:"
 set VO(3)=$C(2,15,9,0,0,0,0,0,0,0)_"01TBorrower:"
 set VO(4)=$C(4,22,14,2,0,0,0,0,0,0)_"01TYear-to-Date  "
 set VO(5)=$C(4,38,10,2,0,0,0,0,0,0)_"01TPrior Year"
 set VO(6)=$C(4,50,12,2,0,0,0,0,0,0)_"01TLife-to-Date"
 set VO(7)=$C(6,10,11,0,0,0,0,0,0,0)_"01TCharge-off:"
 set VO(8)=$C(7,12,9,0,0,0,0,0,0,0)_"01TRecovery:"
 set VO(9)=$C(10,21,41,1,0,0,0,0,0,0)_"01T Charge-off/Recovery Transaction Details "
 set VO(10)=$C(12,15,7,2,0,0,0,0,0,0)_"01THistory"
 set VO(11)=$C(12,52,4,2,0,0,0,0,0,0)_"01TUser"
 set VO(12)=$C(12,59,8,2,0,0,0,0,0,0)_"01TRestruct"
 set VO(13)=$C(12,69,7,2,0,0,0,0,0,0)_"01TReason/"
 set VO(14)=$C(13,5,4,2,0,0,0,0,0,0)_"01TDate"
 set VO(15)=$C(13,17,3,2,0,0,0,0,0,0)_"01TSeq"
 set VO(16)=$C(13,25,10,2,0,0,0,0,0,0)_"01TCharge-off"
 set VO(17)=$C(13,41,8,2,0,0,0,0,0,0)_"01TRecovery"
 set VO(18)=$C(13,53,2,2,0,0,0,0,0,0)_"01TID"
 set VO(19)=$C(13,61,3,2,0,0,0,0,0,0)_"01TSeq"
 set VO(20)=$C(13,69,6,2,0,0,0,0,0,0)_"01TSource"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST)  // Display screen data
 new V
 s HIST=$G(HIST)
 //
 set VO="29|21|13|"
 set VO(21)=$C(1,25,12,2,0,0,0,0,0,0)_"01N"_LN.CID
 set VO(22)=$C(1,62,12,2,0,0,0,0,0,0)_"01N"_LN.ACN
 set VO(23)=$C(2,25,27,2,0,0,0,0,0,0)_"01T"_$E(LN.NAM,1,27)
 set V=$S(LN.COYTD="":"",1:$J(LN.COYTD,0,2)) set VO(24)=$C(6,22,12,2,0,0,0,0,0,0)_"01$"_$S(LN.COYTD="":"",1:$J(LN.COYTD,0,2))
 set V=$S(LN.COPY="":"",1:$J(LN.COPY,0,2)) set VO(25)=$C(6,36,12,2,0,0,0,0,0,0)_"01$"_$S(LN.COPY="":"",1:$J(LN.COPY,0,2))
 set V=$S(LN.COA="":"",1:$J(LN.COA,0,2)) set VO(26)=$C(6,50,12,2,0,0,0,0,0,0)_"01$"_$S(LN.COA="":"",1:$J(LN.COA,0,2))
 set V=$S(LN.RECYTD="":"",1:$J(LN.RECYTD,0,2)) set VO(27)=$C(7,22,12,2,0,0,0,0,0,0)_"01$"_$S(LN.RECYTD="":"",1:$J(LN.RECYTD,0,2))
 set V=$S(LN.RECPY="":"",1:$J(LN.RECPY,0,2)) set VO(28)=$C(7,36,12,2,0,0,0,0,0,0)_"01$"_$S(LN.RECPY="":"",1:$J(LN.RECPY,0,2))
 set V=$S(LN.REC="":"",1:$J(LN.REC,0,2)) set VO(29)=$C(7,50,12,2,0,0,0,0,0,0)_"01$"_$S(LN.REC="":"",1:$J(LN.REC,0,2))
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+8,DY=15 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fLNPL3A,.LN,.fHIST)
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,HIST(I))=$G(HIST(I))
 
 set VO(VX+1)=$C(DY,3,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM($P(v1,"|",1))
 set VO(VX+2)=$C(DY,15,6,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",2)
 set V=$P(v1,"|",3) set VO(VX+3)=$C(DY,23,12,2,0,0,0,0,0,0)_"01$"_$S(V="":"",1:$J(V,0,2))
 set V=$P(v1,"|",4) set VO(VX+4)=$C(DY,37,12,2,0,0,0,0,0,0)_"01$"_$S(V="":"",1:$J(V,0,2))
 set VO(VX+5)=$C(DY,52,6,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",5)
 set VO(VX+6)=$C(DY,61,4,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",6)
 set VO(VX+7)=$C(DY,71,2,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",7)
 set DY=DY+1,VX=VX+7
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=9,%MOD=7,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=14+%REPEAT,BLKSIZ=(52*%REPEAT)+123,PGM=$T(+0),DLIB="SYSDEV",DFID="LNPL3A,LN,HIST"
 set OLNTB=VPB*1000
 
 set VFSN("HIST")="zfHIST",VFSN("LN")="zLN",VFSN("LNPL3A")="zfLNPL3A"
 //
 for I=17:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,24,12)_"20N12401|1|[LN]CID"
 set %TAB(2)=$C(0,61,12)_"20N12401|99|[LN]ACN|[CIF]"
 set %TAB(3)=$C(1,24,27)_"20T|*NAM|[LN]NAM"
 set %TAB(4)=$C(5,21,12)_"20$12423|54|[LN]COYTD|||||||2"
 set %TAB(5)=$C(5,35,12)_"20$12424|54|[LN]COPY|||||||2"
 set %TAB(6)=$C(5,49,12)_"20$12431|51|[LN]COA|||||||2"
 set %TAB(7)=$C(6,21,12)_"20$12425|54|[LN]RECYTD|||||||2"
 set %TAB(8)=$C(6,35,12)_"20$12426|54|[LN]RECPY|||||||2"
 set %TAB(9)=$C(6,49,12)_"20$12432|51|[LN]REC|||||||2"
 set %TAB(10)=$C(14,2,10)_"20D12401|*HIST(1)|[*]@HIST"
 set %TAB(11)=$C(14,14,6)_"20N12402|*HIST(1)|[*]@HIST"
 set %TAB(12)=$C(14,22,12)_"20$12403|*HIST(1)|[*]@HIST|||||||2"
 set %TAB(13)=$C(14,36,12)_"20$12404|*HIST(1)|[*]@HIST|||||||2"
 set %TAB(14)=$C(14,51,6)_"20T12405|*HIST(1)|[*]@HIST"
 set %TAB(15)=$C(14,60,4)_"20N12406|*HIST(1)|[*]@HIST"
 set %TAB(16)=$C(14,70,2)_"20N12407|*HIST(1)|[*]@HIST"
 do VTBL(.fLNPL3A,.LN,.fHIST)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNPL3A fLNPL3A
 type Public RecordLN LN
 type Public RecordHIST fHIST
 do VPR(.fLNPL3A,.LN,.fHIST)
 do VDA1(.fLNPL3A,.LN,.fHIST)
 do ^DBSPNT()
 quit

VW(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST)
 do VDA1(.fLNPL3A,.LN,.fHIST)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNPL3A fLNPL3A,RecordLN LN,RecordHIST fHIST)
 do VDA1(.fLNPL3A,.LN,.fHIST)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNPL3A fLNPL3A
 type Public RecordLN LN
 type Public RecordHIST fHIST
 do VDA1(.fLNPL3A,.LN,.fHIST)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordLNPL3A fLNPL3A
 if sn="LNPL3A" do vSET1(.fLNPL3A,di,X)
 type Public RecordLN LN
 if sn="LN" do vSET2(.LN,di,X)
 type Public RecordHIST fHIST
 if sn="HIST" do vSET3(.fHIST,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordLNPL3A fLNPL3A,di,X)
 do fLNPL3A.setAuditFlag(1)
 set fLNPL3A.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordLN LN,di,X)
 do LN.setAuditFlag(1)
 set LN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET3(RecordHIST fHIST,di,X)
 do fHIST.setAuditFlag(1)
 set fHIST.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordLNPL3A fLNPL3A
 if fid="LNPL3A" quit $$vREAD1(.fLNPL3A,di)
 type Public RecordLN LN
 if fid="LN" quit $$vREAD2(.LN,di)
 type Public RecordHIST fHIST
 if fid="HIST" quit $$vREAD3(.fHIST,di)
 quit ""
vREAD1(RecordLNPL3A fLNPL3A,di)
 quit fLNPL3A.@di
vREAD2(RecordLN LN,di)
 quit LN.@di
vREAD3(RecordHIST fHIST,di)
 quit fHIST.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
