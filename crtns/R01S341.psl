R01S341	// SCA352 - ARS Reconciliation Summary (Queued)
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="SCA352"
	set RN="ARS Reconciliation Summary (Queued)"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[ARSCID]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CHKBAL,CID,CLB,CONAM,DIF,POA,RID,RN,TITL,VAL,VAL1,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA352",RN="ARS Reconciliation Summary (Queued)"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA352","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[ARSCID]CID "_VIN1,SEQ=SEQ+1
		set DQQRY(SEQ)="[ARSCID]ARSRDT=<<%SystemDate>>",SEQ=SEQ+1
		set DQQRY(SEQ)="([ARSB]ARSNDT+[ARSCID]ARSOFST+1)=<<%SystemDate>>",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("ARSB,ARSCID") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Account Number"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="ARS Reconciliation Summary (Queued)"
		set VBNRINFO("PGM")="R01S341"
		set VBNRINFO("RID")="SCA352"
		set VBNRINFO("TABLES")="ARSB,ARSCID"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ARSB]CID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,ARSB]ARSNDT"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"ARSB.CID,ARSB.ARSNDT,ARSB.VDIP,ARSB.TOTCR,ARSB.ISS"
	set VSELECT=VSELECT_"IP,ARSB.TOTDR,ARSB.CKSOUTP,ARSB.BALP,ARSCID.ARSLDT"
	set VSELECT=VSELECT_",ARSCID.ARSFRE"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"ARSB,ARSCID",VWHERE,"ARSB.CID,ARSB.ARSNDT","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10
	set vc1=V.piece($C(9),1)			// ARSB.CID
	set vc2=V.piece($C(9),2)			// ARSB.ARSNDT
	set vc3=V.piece($C(9),3)			// ARSB.VDIP
	set vc4=V.piece($C(9),4)			// ARSB.TOTCR
	set vc5=V.piece($C(9),5)			// ARSB.ISSIP
	set vc6=V.piece($C(9),6)			// ARSB.TOTDR
	set vc7=V.piece($C(9),7)			// ARSB.CKSOUTP
	set vc8=V.piece($C(9),8)			// ARSB.BALP
	set vc9=V.piece($C(9),9)			// ARSCID.ARSLDT
	set vc10=V.piece($C(9),10)			// ARSCID.ARSFRE
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VDTL2	// Detail
	type public String CHKBAL,CID,CLB,DIF,IOSL,POA,TITL,V,VAL,VAL1,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2

	if VLC+17>IOSL do VHDG0 quit:VFMQ

	set VL="Previous Reconciled Balance"
	set VL=VL_$J("",39-VL.length())_":"
	do VP1 quit:VFMQ!verror.get()  set V=$J($FN(POA,",",2),12)
	set VL=VL_$J("",42-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="    "_"+ Voids"
	set VL=VL_$J("",39-VL.length())_":"
	set VL=VL_$J("",42-VL.length())_$J($FN(vc3,",",2),12)
	do VOM
	set VL="    "_"+ Deposits (CR)"
	set VL=VL_$J("",39-VL.length())_":"
	set VL=VL_$J("",42-VL.length())_$J($FN(vc4,",",2),12)
	do VOM
	set VL="" do VOM
	set VL="                   "_"- New Issues"
	set VL=VL_$J("",39-VL.length())_":"
	set VL=VL_$J("",42-VL.length())_$J($FN(vc5,",",2),12)
	do VOM
	set VL="                   "_"- Misc (DR)"
	set VL=VL_$J("",39-VL.length())_":"
	set VL=VL_$J("",42-VL.length())_$J($FN(vc6,",",2),12)
	do VOM
	set VL="                                          "_"------------"
	do VOM
	set VL="New Reconciled Balance"
	set VL=VL_$J("",39-VL.length())_":"
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(CHKBAL,",",2),12)
	set VL=VL_$J("",42-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="    "_"+ Outstanding Amount"
	set VL=VL_$J("",39-VL.length())_":"
	set VL=VL_$J("",42-VL.length())_$J($FN(vc7,",",2),12)
	do VOM
	set VL="                                          "_"------------"
	do VOM
	set VL="Computed Ledger Balance"
	set VL=VL_$J("",39-VL.length())_":"
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(CLB,",",2),12)
	set VL=VL_$J("",42-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="                   "_"- Ledger Balance"
	set VL=VL_$J("",39-VL.length())_":"
	set VL=VL_$J("",42-VL.length())_$J($FN(vc8,",",2),12)
	do VOM
	set VL="                                          "_"------------"
	do VOM
	set VL="Difference"
	set VL=VL_$J("",39-VL.length())_":"
	do VP4 quit:VFMQ!verror.get()  set V=$J($FN(DIF,",",2),12)
	set VL=VL_$J("",42-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CHKBAL,CID,CLB,CONAM,DIF,POA,RID,RN,TITL,VAL,VAL1,VL,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	do VP5 quit:VFMQ!verror.get()  set V="Account Number: "_vc1_" " set VL=V
	do VP6 quit:VFMQ!verror.get()  set V="Account Title: "_TITL
	set VL=VL_$J("",29-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="For the Period "
	do VP7 quit:VFMQ!verror.get()  set V=$E(VAL,1,10)
	set VL=VL_$J("",15-VL.length())_V
	set VL=VL_$J("",26-VL.length())_"through "
	set VL=VL_$J("",34-VL.length())_$E(VAL1,1,10)
	do VOM
	set VL="======================================================"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: POA

 	type public Date FDT
	type public Number CID,POA

	if CID="NONE" quit

 	type RecordARSB arsb=Db.getRecord("ARSB","CID=:CID,ARSNDT=:FDT",1)
 	set POA=(arsb.BALP-arsb.CKSOUTP)

	quit

VP2	// Column pre-processor - Variable: CHKBAL

	type public String vc4,vc3,vc5,vc6
 	type public Number CHKBAL,POA

 	set CHKBAL=POA+vc4+vc3
 	set CHKBAL=CHKBAL-vc5-vc6
 	
	quit


VP3	// Column pre-processor - Variable: CLB

	type public String vc7
 	type public Number CHKBAL,CLB

	set CLB=vc7+CHKBAL

	quit


VP4	// Column pre-processor - Variable: DIF

	type public String vc8
	type public Number CLB,DIF

 	set DIF=CLB-vc8

	quit


VP5	// Column pre-processor - Account Number: <<CID>>

	type public String vc1
	type public Number CID
 
	set CID=vc1

	if CID.get()="" set CID="NONE"

	quit

VP6	// Column pre-processor - Account Title: <<TITL>>

 	type public Number CID
	type public String TITL

 	set TITL="NONE" quit:(CID="NONE")
 	
	type RecordACN acn=Db.getRecord("ACN","CID=:CID")
 	set TITL=acn.TITLE1
 	set TITL=TITL.extract(1,30)

	quit


VP7	// Column pre-processor - Variable: VAL

	type public String vc9,vc10
	type public Number CID
	type public Date FDT,JD,NJD,TDT,VAL,VAL1
 	type String FRE,ARSFRE

 	set (VAL,VAL1)=""
 	set (VAL1,TDT)=vc9
 	set ARSFRE=vc10

 	if (CID="NONE")!(TDT.get().isNull()) quit

 	type ResultSet rs=Db.select("ARSNDT","ARSB","CID=:CID AND ARSNDT<:TDT","ARSNDT DESC")
 	if rs.next() set VAL=rs.getCol(1)

	if 'VAL.isNull() set FDT=VAL
 	else  do {
		set FRE="-"_ARSFRE,JD=VAL1 
		set (VAL,FDT)=$$NJD^UFRE(JD,FRE)
		}

	set VAL=VAL+1,VAL=$$DAT^%ZM(VAL),VAL1=$$DAT^%ZM(VAL1)
	
	quit

