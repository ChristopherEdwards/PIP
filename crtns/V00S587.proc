V00S587(%ProcessMode,RecordUTBLEFTINST fUTBL)   // -  - SID= <UTBLEFTINST> EFT Institution Maintenance
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:29 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLEFTINST",VPGM=$T(+0),VSNAME="EFT Institution Maintenance"
 set VFSN("UTBLEFTINST")="zfUTBL"
 set vPSL=1
 set KEYS(1)=fUTBL.KEY
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBL),VDA1(.fUTBL),^DBSPNT()

 if '%ProcessMode do VNEW(.fUTBL),VPR(.fUTBL),VDA1(.fUTBL)
 if %ProcessMode do VLOD(.fUTBL) quit:$G(ER)  do VPR(.fUTBL),VDA1(.fUTBL)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBL)
	quit


VNEW(RecordUTBLEFTINST fUTBL) // Initialize arrays if %O=0
 
 do VDEF(.fUTBL)
 do VLOD(.fUTBL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLEFTINST fUTBL)
 if fUTBL.FINAN="" set fUTBL.FINAN=1
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLEFTINST fUTBL) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLEFTINST fUTBL) // Display screen prompts
 set VO="13||13|"
 set VO(0)="8|0"
 set VO(1)=$C(8,16,18,1,0,0,0,0,0,0)_"01T Institution Name:"
 set VO(2)=$C(9,11,23,1,0,0,0,0,0,0)_"01T Financial Institution:"
 set VO(3)=$C(10,11,23,1,0,0,0,0,0,0)_"01T Onus Institution Flag:"
 set VO(4)=$C(11,21,13,0,0,0,0,0,0,0)_"01TAddress Line:"
 set VO(5)=$C(12,29,5,0,0,0,0,0,0,0)_"01TCity:"
 set VO(6)=$C(13,28,6,0,0,0,0,0,0,0)_"01TState:"
 set VO(7)=$C(14,22,12,0,0,0,0,0,0,0)_"01TPostal Code:"
 set VO(8)=$C(15,23,11,0,0,0,0,0,0,0)_"01TShort Name:"
 set VO(9)=$C(16,19,15,0,0,0,0,0,0,0)_"01T Cashing Limit:"
 set VO(10)=$C(17,22,12,0,0,0,0,0,0,0)_"01TBranch Code:"
 set VO(11)=$C(18,10,24,0,0,0,0,0,0,0)_"01TNon-Fin. Credit Account:"
 set VO(12)=$C(19,15,19,0,0,0,0,0,0,0)_"01TUtility Company ID:"
 set VO(13)=$C(20,3,31,0,0,0,0,0,0,0)_"01TTimes to Retry (Direct Debits):"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLEFTINST fUTBL)  // Display screen data
 new V
 //
 set VO="26|14|13|"
 set VO(14)=$C(8,35,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBL.NAM,1,40)
 set VO(15)=$C(9,35,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBL.FINAN:"Y",1:"N")
 set VO(16)=$C(10,35,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBL.ONUS:"Y",1:"N")
 set VO(17)=$C(11,35,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBL.ADDR,1,40)
 set VO(18)=$C(12,35,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBL.CITY,1,40)
 set VO(19)=$C(13,35,2,2,0,0,0,0,0,0)_"00T"_$E(fUTBL.STATE,1,2)
 set VO(20)=$C(14,35,10,2,0,0,0,0,0,0)_"00T"_$E(fUTBL.PSTLCD,1,10)
 set VO(21)=$C(15,35,20,2,0,0,0,0,0,0)_"00T"_$E(fUTBL.SHNM,1,20)
 set V=$S(fUTBL.CHKLIM="":"",1:$J(fUTBL.CHKLIM,0,2)) set VO(22)=$C(16,35,12,2,0,0,0,0,0,0)_"00$"_$S(fUTBL.CHKLIM="":"",1:$J(fUTBL.CHKLIM,0,2))
 set VO(23)=$C(17,35,6,2,0,0,0,0,0,0)_"00N"_fUTBL.BRCD
 set VO(24)=$C(18,35,24,2,0,0,0,0,0,0)_"00T"_$E(fUTBL.NFINAN,1,24)
 set VO(25)=$C(19,35,24,2,0,0,0,0,0,0)_"00T"_$E(fUTBL.UTILITYID,1,24)
 set VO(26)=$C(20,35,2,2,0,0,0,0,0,0)_"00N"_fUTBL.RETRY
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLEFTINST fUTBL)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=13,VPT=8,VPB=20,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLEFTINST"
 set OLNTB=20035
 
 set VFSN("UTBLEFTINST")="zfUTBL"
 //
 // 
	
	
 set %TAB(1)=$C(7,34,40)_"01T12401|1|[UTBLEFTINST]NAM"
 set %TAB(2)=$C(8,34,1)_"00L12407|1|[UTBLEFTINST]FINAN|||do VP1^V00S587(.fUTBL)"
 set %TAB(3)=$C(9,34,1)_"00L12402|1|[UTBLEFTINST]ONUS"
 set %TAB(4)=$C(10,34,40)_"00T12405|1|[UTBLEFTINST]ADDR"
 set %TAB(5)=$C(11,34,40)_"00T12411|1|[UTBLEFTINST]CITY"
 set %TAB(6)=$C(12,34,2)_"00T12412|1|[UTBLEFTINST]STATE"
 set %TAB(7)=$C(13,34,10)_"00T12413|1|[UTBLEFTINST]PSTLCD"
 set %TAB(8)=$C(14,34,20)_"00T12414|1|[UTBLEFTINST]SHNM"
 set %TAB(9)=$C(15,34,12)_"00$12404|1|[UTBLEFTINST]CHKLIM|||||||2"
 set %TAB(10)=$C(16,34,6)_"00N12406|1|[UTBLEFTINST]BRCD"
 set %TAB(11)=$C(17,34,24)_"00T12408|1|[UTBLEFTINST]NFINAN"
 set %TAB(12)=$C(18,34,24)_"00T12409|1|[UTBLEFTINST]UTILITYID"
 set %TAB(13)=$C(19,34,2)_"00N12410|1|[UTBLEFTINST]RETRY"
 do VTBL(.fUTBL)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLEFTINST fUTBL) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLEFTINST fUTBL) //
 if X do PROTECT^DBSMACRO("UTBLEFTINST.NFINAN")
 if X do PROTECT^DBSMACRO("UTBLEFTINST.UTILITYID")

 if 'X do UNPROT^DBSMACRO("UTBLEFTINST.NFINAN")
 if 'X do UNPROT^DBSMACRO("UTBLEFTINST.UTILITYID")
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLEFTINST fUTBL
 do VPR(.fUTBL)
 do VDA1(.fUTBL)
 do ^DBSPNT()
 quit

VW(RecordUTBLEFTINST fUTBL)
 do VDA1(.fUTBL)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLEFTINST fUTBL)
 do VDA1(.fUTBL)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLEFTINST fUTBL
 do VDA1(.fUTBL)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLEFTINST fUTBL
 if sn="UTBLEFTINST" do vSET1(.fUTBL,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLEFTINST fUTBL,di,X)
 do fUTBL.setAuditFlag(1)
 set fUTBL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLEFTINST fUTBL
 if fid="UTBLEFTINST" quit $$vREAD1(.fUTBL,di)
 quit ""
vREAD1(RecordUTBLEFTINST fUTBL,di)
 quit fUTBL.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
