R01S491	// SCA547 - RSP Account Analysis Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:59 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number VIN1
	type String VIN2="ALL"

	set RID="SCA547"
	set RN="RSP Account Analysis Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|12||[IRATYPE]ACN|[CIF]:NOVAL||D IRACHECK^IRADBS(X)||N|Customer Number is equal to|||||"
	set %TAB("VIN2")="|255||[IRATYPE]IRATYP|[STBLIRA]:NOVAL||D EXT^DBSQRY||T|Retirement/Savings Plan Type|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=31
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number VIN1
	type public String VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %EXT,%TIM,ACN,CONAM,D46,D49,D9,MADAMT,MADCY,MADYTD,PLNTOT,REPTOT,RID,RN,RPASEQ,SW9,VL,VLOF,VRF(),VSTATS(),YEAR,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA547",RN="RSP Account Analysis Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA547","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[IRATYPE]RPASEQ#1#12,[IRATYPE]PLANID#15#12,[IRATYPE]PLDTE#29#10,[CIF]DOB#41#10,[IRATYPE]SPOUSEID#55#12,[IRATYPE]AUTFRE#82#12\[IRATYPE]AUTAMT#82#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[IRATYPE]ACN = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[IRATYPE]IRATYP "_VIN2,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DEP,CIF,IRATYPE") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Customer Number is equal to"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Retirement/Savings Plan Type"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="RSP Account Analysis Report"
		set VBNRINFO("PGM")="R01S491"
		set VBNRINFO("RID")="SCA547"
		set VBNRINFO("TABLES")="DEP,CIF,IRATYPE"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]CID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,IRATYPE]IRATYP"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,IRATYPE]ACN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,IRATYPE]RPASEQ"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,IRATYPE]PLANID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DEP.ACN,IRATYPE.RPASEQ,DEP.CID,IRATYPE.IRATYP,IRAT"
	set VSELECT=VSELECT_"YPE.ACN,IRATYPE.PLANID,CIF.NAM,DEP.ACR,DEP.BAL,IRA"
	set VSELECT=VSELECT_"TYPE.PLDTE,CIF.DOB,IRATYPE.SPOUSEID,IRATYPE.AUTFRE"
	set VSELECT=VSELECT_",IRATYPE.AUTAMT"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DEP,CIF,IRATYPE",VWHERE,"DEP.CID,IRATYPE.IRATYP,IRATYPE.ACN,IRATYPE.RPASEQ,IRATYPE.PLANID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc3,vovc4,vovc5,vovc2,vovc6
	set vovc3="",vovc4="",vovc5="",vovc2="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc2,vc2,vovc6,vc6
	set vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc2=vc2,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// DEP.ACN
	set vc2=V.piece($C(9),2)			// IRATYPE.RPASEQ
	set vc3=V.piece($C(9),3)			// DEP.CID
	set vc4=V.piece($C(9),4)			// IRATYPE.IRATYP
	set vc5=V.piece($C(9),5)			// IRATYPE.ACN
	set vc6=V.piece($C(9),6)			// IRATYPE.PLANID
	set vc7=V.piece($C(9),7)			// CIF.NAM
	set vc8=V.piece($C(9),8)			// DEP.ACR
	set vc9=V.piece($C(9),9)			// DEP.BAL
	set vc10=V.piece($C(9),10)			// IRATYPE.PLDTE
	set vc11=V.piece($C(9),11)			// CIF.DOB
	set vc12=V.piece($C(9),12)			// IRATYPE.SPOUSEID
	set vc13=V.piece($C(9),13)			// IRATYPE.AUTFRE
	set vc14=V.piece($C(9),14)			// IRATYPE.AUTAMT
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2
 type public Number ACN,D46,D9,MADAMT,MADCY,MADYTD,PLNTOT,RPASEQ,SW9
 type public String YEAR
 set ACN=vc1
 set RPASEQ=vc2

 type RecordIRA ira=Db.getRecord("IRA","ACN=:ACN,RPASEQ=:RPASEQ,TAXYR=:YEAR")

 set MADAMT=ira.madamt
 set MADCY=ira.madcy
 set D46=ira.d46
 set MADYTD=ira.madytd

 set SW9=ira.sw1+ira.sw2+ira.sw3+ira.sw4+ira.sw5
 set SW9=SW9+ira.sw6+ira.sw7+ira.sw8+ira.sw10
 set SW9=SW9+ira.sw11+ira.sw12+ira.sw13
 set SW9=SW9+ira.sw14+ira.sw15+ira.sw16+ira.sw17
 set SW9=SW9+ira.sw18+ira.sw19+ira.sw20
 set SW9=SW9+ira.sw21+ira.sw22+ira.sw23+ira.sw24
 set SW9=SW9+ira.sw25+ira.sw26+ira.sw27
 set SW9=SW9+ira.sw28+ira.sw29+ira.sw34+ira.sw35
 set SW9=SW9+ira.sw36+ira.sw37+ira.sw38
 set SW9=SW9+ira.sw39+ira.sw43+ira.sw44+ira.sw45
 set SW9=SW9+ira.sw47+ira.sw48+ira.sw49
 set SW9=SW9+ira.sw50+ira.sw51+ira.sw52
 set SW9=SW9+ira.sw53+ira.sw54+ira.sw55
 set SW9=SW9+ira.sw56+ira.sw57+ira.sw58+ira.sw59
 set SW9=SW9+ira.sw60+ira.sw61+ira.sw62
 set SW9=SW9+ira.sw63+ira.sw64+ira.sw65+ira.sw66
 set SW9=SW9+ira.sw67+ira.sw68+ira.sw69
 set SW9=SW9+ira.sw70+ira.sw71+ira.sw72+ira.sw73
 set SW9=SW9+ira.sw74+ira.sw75+ira.sw76
 set SW9=SW9+ira.sw77+ira.sw78+ira.sw79+ira.sw80
 set SW9=SW9+ira.sw81+ira.sw82+ira.sw83
 set SW9=SW9+ira.sw84+ira.sw85+ira.sw86+ira.sw87
 set SW9=SW9+ira.sw88+ira.sw89+ira.sw94+ira.sw95
 set SW9=SW9+ira.sw96+ira.sw97+ira.sw98+ira.sw99

 set D9=ira.w1+ira.w2+ira.w3+ira.w4+ira.w5+ira.w6+ira.w7+ira.w8+ira.w10
 set D9=D9+ira.w11+ira.w12+ira.w13+ira.w14+ira.w15+ira.w16+ira.w17
 set D9=D9+ira.w18+ira.w19+ira.w20+ira.w21+ira.w22+ira.w23+ira.w24
 set D9=D9+ira.w25+ira.w26+ira.w27+ira.w28+ira.w29+ira.w34+ira.w35
 set D9=D9+ira.w36+ira.w37+ira.w38+ira.w39+ira.w43+ira.w44+ira.w45
 set D9=D9+ira.w47+ira.w48+ira.w49+ira.w50+ira.w51+ira.w52
 set D9=D9+ira.w53+ira.w54+ira.w55+ira.w56+ira.w57+ira.w58+ira.w59
 set D9=D9+ira.w60+ira.w61+ira.w62+ira.w63+ira.w64+ira.w65+ira.w66
 set D9=D9+ira.w67+ira.w68+ira.w69+ira.w70+ira.w71+ira.w72+ira.w73
 set D9=D9+ira.w74+ira.w75+ira.w76+ira.w77+ira.w78+ira.w79+ira.w80
 set D9=D9+ira.w81+ira.w82+ira.w83+ira.w84+ira.w85+ira.w86+ira.w87
 set D9=D9+ira.w88+ira.w89+ira.w94+ira.w95+ira.w96+ira.w97+ira.w98
 set D9=D9+ira.w99+SW9
 set PLNTOT=0

	quit

VPREAQ	// Pre-processor (after query)

 type public Number D49,D9,MADAMT,MADCY,REPTOT
 type public String YEAR
 set YEAR=(%SystemDate.toString()).piece("/",3) 
 if YEAR.length()<4 do {
	if YEAR>88 set YEAR=19_YEAR
	else  set YEAR=20_YEAR
	}

 set (D49,D9,REPTOT,MADCY,MADAMT)=0  
 quit


IRACHECK( String acn)
 type public Number %EXT,ER
 
 if acn'="ALL" set %EXT=1 do ^UCIF 
 if 'ER do {
	type ResultSet rs=Db.select("ACN","IRA","ACN=:acn")
	if rs.isEmpty() do Runtime.setErrMSG("",1564)
	}
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc3,vovc3,vc4,vovc4,vc5,vovc5,vc2,vovc2,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(+vovc3'=+vc3) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1
	if vb2!(+vovc4'=+vc4) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc5'=+vc5) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(+vovc2'=+vc2) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VDTL1	// Detail
	type public String %EXT,%TIM,ACN,D46,D49,D9,ER,IOSL,MADAMT,MADCY,MADYTD,PLNTOT,REPTOT,RPASEQ,SW9,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="     "_"Account:"
	set VL=VL_$J("",14-VL.length())_$J(vc3,12)
	set VL=VL_$J("",28-VL.length())_"Acr Int:"
	set VL=VL_$J("",37-VL.length())_$J($FN(vc8,",",2),12)
	set VL=VL_$J("",51-VL.length())_"Balance:"
	set VL=VL_$J("",60-VL.length())_$J($FN(vc9,",",2),12)
	do VOM
	quit

VDTL4	// Detail
	type public String %EXT,%TIM,ACN,D46,D49,D9,ER,IOSL,MADAMT,MADCY,MADYTD,PLNTOT,REPTOT,RPASEQ,SW9,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc2,12)
	set VL=VL_$J("",14-VL.length())_$E(vc6,1,12)
	set VL=VL_$J("",28-VL.length())_$J($$DAT^%ZM(vc10),10)
	set VL=VL_$J("",40-VL.length())_$J($$DAT^%ZM(vc11),10)
	set VL=VL_$J("",54-VL.length())_$J(vc12,12)
	set VL=VL_$J("",69-VL.length())_$J($FN(MADAMT,",",2),10)
	set VL=VL_$J("",81-VL.length())_$E(vc13,1,12)
	set VL=VL_$J("",97-VL.length())_$J($FN(D9,",",2),12)
	do VOM
	set VL="                    "_$J($FN(D46,",",2),10)
	set VL=VL_$J("",52-VL.length())_$J($FN(MADCY,",",2),10)
	set VL=VL_$J("",67-VL.length())_$J($FN(MADYTD,",",2),12)
	set VL=VL_$J("",81-VL.length())_$J($FN(vc14,",",2),12)
	do VOM
	quit

VSUM5	// Summary
	type public String %EXT,%TIM,ACN,D46,D49,D9,ER,I,IOSL,MADAMT,MADCY,MADYTD,PLNTOT,REPTOT,RPASEQ,SW9,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                       "_"Total Plan Value:"
	set V=$J($FN(PLNTOT,",",2),14) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",73-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %EXT,%MSKD,%TIM,ACN,CONAM,D46,D49,D9,MADAMT,MADCY,MADYTD,PLNTOT,REPTOT,RID,RN,RPASEQ,SW9,VL,YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Customer Number :"
	set VL=VL_$J("",18-VL.length())_$J(vc5,12)
	set VL=VL_$J("",32-VL.length())_$E(vc7,1,40)
	do VOM
	set VL="      "_"Plan Type : "
	set VL=VL_$J("",18-VL.length())_$J(vc4,2)
	do VOM
	set VL="" do VOM
	set VL="                  "_"          Plan Date Date of Birth  Spouse CIF        Curr MAD     Auto Freq"
	do VOM
	set VL="    "_"Plan Seq  Plan ID   MAD Inclusion                MAD Paid       Tot MAD YTD      Auto Amt         W/H YTD"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %EXT,%TIM,ACN,D46,D49,D9,ER,MADAMT,MADCY,MADYTD,PLNTOT,REPTOT,RPASEQ,SW9,YEAR,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                           "_"Report Total:"
	set VL=VL_$J("",73-VL.length())_$J($FN(REPTOT,",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - Variable: PLNTOT

 type public Number PLNTOT,REPTOT

 S REPTOT=REPTOT+PLNTOT

	quit
