BCHTGPG //Batch BCHTRGTPRG - Targeted Customer and Account Purge
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:47 - shetyes
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHTRGTPRG Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHTRGTPRG")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHTRGTPRG") quit
 do JOBMGR^BCHUTL(%FN,"BCHTRGTPRG",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHTRGTPRG")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(RTYPE,RKEY) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHTRGTPRG","*","",RTYPE.get()_","_RKEY.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHTRGTPRG",RTYPE.get()_","_RKEY.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHTRGTPRG",RTYPE.get()_","_RKEY.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,RTYPE,RKEY)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHTRGTPRG","*","",RTYPE.get()_","_RKEY.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHTRGTPRG",RTYPE.get()_","_RKEY.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,RTYPE,RKEY) //
	new CLS,DAT,DATA,GRP,TYPE

	if RTYPE="ACN" do {
		
		type RecordACN acn=Db.getRecord("ACN","CID=:RKEY",1)
		if acn.getMode() set DATA=acn.cls_"|"_acn.grp_"|"_acn.type
		
		set CLS=DATA.piece("|",1)
			
		if CLS="D" do Db.delete("DEP","CID=:RKEY") quit
		do Db.delete("LN","CID=:RKEY")
		}

	if RTYPE="CIF" do {
		
		type RecordCIF cif=Db.getRecord("CIF","ACN=:RKEY",1)
		if cif.getMode() set DATA=cif.cls_"|"_cif.grp_"|"_cif.type

		do Db.delete("CIF","ACN=:RKEY")
	}

	// just in case ...
	
	if DATA.get().isNull() quit		

	// Also clean up DTJNA.
	
	set CLS=DATA.piece("|",1)
	set GRP=DATA.piece("|",2)
	set TYPE=DATA.piece("|",3)
	
	type RecordTARGETPURGE targetpurge=Db.getRecord("TARGETPURGE","RTYPE=:RTYPE,RKEY=:RKEY",1)
	if targetpurge.getMode() set DAT=targetpurge.crdate
		
	if ('DAT.isNull()),('CLS.isNull()),('GRP.isNull()),('TYPE.isNull()) do Db.fastDelete("DTJNA","TJD=:DAT,CLS=:CLS,GRP=:GRP,TYP=:TYPE,CID=:RKEY")

	// If delete failed, do not remove TARGETPURGE entry... 
	// Live to try again another day!
	
	quit:ER
	do Db.delete("TARGETPURGE","RTYPE=:RTYPE AND RKEY=:RKEY")

	quit

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,RTYPE,RKEY
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set RTYPE=vRECORD.piece($C(9),1)
 set RKEY=vRECORD.piece($C(9),2)
 do vPROC(RTYPE,RKEY)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,RTYPE,RKEY
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+24>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("RTYPE,RKEY","TARGETPURGE","")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	do SOURCE^BCHSOURC("BOFF","PURG",.%UserID,.BRCD,.%UserClass,.TSDRCID,.TSCRCID)
	if ER set %BatchExit=1 quit
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
	do SOURCE^BCHSOURC("BOFF","PURG",.%UserID,.BRCD,.%UserClass,.TSDRCID,.TSCRCID)
	if ER set %BatchExit=1 quit
	
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
