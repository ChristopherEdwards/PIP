V00S179(%ProcessMode,RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1())   // -  - SID= <FEESCH> Fee Schedule Parameters
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:18 - kini
 // This screen is used to enter, maintain, or display the specifications for
 // the fee schedules used by IBS to compute fee amounts based on account
 // balances or item counts.  The value of the Type of Tier field controls
 // whether data in the Tier Value field represents account balances or item counts.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="FEESCH",VPGM=$T(+0),VSNAME="Fee Schedule Parameters"
 set VFSN("UTBLFEESCH")="zfUTBLFEE",VFSN("UTBLFEESCH1")="zfFEESCH1"
 set vPSL=1
 set KEYS(1)=fUTBLFEE.FEESCH
 set KEYS(2)=fUTBLFEE.FEESCHDT
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=13 do VPR(.fUTBLFEE,.fFEESCH1()),VDA1(.fUTBLFEE,.fFEESCH1()),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fUTBLFEE,.fFEESCH1()) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLFEE,.fFEESCH1()),VPR(.fUTBLFEE,.fFEESCH1()),VDA1(.fUTBLFEE,.fFEESCH1())
 if %ProcessMode do VLOD(.fUTBLFEE,.fFEESCH1()) quit:$G(ER)  do VPR(.fUTBLFEE,.fFEESCH1()),VDA1(.fUTBLFEE,.fFEESCH1())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLFEE,.fFEESCH1())
 type Number ptr
 set ptr=""
 for  set ptr = fFEESCH1(ptr).order() quit:ptr.isNull()  do {
     if fFEESCH1(ptr).TL="" kill fFEESCH1(ptr)
     }
	quit


VNEW(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLFEE,.fFEESCH1())
 do VLOD(.fUTBLFEE,.fFEESCH1())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=13
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) // Display screen prompts
 set VO="9||13|"
 set VO(0)="|0"
 set VO(1)=$C(3,10,14,0,0,0,0,0,0,0)_"01T Fee Schedule:"
 set VO(2)=$C(3,50,15,1,0,0,0,0,0,0)_"01TEffective Date:"
 set VO(3)=$C(4,11,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(4)=$C(4,47,18,1,0,0,0,0,0,0)_"01T Type of Schedule:"
 set VO(5)=$C(5,8,16,0,0,0,0,0,0,0)_"01T Custom Program:"
 set VO(6)=$C(5,51,14,1,0,0,0,0,0,0)_"01T Type of Tier:"
 set VO(7)=$C(8,7,10,2,0,0,0,0,0,0)_"01TTier Value"
 set VO(8)=$C(8,25,22,2,0,0,0,0,0,0)_"01TTier Fee / Fee Percent"
 set VO(9)=$C(8,59,8,2,0,0,0,0,0,0)_"01TBase Fee"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1())  // Display screen data
 new V
 //
 set VO="16|10|13|"
 set VO(10)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(11)=$C(3,25,6,2,0,0,0,0,0,0)_"01T"_$E(fUTBLFEE.FEESCH,1,6)
 set VO(12)=$C(3,66,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fUTBLFEE.FEESCHDT)
 set VO(13)=$C(4,25,20,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFEE.DESC,1,20)
 set VO(14)=$C(4,66,1,2,0,0,0,0,0,0)_"00N"_fUTBLFEE.SCHTYP
 set VO(15)=$C(5,25,20,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFEE.PGMLNK,1,20)
 set VO(16)=$C(5,66,1,2,0,0,0,0,0,0)_"00N"_fUTBLFEE.TIER
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+6,DY=10 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLFEE,.fFEESCH1())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'fFEESCH1(I).getPointer() do {
     set fFEESCH1(I)=Class.new("RecordUTBLFEESCH1","$G(KEYS(1)),$G(KEYS(2))")
     }
 set VO(VX+1)=$C(DY,5,12,2,0,0,0,0,0,0)_"01$"_$S(fFEESCH1(I).TL="":"",1:$J(fFEESCH1(I).TL,0,2))
 set V=$S(fFEESCH1(I).FA="":"",1:$J(fFEESCH1(I).FA,0,5)) set VO(VX+2)=$C(DY,30,13,2,0,0,0,0,0,0)_"00N"_$S(fFEESCH1(I).FA="":"",1:$J(fFEESCH1(I).FA,0,5))
 set V=$S(fFEESCH1(I).BASEAMT="":"",1:$J(fFEESCH1(I).BASEAMT,0,2)) set VO(VX+3)=$C(DY,55,12,2,0,0,0,0,0,0)_"00$"_$S(fFEESCH1(I).BASEAMT="":"",1:$J(fFEESCH1(I).BASEAMT,0,2))
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=6,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=9+%REPEAT,BLKSIZ=(37*%REPEAT)+58,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLFEESCH"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLFEESCH")="zfUTBLFEE",VFSN("UTBLFEESCH1")="zfFEESCH1"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,24,6)_"21T12401|1|[UTBLFEESCH]FEESCH"
 set %TAB(2)=$C(2,65,10)_"21D12402|1|[UTBLFEESCH]FEESCHDT"
 set %TAB(3)=$C(3,24,20)_"01T12401||[UTBLFEESCH]DESC"
 set %TAB(4)=$C(3,65,1)_"01N12402||[UTBLFEESCH]SCHTYP|[STBLFEESCH]"
 set %TAB(5)=$C(4,24,20)_"00T12404||[UTBLFEESCH]PGMLNK|||do VP1^V00S179(.fUTBLFEE,.fFEESCH1)"
 set %TAB(6)=$C(4,65,1)_"01N12403||[UTBLFEESCH]TIER|[STBLFEETIER]||do VP2^V00S179(.fUTBLFEE,.fFEESCH1)"
 set %TAB(7)=$C(9,4,12)_"20$12403|1|[UTBLFEESCH1]TL||||do VP3^V00S179(.fUTBLFEE,.fFEESCH1)|||2"
 set %TAB(8)=$C(9,29,13)_"00N12401|1|[UTBLFEESCH1]FA||||do VP4^V00S179(.fUTBLFEE,.fFEESCH1)|0|9999999|5"
 set %TAB(9)=$C(9,54,12)_"00$12402|1|[UTBLFEESCH1]BASEAMT|||do VP5^V00S179(.fUTBLFEE,.fFEESCH1)||||2"
 do VTBL(.fUTBLFEE,.fFEESCH1())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) //
	type public Boolean ER
	type public String RM, X

	type String RTN

	quit:X.isNull()

	set RTN = X.piece("^", 2)
	set RTN = X.piece("(", 1)
	if '$$VALID^%ZRTNS(RTN) do {

		set ER = 1
		// Invalid routine name ~p1
		set RM = $$^MSG(1454, RTN)
	}

	quit
VP2(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) //
	type public Boolean ER
	type public Number J, K, L
	type public String RM, X

	if (fUTBLFEE.schtyp = 1), (X '= 1) do {

		set ER = 1
		// Schedule type 1 cannot have tier type ~p1
		set RM = $$^MSG(33, X)
	}

	else  do {

		set L = X	// Set L with the value of TIER
		set (J, K) = 0	// Initialise the values of J and K
	}

	quit
VP3(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) //
	// Set keys

	set fFEESCH1(I(1)).feesch = fUTBLFEE.feesch
	set fFEESCH1(I(1)).feeschdt = fUTBLFEE.feeschdt

	quit
VP4(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) //
	type public Number L

	if (L = 2) do CHANGE^DBSMACRO("MAX", 100)

	quit
VP5(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1()) //
	type public Boolean ER
	type public Number J, K, L
	type public String RM, X

	type Boolean FAN, TLN

	if 'fFEESCH1(I(1)).fa.isNull() do {
		set fFEESCH1(I(1)).fa = +fFEESCH1(I(1)).fa
		set FAN = 0
	}
	else  set FAN = 1

	if fFEESCH1(I(1)).tl.isNull() set TLN = 1
	else  set TLN = 0

	if 'TLN set J = 1

	if (fFEESCH1(I(1)).tl = 1) set K = 1

	if (J > 0), (L = 1), (K = 0) do {

		set ER = 1
		// Tier value must be '1' with tier type of '1'
		set RM = $$^MSG(2657)
	}

	// OK if all three fields are null or all three have data
	if FAN, TLN, X.isNull()
	else  if 'FAN, 'TLN, 'X.isNull()
	else  do {

		set ER = 1
		// Missing required field(s)/data item set definition error
		set RM = $$^MSG(1768)
	}

	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLFEESCH fUTBLFEE
 type Public RecordUTBLFEESCH1 fFEESCH1()
 do VPR(.fUTBLFEE,.fFEESCH1())
 do VDA1(.fUTBLFEE,.fFEESCH1())
 do ^DBSPNT()
 quit

VW(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1())
 do VDA1(.fUTBLFEE,.fFEESCH1())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1())
 do VDA1(.fUTBLFEE,.fFEESCH1())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLFEESCH fUTBLFEE
 type Public RecordUTBLFEESCH1 fFEESCH1()
 do VDA1(.fUTBLFEE,.fFEESCH1())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLFEESCH fUTBLFEE
 if sn="UTBLFEESCH" do vSET1(.fUTBLFEE,di,X)
 type Public RecordUTBLFEESCH1 fFEESCH1()
 if sn="UTBLFEESCH1" do vSET2(fFEESCH1(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLFEESCH fUTBLFEE,di,X)
 do fUTBLFEE.setAuditFlag(1)
 set fUTBLFEE.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLFEESCH1 fFEESCH1,di,X)
 do fFEESCH1.setAuditFlag(1)
 set fFEESCH1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLFEESCH fUTBLFEE
 if fid="UTBLFEESCH" quit $$vREAD1(.fUTBLFEE,di)
 type Public RecordUTBLFEESCH1 fFEESCH1()
 if fid="UTBLFEESCH1" quit $$vREAD2(fFEESCH1(I(1)),di)
 quit ""
vREAD1(RecordUTBLFEESCH fUTBLFEE,di)
 quit fUTBLFEE.@di
vREAD2(RecordUTBLFEESCH1 fFEESCH1,di)
 quit fFEESCH1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLFEESCH fUTBLFEE,RecordUTBLFEESCH1 fFEESCH1())  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
	type public Boolean ER
	type public Date FEESCHDT
	type public String RM
	if (%ProcessMode < 2), (FEESCHDT < %SystemDate) do {
		set ER = 1
		// Effective date must be the same as or after the system date
		set RM = $$^MSG(879)
	}
	quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
