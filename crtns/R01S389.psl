R01S389	// SCA424 - Screen/Transaction Balancing Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String EFD,PID
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA424"
	set RN="Screen/Transaction Balancing Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[UBAL02A]TPD|[UBAL02A]TPD:DISTINCT:NOVAL||S EFD=X||D|Transaction Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String EFD,PID
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsubtot(),vsysdate,vtgt(),vth,vtnk,vtok

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA424",RN="Screen/Transaction Balancing Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA424","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[UBAL02A]CID#16#12,[UBAL02A]ETC#30#8,[UBAL02A]ITC1#40#1,[UBAL02A]TSO#43#25,[UBAL02A]TAMT#71#55"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Transaction Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE="UBAL02A.TPD=:VIN1 AND UBAL02A.PID=:PID"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Screen/Transaction Balancing Report"
		set VBNRINFO("PGM")="R01S389"
		set VBNRINFO("RID")="SCA424"
		set VBNRINFO("TABLES")="UBAL02A,UBAL02"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,UBAL02A]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,UBAL02A]TPD"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,UBAL02A]BRCD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,UBAL02A]SCN"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,UBAL02A]CRCD"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,UBAL02A]UID"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,UBAL02A]KEY"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("UBAL02A.PID,UBAL02A.TPD,UBAL02A.BRCD,UBAL02A.SCN,UBAL02A.CRCD,UBAL02A.UID,UBAL02A.KEY,UBAL02.TPD,UBAL02A.CID,UBAL02A.ETC,UBAL02A.ITC1,UBAL02A.TSO,UBAL02A.TAMT,UBAL02.BRCD,UBAL02.SCN,UBAL02.UID,UBAL02.CRCD,UBAL02.TDR,UBAL02.DRLCR,UBAL02.TDRECT,UBAL02.DRECNET,UBAL02.TCRECT,UBAL02.CRECNET,UBAL02.TCR,UBAL02.TDRTEC,UBAL02.TCRTEC","UBAL02A,UBAL02","UBAL02A.TPD=:VIN1 AND UBAL02A.PID=:PID","UBAL02A.PID,UBAL02A.TPD,UBAL02A.BRCD,UBAL02A.SCN,UBAL02A.CRCD,UBAL02A.UID,UBAL02A.KEY","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26
	set vc1=V.piece($C(9),1)			// UBAL02A.PID
	set vc2=V.piece($C(9),2)			// UBAL02A.TPD
	set vc3=V.piece($C(9),3)			// UBAL02A.BRCD
	set vc4=V.piece($C(9),4)			// UBAL02A.SCN
	set vc5=V.piece($C(9),5)			// UBAL02A.CRCD
	set vc6=V.piece($C(9),6)			// UBAL02A.UID
	set vc7=V.piece($C(9),7)			// UBAL02A.KEY
	set vc8=V.piece($C(9),8)			// UBAL02.TPD
	set vc9=V.piece($C(9),9)			// UBAL02A.CID
	set vc10=V.piece($C(9),10)			// UBAL02A.ETC
	set vc11=V.piece($C(9),11)			// UBAL02A.ITC1
	set vc12=V.piece($C(9),12)			// UBAL02A.TSO
	set vc13=V.piece($C(9),13)			// UBAL02A.TAMT
	set vc14=V.piece($C(9),14)			// UBAL02.BRCD
	set vc15=V.piece($C(9),15)			// UBAL02.SCN
	set vc16=V.piece($C(9),16)			// UBAL02.UID
	set vc17=V.piece($C(9),17)			// UBAL02.CRCD
	set vc18=V.piece($C(9),18)			// UBAL02.TDR
	set vc19=V.piece($C(9),19)			// UBAL02.DRLCR
	set vc20=V.piece($C(9),20)			// UBAL02.TDRECT
	set vc21=V.piece($C(9),21)			// UBAL02.DRECNET
	set vc22=V.piece($C(9),22)			// UBAL02.TCRECT
	set vc23=V.piece($C(9),23)			// UBAL02.CRECNET
	set vc24=V.piece($C(9),24)			// UBAL02.TCR
	set vc25=V.piece($C(9),25)			// UBAL02.TDRTEC
	set vc26=V.piece($C(9),26)			// UBAL02.TCRTEC
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public String vsubtot(), vtgt(), vth, vtnk, vtok

	set vtok = ""

	do EXT^UBAL02
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=EFD,PID
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	if 'vskp(7).get() do VDTL7 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1
	if vb6!(vovc6'=vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(7)=VT(7)+1
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CONAM,EFD,ER,IOSL,PID,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsubtot(),vsysdate,vtgt(),vth,vtnk,vtok

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "_"Balancing Date:"
	set VL=VL_$J("",18-VL.length())_$J($$DAT^%ZM(vc8),10)
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,EFD,IOSL,PID,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsubtot(),vsysdate,vtgt(),vth,vtnk,vtok

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$E(vc14,1,6)
	set VL=VL_$J("",7-VL.length())_$J(vc15,4)
	set VL=VL_$J("",15-VL.length())_$E(vc16,1,12)
	set V=vc17,VO=V set V=$E(V,1,6) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",29-VL.length())_V		// [SYSDEV,UBAL02]CRCD
	set VL=VL_$J("",37-VL.length())_$J($FN(vc18,",",2),14)
	set VL=VL_$J("",53-VL.length())_$J($FN(vc19,",",2),14)
	set VL=VL_$J("",69-VL.length())_$J($FN(vc20,",",2),14)
	set VL=VL_$J("",85-VL.length())_$J($FN(vc21,",",2),14)
	set VL=VL_$J("",101-VL.length())_$J($FN(vc22,",",2),14)
	set VL=VL_$J("",117-VL.length())_$J($FN(vc23,",",2),14)
	do VOM
	set VL="                                     "_$J($FN(vc24,",",2),14)
	set VL=VL_$J("",69-VL.length())_$J($FN(vc25,",",2),14)
	set VL=VL_$J("",101-VL.length())_$J($FN(vc26,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VSUM6	// Summary
	type public String %TIM,EFD,I,IOSL,PID,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsubtot(),vsysdate,vtgt(),vth,vtnk,vtok

	if 'VT(6) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$E(vc14,1,6)
	set VL=VL_$J("",7-VL.length())_$J(vc15,4)
	set VL=VL_$J("",13-VL.length())_"Cumulative "
	set VL=VL_$J("",24-VL.length())_$E(vc17,1,3)
	set VL=VL_$J("",27-VL.length())_":"
	set VL=VL_$J("",30-VL.length())_$J($FN(vsubtot("TDR"),",",2),16)
	set VL=VL_$J("",47-VL.length())_$J($FN(vsubtot("DRLCR"),",",2),16)
	set VL=VL_$J("",64-VL.length())_$J($FN(vsubtot("TDRECT"),",",2),16)
	set VL=VL_$J("",81-VL.length())_$J($FN(vsubtot("DRECNET"),",",2),16)
	set VL=VL_$J("",98-VL.length())_$J($FN(vsubtot("TCRECT"),",",2),16)
	set VL=VL_$J("",115-VL.length())_$J($FN(vsubtot("CRECNET"),",",2),16)
	do VOM
	set VL="                              "_$J($FN(vsubtot("TCR"),",",2),16)
	set VL=VL_$J("",64-VL.length())_$J($FN(vsubtot("TDRTEC"),",",2),16)
	set VL=VL_$J("",98-VL.length())_$J($FN(vsubtot("TCRTEC"),",",2),16)
	do VOM
	set VL="" do VOM
	quit

VDTL7	// Detail
	type public String %TIM,EFD,IOSL,PID,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsubtot(),vsysdate,vtgt(),vth,vtnk,vtok

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="               "_$J(vc9,12)
	set VL=VL_$J("",29-VL.length())_$E(vc10,1,8)
	set VL=VL_$J("",39-VL.length())_$J(vc11,1)
	set VL=VL_$J("",42-VL.length())_$E(vc12,1,25)
	set VL=VL_$J("",70-VL.length())_$E(vc13,1,55)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,EFD,PID,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsubtot(),vsysdate,vtgt(),vth,vtnk,vtok
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+10,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="                                                                   "_"------------------ Batch Transaction Tellers -------------------"
	do VOM
	set VL="                                      "_"Total Debits    Difference      DR E/C Tran       Difference    CR E/C Tran     Difference"
	do VOM
	set VL="Branch Screen  User ID       Curr     Total Credits                   Corrected DR                    Corrected CR    "
	do VOM
	set VL="               "_"Account       Code     D/C Source                      Amount"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	set VL="Transaction Date:"
	set VL=VL_$J("",18-VL.length())_$E($$DAT^%ZM(EFD),1,10)
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,VPN,vc14,vc15,vc17,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsubtot(),vsysdate,vtgt(),vth,vtnk,vtok
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="---------------------- ------ ---------------- ---------------- ---------------- ---------------- ---------------- -----------------"
	do VOM
	set V=$E(" ",1,20) do VP2 quit:VFMQ!verror.get()  set VL=" "_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,UBAL02]CRCD

	type public String vc8,vc14,vc15,vc17,vc18,vc24,vc19,vc20,vc25,vc21,vc22,vc26,vc23
	// Update CRCD level sub-totals

	type public String vsubtot(), vtgt(), vth, vtnk, vtok

	set vtnk = vc8_"|"_vc14_"|"_vc15_"|"_vc17

	set vth = vc18_"|"_vc24_"|"_vc19
 	set vth = vth_"|"_vc20_"|"_vc25_"|"_vc21
	set vth = vth_"|"_vc22_"|"_vc26_"|"_vc23

	if (vtnk = vtok) do {
		set vsubtot("TDR") = vsubtot("TDR") + vc18
		set vsubtot("TCR") = vsubtot("TCR") + vc24
		set vsubtot("DRLCR") = vsubtot("DRLCR") + vc19
		set vsubtot("TDRECT") = vsubtot("TDRECT") + vc20
		set vsubtot("TDRTEC") = vsubtot("TDRTEC") + vc25
		set vsubtot("DRECNET") = vsubtot("DRECNET") + vc21
		set vsubtot("TCRECT") = vsubtot("TCRECT") + vc22
		set vsubtot("TCRTEC") = vsubtot("TCRTEC") + vc26
		set vsubtot("CRECNET") = vsubtot("CRECNET") + vc23
	}
	else  do {
		set vtok=vtnk
		set vsubtot("TDR") = vc18
		set vsubtot("TCR") = vc24
		set vsubtot("DRLCR") = vc19
		set vsubtot("TDRECT") = vc20
		set vsubtot("TDRTEC") = vc25
		set vsubtot("DRECNET") = vc21
		set vsubtot("TCRECT") = vc22
		set vsubtot("TCRTEC") = vc26
		set vsubtot("CRECNET") = vc23
	}

	do {		// Sum grand totals by currency
		type String CRCD = vc17

		if vtgt(CRCD).get().isNull() set vtgt(CRCD) = vth
		else  set vtgt(CRCD) = $$SAV(vtgt(CRCD), vth, "|")
	}

	quit


SAV(String ARSRC, String ARADD, String SEP)    // Sum array variables

	/*
	ARGUMENTS:
		. ARSRC		Source array
		. ARADD		Array to be added to ARSRC
		. SEP		Separator
	*/

	type Number vki, vkpc

	if (ARSRC.length(SEP) > ARADD.length(SEP)) set vkpc = ARSRC.length(SEP)
	else  set vkpc = ARADD.length(SEP)

	for vki = 1:1:vkpc set ARSRC.piece(SEP, vki) = ARSRC.piece(SEP, vki) + ARADD.piece(SEP, vki)

	quit ARSRC

VP2	// Column post-processor - Variable: " "

	// Display per currency grand totals

	type public String VL, vtgt()

	type Number vkfst, vki

	if (vtgt.data() = 1) set vtgt("   ") = "0|0|0|0|0|0|0|0|0"

	set vki = ""
	set vkfst = 1

	for  set vki = vtgt(vki).order() quit:vki.isNull()  do {

		if (vkfst = 1) set VL = $J($$^MSG(3853), 21)_"   "_vki_"  "
		else  set VL = $$CF(" ", 24)_vki_"  "
		set VL = VL_" "_$J($FN(vtgt(vki).piece("|", 1), ",", 2), 16)
		set VL = VL_" "_$J($FN(vtgt(vki).piece("|", 3), ",", 2), 16)
		set VL = VL_" "_$J($FN(vtgt(vki).piece("|", 4), ",", 2), 16)
		set VL = VL_" "_$J($FN(vtgt(vki).piece("|", 6), ",", 2), 16)
		set VL = VL_" "_$J($FN(vtgt(vki).piece("|", 7), ",", 2), 16)
		set VL = VL_" "_$J($FN(vtgt(vki).piece("|", 9), ",", 2), 16)
		do VOM

		if (vkfst = 1) set VL = $J($$^MSG(3854), 21)_$$CF(" ", 8)
		else  set VL = $$CF(" ", 29)
		set VL = VL_" "_$J($FN(vtgt(vki).piece("|", 2), ",", 2), 16)
		set VL = VL_" "_$$CF(" ",17)_$J($FN(vtgt(vki).piece("|", 5), ",", 2), 16)
		set VL = VL_" "_$$CF(" ",17)_$J($FN(vtgt(vki).piece("|", 8), ",", 2), 16)
		do VOM
		set VL = ""
		do VOM
		set vkfst=0
 	}

	quit


CF(String CHAR, Number REP) // Character Fill

	type Number vki
	type String vkt = ""

	for vki = 1:1:REP set vkt = vkt_CHAR
	quit vkt
