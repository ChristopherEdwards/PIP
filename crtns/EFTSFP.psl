EFTSFP	/*
        ORIG: DATTAR - 03/08/2002
        DESC: Supports Standing Foreign Payment
 
        ---- Revision History--------------------------------------------------
        
           09/26/05 - KUMARB - CR 17050
           	      Modified VPG01 section to pass the screen name from
           	      INTPAYBR00 to INTPAYBR00A in the call of DRV^USID.

	   09/09/05 - KELLYP - CR 17050
	   	      Modified VPG00 section to reference EFTPAY instead of 
	   	      EFTSFPX1.  EFTSFPX1 is a table mapped to an index and
	   	      is being obsoleted.  Also removed pre-2003 revision 
	   	      history.

	   07/30/04 - KELLYP - CR 11405
	   	      Cleaned up procedure to conform to PSL standards and 
	   	      corrected logic errors from previous conversion.

        -----------------------------------------------------------------------
	*/

	quit

public NEW	// Create Payment Order

	do INIT(0)

	quit


public UPD	// Modify Payment Order

	type String EFTQRY,EFTQRY1

	// I18N=OFF
	set EFTQRY="[EFTPAY]STATUS=""A"" AND [EFTPAY]EFTTYPE=<<SRC>>"
	set EFTQRY1="[EFTREF]STATUS=""A"" AND [EFTREF]EFTTYPE=<<SRC>>"
	// I18N=ON

	do INIT(1)

        quit


public DIS	// Display Payment Order

	type String EFTQRY,EFTQRY1

	// I18N=OFF
	set EFTQRY="[EFTPAY]EFTTYPE=<<SRC>>"
	set EFTQRY1="[EFTREF]EFTTYPE=<<SRC>>"
	// I18N=ON

	do INIT(2)

	quit


public DEL	// Delete Payment Order

	type String EFTQRY,EFTQRY1

	// I18N=OFF
	set EFTQRY="([EFTPAY]STATUS=""A"" OR [EFTPAY]STATUS=""V"") AND [EFTPAY]EFTTYPE=<<SRC>>"
	set EFTQRY1="([EFTREF]STATUS=""A"" OR [EFTREF]STATUS=""V"") AND [EFTREF]EFTTYPE=<<SRC>>"
	// I18N=ON

	do INIT(3)

        quit
 

public VFY	// Verify Payment Order (Branch)

	type Boolean VFYFLG
	type String EFTQRY,EFTQRY1

	set VFYFLG=1
	
	// I18N=OFF
	set EFTQRY="([EFTPAY]STATUS=""A"" OR [EFTPAY]STATUS=""V"") AND [EFTPAY]EFTTYPE=<<SRC>>"
	set EFTQRY1="([EFTREF]STATUS=""A"" OR [EFTREF]STATUS=""V"") AND [EFTREF]EFTTYPE=<<SRC>>"
	// I18N=ON

	do INIT(1)

        quit
 

public ENH	// Enhance Payment Order (Move from "AS" to "A")

	type Boolean ENHFLG
	type String EFTQRY,EFTQRY1,SSRC

	set ENHFLG=1
	
	// I18N=OFF
	set SSRC="NDPO"
	set EFTQRY="[EFTPAY]STATUS=""AS"" AND [EFTPAY]EFTTYPE=<<SSRC>>"
	set EFTQRY1="[EFTREF]STATUS=""AS"" AND [EFTREF]EFTTYPE=<<SSRC>>"
	// I18N=ON

	do INIT(1)

        quit
 
 
INIT(%ProcessMode) // Initialize local variables

	type Public Boolean ENHFLG,VFYFLG
	type Public String EFTQRY

	type Boolean DELETE
	type String GLQRY,OLNTB,VFMQ
	type Number %PAGE,%PG,MSG,MSGSTR,SRC,usrfld

	// I18N=OFF
	set GLQRY="""HM""'[{GLAD.TYPE}"

	if %ProcessMode set EFTQRY=EFTQRY_" AND [EFTPAY]CID=<<CID>>"

	// I18N=ON
	set %PG=0 
	set %PAGE=1
	set MSG=1 
	set MSGSTR=5
	set SRC="NDPOST"
	set DELETE=%ProcessMode=3

	if 'VFYFLG.data() set VFYFLG=0
	if 'ENHFLG.data() set ENHFLG=0
	
	set usrfld=$S('%ProcessMode:51,VFYFLG:52,1:"")

	type RecordEFTPAY fEFTPAY
	type RecordACN acn

	do VPG(.fEFTPAY,.acn)

	quit


VPG(RecordEFTPAY fEFTPAY,RecordACN acn) // Page control

	type Public Number %PG,ER
	type Public String VFMQ
	
	type Boolean FINISH,gl,msg,ogl
	type Number BRCD,DCC
	type String CID,GL,IO,REFNO,SEQ

        set FINISH=0

        for  do { quit:FINISH
                if %PG=0 do VPG00(.fEFTPAY,.acn) if ER set FINISH=1 quit

                if %PG>0 do VPG01(.fEFTPAY,.acn) if ER set FINISH=1 quit

		// Process completed/aborted
                if "DFQ"[VFMQ do VER(.fEFTPAY) set FINISH=1 quit

                set %PG=%PG+1
                }
        quit
 

VPG00(RecordEFTPAY fEFTPAY,RecordACN acn)	// Set up

	type Public Boolean ENHFLG,gl,msg,ogl
	type Public Number BRCD,ER
	type Public String CID,GL,IO,REFNO,SEQ,VFMQ

	type String %READ,%TAB(),UPGREF

	set (GL,CID,SEQ,BRCD,REFNO)=""

	// Set up %TAB
	set %TAB("BRCD")=".BRCD1/TBL=[UTBLBRCD]BRCD"
	set %TAB("GL")=".GL/TBL=[GLAD]:QUERY GLQRY/XPP=D GLPP^EFTSFP"
	set %TAB("CID")=".CID1/TBL=[ACN]CID/XPP=D CIDPP^EFTSFP"
	set %TAB("DCC")="[EFTPAY]CC/TBL=[UTBLCCNTR]CC"

	if %ProcessMode do {
		set %TAB("BRCD")=".BRCD1/TBL=[EFTPAY]BRCD:DISTINCT:QU ""[EFTPAY]EFTTYPE=""NDPOST"""""
		set %TAB("CID")=".CID1/TBL=[EFTPAY]CID:DISTINCT:QU ""[EFTPAY]BRCD=<<BRCD>>"""
		set %TAB("SEQ")=".SEQ8/TBL=""[EFTPAY]SEQ/LEN=6,BRCD/LEN=6,LPDT/LEN=10,PROCDT/LEN=10,AMOUNT,CRCD/LEN=3,ANTAMT,STATUS/LEN=4:QU EFTQRY""/XPP=D SEQPP^EFTSFP"
		}

	if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)

	// Build %TAB for transaction reference number for single NDPO
	if ENHFLG do {
		set UPGREF=""                                 
		set %TAB("REFNO")=".TRREFNO2/TBL=""[EFTREF]REFNO,[EFTREF]CID,[EFTREF]SEQ,[fEFTPAY]EFD,[fEFTPAY]AMOUNT,[fEFTPAY]STATUS:QU EFTQRY1""/XPP=D REFNOPP^EFTPAY1"
		}

	if '%ProcessMode set %READ="@@%FN,,,BRCD/REQ,CID,GL,DCC/REQ"
	else  set %READ="@@%FN,,,BRCD/REQ,CID/REQ,SEQ/REQ"

	if %ProcessMode=2 set %READ=%READ_",,IO/REQ"
	if ENHFLG set %READ="@@%FN,,,REFNO,BRCD/REQ,CID,GL,SEQ/REQ"

	do ^UTLREAD 

	if "Q"[VFMQ set ER=1 quit

	if GL'="" do {
		set CID=GL 
		set (gl,ogl)=1
		}
	else  set (gl,ogl)=0

	// Determine of this NDPOST was for a G/L account
	if %ProcessMode do {
	
		set fEFTPAY=Db.getRecord("EFTPAY","CID=:CID,SEQ=:SEQ",1)
		do fEFTPAY.setAuditFlag(1) 

		// Fee Currency
		if fEFTPAY.feecrcd=3 set ogl=1
		}

	// Load any pre-existing messages; if in create mode, default 'yes'
	if %ProcessMode=0 set msg=1
	if %ProcessMode=1 set msg=Db.isDefined("EFTPAY","CID=:CID,SEQ=:SEQ")

	if %ProcessMode=2,IO'=$I do OPEN^SCAIO

	quit


CIDPP   // Check if account set up for Payment Orders.

	type Public Boolean ogl
	type Public Number %OSAVE,ER
	type Public String CID,GL,RM,X
	
	if X="" quit
 
        //set to avoid error nul-sub for ^fEFTPAY
        set GL=""

	set CID=X

	// ~p1 is not a valid account number
        if 'Db.isDefined("ACN","CID") do Runtime.setErrMSG("ACN",7683,CID) quit

        // Shared portion FEP/HOST  -  loads account information from ACN
        type RecordACN acn=Db.getRecord("ACN","CID=:CID",1)

	// Unable to load data for account ~p1
	if acn.getMode()=0 do Runtime.setErrMSG("ACN",7546,CID) quit
	
	// Account ~p1 is closed
        if acn.stat=4 do Runtime.setErrMSG("ACN",6050,CID) quit

        // Account ~p1 not permitted for foreign payments
        if acn.eftdeb=0 do Runtime.setErrMSG("ACN",7664,CID) quit
	else  if acn.eftdeb=1 do { quit
                if %OSAVE do GOTO^DBSMACRO("@SEQ")
                else  do GOTO^DBSMACRO("END")
                }
 
        if acn.type="" quit
        if acn.cls="" quit
 
 	type Boolean POCO
 
        else  if acn.cls="D" do {
                type RecordPRODDFTD proddftd=Db.getRecord("PRODDFTD","TYPE=:acn.type")
                set POCO=proddftd.eftdeb
                }

	else  if acn.cls="L" do {
                type RecordPRODDFTL proddftl=Db.getRecord("PRODDFTL","TYPE=:acn.type")
                set POCO=proddftl.eftdeb
                }

	// Product ~p1 not permitted for foreign payments
	if POCO=0 do Runtime.setErrMSG("ACN",7679,acn.type) quit
	else  if POCO=1 do { quit
                if %OSAVE do GOTO^DBSMACRO("@SEQ")
		else  do GOTO^DBSMACRO("END")
                }
	// Permission for foreign payments on product ~p1 not defined
        else  if POCO="" do Runtime.setErrMSG("ACN",7678,acn.type) quit
 
	set ogl=0
	
	quit


BRCDPP	// Post-processor for Branch

	type Public Number %OSAVE,DCC,BRCD

	if %OSAVE'=0 quit
	set DCC=BRCD.get()

	quit


GLPP	// Post-processor for G/L Account

	type Public Boolean ogl
	type Public String CID,ER,RM,X

	// Enter account number or G/L number
	if X=""&(CID="") do Runtime.setErrMSG("EFTPAY",1812) quit

	if X="" quit

	set CID=X 
	set ogl=1
	
	do BRCDPP

	quit


SEQPP	// Post-processor for Sequence
	
	type Public String %OSAVE,CID,ER,GL,RM,X
	
	type String STAT
	
	// Must enter sequence
	if (X="")&((CID'="")!(GL'="")) do Runtime.setErrMSG("EFTPAY",7672) quit

	type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID=:CID,SEQ=:X",1)
	set STAT=eftpay.status

	if %OSAVE=1&'((STAT'="A")!(STAT'="Y")) do {  quit
		// Cannot update payment with status ~p1
		 
		type RecordSTBLESTAT stblestat=Db.getRecord("STBLESTAT","STATUS=:STAT")
		do Runtime.setErrMSG("EFTPAY",1828,stblestat.desc)
		}
	
	do UIDPP(.eftpay)
	
	quit


UIDPP(RecordEFTPAY eftpay)  //User ID validation

	type Public Boolean VFYFLG
	type Public String ER,RM

	// User who added standing foreign payment cannot verify it
	if VFYFLG.get(),eftpay.uidadd=%UserID do Runtime.setErrMSG("EFTPAY",1841) quit

	quit


EXPDTPP	// Checks for a valid expiration date

	type Public Date X
	type Public String CID,ER,RM

	if X="" quit

	// Expiration date precedes system date
	if X<%SystemDate do Runtime.setErrMSG("EFTPAY",1843) quit

	type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID=:CID,SEQ=:X",1)

	// Expiration date precedes next process date
	if X<eftpay.procdt do Runtime.setErrMSG("EFTPAY",1846)
	
	quit


VPG01(RecordEFTPAY fEFTPAY,RecordACN acn) // Screen

	type Public Boolean ENHFLG,ogl
	type Public String BRCD,CID,ER,SEQ,SRC,VFMQ
	
	type String AMTTYPDSC,STATDSC

	set acn=Db.getRecord("ACN","CID=:CID",1)
	
	if '%ProcessMode do {
		set SEQ=Db.nextVal("EFTPAY","CID=:acn.cid")
        	set fEFTPAY=Db.getRecord("EFTPAY","CID=:acn.cid,SEQ=:SEQ",1)
		if 'ogl do {
			set fEFTPAY.acn=acn.acn
			if BRCD="" set fEFTPAY.brcd=acn.boo
			else  set fEFTPAY.brcd=BRCD
			}

		if ogl set fEFTPAY.brcd=BRCD
		set fEFTPAY.lchdt=%SystemDate
		set fEFTPAY.status="A" 
		type RecordSTBLESTAT estat=Db.getRecord("STBLESTAT","fEFTPAY.status")
		set STATDSC=estat.desc

		type RecordCTBLEFTTYPE ctblefttype=Db.getRecord("CTBLEFTTYPE","KEY=:SRC")
		set fEFTPAY.met=ctblefttype.paymetdft
		set fEFTPAY.procdt=%SystemDate
		set fEFTPAY.amttyp=1 
		set AMTTYPDSC=$$^MSG(6058)
		set fEFTPAY.efttype=SRC
		set fEFTPAY.datecre=%SystemDate
		}

	// Determine screen to use
	if '(ENHFLG) do DRV^USID(%ProcessMode,"INTSFPBR00",.fEFTPAY,.acn) quit:ER

	if ENHFLG do { quit:ER
		type DbSet db=Db.selectDbSet("EFTHLD","CID=:acn.cid AND SEQ=:SEQ","HSEQ DESC")
		type RecordEFTHLD fEFTHLD
		if db.next() set fEFTHLD=db.getRecord("EFTHLD")

		do DRV^USID(%ProcessMode,"INTPAYBR00A",.fEFTHLD,.fEFTPAY,.acn) quit:ER
		}

	if VFMQ="Q" set ER=1 quit

	quit


VER(RecordEFTPAY fEFTPAY) //

	type Public Boolean ENHFLG,ogl,VFYFLG
	type Public String %fkey,CID,SEQ,VFMQ

	if %ProcessMode=2!(%ProcessMode=4) do END quit

	if (%fkey="ESC") set VFMQ="Q" do END quit
	if (VFYFLG)!(ENHFLG) do {
		if 'CID.data() quit
		if 'SEQ.data() quit
		set VFMQ="F"
		}

	if VFMQ="Q" do END quit

	if (%ProcessMode=0) do {

		// Fee Currency
		if (ogl) set fEFTPAY.ttype=3

		// Fee Currency
		else  set fEFTPAY.ttype=0
		}

	do FILE(.fEFTPAY)

	do END

	quit


FILE(RecordEFTPAY fEFTPAY)	// File data

	type Public Boolean DELETE,ENHFLG,VFYFLG
	type Public Number SEQ
	type Public String %UID,CID,ER,SRC,usrfld,VFMQ

	type Boolean CBA
	type String OPT,EFTTYPE

	//CBA payment
	set CBA=fEFTPAY.nxtpmt

	//store user ID
	if usrfld=51 set fEFTPAY.uidadd=%UID.get()
	if usrfld=52 set fEFTPAY.uidver=%UID.get()
	set EFTTYPE=SRC

	// Deletion
	if DELETE do { quit:'OPT

		set OPT=$$YN^DBSMBAR("",$$^MSG(3487),1)

		if 'OPT set VFMQ="Q" quit
		set fEFTPAY.benad2="D"
		set %ProcessMode=1
		}

	// Branch Verification
	if (%ProcessMode=1)&('DELETE)&(VFYFLG) do { quit:ER
	
		// Payment order verified?
		set OPT=$$YN^DBSMBAR("",$$^MSG(3486),1)
		if 'OPT set VFMQ="Q" quit
		set fEFTPAY.status="V"
		}

	// Enhancement
	if (%ProcessMode=1)&(ENHFLG) do { quit:ER
		set OPT=$$YN^DBSMBAR("",$$^MSG(3485),1)
		if 'OPT set VFMQ="Q" quit
		set fEFTPAY.status="A"
		}

	// Last Change Date
	set fEFTPAY.lchdt=%SystemDate

	if (%ProcessMode=0)!(%ProcessMode=1) do { 
		do fEFTPAY.save()
		}
	if %ProcessMode=3 do {
		do Db.delete("EFTPAY","CID=:CID AND SEQ=:SEQ")
 		}	

	quit


END	// End processing

	type Public Boolean DELETE,VFYFLG
	type Public String CID,ER,RM,VFMQ

	if ER.get()!(%ProcessMode=2)!(%ProcessMode=4) quit

	set ER="W"
	set CID=CID.get()

	// Display (not) created/deleted/verified/modified message
	if VFMQ="Q" do { quit

		// Standing foreign payment for account ~p1 not created
		if %ProcessMode=0 set RM=$$^MSG(1860,CID) quit

		// Standing foreign payment for account ~p1 not deleted
		if DELETE set RM=$$^MSG(1861,CID) quit

		// Standing foreign payment for account ~p1 not verified
		if VFYFLG set RM=$$^MSG(1876,CID) quit

		// Standing foreign payment for account ~p1 not modified
		set RM=$$^MSG(1877,CID)
		}

	// Standing foreign payment for account ~p1 created
	if %ProcessMode=0 set RM=$$^MSG(1854,CID) quit

	// Standing foreign payment for account ~p1 deleted
	if DELETE set RM=$$^MSG(1855,CID) quit

	// Standing foreign payment for account ~p1 verified
	if VFYFLG set RM=$$^MSG(1856,CID) quit

	// Standing foreign payment for account ~p1 modified
	set RM=$$^MSG(1857,CID)

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60185^37219^Balasubramonian Sankar^12219"	// Signature - LTD^TIME^USER^SIZE
