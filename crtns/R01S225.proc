R01S225	// SCA173 - Service Fee/Credit Usage by Officer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String QDAT
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1
	type Number VIN2
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"

	set RID="SCA173"
	set RN="Service Fee/Credit Usage by Officer"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[SRV]SCND|[SRV]SCND:DISTINCT:NOVAL||S QDAT=X||D|Service Charge Date|||||"
	set %TAB("VIN2")="|1||[SRV]PLTP|[STBLPLTP]:NOVAL||S PLTP=X||N|Plan Type is equal to|||||"
	set %TAB("VIN3")="|255||[DEP]OFF|[UTBLOFF]:NOVAL||D EXT^DBSQRY||T|Primary Account Officer Code|||||"
	set %TAB("VIN4")="|255||[SRV]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN5")="|255||[DEP]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN6")="|255||[DEP]FEEPLN|[FEEPLN]PLAN:DISTINCT:QU ""[FEEPLN]PLTP=0"":NOVAL||D EXT^DBSQRY||T|Service Fee Plan|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#1,VIN3#0,VIN4#0,VIN5#0,VIN6#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=31
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String QDAT
	type public Date VIN1
	type public Number VIN2
	type public String VIN3,VIN4,VIN5,VIN6
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ACTOFF,ADJYTD,AVGBALY,AVGCOLY,AVGFLTY,AVGRESY,CONAM,ERNALLY,FDAT,FEEACTY,FEEANLY,FEECHGY,FEEOFFY,FEEUNPY,INVBALY,NETPL,NETY,RESREQY,RID,RN,SCND,SYSADJY,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA173",RN="Service Fee/Credit Usage by Officer"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA173","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[SRV]SCND = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		set DQQRY(SEQ)="[SRV]PLTP = "_$$addqts^DBSRWUTL(VIN2),SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]OFF "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[SRV]CID "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DEP]TYPE "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[DEP]FEEPLN "_VIN6,SEQ=SEQ+1
		set DQQRY(SEQ)="[SYSDEV,DEP]ANLTYP=1",SEQ=SEQ+1
		set DQQRY(SEQ)="[SYSDEV,DEP]FEEPLN'=""""",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("SRV,DEP,SRV0") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Service Charge Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC1|"_"Plan Type is equal to"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Primary Account Officer Code"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Account Number"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Product Type"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Service Fee Plan"_"|VIN6|"_VIN6.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Service Fee/Credit Usage by Officer"
		set VBNRINFO("PGM")="R01S225"
		set VBNRINFO("RID")="SCA173"
		set VBNRINFO("TABLES")="SRV,DEP,SRV0"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]OFF"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SRV]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,SRV]PLTP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,SRV]SCND"

		set VBNRINFO("DOC",1)="This report contains information about the earnings calculated and service fees"
		set VBNRINFO("DOC",2)="or usage credits assessed on accounts that are subject to earnings analysis. "
		set VBNRINFO("DOC",3)="It provides account officers with sufficient information to review their"
		set VBNRINFO("DOC",4)="customers' analysis positions and profitability to the institution."
		set VBNRINFO("DOC",5)="For each account, the report includesbalances calculated for the service fee"
		set VBNRINFO("DOC",6)="period or the credit usage period, a summary of the earnings allowance"
		set VBNRINFO("DOC",7)="calculation, and a summary of the fees or usage credits assessed for the period"
		set VBNRINFO("DOC",8)="being reported and for the year-to-date.  It also includes totals for each"
		set VBNRINFO("DOC",9)="account officer and for all account officers reported."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:28 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DEP.OFF,SRV.CID,SRV.PLTP,SRV.SCND,SRV0.AVGBAL,SRV0"
	set VSELECT=VSELECT_".AVGFLT,SRV0.AVGCOL,SRV0.RESREQ,SRV0.AVGRES,SRV.ER"
	set VSELECT=VSELECT_"NALL,SRV.ERNADJ,SRV.SYSADJ,SRV.NETFWD,SRV.FEECHG,S"
	set VSELECT=VSELECT_"RV.FEEANL,SRV.FEEOFF,SRV.FEEACT,SRV.FEEUNP,DEP.TYP"
	set VSELECT=VSELECT_"E,DEP.TITLE1,DEP.BOO,DEP.FEEPLN,SRV.NETFWDO"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"SRV,DEP,SRV0",VWHERE,"DEP.OFF,SRV.CID,SRV.PLTP,SRV.SCND","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// DEP.OFF
	set vc2=V.piece($C(9),2)			// SRV.CID
	set vc3=V.piece($C(9),3)			// SRV.PLTP
	set vc4=V.piece($C(9),4)			// SRV.SCND
	set vc5=V.piece($C(9),5)			// SRV0.AVGBAL
	set vc6=V.piece($C(9),6)			// SRV0.AVGFLT
	set vc7=V.piece($C(9),7)			// SRV0.AVGCOL
	set vc8=V.piece($C(9),8)			// SRV0.RESREQ
	set vc9=V.piece($C(9),9)			// SRV0.AVGRES
	set vc10=V.piece($C(9),10)			// SRV.ERNALL
	set vc11=V.piece($C(9),11)			// SRV.ERNADJ
	set vc12=V.piece($C(9),12)			// SRV.SYSADJ
	set vc13=V.piece($C(9),13)			// SRV.NETFWD
	set vc14=V.piece($C(9),14)			// SRV.FEECHG
	set vc15=V.piece($C(9),15)			// SRV.FEEANL
	set vc16=V.piece($C(9),16)			// SRV.FEEOFF
	set vc17=V.piece($C(9),17)			// SRV.FEEACT
	set vc18=V.piece($C(9),18)			// SRV.FEEUNP
	set vc19=V.piece($C(9),19)			// DEP.TYPE
	set vc20=V.piece($C(9),20)			// DEP.TITLE1
	set vc21=V.piece($C(9),21)			// DEP.BOO
	set vc22=V.piece($C(9),22)			// DEP.FEEPLN
	set vc23=V.piece($C(9),23)			// SRV.NETFWDO
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public Date FDAT, SCND
	type public Number ACTOFF, ADJYTD, AVGBALY, AVGCOLY, AVGFLTY, ERNALLY
	type public Number FEEACTY,FEEANLY, FEECHGY, FEEOFFY, FEEUNPY, INVBALY
	type public Number RESREQY, SYSADJY
	type public String QDAT

	type String X

	set SCND = $$^SCAJD(QDAT)

	set X = "1/1/"_SCND.year()
	set FDAT=X.toDate()

	set (ACTOFF, ADJYTD, AVGBALY, AVGCOLY, AVGFLTY, ERNALLY, FEEACTY) = ""
	set (FEEANLY, FEECHGY, FEEOFFY, FEEUNPY, INVBALY, RESREQY, SYSADJY) = "" 
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=QDAT
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),ADJYTD,AVGBALY,AVGCOLY,AVGFLTY,AVGRESY,ERNALLY,FEEACTY,FEEANLY,FEECHGY,FEEOFFY,FEEUNPY,NETPL,NETY,RESREQY,vc5,vc7,vc6,vc9,vc8,vc11,vc10,vc17,vc15,vc14,vc16,vc18,vc13,vc12
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+ADJYTD			// @TOT(<<ADJYTD>>)
	set VT(4,2,1)=VT(4,2,1)+AVGBALY			// @AVG(<<AVGBALY>>)
	set VT(4,3,1)=VT(4,3,1)+AVGCOLY			// @AVG(<<AVGCOLY>>)
	set VT(4,4,1)=VT(4,4,1)+AVGFLTY			// @AVG(<<AVGFLTY>>)
	set VT(4,5,1)=VT(4,5,1)+AVGRESY			// @AVG(<<AVGRESY>>)
	set VT(4,6,1)=VT(4,6,1)+ERNALLY			// @TOT(<<ERNALLY>>)
	set VT(4,7,1)=VT(4,7,1)+FEEACTY			// @TOT(<<FEEACTY>>)
	set VT(4,8,1)=VT(4,8,1)+FEEANLY			// @TOT(<<FEEANLY>>)
	set VT(4,9,1)=VT(4,9,1)+FEECHGY			// @TOT(<<FEECHGY>>)
	set VT(4,10,1)=VT(4,10,1)+FEEOFFY		// @TOT(<<FEEOFFY>>)
	set VT(4,11,1)=VT(4,11,1)+FEEUNPY		// @TOT(<<FEEUNPY>>)
	set VT(4,12,1)=VT(4,12,1)+NETPL			// @TOT(<<NETPL>>)
	set VT(4,13,1)=VT(4,13,1)+NETY			// @TOT(<<NETY>>)
	set VT(4,14,1)=VT(4,14,1)+RESREQY		// @AVG(<<RESREQY>>)
	set VT(4,15,1)=VT(4,15,1)+vc5			// @AVG([SRV0]AVGBAL)
	set VT(4,16,1)=VT(4,16,1)+vc7			// @AVG([SRV0]AVGCOL)
	set VT(4,17,1)=VT(4,17,1)+vc6			// @AVG([SRV0]AVGFLT)
	set VT(4,18,1)=VT(4,18,1)+vc9			// @AVG([SRV0]AVGRES)
	set VT(4,19,1)=VT(4,19,1)+vc8			// @AVG([SRV0]RESREQ)
	set VT(4,20,1)=VT(4,20,1)+vc11			// @TOT([SRV]ERNADJ)
	set VT(4,21,1)=VT(4,21,1)+vc10			// @TOT([SRV]ERNALL)
	set VT(4,22,1)=VT(4,22,1)+vc17			// @TOT([SRV]FEEACT)
	set VT(4,23,1)=VT(4,23,1)+vc15			// @TOT([SRV]FEEANL)
	set VT(4,24,1)=VT(4,24,1)+vc14			// @TOT([SRV]FEECHG)
	set VT(4,25,1)=VT(4,25,1)+vc16			// @TOT([SRV]FEEOFF)
	set VT(4,26,1)=VT(4,26,1)+vc18			// @TOT([SRV]FEEUNP)
	set VT(4,27,1)=VT(4,27,1)+vc13			// @TOT([SRV]NETFWD)
	set VT(4,28,1)=VT(4,28,1)+vc12			// @TOT([SRV]SYSADJ)
	quit

VSUM2	// Summary
	type public String %TIM,ACTOFF,ADJYTD,AVGBALY,AVGCOLY,AVGFLTY,AVGRESY,ERNALLY,FDAT,FEEACTY,FEEANLY,FEECHGY,FEEOFFY,FEEUNPY,I,INVBALY,IOSL,NETPL,NETY,QDAT,RESREQY,SCND,SYSADJY,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+14>IOSL do VHDG0 quit:VFMQ

	do VHDG0 quit:VFMQ				// <<#>>
	set VL=VL_$J("",4-VL.length())_"-------------------------------------------"
	set VL=VL_$J("",49-VL.length())_"TOTALS FOR ACCOUNT OFFICER -"
	set VL=VL_$J("",78-VL.length())_$E(ACTOFF,1,6)
	set VL=VL_$J("",86-VL.length())_"------------------------------------------"
	do VOM
	set VL="" do VOM
	set VL="     "_"BALANCE DATA"
	set VL=VL_$J("",30-VL.length())_"Avg Ledger"
	set VL=VL_$J("",49-VL.length())_"Avg Float"
	set VL=VL_$J("",63-VL.length())_"Avg Collected"
	set VL=VL_$J("",79-VL.length())_"Avg Reserve Req"
	set VL=VL_$J("",98-VL.length())_"Avg Investable"
	do VOM
	set VL="                "_"Period"
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,15,1)/VT(2),1:0)	// @AVG([SRV0]AVGBAL,)
		}
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,17,1)/VT(2),1:0)	// @AVG([SRV0]AVGFLT,)
		}
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,16,1)/VT(2),1:0)	// @AVG([SRV0]AVGCOL,)
		}
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,19,1)/VT(2),1:0)	// @AVG([SRV0]RESREQ,)
		}
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,18,1)/VT(2),1:0)	// @AVG([SRV0]AVGRES,)
		}
	set VL=VL_$J("",97-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,2,1)/VT(2),1:0)	// @AVG(<<AVGBALY>>,)
		}
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,4,1)/VT(2),1:0)	// @AVG(<<AVGFLTY>>,)
		}
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,3,1)/VT(2),1:0)	// @AVG(<<AVGCOLY>>,)
		}
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,14,1)/VT(2),1:0)	// @AVG(<<RESREQY>>,)
		}
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=$S(VT(2):VT(2,5,1)/VT(2),1:0)	// @AVG(<<AVGRESY>>,)
		}
	set VL=VL_$J("",97-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="     "_"EARNING ALLOWANCE"
	set VL=VL_$J("",26-VL.length())_"Earn Allowance"
	set VL=VL_$J("",47-VL.length())_"Earn Adjust"
	set VL=VL_$J("",63-VL.length())_"System Adjust"
	set VL=VL_$J("",81-VL.length())_"Adj Carry Fwd"
	do VOM
	set VL="                "_"Period"
	set V=VT(2,21,1)				// @TOT([SRV]ERNALL,)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,20,1)				// @TOT([SRV]ERNADJ,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,28,1)				// @TOT([SRV]SYSADJ,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,27,1)				// @TOT([SRV]NETFWD,)
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set V=VT(2,6,1)					// @TOT(<<ERNALLY>>,)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="     "_"FEES"
	set VL=VL_$J("",27-VL.length())_"Profit/(Loss)"
	set VL=VL_$J("",45-VL.length())_"Dir @ Service"
	set VL=VL_$J("",65-VL.length())_"Dir @ Anlys"
	set VL=VL_$J("",80-VL.length())_"Offset @ Anlys"
	set VL=VL_$J("",100-VL.length())_"Fees Charged"
	set VL=VL_$J("",116-VL.length())_"Unapplied Fees"
	do VOM
	set VL="                "_"Period"
	set V=VT(2,12,1)				// @TOT(<<NETPL>>,)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,24,1)				// @TOT([SRV]FEECHG,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,23,1)				// @TOT([SRV]FEEANL,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,25,1)				// @TOT([SRV]FEEOFF,)
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,22,1)				// @TOT([SRV]FEEACT,)
	set VL=VL_$J("",97-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,26,1)				// @TOT([SRV]FEEUNP,)
	set VL=VL_$J("",115-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set V=VT(2,13,1)				// @TOT(<<NETY>>,)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,9,1)					// @TOT(<<FEECHGY>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,8,1)					// @TOT(<<FEEANLY>>,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,10,1)				// @TOT(<<FEEOFFY>>,)
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,7,1)					// @TOT(<<FEEACTY>>,)
	set VL=VL_$J("",97-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=VT(2,11,1)				// @TOT(<<FEEUNPY>>,)
	set VL=VL_$J("",115-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="     "_"ADJUSTED POSITION      Adj Position"
	do VOM
	set VL="                "_"Period"
	set V=VT(2,27,1)				// @TOT([SRV]NETFWD,)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set V=VT(2,1,1)					// @TOT(<<ADJYTD>>,)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="" do VOM
	quit

VDTL4	// Detail
	type public String %TIM,ACTOFF,ADJYTD,AVGBALY,AVGCOLY,AVGFLTY,AVGRESY,ERNALLY,FDAT,FEEACTY,FEEANLY,FEECHGY,FEEOFFY,FEEUNPY,INVBALY,IOSL,NETPL,NETY,QDAT,RESREQY,SCND,SYSADJY,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+15>IOSL do VHDG0 quit:VFMQ

	set VL="Account Number:"
	set V=vc2,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",16-VL.length())_V		// [SYSDEV,SRV]CID
	set VL=VL_$J("",30-VL.length())_"Product Type:"
	set VL=VL_$J("",44-VL.length())_$J(vc19,4)
	set VL=VL_$J("",51-VL.length())_"Title:"
	set VL=VL_$J("",58-VL.length())_$E(vc20,1,30)
	set VL=VL_$J("",89-VL.length())_"Branch Code:"
	set VL=VL_$J("",102-VL.length())_$E(vc21,1,6)
	set VL=VL_$J("",109-VL.length())_"Service Fee Plan:"
	set VL=VL_$J("",127-VL.length())_$E(vc22,1,5)
	do VOM
	set VL="" do VOM
	set VL="     "_"BALANCE DATA"
	set VL=VL_$J("",30-VL.length())_"Avg Ledger"
	set VL=VL_$J("",49-VL.length())_"Avg Float"
	set VL=VL_$J("",63-VL.length())_"Avg Collected"
	set VL=VL_$J("",79-VL.length())_"Avg Reserve Req"
	set VL=VL_$J("",98-VL.length())_"Avg Investable"
	do VOM
	set VL="                "_"Period"
	set VL=VL_$J("",25-VL.length())_$J($FN(vc5,"P"_",",2),16)
	set VL=VL_$J("",43-VL.length())_$J($FN(vc6,"P"_",",2),16)
	set VL=VL_$J("",61-VL.length())_$J($FN(vc7,"P"_",",2),16)
	set VL=VL_$J("",79-VL.length())_$J($FN(vc8,"P"_",",2),16)
	set VL=VL_$J("",97-VL.length())_$J($FN(vc9,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set VL=VL_$J("",25-VL.length())_$J($FN(AVGBALY,"P"_",",2),16)
	set VL=VL_$J("",43-VL.length())_$J($FN(AVGFLTY,"P"_",",2),16)
	set VL=VL_$J("",61-VL.length())_$J($FN(AVGCOLY,"P"_",",2),16)
	set VL=VL_$J("",79-VL.length())_$J($FN(RESREQY,"P"_",",2),16)
	set VL=VL_$J("",97-VL.length())_$J($FN(AVGRESY,"P"_",",2),16)
	do VOM
	set VL="     "_"EARNING ALLOWANCE"
	set VL=VL_$J("",26-VL.length())_"Earn Allowance"
	set VL=VL_$J("",47-VL.length())_"Earn Adjust"
	set VL=VL_$J("",63-VL.length())_"System Adjust"
	set VL=VL_$J("",81-VL.length())_"Adj Carry Fwd"
	do VOM
	set VL="                "_"Period"
	set VL=VL_$J("",25-VL.length())_$J($FN(vc10,"P"_",",2),16)
	set VL=VL_$J("",43-VL.length())_$J($FN(vc11,"P"_",",2),16)
	set VL=VL_$J("",61-VL.length())_$J($FN(vc12,"P"_",",2),16)
	set VL=VL_$J("",79-VL.length())_$J($FN(vc13,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set VL=VL_$J("",25-VL.length())_$J($FN(ERNALLY,"P"_",",2),16)
	do VOM
	set VL="     "_"FEES"
	set VL=VL_$J("",27-VL.length())_"Profit/(Loss)"
	set VL=VL_$J("",45-VL.length())_"Dir @ Service"
	set VL=VL_$J("",65-VL.length())_"Dir @ Anlys"
	set VL=VL_$J("",80-VL.length())_"Offset @ Anlys"
	set VL=VL_$J("",100-VL.length())_"Fees Charged"
	set VL=VL_$J("",116-VL.length())_"Unapplied Fees"
	do VOM
	set VL="                "_"Period"
	set VL=VL_$J("",25-VL.length())_$J($FN(NETPL,"P"_",",2),16)
	set VL=VL_$J("",43-VL.length())_$J($FN(vc14,"P"_",",2),16)
	set VL=VL_$J("",61-VL.length())_$J($FN(vc15,"P"_",",2),16)
	set VL=VL_$J("",79-VL.length())_$J($FN(vc16,"P"_",",2),16)
	set VL=VL_$J("",97-VL.length())_$J($FN(vc17,"P"_",",2),16)
	set VL=VL_$J("",115-VL.length())_$J($FN(vc18,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set VL=VL_$J("",25-VL.length())_$J($FN(NETY,"P"_",",2),16)
	set VL=VL_$J("",43-VL.length())_$J($FN(FEECHGY,"P"_",",2),16)
	set VL=VL_$J("",61-VL.length())_$J($FN(FEEANLY,"P"_",",2),16)
	set VL=VL_$J("",79-VL.length())_$J($FN(FEEOFFY,"P"_",",2),16)
	set VL=VL_$J("",97-VL.length())_$J($FN(FEEACTY,"P"_",",2),16)
	set VL=VL_$J("",115-VL.length())_$J($FN(FEEUNPY,"P"_",",2),16)
	do VOM
	set VL="     "_"ADJUSTED POSITION"
	set VL=VL_$J("",28-VL.length())_"Adj Position"
	do VOM
	set VL="                "_"Period"
	set VL=VL_$J("",25-VL.length())_$J($FN(vc13,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set VL=VL_$J("",25-VL.length())_$J($FN(ADJYTD,"P"_",",2),16)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ACTOFF,ADJYTD,AVGBALY,AVGCOLY,AVGFLTY,AVGRESY,CONAM,ERNALLY,FDAT,FEEACTY,FEEANLY,FEECHGY,FEEOFFY,FEEUNPY,INVBALY,NETPL,NETY,QDAT,RESREQY,RID,RN,SCND,SYSADJY,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="ACCOUNT OFFICER -"
	set V=vc1,VO=V set V=$E(V,1,4) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",18-VL.length())_V		// [SYSDEV,DEP]OFF
	do VOM
	set VL="ANALYSIS DATE:"
	set VL=VL_$J("",16-VL.length())_$J($$DAT^%ZM(vc4),10)
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,ACTOFF,ADJYTD,AVGBALY,AVGCOLY,AVGFLTY,AVGRESY,ERNALLY,FDAT,FEEACTY,FEEANLY,FEECHGY,FEEOFFY,FEEUNPY,INVBALY,NETPL,NETY,QDAT,RESREQY,SCND,SYSADJY,VPN,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+14>IOSL do VHDG0 quit:VFMQ

	do VHDG0 quit:VFMQ				// <<#>>
	set VL=VL_$J("",4-VL.length())_"-----------------------------------------  REPORT TOTALS FOR ALL ACCOUNT OFFICERS   ----------------------------------------"
	do VOM
	set VL="" do VOM
	set VL="     "_"BALANCE DATA             Avg Ledger         Avg Float     Avg Collected   Avg Reserve Req    Avg Investable"
	do VOM
	set VL="                "_"Period"
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,15,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG([SRV0]AVGBAL,0)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,17,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG([SRV0]AVGFLT,0)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,16,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG([SRV0]AVGCOL,0)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,19,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG([SRV0]RESREQ,0)
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,18,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG([SRV0]AVGRES,0)
	set VL=VL_$J("",97-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,2,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG(<<AVGBALY>>,0)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,4,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG(<<AVGFLTY>>,0)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,3,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG(<<AVGCOLY>>,0)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,14,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG(<<RESREQY>>,0)
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	set (V,VX(2))=0
	for I=0:1:4 set V=V+VT(I,5,1),VX(2)=VX(2)+VT(I)
	set V=$S(VX(2):V/VX(2),1:0)			// @AVG(<<AVGRESY>>,0)
	set VL=VL_$J("",97-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="     "_"EARNING ALLOWANCE    Earn Allowance       Earn Adjust     System Adjust     Adj Carry Fwd"
	do VOM
	set VL="                "_"Period"
	set V=0						// @TOT([SRV]ERNALL,0)
	for I=0:1:4 set V=V+VT(I,21,1)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT([SRV]ERNADJ,0)
	for I=0:1:4 set V=V+VT(I,20,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT([SRV]SYSADJ,0)
	for I=0:1:4 set V=V+VT(I,28,1)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT([SRV]NETFWD,0)
	for I=0:1:4 set V=V+VT(I,27,1)
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set V=0						// @TOT(<<ERNALLY>>,0)
	for I=0:1:4 set V=V+VT(I,6,1)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="     "_"FEES                  Profit/(Loss)     Dir @ Service       Dir @ Anlys    Offset @ Anlys      Fees Charged    Unapplied Fees"
	do VOM
	set VL="                "_"Period"
	set V=0						// @TOT(<<NETPL>>,0)
	for I=0:1:4 set V=V+VT(I,12,1)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT([SRV]FEECHG,0)
	for I=0:1:4 set V=V+VT(I,24,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT([SRV]FEEANL,0)
	for I=0:1:4 set V=V+VT(I,23,1)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT([SRV]FEEOFF,0)
	for I=0:1:4 set V=V+VT(I,25,1)
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT([SRV]FEEACT,0)
	for I=0:1:4 set V=V+VT(I,22,1)
	set VL=VL_$J("",97-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT([SRV]FEEUNP,0)
	for I=0:1:4 set V=V+VT(I,26,1)
	set VL=VL_$J("",115-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set V=0						// @TOT(<<NETY>>,0)
	for I=0:1:4 set V=V+VT(I,13,1)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT(<<FEECHGY>>,0)
	for I=0:1:4 set V=V+VT(I,9,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT(<<FEEANLY>>,0)
	for I=0:1:4 set V=V+VT(I,8,1)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT(<<FEEOFFY>>,0)
	for I=0:1:4 set V=V+VT(I,10,1)
	set VL=VL_$J("",79-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT(<<FEEACTY>>,0)
	for I=0:1:4 set V=V+VT(I,7,1)
	set VL=VL_$J("",97-VL.length())_$J($FN(V,"P"_",",2),16)
	set V=0						// @TOT(<<FEEUNPY>>,0)
	for I=0:1:4 set V=V+VT(I,11,1)
	set VL=VL_$J("",115-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="     "_"ADJUSTED POSITION      Adj Position"
	do VOM
	set VL="                "_"Period"
	set V=0						// @TOT([SRV]NETFWD,0)
	for I=0:1:4 set V=V+VT(I,27,1)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	set VL="          "_"Year-to-Date"
	set V=0						// @TOT(<<ADJYTD>>,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	set VL=VL_$J("",25-VL.length())_$J($FN(V,"P"_",",2),16)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,SRV]CID

	type public String vc22,vc23,vc5,vc6,vc7,vc8,vc9,vc10,vc14,vc15,vc16,vc17,vc18,vc13,vc2,vc3
	type public Date FDAT, SCND
	type public Number ADJYTD, AVGBALY, AVGCOLY, AVGFLTY, AVGRESY, ERNALLY
	type public Number FEEACTY, FEEANLY, FEECHGY, FEEOFFY, FEEUNPY
	type public Number NETPL, NETY, RESREQY
	
	type Number CID, TIMES
	type String FEEPLN, PLTP


	set TIMES = 0
	set FEEPLN = vc22

	// Initialize totals from current data values
	set TIMES = TIMES + 1
	set NETPL = vc23
	set AVGBALY = vc5
	set AVGFLTY = vc6
	set AVGCOLY = vc7
	set RESREQY = vc8
	set AVGRESY = vc9
	set ERNALLY = vc10
	set NETY = NETPL
	set FEECHGY = vc14
	set FEEANLY = vc15
	set FEEOFFY = vc16
	set FEEACTY = vc17
	set FEEUNPY = vc18
	set ADJYTD = vc13

	// Accumulatescurrent to year-to-date totals
 
	// Roll back through account fee analysis within year
	set CID = vc2
	set PLTP = vc3
	
	type DbSet ds2 = Db.selectDbSet("SRV", "CID=:CID AND PLTP=:PLTP AND (SCND < :SCND AND SCND >= :FDAT)")
	
	while ds2.next() do {
		
		type RecordSRV srv = ds2.getRecord("SRV")
		type RecordSRV0 srv0 = Db.getRecord("SRV0", "CID=:CID,PLTP=:PLTP,SCND=:srv.scnd", 1)
	
		// Calculated accumulated totals
		set TIMES = TIMES + 1
		set AVGBALY = AVGBALY + srv0.feebal
		set AVGFLTY = AVGFLTY + srv0.feebal - srv0.avgbal
		set AVGCOLY = AVGCOLY + srv0.avgbal
		set RESREQY = RESREQY + srv0.avgbal - srv0.avgcol
		set AVGRESY = AVGRESY + srv0.avgcol
		set ERNALLY = ERNALLY + srv.feeoff
		set NETY = NETY + srv.sysadj
		set FEECHGY = FEECHGY + srv.feechg
		set FEEANLY = FEEANLY + srv.feeanl
		set FEEOFFY = FEEOFFY + srv.feeoff
		set FEEACTY = FEEACTY + srv.ernall
		set FEEUNPY = FEEUNPY + srv.feeact
		set ADJYTD = ADJYTD + srv.ernadj
	}
 
	// Set year to date totals to averages
	set AVGBALY = AVGBALY / TIMES
	set AVGFLTY = AVGFLTY / TIMES
	set AVGCOLY = AVGCOLY / TIMES
	set RESREQY = RESREQY / TIMES
	set AVGRESY = AVGRESY / TIMES
	quit

VP2	// Column post-processor - [SYSDEV,DEP]OFF

	type public String V
 
        if V.isNull() set V = "None"
	quit
