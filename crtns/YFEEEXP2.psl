YFEEEXP2	// Copy Exemption Plan
	/*
	   ORIG: GEISS - 09/08/95
	   DESC: Copy Exemption Plan

	------------ Revision History -----------------------------------------
	08/24/05 - RussellDS - CR16911
		   Added setMode(0) to FILE section to indicate new reocrds.
		   Added TP.  Corrected minor logic errors.
		   
		   Fix PSL errors.
		   
		   Remove old revision history.
	  
        07/26/05 - SkariahV- CR16679
	           Removed #WARN and #OPTIMIZE directives.
	
	-----------------------------------------------------------------------
	*/
	
	quit


CPY	//

	set %ProcessMode=1

	do INIT

	quit


INIT	//

	type public String OLNTB,VFMQ
	type public Number %PAGE,%PG

	set %PG=1 
	set %PAGE=1

	do VPG
	
	quit


VPG	// Page control

	type public String VFMQ
	type public Number %PG
	type Number FINISH
	
	set FINISH=0
	
	for  do { quit:FINISH

		do VPG01
	
		if "DFQ"[VFMQ do VER set FINISH=1 quit

		set %PG=%PG+1
		}

	quit


VPG01	// Set up

	type public String %READ,%TAB,VFMQ
	type public Number ER
	
	set %TAB("PLAN")=".EXPCOP1/TBL=[YFEEEXP]:DISTINCT"
	set %TAB("FEEDT")=".EFD1/TBL=[YFEEEXP]EFD:QU ""[YFEEEXP]PLAN=<<PLAN>>"""
	set %TAB("PLANNW")=".EXPCOP2/TBL=[YFEEEXP]PLAN:DISTINCT:NOVAL"
	set %TAB("TFEEDT")=".EFD1/XPP=do CHECK^YFEEEXP2"

	set %READ="@@%FN,,PLAN#1,FEEDT,,PLANNW,TFEEDT"
	
	do ^UTLREAD if VFMQ="Q" set ER=1 quit
	
	quit


VER	//

	type public String VFMQ

	if VFMQ="Q" do END quit

	do FILE

	do END

	quit


FILE	//

	type public String OPLAN,PLAN,PLANNW
	type public Date EFD,FEEDT,TFEEDT

	set OPLAN=PLAN
	set PLAN=PLANNW 
	set EFD=TFEEDT
	
	do Runtime.start("CS")
	
	type RecordYFEEEXP yfeeexp=Db.getRecord("YFEEEXP","PLAN=:OPLAN,EFD=:FEEDT",1)
	type RecordYFEEEXP yfeeexpn=yfeeexp.copy()
	set yfeeexpn.plan=PLAN
	set yfeeexpn.efd=EFD
	do yfeeexpn.setMode(0)
	do yfeeexpn.save()
	
	type DbSet ds1=Db.selectDbSet("YFEEEXP1","PLAN=:OPLAN AND EFD=:FEEDT")
	while ds1.next() do {
		type RecordYFEEEXP1 cat1=ds1.getRecord()
		type RecordYFEEEXP1 cat1new=cat1.copy()
		set cat1new.plan=PLAN
		set cat1new.efd=EFD
		set cat1new.ftype=cat1.ftype
		do cat1new.setMode(0)
		do cat1new.save()
	}

	type DbSet ds3=Db.selectDbSet("YFEEEXP3","PLAN=:OPLAN AND EFD=:FEEDT")
	while ds3.next() do {
		type RecordYFEEEXP3 cat3=ds3.getRecord()
		type RecordYFEEEXP3 cat3new=cat3.copy()
		set cat3new.plan=PLAN
		set cat3new.efd=EFD
		set cat3new.ftype=cat3.ftype
		do cat3new.setMode(0)
		do cat3new.save()
	}

	type DbSet ds4=Db.selectDbSet("YFEEEXP4","PLAN=:OPLAN AND EFD=:FEEDT")
	while ds4.next() do {
		type RecordYFEEEXP4 cat4=ds4.getRecord()
		type RecordYFEEEXP4 cat4new=cat4.copy()
		set cat4new.plan=PLAN
		set cat4new.efd=EFD
		set cat4new.ftype=cat4.ftype
		do cat4new.setMode(0)
		do cat4new.save()
	}
		
	do Runtime.commit()

	quit


END	//

	type public String %TAB,PLANNW,OPLAN,RM,VFMQ
	type public Number ER

	kill %TAB
	
	quit:ER  
	
	set ER="W"
	
	// Exemption plan ~p1 not copied to plan ~p2
	if VFMQ="Q" set RM=$$^MSG(2493,OPLAN,PLANNW)
	
	// Service plan ~p1 copied to plan ~p2
	else  set RM=$$^MSG(2489,OPLAN,PLANNW)

	quit


CHECK	//

	type public String PLANNW,RM,X
	type public Number ER

	quit:X=""

	// Effective date must be the same as or after the system date
	if X<%SystemDate set ER=1 set RM=$$^MSG(879) quit

	// ~p1 already exists
	if Db.isDefined("YFEEEXP","PLAN=:PLANNW,EFD=:X") set ER=1 set RM=$$^MSG(3019,X) quit

	// Fee Schedule already exists
	if Db.isDefined("UTBLFEESCH","FEESCH=:PLANNW,FEESCHDT=:X") set ER=1 set RM=$$^MSG(2717) quit

	// Transaction Group already exists
	if Db.isDefined("UTBLTRNGRPT","TRNGRP=:PLANNW,TRNGRPDT=:X") set ER=1 set RM=$$^MSG(2716) quit

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60139^42769^Dan Russell^3412"	// Signature - LTD^TIME^USER^SIZE
