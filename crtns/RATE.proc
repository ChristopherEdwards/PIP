public RATE	// PBS -  - V2.0 - Interest Rate Schedule Maintenence

	/*
	       ORIG: Allan Mattson

	  ---- Revision History ------------------------------------------------

	   08/02/06 - KELLYP - CR 22048
	   	      Modified VPG00A section to eliminate PRECEDENCE warning.

	   02/16/06 - ratht - 19392
	   	      Changed the Delete Statement in DEL1 section  
	   	      by including one more condition.
	   	      
	   08/09/02 - CHHABRIAS - 49451
		      Converted to PSL

	   06/16/00 - OYEGUNZ - 37155
		      Modified section VPG00 to consider variable MFWH and
 		      remove Minimum Balance prompt from screen RATE when
		      defining Mutual Funds withholing rate schedules.
	  ---------------------------------------------------------------------
	*/

	do NEW
	
	quit


NEW	//  
	do INIT(0)
	quit


UPD	// 
	do INIT(1)
	quit


INQ	//  
	do INIT(2)
	quit


DEL	//	
	do INIT(3)
	quit


INIT(%ProcessMode)	//

	new OLNTB,ORGPROC,SAVE,VFMQ
	set %PG=0
	set %PAGE=1
	set %REPEAT=12
	set ORGPROC=%ProcessMode
	type RecordRATE1 fRATE1
	type RecordUTBLRATE UTBLRATE
	set SAVE=""
	if %ProcessMode=0 set SAVE=1  
	do VPG(.fRATE1,.UTBLRATE)

	quit


VPG(RecordRATE1 fRATE1,RecordUTBLRATE UTBLRATE)	// Page control

	new FINISH
	set FINISH=0
	for  do { quit:FINISH
		if %PG=0 do {
			do VPG00
			}
		else  do {
			do VPG01(.fRATE1,.UTBLRATE)
			}

		if VFMQ="Q" set FINISH=1 quit

		if "DFQ"[VFMQ do VER(.fRATE1,.UTBLRATE) set FINISH=1 quit

		
		if SAVE set %ProcessMode=1

		// Fools Screen in to providing more pages
		set %PG=%PG+1

		}
	quit


VPG00	// Page 1 setup

	new DATE,R,TRM
	kill RATE
	set %TAB("SCH")=".SCH1/HLP=[RATE]SCH/TBL=[UTBLRATE]"
	set %TAB("EFD")=".EFD1/XPP=D EFDPP^RATE"
	set %TAB("MBALTERM")=".MBALTERM1/XPP=D RECOF^RATE/XPR=D MBALPP^RATE"
	set MBALTRM=0

	if %ProcessMode do {
		set %TAB("MBALTERM")=%TAB("MBALTERM")_"/TBL=[RATE1]MBALTERM:DISTINCT:QU ""[RATE1]SCH=<<SCH>> AND [RATE1]EFD=<<EFD>> AND [RATE1]TERM=<<TERM>>"""
		set %TAB("EFD")=%TAB("EFD")_"/TBL=[RATE1]EFD:DISTINCT:QU ""[RATE1]SCH=<<SCH>>"""		
		}

	set %READ="@@%FN,,,SCH/REQ,EFD/REQ"

	if '$G(MFWH) set %READ=%READ_",,MBALTERM/REQ"
	else  set MBALTERM=0

	do ^UTLREAD 

	if VFMQ="Q" quit

	set DATE=EFD+1
	set R=0

	do VPG00A

	// Force a term of zero days
	set $P(RATE(1),"|",1)=0
	quit


VPG00A	// Load Rate array if Record exists

	// Collate looking for a match on MBALTERM

	if $D(RATE) quit
	type DbSet rs=Db.selectDbSet("RATE1","SCH=:SCH AND EFD<:DATE AND MBALTERM=:MBALTERM","EFD DESC,TERM ASC")
	while rs.next() do {
		type RecordRATE1 fRATE1=rs.getRecord("RATE1")
		set DATE=fRATE1.efd

		// Set match into rate array
		set R=R+1
		set RATE(R)=fRATE1.term
		set $P(RATE(R),"|",2)=fRATE1.ratexbal

		// every 12th (%REPEAT) item set VPG. Used by "OTHER" prompt
		if '((R-1)#%REPEAT) do {
			set %PAGE=(R\%REPEAT+1)
			set VPG(%PAGE)=$P(RATE(R),"|",1)_"|RATE"
			}
		}
	quit


EFDPP	// Post Processor - Effective Date

	if %OSAVE>1 quit

	// Effective date must be the same as or after the system date
	if X<%SystemDate do {
		set ER=1 
	 	set RM=$$^MSG(879)
	 	}
	quit


MBALPP  // Pre Processor - Balance Tier

	type ResultSet rs=Db.select("TERM","RATE1","SCH=:SCH AND EFD=:EFD")
	if rs.next() set TERM=rs.getCol("TERM")
	else  set TERM=0
	quit


RECOF	// Post Processor - Balance Tier

	if X="" quit

	set RECOF=0

	// Needed because "0.00" is not valid match on table.
	set X=+X
	if %OSAVE quit
	
	type ResultSet rs=Db.select("TERM","RATE1","SCH=:SCH AND EFD=:EFD AND MBALTERM=:X")
	if rs.next() set RECOF=1

	if %OSAVE=3 do {
		type ResultSet rs=Db.select("MBALTERM","RATE1","SCH=:SCH AND EFD=:EFD","TERM DESC")
		if rs.next() do {
			set RECOF=1
			set MBALTERM=rs.getCol("MBALTERM")
			}
		}

	// Record not found
	if %OSAVE,'RECOF set ER=1,RM=$$^MSG(2335)

	// Record already exists
	if '%OSAVE,RECOF set ER=1,RM=$$^MSG(2327)

	quit


VPG01(RecordRATE1 fRATE1,RecordUTBLRATE UTBLRATE)	// Interest schedule

	set %MODS=%PG*%REPEAT-%REPEAT+1
	if %ProcessMode<2 set VPG(%PG)=$P($G(RATE(%MODS)),"|",1)_"|RATE"

	set fRATE1=Db.getRecord("RATE1","SCH=:SCH,EFD=:EFD,TERM=:TERM,MBALTERM=:MBALTERM",1)	
	set UTBLRATE=Db.getRecord("UTBLRATE","SCH=:SCH",1)

	// enables "NEXT" prompt
	if %ProcessMode<2,%PG=%PAGE set %PAGE=%PAGE+1

	do DRV^USID(%ProcessMode,"RATE",.fRATE1,.UTBLRATE)

	if SAVE set %ProcessMode=0
	quit


VER(RecordRATE1 fRATE1,RecordUTBLRATE UTBLRATE)	//

	if %ProcessMode=2!(VFMQ="Q") do END quit

	do FILE(.fRATE1,.UTBLRATE)

	set %ProcessMode=ORGPROC
	do END

	quit


FILE(RecordRATE1 fRATE1,RecordUTBLRATE UTBLRATE)	// File data

	set ER=0
	if %ProcessMode'=0 do {
		type ResultSet rs=Db.select("TERM,RATEXBAL","RATE1","SCH=:SCH AND EFD=:EFD AND MBALTERM=:MBALTERM")
		while rs.next() set OLDARR(rs.getCol("TERM"))=rs.getCol("RATEXBAL")
		}

	set I=""
	for  set I=$O(RATE(I)) quit:I=""  do {
		set TRM=$P(RATE(I),"|",1) if TRM="" quit
		set NEWARR(TRM)=$P(RATE(I),"|",2)
		}

	if %ProcessMode=3 do DEL1 quit
	do CHK

	if (%ProcessMode=0)!(%ProcessMode=1) do {
		do DEL1

		set %ProcessMode=0
		for  set TRM=$O(NEWARR(TRM)) quit:TRM=""  do {
		type RecordRATE1 fRATE1=Db.getRecord("RATE1","SCH=:SCH,EFD=:EFD,TERM=:TRM,MBALTERM=:MBALTERM",1)
			set fRATE1.ratexbal=NEWARR(TRM)
		     	do fRATE1.save()
			}
		}
	quit


DEL1	//

	set %ProcessMode=3
	for  set TRM=$O(OLDARR(TRM)) quit:TRM=""  do {
		do Db.delete("RATE1","SCH=:SCH AND EFD=:EFD AND TERM=:TRM AND MBALTERM=:MBALTERM")
		}
	quit


CHK	// Compare the OLDARR and NEWARR and delete the common entries

	new DATA,DATA1,J,K
	set (J,K)=0
	for  set J=$O(NEWARR(J)) quit:J=""  do {
		set DATA=NEWARR(J)
		for  set K=$O(OLDARR(K)) Q:K=""  do {
			set DATA1=OLDARR(K)
			if DATA=DATA1,J=K kill NEWARR(J),OLDARR(K)
			}
		}

	quit


END	//	

	if ER!(%ProcessMode=2)!(%ProcessMode=4) quit

	set EFD=$$DAT^%ZM(EFD)

	if VFMQ="Q" do {

		// Schedule ~p1 effective ~p2 not created
		if %ProcessMode=0 set RM=$$^MSG(2453,SCH,EFD) quit

		// Schedule ~p1 effective ~p2 not modified
		if %ProcessMode=1 set RM=$$^MSG(2455,SCH,EFD) quit

		// Schedule ~p1 effective ~p2 not deleted
		set RM=$$^MSG(2454,SCH,EFD)
		}
	else  do {

		// Schedule ~p1 effective ~p2 created
		if %ProcessMode=0 set RM=$$^MSG(2450,SCH,EFD) quit

		// Schedule ~p1 effective ~p2 modified
		if %ProcessMode=1 set RM=$$^MSG(2452,SCH,EFD) quit

		// Schedule ~p1 effective ~p2 deleted
		set RM=$$^MSG(2451,SCH,EFD)
		}
	set ER="W"
	quit

vSIG()	quit "60479^60360^Pat Kelly^5995"	// Signature - LTD^TIME^USER^SIZE
