R01S222	// SCA169A - Linked Account Analysis Statements
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String IADD,LNKDCID,PAGENO,PLTP,SCND
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA169A"
	set RN="Linked Account Analysis Statements"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String IADD,LNKDCID,PAGENO,PLTP,SCND
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,BASECHRG,COA,CONAM,COST,COUNT4,DESC,LAD,RID,RN,TAD,UNP,VL,VLOF,VRF(),VSTATS(),lbase,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA169A",RN="Linked Account Analysis Statements"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA169A","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("SRVD.CID,SRVD.PLTP,SRVD.SCND,SRVD.FEECAT,SRVD.FEETYP,DEP.OFF,DEP.CC,DEP.CID,DEP.ANLCID,SRV0.LEDGER,SRV0.LWBAL2,SRV0.AVGBAL,SRV0.AVGCOL,SRV0.AVGRES,SRVD.CHGOPT,SRVD.SRVCNTA,SRVD.SRVCSTA,SRVD.SRVADJ,DEP.FEEPLN,DEP.ANLACM,DEP.SCFRE,DEP.ODT,DEP.CRCD","SRVD,SRV0,DEP","SRVD.CID=:LNKDCID AND SRVD.PLTP=:PLTP AND SRVD.SCND=:SCND","SRVD.CID,SRVD.PLTP,SRVD.SCND,SRVD.FEECAT,SRVD.FEETYP","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// SRVD.CID
	set vc2=V.piece($C(9),2)			// SRVD.PLTP
	set vc3=V.piece($C(9),3)			// SRVD.SCND
	set vc4=V.piece($C(9),4)			// SRVD.FEECAT
	set vc5=V.piece($C(9),5)			// SRVD.FEETYP
	set vc6=V.piece($C(9),6)			// DEP.OFF
	set vc7=V.piece($C(9),7)			// DEP.CC
	set vc8=V.piece($C(9),8)			// DEP.CID
	set vc9=V.piece($C(9),9)			// DEP.ANLCID
	set vc10=V.piece($C(9),10)			// SRV0.LEDGER
	set vc11=V.piece($C(9),11)			// SRV0.LWBAL2
	set vc12=V.piece($C(9),12)			// SRV0.AVGBAL
	set vc13=V.piece($C(9),13)			// SRV0.AVGCOL
	set vc14=V.piece($C(9),14)			// SRV0.AVGRES
	set vc15=V.piece($C(9),15)			// SRVD.CHGOPT
	set vc16=V.piece($C(9),16)			// SRVD.SRVCNTA
	set vc17=V.piece($C(9),17)			// SRVD.SRVCSTA
	set vc18=V.piece($C(9),18)			// SRVD.SRVADJ
	set vc19=V.piece($C(9),19)			// DEP.FEEPLN
	set vc20=V.piece($C(9),20)			// DEP.ANLACM
	set vc21=V.piece($C(9),21)			// DEP.SCFRE
	set vc22=V.piece($C(9),22)			// DEP.ODT
	set vc23=V.piece($C(9),23)			// DEP.CRCD
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

	//Incoming=IADD,LNKDCID,PAGENO,PLTP,SCND
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VSUM2	// Summary
	type public String BASECHRG,COA,COST,COUNT4,DESC,I,IADD,IOSL,LAD,LNKDCID,PAGENO,PLTP,SCND,TAD,UNP,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),lbase,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5

	if 'VT(2) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="     "_"-------------------------------------------------------------"
	do VOM
	set VL="     "_"Total Cost of Services:"
	set V=$J($FN(COST,"P"_",",2),10) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",57-VL.length())_V
	do VOM
	quit

VDTL5	// Detail
	type public String BASECHRG,COA,COST,COUNT4,DESC,IADD,IOSL,LAD,LNKDCID,PAGENO,PLTP,SCND,TAD,UNP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),lbase,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP2 quit:VFMQ!verror.get()  set V=$E(DESC,1,20) set VL="     "_V
	set VL=VL_$J("",28-VL.length())_$S(+COUNT4=0:$J("",5),1:$J(COUNT4,5))
	set VL=VL_$J("",40-VL.length())_$S(+UNP=0:$J("",7),1:$J(UNP,7,2))
	set VL=VL_$J("",58-VL.length())_$S(+COA=0:$J("",8),1:$J($FN(COA,",",2),8))
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BASECHRG,COA,CONAM,COST,COUNT4,DESC,IADD,LAD,LNKDCID,PAGENO,PLTP,RID,RN,SCND,TAD,UNP,VL,lbase,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+36,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	do VP3 quit:VFMQ!verror.get()  set V=$E(IADD(1),1,40) set VL=V
	do VOM
	set VL=$E(IADD(2),1,40)
	do VOM
	set VL=$E(IADD(3),1,40)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                                                     "_"Page:"
	set VL=VL_$J("",70-VL.length())_$J(PAGENO,2)
	do VOM
	set VL="" do VOM
	set VL=$E(CADD(1),1,35)
	set VL=VL_$J("",43-VL.length())_"Account Number:"
	set VL=VL_$J("",59-VL.length())_$J(vc1,13)
	do VOM
	set VL=$E(CADD(2),1,35)
	set VL=VL_$J("",44-VL.length())_"Analysis from:"
	set VL=VL_$J("",62-VL.length())_$E(LAD,1,15)
	do VOM
	set VL=$E(CADD(3),1,35)
	set VL=VL_$J("",55-VL.length())_"to:"
	set VL=VL_$J("",62-VL.length())_$E(TAD,1,10)
	do VOM
	set VL=$E(CADD(4),1,35)
	set VL=VL_$J("",42-VL.length())_"Account Officer:"
	set VL=VL_$J("",62-VL.length())_$E(vc6,1,4)
	do VOM
	set VL=$E(CADD(5),1,35)
	set VL=VL_$J("",46-VL.length())_"Cost Center:"
	set VL=VL_$J("",59-VL.length())_$J(vc7,9)
	do VOM
	set VL=$E(CADD(6),1,35)
	do VOM
	set VL="=================================================================================="
	do VOM
	set VL="                                "_"Account Detail"
	do VOM
	set VL="  "_"Deposit Account:"
	set VL=VL_$J("",19-VL.length())_$J(vc8,12)
	do VOM
	set VL="     "_"Lead Account:"
	set VL=VL_$J("",19-VL.length())_$J(vc9,12)
	do VOM
	set VL="=================================================================================="
	do VOM
	set VL="" do VOM
	set VL="     "_"Account Balance Information"
	do VOM
	set VL="" do VOM
	set VL="     "_"Current Balance"
	set VL=VL_$J("",54-VL.length())_$J($FN(vc10,",",2),12)
	do VOM
	set VL="     "_"Low Balance"
	set VL=VL_$J("",54-VL.length())_$J($FN(vc11,",",2),12)
	do VOM
	set VL="     "_"Average Ledger Balance"
	set VL=VL_$J("",54-VL.length())_$J($FN(vc12,",",2),12)
	do VOM
	set VL="     "_"Average Collected Balance"
	set VL=VL_$J("",54-VL.length())_$J($FN(vc13,",",2),12)
	do VOM
	set VL="     "_"Average Investable Balance"
	set VL=VL_$J("",54-VL.length())_$J($FN(vc14,",",2),12)
	do VOM
	set VL="" do VOM
	set VL="==================================================================================="
	do VOM
	set VL="" do VOM
	set VL="     "_"Service Fees Rendered"
	do VOM
	set VL="                            "_"Item           Unit          Cost For"
	do VOM
	set VL="     "_"Description           Count          Price          Services "
	do VOM
	set VL="     "_"-------------------------------------------------------------"
	do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(lbase,1,15) set VL="     "_V
	set V=$S(+BASECHRG=0:$J("",10),1:$J($FN(BASECHRG,",",2),10)) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",56-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - Variable: COST

	type public Number COST

	set COST = 0
	quit

VP2	// Column pre-processor - Variable: DESC

	type public String vc15,vc16,vc17,vc18,vc19,vc4,vc5
	type public Date SCND
	type public Number COA, COST, COUNT4, UNP
	type public String DESC

	if (vc15 <> 3) do {
		set DESC = ""
		set (COA, COUNT4, UNP) = 0
	}
	else  if (+vc16 = 0), (+vc17 = 0), (+vc18 = 0) do {
		set DESC = ""
		set (COA, COUNT4, UNP) = 0
	}
	else  do {

		type String FEEPLN
 
 	        set FEEPLN = vc19

		type ResultSet rs = Db.select("MAX(FEEDT)", "FEEPLN", "PLAN=:FEEPLN AND FEEDT<=:SCND")

		if rs.next() set DESC = $$DESC^SRVPLN(vc4, vc5, rs.getCol(1))
		else  set DESC = ""

		set COUNT4 = vc16 + vc18
		set UNP = (vc17 / vc16) + vc18

		set COA = vc17
		set COST = COST + COA
	}
	quit

VP3	// Column pre-processor - Variable: IADD(1)

	type public String vc20,vc21,vc22
	// Set up info for this account

	type public Date SCND
        type public Number COST, DIC, DIY, LNKDCID, PAG, PLTP
        type public String CADD(), LAD, TAD
        
        type Boolean ER
        type Date SCLD
        type Number I
 
	set COST = 0

        set DIY = $$DY^UIC(vc20, SCND)
                          
	type ResultSet rs = Db.select("MAX(SCND)", "SRV", "CID=:LNKDCID AND PLTP=:PLTP AND SCND<:SCND")
        if rs.next() set SCLD = rs.getCol(1)
        else  set SCLD = ""
                          
        // Compute days in cycle
        set TAD = SCND.toString()
        set LAD = SCLD
 
        if 'SCLD.isNull() do {
 
                set DIC = SCND - SCLD
                set LAD = (SCLD + 1).toString()
        }
        else  do {
 
                type Date NJD, ODT
                type Number AF
 
                set LAD = $$^MSG(6382)  // 1st Analysis
                set NJD = SCND.nextFreqDate(vc21, .AF, 2)
 
		set ODT = vc22
                if (ODT > NJD) set DIC = SCND - ODT + 1
                else  set DIC = SCND - NJD
        }
        
	/* Build array for customer mailing address - Include at least two lines of
	   title, three lines of address plus CITY, STATE and ZIP.  If fewer than
	   two titles, allow address to expand.
	*/
	
	set (ER, PAG) = 0
        for I = 1:1:6 set CADD(I) = ""
	do ^UTLADDR(1,"CADD", 6, 2, "ACN", LNKDCID)
	if ER set CADD(3) = $$^MSG(1265)       // Invalid address
	quit

VP4	// Column pre-processor - Variable: lbase

	type public String vc19,vc23
	type public Date SCND
	type public Number BASECHRG, COST, PAG
	type public String lbase

	set PAG = PAG + 1

	if PAG = 1 do {

		// Find out the values in the service fee plan

		type String FEEPLN

		set FEEPLN = vc19

        	// Get last SRVH plan record
        	type DbSet ds = Db.selectDbSet("SRVH", "FEEPLN=:FEEPLN AND SCND<=:SCND", "SCND DESC")
        
        	if ds.next() do {
        	
        		type String CRCD
        	
        		type RecordSRVH srvh = ds.getRecord("SRVH")

			if srvh.curflag, (srvh.base <> 0) do {
		
				set CRCD = vc23
				set srvh.base = $$CONV^CRCDUTL(srvh.base, CRCD, srvh.plancur, srvh.planexc, SCND)
			}

			set BASECHRG = srvh.base
			set COST = COST + BASECHRG
		}
		else  set BASECHRG = 0
	}

	if (BASECHRG > 0) set lbase = "Base Charges"
	else  set lbase = " "

	quit

VP5	// Column post-processor - Variable: BASECHRG

	type public Number BASECHRG

	set BASECHRG = 0
	quit
