R01S399	// SCA436D - OTS Schedule CMR Deposit Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:58 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CMRDATE
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1=$$KEY^DBSREP("DEPCMR","",1,"D")

	set RID="SCA436D"
	set RN="OTS Schedule CMR Deposit Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DEPCMR]RUNDATE|[DEPCMR]RUNDATE:DISTINCT||if X set CMRDATE=$$FDAT^%ZM(X) D EXT^DBSQRY||T|System Processing Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CMRDATE
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,PRI1,PRI2,PRI3,RID,RN,SEC(),VL,VLOF,VRF(),VSTATS(),ZCMRDATE,vCOL,vHDG,vc1,vc2,vc3,vcrt,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA436D",RN="OTS Schedule CMR Deposit Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA436D","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DEPCMR]RUNDATE "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DEPCMR") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"System Processing Date"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="OTS Schedule CMR Deposit Report"
		set VBNRINFO("PGM")="R01S399"
		set VBNRINFO("RID")="SCA436D"
		set VBNRINFO("TABLES")="DEPCMR"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEPCMR]RUNDATE"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEPCMR]DEPCAT"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEPCMR]SUBCAT"

		set VBNRINFO("DOC",1)="This report generates values in various CMR cells that are totals"
		set VBNRINFO("DOC",2)="representing groups of deposit accounts that Sanchez Profile has selected"
		set VBNRINFO("DOC",3)="based on criteria, which is dictated by the government."
		set VBNRINFO("DOC",4)=""
		set VBNRINFO("DOC",5)="------ Revision History --------------------------------------------------"
		set VBNRINFO("DOC",6)=""
		set VBNRINFO("DOC",7)="05/03/07 - SWARNALATHAP - CR26729"
		set VBNRINFO("DOC",8)="        Modified Pre-Processor of CMR cells 660 and 661 to report"
		set VBNRINFO("DOC",9)="        balances for the new accounts maturing in any applicable range"
		set VBNRINFO("DOC",10)="        of months depending on the original term."
		set VBNRINFO("DOC",11)=" "
		set VBNRINFO("DOC",12)="06/06/06 - SWARNALATHAP - CR21524"
		set VBNRINFO("DOC",13)="	Modified Prompts/Query section to make the Report Date prompt "
		set VBNRINFO("DOC",14)="	as a required input to avoid UNDEFINED error thrown when the "
		set VBNRINFO("DOC",15)="	user does not enter any date while running this report."
		set VBNRINFO("DOC",16)=""
		set VBNRINFO("DOC",17)="08/18/05 - SWARNALATHAP - CR16708"
		set VBNRINFO("DOC",18)="        Report fully converted to PSL"
		set VBNRINFO("DOC",19)="	"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT="DEPCMR.RUNDATE,DEPCMR.DEPCAT,DEPCMR.SUBCAT"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DEPCMR",VWHERE,"DEPCMR.RUNDATE,DEPCMR.DEPCAT,DEPCMR.SUBCAT","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3
	set vc1=V.piece($C(9),1)			// DEPCMR.RUNDATE
	set vc2=V.piece($C(9),2)			// DEPCMR.DEPCAT
	set vc3=V.piece($C(9),3)			// DEPCMR.SUBCAT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public Date CMRDATE,ZCMRDATE
 type Public Number SEC()

 set ZCMRDATE=CMRDATE
 do PTR5^LNOTSCMR
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=CMRDATE
	quit

VRPOST	// Report post-processor

 type public Boolean VFMQ
 type Public Date CMRDATE,ZCMRDATE
 type Public Number PRI1,PRI2,PRI3,SEC(),vcrt

 type Number PN
 type String %BLK,%NOCLOSE,%NOOPEN,PGM,RID

 if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
 set ZCMRDATE=CMRDATE
 set (%NOOPEN,%NOCLOSE)=""
 set %BLK="/;"_ZCMRDATE
 set RID="SCA436D2"
 
 do ^URID if PGM.length() do V0^@PGM
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL1	// Detail
	type public String %TIM,CMRDATE,IOSL,PRI1,PRI2,PRI3,SEC(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZCMRDATE,vc1,vc2,vc3,vcrt,verror,vh(),vovc1,vovc2,vovc3,vrundate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                                           "_"Fixed Rate, Fixed Maturity Deposit Accounts"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                                                   "_"Original Term (Mos) Categories"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                                               "_"12 or Less"
	set VL=VL_$J("",78-VL.length())_"13 to 36                   37 or More"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Accts Maturing in 3 Months or Less"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Principal"
	set VL=VL_$J("",37-VL.length())_"601"
	set VL=VL_$J("",42-VL.length())_$J($FN(SEC(1,1),",",0),16)
	set VL=VL_$J("",65-VL.length())_"602"
	set VL=VL_$J("",71-VL.length())_$J($FN(SEC(2,1),",",0),16)
	set VL=VL_$J("",95-VL.length())_"603"
	set VL=VL_$J("",100-VL.length())_$J($FN(SEC(3,1),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Early Withdrawal                     604  "
	set VL=VL_$J("",42-VL.length())_$J($FN(SEC(1,9),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rate (%)"
	set VL=VL_$J("",37-VL.length())_"605"
	set VL=VL_$J("",45-VL.length())_$J(SEC(1,2),13,2)
	set VL=VL_$J("",65-VL.length())_"606"
	set VL=VL_$J("",74-VL.length())_$J(SEC(2,2),13,2)
	set VL=VL_$J("",95-VL.length())_"607"
	set VL=VL_$J("",103-VL.length())_$J(SEC(3,2),13,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rem Term (Mos)"
	set VL=VL_$J("",37-VL.length())_"608"
	set VL=VL_$J("",45-VL.length())_$J(SEC(1,3),13,0)
	set VL=VL_$J("",65-VL.length())_"609"
	set VL=VL_$J("",74-VL.length())_$J(SEC(2,3),13,0)
	set VL=VL_$J("",95-VL.length())_"610"
	set VL=VL_$J("",103-VL.length())_$J(SEC(3,3),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Accts Maturing in 4 to 12 Months"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Principal"
	set VL=VL_$J("",37-VL.length())_"615"
	set VL=VL_$J("",42-VL.length())_$J($FN(SEC(4,1),",",0),16)
	set VL=VL_$J("",65-VL.length())_"616"
	set VL=VL_$J("",71-VL.length())_$J($FN(SEC(5,1),",",0),16)
	set VL=VL_$J("",95-VL.length())_"617"
	set VL=VL_$J("",100-VL.length())_$J($FN(SEC(6,1),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Early Withdrawal                     618  "
	set VL=VL_$J("",42-VL.length())_$J($FN(SEC(4,9),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rate (%)"
	set VL=VL_$J("",37-VL.length())_"619"
	set VL=VL_$J("",45-VL.length())_$J(SEC(4,2),13,2)
	set VL=VL_$J("",65-VL.length())_"620"
	set VL=VL_$J("",74-VL.length())_$J(SEC(5,2),13,2)
	set VL=VL_$J("",95-VL.length())_"621"
	set VL=VL_$J("",103-VL.length())_$J(SEC(6,2),13,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rem Term (Mos)"
	set VL=VL_$J("",37-VL.length())_"622"
	set VL=VL_$J("",45-VL.length())_$J(SEC(4,3),13,0)
	set VL=VL_$J("",65-VL.length())_"623"
	set VL=VL_$J("",74-VL.length())_$J(SEC(5,3),13,0)
	set VL=VL_$J("",95-VL.length())_"624"
	set VL=VL_$J("",103-VL.length())_$J(SEC(6,3),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Accts "
	set VL=VL_$J("",6-VL.length())_"Maturing in 13 to 36 Months"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Principal"
	set VL=VL_$J("",65-VL.length())_"631"
	set VL=VL_$J("",71-VL.length())_$J($FN(SEC(7,1),",",0),16)
	set VL=VL_$J("",95-VL.length())_"632"
	set VL=VL_$J("",100-VL.length())_$J($FN(SEC(8,1),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Early Withdrawal                                                 633   "
	set VL=VL_$J("",71-VL.length())_$J($FN(SEC(7,9),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rate (%)"
	set VL=VL_$J("",65-VL.length())_"634"
	set VL=VL_$J("",74-VL.length())_$J(SEC(7,2),13,2)
	set VL=VL_$J("",95-VL.length())_"635"
	set VL=VL_$J("",103-VL.length())_$J(SEC(8,2),13,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rem Term (Mos)"
	set VL=VL_$J("",65-VL.length())_"636"
	set VL=VL_$J("",74-VL.length())_$J(SEC(7,3),13,0)
	set VL=VL_$J("",95-VL.length())_"637"
	set VL=VL_$J("",103-VL.length())_$J(SEC(8,3),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Accts "
	set VL=VL_$J("",6-VL.length())_"Maturing in 37 or More Months"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Principal"
	set VL=VL_$J("",95-VL.length())_"641"
	set VL=VL_$J("",100-VL.length())_$J($FN(SEC(9,1),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Early Withdrawal                                                                               642  "
	set VL=VL_$J("",100-VL.length())_$J($FN(SEC(9,9),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rate (%)"
	set VL=VL_$J("",95-VL.length())_"643"
	set VL=VL_$J("",103-VL.length())_$J(SEC(9,2),13,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rem Term (Mos)"
	set VL=VL_$J("",95-VL.length())_"644"
	set VL=VL_$J("",103-VL.length())_$J(SEC(9,3),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                         "_"Total Fixed Rate, Fixed Maturity Deposit Accounts"
	set VL=VL_$J("",80-VL.length())_"645"
	set VL=VL_$J("",85-VL.length())_$J($FN(SEC(9,8),",",0),17)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Accts Subject to Early Withdrawal Penalties"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Principal"
	set VL=VL_$J("",37-VL.length())_"653"
	set VL=VL_$J("",42-VL.length())_$J($FN(SEC(10,1),",",0),16)
	set VL=VL_$J("",65-VL.length())_"654"
	set VL=VL_$J("",71-VL.length())_$J($FN(SEC(11,1),",",0),16)
	set VL=VL_$J("",95-VL.length())_"655"
	set VL=VL_$J("",100-VL.length())_$J($FN(SEC(12,1),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Penalty (Mos)"
	set VL=VL_$J("",37-VL.length())_"656"
	set VL=VL_$J("",45-VL.length())_$J(SEC(10,2),13,2)
	set VL=VL_$J("",65-VL.length())_"657"
	set VL=VL_$J("",74-VL.length())_$J(SEC(11,2),13,2)
	set VL=VL_$J("",95-VL.length())_"658"
	set VL=VL_$J("",103-VL.length())_$J(SEC(12,2),13,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Balances in New Accounts"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Principal                            659  "
	do VP1 quit:VFMQ!verror.get()  set V=$J($FN(PRI1,",",0),16)
	set VL=VL_$J("",42-VL.length())_V
	set VL=VL_$J("",65-VL.length())_"660   "
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(PRI2,",",0),16)
	set VL=VL_$J("",71-VL.length())_V
	set VL=VL_$J("",95-VL.length())_"661"
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(PRI3,",",0),16)
	set VL=VL_$J("",100-VL.length())_V
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                                                   "_"Variable Rate, Fixed Maturity Deposit Accounts"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Rate Index Code"
	set VL=VL_$J("",37-VL.length())_"722"
	set VL=VL_$J("",42-VL.length())_$J($FN(SEC(13,7),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Principal"
	set VL=VL_$J("",37-VL.length())_"723"
	set VL=VL_$J("",42-VL.length())_$J($FN(SEC(13,1),",",0),16)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Margin (BP)"
	set VL=VL_$J("",37-VL.length())_"724"
	set VL=VL_$J("",42-VL.length())_$J(SEC(13,4),16,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rate Chg Freq (Mos)"
	set VL=VL_$J("",37-VL.length())_"725"
	set VL=VL_$J("",42-VL.length())_$J(SEC(13,5),16,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Mos Next Rate Chg (Mos)"
	set VL=VL_$J("",37-VL.length())_"726"
	set VL=VL_$J("",42-VL.length())_$J(SEC(13,6),16,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rem Term (Mos)"
	set VL=VL_$J("",37-VL.length())_"727"
	set VL=VL_$J("",42-VL.length())_$J(SEC(13,3),16,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CMRDATE,CONAM,PRI1,PRI2,PRI3,RID,RN,SEC(),VL,ZCMRDATE,vc1,vc2,vc3,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",99-VL.length())_"Effective:"
	set VL=VL_$J("",110-VL.length())_$J($$DAT^%ZM(CMRDATE),10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: PRI1

 type Public Number PRI1,SEC()

 set PRI1=SEC(1,10)+SEC(4,10)
	quit

VP2	// Column pre-processor - Variable: PRI2

 type Public Number PRI2,SEC()

 set PRI2=SEC(2,10)+SEC(5,10)+SEC(7,10)
	quit

VP3	// Column pre-processor - Variable: PRI3

 type Public Number PRI3,SEC()

 set PRI3=SEC(3,10)+SEC(6,10)+SEC(8,10)+SEC(9,10)
	quit
