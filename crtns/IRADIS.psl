IRADIS(RecordUTBLIRADIS utbliradis, String vpar, Boolean vparNorm) // UTBLIRADIS - RSP Distribution Codes Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:21 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (7)              06/27/2007
	// Trigger Definition (1)                      06/06/2007
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = utbliradis.getMode()                  // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(utbliradis,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(utbliradis,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String KEY = utbliradis.key

	if %O = 0 do { quit                                    // Create record control block
		do vinit                                              // Initialize column values
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("KEY").exists() do vkchged quit                 // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("UTBLIRADIS",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("UTBLIRADIS","KEY = :utbliradis.key") // No record exists
		do vdelete(0)
		if vpar["/TRIGAFT/" do VAD                            // After delete triggers
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String KEY

	type RecordUTBLIRADIS utbliradis = Db.getRecord("UTBLIRADIS","KEY=:KEY")
	if (%ProcessMode = 2) do {
		do utbliradis.setMode(2)

		do IRADIS(utbliradis,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordUTBLIRADIS utbliradis

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("UTBLIRADIS","KEY = :utbliradis.key") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		if %O = 0, vpar'["/NOLOG/" do ^DBSLOGIT(utbliradis,%O,.vxins())
		if %O = 1, vpar'["/NOLOG/" do ^DBSLOGIT(utbliradis,%O,.vx())

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(utbliradis)) S ^UTBL("IRADIS",vobj(utbliradis,-3))=vobj(utbliradis)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordUTBLIRADIS utbliradis

	if vpar'["/NOLOG/" do ^DBSLOGIT(utbliradis,3)

	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^UTBL("IRADIS",vobj(utbliradis,-3))
	#ENDBYPASS
	quit


vinit // Initialize default values

	type public RecordUTBLIRADIS utbliradis

	// Type local variables for access keys for defaults
	type public String KEY

	if utbliradis.age.isNull() set utbliradis.age = 0      // age
	if utbliradis.lif.isNull() set utbliradis.lif = 0      // lif
	if utbliradis.period.isNull() set utbliradis.period = 0 // period
	quit


vreqn // Validate required data items

	type public RecordUTBLIRADIS utbliradis

	if utbliradis.age.isNull() do vreqerr("AGE") quit
	if utbliradis.desc.isNull() do vreqerr("DESC") quit
	if utbliradis.lif.isNull() do vreqerr("LIF") quit
	if utbliradis.period.isNull() do vreqerr("PERIOD") quit
	if utbliradis.rsn.isNull() do vreqerr("RSN") quit
	if utbliradis.wh.isNull() do vreqerr("WH") quit
	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordUTBLIRADIS utbliradis

	if utbliradis.key.isNull() do vreqerr("KEY") quit

		if vx("AGE").exists(),utbliradis.age.isNull() do vreqerr("AGE") quit
		if vx("DESC").exists(),utbliradis.desc.isNull() do vreqerr("DESC") quit
		if vx("LIF").exists(),utbliradis.lif.isNull() do vreqerr("LIF") quit
		if vx("PERIOD").exists(),utbliradis.period.isNull() do vreqerr("PERIOD") quit
		if vx("RSN").exists(),utbliradis.rsn.isNull() do vreqerr("RSN") quit
		if vx("WH").exists(),utbliradis.wh.isNull() do vreqerr("WH") quit
	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("UTBLIRADIS","MSG",1767,"UTBLIRADIS."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VAD //
	type public Number ER = 0
	type public String vx(),RM
	do vad1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vad1 // Trigger AFTER_DELETE - UTBLIRADIS After Delete Trigger

	type public RecordUTBLIRADIS utbliradis
	/*

	---- Revision History ----------------------------------------

	05/31/07 - DHANALAKSHMI R - CR 25413
		Created to delete a Distribution code for all the plan 
		types from table UTBLDISTYP.

	--------------------------------------------------------------
	*/

	// Delete all the Distribution codes from UTBLDISTYP
	do Db.fastDelete("UTBLDISTYP","DIS=:utbliradis.key")

	quit


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordUTBLIRADIS utbliradis

	set X = utbliradis.key if 'X.isNull(),X'?1.10N,X'?1"-"1.9N set vRM=$$^MSG(742,"N") do vdderr("KEY", vRM) quit
	if '("01"[utbliradis.AGE) set vRM=$$^MSG(742,"L") do vdderr("AGE", vRM) quit
	if utbliradis.desc.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DESC", vRM) quit
	if '("01"[utbliradis.LIF) set vRM=$$^MSG(742,"L") do vdderr("LIF", vRM) quit
	if '("01"[utbliradis.PERIOD) set vRM=$$^MSG(742,"L") do vdderr("PERIOD", vRM) quit
	set X = utbliradis.rsn if 'X.isNull(),'Db.isDefined("STBLIRADIS","X") set vRM = $$^MSG(1485,X) do vdderr("RSN", vRM) quit
	if utbliradis.wh.length()>19 set vRM = $$^MSG(1076,19) do vdderr("WH", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("UTBLIRADIS","MSG",979,"UTBLIRADIS."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordUTBLIRADIS utbliradis

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	set vux = vx("KEY")
	set voldkey = vux.piece("|",1),vobj(utbliradis,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	set vnewkey = vux.piece("|",2),vobj(utbliradis,-3) = vnewkey // Copy new keys into object
	type RecordUTBLIRADIS vnewrec = utbliradis.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("UTBLIRADIS",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	set vobj(utbliradis,-3) = vux.piece("|",1)             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit
