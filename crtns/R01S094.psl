R01S094	// SCA021 - Preauthorized Transfer Distribution Rpt
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:38 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DET
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA021"
	set RN="Preauthorized Transfer Distribution Rpt"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("DET")="|1|||||||L|Print detail|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|255||[PAT]SRC|[UTBLSRC]:NOVAL||D EXT^DBSQRY||T|Source Code|||||"
	set %TAB("VIN3")="|255||[PAT]BATCH|[PAT]BATCH:DISTINCT:NOVAL||D EXT^DBSQRY||T|Batch Number|||||"
	set %TAB("VIN4")="|255||[PAT]ACN|[CIF]:NOVAL||D EXT^DBSQRY||T|Customer number|||||"
	set %TAB("VIN5")="|255||[PAT]TRNCD|[TRN]:NOVAL||D EXT^DBSQRY||T|Transaction Code|||||"
	set %TAB("VIN6")="|255||[PAT]CID|||D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN7")="|255||[PAT]AMOUNT|||D EXT^DBSQRY||T|Distribution amount|||||"
	set %TAB("VIN8")="|255||[PAT1]START|||D EXT^DBSQRY||T|Start date|||||"
	set %TAB("VIN9")="|255||[PAT1]STOP|||D EXT^DBSQRY||T|Stop date|||||"

	set %READ="IO/REQ,DET#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number DET
	type public String VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,A,C,CONAM,DC(),ETC,ETC(),ITC,NAME,RID,RN,SDESC,TDC(),TOT(),TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA021",RN="Preauthorized Transfer Distribution Rpt"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA021","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[PAT]ACN#1#12,[PAT]BATCH#43#2,[PAT1]START#47#10,[PAT1]STOP#58#10,[PAT]SEQ#69#3,[PAT]CID#74#15,[PAT]TRNCD#97#8"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[PAT]SRC "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[PAT]BATCH "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[PAT]ACN "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[PAT]TRNCD "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[PAT]CID "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[PAT]AMOUNT "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[PAT1]START "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[PAT1]STOP "_VIN9,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("PAT,PAT1") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC2|"_"Source Code"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Batch Number"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Customer number"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Transaction Code"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Account Number"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Distribution amount"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Start date"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"Stop date"_"|VIN9|"_VIN9.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Preauthorized Transfer Distribution Rpt"
		set VBNRINFO("PGM")="R01S094"
		set VBNRINFO("RID")="SCA021"
		set VBNRINFO("TABLES")="PAT,PAT1"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,PAT]SRC"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,PAT]ACN"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,PAT]BATCH"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,PAT]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"PAT.TRNCD,PAT.CID,PAT.AMOUNT,PAT.SRC,PAT.ACN,PAT.B"
	set VSELECT=VSELECT_"ATCH,PAT.SEQ,PAT1.START,PAT1.STOP"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"PAT,PAT1",VWHERE,"PAT.SRC,PAT.ACN,PAT.BATCH,PAT.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc4,vovc5,vovc6,vovc7
	set vovc4="",vovc5="",vovc6="",vovc7=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7
	set vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
	set vc1=V.piece($C(9),1)			// PAT.TRNCD
	set vc2=V.piece($C(9),2)			// PAT.CID
	set vc3=V.piece($C(9),3)			// PAT.AMOUNT
	set vc4=V.piece($C(9),4)			// PAT.SRC
	set vc5=V.piece($C(9),5)			// PAT.ACN
	set vc6=V.piece($C(9),6)			// PAT.BATCH
	set vc7=V.piece($C(9),7)			// PAT.SEQ
	set vc8=V.piece($C(9),8)			// PAT1.START
	set vc9=V.piece($C(9),9)			// PAT1.STOP
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3
	type public Number A,C,DC(),ITC,TDC()
	type public String ETC,ETC(),TYPE,TOT()

	set ETC=vc1
	set C=vc2
	set A=vc3
	set DC(0)=""
	set DC(1)=""

	if 'ETC(ETC).exists() do {
		type RecordTRN trn=Db.getRecord("TRN","ETC=:ETC",1)
		set ETC(ETC)=trn.itc
		}
	
	set ITC=ETC(ETC).extract(1)

	type RecordACN acn=Db.getRecord("ACN","CID=:C",1)
	if acn.getMode() set TYPE=acn.type
	else  set TYPE="G/L"

	if 'TOT(0,TYPE).exists() set TOT(0,TYPE)=0
	if 'TOT(1,TYPE).exists() set TOT(1,TYPE)=0
	set TOT(ITC,TYPE)=TOT(ITC,TYPE)+A
	set DC(ITC)=A,TDC(ITC)=TDC(ITC)+A
	
	quit


VPREAQ	// Pre-processor (after query)

	type public Number TDC()

	set TDC(0)=0
	set TDC(1)=0

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG2 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc4'=vc4) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb2!(+vovc5'=+vc5) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc6'=+vc6) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VHDG2	// Group Header
	type public String %MSKD,%TIM,A,C,CONAM,DC(),ER,ETC,ETC(),IOSL,ITC,NAME,RID,RN,SDESC,TDC(),TOT(),TYPE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:vh(2)  set vh(2)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="Source "
	set V=vc4,VO=V do VP1 quit:VFMQ!verror.get()  set V=$E(V,1,10)
	set VL=VL_$J("",7-VL.length())_V		// [SYSDEV,PAT]SRC
	set VL=VL_$J("",18-VL.length())_"- "
	set V=$E(SDESC,1,40) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",20-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit

VDTL4	// Detail
	type public String %TIM,A,C,DC(),ETC,ETC(),IOSL,ITC,NAME,SDESC,TDC(),TOT(),TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc5,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,12) set VL=V
	do VP4 quit:VFMQ!verror.get()  set V=$E(NAME,1,27) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",14-VL.length())_V
	set V=vc6,VO=V do VP6 quit:VFMQ!verror.get()  set V=$J(V,2)
	set VL=VL_$J("",42-VL.length())_V		// [SYSDEV,PAT]BATCH
	set VL=VL_$J("",46-VL.length())_$J($$DAT^%ZM(vc8),10)
	set VL=VL_$J("",57-VL.length())_$J($$DAT^%ZM(vc9),10)
	set VL=VL_$J("",68-VL.length())_$J(vc7,3)
	set VL=VL_$J("",73-VL.length())_$J(vc2,15)
	set VL=VL_$J("",90-VL.length())_$E(TYPE,1,4)
	set VL=VL_$J("",96-VL.length())_$E(vc1,1,8)
	set V=$S(DC(0)="":"",1:$J(DC(0),0,2)) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",106-VL.length())_V
	set V=$S(DC(1)="":"",1:$J(DC(1),0,2)) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,A,C,CONAM,DC(),ETC,ETC(),ITC,NAME,RID,RN,SDESC,TDC(),TOT(),TYPE,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="    "_"CUSTOMER  NAME                       BATCH    START     STOP    SEQ          ACCOUNT  TYPE  TRAN CODE       DEBITS       CREDITS"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,A,C,DC(),ETC,ETC(),ITC,NAME,SDESC,TDC(),TOT(),TYPE,VPN,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                                                          "_"____________  ____________"
	do VOM
	set VL="REPORT TOTALS:"
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4))		// @CNT(0,N,4)
	set VL=VL_$J("",24-VL.length())_$J(V,4)
	set VL=VL_$J("",29-VL.length())_"RECORDS"
	set VL=VL_$J("",106-VL.length())_$S(TDC(0)="":"",1:$J(TDC(0),0,2))
	set VL=VL_$J("",120-VL.length())_$S(TDC(1)="":"",1:$J(TDC(1),0,2))
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="    "_"TOTALS BY TYPE:    Type            Debits           Credits"
	set V=" " do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,PAT]SRC

	type public String vc4
	type public String SRC,SDESC

	set SDESC=""
	set SRC=vc4

	type RecordUTBLSRC usrc=Db.getRecord("UTBLSRC","SRCTYP='PAT',KEY=:SRC",1)
	set SDESC=usrc.desc	

	quit


VP2	// Column post-processor - Variable: SDESC

	type public Boolean DET
	type public String V,VL

	if 'DET set (V,VL)=" "
	quit

VP3	// Column pre-processor - [SYSDEV,PAT]ACN

	type public String vc5
	type public String NAME	
	type Number CIFNO

	set CIFNO=vc5

	type RecordCIF cif=Db.getRecord("CIF","ACN=:CIFNO",1)
	set NAME=cif.nam

	quit
	

VP4	// Column pre-processor - Variable: NAME

	type public String vc4,vc5
	type public Boolean CDISP
	type public Number OCIF
	type public String OSRC

	set CDISP=0

	if (vc4'=OSRC.get()) set CDISP=1

	if (CDISP=0)&(vc5'=OCIF.get()) set CDISP=1
	
	set OSRC=vc4
	set OCIF=vc5

	quit

VP5	// Column post-processor - Variable: NAME

	type public Boolean CDISP
	type public String V,VL
	
	if 'CDISP set (V,VL)=" "

	quit

VP6	// Column pre-processor - [SYSDEV,PAT]BATCH

	type public String vc6
	type public Boolean CDISP
	type public String OBAT,V,VL
	
	if (CDISP=0)&(vc6'=OBAT.get()) set CDISP=1

	set OBAT=vc6
 
	if 'CDISP set (V,VL)=" "

	quit

VP7	// Column post-processor - Variable: DC(0)

	type public Number DC()
	type public String V

	if DC(0)'?1N.E set V=$J(DC(0),12)
	quit

VP8	// Column post-processor - Variable: DC(1)

	type public Boolean DET
	type public Number DC()
	type public String V,VL

	if 'DET set (V,VL)=" " quit
	if DC(1)'?1N.E set V=$J(DC(1),12)

	quit

VP9	// Column post-processor -

	type public String CID,CRCD,N,TOT(),VL,X

	do VOM set X="",X.piece("_",59)="",VL="    "_X do VOM        
	set N=""        

	for  set N=TOT(0,N).order() quit:N.isNull()  do {
		set VL=$J("",23)_N_$J("",6-N.length())_$$^SCARND(TOT(0,N),16,CID.get(),CRCD.get())
		set VL=VL_$$^SCARND(TOT(1,N),16,CID.get(),CRCD.get())        
		do VOM        
		}

	quit 

