R01S348	// SCA362A - Customer Loan Account Listing
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:48 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String %ipmode,%opmode
	type String %IPMODE,%OPMODE,CUST
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String CNVOPT
	type Number DIRECT
	type Number OWNER
	type Number PRIMARY
	type Number VIN1=$G(ACN)
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA362A"
	set RN="Customer Loan Account Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("CNVOPT")="|1|||STBLCNVOPT,||||T|Currency Conversion Option|||||"
	set %TAB("DIRECT")="|1|||||||L|Loans) Direct Liability Only|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("OWNER")="|1|||||||L|Deposits) Account Owners Only|||||"
	set %TAB("PRIMARY")="|1|||||||L|Primary Owner Only|||||"
	set %TAB("VIN1")="|12||[RELCIF]ACN|[RELCIF]ACN:DISTINCT:NOVAL||set CUST=X,%EXT=1 do ^UCIF if 'ER set CUST=X||N|Customer|||||"
	set %TAB("VIN2")="|255||[DEP]CLS|[STBLCLS]:NOVAL||set CLASS=X set:X=""ALL"" NI=NI+2 D EXT^DBSQRY||T|Product Class|||||"
	set %TAB("VIN3")="|255||[DEP]GRP|DEP(CLASS,||set GROUPSV=X set:X=""ALL"" NI=NI+1 D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN4")="|255||[DEP]TYPE|DEP(CLASS,GROUPSV,||set TYPESV=X if GROUPSV'?1A.A set I(3)="""" D EXT^DBSQRY||T|Product Type|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,PRIMARY#0,DIRECT#0,OWNER#0,CNVOPT#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	// Conditionally suppress prompt for CNVOPT
	if '$G(%MCP) do {
		set %READ=","_%READ
		set %READ=%READ.piece(",CNVOPT#0,",1)_","_%READ.piece(",CNVOPT#0,",2)
		set %READ=%READ.piece(",",2,99)
		}

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=32
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String %ipmode,%opmode
	type public String %IPMODE,%OPMODE,CUST
	type public Number VIN1,PRIMARY,DIRECT,OWNER
	type public String VIN2,VIN3,VIN4,CNVOPT
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %IPMODE,%OPMODE,%TIM,CIF(),CONAM,CUSTOMER,GRP,OPT,RID,RN,TOTACR,TOTAVLBAL,TOTBALCMP,TOTGTDUE,TOTPMT,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vout,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA362A",RN="Customer Loan Account Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA362A","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[RELCIF]CID#1#12,[LN]STAT#15#1,[LN]ACNRELC#18#2,[RELCIF]ROLE2#22#3,[LN]BALCMP#27#15,[LN]PMT#44#12,[LN]ACR#58#12,[LN]TLD#74#10,[LN]ODT#86#10\[DEP]CRCD#15#3,[LN]AVLBAL#27#15,[LN]GTDUE#44#12,[LN]DIST1ND#60#10,[LN]DIST1FRE#72#12,[LN]DTC#86#10"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[RELCIF]ACN = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DEP]CLS "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]GRP "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DEP]TYPE "_VIN4,SEQ=SEQ+1
		set DQQRY(SEQ)="([DEP]CLS=""D"" & (<<PRIMARY>>=1)  & ([RELCIF]POI=1) & (<<OWNER>>'=1  OR (<<OWNER>>=1  & ([RELCIF]DOI=1)))) OR([DEP]CLS=""D"" & (<<PRIMARY>>'=1)                   & (<<OWNER>>'=1  OR (<<OWNER>>=1  & ([RELCIF]DOI=1)))) OR([DEP]CLS=""L"" & (<<PRIMARY>>=1)  & ([RELCIF]POI=1) & (<<DIRECT>>'=1 OR (<<DIRECT>>=1 & ([RELCIF]LDI=1)))) OR([DEP]CLS=""L"" & (<<PRIMARY>>'=1)                   & (<<DIRECT>>'=1 OR (<<DIRECT>>=1 & ([RELCIF]LDI=1))))",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("RELCIF,CIF,DEP,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"RELCIF.ACN,LN.CLS,LN.GRP,LN.TYPE,RELCIF.CID,CIF.NA"
	set VSELECT=VSELECT_"M,CIF.TAXID,LN.STAT,LN.ACNRELC,RELCIF.ROLE2,LN.BAL"
	set VSELECT=VSELECT_"CMP,LN.PMT,LN.ACR,LN.TLD,LN.ODT,DEP.CRCD,LN.AVLBAL"
	set VSELECT=VSELECT_",LN.GTDUE,LN.DIST1ND,LN.DIST1FRE,LN.DTC,CIF.CRCD"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"RELCIF,CIF,DEP,LN",VWHERE,"RELCIF.ACN,LN.CLS,LN.GRP,LN.TYPE,RELCIF.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22
	set vc1=V.piece($C(9),1)			// RELCIF.ACN
	set vc2=V.piece($C(9),2)			// LN.CLS
	set vc3=V.piece($C(9),3)			// LN.GRP
	set vc4=V.piece($C(9),4)			// LN.TYPE
	set vc5=V.piece($C(9),5)			// RELCIF.CID
	set vc6=V.piece($C(9),6)			// CIF.NAM
	set vc7=V.piece($C(9),7)			// CIF.TAXID
	set vc8=V.piece($C(9),8)			// LN.STAT
	set vc9=V.piece($C(9),9)			// LN.ACNRELC
	set vc10=V.piece($C(9),10)			// RELCIF.ROLE2
	set vc11=V.piece($C(9),11)			// LN.BALCMP
	set vc12=V.piece($C(9),12)			// LN.PMT
	set vc13=V.piece($C(9),13)			// LN.ACR
	set vc14=V.piece($C(9),14)			// LN.TLD
	set vc15=V.piece($C(9),15)			// LN.ODT
	set vc16=V.piece($C(9),16)			// DEP.CRCD
	set vc17=V.piece($C(9),17)			// LN.AVLBAL
	set vc18=V.piece($C(9),18)			// LN.GTDUE
	set vc19=V.piece($C(9),19)			// LN.DIST1ND
	set vc20=V.piece($C(9),20)			// LN.DIST1FRE
	set vc21=V.piece($C(9),21)			// LN.DTC
	set vc22=V.piece($C(9),22)			// CIF.CRCD
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 // Restore value of %IPMODE and %OPMODE, define vout based on orig %IPMODE

 type public String %ipmode,%opmode,vout
 type public String %IPMODE,%OPMODE

 set %IPMODE=%ipmode,%OPMODE=%opmode
 set vout=%IPMODE["NOINT"=0

 if %IPMODE.isNull() kill %IPMODE
 if %OPMODE.isNull() kill %OPMODE
	quit

VPREBQ	// Pre-processor (before query)

 type public String %IPMODE,%OPMODE,CUST
 type Number TOTBALCMP,TOTAVLBAL,TOTACR,TOTPMT,TOTGTDUE
 //Incoming=%ipmode
 //Incoming=%opmode

 set %ipmode=%IPMODE.get(),%IPMODE="NOINT:ORDER INPUT/DEL=44"
 set %opmode=%OPMODE.get(),%OPMODE="NOOUTPUT"
 set (TOTBALCMP,TOTAVLBAL,TOTACR,TOTPMT,TOTGTDUE)=0
	quit

VRPOST	// Report post-processor

 // Set %NOCLOSE so that ^UCLOSE will not prompt "Press Return to Continue".
 // Prompt will be displayed out of deposit report.
 
 type public Number CIF()
 type String %NOCLOSE

 set %NOCLOSE=""

 type ResultSet rs=Db.select("NAM,XNAME,TAXID","CIF")
 while rs.next() do {
        set CIF(1)=rs.getCol("NAM")_"|"_rs.getCol("XNAME")
        set CIF(2)=rs.getCol("TAXID")
        }
 quit
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG6 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1
	if vb4!(vovc3'=vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(+vovc4'=+vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VHDG6	// Group Header
	type public String %IPMODE,%MSKD,%OPMODE,%TIM,%ipmode,%opmode,CIF(),CONAM,CUST,CUSTOMER,ER,GRP,IOSL,OPT,RID,RN,TOTACR,TOTAVLBAL,TOTBALCMP,TOTGTDUE,TOTPMT,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vout,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:vh(6)  set vh(6)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$E(vc3,1,18)
	do VOM
	quit

VDTL6	// Detail
	type public String %IPMODE,%OPMODE,%TIM,%ipmode,%opmode,CIF(),CUST,CUSTOMER,GRP,IOSL,OPT,TOTACR,TOTAVLBAL,TOTBALCMP,TOTGTDUE,TOTPMT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vout,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc5,12)
	set VL=VL_$J("",13-VL.length())_$J(vc8,2)
	set VL=VL_$J("",17-VL.length())_$E(vc9,1,2)
	set VL=VL_$J("",21-VL.length())_$E(vc10,1,3)
	set V=vc11,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,16,2)
	set VL=VL_$J("",25-VL.length())_V		// [SYSDEV,LN]BALCMP
	set V=vc12,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,13,2)
	set VL=VL_$J("",42-VL.length())_V		// [SYSDEV,LN]PMT
	set V=vc13,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,12,2)
	set VL=VL_$J("",57-VL.length())_V		// [SYSDEV,LN]ACR
	set VL=VL_$J("",73-VL.length())_$J($$DAT^%ZM(vc14),10)
	set VL=VL_$J("",85-VL.length())_$J($$DAT^%ZM(vc15),10)
	do VOM
	set VL="              "_$E(vc16,1,3)
	set V=vc17,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J(V,23,2)
	set VL=VL_$J("",18-VL.length())_V		// [SYSDEV,LN]AVLBAL
	set V=vc18,VO=V do VP5 quit:VFMQ!verror.get()  set V=$J(V,13,2)
	set VL=VL_$J("",42-VL.length())_V		// [SYSDEV,LN]GTDUE
	set VL=VL_$J("",59-VL.length())_$J($$DAT^%ZM(vc19),10)
	set VL=VL_$J("",71-VL.length())_$J(vc20,12)
	set VL=VL_$J("",85-VL.length())_$J($$DAT^%ZM(vc21),10)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %IPMODE,%MSKD,%OPMODE,%TIM,%ipmode,%opmode,CIF(),CONAM,CUST,CUSTOMER,GRP,OPT,RID,RN,TOTACR,TOTAVLBAL,TOTBALCMP,TOTGTDUE,TOTPMT,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vout,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+11,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,40)
	set VL=VL_$J("",64-VL.length())_"Run Date:"
	set VL=VL_$J("",74-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",87-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",66-VL.length())_"System:"
	set VL=VL_$J("",74-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",86-VL.length())_"Page:"
	set VL=VL_$J("",92-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Customer: "
	do VP6 quit:VFMQ!verror.get()  set V=$J(CUSTOMER,12)
	set VL=VL_$J("",15-VL.length())_V
	do VOM
	set VL="               "_$E(vc6,1,40)
	set VL=VL_$J("",57-VL.length())_"TIN/SIN: "
	set VL=VL_$J("",66-VL.length())_$E(vc7,1,20)
	do VOM
	set VL="" do VOM
	do VP7 quit:VFMQ!verror.get()  set V=$E(OPT,1,30) set VL=V
	do VOM
	set VL="" do VOM
	set VL="     "_"Account  S  Rel Rol          Balance       Payment       Accrued      Last Trn    Opened"
	if 'VL.translate(" ").isNull() do VOM
	set VL="              "_"Curr              Available     Total Due      Next Due      Pmt Freq    Closed"
	do VOM
	set VL="==============================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %IPMODE,%OPMODE,%TIM,%ipmode,%opmode,CIF(),CUSTOMER,GRP,OPT,TOTACR,TOTAVLBAL,TOTBALCMP,TOTGTDUE,TOTPMT,VPN,vc3,vout,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Total Loans"
	set VL=VL_$J("",26-VL.length())_$J(TOTBALCMP,15,2)
	set VL=VL_$J("",43-VL.length())_$J(TOTPMT,12,2)
	set V=$J(TOTACR,12,2) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",57-VL.length())_V
	do VOM
	set VL="                          "_$J(TOTAVLBAL,15,2)
	set V=$J(TOTGTDUE,12,2) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",43-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,LN]BALCMP

	type public String vc16,vc22
 type public Number TOTBALCMP
 type public String CNVOPT,%CRCD,%MCP,%MSKE,V
 type Number len
 type String BSE,SEC,TOT

 if '(%MCP.get())!('CNVOPT.get()) set TOTBALCMP=0 quit

 set BSE=vc16
 set SEC=$S(CNVOPT=1:%CRCD,1:vc22)

 if '(BSE.length()) set BSE=%CRCD
 if '(SEC.length()) set SEC=%CRCD

 // accumulate total for this item
 if BSE=SEC set TOTBALCMP=TOTBALCMP+V quit
 
 //The following 2 lines and the line after the conversion are custom for
 //Investicni (and other European customers)

 set len=V.length()
 set V=V.piece(" ",V.length(" "))
 set V=V.translate(%MSKE,".")

 if %MSKE="" set %MSKE="."

 do CAMT^CRCDUTL(BSE,SEC,.V)

 set V=$J(V,0,2)

 set TOTBALCMP=TOTBALCMP+V
 quit
	quit

VP2	// Column pre-processor - [SYSDEV,LN]PMT

	type public String vc16,vc22
 type public Number TOTPMT
 type public String CNVOPT,%CRCD,%MCP,%MSKE,V
 type Number len
 type String BSE,SEC

 if '(%MCP.get())!('CNVOPT.get()) set TOTPMT=0 quit

 set BSE=vc16
 set SEC=$S(CNVOPT=1:%CRCD,1:vc22)

 if '(BSE.length()) set BSE=%CRCD
 if '(SEC.length()) set SEC=%CRCD

 // accumulate total for this item
 if BSE=SEC set TOTPMT=TOTPMT+V quit

 //The following 2 lines and the line after the conversion are custom for
 //Investicni (and other European customers)
 
 set len=V.length()
 set V=V.piece(" ",V.length(" "))
 set V=V.translate(%MSKE,".")

 if %MSKE="" set %MSKE="."
 
 do CAMT^CRCDUTL(BSE,SEC,.V)

 set V=$J(V,0,2)
 set TOTPMT=TOTPMT+V

 quit
	quit

VP3	// Column pre-processor - [SYSDEV,LN]ACR

	type public String vc16,vc22
 type public Number TOTACR
 type public String CNVOPT,%CRCD,%MCP,%MSKE,V
 type Number len
 type String BSE,SEC

 if '(%MCP.get())!('CNVOPT.get()) set TOTACR=0 quit

 set BSE=vc16
 set SEC=$S(CNVOPT=1:%CRCD,1:vc22)

 if '(BSE.length()) set BSE=%CRCD
 if '(SEC.length()) set SEC=%CRCD

 // accumulate total for this item
 if BSE=SEC set TOTACR=TOTACR+V quit

 //The following 2 lines and the line after the conversion are custom for
 //Investicni (and other European customers)
 
 set len=V.length()
 set V=V.piece(" ",V.length(" "))
 set V=V.translate(%MSKE,".")

 if %MSKE="" set %MSKE="."
 
 do CAMT^CRCDUTL(BSE,SEC,.V)

 set V=$J(V,0,2)
 
 set TOTACR=TOTACR+V
 quit
	quit

VP4	// Column pre-processor - [SYSDEV,LN]AVLBAL

	type public String vc16,vc22
 type public Number TOTAVLBAL
 type public String CNVOPT,%CRCD,%MCP,%MSKE,V
 type Number len
 type String BSE,SEC

 if '(%MCP.get())!('CNVOPT.get()) set TOTAVLBAL=0 quit

 set BSE=vc16
 set SEC=$S(CNVOPT=1:%CRCD,1:vc22)

 if '(BSE.length()) set BSE=%CRCD
 if '(SEC.length()) set SEC=%CRCD

 // accumulate total for this item
 if BSE=SEC set TOTAVLBAL=TOTAVLBAL+V quit

 //The following 2 lines and the line after the conversion are custom for
 //Investicni (and other European customers)
 
 set len=V.length()
 set V=V.piece(" ",V.length(" "))
 set V=V.translate(%MSKE,".")

 if %MSKE="" set %MSKE="."
 
 do CAMT^CRCDUTL(BSE,SEC,.V)

 set V=$J(V,0,2)
 
 set TOTAVLBAL=TOTAVLBAL+V
 quit
	quit

VP5	// Column pre-processor - [SYSDEV,LN]GTDUE

	type public String vc16,vc22
 type public Number TOTGTDUE
 type public String CNVOPT,%CRCD,%MCP,%MSKE,V
 type Number len
 type String BSE,SEC

 if '(%MCP.get())!('CNVOPT.get()) set TOTGTDUE=0 quit

 set BSE=vc16
 set SEC=$S(CNVOPT=1:%CRCD,1:vc22)

 if '(BSE.length()) set BSE=%CRCD
 if '(SEC.length()) set SEC=%CRCD

 // accumulate total for this item
 if BSE=SEC set TOTGTDUE=TOTGTDUE+V quit

 //The following 2 lines and the line after the conversion are custom for
 //Investicni (and other European customers)
 
 set len=V.length()
 set V=V.piece(" ",V.length(" "))
 set V=V.translate(%MSKE,".")

 if %MSKE="" set %MSKE="."
 
 do CAMT^CRCDUTL(BSE,SEC,.V)

 set V=$J(V,0,2)
 
 set TOTGTDUE=TOTGTDUE+V
 quit
	quit

VP6	// Column pre-processor - Variable: CUSTOMER

	type public Number CUST,CUSTOMER
	set CUSTOMER=CUST
	quit

VP7	// Column pre-processor - Variable: OPT

 type public Number CUSTOMER,TOTBALCMP,TOTPMT,TOTACR,TOTAVLBAL,TOTGTDUE
 type public String CIFCRCD,CNVOPT,%CRCD,OPT

 set (TOTBALCMP,TOTPMT,TOTACR,TOTAVLBAL,TOTGTDUE)=0

 if CNVOPT.get()=0 set OPT=""
 if CNVOPT.exists()=0 set OPT=""
 
 type RecordCIF cif=Db.getRecord("CIF","ACN=:CUSTOMER",1)
 if cif.getMode() set CIFCRCD=cif.crcd

 // All amounts converted to ~p1
 if CNVOPT.get()=1 set OPT=$$^MSG(364,%CRCD)

 // All amounts converted to ~p1
 if CNVOPT.get()=2 set OPT=$$^MSG(364,CIFCRCD)
	quit

VP8	// Column post-processor - Variable: TOTACR

 type public String CNVOPT,V,VL

 if 'CNVOPT.get() set V="",VL=""
	quit

VP9	// Column post-processor - Variable: TOTGTDUE

 type public String CNVOPT,V,VL

 if 'CNVOPT.get() set (VL,V)=""
	quit
