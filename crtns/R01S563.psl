R01S563	// SCA644 - Regulation D Exception Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:01 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN3="ALL"

	set RID="SCA644"
	set RN="Regulation D Exception Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN3")="|255||[DEP]CID|[DEP]CID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Account Number|||||"

	set %READ="IO/REQ,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,STPINV,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA644",RN="Regulation D Exception Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA644","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DEP]PINV#22#2"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DEP]PINV>0",SEQ=SEQ+1
		set DQQRY(SEQ)="[DEP]MMDAC1>3,[DEP]MMDAT1>6,[DEP]MMDAC2>3,[DEP]MMDAT2>6,[DEP]MMDAC3>3,[DEP]MMDAT3>6,[DEP]MMDAC4>3,[DEP]MMDAT4>6,[DEP]MMDAC5>3,[DEP]MMDAT5>6,[DEP]MMDAC6>3,[DEP]MMDAT6>6,[DEP]MMDAC7>3,[DEP]MMDAT7>6,[DEP]MMDAC8>3,[DEP]MMDAT8>6,[DEP]MMDAC9>3,[DEP]MMDAT9>6,[DEP]MMDAC10>3,[DEP]MMDAT10>6,[DEP]MMDAC11>3,[DEP]MMDAT11>6,[DEP]MMDAC12>3,[DEP]MMDAT12>6",SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]CID "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DEP,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",3)="WC2|"_"Account Number"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Regulation D Exception Report"
		set VBNRINFO("PGM")="R01S563"
		set VBNRINFO("RID")="SCA644"
		set VBNRINFO("TABLES")="DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]PINV"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEP]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DEP.PINV,DEP.CID,DEP.ACN,CIF.NAM,DEP.MMDAC1,DEP.MM"
	set VSELECT=VSELECT_"DAC2,DEP.MMDAC3,DEP.MMDAC4,DEP.MMDAC5,DEP.MMDAC6,D"
	set VSELECT=VSELECT_"EP.MMDAC7,DEP.MMDAC8,DEP.MMDAC9,DEP.MMDAC10,DEP.MM"
	set VSELECT=VSELECT_"DAC11,DEP.MMDAC12,CIF.PAD1,DEP.MMDAT1,DEP.MMDAT2,D"
	set VSELECT=VSELECT_"EP.MMDAT3,DEP.MMDAT4,DEP.MMDAT5,DEP.MMDAT6,DEP.MMD"
	set VSELECT=VSELECT_"AT7,DEP.MMDAT8,DEP.MMDAT9,DEP.MMDAT10,DEP.MMDAT11,"
	set VSELECT=VSELECT_"DEP.MMDAT12,CIF.PAD2,CIF.PAD3,CIF.PCITY,CIF.PSTATE"
	set VSELECT=VSELECT_",CIF.PZIP,CIF.PCNTRY"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DEP,CIF",VWHERE,"DEP.PINV DESC,DEP.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35
	set vc1=V.piece($C(9),1)			// DEP.PINV
	set vc2=V.piece($C(9),2)			// DEP.CID
	set vc3=V.piece($C(9),3)			// DEP.ACN
	set vc4=V.piece($C(9),4)			// CIF.NAM
	set vc5=V.piece($C(9),5)			// DEP.MMDAC1
	set vc6=V.piece($C(9),6)			// DEP.MMDAC2
	set vc7=V.piece($C(9),7)			// DEP.MMDAC3
	set vc8=V.piece($C(9),8)			// DEP.MMDAC4
	set vc9=V.piece($C(9),9)			// DEP.MMDAC5
	set vc10=V.piece($C(9),10)			// DEP.MMDAC6
	set vc11=V.piece($C(9),11)			// DEP.MMDAC7
	set vc12=V.piece($C(9),12)			// DEP.MMDAC8
	set vc13=V.piece($C(9),13)			// DEP.MMDAC9
	set vc14=V.piece($C(9),14)			// DEP.MMDAC10
	set vc15=V.piece($C(9),15)			// DEP.MMDAC11
	set vc16=V.piece($C(9),16)			// DEP.MMDAC12
	set vc17=V.piece($C(9),17)			// CIF.PAD1
	set vc18=V.piece($C(9),18)			// DEP.MMDAT1
	set vc19=V.piece($C(9),19)			// DEP.MMDAT2
	set vc20=V.piece($C(9),20)			// DEP.MMDAT3
	set vc21=V.piece($C(9),21)			// DEP.MMDAT4
	set vc22=V.piece($C(9),22)			// DEP.MMDAT5
	set vc23=V.piece($C(9),23)			// DEP.MMDAT6
	set vc24=V.piece($C(9),24)			// DEP.MMDAT7
	set vc25=V.piece($C(9),25)			// DEP.MMDAT8
	set vc26=V.piece($C(9),26)			// DEP.MMDAT9
	set vc27=V.piece($C(9),27)			// DEP.MMDAT10
	set vc28=V.piece($C(9),28)			// DEP.MMDAT11
	set vc29=V.piece($C(9),29)			// DEP.MMDAT12
	set vc30=V.piece($C(9),30)			// CIF.PAD2
	set vc31=V.piece($C(9),31)			// CIF.PAD3
	set vc32=V.piece($C(9),32)			// CIF.PCITY
	set vc33=V.piece($C(9),33)			// CIF.PSTATE
	set vc34=V.piece($C(9),34)			// CIF.PZIP
	set vc35=V.piece($C(9),35)			// CIF.PCNTRY
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VDTL1	// Detail
	type public String %TIM,IOSL,STPINV,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Periods In Violation "
	set V=vc1,VO=V set V=$J(V,2) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",21-VL.length())_V		// [SYSDEV,DEP]PINV
	do VOM
	set VL="" do VOM
	quit

VDTL2	// Detail
	type public String %TIM,IOSL,STPINV,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc2,12)
	set VL=VL_$J("",14-VL.length())_$J(vc3,12)
	set VL=VL_$J("",28-VL.length())_$E(vc4,1,40)
	set VL=VL_$J("",72-VL.length())_$J(vc5,2,0)
	set VL=VL_$J("",77-VL.length())_$J(vc6,2,0)
	set VL=VL_$J("",82-VL.length())_$J(vc7,2,0)
	set VL=VL_$J("",87-VL.length())_$J(vc8,2,0)
	set VL=VL_$J("",92-VL.length())_$J(vc9,2,0)
	set VL=VL_$J("",97-VL.length())_$J(vc10,2,0)
	set VL=VL_$J("",102-VL.length())_$J(vc11,2,0)
	set VL=VL_$J("",107-VL.length())_$J(vc12,2,0)
	set VL=VL_$J("",112-VL.length())_$J(vc13,2,0)
	set VL=VL_$J("",117-VL.length())_$J(vc14,2,0)
	set VL=VL_$J("",123-VL.length())_$J(vc15,2,0)
	set VL=VL_$J("",129-VL.length())_$J(vc16,2,0)
	do VOM
	set VL="                            "_$E(vc17,1,40)
	set VL=VL_$J("",72-VL.length())_$J(vc18,2,0)
	set VL=VL_$J("",77-VL.length())_$J(vc19,2,0)
	set VL=VL_$J("",82-VL.length())_$J(vc20,2,0)
	set VL=VL_$J("",87-VL.length())_$J(vc21,2,0)
	set VL=VL_$J("",92-VL.length())_$J(vc22,2,0)
	set VL=VL_$J("",97-VL.length())_$J(vc23,2,0)
	set VL=VL_$J("",102-VL.length())_$J(vc24,2,0)
	set VL=VL_$J("",107-VL.length())_$J(vc25,2,0)
	set VL=VL_$J("",112-VL.length())_$J(vc26,2,0)
	set VL=VL_$J("",117-VL.length())_$J(vc27,2,0)
	set VL=VL_$J("",123-VL.length())_$J(vc28,2,0)
	set VL=VL_$J("",129-VL.length())_$J(vc29,2,0)
	do VOM
	set VL="                            "_$E(vc30,1,40)
	do VOM
	set VL="                            "_$E(vc31,1,40)
	do VOM
	set VL="                            "_$E(vc32,1,40)
	do VOM
	set VL="                            "_$E(vc33,1,2)
	set VL=VL_$J("",32-VL.length())_$E(vc34,1,10)
	set VL=VL_$J("",44-VL.length())_$E(vc35,1,2)
	do VOM
	set VL="" do VOM
	quit

VSUM2	// Summary
	type public String %TIM,I,IOSL,STPINV,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"Total Accounts with "
	set VL=VL_$J("",21-VL.length())_$J(STPINV,2)
	set VL=VL_$J("",24-VL.length())_"violations: "
	set V=VT(2)					// @CNT(,N,8)
	set VL=VL_$J("",36-VL.length())_$J(V,8)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,STPINV,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="                                            "_"Previous 12 Reg D Periods   -------------------Third Party Checks---------------------"
	do VOM
	set VL="     "_"Account      Customer  Customer Name                               1    2    3    4    5    6    7    8    9    10    11    12 "
	do VOM
	set VL="      "_"Number       Number   Address                                     ------------------Limited Transactions --------------------"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,DEP]PINV

	type public String vc1
 type public Number STPINV
 
 set STPINV = vc1

 quit
	quit
