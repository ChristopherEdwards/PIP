NCPUTILS		/*
	 ORIG: VARGAJ - 04/11/2007
	 DESC: Shared utilities for fields listed in coupon book tape
	 	production reports.

	---- Comments --------------------------------------------------------
		These functions were shared between 2 reports and so
		they have been moved to a common procedure. 
	---- Revision History ------------------------------------------------

		04/11/07 - VARGAJ - CR18011
			These functions were ported from Profile01 to support
			coupon book tape production functionality.	 
	*/
	quit
	
public INIT()		// Initialize common fields

	type public String CLBAL(), DESC(), ELAP(), EPMT(), ESCT(), RBAS(), RDT()
	type Number J

	for J=1:1:11 do {
		set CLBAL(J)=""
		set DESC(J)=""
		set ELAP(J)=""
		set EPMT(J)=""
		set ESCT(J)=""
		set RBAS(J)=""
		set RDT(J)=""
	}

	quit

public FRSET(Number AF)			// Annual Factor	/REF:R

	type Number FR = 1

	if AF=12 set FR=1 quit FR
	if AF=24 set FR=2 quit FR
	if AF=4 set FR=3 quit FR
	if AF=3 set FR=4 quit FR
	if AF=2 set FR=6 quit FR
	if AF=1 set FR=7 quit FR
	if AF=52 set FR=8 quit FR
	if AF=26 set FR=9 quit FR

	quit FR

public ESCROW(RecordLN ln,		// Loan Record		/REF:RW
		RecordLNAPCHG lnapchg)	// Analysis Payment Change /REF:RW
	
	type public String CLBAL(), DESC(), ELAP(), EPMT(), ESCAD, ESCT(), RBAS(), RDT(), SPRA
	type Number AEAF, EAF, INCR, TAMTS
	
	set INCR=0
	type ResultSet rs=Db.select("EPMT,RDT,EAF,ELAP,CLBAL,ECID","LNAPCHGE","APCND=:lnapchg.apcnd AND CID=:ln.cid")
	while rs.next() do {
		type Number ECID
		
		set INCR=INCR+1
		set ECID = rs.getCol("ECID")
		type RecordDep dep=Db.getRecord("DEP","CID=:ECID",1)
		set DESC(INCR)=dep.esc
		set EPMT(INCR)=rs.getCol("EPMT")
		set RBAS(INCR)=0
		set RDT(INCR)=rs.getCol("RDT")
		set EAF=rs.getCol("EAF")
		set ELAP(INCR)=rs.getCol("ELAP")
		set CLBAL(INCR)=rs.getCol("CLBAL")
		set ESCT(INCR)=$$FRSET(EAF)
		set ESCAD=0
		if ln.teb<0 set ESCAD=ln.teb
		set TAMTS=lnapchg.tamts
		set AEAF=lnapchg.aeaf
		set SPRA=0
		if AEAF<0 set SPRA=TAMTS/AEAF
	}

	quit

public NCPSET(String CBFRE,	// Coupon Book Prod Frequence	/REF:R
	String DIST1FRE,	// Payment Frequency		/REF:R
	Number NCP)		// Number of Coupon Payments	/REF:W

	type Number AFCB
	type Number AFPMT
	type Date JD, TEMP

	set JD = %SystemDate
	set NCP = 0
	set TEMP = JD.nextFreqDate(CBFRE,.AFCB)
	quit:TEMP=""
	set TEMP = JD.nextFreqDate(DIST1FRE,.AFPMT)
	quit:TEMP=""

	set NCP = AFPMT\AFCB
	quit


public LNINIT(RecordLN ln,		// Loan		/REF:RW
	RecordLNCPN lncpn,		// Coupon Book	/REF:RW
	RecordLNAPCHG lnapchg)		// Analysis Payment Change /REF:RW

	type Public Number EAF, ESCAD, FR, LCHG, NCP, NCPCLNU(), PMTGRC, SPRA
	type Public Date NDD
	type Date TEMP
	type Number AF
	
	// Set up NCPCLNU array, to minimize disk access

	if 'NCPCLNU(ln.type).exists() do {
		set NCPCLNU(ln.type) = ""

		type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:ln.type",1)
		quit:prodctl.cbprod.isNull()

		type RecordUTBLCBPROD cbprod=Db.getRecord("UTBLCBPROD","VENDR=:prodctl.cbprod",1)
		set NCPCLNU(ln.type)=cbprod.clnt
	}

	set PMTGRC = +ln.pmtgrc
	set NDD = lncpn.ndd
	set NCP = lncpn.ncp
	set ESCAD = ""
	set SPRA = ""
	set EAF = ""
	
	set NCPCLNU=NCPCLNU(ln.type)
	do ADDR(.ln)
	// Late charge processing
	do LCHG^SCA150(.ln,.LCHG)

	set TEMP = ln.dfp.nextFreqDate(ln.dist1fre,.AF)
	set AF=AF\1
	set FR=$$FRSET(AF)

	// Normal coupon production
	if (lncpn.pmet = 1)!(lncpn.pmet = 3) do { quit
		do SET1(.ln, .lncpn)
		do ESCPRO(.ln, .lnapchg)
	}

	// Create coupon book on payment
	if (lncpn.pmet = 2)!(ln.eacip) do { quit
		do SET2(.ln, .lncpn, .lnapchg)
		do ESCPRO(.ln, .lnapchg)
	}

	if (ln.pchnd.isNull()),((ln.pchnd-ln.pcoff)'>%SystemDate) do { quit
		do SET2(.ln, .lncpn, .lnapchg)
		do ESCPRO(.ln, .lnapchg)
	}

	do SET1(.ln, .lncpn)

	quit

SET1( RecordLN ln,
	RecordLNCPN lncpn) // Coupon Production for accounts not in PCB

	type public Number NCP,TPT

	set TPT=ln.pmt
	if lncpn.pmet = 1 do NCPSET(ln.cbfre, ln.dist1fre, .NCP)
	quit

SET2( RecordLN ln,
	RecordLNCPN lncpn,
	RecordLNAPCHG lnapchg) // Coupon Production for accounts in PCB

	type public Number TPT
	type public String NCP
	type Number ESCC, PRNI
	
	if ln.pchnd=lncpn.pnd set PRNI= lnapchg.ntrs
	else  set PRNI = ln.pmtpi
	if lnapchg.apcnd = lncpn.pnd set ESCC= lnapchg.ntrs
	else  set ESCC= ln.pmttrs
	set TPT = PRNI+ESCC
	set NCP=$$NCP^SCA150(.ln, lnapchg.apcnd)
	quit


ESCPRO(RecordLN ln, 		
	RecordLNAPCHG lnapchg)	

	type public String APCND,REC

	do INIT()
	type RecordLNBIL0 lnbil0=Db.getRecord("LNBIL0","CID=:ln.cid",1)

	set REC = lnbil0.pe05
	set REC = REC_lnbil0.pe05da
	set REC = REC_lnbil0.pe05ea
	set REC = REC_lnbil0.pe05la
	set REC = REC_lnbil0.pe05na
	set REC = REC_lnbil0.pe05pa
	set REC = REC_lnbil0.pe05pf

	if ('lnapchg.apcnd.isNull()),('REC.isNull()) do ESCROW(.ln, .lnapchg)

	quit

ADDR(RecordLN ln)
	
	type public String AD1, AD2, AD3

	type RecordACNADDR acnaddr = Db.getRecord("ACNADDR","CID=ln.cid",1)
	
	set AD1 = acnaddr.ad1
	set AD2 = acnaddr.ad2
	set AD3 = acnaddr.city_", "_acnaddr.state_" "_acnaddr.mzip
	
	if AD2 = "" do {
		set AD2 = AD3
		set AD3 = ""
	}
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60747^39692^John Varga^4849"	// Signature - LTD^TIME^USER^SIZE
