DEPMMDA(RecordDEP dep,RecordTTX ttx,RecordTRN trn)	// MMDA Transaction Processing
	/* 
	  CALLED BY:
	      CALLS:
	   PROJ #'S:   1669
	       DESC:
	
	   GLOBALS -  ^ACN,^TRN
	       READ:
	        SET:
	
	      INPUT: CID,ETC,TJD
	     OUTPUT:
	
	---- Revision History ------------------------------------------------
	
	12/08/06 - PUTTASWH - 24249
		Modified FILE and EC section to update the MMDA1 and MMDA2
		counters if TEFD=PJD and the account opening date falls on
		this date.  Then such transactions has to be considered in 
		the current period and not in previous period.
			
	12/07/05 - SWARNALP - 16620
		Modified EC and FILE section to first check the condition 
		TEFD<PJD prior to setting value for PJD in the for loop since  
		PJD is already calculated in INI section which is called by 
		EC and DEPMMDA section even before the iteration starts. Also 
		corrected Current Period condition from TEFD'<PJD to TEFD>PJD.
	
	12/13/02 - ZWITKOWITSM - 51349
		   Correct line tag EC parameters.
	
	09/05/02 - SCOTTC - 43583
		Make code review changes for Database Independence project.

	07/24/01 - ARCILLAZ - 43583
		Converted to PSL. Removed old revision history.

	-----------------------------------------------------------------------
	*/

	new ITC,FRE,LJD,NJD,TEFD

	// Unlimited trans-do not consider MMDA limitations
	if 'trn.pcfd3 quit
	set MMDA=trn.pcfd3
	set TEFD=ttx.efd                   
	do INI(.dep,.TEFD)
	do FILE(.dep,TEFD)
	quit

FILE(RecordDEP dep,TEFD) // File data, Tracks Reg D transactions

	// In current period
	if (TEFD>PJD)!((TEFD=PJD)&(dep.odt=TEFD)) do {
		// Third party check - NO
		if MMDA=1 set dep.mmda2=dep.mmda2+1

		// Third party check -  YES
		if MMDA=2 do {
			set dep.mmda1=dep.mmda1+1
			set dep.mmda2=dep.mmda2+1
			}
		}

	else  do {
		// Back dated transaction
		for PRIORP=1:1:12 do { quit:(ER)!(PRIORP=0) 
			if TEFD<PJD do { quit:ER
				set PJD=$$NJD^UFRE(PJD,"-"_FRE) quit:ER
				}
			else  do {
				do BCKDAT(.dep,PRIORP)
				set PRIORP=0
				}
			}
		}
	// Third Party Checks
	if dep.mmda1>3 set OVR(CID,"OVR","MMDA")="" quit	

	// Limited Transactions
	if dep.mmda2>6 set OVR(CID,"OVR","MMDA")=""		
	quit 
	
public EC(RecordDEP dep,RecordTTX ttx,RecordTRN trn) // Error correction

	new FRE,LJD,MMDA,NJD,PCF,TEFD
	set TEFD=ttx.efd
	do INI(.dep,.TEFD)
	
	// Check to see if reversal or error correct
	if 'ttx.itc12,'ttx.itc6 quit 
	
	// Consider MMDA Limitations
	set PCF=trn.pcf
	set MMDA=$E(PCF,3)

	// Unlimited trans-do not consider MMDA limitations
	if 'MMDA quit                     
	
	//Reversal or Error Correct in current period
	if (TEFD>PJD)!((TEFD=PJD)&(dep.odt=TEFD)) do CURPER(.dep) quit
	
	for PRIORP=1:1:12 do { quit:ER  quit:PRIORP=0
		if TEFD<PJD do { quit:ER
			set PJD=$$NJD^UFRE(PJD,"-"_FRE) quit:ER
			}
		else  do {
			do ADJPER(.dep,PRIORP)
			set PRIORP=0
			}
		}

	quit 
	
ADJPER(RecordDEP dep,PRIORP)	// Reversal in prior period adjust totals	
	if MMDA=1 do DECMMDAT(.dep,PRIORP)
	if MMDA=2 do {
		do DECMMDAC(.dep,PRIORP)
		do DECMMDAT(.dep,PRIORP)
		}
	set PRIORP=0
	quit


DECMMDAT(RecordDEP dep,PRIORP)  // Decrement Limited transactions

	if PRIORP=1 set dep.mmdat1=dep.mmdat1-1 quit
	if PRIORP=2 set dep.mmdat2=dep.mmdat2-1 quit
	if PRIORP=3 set dep.mmdat3=dep.mmdat3-1 quit
	if PRIORP=4 set dep.mmdat4=dep.mmdat4-1 quit
	if PRIORP=5 set dep.mmdat5=dep.mmdat5-1 quit
	if PRIORP=6 set dep.mmdat6=dep.mmdat6-1 quit
	if PRIORP=7 set dep.mmdat7=dep.mmdat7-1 quit
	if PRIORP=8 set dep.mmdat8=dep.mmdat8-1 quit
	if PRIORP=9 set dep.mmdat9=dep.mmdat9-1 quit
	if PRIORP=10 set dep.mmdat10=dep.mmdat10-1 quit
	if PRIORP=11 set dep.mmdat11=dep.mmdat11-1 quit
	if PRIORP=12 set dep.mmdat12=dep.mmdat12-1
	quit


DECMMDAC(RecordDEP dep,PRIORP)  // Decrement thrid party checks

	if PRIORP=1 set dep.mmdac1=dep.mmdac1-1 quit
	if PRIORP=2 set dep.mmdac2=dep.mmdac2-1 quit
	if PRIORP=3 set dep.mmdac3=dep.mmdac3-1 quit
	if PRIORP=4 set dep.mmdac4=dep.mmdac4-1 quit
	if PRIORP=5 set dep.mmdac5=dep.mmdac5-1 quit
	if PRIORP=6 set dep.mmdac6=dep.mmdac6-1 quit
	if PRIORP=7 set dep.mmdac7=dep.mmdac7-1 quit
	if PRIORP=8 set dep.mmdac8=dep.mmdac8-1 quit
	if PRIORP=9 set dep.mmdac9=dep.mmdac9-1 quit
	if PRIORP=10 set dep.mmdac10=dep.mmdac10-1 quit
	if PRIORP=11 set dep.mmdac11=dep.mmdac11-1 quit
	if PRIORP=12 set dep.mmdac12=dep.mmdac12-1
	quit
	


CURPER(RecordDEP dep)	// Reversal in Current period adjust totals

	// Third party check
	if MMDA=1 if dep.mmda2 set dep.mmda2=dep.mmda2-1

	if MMDA=2 do {
		if dep.mmda1 set dep.mmda1=dep.mmda1-1
		if dep.mmda2 set dep.mmda2=dep.mmda2-1
		}
	quit 

BCKDAT(RecordDEP dep,PRIORP)	// Prior period backdated transaction - adjust totals.

	if MMDA=1 do INCMMDAT(.dep,PRIORP)
        if MMDA=2 do {
                do INCMMDAC(.dep,PRIORP)
                do INCMMDAT(.dep,PRIORP)
                }
	set PRIORP=0
        quit

INCMMDAT(RecordDEP dep,PRIORP)  // Increment Limited transactions
 
        if PRIORP=1 set dep.mmdat1=dep.mmdat1+1 quit
        if PRIORP=2 set dep.mmdat2=dep.mmdat2+1 quit
        if PRIORP=3 set dep.mmdat3=dep.mmdat3+1 quit
        if PRIORP=4 set dep.mmdat4=dep.mmdat4+1 quit
        if PRIORP=5 set dep.mmdat5=dep.mmdat5+1 quit
        if PRIORP=6 set dep.mmdat6=dep.mmdat6+1 quit
        if PRIORP=7 set dep.mmdat7=dep.mmdat7+1 quit
        if PRIORP=8 set dep.mmdat8=dep.mmdat8+1 quit
        if PRIORP=9 set dep.mmdat9=dep.mmdat9+1 quit
        if PRIORP=10 set dep.mmdat10=dep.mmdat10+1 quit
        if PRIORP=11 set dep.mmdat11=dep.mmdat11+1 quit
        if PRIORP=12 set dep.mmdat12=dep.mmdat12+1
        quit
 
 
INCMMDAC(RecordDEP dep,PRIORP)  // Increment thrid party checks
 
        if PRIORP=1 set dep.mmdac1=dep.mmdac1+1 quit
        if PRIORP=2 set dep.mmdac2=dep.mmdac2+1 quit
        if PRIORP=3 set dep.mmdac3=dep.mmdac3+1 quit
        if PRIORP=4 set dep.mmdac4=dep.mmdac4+1 quit
        if PRIORP=5 set dep.mmdac5=dep.mmdac5+1 quit
        if PRIORP=6 set dep.mmdac6=dep.mmdac6+1 quit
        if PRIORP=7 set dep.mmdac7=dep.mmdac7+1 quit
        if PRIORP=8 set dep.mmdac8=dep.mmdac8+1 quit
        if PRIORP=9 set dep.mmdac9=dep.mmdac9+1 quit
        if PRIORP=10 set dep.mmdac10=dep.mmdac10+1 quit
        if PRIORP=11 set dep.mmdac11=dep.mmdac11+1 quit
        if PRIORP=12 set dep.mmdac12=dep.mmdac12+1
        quit
 
 	
INI(RecordDEP dep,TEFD) // Initialize MMDA data
	//  Frequency
	set FRE=dep.mmda4
	// Next MMDA cycle date
	set NJD=dep.mmda3                      

	if FRE="" do FRES(.dep)
	if TEFD="" set TEFD=%SystemDate
	if NJD="" do ENDDT(.dep)
	set PJD=$$NJD^UFRE(NJD,"-"_FRE) quit:ER 
	quit 
	
FRES(RecordDEP dep)
	/*
	If no MMDA frequency, set the FRE = the statement
	frequency on the primary CIF
	*/
	new ZACN,ZGRP

	set ZACN=dep.acn

	type RecordCMBCID cmbcid=Db.getRecord("CMBCID","CID,ZACN")

	set ZGRP=cmbcid.stmgrp

	type RecordCMBGRP cmbgrp=Db.getRecord("CMBGRP","ZACN,ZGRP")

	// MMDA Cycle Frequency
	set dep.mmda4=cmbgrp.sfre

	quit

ENDDT(RecordDEP	dep) // 
	// Set a MMDA enddate and set NJD as end date.
 
	set FRQDT=dep.odt	
	for  set FRQDT=$$NJD^UFRE(FRQDT,FRE) quit:(FRQDT>%SystemDate)!(FRQDT=%SystemDate)!(ER) 
	set NJD=FRQDT

	// MMDA Cycle Date
	set dep.mmda3=FRQDT	

	quit 

vSIG()	quit "60607^25799^Hema Puttaswamy^6851"	// Signature - LTD^TIME^USER^SIZE
