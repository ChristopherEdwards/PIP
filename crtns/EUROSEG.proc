EUROSEG		/*
	ORIG: SCHWARTZC - 01/08/2001
	DESC: Segmented Account Euro Conversion

	---- Comments --------------------------------------------------------
	This procedure converts "IN" currency segmented accounts to Euro.  

	Values in STBLEUROSEG are converted using a verification/correction 
	process based on dep.iaf and dep.segacr.  Each verification/correction
	process keeps the account level values equal to the sum of the
	equivalent segment level values.  

	If any errors occur during processing, the error is filed to the
	DAYEND exception file (DAYENDEXC) and the account is not converted.

	---- Revision History ------------------------------------------------
	
	10/17/05 - KumarSS - CR 16667
		   Modified EXEC,SEGMENT and INIT sections to remove the usage of
		   %A array. Also added CID as parameter to INIT section.
		   Modified EXEC section to pass CID to INIT section.

	05/24/05 - RussellDS - CR16071
		   Converted M TP commands to PSL Runtime methods.
		   
		   Removed old revision history.
	*/

	quit


	//----------------------------------------------------------------------
public EXEC(Number CID,			// Account Number
            String SEGMENT)		// Segments
	//----------------------------------------------------------------------
	/*
	External entry point.
	
	ARGUMENTS:
	     .CID	Account number		/TYP=N/REQ/MECH=VAL
	     .SEGMENT	Segments		/TYP=T/REQ/MECH=REFARR:RW
	*/

	type public Boolean ER
	type public String RM

	type Number iaf,segacr,zeroseg,DIFF,MATAACR,MATAIB,MATBAL,MATPACR,NMATAACR,NMATAIB,NMATBAL,NMATPACR

	type RecordDEP dep=Db.getRecord("DEP","CID")

	set iaf=+dep.iaf
	set segacr=+dep.segacr
	if iaf=1 set ER=1,RM=$$^MSG(4883) do EXC quit

	do INIT(CID,.SEGMENT())
	
	if iaf=0,segacr=0 do CNVVER00(.dep) quit:ER
	if iaf=0,segacr=1 do CNVVER01(.dep) quit:ER
	if iaf=2,segacr=0 do CNVVER20(.dep) quit:ER
	if iaf=2,segacr=1 do CNVVER21(.dep) quit:ER

	set DIFF=dep.bal-(MATBAL+NMATBAL)

	if DIFF do {
		set zeroseg=0
		if dep.rencd=0 set zeroseg=1
		do SEGMENT("BAL",DIFF,zeroseg)
		}

	do dep.bypassSave()
        quit


	//----------------------------------------------------------------------
CNVVER20(RecordDEP dep)	//Verify/Correction for iaf=2 and segacr=0
	//----------------------------------------------------------------------

	do DIFFBAL(.dep)

	set DIFF=dep.intavlncr-(MATAIB+NMATAIB)

	if DIFF do {
		set zeroseg=0
		if dep.imo=0 set zeroseg=1
		do SEGMENT("AIBAL",DIFF,zeroseg)
		}

	if $G(LOGFILE)'="" do {
		U LOGFILE
		W !,$C(9,9,9),"DEP",$C(9),1
		W !,$C(9,9,9,9,9,9),"TSMPB",$C(9),dep.tsmpb,$C(9),MATBAL
		W !,$C(9,9,9,9,9,9),"TAIMS",$C(9),dep.taims,$C(9),MATAIB
		W !,$C(9,9,9,9,9,9),"TASPM",$C(9),dep.taspm,$C(9),MATPACR
		W !,$C(9,9,9,9,9,9),"TAIAMS",$C(9),dep.taiams,$C(9),MATAACR
		W !,$C(9,9,9,9,9,9),"TSNMPB",$C(9),dep.tsnmpb,$C(9),NMATBAL
		W !,$C(9,9,9,9,9,9),"TAINMS",$C(9),dep.tainms,$C(9),NMATAIB
		W !,$C(9,9,9,9,9,9),"TASPNM",$C(9),dep.taspnm,$C(9),NMATPACR
		W !,$C(9,9,9,9,9,9),"TAIANMS",$C(9),dep.taianms,$C(9),NMATAACR
		W !,$C(9,9,9,9,9,9),"AIACR",$C(9),dep.aiacr,$C(9),MATAACR+NMATAACR
		W !,$C(9,9,9,9,9,9),"POSACR",$C(9),dep.posacr,$C(9),MATPACR+NMATPACR
		U 0
		}

	set dep.tsmpb=MATBAL
	set dep.taims=MATAIB
	set dep.taspm=MATPACR
	set dep.taiams=MATAACR
	set dep.tsnmpb=NMATBAL
	set dep.tainms=NMATAIB
	set dep.taspnm=NMATPACR
	set dep.taianms=NMATAACR

	set DIFF=dep.posacr-(MATPACR+NMATPACR)
	set dep.posacr=dep.posacr+DIFF
	do RND(DIFF,2)

	set DIFF=dep.aiacr-(MATAACR+NMATAACR)
	set dep.aiacr=dep.aiacr+DIFF
	do RND(DIFF,3)

        quit
 

	//----------------------------------------------------------------------
CNVVER21(RecordDEP dep)	//Verify/Correction for iaf=2 and segacr=1
	//----------------------------------------------------------------------
	
	do DIFFBAL(.dep)

	set DIFF=dep.intavlncr-(dep.taims+dep.tainms)

	if $G(LOGFILE)'="" do {
		U LOGFILE
		W !,$C(9,9,9),"DEP",$C(9),1
		W !,$C(9,9,9,9,9,9),"TSMPB",$C(9),dep.tsmpb,$C(9),MATBAL
		W !,$C(9,9,9,9,9,9),"TSNMPB",$C(9),dep.tsnmpb,$C(9),NMATBAL
		W !,$C(9,9,9,9,9,9),"TAINMS",$C(9),dep.tainms,$C(9),dep.tainms+DIFF
		W !,$C(9,9,9,9,9,9),"POSACR",$C(9),dep.posacr,$C(9),dep.taspm+dep.taspnm
		W !,$C(9,9,9,9,9,9),"AIACR",$C(9),dep.aiacr,$C(9),dep.taiams+dep.taianms
		U 0
		}

	set dep.tsmpb=MATBAL
	set dep.tsnmpb=NMATBAL
	set dep.tainms=dep.tainms+DIFF

	set DIFF=dep.posacr-(dep.taspm+dep.taspnm)
	set dep.posacr=dep.posacr+DIFF
	do RND(DIFF,2)

	set DIFF=dep.aiacr-(dep.taiams+dep.taianms)
	set dep.aiacr=dep.aiacr+DIFF
	do RND(DIFF,3)

        quit


	//----------------------------------------------------------------------
CNVVER00(RecordDEP dep)	//Verify/Correction for iaf=0,segacr=0
	//----------------------------------------------------------------------

	if $G(LOGFILE)'="" do {
		U LOGFILE
		W !,$C(9,9,9),"DEP",$C(9),1
		W !,$C(9,9,9,9,9,9),"TSMPB",$C(9),dep.tsmpb,$C(9),MATBAL
		W !,$C(9,9,9,9,9,9),"TSNMPB",$C(9),dep.tsnmpb,$C(9),NMATBAL
		W !,$C(9,9,9,9,9,9),"TASPM",$C(9),dep.taspm,$C(9),MATPACR
		W !,$C(9,9,9,9,9,9),"TASPNM",$C(9),dep.taspnm,$C(9),NMATPACR
		W !,$C(9,9,9,9,9,9),"POSACR",$C(9),dep.posacr,$C(9),MATPACR+NMATPACR
		W !,$C(9,9,9,9,9,9),"AIACR",$C(9),dep.aiacr,$C(9),dep.taiams+dep.taianms
		U 0
		}

	set dep.tsmpb=MATBAL
	set dep.tsnmpb=NMATBAL
	set dep.taspm=MATPACR
	set dep.taspnm=NMATPACR

	set DIFF=dep.posacr-(MATPACR+NMATPACR)
	set dep.posacr=dep.posacr+DIFF
	do RND(DIFF,2)

	set DIFF=dep.aiacr-(dep.taiams+dep.taianms)
	set dep.aiacr=dep.aiacr+DIFF
	do RND(DIFF,3)

        quit


	//----------------------------------------------------------------------
CNVVER01(RecordDEP dep)	//Verify/Correction for iaf=0,segacr=1
	//----------------------------------------------------------------------

	// Prevent conversion if interest is to remain on the account.
	if dep.iopt=0 set ER=1,RM=$$^MSG(4883) do EXC quit

	if $G(LOGFILE)'="" do {
		U LOGFILE
		W !,$C(9,9,9),"DEP",$C(9),1
		W !,$C(9,9,9,9,9,9),"TSMPB",$C(9),dep.tsmpb,$C(9),MATBAL
		W !,$C(9,9,9,9,9,9),"TSNMPB",$C(9),dep.tsnmpb,$C(9),NMATBAL
		W !,$C(9,9,9,9,9,9),"POSACR",$C(9),dep.posacr,$C(9),dep.taspm+dep.taspnm
		W !,$C(9,9,9,9,9,9),"AIACR",$C(9),dep.aiacr,$C(9),dep.taiams+dep.taianms
		U 0
		}

	set dep.tsmpb=MATBAL
	set dep.tsnmpb=NMATBAL

	set DIFF=dep.posacr-(dep.taspm+dep.taspnm)
	set dep.posacr=dep.posacr+DIFF
	do RND(DIFF,2)

	set DIFF=dep.aiacr-(dep.taiams+dep.taianms)
	set dep.aiacr=dep.aiacr+DIFF
	do RND(DIFF,3)

        quit


	//---------------------------------------------------------------------
DIFFBAL(RecordDEP dep)	// Adjust balance to reflect rounding differences
	//---------------------------------------------------------------------

	set data=oldval("BAL")+oldval("INTAVLNCR")
	do CONVERT^EUROCNV("DEP","BAL","",.data,1,2)

	set DIFF=data-(dep.bal+dep.intavlncr) if 'DIFF quit
	set dep.bal=dep.bal+DIFF
	do RND(DIFF,1)

	set zeroseg=0
	if dep.imo=0 set zeroseg=1
	do SEGMENT("BAL",DIFF,zeroseg)

	quit


	//---------------------------------------------------------------------
RND(DIFF,POS)	//Rounding differences
	//---------------------------------------------------------------------

	type RecordEUROCNVRND eurornd=Db.getRecord("EUROCNVRND","EFFDATE=:EUREFD,PID=:%ProcessID,CC=:CC,TYPE=:TYPE,GLSC=:GLSC",1)
	if POS=1 set eurornd.rndbal=eurornd.rndbal+DIFF
	else  if POS=2 set eurornd.rndposacr=eurornd.rndposacr+DIFF
	else  if POS=3 set eurornd.rndaiacr=eurorndaiacr+DIFF
	do eurornd.bypassSave()

	quit


	//---------------------------------------------------------------------
SEGMENT(String ID,			// Balance Identifier
        Number DIFF,			// Balance Difference
        String SEG0)			// Allocate to SEGMENT 0
	//---------------------------------------------------------------------

	/*
	Update segment.

	ARGUMENTS:
	     .ID	Balance identifier		/TYP=T/REQ/MECH=VAL

			BAL	Segment ledger balance
			AIBAL	Segment available interest balance

	     .DIFF	Balance difference		/TYP=$/REQ/MECH=VAL
	     .SEG0	Allocate to SEGMENT 0		/TYP=L/REQ/MECH=VAL
	*/

	type public Number CID
	type public String LOGFILE,MATAIB,MATBAL,NMATAIB,NMATBAL,SEGMENT()
	type Number bal,done,SEGMNT
	type String SEGSTART

	set done=0
	set SEGMNT=0
	set SEGSTART=""

	if 'SEG0 do {

		for  set SEGSTART=SEGMENT(SEGSTART).order() quit:SEGSTART=""!done  do {

			for  set SEGMNT=SEGMENT(SEGSTART,SEGMNT).order() quit:SEGMNT=""!done  do {

				type RecordDEPSEG depseg=Db.getRecord("DEPSEG","CID=:CID,SEGMENT=:SEGMNT")

				if ID="BAL" set bal=depseg.bal
				else  set bal=depseg.aibal

				if bal<DIFF quit

				kill depseg
				set done=1
				}
			}
		}

	if ID="BAL" do {

		if done set NMATBAL=NMATBAL+DIFF

		else  do {

			set SEGMNT=0
			set MATBAL=MATBAL+DIFF

			type RecordDEPSEG depseg=Db.getRecord("DEPSEG","CID=:CID,SEGMENT=:SEGMNT")

			set bal=depseg.bal

			kill depseg
			}

		type RecordDEPSEG depseg=Db.getRecord("DEPSEG","CID=:CID,SEGMENT=:SEGMNT")

		set depseg.bal=bal+DIFF
		
		kill depseg
		}
	else  do {

		if done set NMATAIB=NMATAIB+DIFF

		else  do {
			set SEGMNT=0
			set MATAIB=MATAIB+DIFF

			type RecordDEPSEG depseg=Db.getRecord("DEPSEG","CID=:CID,SEGMENT=:SEGMNT")

			set bal=depseg.aibal

			kill depseg
			}

		type RecordDEPSEG depseg=Db.getRecord("DEPSEG","CID=:CID,SEGMENT=:SEGMNT")

		set depseg.aibal=bal+DIFF
		
		kill depseg
		}

	if LOGFILE.get()'="" do {
		U LOGFILE
		W !,$C(9,9,9),"DEPSEG",$C(9),1,$C(9),"SEGMENT=",SEGMNT
		W !,$C(9,9,9,9,9,9),ID,$C(9),bal,$C(9),bal+DIFF
		U 0
		}

	quit


	//---------------------------------------------------------------------
INIT(Number CID,			// Account Number
     String SEGMENT)			// Segments
	//---------------------------------------------------------------------

	// Initialization

	type public Number MATAACR,MATAIB,MATBAL,MATPACR,NMATAACR,NMATAIB,NMATBAL,NMATPACR

	type Number SEGMNT
	type String SEGSTART
	
	set MATBAL=0
	set NMATBAL=0

	set MATAACR=0
	set NMATAACR=0

	set MATPACR=0
	set NMATPACR=0

	set MATAIB=0
	set NMATAIB=0

	set SEGSTART=""
	set SEGMNT=0

	for  set SEGSTART=SEGMENT(SEGSTART).order() quit:SEGSTART=""  do {

		for  set SEGMNT=SEGMENT(SEGSTART,SEGMNT).order() quit:SEGMNT=""  do {

			type RecordDEPSEG depseg=Db.getRecord("DEPSEG","CID=:CID,SEGMENT=:SEGMNT")

			if SEGMNT=0 do {

				set MATBAL=depseg.bal
				set MATPACR=depseg.posacr

				set MATAIB=depseg.aibal
				set MATAACR=depseg.aiacr
				}
			else  do {

				set NMATBAL=NMATBAL+depseg.bal
				set NMATPACR=NMATPACR+depseg.posacr

				set NMATAIB=NMATAIB+depseg.aibal
				set NMATAACR=NMATAACR+depseg.aiacr
				}

			kill depseg
			}
		}
	quit


	//---------------------------------------------------------------------
EXC	//Log exception
	//---------------------------------------------------------------------

	if $tlevel do Runtime.rollback()
	if RM="" set RM=$$^MSG("3511")

	do LOG^UTLEXC($T(+0),"*","",$G(CID),$G(%ZTSEQ),$G(RM)))

	set ET=""
	set RM=""
	set ER=0
		
	do Db.update("DEP","EURSTAT=7","CID=:CID")

	quit

vSIG()	quit "60248^41164^Sudanthiran S. Kumar^10467"	// Signature - LTD^TIME^USER^SIZE
