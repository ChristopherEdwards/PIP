APPMGMTF(RecordAPPMGMT appmgmt, String vpar, Boolean vparNorm) // APPMGMT - Application Management Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:13 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (17)             06/18/2007
	// Trigger Definition (1)                      03/20/2007
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = appmgmt.getMode()                     // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(appmgmt,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(appmgmt,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String APPID = appmgmt.appid

	if %O = 0 do { quit                                    // Create record control block
		do vinit                                              // Initialize column values
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("APPID").exists() do vkchged quit               // Primary key changed
		if vpar["/TRIGBEF/" do VBU                            // Before update triggers
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("APPMGMT",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("APPMGMT","APPID = :appmgmt.appid") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String APPID

	type RecordAPPMGMT appmgmt = Db.getRecord("APPMGMT","APPID=:APPID")
	if (%ProcessMode = 2) do {
		do appmgmt.setMode(2)

		do APPMGMTF(appmgmt,vpar)
	}
	else  do VINDEX(appmgmt)

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordAPPMGMT appmgmt

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("APPMGMT","APPID = :appmgmt.appid") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(appmgmt)) S ^APPMGMT(vobj(appmgmt,-3))=vobj(appmgmt)
		#ENDBYPASS
	}

	if vpar["/INDEX/",'(%O = 1)!'vx("").order().isNull() do VINDEX(.appmgmt) // Update Index files

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordAPPMGMT appmgmt

	if vpar["/CASDEL/" do VCASDEL                          // Cascade delete
	if vpar["/INDEX/" do VINDEX(.appmgmt)                  // Delete index entries

	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^APPMGMT(vobj(appmgmt,-3))
	#ENDBYPASS
	quit


vinit // Initialize default values

	type public RecordAPPMGMT appmgmt

	// Type local variables for access keys for defaults
	type public String APPID

	if appmgmt.archived.isNull() set appmgmt.archived = 0  // archived
	if appmgmt.crdate.isNull() set appmgmt.crdate = +$H    // crdate
	if appmgmt.crtime.isNull() set appmgmt.crtime = $P($H,",",2) // crtime
	type public String %UID
	if appmgmt.cruser.isNull() set appmgmt.cruser = %UID   // cruser
	if appmgmt.locked.isNull() set appmgmt.locked = 0      // locked
	if appmgmt.ltd.isNull() set appmgmt.ltd = +$H          // ltd
	if appmgmt.ltt.isNull() set appmgmt.ltt = $P($H,",",2) // ltt
	type public String %UID
	if appmgmt.ltu.isNull() set appmgmt.ltu = %UID         // ltu
	quit


vreqn // Validate required data items

	type public RecordAPPMGMT appmgmt

	if appmgmt.archived.isNull() do vreqerr("ARCHIVED") quit
	if appmgmt.locked.isNull() do vreqerr("LOCKED") quit
	if appmgmt.taxid.isNull() do vreqerr("TAXID") quit
	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordAPPMGMT appmgmt

	if appmgmt.appid.isNull() do vreqerr("APPID") quit

		if vx("ARCHIVED").exists(),appmgmt.archived.isNull() do vreqerr("ARCHIVED") quit
		if vx("LOCKED").exists(),appmgmt.locked.isNull() do vreqerr("LOCKED") quit
		if vx("TAXID").exists(),appmgmt.taxid.isNull() do vreqerr("TAXID") quit
	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("APPMGMT","MSG",1767,"APPMGMT."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VBU //
	type public Number ER = 0
	type public String vx(),RM
	type public RecordAPPMGMT appmgmt
	do vbu1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	do AUDIT^UCUTILN(appmgmt,.vx(),1,"|")
	quit


vbu1 // Trigger BEFORE_UPDATE - Before Update for APPMGMT

	type public RecordAPPMGMT appmgmt
	do appmgmt.setAuditFlag(1)
	/*
	 ----------Revision History------------------------------------
	 
	 03/20/07 - MbuiM - CR26011
	 	    Modified trigger to remove column list under “A list of 
	 	    column names associated with the UPDATE action” on the
	 	    control page.
	 	    
	 08/20/06 - chhabris - CR22504
	 	    Retrofit from P01DEV1 view under the below mentioned
	 	    CR.
	 
		  03/28/06 - Ed Sigda - CR 20274
		    Added trigger to update audit information. Trigger
		    used instead of table definition audit fields since
		    the current date is required, and to restrict updates
		    to archived applications.

									--------------------------------------------------------------
	*/

	// Updates to archived applications are restricted
	if appmgmt.archived.oldVal do Runtime.setErrMSG("APPMGMT","5676") quit

	// Last Updated User
	set appmgmt.ltu=%UserID
	
	// Last Updated Date
	set appmgmt.ltd=%CurrentDate

	// Last Updated Time
	set appmgmt.ltt=%CurrentTime
  	quit


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordAPPMGMT appmgmt

	set X = appmgmt.appid if 'X.isNull(),X'?1.22N,X'?1"-"1.21N set vRM=$$^MSG(742,"N") do vdderr("APPID", vRM) quit
	set X = appmgmt.aomcode if 'X.isNull(),'Db.isDefined("STBLCINTMET","X") set vRM = $$^MSG(1485,X) do vdderr("AOMCODE", vRM) quit
	if '("01"[appmgmt.ARCHIVED) set vRM=$$^MSG(742,"L") do vdderr("ARCHIVED", vRM) quit
	set X = appmgmt.boo if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("BOO", vRM) quit
	set X = appmgmt.crdate if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("CRDATE", vRM) quit
	set X = appmgmt.crtime if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"C") do vdderr("CRTIME", vRM) quit
	set X = appmgmt.cruser if 'X.isNull(),'Db.isDefined("SCAU","X") set vRM = $$^MSG(1485,X) do vdderr("CRUSER", vRM) quit
	if appmgmt.ip.length()>24 set vRM = $$^MSG(1076,24) do vdderr("IP", vRM) quit
	if '("01"[appmgmt.LOCKED) set vRM=$$^MSG(742,"L") do vdderr("LOCKED", vRM) quit
	set X = appmgmt.ltd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("LTD", vRM) quit
	set X = appmgmt.ltt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"C") do vdderr("LTT", vRM) quit
	if appmgmt.ltu.length()>20 set vRM = $$^MSG(1076,20) do vdderr("LTU", vRM) quit
	set X = appmgmt.mapprsn if 'X.isNull(),'Db.isDefined("UTBLMAPPRSN","X") set vRM = $$^MSG(1485,X) do vdderr("MAPPRSN", vRM) quit
	if appmgmt.plnm.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PLNM", vRM) quit
	if appmgmt.pnam.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PNAM", vRM) quit
	set X = appmgmt.status if 'X.isNull(),'Db.isDefined("STBLAPPSTAT","X") set vRM = $$^MSG(1485,X) do vdderr("STATUS", vRM) quit
	if appmgmt.taxid.length()>20 set vRM = $$^MSG(1076,20) do vdderr("TAXID", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("APPMGMT","MSG",979,"APPMGMT."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


public VINDEX(RecordAPPMGMT appmgmt) // Update index entries

		type Public String vx()

	if %ProcessMode=1 do { quit
		type String vf,vi,viMap,vxn
		set viMap=",AOMCODE,~1~|,AOMCODE,CRDATE,CRTIME,~2~|,CRDATE,CRTIME,~3~|,LTU,CRDATE,CRTIME,~4~|,PLNM,CRDATE,CRTIME,~5~|,STATUS,CRDATE,CRTIME,~6~|,LTU,~7~|,LTU,STATUS,~8~|,PLNM,~9~|,STATUS,~10~|,TAXID,CRDATE,~11~|"
		set vf=0
		set vxn=""
		for  set vxn=vx(vxn).order() quit:vxn=""  do {
			for  set vf=$F(viMap,(","_vxn_","),vf) quit:vf=0  do {
				set vi=viMap.extract(vf,999).piece("~",2)
				set viMap.piece("|",vi)=""
				do @("vi"_vi_"(.appmgmt)")
			}
		}
	}
	do vi1(.appmgmt)
	do vi2(.appmgmt)
	do vi3(.appmgmt)
	do vi4(.appmgmt)
	do vi5(.appmgmt)
	do vi6(.appmgmt)
	do vi7(.appmgmt)
	do vi8(.appmgmt)
	do vi9(.appmgmt)
	do vi10(.appmgmt)
	do vi11(.appmgmt)

	quit
	

vi1(RecordAPPMGMT appmgmt) // Maintain AOMCODE index entries (Account Origination Method Co)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.aomcode
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("AOMCODE",v2,v3)) do vidxerr("AOMCODE")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("AOMCODE",v2,v3)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("AOMCODE").exists() set v2=vx("AOMCODE").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("AOMCODE",v2,v3)
	#ENDBYPASS
	quit

vi2(RecordAPPMGMT appmgmt) // Maintain CRAOMCODE index entries (Order by Orig Method, CR Date)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.aomcode
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.crdate
	if v3.isNull() set v3=(PSL.maxCharValue-1).char()
	type String v4 = appmgmt.crtime
	if v4.isNull() set v4=(PSL.maxCharValue-1).char()
	type String v5 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("CRAOMCODE",v2,v3,v4,v5)) do vidxerr("CRAOMCODE")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("CRAOMCODE",v2,v3,v4,v5)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("AOMCODE").exists() set v2=vx("AOMCODE").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()
	if vx("CRDATE").exists() set v3=vx("CRDATE").piece("|",1) set:v3.isNull() v3=(PSL.maxCharValue-1).char()
	if vx("CRTIME").exists() set v4=vx("CRTIME").piece("|",1) set:v4.isNull() v4=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("CRAOMCODE",v2,v3,v4,v5)
	#ENDBYPASS
	quit

vi3(RecordAPPMGMT appmgmt) // Maintain CRDATE index entries (Original Creation Date)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.crdate
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.crtime
	if v3.isNull() set v3=(PSL.maxCharValue-1).char()
	type String v4 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("CRDATE",v2,v3,v4)) do vidxerr("CRDATE")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("CRDATE",v2,v3,v4)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("CRDATE").exists() set v2=vx("CRDATE").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()
	if vx("CRTIME").exists() set v3=vx("CRTIME").piece("|",1) set:v3.isNull() v3=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("CRDATE",v2,v3,v4)
	#ENDBYPASS
	quit

vi4(RecordAPPMGMT appmgmt) // Maintain CRLTU index entries (Order By Last User,CreationDt)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.ltu
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.crdate
	if v3.isNull() set v3=(PSL.maxCharValue-1).char()
	type String v4 = appmgmt.crtime
	if v4.isNull() set v4=(PSL.maxCharValue-1).char()
	type String v5 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("CRLTU",v2,v3,v4,v5)) do vidxerr("CRLTU")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("CRLTU",v2,v3,v4,v5)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("LTU").exists() set v2=vx("LTU").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()
	if vx("CRDATE").exists() set v3=vx("CRDATE").piece("|",1) set:v3.isNull() v3=(PSL.maxCharValue-1).char()
	if vx("CRTIME").exists() set v4=vx("CRTIME").piece("|",1) set:v4.isNull() v4=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("CRLTU",v2,v3,v4,v5)
	#ENDBYPASS
	quit

vi5(RecordAPPMGMT appmgmt) // Maintain CRPLNM index entries (Order By Last Name,CreationDt)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.plnm
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.crdate
	if v3.isNull() set v3=(PSL.maxCharValue-1).char()
	type String v4 = appmgmt.crtime
	if v4.isNull() set v4=(PSL.maxCharValue-1).char()
	type String v5 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("CRLNM",v2,v3,v4,v5)) do vidxerr("CRPLNM")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("CRLNM",v2,v3,v4,v5)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("PLNM").exists() set v2=vx("PLNM").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()
	if vx("CRDATE").exists() set v3=vx("CRDATE").piece("|",1) set:v3.isNull() v3=(PSL.maxCharValue-1).char()
	if vx("CRTIME").exists() set v4=vx("CRTIME").piece("|",1) set:v4.isNull() v4=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("CRLNM",v2,v3,v4,v5)
	#ENDBYPASS
	quit

vi6(RecordAPPMGMT appmgmt) // Maintain CRTIME index entries (Original Creation Time)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.status
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.crdate
	if v3.isNull() set v3=(PSL.maxCharValue-1).char()
	type String v4 = appmgmt.crtime
	if v4.isNull() set v4=(PSL.maxCharValue-1).char()
	type String v5 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("CRSTAT",v2,v3,v4,v5)) do vidxerr("CRTIME")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("CRSTAT",v2,v3,v4,v5)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("STATUS").exists() set v2=vx("STATUS").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()
	if vx("CRDATE").exists() set v3=vx("CRDATE").piece("|",1) set:v3.isNull() v3=(PSL.maxCharValue-1).char()
	if vx("CRTIME").exists() set v4=vx("CRTIME").piece("|",1) set:v4.isNull() v4=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("CRSTAT",v2,v3,v4,v5)
	#ENDBYPASS
	quit

vi7(RecordAPPMGMT appmgmt) // Maintain LTU index entries (Last Update User)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.ltu
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("LTU",v2,v3)) do vidxerr("LTU")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("LTU",v2,v3)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("LTU").exists() set v2=vx("LTU").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("LTU",v2,v3)
	#ENDBYPASS
	quit

vi8(RecordAPPMGMT appmgmt) // Maintain LTUSTAT index entries (Order By Last User and Status)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.ltu
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.status
	if v3.isNull() set v3=(PSL.maxCharValue-1).char()
	type String v4 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("LTUSTAT",v2,v3,v4)) do vidxerr("LTUSTAT")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("LTUSTAT",v2,v3,v4)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("LTU").exists() set v2=vx("LTU").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()
	if vx("STATUS").exists() set v3=vx("STATUS").piece("|",1) set:v3.isNull() v3=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("LTUSTAT",v2,v3,v4)
	#ENDBYPASS
	quit

vi9(RecordAPPMGMT appmgmt) // Maintain PLNM index entries (Last Name of Primary Applican)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.plnm
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("PLNM",v2,v3)) do vidxerr("PLNM")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("PLNM",v2,v3)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("PLNM").exists() set v2=vx("PLNM").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("PLNM",v2,v3)
	#ENDBYPASS
	quit

vi10(RecordAPPMGMT appmgmt) // Maintain STATUS index entries (Application Status)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.status
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("STATUS",v2,v3)) do vidxerr("STATUS")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("STATUS",v2,v3)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("STATUS").exists() set v2=vx("STATUS").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("STATUS",v2,v3)
	#ENDBYPASS
	quit

vi11(RecordAPPMGMT appmgmt) // Maintain TAXCR index entries (Tax ID and Creation Date)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = appmgmt.taxid
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = appmgmt.crdate
	if v3.isNull() set v3=(PSL.maxCharValue-1).char()
	type String v4 = appmgmt.appid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^APPMGMT(vobj(appmgmt,-3)))#2,'$D(^XAPPMGMT("TAXCR",v2,v3,v4)) do vidxerr("TAXCR")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^XAPPMGMT("TAXCR",v2,v3,v4)="" 
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("TAXID").exists() set v2=vx("TAXID").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()
	if vx("CRDATE").exists() set v3=vx("CRDATE").piece("|",1) set:v3.isNull() v3=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^XAPPMGMT("TAXCR",v2,v3,v4)
	#ENDBYPASS
	quit

public VIDXBLD(List vlist) // Rebuild index files (External call)


	type Number %ProcessMode=0                             // Create mode
	type Number i

	if vlist.get().isNull() set vlist="VINDEX"             // Build all

	type DbSet ds=Db.selectDbSet("APPMGMT")

	while ds.next() do {
		type RecordAPPMGMT appmgmt=ds.getRecord("APPMGMT")
		if vlist.contains("VINDEX") do VINDEX(.appmgmt) quit
		if vlist.contains("AOMCODE") do vi1(.appmgmt)
		if vlist.contains("CRAOMCODE") do vi2(.appmgmt)
		if vlist.contains("CRDATE") do vi3(.appmgmt)
		if vlist.contains("CRLTU") do vi4(.appmgmt)
		if vlist.contains("CRPLNM") do vi5(.appmgmt)
		if vlist.contains("CRTIME") do vi6(.appmgmt)
		if vlist.contains("LTU") do vi7(.appmgmt)
		if vlist.contains("LTUSTAT") do vi8(.appmgmt)
		if vlist.contains("PLNM") do vi9(.appmgmt)
		if vlist.contains("STATUS") do vi10(.appmgmt)
		if vlist.contains("TAXCR") do vi11(.appmgmt)
	}

	quit


public VIDXBLD1(RecordAPPMGMT appmgmt, List vlist) // Rebuild index files for one record (External call)


	type Number i

	if vlist.contains("VINDEX") do VINDEX(.appmgmt) quit
	if vlist.contains("AOMCODE") do vi1(.appmgmt)
	if vlist.contains("CRAOMCODE") do vi2(.appmgmt)
	if vlist.contains("CRDATE") do vi3(.appmgmt)
	if vlist.contains("CRLTU") do vi4(.appmgmt)
	if vlist.contains("CRPLNM") do vi5(.appmgmt)
	if vlist.contains("CRTIME") do vi6(.appmgmt)
	if vlist.contains("LTU") do vi7(.appmgmt)
	if vlist.contains("LTUSTAT") do vi8(.appmgmt)
	if vlist.contains("PLNM") do vi9(.appmgmt)
	if vlist.contains("STATUS") do vi10(.appmgmt)
	if vlist.contains("TAXCR") do vi11(.appmgmt)

	quit


vidxerr(di) // Error message

	D SETERR^DBSEXECU("APPMGMT","MSG",1225,"APPMGMT."_di)

	quit


vkchged // Access key changed

	type public RecordAPPMGMT appmgmt

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	set vux = vx("APPID")
	set voldkey = vux.piece("|",1),vobj(appmgmt,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/TRIGBEF/" do VBU
	if vpar["/VALDD/" do vddver
	do vexec

	set vnewkey = vux.piece("|",2),vobj(appmgmt,-3) = vnewkey // Copy new keys into object
	type RecordAPPMGMT vnewrec = appmgmt.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("APPMGMT",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	set vobj(appmgmt,-3) = vux.piece("|",1)                // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

VCASDEL // Cascade delete logic

	type public RecordAPPMGMT appmgmt
	type public String vpar

	do Db.delete("APPMGMTCI","APPID=:appmgmt.appid",vpar)  // Cascade delete

	do Db.delete("APPMGMTDATA","APPID=:appmgmt.appid",vpar) // Cascade delete

	quit

VIDXPGM()	quit "APPMGMTF"	// Location of index program

