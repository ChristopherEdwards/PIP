V01S394(%ProcessMode,RecordPDAG fPDAG)   //PBS - LN - SID= <LNPDAG2> Payment Due Action Grid
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:58 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,PDAGDATA",VSID="LNPDAG2",VPGM=$T(+0),VSNAME="Payment Due Action Grid"
 set VFSN("PDAG")="zfPDAG"
 set vPSL=1
 set KEYS(1)=fPDAG.GRP
 set KEYS(2)=fPDAG.TABLE
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=12 do VPR(.fPDAG),VDA1(.fPDAG),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fPDAG),VPR(.fPDAG),VDA1(.fPDAG)
 if %ProcessMode do VLOD(.fPDAG) quit:$G(ER)  do VPR(.fPDAG),VDA1(.fPDAG)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fPDAG)
	quit


VNEW(RecordPDAG fPDAG) // Initialize arrays if %O=0
 
 do VDEF(.fPDAG)
 do VLOD(.fPDAG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordPDAG fPDAG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordPDAG fPDAG) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=12
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordPDAG fPDAG) // Display screen prompts
 set VO="10||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,12,7,0,0,0,0,0,0,0)_"01T Group:"
 set VO(2)=$C(1,36,7,0,0,0,0,0,0,0)_"01T Table:"
 set VO(3)=$C(1,58,12,0,0,0,0,0,0,0)_"01T Start Date:"
 set VO(4)=$C(2,6,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(5)=$C(2,60,10,0,0,0,0,0,0,0)_"01T End Date:"
 set VO(6)=$C(3,1,18,0,0,0,0,0,0,0)_"01T Due Status Table:"
 set VO(7)=$C(6,25,25,1,0,0,0,0,0,0)_"01T Payment Due Action Grid "
 set VO(8)=$C(9,2,11,2,0,0,0,0,0,0)_"01TUpper Limit"
 set VO(9)=$C(9,17,16,2,0,0,0,0,0,0)_"01TPartial Payments"
 set VO(10)=$C(9,50,13,2,0,0,0,0,0,0)_"01TFull Payments"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordPDAG fPDAG)  // Display screen data
 new V
 s PDAGDATA=$G(PDAGDATA)
 //
 set VO="16|11|13|"
 set VO(11)=$C(1,20,12,2,0,0,0,0,0,0)_"01T"_$E(fPDAG.GRP,1,12)
 set VO(12)=$C(1,44,12,2,0,0,0,0,0,0)_"01T"_$E(fPDAG.TABLE,1,12)
 set VO(13)=$C(1,70,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fPDAG.STDT)
 set VO(14)=$C(2,20,40,2,0,0,0,0,0,0)_"01T"_$E(fPDAG.TDES,1,40)
 set VO(15)=$C(2,70,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fPDAG.EDDT)
 set VO(16)=$C(3,20,12,2,0,0,0,0,0,0)_"01T"_$E(fPDAG.PDST,1,12)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+5,DY=11 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fPDAG)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordPDAG fPDAG)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,PDAGDATA(I))=$G(PDAGDATA(I))
 
 set VO(VX+1)=$C(DY,1,12,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,17,12,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,50,12,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",3)
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordPDAG fPDAG)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=6,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=10+%REPEAT,BLKSIZ=(36*%REPEAT)+96,PGM=$T(+0),DLIB="SYSDEV",DFID="PDAG"
 set OLNTB=VPB*1000
 
 set VFSN("PDAG")="zfPDAG"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,19,12)_"21T12401|1|[PDAG]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=L"""
 set %TAB(2)=$C(0,43,12)_"21T12402|1|[PDAG]TABLE|[PDAG]"
 set %TAB(3)=$C(0,69,10)_"21D12402||[PDAG]STDT"
 set %TAB(4)=$C(1,19,40)_"21T12401||[PDAG]TDES|||do VP1^V01S394(.fPDAG)"
 set %TAB(5)=$C(1,69,10)_"21D12403||[PDAG]EDDT"
 set %TAB(6)=$C(2,19,12)_"21T12404||[PDAG]PDST|[LNPDS]"
 set %TAB(7)=$C(10,0,12)_"20T12401|*PDAGDATA(1)|[*]@UPLIM"
 set %TAB(8)=$C(10,16,12)_"00T12402|*PDAGDATA(1)|[*]@PARTIAL|[STBLPDA1]||do VP2^V01S394(.fPDAG)"
 set %TAB(9)=$C(10,49,12)_"00T12403|*PDAGDATA(1)|[*]@FULL|[STBLPDA1]||do VP3^V01S394(.fPDAG)"
 do VTBL(.fPDAG)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordPDAG fPDAG) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordPDAG fPDAG) //
 set TDES=X
 quit

VP2(RecordPDAG fPDAG) //
 set ER=0 
 set (PDAU,PDAX,I(3))=""
 kill UPDA
 
 for J=1:1 set PDA=$P(X,",",J) quit:PDA=""  do PARTL
 
 // Payment actions ~p1 invalid for group ~p2
 if ER=1 set RM=$$^MSG(2154,PDAX,GRP)   
 quit 
 
 
PARTL	//
 type RecordSTBLPDA1 stblpda1=Db.getRecord("STBLPDA1","GRP=:GRP,ACTCODE=:PDA",1)
 if stblpda1.getMode()=0 set ER=1 set PDAX=PDAX_PDA_","

 quit 

VP3(RecordPDAG fPDAG) //
 set ER=0 
 set (PDAU,PDAX,I(3))=""
 kill UPDA
 
 for J=1:1 set PDA=$P(X,",",J) quit:PDA=""  do FULL
 
 // Payment actions ~p1 invalid for group ~p2
 if ER=1 set RM=$$^MSG(2154,PDAX,GRP)   
 quit 
 
 
FULL	//
 type RecordSTBLPDA1 stblpda1=Db.getRecord("STBLPDA1","GRP=:GRP,ACTCODE=:PDA",1)
 if stblpda1.getMode()=0 set ER=1 set PDAX=PDAX_PDA_","
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordPDAG fPDAG
 do VPR(.fPDAG)
 do VDA1(.fPDAG)
 do ^DBSPNT()
 quit

VW(RecordPDAG fPDAG)
 do VDA1(.fPDAG)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordPDAG fPDAG)
 do VDA1(.fPDAG)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordPDAG fPDAG
 do VDA1(.fPDAG)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordPDAG fPDAG
 if sn="PDAG" do vSET1(.fPDAG,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordPDAG fPDAG,di,X)
 do fPDAG.setAuditFlag(1)
 set fPDAG.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordPDAG fPDAG
 if fid="PDAG" quit $$vREAD1(.fPDAG,di)
 quit ""
vREAD1(RecordPDAG fPDAG,di)
 quit fPDAG.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
