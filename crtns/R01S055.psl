R01S055	// IRAHIST - Retirement/Savings Plan Account History
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:37 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number CIDB
	type Number CIDE

	set RID="IRAHIST"
	set RN="Retirement/Savings Plan Account History"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("CIDB")="|12|||||||N|Account Begin|||||"
	set %TAB("CIDE")="|12|||||I (X<CIDB) S ER=1,RM=$$^MSG(898)||N|Account End|||||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,CIDB#0,CIDE#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number CIDB,CIDE
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CIDCNT,CONAM,RID,RN,TAMT,VL,VLOF,VRF(),VSKIPREC,VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc3,vp8,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="IRAHIST",RN="Retirement/Savings Plan Account History"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","IRAHIST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[HIST]TJD#5#10,[HIST]TSEQ#19#4,[HIST]ETC#29#6,[HIST]TLO#50#12,[HIST]TSO#64#12,[HIST]TRC#78#8,[HIST]UID#88#20,[HIST]ENDBAL#110#12,[HIST]TCMT#124#8"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"((DEP.CID>:CIDB OR DEP.CID=(:CIDB))) AND ((DEP.CID"
		set VWHERE=VWHERE_"<:CIDE OR DEP.CID=(:CIDE))) AND HIST.ITC NOT ='NUL"
		set VWHERE=VWHERE_"L'"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Retirement/Savings Plan Account History"
		set VBNRINFO("PGM")="R01S055"
		set VBNRINFO("RID")="IRAHIST"
		set VBNRINFO("TABLES")="HIST,DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,HIST]CID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,HIST]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vp8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("HIST.TAMT,HIST.CID,HIST.TSEQ,DEP.BAL,DEP.TYPE,DEP.ITYTD,DEP.ACN,CIF.TAXID,CIF.NAM,HIST.TJD,HIST.ETC,HIST.TLO,HIST.TSO,HIST.TRC,HIST.UID,HIST.ENDBAL,HIST.TCMT","HIST,DEP,CIF","((DEP.CID>:CIDB OR DEP.CID=(:CIDB))) AND ((DEP.CID<:CIDE OR DEP.CID=(:CIDE))) AND HIST.ITC NOT ='NULL'","HIST.CID,HIST.TSEQ DESC","","DQMODE=1/PROTECTION=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=rwrs.getRowProt()		// Data item protection
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc3
	set vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc3,vc3
	set vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vp8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17
	set vc1=V.piece($C(9),1)			// HIST.TAMT
	set vc2=V.piece($C(9),2)			// HIST.CID
	set vc3=V.piece($C(9),3)			// HIST.TSEQ
	set vc4=V.piece($C(9),4)			// DEP.BAL
	set vc5=V.piece($C(9),5)			// DEP.TYPE
	set vc6=V.piece($C(9),6)			// DEP.ITYTD
	set vc7=V.piece($C(9),7)			// DEP.ACN
	set vc8=V.piece($C(9),8)			// CIF.TAXID
	set vp8=VI.extract(8)				// Protection indicator
	set vc9=V.piece($C(9),9)			// CIF.NAM
	set vc10=V.piece($C(9),10)			// HIST.TJD
	set vc11=V.piece($C(9),11)			// HIST.ETC
	set vc12=V.piece($C(9),12)			// HIST.TLO
	set vc13=V.piece($C(9),13)			// HIST.TSO
	set vc14=V.piece($C(9),14)			// HIST.TRC
	set vc15=V.piece($C(9),15)			// HIST.UID
	set vc16=V.piece($C(9),16)			// HIST.ENDBAL
	set vc17=V.piece($C(9),17)			// HIST.TCMT
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1
 /*
  -------------------------Revision History -----------------------------

        02/27/07 - Dhanalakshmi R - 25572
                Added a condition to skip the history records with
                transaction amount zero.
 
  -----------------------------------------------------------------------
  */

  type public Boolean VSKIPREC
 
  if '(+vc1) set VSKIPREC=1
	quit

VPREAQ	// Pre-processor (after query)

 type public Number CIDCNT

 set CIDCNT=0

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG2 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc2,vovc2,vc3,vovc3
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc2'=+vc2) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VHDG2	// Group Header
	type public String %MSKD,%TIM,CIDCNT,CONAM,ER,IOSL,RID,RN,TAMT,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,VSKIPREC,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc2,vovc3,vp8,vrundate,vsysdate

	quit:vh(2)  set vh(2)=1				// Print flag
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set V=vc2,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",14-VL.length())_$J($FN(vc4,",",2),12)
	set VL=VL_$J("",34-VL.length())_$J(vc5,4)
	set VL=VL_$J("",41-VL.length())_$S(vc6="":"",1:$J(vc6,0,2))
	set VL=VL_$J("",63-VL.length())_$J(vc7,12)
	set VL=VL_$J("",79-VL.length())_$S(vp8=3:"***********",1:$E(vc8,1,11))
	set VL=VL_$J("",94-VL.length())_$E(vc9,1,35)
	do VOM
	set VL="" do VOM
	set VL="   "_"--------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="          "_"Date     SEQ   Tran Code       Amount  Location      Source        Trace     User ID                    Balance  Comments"
	do VOM
	set VL="   "_"--------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VDTL2	// Detail
	type public String %TIM,CIDCNT,IOSL,TAMT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VSKIPREC,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vp8,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="    "_$J($$DAT^%ZM(vc10),10)
	set VL=VL_$J("",18-VL.length())_$J(vc3,4)
	set VL=VL_$J("",28-VL.length())_$E(vc11,1,6)
	set V=vc1,VO=V do VP2 quit:VFMQ!verror.get()  set V=$S(V="":"",1:$J(vc1,0,2))
	set VL=VL_$J("",37-VL.length())_V
	set VL=VL_$J("",49-VL.length())_$E(vc12,1,12)
	set VL=VL_$J("",63-VL.length())_$E(vc13,1,12)
	set VL=VL_$J("",77-VL.length())_$E(vc14,1,8)
	set VL=VL_$J("",87-VL.length())_$E(vc15,1,20)
	set VL=VL_$J("",109-VL.length())_$J($FN(vc16,",",2),12)
	set VL=VL_$J("",123-VL.length())_$E(vc17,1,8)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CIDCNT,CONAM,RID,RN,TAMT,VL,VSKIPREC,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc3,vp8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",98-VL.length())_"Run Date:"
	set VL=VL_$J("",108-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",100-VL.length())_"System:"
	set VL=VL_$J("",108-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Account       Balance        Type       INT TYTD           Primary CIF    TIN/SIN        Customer Name"
	do VOM
	set VL="   "_"================================================================================================================================"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,CIDCNT,TAMT,VPN,VSKIPREC,vc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=" "_"================================================================================================================================"
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL=" "_$J(CIDCNT,10)
	set VL=VL_$J("",12-VL.length())_"Records"
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,HIST]CID

 type public Number CIDCNT
 set CIDCNT=CIDCNT+1
	quit

VP2	// Column pre-processor - Variable: TAMT

	type public String vc1
 type public Number TAMT
 set TAMT=+(vc1)

	quit
