R01S093	// SCA020 - Daily Cost Center Management Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String RDATE
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA020"
	set RN="Daily Cost Center Management Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[TTL]TJD|[TTL]TJD:DISTINCT:NOVAL||S RDATE=X||D|Transaction Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String RDATE
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,CRCD,DESC,DESC2,GRP,RID,RN,TRB,VL,VLOF,VRF(),VSTATS(),X,X1,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X2,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X3,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X4,X40,X41,X42,X43,X44,X45,X46,X47,X48,X49,X5,X50,X6,X7,X8,X9,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8,vc9,vovc1
	type String vovc2,vovc3,vovc33,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA020",RN="Daily Cost Center Management Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA020","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[TTL]DRAMT#1#14"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Transaction Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE="TTL.TJD=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Daily Cost Center Management Summary"
		set VBNRINFO("PGM")="R01S093"
		set VBNRINFO("RID")="SCA020"
		set VBNRINFO("TABLES")="TTL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TTL]CRCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TTL]CC"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TTL]TJD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TTL]CLS"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,TTL]GRP"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,TTL]TYPE"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,TTL]GLSC"

		set VBNRINFO("DOC",1)="The Daily Cost Center Management Summary Report (SCA020) provides an"
		set VBNRINFO("DOC",2)="overall view of the number and amount of account transfers between"
		set VBNRINFO("DOC",3)="cost centers.  This report provides daily, month-to-date, and"
		set VBNRINFO("DOC",4)="year-to-date totals."
		set VBNRINFO("DOC",5)=""
		set VBNRINFO("DOC",6)="Refer to the Product Type/Cost Center Transfers Reference Manual for"
		set VBNRINFO("DOC",7)="further information."
		set VBNRINFO("DOC",8)=""

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("TTL.TJD,TTL.CRCD,TTL.CLS,TTL.GRP,TTL.TYPE,TTL.CC,TTL.DRAMT,TTL.CRAMT,TTL.MDRAMT,TTL.MCRAMT,TTL.YDRAMT,TTL.YCRAMT,TTL.TRIN,TTL.MTRIN,TTL.YTRIN,TTL.TROUT,TTL.MTROUT,TTL.YTROUT,TTL.BAL,TTL.NEW,TTL.MNEW,TTL.YNEW,TTL.OTRIN,TTL.MOTRIN,TTL.YOTRIN,TTL.CLOSED,TTL.MCLOSED,TTL.YCLOSED,TTL.CTROUT,TTL.MCTROUT,TTL.YCTROUT,TTL.OPEN,TTL.GLSC","TTL","TTL.TJD=:VIN1","TTL.CRCD,TTL.CC,TTL.TJD,TTL.CLS,TTL.GRP,TTL.TYPE,TTL.GLSC","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc6,vovc1,vovc3,vovc4,vovc5,vovc33
	set vovc2="",vovc6="",vovc1="",vovc3="",vovc4="",vovc5="",vovc33=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc6,vc6,vovc1,vc1,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc33,vc33
	set vovc2=vc2,vovc6=vc6,vovc1=vc1,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc33=vc33
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33
	set vc1=V.piece($C(9),1)			// TTL.TJD
	set vc2=V.piece($C(9),2)			// TTL.CRCD
	set vc3=V.piece($C(9),3)			// TTL.CLS
	set vc4=V.piece($C(9),4)			// TTL.GRP
	set vc5=V.piece($C(9),5)			// TTL.TYPE
	set vc6=V.piece($C(9),6)			// TTL.CC
	set vc7=V.piece($C(9),7)			// TTL.DRAMT
	set vc8=V.piece($C(9),8)			// TTL.CRAMT
	set vc9=V.piece($C(9),9)			// TTL.MDRAMT
	set vc10=V.piece($C(9),10)			// TTL.MCRAMT
	set vc11=V.piece($C(9),11)			// TTL.YDRAMT
	set vc12=V.piece($C(9),12)			// TTL.YCRAMT
	set vc13=V.piece($C(9),13)			// TTL.TRIN
	set vc14=V.piece($C(9),14)			// TTL.MTRIN
	set vc15=V.piece($C(9),15)			// TTL.YTRIN
	set vc16=V.piece($C(9),16)			// TTL.TROUT
	set vc17=V.piece($C(9),17)			// TTL.MTROUT
	set vc18=V.piece($C(9),18)			// TTL.YTROUT
	set vc19=V.piece($C(9),19)			// TTL.BAL
	set vc20=V.piece($C(9),20)			// TTL.NEW
	set vc21=V.piece($C(9),21)			// TTL.MNEW
	set vc22=V.piece($C(9),22)			// TTL.YNEW
	set vc23=V.piece($C(9),23)			// TTL.OTRIN
	set vc24=V.piece($C(9),24)			// TTL.MOTRIN
	set vc25=V.piece($C(9),25)			// TTL.YOTRIN
	set vc26=V.piece($C(9),26)			// TTL.CLOSED
	set vc27=V.piece($C(9),27)			// TTL.MCLOSED
	set vc28=V.piece($C(9),28)			// TTL.YCLOSED
	set vc29=V.piece($C(9),29)			// TTL.CTROUT
	set vc30=V.piece($C(9),30)			// TTL.MCTROUT
	set vc31=V.piece($C(9),31)			// TTL.YCTROUT
	set vc32=V.piece($C(9),32)			// TTL.OPEN
	set vc33=V.piece($C(9),33)			// TTL.GLSC
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32
 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */
 
	// Accumulate data and totals
 
	type public Number TRB,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10
	type public Number X11,X12,X13,X14,X15,X16,X17,X18,X19,X20
	type public Number X21,X22,X23,X24,X25,X26,X27,X28,X29,X30
	type public Number X31,X32,X33,X34,X35,X36,X37,X38,X39,X40
	type public Number X41,X42,X43,X44,X45,X46,X47,X48,X49,X50

	type Date PDT
	type Number CC, I, TYPE, Z
	type String CLS, CRCD, D, GRP, Y
 
	set PDT = vc1
	set CRCD = vc2
	set CLS = vc3
	set GRP = vc4
	set TYPE = vc5
	set CC = vc6
	
	if CLS = "L" do {
 
                type RecordPRODDFTL dftl = Db.getRecord("PRODDFTL", "TYPE = :TYPE")
                set TRB = dftl.trb
                }
        else  if CLS = "D" do {
 
                type RecordPRODDFTD dftd = Db.getRecord("PRODDFTD", "TYPE = :TYPE")
                set TRB = dftd.trb
        	}
        else  set TRB = 0

	set X1 = $S(TRB:vc7,1:vc8)
	set X2 = $S(TRB:vc9,1:vc10)
	set X3 = $S(TRB:vc11,1:vc12)
	set X4 = vc13
	set X5 = vc14
	set X6 = vc15
	set X7 = X1 + X4
	set X8 = X2 + X5
	set X9 = X3 + X6
	set X10 = $S(TRB:vc8,1:vc7)
	set X11 = $S(TRB:vc10,1:vc9)
	set X12 = $S(TRB:vc12,1:vc11)
	set X13 = vc16
	set X14 = vc17
	set X15 = vc18
	set X16 = X10 + X13
	set X17 = X11 + X14
	set X18 = X12 + X15
	set X19 = X7 - X16
	set X20 = X8 - X17
	set X21 = X9 - X18
	set X25 = vc19
	set X22 = X25 - X19
	set X23 = X25 - X20
	set X24 = X25 - X21
	set X26 = vc20
	set X27 = vc21
	set X28 = vc22
	set X29 = vc23
	set X30 = vc24
	set X31 = vc25
	set X32 = X26 + X29
	set X33 = X27 + X30
	set X34 = X28 + X31
	set X35 = vc26
	set X36 = vc27
	set X37 = vc28
	set X38 = vc29
	set X39 = vc30
	set X40 = vc31
	set X41 = X35 + X38
	set X42 = X36 + X39
	set X43 = X37 + X40
	set X44 = X32 - X41
	set X45 = X33 - X42
	set X46 = X34 - X43
	set X50 = vc32
	set X47 = X50 - X44
	set X48 = X50 - X45
	set X49 = X50 - X46
	
	if CC = "zzzzz" quit

	set Y = X1_"|"_X2_"|"_X3_"|"_X4_"|"_X5_"|"_X6_"|"_X7_"|"_X8_"|"_X9_"|"_X10
	set Y = Y_"|"_X11_"|"_X12_"|"_X13_"|"_X14_"|"_X15_"|"_X16_"|"_X17_"|"_X18_"|"_X19_"|"_X20
	set Y = Y_"|"_X21_"|"_X22_"|"_X23_"|"_X24_"|"_X25_"|"_X26_"|"_X27_"|"_X28_"|"_X29_"|"_X30
	set Y = Y_"|"_X31_"|"_X32_"|"_X33_"|"_X34_"|"_X35_"|"_X36_"|"_X37_"|"_X38
	set Y = Y_"|"_X39_"|"_X40_"|"_X41_"|"_X42_"|"_X43_"|"_X44_"|"_X45_"|"_X46_"|"_X47_"|"_X48_"|"_X49_"|"_X50

	// Group totals
        type RecordTMPRPT5 grtmp5 = Db.getRecord("TMPRPT5", "PID = :%ProcessID, KEY1 = :CRCD, KEY2 = :CC, KEY3 = :PDT, KEY4 = :CLS, KEY5 = :GRP", 1)
	
	set D = grtmp5.data.piece("|",1) + Y.piece("|",1)

	for I = 2:1:50 set D = D_"|"_grtmp5.data.piece("|",I) + Y.piece("|",I)

	set grtmp5.data = D
	
	do grtmp5.bypassSave()
	
	if CC = "*" quit
	
	// Branch totals
	set CC = "zzzzz"
	type RecordTMPRPT5 brtmp5 = Db.getRecord("TMPRPT5", "PID = :%ProcessID, KEY1 = :CRCD, KEY2 = :CC, KEY3 = :PDT, KEY4 = :CLS, KEY5 = :GRP", 1)
	
	set D = brtmp5.data.piece("|",1) + Y.piece("|",1)

	for Z = 2:1:50 set D = D_"|"_brtmp5.data.piece("|",Z) + Y.piece("|",Z)

	set brtmp5.data = D
	
	do brtmp5.bypassSave()
	 
	quit

VPREAQ	// Pre-processor (after query)

 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

 type public String CRCD, DESC, DESC2, GRP

 set (CRCD,GRP,DESC,DESC2) = ""
	quit

VPREBQ	// Pre-processor (before query)

 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */
 
 //Incoming=RDATE
	quit

VRPOST	// Report post-processor

 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

 do Db.fastDelete("TMPRPT5", "PID = :%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc2,vovc2,vc6,vovc6,vc1,vovc1,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc33,vovc33
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(vovc2'=vc2) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb2!(+vovc6'=+vc6) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb3!(vovc1'=vc1) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb4!(vovc3'=vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,VH0=1
	if vb5!(vovc4'=vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,VH0=1
	if vb6!(+vovc5'=+vc5) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(7)=VT(7)+1
	quit

VDTL5	// Detail
	type public String %TIM,CRCD,DESC,DESC2,GRP,IOSL,RDATE,TRB,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),X,X1,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X2,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X3,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X4,X40,X41,X42,X43,X44,X45,X46,X47,X48,X49,X5,X50,X6,X7,X8,X9,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8
	type public String vc9,verror,vh(),vovc1,vovc2,vovc3,vovc33,vovc4,vovc5,vovc6,vrundate

	quit:VD(5)  set VD(5)=1				// Print flag
	if VLC+47>IOSL do VHDG0 quit:VFMQ

	set VL="   "_"Additions"
	do VOM
	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(X,1,8) set VL="       "_V
	set VL=VL_$J("",49-VL.length())_$J($FN(X1,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X2,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X3,",",2),16)
	do VOM
	set VL="       "_"Transfers In"
	set VL=VL_$J("",49-VL.length())_$J($FN(X4,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X5,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X6,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="+      Total Additions"
	set VL=VL_$J("",49-VL.length())_$J($FN(X7,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X8,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X9,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"Reductions"
	do VOM
	set VL="" do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$E(X,1,8) set VL="       "_V
	set VL=VL_$J("",49-VL.length())_$J($FN(X10,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X11,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X12,",",2),16)
	do VOM
	set VL="       "_"Transfers Out"
	set VL=VL_$J("",49-VL.length())_$J($FN(X13,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X14,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X15,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="-      Total Reductions"
	set VL=VL_$J("",49-VL.length())_$J($FN(X16,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X17,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X18,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="=  Net Balance Change"
	set VL=VL_$J("",49-VL.length())_$J($FN(X19,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X20,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X21,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="+  Beginning Principal Balance"
	set VL=VL_$J("",49-VL.length())_$J($FN(X22,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X23,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X24,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="=  Ending Principal Balance"
	set VL=VL_$J("",49-VL.length())_$J($FN(X25,",",2),16)
	set VL=VL_$J("",75-VL.length())_$J($FN(X25,",",2),16)
	set VL=VL_$J("",101-VL.length())_$J($FN(X25,",",2),16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"Additions"
	do VOM
	set VL="" do VOM
	set VL="       "_"Accounts Opened"
	set VL=VL_$J("",49-VL.length())_$J(X26,16)
	set VL=VL_$J("",75-VL.length())_$J(X27,16)
	set VL=VL_$J("",101-VL.length())_$J(X28,16)
	do VOM
	set VL="       "_"Transfers In"
	set VL=VL_$J("",49-VL.length())_$J(X29,16)
	set VL=VL_$J("",75-VL.length())_$J(X30,16)
	set VL=VL_$J("",101-VL.length())_$J(X31,16)
	do VOM
	set VL="" do VOM
	set VL="+      Total Additions"
	set VL=VL_$J("",49-VL.length())_$J(X32,16)
	set VL=VL_$J("",75-VL.length())_$J(X33,16)
	set VL=VL_$J("",101-VL.length())_$J(X34,16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"Reductions"
	do VOM
	set VL="" do VOM
	set VL="       "_"Accounts Closed"
	set VL=VL_$J("",49-VL.length())_$J(X35,16)
	set VL=VL_$J("",75-VL.length())_$J(X36,16)
	set VL=VL_$J("",101-VL.length())_$J(X37,16)
	do VOM
	set VL="       "_"Transfers Out"
	set VL=VL_$J("",49-VL.length())_$J(X38,16)
	set VL=VL_$J("",75-VL.length())_$J(X39,16)
	set VL=VL_$J("",101-VL.length())_$J(X40,16)
	do VOM
	set VL="" do VOM
	set VL="-      Total Reductions"
	set VL=VL_$J("",49-VL.length())_$J(X41,16)
	set VL=VL_$J("",75-VL.length())_$J(X42,16)
	set VL=VL_$J("",101-VL.length())_$J(X43,16)
	do VOM
	set VL="" do VOM
	set VL="=      Net Change in Accounts"
	set VL=VL_$J("",49-VL.length())_$J(X44,16)
	set VL=VL_$J("",75-VL.length())_$J(X45,16)
	set VL=VL_$J("",101-VL.length())_$J(X46,16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="+  Beginning Number of Accounts"
	set VL=VL_$J("",49-VL.length())_$J(X47,16)
	set VL=VL_$J("",75-VL.length())_$J(X48,16)
	set VL=VL_$J("",101-VL.length())_$J(X49,16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="=  Ending Number of Accounts"
	set VL=VL_$J("",49-VL.length())_$J(X50,16)
	set VL=VL_$J("",75-VL.length())_$J(X50,16)
	set VL=VL_$J("",101-VL.length())_$J(X50,16)
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,CRCD,DESC,DESC2,GRP,IOSL,RDATE,TRB,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),X,X1,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X2,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X3,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X4,X40,X41,X42,X43,X44,X45,X46,X47,X48,X49,X5,X50,X6,X7,X8,X9,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8
	type public String vc9,verror,vh(),vovc1,vovc2,vovc3,vovc33,vovc4,vovc5,vovc6,vrundate

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc7,VO=V set V=$J(V,14,2) do VP3 quit:VFMQ!verror.get()  set VL=V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,CRCD,DESC,DESC2,GRP,RDATE,RID,RN,TRB,VL,X,X1,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X2,X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X3,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X4,X40,X41,X42,X43,X44,X45,X46,X47,X48,X49,X5,X50,X6,X7,X8,X9,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc33
	type public String vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System: "
	set VL=VL_$J("",110-VL.length())_$J($$DAT^%ZM(RDATE),10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	set V=vc6,VO=V set V=$J(V,6) do VP4 quit:VFMQ!verror.get()  set VL=V
	do VOM
	set V=vc4,VO=V do VP5 quit:VFMQ!verror.get()  set V=$E(V,1,30) set VL=V
	do VOM
	do VP6 quit:VFMQ!verror.get()  set V="CURRENCY "_vc2_" - "_DESC do VP7 quit:VFMQ!verror.get()  set VL=V
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="                                                            "_"Today             Month-to-Date              Year-to-Date"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: X

	type public String vc3
 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */
 
 type public Number TRB, X

 /*
 if vc3 = "L" do {
 
	type RecordPRODDFTL dftl = Db.getRecord("PRODDFTL", "TYPE = :TYPE")
	set TRB = dftl.trb
	}
 
 if vc3 = "D" do {
 
	type RecordPRODDFTD dftd = Db.getRecord("PRODDFTD", "TYPE = :TYPE")
 	set TRB = dftd.trb
	}
 */

 set X = $S(TRB:"Debits",1:"Credits")
	quit

VP2	// Column pre-processor - Variable: X

 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

 type public Number TRB, X

 set X = $S(TRB:"Credits",1:"Debits")
	quit

VP3	// Column post-processor - [SYSDEV,TTL]DRAMT

 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

 type public String V = ""

	quit

VP4	// Column post-processor - [SYSDEV,TTL]CC

	type public String vc6
 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

 type public Number CC
 type public String V
 
 set CC = vc6
 
 // Cost Center ~p1
 set V = $S((CC = "zzzzz")!(CC = "*"):"Institution",1:$$^MSG(6290,CC))
	quit

VP5	// Column pre-processor - Variable: GRP

	type public String vc4
 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */
 
 type public String GRP

 set GRP = vc4
	quit

VP6	// Column pre-processor - CURRENCY <<CRCD>> - <<DESC>>

	type public String vc2
 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */
 
 type public String CRCD, DESC
 
 type String CO = CUVAR.CO
 
 set CRCD = vc2 quit:CRCD.isNull()
 
 type RecordCRCD crcd = Db.getRecord("CRCD", "CO = :CO, CRCD = :CRCD")
 
 set DESC = crcd.desc
	quit

VP7	// Column post-processor - CURRENCY <<CRCD>> - <<DESC>>

 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */
 
 type public Boolean %MCP
 type public String V, VL
 
 if '%MCP set (V,VL) = ""
	quit
