R01S137	// SCA069 - Loan Sale Submission Schedule
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:43 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA069"
	set RN="Loan Sale Submission Schedule"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNLS4]INCD|[LNLS4]INCD:NOVAL||S INCD=X D EXT^DBSQRY||T|Investor Code|||||"
	set %TAB("VIN2")="|255||[LNLS4]PL|[LNLS4]PL:QU ""LNLS4]INCD=INCD"":DISTINCT:NOVAL||S PL=X D EXT^DBSQRY||T|Pool Number|||||"
	set %TAB("VIN3")="|255||[LNLS4]GRP|[LNLS4]GRP:QU ""[LNLS4]INCD=INCD,[LNLS4]PL=PL"":DISTINCT:NOVAL||S GRP=X D EXT^DBSQRY||T|Loan Group|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,COLL,CONAM,CSEQ,GRP,INCD,PL,RID,RN,SOLDCMP,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA069",RN="Loan Sale Submission Schedule"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA069","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNLS4]INCD "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LNLS4]PL "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LNLS4]GRP "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNLS4,LN,COL") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Investor Code"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Pool Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Loan Group"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Sale Submission Schedule"
		set VBNRINFO("PGM")="R01S137"
		set VBNRINFO("RID")="SCA069"
		set VBNRINFO("TABLES")="LNLS4,LN,COL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLS4]INCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLS4]PL"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNLS4]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLS4]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:4 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LN.CID,LN.IPTD,LN.ICM,LN.DIST1ND,LN.DIST1LD,LN.COL"
	set VSELECT=VSELECT_"L,LNLS4.INCD,LNLS4.GRP,LNLS4.PL,LNLS4.CID,LNLS4.SB"
	set VSELECT=VSELECT_"AL,LNLS4.SOLDCMP,LN.IRN,LN.ONP,LN.SCHNUM,LN.DTNT,L"
	set VSELECT=VSELECT_"N.CRLMT,LN.DFP,LN.PMTPI,LN.MDT,LN.FCLF,LN.FCPT,COL"
	set VSELECT=VSELECT_".NUNIT,LN.FCLP,LN.LVR,LN.LNM,COL.AD1,COL.AD2,COL.C"
	set VSELECT=VSELECT_"ITY,COL.STATE,COL.CNTRY,COL.MZIP,COL.FCPNAM,COL.FC"
	set VSELECT=VSELECT_"CLS"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNLS4,LN,COL",VWHERE,"LNLS4.INCD,LNLS4.PL,LNLS4.GRP,LNLS4.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc7,vovc9,vovc8,vovc10
	set vovc7="",vovc9="",vovc8="",vovc10=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc7,vc7,vovc9,vc9,vovc8,vc8,vovc10,vc10
	set vovc7=vc7,vovc9=vc9,vovc8=vc8,vovc10=vc10
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34
	set vc1=V.piece($C(9),1)			// LN.CID
	set vc2=V.piece($C(9),2)			// LN.IPTD
	set vc3=V.piece($C(9),3)			// LN.ICM
	set vc4=V.piece($C(9),4)			// LN.DIST1ND
	set vc5=V.piece($C(9),5)			// LN.DIST1LD
	set vc6=V.piece($C(9),6)			// LN.COLL
	set vc7=V.piece($C(9),7)			// LNLS4.INCD
	set vc8=V.piece($C(9),8)			// LNLS4.GRP
	set vc9=V.piece($C(9),9)			// LNLS4.PL
	set vc10=V.piece($C(9),10)			// LNLS4.CID
	set vc11=V.piece($C(9),11)			// LNLS4.SBAL
	set vc12=V.piece($C(9),12)			// LNLS4.SOLDCMP
	set vc13=V.piece($C(9),13)			// LN.IRN
	set vc14=V.piece($C(9),14)			// LN.ONP
	set vc15=V.piece($C(9),15)			// LN.SCHNUM
	set vc16=V.piece($C(9),16)			// LN.DTNT
	set vc17=V.piece($C(9),17)			// LN.CRLMT
	set vc18=V.piece($C(9),18)			// LN.DFP
	set vc19=V.piece($C(9),19)			// LN.PMTPI
	set vc20=V.piece($C(9),20)			// LN.MDT
	set vc21=V.piece($C(9),21)			// LN.FCLF
	set vc22=V.piece($C(9),22)			// LN.FCPT
	set vc23=V.piece($C(9),23)			// COL.NUNIT
	set vc24=V.piece($C(9),24)			// LN.FCLP
	set vc25=V.piece($C(9),25)			// LN.LVR
	set vc26=V.piece($C(9),26)			// LN.LNM
	set vc27=V.piece($C(9),27)			// COL.AD1
	set vc28=V.piece($C(9),28)			// COL.AD2
	set vc29=V.piece($C(9),29)			// COL.CITY
	set vc30=V.piece($C(9),30)			// COL.STATE
	set vc31=V.piece($C(9),31)			// COL.CNTRY
	set vc32=V.piece($C(9),32)			// COL.MZIP
	set vc33=V.piece($C(9),33)			// COL.FCPNAM
	set vc34=V.piece($C(9),34)			// COL.FCCLS
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
 type public String SOLDCMP
 type public Number COLL,CSEQ
 
 type Number CID,PL,ZICM
 type Date IPTD,ZDIST1ND,ZDIST1LD
 type String GRP,INCD

 set CID=vc1
 set IPTD=vc2
 set ZICM=vc3
 set ZDIST1ND=vc4
 set ZDIST1LD=vc5
 set COLL=vc6
 set INCD=vc7
 set GRP=vc8
 set PL=vc9
 type ResultSet rs=Db.select("COLSEQ","COL","COLL=:COLL")
 if rs.next() set CSEQ=rs.getCol("COLSEQ")
 
 if IPTD=ZICM set IPTD=ZDIST1ND
 if IPTD=1 set IPTD=ZDIST1LD

 type RecordLNLS4 fLNLS4=Db.getRecord("LNLS4","INCD=:INCD,PL=:PL,GRP=:GRP,CID=:CID")
 set SOLDCMP=$$AMT4SALE^LNCDI(fLNLS4.sbal,fLNLS4.contra,fLNLS4.cid,INCD,PL)


 

 
 
 
	quit

VPREAQ	// Pre-processor (after query)

 type public String GRP,INCD,PL
 
 set INCD="",PL="",GRP=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc7,vovc7,vc9,vovc9,vc8,vovc8,vc10,vovc10
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc7'=vc7) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc9'=vc9) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc8'=vc8) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc11,vc12
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+(vc11*vc13)		// @TOT(<<[LNLS4]SBAL*[LN]IRN>>)
	set VT(4,2,1)=VT(4,2,1)+(vc14-vc15*vc11)	// @TOT(<<[LN]ONP-[LN]SCHNUM*[LNLS4]SBAL>>)
	set VT(4,3,1)=VT(4,3,1)+vc11			// @TOT([LNLS4]SBAL)
	set VT(4,4,1)=VT(4,4,1)+vc12			// @TOT([LNLS4]SOLDCMP)
	quit

VSUM2	// Summary
	type public String %TIM,COLL,CSEQ,GRP,I,INCD,IOSL,PL,SOLDCMP,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Investor:"
	set VL=VL_$J("",10-VL.length())_$E(vc7,1,5)
	do VOM
	set VL="" do VOM
	set VL="          "_"Total:"
	set VL=VL_$J("",57-VL.length())_"Average:"
	do VOM
	set VL="                          "_"Balance:"
	set V=VT(2,3,1)					// @TOT([LNLS4]SBAL,)
	set VL=VL_$J("",38-VL.length())_$J(V,13,2)
	set VL=VL_$J("",73-VL.length())_"Balance:"
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=VT(2,3,1)/VT(2)			// @TOT([LNLS4]SBAL)/VT(2)
		}
	set VL=VL_$J("",86-VL.length())_$J(V,12,2)
	do VOM
	set VL="                      "_"Amount Sold:"
	set V=VT(2,4,1)					// @TOT([LNLS4]SOLDCMP,)
	set VL=VL_$J("",38-VL.length())_$J(V,13,2)
	set VL=VL_$J("",67-VL.length())_"Interest Rate:"
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=VT(2,1,1)/VT(2,3,1)		// @TOT(<<[LNLS4]SBAL*[LN]IRN>>)/@TOT([LNLS4]SBAL,)
		}
	set VL=VL_$J("",90-VL.length())_$J(V,8,5)
	do VOM
	set VL="                         "_"Accounts:"
	set V=VT(2)					// @CNT(,N,5)
	set VL=VL_$J("",46-VL.length())_$J(V,5)
	set VL=VL_$J("",66-VL.length())_"Remaining Term:"
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=VT(2,2,1)/VT(2,3,1)		// @TOT(<<[LN]ONP-[LN]SCHNUM*[LNLS4]SBAL>>)/@TOT([LNLS4]SBAL,)
		}
	set VL=VL_$J("",91-VL.length())_$J(V,7,3)
	do VOM
	set VL="" do VOM
	quit

VSUM3	// Summary
	type public String %TIM,COLL,CSEQ,GRP,I,INCD,IOSL,PL,SOLDCMP,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Pool:"
	set VL=VL_$J("",6-VL.length())_$E(vc9,1,10)
	do VOM
	set VL="" do VOM
	set VL="          "_"Total:"
	set VL=VL_$J("",57-VL.length())_"Average:"
	do VOM
	set VL="                          "_"Balance:"
	set V=VT(3,3,1)					// @TOT([LNLS4]SBAL,)
	set VL=VL_$J("",38-VL.length())_$J(V,13,2)
	set VL=VL_$J("",73-VL.length())_"Balance:"
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=VT(3,3,1)/VT(3)			// @TOT([LNLS4]SBAL)/VT(3)
		}
	set VL=VL_$J("",86-VL.length())_$J(V,12,2)
	do VOM
	set VL="" do VOM
	set VL="                         "_"Accounts:"
	set V=VT(3)					// @CNT(,N,5)
	set VL=VL_$J("",46-VL.length())_$J(V,5)
	set VL=VL_$J("",66-VL.length())_"Remaining Term:"
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=VT(3,2,1)/VT(3,3,1)		// @TOT(<<[LN]ONP-[LN]SCHNUM*[LNLS4]SBAL>>)/@TOT([LNLS4]SBAL,)
		}
	set VL=VL_$J("",91-VL.length())_$J(V,7,3)
	do VOM
	set VL="" do VOM
	quit

VDTL4	// Detail
	type public String %TIM,COLL,CSEQ,GRP,INCD,IOSL,PL,SOLDCMP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate

	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc1,12)
	set VL=VL_$J("",13-VL.length())_$J(vc11,9,2)
	set VL=VL_$J("",23-VL.length())_$J($$DAT^%ZM(vc2),10)
	set VL=VL_$J("",34-VL.length())_$J($$DAT^%ZM(vc16),10)
	set VL=VL_$J("",44-VL.length())_$J(vc17,8,0)
	set VL=VL_$J("",53-VL.length())_$J($$DAT^%ZM(vc18),10)
	set VL=VL_$J("",64-VL.length())_$J(vc19,8,2)
	set VL=VL_$J("",73-VL.length())_$J(vc13,6,3)
	set VL=VL_$J("",80-VL.length())_$J($$DAT^%ZM(vc20),10)
	set VL=VL_$J("",91-VL.length())_$E(vc21,1,2)
	set V=vc22,VO=V set V=$J(V,1) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",94-VL.length())_V		// [SYSDEV,LN]FCPT
	set VL=VL_$J("",96-VL.length())_$J(vc23,3)
	set VL=VL_$J("",100-VL.length())_$J(vc24,1)
	set VL=VL_$J("",102-VL.length())_$J(vc25,4)
	set VL=VL_$J("",107-VL.length())_$E(vc26,1,25)
	do VOM
	set VL="               "_$J(vc12,12,2)
	set VL=VL_$J("",107-VL.length())_$E(vc27,1,25)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                           "_$E(vc28,1,25)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                           "_$E(vc29,1,25)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                           "_$E(vc30,1,2)
	set VL=VL_$J("",110-VL.length())_$E(vc31,1,2)
	set VL=VL_$J("",113-VL.length())_$E(vc32,1,5)
	if 'VL.translate(" ").isNull() do VOM
	set V=vc33,VO=V set V=$E(V,1,17) do VP2 quit:VFMQ!verror.get()  set VL="                                                                                                           "_V
	set V=vc34,VO=V set V=$E(V,1,3) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",127-VL.length())_V		// [SYSDEV,COL]FCCLS
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,COLL,CONAM,CSEQ,GRP,INCD,PL,RID,RN,SOLDCMP,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+11,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA069)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL=" "_"Loan Number   Balance       Paid      Note    Original  First   P&I Pmt   Int   Maturity LN PR Num LN LVR Last Name"
	do VOM
	set VL="              "_"Amt Sold       Thru      Date     Amount  Pmt Due            Rate    Date   FT Ty  Un PP  %  Address"
	do VOM
	set VL="                                                                                                           "_"City           "
	do VOM
	set VL="                                                                                                           "_"ST Cnty Zip"
	do VOM
	set VL="                                                                                                           "_"Condo/PUD Name        Cls"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="Investor:"
	set VL=VL_$J("",10-VL.length())_$E(vc7,1,5)
	set VL=VL_$J("",17-VL.length())_"Pool: "
	set VL=VL_$J("",23-VL.length())_$E(vc9,1,10)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,COLL,CSEQ,GRP,INCD,PL,SOLDCMP,vc7,vc9,vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="Report Totals:"
	do VOM
	set VL="" do VOM
	set VL="          "_"Total:                                         Average:"
	do VOM
	set VL="                          "_"Balance:"
	set V=0						// @TOT([LNLS4]SBAL,0)
	for I=0:1:4 set V=V+VT(I,3,1)
	set V=$J(V,13,2) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",38-VL.length())_V		// @TOT([LNLS4]SBAL,0)
	set VL=VL_$J("",73-VL.length())_"Balance:"
	set V=0						// @TOT([LNLS4]SBAL)
	for I=0:1:4 set V=V+VT(I,3,1)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=V/LNS				// @TOT([LNLS4]SBAL)/LNS
		}
	set VL=VL_$J("",86-VL.length())_$J(V,12,2)
	do VOM
	set VL="                      "_"Amount Sold:"
	set V=0						// @TOT([LNLS4]SOLDCMP,0)
	for I=0:1:4 set V=V+VT(I,4,1)
	set VL=VL_$J("",38-VL.length())_$J(V,13,2)
	set VL=VL_$J("",67-VL.length())_"Interest Rate:"
	set V=0						// @TOT(<<[LNLS4]SBAL*[LN]IRN>>)
	for I=0:1:4 set V=V+VT(I,1,1)
	set VX(2)=0					// @TOT([LNLS4]SBAL,)
	for I=0:1:4 set VX(2)=VX(2)+VT(I,3,1)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=V/VX(2)				// @TOT(<<[LNLS4]SBAL*[LN]IRN>>)/@TOT([LNLS4]SBAL,)
		}
	set VL=VL_$J("",90-VL.length())_$J(V,8,5)
	do VOM
	set VL="                         "_"Accounts:"
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4))		// @CNT(0,N,5)
	set VL=VL_$J("",46-VL.length())_$J(V,5)
	set VL=VL_$J("",66-VL.length())_"Remaining Term:"
	set V=0						// @TOT(<<[LN]ONP-[LN]SCHNUM*[LNLS4]SBAL>>)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VX(2)=0					// @TOT([LNLS4]SBAL,)
	for I=0:1:4 set VX(2)=VX(2)+VT(I,3,1)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=V/VX(2)				// @TOT(<<[LN]ONP-[LN]SCHNUM*[LNLS4]SBAL>>)/@TOT([LNLS4]SBAL,)
		}
	set VL=VL_$J("",91-VL.length())_$J(V,7,3)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,LN]FCPT

 type public Number FCPT,VO

 set FCPT=VO
	quit

VP2	// Column post-processor - [SYSDEV,COL]FCPNAM

 type public Number FCPT
 type public String V
 
 if '((FCPT=1)!(FCPT=3)) set V=""
	quit

VP3	// Column post-processor - [SYSDEV,COL]FCCLS

 type public Number FCPT
 type public String V

 if '((FCPT=1)!(FCPT=3)) set V=""
	quit

VP4	// Column post-processor - @TOT([LNLS4]SBAL,0,$,13)

 type public Number LNS,VT()

 set LNS=VT(0)+VT(1)+VT(2)+VT(3)+VT(4)
	quit
