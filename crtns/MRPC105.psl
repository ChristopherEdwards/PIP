MRPC105(RETURN,VERSN,CID,curr,EFD,BRCD)
  /*
	ORIG: MALTEPESA - 04/19/2000
	DESC: Problem Loan Sub-Account Close Out

	---- Comments --------------------------------------------------------

	 ARGUMENTS:
	. RETURN     Loan Sub Account Number	     /TYP=T/REQ/MECH=REFNAM:W
 
	. VERSN      version number		     /TYP=N/REQ/MECH=VAL
			current version=1
 
	. CID	     Parent Account Number	     /TYP=N/REQ/MECH=VAL
 
	. curr	     Amounts of the Current Sub-account /TYP=N/REQ/MECH=VAL
 
 
	. EFD	     Effective Date		     /TYP=D/REQ/MECH=VAL
 
	. BRCD	     Branch Code		     /TYP=N/NOREQ/MECH=VAL
 
	This MRPC will be called from the fuo_save function for
	uo_63_problem_loan in PFW if the Close Sub-Accounts box
	has been checked. 
	
	It will invoke the new function fnv_63_plsubacct_closeout.  
	
	It will bring the current account amounts to zero and close out 
	the sub-accounts.  
	
	It will reset the LN.PAOI field on the customer 
	view loan to be 0 to indicate there are no
	open problem loan sub-accounts attached to this loan.  
	
	It will replace the GL
	set code on the customer view loan with the GL set code
	from the current account.  


	These are pieces that the curr
	parameter will be build from:
	
	piece 1 - principal
	piece 2 - interest
	piece 3 - late charges
	piece 4 - fees
	 
	---- Revision History ------------------------------------------------

	03/14/07 - KumarSS - CR 25177
		   Removed Invalid Unicode Characters.

	06/22/05 - SwarnalathaP - 16394
		   Modified the PROC section to remove an extra parenthesis 
		   which was used while checking the number of records fetched 
		   in the object rs2.
	
	05/24/05 - Hillanbrand - 13281
	           Changed from "BA" to "CS" in Runtime.start since this is an 
	           MRPC and responds to clients, it should be doing TP in a 
	           client/server mode so that we don't respond to the client 
	           until the transaction has been hardened to the DB.
	           
	05/12/05 - Hillanbrand - 13281
	           Declared ER as Boolean instead of Number. Added error message
	           text where missing.
	
	05/09/05 - Hillanbrand - 13281
		   Rewrote per current PSL standards.
	
	04/02/03 - Spier - 51349
		   Removed NXTSEQ ^UHFECTH call and used method
		   db.nextval instead
		   Replaced $$^CUVAR use violation reported by auto code
		   review. Instead used literal CUVAR.BOBR since the
		   cuvar branch should not change once it is defined.
		   Removed old revision History


	*/

	Type Public Boolean ER
	Type Public String RM

	// Version number of client message is not compatible with server
	if $G(VERSN)'=1 quit $$ERRMSG^PBSUTL($$^MSG(2951))
	
	do Runtime.start("CS","trnreject")
 
	do PROC
	
	// If an error occurred, format error message
	if ER.get() do {  quit $$ERRMSG^PBSUTL($G(RM))
		do Runtime.rollback()
		} 

	do Runtime.commit()
	
	// Otherwise, format RETURN
	set RETURN=$$V2LV^MSG(.RETURN)
	
	quit ""
	
		
PROC	// Process 
	
	Type Public Boolean ER
	Type Public Number CID,	curr, BRCD
	Type Public String RM
	
	//Invalid Account ~p1
	if 'Db.isDefined("LN","CID") set ER=1,RM=$$^MSG(1259,$G(CID)) quit


	// Default effective date
	if %EffectiveDate="" set %EffectiveDate=%SystemDate
	else  set %EffectiveDate=$$DSJD^SCADAT(%EffectiveDate)



	type TranSet ts
	set ts=Class.new("TranSet")

	type RecordLN ln=Db.getRecord("LN","CID")
	type String CC, CRCD
	set CC=ln.cc
	set CRCD=ln.crcd

	if '$D(BRCD)!($G(BRCD)="") do {
		new user
		type RecordSCAU user=Db.getRecord("SCAU","UID=:%UserID")
		set BRCD=user.brcd
		if BRCD'="" quit
		set BRCD=CUVAR.BOBR
	}

	
	type Number chgcid, currcid, nonacrcid
 	type String A
 
	// find the appropriate subaccount based upon a customer
	//view account number and status
 
	type ResultSet rs=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=1")
	//Posting transaction code not defined. Posting halted for sub-account
	if rs.isEmpty() set ER=1,RM=$$^MSG(4312) quit
	//quit with error message "No opened problem loan sub-accounts
	set A=rs.next(),currcid=rs.getRow()

	type ResultSet rs1=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=2")
	//Posting transaction code not defined. Posting halted for sub-account
	if rs1.isEmpty() set ER=1,RM=$$^MSG(4312) quit
	set A=rs1.next(),nonacrcid=rs1.getRow()

	type ResultSet rs2=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=3")
	//Posting transaction code not defined. Posting halted for sub-account
	if rs2.isEmpty() set ER=1,RM=$$^MSG(4312) quit
	set A=rs2.next(),chgcid=rs2.getRow()


	type RecordLN ln1=Db.getRecord("LN","currcid")
	type RecordLN ln2=Db.getRecord("LN","nonacrcid")
	type RecordLN ln3=Db.getRecord("LN","chgcid")
 
 
	// move GL set code from the current sub-account to the
	//  primary account
 	set ln.glsc=ln1.glsc

 
	// Problem sub-account fee plan must be defined in institution
	//variables
	#if CUVAR.PLFEE="" 
	set ER=1 quit RM=$$^MSG(4376)
	#endif
 
	//Effective date may not be prior to ~p1
	if ln1.odd>%EffectiveDate do {  quit
		set ER=1
		type String date 
		set date=$$DAT^%ZM(%EffectiveDate,"MM/DD/YEAR") 
		set RM=$$^MSG(878,date)
		}
	 
	//define all the accounts offsets on the customer view
	type RecordUTBLGLSC uglsc1=Db.getRecord("UTBLGLSC","ln1.glsc")
	type RecordUTBLGLSC uglsc2=Db.getRecord("UTBLGLSC","ln2.glsc")
	type RecordUTBLGLSC uglsc3=Db.getRecord("UTBLGLSC","ln3.glsc")	      
	
	type String xcurrfee, xcurrint, xcurrltchg, xcurrprin
	type String TCMT, TSO
	
	if $G(curr)'="" do {
		set xcurrprin=$P(curr,$C(9),1)
		set xcurrint=$P(curr,$C(9),2)
		set xcurrltchg=$P(curr,$C(9),3)
		set xcurrfee=$P(curr,$C(9),4)
	}
	
	//get TR code from product
 	type RecordPRODCTL prod=Db.getRecord("PRODCTL","TYPE=ln.type")

	if prod.crtrci="" do { quit
		set ER=1
		// Posting transaction code not defined. Posting halted for sub-account
		set RM=$$^MSG(4312)
	}

	// Bring all the balances on the current problem loan sub-account to 0
	
	if $G(xcurrprin) do {  quit:ER
		set TCMT=$$TCMTFM^ACNFUNCS(ln.cid,"LN","CRNTBAL",ln.crntbal,0,%EffectiveDate) 
		set TSO="",TSO=$$FIELDIN^UTSO(TSO,"CRNP",xcurrprin)
		// Posting transaction code not defined. Posting halted for sub-account
		if prod.crtrpr="" set ER=1,RM=$$^MSG(4312,currcid) quit
		do SETTR(currcid,prod.crtrpr,1,xcurrprin,%EffectiveDate,TSO,"",.ts)
		//Posting offset account not defined. Posting halted for sub-account
		if uglsc1.lglpo="" set ER=1,RM=$$^MSG(4311,currcid) quit
		do SETTR(uglsc1.lglpo,"MDR",0,xcurrprin,%EffectiveDate,TSO,"",.ts)
		do hist(TCMT)
		}
	
	if $G(xcurrint) do {  quit:ER 
		set TCMT=$$TCMTFM^ACNFUNCS(CID,"LN","CRNTINT",ln.crntint,0,%EffectiveDate)
		set TSO="",TSO=$$FIELDIN^UTSO(TSO,"CRNI",xcurrint)

		//Posting transaction code not defined. Posting halted for sub-account
		if prod.cradin set ER=1,RM=$$^MSG(4312,currcid) quit
		do SETTR(currcid,prod.cradin,1,xcurrint,%EffectiveDate,TSO,"",.ts)

		do SETTR(uglsc1.lglpo,"MDR",0,xcurrint,%EffectiveDate,TSO,"",.ts)
		do hist(TCMT)
		}
	
	if $G(xcurrltchg) do {  quit:ER 
		set TCMT=$$TCMTFM^ACNFUNCS(CID,"LN","CRNTLC",ln.crntlc,0,%EffectiveDate)
		set TSO="",TSO=$$FIELDIN^UTSO(TSO,"LCHGADJ")
		set TSO=$$FIELDIN^UTSO(TSO,"CRNLC",xcurrltchg)
		// set up TR array
		do SETTR(currcid,prod.crtrpe,1,xcurrltchg,%EffectiveDate,TSO,"",.ts)

		do SETTR(uglsc1.lglpo,"MDR",0,xcurrltchg,%EffectiveDate,TSO,"",.ts)
		do hist(TCMT)
		}	
	
	if $G(xcurrfee) do {  quit:ER
		set TCMT=$$TCMTFM^ACNFUNCS(CID,"LN","CRNTFEE",ln.crntfee,0,%EffectiveDate)
		set TSO="",TSO=$$FIELDIN^UTSO(TSO,"LNFEEIN",CUVAR.PLFEE_":"_xcurrfee)
		set TSO=$$FIELDIN^UTSO(TSO,"CRNFEE",currcid)
		// set up TR array
		do SETTR(currcid,prod.crtrmfr,1,xcurrfee,%EffectiveDate,TSO,TCMT,.ts)

		do SETTR(uglsc1.lglpo,"MDR",0,xcurrfee,%EffectiveDate,TSO,TCMT,.ts)
		do hist(TCMT)
			}	

	if $G(xcurrprin)!$G(xcurrint)!$G(xcurrltchg)!$G(xcurrfee) do POST(.ts)
 
	if ER quit 
 
	
	// set up all the TR arrays to close sub-accounts
        
	set TSO="",TSO=$$FIELDIN^UTSO(TSO,"CRNP")
	// close the current account
	set TCMT=$$^MSG(55,currcid)
	do SETTR(currcid,prod.crtrci,1,0,%EffectiveDate,TSO,TCMT,.ts)
	do SETTR(uglsc1.lglpo,"MDR",0,0,%EffectiveDate,TSO,TCMT,.ts)
  	do hist(TCMT) quit:ER

	//close the non-accrual account
	set TCMT="",TCMT=$$^MSG(55,nonacrcid)
	set TSO="",TSO=$$FIELDIN^UTSO(TSO,"NAP")
	do SETTR(nonacrcid,prod.crtrci,1,0,%EffectiveDate,TSO,TCMT,.ts)
	do SETTR(uglsc2.lglpo,"MDR",0,0,%EffectiveDate,TSO,TCMT,.ts)
	do hist(TCMT) quit:ER
	
	//close the charge-off account
	set TCMT="",TCMT=$$^MSG(55,chgcid)
	set TSO="",TSO=$$FIELDIN^UTSO(TSO,"COP")
	do SETTR(chgcid,prod.crtrci,1,0,%EffectiveDate,TSO,TCMT,.ts)
	do SETTR(uglsc3.lglpo,"MDR",0,0,%EffectiveDate,TSO,TCMT,.ts)
	do hist(TCMT) quit:ER
	do POST(.ts) quit:ER

	set ln.paoi=0
	set ln.pcidstat=""
	
	do ln.save()


	quit

 
SETTR(xcid,ETC,ITC,TAMT,%EffectiveDate,TSO,TCMT,TranSet ts)  // Private Create Transaction

 
	/* Create closeoff transactions Build Transaction object
 
	ARGUMENTS:
 
		.CID    Account number		   /TYP=N/REQ/MECH=VAL
		.ETC    External transaction code  /TYP=T/REQ/MECH=VAL
 
		.ITC    Internal transaction code  /TYP=T/REQ/MECH=VAL
 
		.TAMT   Transaction amount         /TYP=$/REQ/MECH=VAL
 
		.%EffectiveDate    Effective Date  /TYP=D/REQ/MECH=VAL
		.TSO    Transaction source
		.TCMT   Transaction comment	   /TYP=T/NOREQ/MECH=VAL
 
	RETURNS:
 
		ttx()     Transaction object				   */


	type Public String CC, CRCD 
	type String x

	type RecordTTX ttx
	set ttx=Class.new("RecordTTX")
	set ttx.cid=xcid
	set ttx.itc=ITC
	set ttx.etc=ETC
	set ttx.tamt=0
	set ttx.tjd=%SystemDate
	set ttx.tlo=%UserStation
	set ttx.tso=TSO
	set ttx.tcmt=TCMT
	set ttx.efd=%EffectiveDate
	set ttx.cc=CC
	set ttx.crcd=CRCD
	set x=ts.copyTran(ttx)
	quit
 
POST(TranSet ts)
	type Public Number BRCD
	type String par
	set par("IPMODE")=3
	set par("OPTION")=2
	do ts.postTSet(%SystemDate,BRCD,.par)
	quit

hist(TCMT)      // update history record on the customer view account
	type Public Number CID

	type RecordHIST hist=Class.new("RecordHIST")
	set hist.cid=CID
	set hist.tseq=Db.nextVal("HIST","CID")
	set hist.tcmt=TCMT
	set hist.tjd=%SystemDate
	set hist.efd=%EffectiveDate
	do hist.save()
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60703^23240^Sudanthiran S. Kumar^9745"	// Signature - LTD^TIME^USER^SIZE
