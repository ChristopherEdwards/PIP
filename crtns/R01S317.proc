R01S317	// SCA325 - Loan Renegotiation Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:47 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA325"
	set RN="Loan Renegotiation Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|255||[LN]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN3")="|255||[LN]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""L"""""":NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN4")="|255||[LN]TYPE|[PRODDFTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN5")="|255||[LN]MDT|||D EXT^DBSQRY||T|Maturity date|||||"

	set %READ="IO/REQ,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %NOCLOSE,%NOOPEN,%TIM,BTPMT,CONAM,M,PGM,RID,RN,RTPMT,TPMT,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA325",RN="Loan Renegotiation Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA325","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[SYSDEV,LN]CLS=""L""",SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]BOO "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]GRP "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[LN]MDT "_VIN5,SEQ=SEQ+1
		set DQQRY(SEQ)="[SYSDEV,LN]STAT'=4",SEQ=SEQ+1
		set DQQRY(SEQ)="[SYSDEV,LN]MDT'<<<TJD>>",SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LN,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC2|"_"Branch of Ownership"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Product Group"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Product Type"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Maturity date"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Renegotiation Report"
		set VBNRINFO("PGM")="R01S317"
		set VBNRINFO("RID")="SCA325"
		set VBNRINFO("TABLES")="LN,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LN]BOO"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LN]GRP"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LN]TYPE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LN]CLS"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LN]MDT"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LN]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LN.BOO,LN.GRP,LN.TYPE,LN.CLS,LN.MDT,LN.CID,CIF.BOO"
	set VSELECT=VSELECT_",LN.BALCMP,LN.EBBAL,LN.DIST1ND,LN.PMTPI,LN.IRN,LN."
	set VSELECT=VSELECT_"NAM,CIF.PAD1,CIF.PAD2,CIF.PAD3,CIF.PCSZ"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LN,CIF",VWHERE,"LN.BOO,LN.GRP,LN.TYPE,LN.CLS,LN.MDT,LN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17
	set vc1=V.piece($C(9),1)			// LN.BOO
	set vc2=V.piece($C(9),2)			// LN.GRP
	set vc3=V.piece($C(9),3)			// LN.TYPE
	set vc4=V.piece($C(9),4)			// LN.CLS
	set vc5=V.piece($C(9),5)			// LN.MDT
	set vc6=V.piece($C(9),6)			// LN.CID
	set vc7=V.piece($C(9),7)			// CIF.BOO
	set vc8=V.piece($C(9),8)			// LN.BALCMP
	set vc9=V.piece($C(9),9)			// LN.EBBAL
	set vc10=V.piece($C(9),10)			// LN.DIST1ND
	set vc11=V.piece($C(9),11)			// LN.PMTPI
	set vc12=V.piece($C(9),12)			// LN.IRN
	set vc13=V.piece($C(9),13)			// LN.NAM
	set vc14=V.piece($C(9),14)			// CIF.PAD1
	set vc15=V.piece($C(9),15)			// CIF.PAD2
	set vc16=V.piece($C(9),16)			// CIF.PAD3
	set vc17=V.piece($C(9),17)			// CIF.PCSZ
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public Number TPMT,BTPMT,RTPMT
	set (TPMT,BTPMT,RTPMT)=0
	do Db.fastDelete("TMPRPT1","PID=:%ProcessID")
	quit

VRPOST	// Report post-processor

	type public String %NOOPEN,%NOCLOSE,PGM,RM,RID 
	set RM=$$^MSG(6475)
	set %NOOPEN=""
	if $$INTRACT^%ZFUNC,$P=IO write $$MSG^%TRMVT("",,1)
	set RID="SCA325A" do ^URID 
 	if PGM.length() do V0^@PGM
 	set %NOCLOSE=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc8,vc9
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+vc8			// @TOT([LN]BALCMP)
	set VT(6,2,1)=VT(6,2,1)+vc9			// @TOT([LN]EBBAL)
	quit

VSUM2	// Summary
	type public String %NOCLOSE,%NOOPEN,%TIM,BTPMT,I,IOSL,M,PGM,RID,RM,RTPMT,TPMT,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL="      "_"BRANCH "_vc7_" TOTAL:"
	set V=VT(2)					// @CNT(,N,4)
	set VL=VL_$J("",30-VL.length())_$J(V,4)
	set V=VT(2,1,1)					// @TOT([LN]BALCMP,)
	set VL=VL_$J("",36-VL.length())_$J($FN(V,",",2),15)
	set V=VT(2,2,1)					// @TOT([LN]EBBAL,)
	set V=$J($FN(V,",",2),15) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",53-VL.length())_V		// @TOT([LN]EBBAL,)
	do VOM
	quit

VDTL6	// Detail
	type public String %NOCLOSE,%NOOPEN,%TIM,BTPMT,IOSL,M,PGM,RID,RM,RTPMT,TPMT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set V=vc6,VO=V set V=$J(V,12) do VP2 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",14-VL.length())_$J($$DAT^%ZM(vc5),10)
	set VL=VL_$J("",25-VL.length())_$J($$DAT^%ZM(vc10),10)
	set VL=VL_$J("",36-VL.length())_$J($FN(vc8,",",2),15)
	set V=vc9,VO=V set V=$J($FN(V,",",2),16) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",52-VL.length())_V		// [SYSDEV,LN]EBBAL
	set V=vc11,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),11)
	set VL=VL_$J("",69-VL.length())_V		// [SYSDEV,LN]PMTPI
	set VL=VL_$J("",82-VL.length())_$J(vc12,6,3)
	set VL=VL_$J("",90-VL.length())_$E(vc13,1,27)
	do VOM
	set VL="                                                                                          "_$E(vc14,1,40)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                          "_$E(vc15,1,40)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                          "_$E(vc16,1,40)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                          "_$E(vc17,1,40)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit

VSUM6	// Summary
	type public String %NOCLOSE,%NOOPEN,%TIM,BTPMT,I,IOSL,M,PGM,RID,RM,RTPMT,TPMT,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP5 quit:VFMQ!verror.get()  set V=M_" TOTAL:" set VL="              "_V
	set V=VT(6)					// @CNT(,N,4)
	do VP6 quit:VFMQ!verror.get()  set V=$J(V,4)
	set VL=VL_$J("",30-VL.length())_V		// @CNT(,N,4)
	set V=VT(6,1,1)					// @TOT([LN]BALCMP,)
	do VP7 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),15)
	set VL=VL_$J("",36-VL.length())_V		// @TOT([LN]BALCMP,)
	set V=VT(6,2,1)					// @TOT([LN]EBBAL,)
	do VP8 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),15) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",53-VL.length())_V		// @TOT([LN]EBBAL,)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%NOCLOSE,%NOOPEN,%TIM,BTPMT,CONAM,M,PGM,RID,RM,RN,RTPMT,TPMT,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="LOANS RENEGOTIATION REPORT  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="BRANCH: "
	set VL=VL_$J("",9-VL.length())_$J(vc7,5)
	set VL=VL_$J("",16-VL.length())_"GROUP: "
	set VL=VL_$J("",23-VL.length())_$E(vc2,1,4)
	set VL=VL_$J("",29-VL.length())_"TYPE: "
	set VL=VL_$J("",36-VL.length())_$J(vc3,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"ACCOUNT                                CURRENT        PROJECTED       P & I     INT  NAME"
	do VOM
	set VL="      "_"NUMBER     MATURES   NEXT DUE         BALANCE          BALANCE     PAYMENT    RATE  ADDRESS"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %NOCLOSE,%NOOPEN,%TIM,BTPMT,M,PGM,RID,RM,RTPMT,TPMT,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="              "_"REPORT TOTAL:"
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4)+VT(5)+VT(6))	// @CNT(0,N,4)
	set VL=VL_$J("",30-VL.length())_$J(V,4)
	set V=0						// @TOT([LN]BALCMP,0)
	for I=0:1:6 set V=V+VT(I,1,1)
	set VL=VL_$J("",36-VL.length())_$J($FN(V,",",2),15)
	set V=0						// @TOT([LN]EBBAL,0)
	for I=0:1:6 set V=V+VT(I,2,1)
	set V=$J($FN(V,",",2),15) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",53-VL.length())_V		// @TOT([LN]EBBAL,0)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - @TOT([LN]EBBAL,,E,15)

	type public Number BTPMT,V
	if 'BTPMT set V=""
	set BTPMT=0
	quit

VP2	// Column post-processor - [SYSDEV,LN]CID

	type public String vc5,vc1,vc2,vc3,vc6
 type public String C,GRP,X
 type public Number CID,TYPE
 type Date MDT1
 type Number BOO
 
 set MDT1=vc5
 set X=MDT1.toString("MM/DD/YY")
 set C=X.piece("/",3)_X.piece("/",1)
 set BOO=vc1
 set GRP=vc2
 set TYPE=vc3
 set CID=vc6
 type RecordTMPRPT6 tmprpt6=Db.getRecord("TMPRPT6","PID=:%ProcessID,KEY1=:BOO,KEY2=:GRP,KEY3=:TYPE,KEY4=:C,KEY5=:MDT1,KEY6=:CID",1)
 do tmprpt6.setAuditFlag()
 set tmprpt6.data=""
 do tmprpt6.save()
 
	quit

VP3	// Column post-processor - [SYSDEV,LN]EBBAL

	type public String vc11
 	type public Number V

	if '(vc11) set V=""
	quit

VP4	// Column pre-processor - [SYSDEV,LN]PMTPI

	type public Number BTPMT,RTPMT,TPMT,V
 	set TPMT=TPMT+V
 	set BTPMT=BTPMT+V
 	set RTPMT=RTPMT+V
	quit

VP5	// Column pre-processor - Variable: M TOTAL:

	type public String vc5
 	type public Date X
	type public String MON,M
	set X=vc5
	set MON=$$MON^SCADAT(X,0)
 	if MON.length()=1 set MON="0"_MON
 	set M=$$YEAR^SCADAT(X,0)_"/"_MON
	quit

VP6	// Column pre-processor - @CNT(,N,4)

 	type public String TMP()
	type public Number M,V
	set TMP(M).piece("|",1)=(TMP(M).get()).piece("|",1)+V
	quit

VP7	// Column pre-processor - @TOT([LN]BALCMP,,E,15)

	type public String TMP()
	type public Number M,V 
	set TMP(M).piece("|",2)=(TMP(M).get()).piece("|",2)+V
	quit

VP8	// Column pre-processor - @TOT([LN]EBBAL,,E,15)

	type public String TMP()
	type public Number M,V
	set TMP(M).piece("|",3)=(TMP(M).get()).piece("|",3)+V
	type RecordTMPRPT1 tmprpt1=Db.getRecord("TMPRPT1","PID=:%ProcessID,KEY1=:M",1)
	if 'tmprpt1.getMode() do {
		set tmprpt1.data=TMP(M)
		do tmprpt1.save()
		}
	quit

VP9	// Column post-processor - @TOT([LN]EBBAL,,E,15)

	type public Number TPMT,V

	if 'TPMT set V=""
 	set TPMT=0
	quit

VP10	// Column post-processor - @TOT([LN]EBBAL,0,E,15)

	type public Number RTPMT,V
	if 'RTPMT set V=""
	quit
