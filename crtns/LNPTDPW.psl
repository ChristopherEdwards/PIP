LNPTDPW		/*
	---- Revision History ------------------------------------------------

	11/17/06 - Hillanbrand CR 21192
		   Modified AMTPDC subsection changed set DEPBAL=dep.bal
		   to set DEPBAL=ttx(1).prin since the closeout transaction of
		   the deposit pledged account could be something other than bal.
		   Also modified AMTDPDC section when CURTYP is a 2. Change
		   if LPAD '>DPABAL set LPAD=PAYOFF-LPAP quit to
		   if LPAD>DPABAL set LPAD=PAYOFF-LPAP quit since above this
		   check the code will set LPAD = DPABAl and the transaction
		   amount should default in as the deposit close out account's
		   balance.
		   
	06/29/06 - NATRAJAH - CR 21345
		   Modified LOANCIDP section, to avoid processing the closed 
		   loan accounts.
		   
	03/24/06 - TELIV - CR 19926
		   Modifed all sections to handle the TTX as an array created 
		   during Transaction posting by MRPC076.
	
	06/13/03 - CARROLLJ - 51349
		   Added recordttx as a parameter into most linetags and
		   removed old revision history.	
	----------------------------------------------------------------------

	*/
	quit

	/*
	Return the first loan with the earliest maturity date which has
	CID as its pledged account entry point from transaction set
	*/

LOANCID()

	type public RecordTTX ttx()
	type public Number SEQ
	new CID

	set ttx(1).tjd=%SystemDate
	set ttx(1).brcd=CUVAR.bobr
	set ttx(1).uid=0
	set CID=ttx(1).cid	// Hunt the Loan A/C Based on the DEP A/C

	type RecordDEP dep=Db.getRecord("DEP","CID")
	if 'dep.pldg set ER=1,RM=$$^MSG(3524) quit ""

	quit $$LOANCIDP()

Public	LOANCIDP()	//  public entry point (with CID defined)
	new MINDATE,MAXRATE,ln,LNCIDX,LNCID,XDATE
	set LNCIDX=""
	set XDATE=99999999
	set MINDATE=XDATE,MAXRATE=-1
	type RecordLN ln
	type ResultSet rs=Db.select("CID","LNCOL","PLDGACN=:CID")
	for  quit:'rs.next()  do {
		set LNCID=rs.getCol(1)
		set ln=Db.getRecord("LN","LNCID")
		if ln.stat=4 quit
		if ln.mdt="",MINDATE=XDATE,ln.irn>MAXRATE set LNCIDX=LNCID,MAXRATE=ln.irn
		if ln.mdt="" quit
		if ln.mdt<MINDATE set MINDATE=ln.mdt,LNCIDX=LNCID,MAXRATE=ln.irn quit
		if ln.mdt=MINDATE,ln.irn>MAXRATE set LNCIDX=LNCID,MAXRATE=ln.irn quit
 		}
	quit LNCIDX

PAYOFF(RecordLN ln,RecordTTX ttx)	// private subroutine - PAYOFF, return loan PAYOFF amount

	new PAYOFF,PCM,LNBAL
	set PCM=ln.pcm
	set LNBAL=ln.bal
	set ER=0
	do PAYOFF^LNPO2(.ln,0,.ttx)
	quit PAYOFF

	/*
	Return the amount for a loan payment/loan payoff for a pledged
	account withdrawal
	*/

AMTPDW()    //
 
	type public RecordTTX ttx()
	type public Number SEQ

 	new LNCID,X,FPLDG,PCTPLDG,LPA,COLLNUM,CID,TAMT

	set ttx(1).tjd=%SystemDate
	set ttx(1).brcd=CUVAR.bobr
	set ttx(1).uid=0
	set CID=ttx(1).cid
	set TAMT=ttx(1).tamt

	set LNCID=$$LOANCID()
	
	if LNCID="" quit -1

	type RecordDEP dep=Db.getRecord("DEP","CID")
	type RecordLN ln=Db.getRecord("LN","LNCID")

	type ResultSet rs=Db.select("FPLDG,PCTPLDG,COLL","LNCOL","CID=:LNCID AND PLDGACN=:CID")	
	set X=rs.next()
	set FPLDG=rs.getCol(1)
	set PCTPLDG=rs.getCol(2)
	set COLLNUM=rs.getCol(3)

	type RecordCOL colrec=Db.getRecord("COL","COLLNUM")

	if FPLDG set PCTPLDG=100

	new DEPBAL,LNBAL
	// convert loan balance to deposit's crcd
	set LNBAL=ln.bal
	do CAMT^CRCDUTL(ln.crcd,dep.crcd,.LNBAL)

	set DEPBAL=dep.balavl+colrec.pldgamt
	if colrec.pldgcb=0 set DEPBAL=dep.bal
	if colrec.pldgcb=1 set DEPBAL=dep.balcol

	set LPA=LNBAL-((DEPBAL-TAMT)*PCTPLDG/100)

	if LPA>TAMT set LPA=TAMT

	do CAMT^CRCDUTL(dep.crcd,ln.crcd,.LPA)
	set LPA=$$^SCARND(LPA,,LNCID)
	if LPA'>0 quit -1   // - values tell the MRPC not to post to teller
	quit LPA

	/*
	For a pledged account withdrawal,
	return either the loan payment code, or, if all the loan is paid off,
	the loan payoff code.
	*/

ETCPDW()	//

	type public RecordTTX ttx()
	type public Number SEQ

	type Public Cache %CACHE()

	new LNCID,LPA,TYPE,LNBAL
	set LNCID=$$LOANCID()

	set LPA=$$AMTPDW()   // in loan's currency
	type RecordLN ln=Db.getRecord("LN","LNCID")
	type RecordPRODCTL prod=%CACHE("PRODCTL").getRecord("PRODCTL",":ln.type")
	if LPA=$$PAYOFF(.ln,.ttx(1)) quit prod.crtrci
	quit prod.crtrgp

AMTPDC()	// Return the loan payment/payoff amount for a pledged account closeout

	type public RecordTTX ttx()
	type public Number SEQ

	new LPA,LNCID,DEPBAL,CID,PAYOFF

	set ttx(1).tjd=%SystemDate
	set ttx(1).brcd=CUVAR.bobr
	set ttx(1).uid=0
	set CID=ttx(1).cid

	set LNCID=$$LOANCID()
	if LNCID="" quit -1
	type RecordLN ln=Db.getRecord("LN","LNCID")
	set PAYOFF=$$PAYOFF(.ln,.ttx(1))

	type RecordDEP dep=Db.getRecord("DEP","CID")
	set LPA=PAYOFF
	do CAMT^CRCDUTL(ln.crcd,dep.crcd,.LPA)

	set DEPBAL=ttx(1).prin
	if LPA>DEPBAL do {
		set LPA=DEPBAL
		do CAMT^CRCDUTL(dep.crcd,ln.crcd,.LPA)  // return in loan's currency
		set LPA=$$^SCARND(LPA,,LNCID)
		}
	else  set LPA=PAYOFF
	quit LPA

	/*
	For a pledged account closeout,
	return either the loan payment code, or, if all the loan is paid off,
	the loan payoff code.
	*/

ETCPDC()	//	

	type public RecordTTX ttx()
	type public Number SEQ

	type public Cache %CACHE()

	new LNCID,LPA,TYPE

	set LNCID=$$LOANCID()
	set LPA=$$AMTPDC()    // in ln.crcd
	type RecordLN ln=Db.getRecord("LN","LNCID")
	type RecordPRODCTL prod=%CACHE("PRODCTL").getRecord("PRODCTL",":ln.type")
	if LPA=$$PAYOFF(.ln,.ttx(1)) quit prod.crtrci
	quit prod.crtrgp
	
	/*
	Return the Deposit Payoff account for the loan which uses CID for its
	collateral.
	*/

DPPYCID()	// entry point from tran set

	type public RecordTTX ttx()
	type public Number SEQ

	
	new LNCID,ln
	set LNCID=$$LOANCID()
	type RecordLN ln=Db.getRecord("LN","LNCID")
	quit ln.dpa

	/*
	Return the general purpose debit transaction code for the deposit
	payoff account for the loan which uses CID for its collateral
	*/

ETCDPDC()	

	type public RecordTTX ttx()
	type public Number SEQ

	type Public Cache %CACHE()

	new DPACID,dpa,TYPE,prod
	set DPACID=$$DPPYCID()
	if DPACID="" quit $$ETCPDC()  // return dummy tran code
	type RecordDEP dpa=Db.getRecord("DEP","DPACID")
	type RecordPRODCTL prod=%CACHE("PRODCTL").getRecord("PRODCTL",":dpa.type")
	quit prod.drtrgp

	/*
	Return the loan payment/payoff amount from the deposit payoff account
	when a pledged account is closed
	*/

public	AMTDPDC(CURTYP)	  // CURTYP=1 use dpa.crcd, CURTYP=2 use ln.crcd

	type public RecordTTX ttx()
	type public Number SEQ

	new DPACID,LNCID,LPAP,LPAD,CID,DPABAL,PAYOFF

	set ttx(1).tjd=%SystemDate
	set ttx(1).brcd=CUVAR.bobr
	set ttx(1).uid=0
	set CID=ttx(1).cid

	set DPACID=$$DPPYCID()

	set LNCID=$$LOANCID()
	if LNCID="" quit -1
	type RecordLN ln=Db.getRecord("LN","LNCID")

	// all in loan's currency
	set LPAP=$$AMTPDC()
	set PAYOFF=$$PAYOFF(.ln,.ttx(1))
	set LPAD=PAYOFF-LPAP

	if DPACID="" do { quit -1
		if LPAD>0 set OVR(CID,"OVR","PLDGPAY")=""
		}

	type RecordDEP dpa=Db.getRecord("DEP","DPACID")

	// convert to dpa currency
	do CAMT^CRCDUTL(ln.crcd,dpa.crcd,.LPAD)
	set DPABAL=dpa.bal
	if LPAD>DPABAL set OVR(CID,"OVR","PLDGPAY")="",LPAD=DPABAL
	if CURTYP=2 do {
		if LPAD>DPABAL set LPAD=PAYOFF-LPAP quit
		do CAMT^CRCDUTL(dpa.crcd,ln.crcd,.LPAD)
		set LPAD=$$^SCARND(LPAD,,LNCID)
		}
	if CURTYP=1 set LPAD=$$^SCARND(LPAD,,CID)

	if LPAD=0 set LPAD=-1   // MRPC will ignore -1

	quit LPAD

	/*
	Return either the loan payment or the loan payoff code depending on
	whether the total amounts from the pledged account and the deposit
	payoff account can pay off all of the loan.
	*/

ETCDPCC()	//	
	type public Cache %CACHE()
	type public RecordTTX ttx()
	type public Number SEQ

	new LPAD,LPAP,LNCID,TYPE
	set LPAP=$$AMTPDC()       // pledge payoff in ln.crcd
	set LPAD=$$AMTDPDC(2)  // get DPA amt in ln.crcd
	set LNCID=$$LOANCID()
	type RecordLN ln=Db.getRecord("LN","LNCID")
	type RecordPRODCTL prod=%CACHE("PRODCTL").getRecord("PRODCTL",":ln.type")
	if LPAP+LPAD=$$PAYOFF(.ln,.ttx(1)) quit prod.crtrci  		// payoff trancode
	quit prod.crtrgp 				// payment trancode

	





 #OPTION ResultClass ON
Public String vSIG()	quit "60590^56859^Laura Hillanbrand^7540"	// Signature - LTD^TIME^USER^SIZE
