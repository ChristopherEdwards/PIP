R01S065	// LETSTMTREP - Statement Extract Records
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:37 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"

	set RID="LETSTMTREP"
	set RN="Statement Extract Records"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN3")="|255||[LETSTMT]SJD|[LETSTMT]SJD:DISTINCT:NOVAL||D EXT^DBSQRY||T|System Processing Date|||||"
	set %TAB("VIN4")="|255||[LETSTMT]CO|[UTBLCO]:NOVAL||D EXT^DBSQRY||T|Company Code/Affinity Group|||||"
	set %TAB("VIN5")="|255||[LETSTMT]FORM|[LETSTMT]FORM:DISTINCT:NOVAL||D EXT^DBSQRY||T|Form ID|||||"
	set %TAB("VIN6")="|255||[LETSTMT]VAR|[LETSTMT]VAR:DISTINCT:NOVAL||D EXT^DBSQRY||T|Form Variation Number|||||"

	set %READ="IO/REQ,VIN3#0,VIN4#0,VIN5#0,VIN6#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN3,VIN4,VIN5,VIN6
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,DESC,RID,RN,TYDES,VL,VLOF,VRF(),VSTATS(),XXX,ZTOTDES,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="LETSTMTREP",RN="Statement Extract Records"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","LETSTMTREP","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[LETSTMT]CID#13#12,[ACN]GRP#30#4,[ACN]TYPE#38#4"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="CID'=0",SEQ=SEQ+1
		set DQQRY(SEQ)="ACN'=999999999999",SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LETSTMT]SJD "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[LETSTMT]CO "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[LETSTMT]FORM "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[LETSTMT]VAR "_VIN6,SEQ=SEQ+1
		set DQQRY(SEQ)="[LETSTMT]RECTYPE=300,400",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LETSTMT,ACN,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",3)="WC2|"_"System Processing Date"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Company Code/Affinity Group"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Form ID"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Form Variation Number"_"|VIN6|"_VIN6.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Statement Extract Records"
		set VBNRINFO("PGM")="R01S065"
		set VBNRINFO("RID")="LETSTMTREP"
		set VBNRINFO("TABLES")="LETSTMT,ACN,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LETSTMT]SJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LETSTMT]CO"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LETSTMT]FORM"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LETSTMT]VAR"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LETSTMT]ACN"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LETSTMT]STMGRP"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,LETSTMT]SEQ"
		set VBNRINFO("ORDERBY",8)="[SYSDEV,LETSTMT]CID"
		set VBNRINFO("ORDERBY",9)="[SYSDEV,LETSTMT]RECTYPE"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:9 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LETSTMT.SJD,LETSTMT.CO,LETSTMT.FORM,LETSTMT.VAR,LE"
	set VSELECT=VSELECT_"TSTMT.ACN,LETSTMT.STMGRP,LETSTMT.SEQ,LETSTMT.CID,L"
	set VSELECT=VSELECT_"ETSTMT.RECTYPE,CIF.NAM,ACN.GRP,ACN.TYPE,ACN.CLS,AC"
	set VSELECT=VSELECT_"N.CID"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LETSTMT,ACN,CIF",VWHERE,"LETSTMT.SJD,LETSTMT.CO,LETSTMT.FORM,LETSTMT.VAR,LETSTMT.ACN,LETSTMT.STMGRP,LETSTMT.SEQ,LETSTMT.CID,LETSTMT.RECTYPE","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7="",vovc8="",vovc9=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc8,vc8,vovc9,vc9
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8,vovc9=vc9
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// LETSTMT.SJD
	set vc2=V.piece($C(9),2)			// LETSTMT.CO
	set vc3=V.piece($C(9),3)			// LETSTMT.FORM
	set vc4=V.piece($C(9),4)			// LETSTMT.VAR
	set vc5=V.piece($C(9),5)			// LETSTMT.ACN
	set vc6=V.piece($C(9),6)			// LETSTMT.STMGRP
	set vc7=V.piece($C(9),7)			// LETSTMT.SEQ
	set vc8=V.piece($C(9),8)			// LETSTMT.CID
	set vc9=V.piece($C(9),9)			// LETSTMT.RECTYPE
	set vc10=V.piece($C(9),10)			// CIF.NAM
	set vc11=V.piece($C(9),11)			// ACN.GRP
	set vc12=V.piece($C(9),12)			// ACN.TYPE
	set vc13=V.piece($C(9),13)			// ACN.CLS
	set vc14=V.piece($C(9),14)			// ACN.CID
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0,vs(8)=0,vs(9)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1,vskp(8)=1,vskp(9)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG5 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	if 'vskp(9).get() do VDTL9 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(9)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7,vc8,vovc8,vc9,vovc9
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8,vb9
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8,vb9)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,vb9=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,vb9=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,vb9=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,vb8=1,vb9=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,vb8=1,vb9=1
	if vb6!(+vovc6'=+vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,vb8=1,vb9=1
	if vb7!(+vovc7'=+vc7) set vs(8)=0,vh(8)=0,VD(7)=0,vb8=1,vb9=1
	if vb8!(+vovc8'=+vc8) set vs(9)=0,vh(9)=0,VD(8)=0,vb9=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(9) set vs(9)=1 do stat^DBSRWUTL(9)
	if 'vs(8) set vs(8)=1 do stat^DBSRWUTL(8)
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(9)=VT(9)+1
	quit

VHDG5	// Group Header
	type public String %MSKD,%TIM,CONAM,DESC,ER,IOSL,RID,RN,TYDES,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,XXX,ZTOTDES,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC,1,40) set VL=V
	set VL=VL_$J("",42-VL.length())_$E(vc3,1,12)
	do VOM
	set VL="" do VOM
	quit

VDTL5	// Detail
	type public String %TIM,DESC,IOSL,TYDES,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),XXX,ZTOTDES,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	quit:VD(5)  set VD(5)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(5)=0 do VHDG5 quit:VFMQ

	set VL=$J($$DAT^%ZM(vc1),10)
	set V=vc5,VO=V set V=$J(V,12) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",12-VL.length())_V		// [SYSDEV,LETSTMT]ACN
	set VL=VL_$J("",30-VL.length())_$J(vc6,3)
	set VL=VL_$J("",37-VL.length())_$E(vc10,1,40)
	do VOM
	quit

VSUM5	// Summary
	type public String %TIM,DESC,I,IOSL,TYDES,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),XXX,ZTOTDES,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(5)=0 do VHDG5 quit:VFMQ

	set VL="--------------------------------------------------------------------------------"
	do VOM
	set VL="Total Statements for "
	do VP3 quit:VFMQ!verror.get()  set V=$E(ZTOTDES,1,60) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",21-VL.length())_V
	do VOM
	quit

VSUM6	// Summary
	type public String %TIM,DESC,I,IOSL,TYDES,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),XXX,ZTOTDES,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	do VP5 quit:VFMQ!verror.get()  set V=$E(XXX,1,1) set VL=V
	do VOM
	quit

VDTL9	// Detail
	type public String %TIM,DESC,IOSL,TYDES,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),XXX,ZTOTDES,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc8,VO=V set V=$J(V,12) do VP6 quit:VFMQ!verror.get()  set VL="            "_V
	set VL=VL_$J("",29-VL.length())_$E(vc11,1,4)
	set VL=VL_$J("",37-VL.length())_$J(vc12,4)
	do VP7 quit:VFMQ!verror.get()  set V=$E(TYDES,1,35)
	set VL=VL_$J("",43-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DESC,RID,RN,TYDES,VL,XXX,ZTOTDES,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,40)
	set VL=VL_$J("",49-VL.length())_"Run Date: "
	set VL=VL_$J("",59-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=$E(RN,1,50)
	set VL=VL_$J("",51-VL.length())_"System: "
	set VL=VL_$J("",59-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page: "
	set VL=VL_$J("",76-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Company Code "
	set VL=VL_$J("",13-VL.length())_$E(vc2,1,12)
	do VOM
	set VL="" do VOM
	set VL=" "_"Statement  Customer                 Customer Name"
	do VOM
	set VL="   "_"Date     Account Number   Group   Product Type"
	do VOM
	set VL="================================================================================"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC

	type public String vc2,vc3,vc4
 // Only set ZTOT to zero at the beginning of the report
 // The logic to reset it to zero was moved to the postproceesor on ZTOTDESC

 type public Number ZTOT
 type public String DESC

 type String XCO,XFORM
 type Number XVAR

 set XCO=vc2
 set XFORM=vc3
 set XVAR=vc4
 type RecordUTBLFORMVAR utblformvar=Db.getRecord("UTBLFORMVAR","CO=:XCO,FORM=:XFORM,VAR=:XVAR")
 set DESC=utblformvar.des
 if 'ZTOT.exists() set ZTOT=0
	quit

VP2	// Column post-processor - [SYSDEV,LETSTMT]ACN

	type public String vc3
 // Number of statement tracked by customer for Combined Statements, but tracked
 // by account for Loan Billing Statements

 type public Number ZTOT

 set ZTOT=ZTOT+ $S(vc3="STMTCMB":1, vc3="STMTSNAP":1,1:0)

	quit

VP3	// Column pre-processor - Variable: ZTOTDES

 type public Number ZTOTDES,ZTOT
 type public String DESC

 set ZTOTDES=DESC.get()_": "_ZTOT.get()
	quit

VP4	// Column post-processor - Variable: ZTOTDES

 // Reset ZTOT after displaying it

 type public Number ZTOT

 set ZTOT=0
	quit

VP5	// Column pre-processor - Variable: XXX

 type public Number XXX

 set XXX=""
	quit

VP6	// Column post-processor - [SYSDEV,LETSTMT]CID

	type public String vc3
 // Number of statement tracked by customer for Combined Statements, but tracked
 // by account for Loan Billing Statements

 type public Number ZTOT

 set ZTOT=ZTOT+$S(vc3="STMTLNBILL":1,1:0)
	quit

VP7	// Column pre-processor - Variable: TYDES

	type public String vc13,vc12,vc14
 type public String TYDES

 type String CLS

 set CLS=vc13
 if CLS="D" set TYDES=$$TYPEDES^DEPCDI(vc12)
 if CLS="L" set TYDES=$$TYPEDES^LNCDI(vc14)
	quit
