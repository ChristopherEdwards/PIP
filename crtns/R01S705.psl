R01S705	// YER438 - T4RSP Year-End Detail Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:04 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String YEAR
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="YER438"
	set RN="T4RSP Year-End Detail Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String YEAR
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,BOO,CONAM,NAME,NAME1,NOFORM1,RID,RN,RNEI,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="YER438",RN="T4RSP Year-End Detail Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","YER438","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:6 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("T4RSPINF.PID,T4RSPINF.BOO,T4RSPINF.ACN,T4RSPINF.RPASEQ,T4RSPINF.PLANID,T4RSPINF.FORMSEQ,T4RSPINF.RPS,T4RSPINF.REA,T4RSPINF.WCP,T4RSPINF.OI,T4RSPINF.DRDTH,T4RSPINF.TD,T4RSPINF.NODOD,T4RSPINF.MULTIBEN,T4RSPINF.BENACN,T4RSPINF.NEGAMT,T4RSPINF.NOFORM,IRA.D6,IRA.NRD6,IRA.D26,IRA.NRD26,IRA.D27,IRA.NRD27,CIF.DOD,CIF.LNM,IRA.D37,IRA.RNEI","T4RSPINF,IRATYPE,CIF,IRA","T4RSPINF.NODETAIL NOT =1","T4RSPINF.PID,T4RSPINF.BOO,T4RSPINF.ACN,T4RSPINF.RPASEQ,T4RSPINF.PLANID,T4RSPINF.FORMSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27
	set vc1=V.piece($C(9),1)			// T4RSPINF.PID
	set vc2=V.piece($C(9),2)			// T4RSPINF.BOO
	set vc3=V.piece($C(9),3)			// T4RSPINF.ACN
	set vc4=V.piece($C(9),4)			// T4RSPINF.RPASEQ
	set vc5=V.piece($C(9),5)			// T4RSPINF.PLANID
	set vc6=V.piece($C(9),6)			// T4RSPINF.FORMSEQ
	set vc7=V.piece($C(9),7)			// T4RSPINF.RPS
	set vc8=V.piece($C(9),8)			// T4RSPINF.REA
	set vc9=V.piece($C(9),9)			// T4RSPINF.WCP
	set vc10=V.piece($C(9),10)			// T4RSPINF.OI
	set vc11=V.piece($C(9),11)			// T4RSPINF.DRDTH
	set vc12=V.piece($C(9),12)			// T4RSPINF.TD
	set vc13=V.piece($C(9),13)			// T4RSPINF.NODOD
	set vc14=V.piece($C(9),14)			// T4RSPINF.MULTIBEN
	set vc15=V.piece($C(9),15)			// T4RSPINF.BENACN
	set vc16=V.piece($C(9),16)			// T4RSPINF.NEGAMT
	set vc17=V.piece($C(9),17)			// T4RSPINF.NOFORM
	set vc18=V.piece($C(9),18)			// IRA.D6
	set vc19=V.piece($C(9),19)			// IRA.NRD6
	set vc20=V.piece($C(9),20)			// IRA.D26
	set vc21=V.piece($C(9),21)			// IRA.NRD26
	set vc22=V.piece($C(9),22)			// IRA.D27
	set vc23=V.piece($C(9),23)			// IRA.NRD27
	set vc24=V.piece($C(9),24)			// CIF.DOD
	set vc25=V.piece($C(9),25)			// CIF.LNM
	set vc26=V.piece($C(9),26)			// IRA.D37
	set vc27=V.piece($C(9),27)			// IRA.RNEI
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number YEAR
 if 'YEAR set YEAR=$$YEAR^SCADAT(%SystemDate)-1
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=YEAR
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc11,vc10,vc8,vc7,vc12,vc9
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+vc11			// @TOT([T4RSPINF]DRDTH)
	set VT(6,2,1)=VT(6,2,1)+vc10			// @TOT([T4RSPINF]OI)
	set VT(6,3,1)=VT(6,3,1)+vc8			// @TOT([T4RSPINF]REA)
	set VT(6,4,1)=VT(6,4,1)+vc7			// @TOT([T4RSPINF]RPS)
	set VT(6,5,1)=VT(6,5,1)+vc12			// @TOT([T4RSPINF]TD)
	set VT(6,6,1)=VT(6,6,1)+vc9			// @TOT([T4RSPINF]WCP)
	quit

VSUM3	// Summary
	type public String %TIM,BOO,I,IOSL,NAME,NAME1,NOFORM1,RNEI,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+10>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                        "_"Totals for Branch:"
	set VL=VL_$J("",43-VL.length())_$J(vc2,6)
	do VOM
	set VL="" do VOM
	set VL="                  "_"Total Number of Notices:"
	set V=VT(3)					// @CNT(,N,8)
	set VL=VL_$J("",43-VL.length())_$J(V,8)
	do VOM
	set VL="       "_"Total Refund of Premiums to Spouse:"
	set V=VT(3,4,1)					// @TOT([T4RSPINF]RPS,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="           "_"Total Refund of Excess Amounts:"
	set V=VT(3,3,1)					// @TOT([T4RSPINF]REA,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="   "_"Total Refund of W/D and Comm. Payments:"
	set V=VT(3,6,1)					// @TOT([T4RSPINF]WCP,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="                       "_"Total Other Income:"
	set V=VT(3,2,1)					// @TOT([T4RSPINF]OI,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="            "_"Total Deemed Receipt of Death:"
	set V=VT(3,1,1)					// @TOT([T4RSPINF]DRDTH,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="                       "_"Total Tax Deducted:"
	set V=VT(3,5,1)					// @TOT([T4RSPINF]TD,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,BOO,IOSL,NAME,NAME1,NOFORM1,RNEI,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+4>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$E(NOFORM1,1,1) set VL=V
	set VL=VL_$J("",2-VL.length())_$J(vc3,12)
	set VL=VL_$J("",15-VL.length())_$J(vc4,3)
	set VL=VL_$J("",19-VL.length())_$E(vc5,1,12)
	do VP2 quit:VFMQ!verror.get()  set V=$E(NAME,1,20)
	set VL=VL_$J("",32-VL.length())_V
	set VL=VL_$J("",53-VL.length())_$J($FN(vc7,",",2),12)
	set VL=VL_$J("",66-VL.length())_$J($FN(vc8,",",2),12)
	set VL=VL_$J("",79-VL.length())_$J($FN(vc9,",",2),12)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc12,",",2),12)
	set VL=VL_$J("",105-VL.length())_$J($FN(vc11,",",2),12)
	set VL=VL_$J("",118-VL.length())_$J($FN(vc10,",",2),12)
	do VOM
	set VL="                                "_$E(NAME1,1,20)
	set V=vc27,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),12) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",105-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BOO,CONAM,NAME,NAME1,NOFORM1,RID,RN,RNEI,VL,YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="  "_"Branch:"
	set VL=VL_$J("",10-VL.length())_$J(vc2,6)
	do VOM
	set VL="" do VOM
	set VL="      "_"Customer RPA                                    Refund Prem    Refund of    Withdrwl/        Tax     Death Disb/"
	do VOM
	set VL="        "_"Number Seq Plan ID      Name                    to Spouse   Excess Amt    Comm Pmts     Deducted   Tax Pd Amt    Other Inc"
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,BOO,NAME,NAME1,NOFORM1,RNEI,VPN,YEAR,vc2,vc27,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+10>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                            "_"Report Totals:"
	do VOM
	set VL="" do VOM
	set VL="                  "_"Total Number of Notices:"
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4)+VT(5)+VT(6))	// @CNT(0,N,8)
	set VL=VL_$J("",43-VL.length())_$J(V,8)
	do VOM
	set VL="       "_"Total Refund of Premiums to Spouse:"
	set V=0						// @TOT([T4RSPINF]RPS,0)
	for I=0:1:6 set V=V+VT(I,4,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="           "_"Total Refund of Excess Amounts:"
	set V=0						// @TOT([T4RSPINF]REA,0)
	for I=0:1:6 set V=V+VT(I,3,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="   "_"Total Refund of W/D and Comm. Payments:"
	set V=0						// @TOT([T4RSPINF]WCP,0)
	for I=0:1:6 set V=V+VT(I,6,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="                       "_"Total Other Income:"
	set V=0						// @TOT([T4RSPINF]OI,0)
	for I=0:1:6 set V=V+VT(I,2,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="            "_"Total Deemed Receipt of Death:"
	set V=0						// @TOT([T4RSPINF]DRDTH,0)
	for I=0:1:6 set V=V+VT(I,1,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="                       "_"Total Tax Deducted:"
	set V=0						// @TOT([T4RSPINF]TD,0)
	for I=0:1:6 set V=V+VT(I,5,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),12)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NOFORM1

	type public String vc13,vc14
 /* A flag that indicates no form was generated for a beneficiary
  due to multiple beneficiaries being defined.*/
 type public String NOFORM1
 set NOFORM1=" "

 /* If there is a value in any of the death disburtment buckets,
 but no date of death recorded, then display an asterick.*/
 
 if vc13 set NOFORM1="*"
 
 // If there are multiple beneficiaries, then display an asterick.
 if vc14 set NOFORM1="*"
	quit

VP2	// Column pre-processor - Variable: NAME

	type public String vc15,vc16,vc13,vc17,vc14,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26
 type Number benacn
 type public String NAME,NAME1

 set (NAME,NAME1)=""
 set benacn=vc15
 /*If a negative amount is going to be displayed in any of the fields on the
  report(s) associated with this record. */

 if vc16 do { quit
	set NAME="Tax Data Not Repted."
	set NAME1="Neg. Reportable Amt."
	}

 /* If death disburstments, and no date of death,
  Forms 1 and 2 were suppressed.*/
 if vc13,vc17 do { quit
	set NAME="Tax Data Not Repted."
	set NAME1="Date of Death missng"
	}

 // If there are multiple beneficiaries, a second form was not produced.
 
 if vc14 do { quit
	set NAME="Mult. beneficiaries."
	set NAME1="No form produced."
	}

 // If no form was printed, set NAME="NO TAX FORM-$0 ENTRY"
 if vc17=1 do { quit
	type Number TWOFORMS
	type public Number PRINTIT,SPI,SAVVFMQ,VFMQ
	set NAME="NO TAX FORNMM-$0 ENTRY"
	set TWOFORMS=(vc18-vc19>0)!(vc20-vc21>0)!(vc22-vc23>0)
	set PRINTIT=0,SAVVFMQ=VFMQ
	if vc24'="" set PRINTIT=1 quit    // Date of death exists
	if TWOFORMS,benacn="" set PRINTIT=1 quit            // No beneficiary
	if TWOFORMS,SPI set PRINTIT=1 quit                  // Spouse beneficiary
	if TWOFORMS,'SPI set PRINTIT=1 quit                 // Spouse not beneficiary
	if 'PRINTIT set VFMQ=1	
	} 
 if vc15 do { quit
	type RecordCIF cif=Db.getRecord("CIF","ACN=:benacn")
	set NAME=cif.lnm
	}
 set NAME=vc25

 /* If death distribution is after non-exempt start date and reported non-
  exempt interest is $.00 */
 if (vc26'>0),(vc18!vc20!vc22)>0 do { quit
	set NAME="Non-exmpt int=0, dth"
	set NAME1="w/d aft non-ex start"
	}
	quit

VP3	// Column pre-processor - Variable: RNEI

	type public String vc27,vc26
 type public Number RNEI,NOFORM1,V

 set RNEI=vc27
 if NOFORM1'="*" set V=vc26
 else  set V=0
	quit

VP4	// Column post-processor - Variable: RNEI

 type public Number RNEI
 set RNEI=""
	quit
