R01S338	// SCA349 - ACH Origination Expanded Detail Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:56 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA349"
	set RN="ACH Origination Expanded Detail Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[ACHDTL]COID|[ACH]:NOVAL||D EXT^DBSQRY||T|Company ID|||||"
	set %TAB("VIN2")="|255||[ACHBCH]QND|||D EXT^DBSQRY||T|Effective Entry Date|||||"
	set %TAB("VIN3")="|255||[ACHBCH]PTYPEF|||D EXT^DBSQRY||T|Payment Type|||||"
	set %TAB("VIN4")="|255||[ACHBCH]BORIG5|[UTBLACHRT]:NOVAL||D EXT^DBSQRY||T|Batch Originator|||||"
	set %TAB("VIN5")="|255||[ACHBCH]BATCH|[ACHBCH]BATCH:DISTINCT:NOVAL||D EXT^DBSQRY||T|Batch Number|||||"
	set %TAB("VIN6")="|255||[ACHFIL]FORIG|[UTBLACHRT]:NOVAL||D EXT^DBSQRY||T|File Originator|||||"
	set %TAB("VIN7")="|255||[ACHFIL]FDEST|[UTBLACHRT]:NOVAL||D EXT^DBSQRY||T|File Destination|||||"
	set %TAB("VIN8")="|255||[ACHFIL]QFDATE|||D EXT^DBSQRY||T|File Creation Date|||||"
	set %TAB("VIN9")="|255||[ACHFIL]QFTIME|||D EXT^DBSQRY||T|File Creation Time|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BORIGDEF,CONAM,FDATEF1,FDES,FORDES,NDF1,RID,RN,TDATEF1,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA349",RN="ACH Origination Expanded Detail Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA349","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[ACHBCH]COID8#13#10,[ACHBCH]CNAME#40#16,[ACHBCH]PTYPE#72#10,[ACHBCH]CED#112#10"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[ACHDTL]COID "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[ACHBCH]QND "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[ACHBCH]PTYPEF "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[ACHBCH]BORIG5 "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[ACHBCH]BATCH "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[ACHFIL]FORIG "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[ACHFIL]FDEST "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[ACHFIL]QFDATE "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[ACHFIL]QFTIME "_VIN9,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("ACHDTL,ACHBCH,ACHFIL") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Company ID"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Effective Entry Date"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Payment Type"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Batch Originator"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Batch Number"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"File Originator"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"File Destination"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"File Creation Date"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"File Creation Time"_"|VIN9|"_VIN9.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="ACH Origination Expanded Detail Report"
		set VBNRINFO("PGM")="R01S338"
		set VBNRINFO("RID")="SCA349"
		set VBNRINFO("TABLES")="ACHDTL,ACHBCH,ACHFIL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ACHDTL]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,ACHFIL]FORIG"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ACHDTL]FILE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,ACHBCH]BORIG5"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,ACHBCH]COID"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,ACHBCH]ND"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,ACHDTL]BATCH"
		set VBNRINFO("ORDERBY",8)="[SYSDEV,ACHDTL]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:8 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"ACHDTL.TJD,ACHFIL.FORIG,ACHDTL.FILE,ACHBCH.BORIG5,"
	set VSELECT=VSELECT_"ACHBCH.COID,ACHBCH.ND,ACHDTL.BATCH,ACHDTL.SEQ,ACHF"
	set VSELECT=VSELECT_"IL.FTIMEF,ACHFIL.TTIMEF,ACHBCH.COID8,ACHBCH.CNAME,"
	set VSELECT=VSELECT_"ACHBCH.PTYPE,ACHBCH.CED,ACHDTL.INDNAM,ACHDTL.INDID"
	set VSELECT=VSELECT_",ACHDTL.RTNUMFULL,ACHDTL.CID,ACHDTL.TAMTF,ACHDTL.T"
	set VSELECT=VSELECT_"RACE,ACHDTL.COID,ACHDTL.ATC,ACHDTL.ADDSEQ,ACHDTL.E"
	set VSELECT=VSELECT_"NTSEQ,ACHDTL.DISD,ACHDTL.ADDREC,ACHDTL.IBSTC,ACHDT"
	set VSELECT=VSELECT_"L.ACHTC,ACHDTL.FREE,ACHBCH.NDF,ACHFIL.FDEST,ACHFIL"
	set VSELECT=VSELECT_".FDATEF,ACHFIL.TDATEF"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"ACHDTL,ACHBCH,ACHFIL",VWHERE,"ACHDTL.TJD,ACHFIL.FORIG,ACHDTL.FILE,ACHBCH.BORIG5,ACHBCH.COID,ACHBCH.ND,ACHDTL.BATCH,ACHDTL.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7="",vovc8=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc8,vc8
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33
	set vc1=V.piece($C(9),1)			// ACHDTL.TJD
	set vc2=V.piece($C(9),2)			// ACHFIL.FORIG
	set vc3=V.piece($C(9),3)			// ACHDTL.FILE
	set vc4=V.piece($C(9),4)			// ACHBCH.BORIG5
	set vc5=V.piece($C(9),5)			// ACHBCH.COID
	set vc6=V.piece($C(9),6)			// ACHBCH.ND
	set vc7=V.piece($C(9),7)			// ACHDTL.BATCH
	set vc8=V.piece($C(9),8)			// ACHDTL.SEQ
	set vc9=V.piece($C(9),9)			// ACHFIL.FTIMEF
	set vc10=V.piece($C(9),10)			// ACHFIL.TTIMEF
	set vc11=V.piece($C(9),11)			// ACHBCH.COID8
	set vc12=V.piece($C(9),12)			// ACHBCH.CNAME
	set vc13=V.piece($C(9),13)			// ACHBCH.PTYPE
	set vc14=V.piece($C(9),14)			// ACHBCH.CED
	set vc15=V.piece($C(9),15)			// ACHDTL.INDNAM
	set vc16=V.piece($C(9),16)			// ACHDTL.INDID
	set vc17=V.piece($C(9),17)			// ACHDTL.RTNUMFULL
	set vc18=V.piece($C(9),18)			// ACHDTL.CID
	set vc19=V.piece($C(9),19)			// ACHDTL.TAMTF
	set vc20=V.piece($C(9),20)			// ACHDTL.TRACE
	set vc21=V.piece($C(9),21)			// ACHDTL.COID
	set vc22=V.piece($C(9),22)			// ACHDTL.ATC
	set vc23=V.piece($C(9),23)			// ACHDTL.ADDSEQ
	set vc24=V.piece($C(9),24)			// ACHDTL.ENTSEQ
	set vc25=V.piece($C(9),25)			// ACHDTL.DISD
	set vc26=V.piece($C(9),26)			// ACHDTL.ADDREC
	set vc27=V.piece($C(9),27)			// ACHDTL.IBSTC
	set vc28=V.piece($C(9),28)			// ACHDTL.ACHTC
	set vc29=V.piece($C(9),29)			// ACHDTL.FREE
	set vc30=V.piece($C(9),30)			// ACHBCH.NDF
	set vc31=V.piece($C(9),31)			// ACHFIL.FDEST
	set vc32=V.piece($C(9),32)			// ACHFIL.FDATEF
	set vc33=V.piece($C(9),33)			// ACHFIL.TDATEF
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 type Number COF,COU,DOU

 set COU=0,DOU=0,COF=0,COF=0
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0,vs(8)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1,vskp(8)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	if 'vskp(7).get() do VDTL7 quit:VFMQ
	do VHDG8 quit:VFMQ
	if 'vskp(8).get() do VDTL8 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(8)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7,vc8,vovc8
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,vb8=1
	if vb6!(+vovc6'=+vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,vb8=1
	if vb7!(+vovc7'=+vc7) set vs(8)=0,vh(8)=0,VD(7)=0,vb8=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(8) set vs(8)=1 do stat^DBSRWUTL(8)
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(8)=VT(8)+1
	quit

VDTL6	// Detail
	type public String %TIM,BORIGDEF,FDATEF1,FDES,FORDES,IOSL,NDF1,TDATEF1,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Company ID:"
	set VL=VL_$J("",12-VL.length())_$J(vc11,10)
	set VL=VL_$J("",25-VL.length())_"Company Name:"
	set VL=VL_$J("",39-VL.length())_$E(vc12,1,16)
	set VL=VL_$J("",57-VL.length())_"Payment Type:"
	set VL=VL_$J("",71-VL.length())_$E(vc13,1,10)
	set VL=VL_$J("",83-VL.length())_"Company Entry Description:"
	set VL=VL_$J("",111-VL.length())_$E(vc14,1,10)
	do VOM
	set VL="" do VOM
	quit

VDTL7	// Detail
	type public String %TIM,BORIGDEF,FDATEF1,FDES,FORDES,IOSL,NDF1,TDATEF1,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:VD(7)  set VD(7)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="         "_"Effective Date: "
	do VP1 quit:VFMQ!verror.get()  set V=$E(NDF1,1,10)
	set VL=VL_$J("",25-VL.length())_V
	set VL=VL_$J("",39-VL.length())_"Batch #:"
	set VL=VL_$J("",48-VL.length())_$J(vc7,3)
	set VL=VL_$J("",56-VL.length())_"Company ID:"
	set VL=VL_$J("",68-VL.length())_$J(vc11,10)
	set VL=VL_$J("",83-VL.length())_"Company Name:"
	set VL=VL_$J("",97-VL.length())_$E(vc12,1,16)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit

VHDG8	// Group Header
	type public String %MSKD,%TIM,BORIGDEF,CONAM,ER,FDATEF1,FDES,FORDES,IOSL,NDF1,RID,RN,TDATEF1,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:vh(8)  set vh(8)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="     "_"Seq #  Name                   ID Number  Rec Inst  Account Number            Amount          Trace #  Company ID"
	do VOM
	set VL="    "_"Addenda Type     Addenda Seq     Ent Seq  Dis Data  Addenda Indicator  IBS Tran Code    ACH Tran Code"
	do VOM
	set VL="    "_"-----------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VDTL8	// Detail
	type public String %TIM,BORIGDEF,FDATEF1,FDES,FORDES,IOSL,NDF1,TDATEF1,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if VLC+4>IOSL do VHDG0 quit:VFMQ  set vh(8)=0 do VHDG8 quit:VFMQ

	set VL="    "_$J(vc8,6)
	set VL=VL_$J("",12-VL.length())_$E(vc15,1,15)
	set VL=VL_$J("",29-VL.length())_$J(vc16,15)
	set VL=VL_$J("",45-VL.length())_$J(vc17,9)
	set VL=VL_$J("",56-VL.length())_$E(vc18,1,17)
	set VL=VL_$J("",75-VL.length())_$J($FN(vc19,",",2),13)
	set VL=VL_$J("",90-VL.length())_$J(vc20,15)
	set VL=VL_$J("",107-VL.length())_$J(vc21,10)
	do VOM
	set VL="            "_$J(vc22,2)
	set VL=VL_$J("",29-VL.length())_$J(vc23,4)
	set VL=VL_$J("",37-VL.length())_$J(vc24,7)
	set VL=VL_$J("",52-VL.length())_$E(vc25,1,2)
	set VL=VL_$J("",61-VL.length())_$J(vc26,1)
	set VL=VL_$J("",76-VL.length())_$E(vc27,1,12)
	set VL=VL_$J("",103-VL.length())_$E(vc28,1,2)
	do VOM
	set VL="            "_"Free Form Description:"
	set V=vc29,VO=V set V=$E(V,1,80) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",36-VL.length())_V		// [SYSDEV,ACHDTL]FREE
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BORIGDEF,CONAM,FDATEF1,FDES,FORDES,NDF1,RID,RN,TDATEF1,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	set VL=" "_"File Originator:"
	do VP3 quit:VFMQ!verror.get()  set V=$E(FORDES,1,20)
	set VL=VL_$J("",19-VL.length())_V
	set VL=VL_$J("",41-VL.length())_"File Destination:"
	do VP4 quit:VFMQ!verror.get()  set V=$E(FDES,1,21)
	set VL=VL_$J("",60-VL.length())_V
	set VL=VL_$J("",83-VL.length())_"File Date:"
	do VP5 quit:VFMQ!verror.get()  set V=$E(FDATEF1,1,10)
	set VL=VL_$J("",95-VL.length())_V
	set VL=VL_$J("",108-VL.length())_"Tape Date:  "
	do VP6 quit:VFMQ!verror.get()  set V=$E(TDATEF1,1,10)
	set VL=VL_$J("",120-VL.length())_V
	do VOM
	set VL="Batch Originator:"
	do VP7 quit:VFMQ!verror.get()  set V=$E(BORIGDEF,1,20)
	set VL=VL_$J("",19-VL.length())_V
	set VL=VL_$J("",46-VL.length())_"File Number:"
	set VL=VL_$J("",60-VL.length())_$J(vc3,2)
	set VL=VL_$J("",83-VL.length())_"File Time:"
	set VL=VL_$J("",95-VL.length())_$J($$TIM^%ZM(vc9),8)
	set VL=VL_$J("",108-VL.length())_"Tape Time:"
	set VL=VL_$J("",120-VL.length())_$J($$TIM^%ZM(vc10),8)
	do VOM
	set VL="" do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NDF1

	type public String vc30
 type public String NDF1

 set NDF1=$$Y2K(vc30)
 quit


Y2K( String VAL);

 type Date MDT

 set MDT=VAL.toDate("MM-DD-YEAR")
 set VAL=MDT.toString("MM/DD/YEAR")

 quit VAL
	quit

VP2	// Column post-processor - [SYSDEV,ACHDTL]FREE

	type public String vc29
 type public String V,VL 

 if '(vc29).length() set (V,VL)=""
	quit

VP3	// Column pre-processor - Variable: FORDES

	type public String vc2
 /*
 ---- Revision History ------------------------------------------------
 
 06/14/06 - MBUIM - CR 21461
	    Modified to replace long variable name utblachrt

 ----------------------------------------------------------------------
 */
 type public String fACHFIL,FDATEF,FOR,FORDES,FTIMEF,TDATEF,TTIMEF
 type String INAME

 // NONE FOUND
 if 'FDATEF.exists() set FDATEF=$$^MSG(6483)

 if 'TDATEF.exists() set TDATEF=$$^MSG(6483)

 if 'FTIMEF.exists() set FTIMEF=$$^MSG(6483)

 if 'TTIMEF.exists() set TTIMEF=$$^MSG(6483)

 // None Defined
 set FORDES=$$^MSG(6436)
 
 quit:'fACHFIL.get()

 do STRIP^DEPDI("FOR",vc2,"L")

 quit:'FOR.length()

 type RecordUTBLACHRT uachrt=Db.getRecord("UTBLACHRT","KEY=:FOR",1)
 if uachrt.getMode() do {
 	set INAME=uachrt.iname
	set FORDES=INAME.extract(1,25)
	}
	quit

VP4	// Column pre-processor - Variable: FDES

	type public String vc31
 /*
 ---- Revision History ------------------------------------------------
 
 06/14/06 - MBUIM - CR 21461
 	    Modified to replace long variable name utblachrt

 ----------------------------------------------------------------------
 */
 type public String DES,fACHFIL,FDES
 type String INAME

 // None Defined
 set FDES=$$^MSG(6436)

 quit:'fACHFIL.get()

 do STRIP^DEPDI("DES",vc31,"L")

 quit:'DES.length()

 type RecordUTBLACHRT uachrt=Db.getRecord("UTBLACHRT","KEY=:DES",1)
 if uachrt.getMode() do {
	set INAME=uachrt.iname
	set FDES=INAME.extract(1,25)
	}
	quit

VP5	// Column pre-processor - Variable: FDATEF1

	type public String vc32
 type public String FDATEF1 

 set FDATEF1=$$Y2K(vc32)
	quit

VP6	// Column pre-processor - Variable: TDATEF1

	type public String vc33
 type public String TDATEF1

 set TDATEF1=$$Y2K(vc33)
	quit

VP7	// Column pre-processor - Variable: BORIGDEF

	type public String vc4
 /*
 ---- Revision History ------------------------------------------------
 
 06/14/06 - MBUIM - CR 21461
 	    Modified to replace long variable name utblachrt

 ----------------------------------------------------------------------
 */
 type public String BORIGDEF,fACHBCH,VAL
 type Number BOR

 // None Defined
 set BORIGDEF=$$^MSG(6436)

 quit:'fACHBCH.get()

 set BOR=vc4,VAL=""

 type ResultSet rs=Db.select("KEY","UTBLACHRT")
 while rs.next() do {
	set VAL=rs.getCol("KEY")
	if VAL.extract(1,8)=BOR quit
	}

 if VAL.length() do {
	type RecordUTBLACHRT uachrt=Db.getRecord("UTBLACHRT","KEY=:VAL",1)
	set BORIGDEF=uachrt.iname
	}
	quit
