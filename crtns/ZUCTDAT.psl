public ZUCTDAT()	// PSL Test Set, class Date, all methods
	/*
	ORIG: Frans S.C. Witte - 2005-04-12
	DESC: PSL Test Set, class Class

	Module that tests the behaviour of the Date class.

	---- Revision History --------------------------------------------------
	2005-04-12, Frans S.C. Witte - CR 22843
		Implemented validations for Date.toString()
	*/
	#ACCEPT CR=22843; DATE=2006-08-29; PGM=Frans S.C. Witte;GROUP=XECUTE
	xecute "zprint"

	write !,"Validate Date method calls",!
	do toStr()	// Date.toString( String mask)
	quit

	// =====================================================================
public toStr()	// Validate Date.toString( String mask)
	/* ---------------------------------------------------------------------
	Procedure that validates code relating to Date.ToString().
	Test values:
	C0/R0	"", 59594, 60000
	C1/R1	"", "DL", "DS", "ML", "MS", "YEAR-MM-DD", "YY/MM/DD", "MM/DD/YY"
	Calls:
	toStr0()
	toStr1(R0)
	toStr2(R1)
	toStr3(R0,R1)
	*/
	type Date R0
	type String R1
	do toStr0()
	for R0 = {Date}"", {Date}59594, {Date}60000 do {
		do toStr1(R0)
		for R1="", "DL", "DS", "ML", "MS", "YEAR-MM-DD", "DD.MM.YY", "MM/DD/YY" do {
			if R0.isNull() do toStr2(R1)
			do toStr3(R0, R1)
		}
	}
	quit

	// ==========================================================================
	/* toStr0() - validate C0.toString(C1)
	*/
toStr0()	// validate C0.toString(C1)
	type String sDat

	/* test value "" */
	type literal Date d0 = ""

	set sDat = d0.toString("")			// C0,C1 Empty
	write "toStr0():({Date}"""").toString("""")=",sDat,!

	set sDat = d0.toString("DL")			// C0 Empty, C1="DL"
	write "toStr0():({Date}"""").toString(""DL"")=",sDat,!

	set sDat = d0.toString("DS")			// C0 Empty, C1="DS"
	write "toStr0():({Date}"""").toString(""DS"")=",sDat,!

	set sDat = d0.toString("ML")			// C0 Empty, C1="ML"
	write "toStr0():({Date}"""").toString(""ML"")=",sDat,!

	set sDat = d0.toString("MS")			// C0 Empty, C1="MS"
	write "toStr0():({Date}"""").toString(""MS"")=",sDat,!

	set sDat = d0.toString("YEAR-MM-DD")		// C0 Empty, C1="YEAR-MM-DD"
	write "toStr0():({Date}"""").toString(""YEAR-MM-DD"")=",sDat,!

	set sDat = d0.toString("DD.MM.YY")		// C0 Empty, C1="DD.MM.YY"
	write "toStr0():({Date}"""").toString(""DD.MM.YY"")=",sDat,!

	set sDat = d0.toString("MM/DD/YY")		// C0 Empty, C1="MM/DD/YY"
	write "toStr0():({Date}"""").toString(""MM/DD/YY"")=",sDat,!

	/* test value 59594 (2004-02-29) */
	type literal Date d1 = 59594

	set sDat = d1.toString("")			// C0=59594,C1 Empty
	write "toStr0():({Date}59594).toString("""")=",sDat,!

	set sDat = d1.toString("DL")			// C0=59594, C1="DL"
	write "toStr0():({Date}59594).toString(""DL"")=",sDat,!

	set sDat = d1.toString("DS")			// C0=59594, C1="DS"
	write "toStr0():({Date}59594).toString(""DS"")=",sDat,!

	set sDat = d1.toString("ML")			// C0=59594, C1="ML"
	write "toStr0():({Date}59594).toString(""ML"")=",sDat,!

	set sDat = d1.toString("MS")			// C0=59594, C1="MS"
	write "toStr0():({Date}59594).toString(""MS"")=",sDat,!

	set sDat = d1.toString("YEAR-MM-DD")		// C0=59594, C1="YEAR-MM-DD"
	write "toStr0():({Date}59594)toString(""YEAR-MM-DD"")=",sDat,!

	set sDat = d1.toString("DD.MM.YY")		// C0=59594, C1="DD.MM.YY"
	write "toStr0():({Date}59594).toString(""DD.MM.YY"")=",sDat,!

	set sDat = d1.toString("MM/DD/YY")		// C0=59594, C1="MM/DD/YY"
	write "toStr0():({Date}59594).toString(""MM/DD/YY"")=",sDat,!

	/* test value 60000 (2005-04-10) */
	type literal Date d2 = 60000

	set sDat = d2.toString("")			// C0=60000,C1 Empty
	write "toStr0():({Date}60000).toString("""")=",sDat,!

	set sDat = d2.toString("DL")			// C0=60000, C1="DL"
	write "toStr0():({Date}60000).toString(""DL"")=",sDat,!

	set sDat = d2.toString("DS")			// C0=60000, C1="DS"
	write "toStr0():({Date}60000).toString(""DS"")=",sDat,!

	set sDat = d2.toString("ML")			// C0=60000, C1="ML"
	write "toStr0():({Date}60000).toString(""ML"")=",sDat,!

	set sDat = d2.toString("MS")			// C0=60000, C1="MS"
	write "toStr0():({Date}60000).toString(""MS"")=",sDat,!

	set sDat = d2.toString("YEAR-MM-DD")		// C0=60000, C1="YEAR-MM-DD"
	write "toStr0():({Date}60000).toString(""YEAR-MM-DD"")=",sDat,!

	set sDat = d2.toString("DD.MM.YY")		// C0=60000, C1="DD.MM.YY"
	write "toStr0():({Date}60000).toString(""DD.MM.YY"")=",sDat,!

	set sDat = d2.toString("MM/DD/YY")		// C0=60000, C1="MM/DD/YY"
	write "toStr0():({Date}60000).toString(""MM/DD/YY"")=",sDat,!

	quit

	// ==========================================================================
	/* toStr1() - validate R0.toString(C1)
	*/
toStr1(Date dDat)	// validate dDat.toString(C1)
	type String sDat

	set sDat = dDat.toString("")			// C1 Empty
	write "toStr1():{Date}<"_dDat_">).toString("""")=",sDat,!

	set sDat = dDat.toString("DL")		// C1="DL"
	write "toStr1():{Date}<"_dDat_">).toString(""DL"")=",sDat,!

	set sDat = dDat.toString("DS")		// C1="DS"
	write "toStr1():{Date}<"_dDat_">).toString(""DS"")=",sDat,!

	set sDat = dDat.toString("ML")		// C1="ML"
	write "toStr1():{Date}<"_dDat_">).toString(""ML"")=",sDat,!

	set sDat = dDat.toString("MS")		// C1="MS"
	write "toStr1():{Date}<"_dDat_">).toString(""MS"")=",sDat,!

	set sDat = dDat.toString("YEAR-MM-DD")	// C1="YEAR-MM-DD"
	write "toStr1():{Date}<"_dDat_">).toString(""YEAR-MM-DD"")=",sDat,!

	set sDat = dDat.toString("DD.MM.YY")		// C1="DD.MM.YY"
	write "toStr1():{Date}<"_dDat_">).toString(""DD.MM.YY"")=",sDat,!

	set sDat = dDat.toString("MM/DD/YY")		// C1="MM/DD/YY"
	write "toStr1():{Date}<"_dDat_">).toString(""MM/DD/YY"")=",sDat,!

	quit

	// ==========================================================================
	/* toStr2() - validate C0.toString(R1)
	*/
toStr2( String sMsk)	// validate C0.toString(R1)
	type String sDat

	type literal Date d0 = ""
	set sDat = d0.toString( sMsk)	  		// C1 Empty
	write "toStr2(R1):({Date}"""").toString(<"_sMsk_">)="_sDat,!

	type literal Date d1 = {Date}59594
	set sDat = d1.toString( sMsk)	  		// C1=59594
	write "toStr2(R1):({Date}59594).toString(<"_sMsk_">)="_sDat,!

	type literal Date d2 = {Date}60000
	set sDat = d2.toString( sMsk)	  		// C1=60000
	write "toStr2(R1):({Date}60000).toString(<"_sMsk_">)="_sDat,!

	quit

	// ==========================================================================
	/* toStr3() - validate R0.toString(R1)
	*/
toStr3( Date dDat, String sMsk)	// validate r0.toString(R1)
	type String sDat

	set sDat = dDat.toString( sMsk)	  		// C1 Empty
	write "toStr3(R0,R1):({Date}<"_dDat_">).toString(<"_sMsk_">)="_sDat,!
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60507^25484^Frans S.C. Witte^6206"	// Signature - LTD^TIME^USER^SIZE
