R01S382	// SCA415 - Loan Sold Repayment/Delinquency Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD,TODATE
	type String FRDATE
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date FRDATE
	type String VIN1="ALL"

	set RID="SCA415"
	set RN="Loan Sold Repayment/Delinquency Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("FRDATE")="|10|||||S TODATE=TJD-1||D|Pass History From|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNLS8]INCD|[LNLS8]INCD:DISTINCT||D EXT^DBSQRY||T|Investor|||||"

	set %READ="IO/REQ,VIN1#0,FRDATE#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD,TODATE
	type public String FRDATE
	type public Date FRDATE
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,DUEFEE,DUEINT,DUEPRL,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA415",RN="Loan Sold Repayment/Delinquency Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA415","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNLS8]CID#1#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNLS8]INCD "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNLS8,LNLS6,LN,LNLS2") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Investor"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Sold Repayment/Delinquency Summary"
		set VBNRINFO("PGM")="R01S382"
		set VBNRINFO("RID")="SCA415"
		set VBNRINFO("TABLES")="LNLS8,LNLS6,LN,LNLS2"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLS8]INCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLS8]PL"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNLS8]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLS8]CID"

		set VBNRINFO("DOC",1)="Details by sold loan 1. prepaid scheduled payments, 2. delinquent amounts, and"
		set VBNRINFO("DOC",2)="3. recoveries of previously delinquent amounts."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:9 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNLS8.INCD,LNLS8.PL,LNLS8.GRP,LNLS8.CID,LNLS2.REMN"
	set VSELECT=VSELECT_"D,LNLS2.PP,LNLS2.FEEP,LNLS2.REMFRE,LNLS2.YIELD,LNL"
	set VSELECT=VSELECT_"S2.SFCM,LN.CID,LNLS6.OPTR,LNLS6.PLRPB,LN.SCHSEQ"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNLS8,LNLS6,LN,LNLS2",VWHERE,"LNLS8.INCD,LNLS8.PL,LNLS8.GRP,LNLS8.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// LNLS8.INCD
	set vc2=V.piece($C(9),2)			// LNLS8.PL
	set vc3=V.piece($C(9),3)			// LNLS8.GRP
	set vc4=V.piece($C(9),4)			// LNLS8.CID
	set vc5=V.piece($C(9),5)			// LNLS2.REMND
	set vc6=V.piece($C(9),6)			// LNLS2.PP
	set vc7=V.piece($C(9),7)			// LNLS2.FEEP
	set vc8=V.piece($C(9),8)			// LNLS2.REMFRE
	set vc9=V.piece($C(9),9)			// LNLS2.YIELD
	set vc10=V.piece($C(9),10)			// LNLS2.SFCM
	set vc11=V.piece($C(9),11)			// LN.CID
	set vc12=V.piece($C(9),12)			// LNLS6.OPTR
	set vc13=V.piece($C(9),13)			// LNLS6.PLRPB
	set vc14=V.piece($C(9),14)			// LN.SCHSEQ
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

	// Converted to PSL by CNV70RW
	//Incoming=TJD,TODATE
	type Public String FRDATE,TJD
	
	set FRDATE=$$BOMJD^SCADAT(TJD,1)
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),DUEFEE,DUEINT,DUEPRL,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+DUEFEE			// @TOT(<<DUEFEE>>)
	set VT(4,2,1)=VT(4,2,1)+DUEINT			// @TOT(<<DUEINT>>)
	set VT(4,3,1)=VT(4,3,1)+DUEPRL			// @TOT(<<DUEPRL>>)
	set VT(4,4,1)=VT(4,4,1)+PPDFEE			// @TOT(<<PPDFEE>>)
	set VT(4,5,1)=VT(4,5,1)+PPDINT			// @TOT(<<PPDINT>>)
	set VT(4,6,1)=VT(4,6,1)+PPDPRL			// @TOT(<<PPDPRL>>)
	set VT(4,7,1)=VT(4,7,1)+RECFEE			// @TOT(<<RECFEE>>)
	set VT(4,8,1)=VT(4,8,1)+RECINT			// @TOT(<<RECINT>>)
	set VT(4,9,1)=VT(4,9,1)+RECPRL			// @TOT(<<RECPRL>>)
	quit

VSUM2	// Summary
	type public String %TIM,DUEFEE,DUEINT,DUEPRL,FRDATE,I,IOSL,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL,TJD,TODATE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="   "_"Investor:"
	set V=VT(2,3,1)					// @TOT(<<DUEPRL>>,)
	set VL=VL_$J("",16-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,2,1)					// @TOT(<<DUEINT>>,)
	set VL=VL_$J("",29-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,1,1)					// @TOT(<<DUEFEE>>,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),9)
	set V=VT(2,6,1)					// @TOT(<<PPDPRL>>,)
	set VL=VL_$J("",56-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,5,1)					// @TOT(<<PPDINT>>,)
	set VL=VL_$J("",69-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,4,1)					// @TOT(<<PPDFEE>>,)
	set VL=VL_$J("",82-VL.length())_$J($FN(V,",",2),9)
	set V=VT(2,9,1)					// @TOT(<<RECPRL>>,)
	set VL=VL_$J("",96-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,8,1)					// @TOT(<<RECINT>>,)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,7,1)					// @TOT(<<RECFEE>>,)
	set VL=VL_$J("",122-VL.length())_$J($FN(V,",",2),9)
	do VOM
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CONAM,DUEFEE,DUEINT,DUEPRL,ER,FRDATE,IOSL,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL,RID,RN,TJD,TODATE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Investor: "
	set V=vc1,VO=V set V=$E(V,1,5) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",10-VL.length())_V		// [SYSDEV,LNLS8]INCD
	set VL=VL_$J("",22-VL.length())_" Cutoff: "
	set VL=VL_$J("",31-VL.length())_$J($$DAT^%ZM(vc5),10)
	do VOM
	set VL="    "_"Pool: "
	set VL=VL_$J("",10-VL.length())_$E(vc2,1,10)
	set VL=VL_$J("",23-VL.length())_"% Sold: "
	set VL=VL_$J("",31-VL.length())_$J(vc6,9,5)
	do VOM
	set VL="" do VOM
	quit

VSUM3	// Summary
	type public String %TIM,DUEFEE,DUEINT,DUEPRL,FRDATE,I,IOSL,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL,TJD,TODATE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(3)=0 do VHDG3 quit:VFMQ

	set VL="" do VOM
	set VL="       "_"Pool:"
	set V=VT(3,3,1)					// @TOT(<<DUEPRL>>,)
	set VL=VL_$J("",16-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,2,1)					// @TOT(<<DUEINT>>,)
	set VL=VL_$J("",29-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,1,1)					// @TOT(<<DUEFEE>>,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),9)
	set V=VT(3,6,1)					// @TOT(<<PPDPRL>>,)
	set VL=VL_$J("",56-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,5,1)					// @TOT(<<PPDINT>>,)
	set VL=VL_$J("",69-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,4,1)					// @TOT(<<PPDFEE>>,)
	set VL=VL_$J("",82-VL.length())_$J($FN(V,",",2),9)
	set V=VT(3,9,1)					// @TOT(<<RECPRL>>,)
	set VL=VL_$J("",96-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,8,1)					// @TOT(<<RECINT>>,)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,7,1)					// @TOT(<<RECFEE>>,)
	set VL=VL_$J("",122-VL.length())_$J($FN(V,",",2),9)
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,DUEFEE,DUEINT,DUEPRL,FRDATE,IOSL,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL,TJD,TODATE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$E(V,1,12) do VP2 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",16-VL.length())_$J($FN(DUEPRL,",",2),12)
	set VL=VL_$J("",29-VL.length())_$J($FN(DUEINT,",",2),12)
	set VL=VL_$J("",42-VL.length())_$J($FN(DUEFEE,",",2),9)
	set VL=VL_$J("",56-VL.length())_$J($FN(PPDPRL,",",2),12)
	set VL=VL_$J("",69-VL.length())_$J($FN(PPDINT,",",2),12)
	set VL=VL_$J("",82-VL.length())_$J($FN(PPDFEE,",",2),9)
	set VL=VL_$J("",96-VL.length())_$J($FN(RECPRL,",",2),12)
	set VL=VL_$J("",109-VL.length())_$J($FN(RECINT,",",2),12)
	set V=$J($FN(RECFEE,",",2),9) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",122-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DUEFEE,DUEINT,DUEPRL,FRDATE,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL,RID,RN,TJD,TODATE,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="From: "
	set VL=VL_$J("",6-VL.length())_$J($$DAT^%ZM(FRDATE),10)
	set VL=VL_$J("",17-VL.length())_"To: "
	set VL=VL_$J("",21-VL.length())_$J($$DAT^%ZM(TODATE),10)
	do VOM
	set VL="All Amounts Consider Investor Percentage"
	do VOM
	set VL="" do VOM
	set VL="                 "_"-------- New Delinquency --------        -------- Amount Prepaid --------        ----- Delinquency Recovered -----"
	do VOM
	set VL="Account            Principal     Interest      Fee         Principal     Interest      Fee         Principal     Interest       Fee"
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,DUEFEE,DUEINT,DUEPRL,FRDATE,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL,TODATE,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="     "_"Report:"
	set V=0						// @TOT(<<DUEPRL>>,0)
	for I=0:1:4 set V=V+VT(I,3,1)
	set VL=VL_$J("",16-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT(<<DUEINT>>,0)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VL=VL_$J("",29-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT(<<DUEFEE>>,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),9)
	set V=0						// @TOT(<<PPDPRL>>,0)
	for I=0:1:4 set V=V+VT(I,6,1)
	set VL=VL_$J("",56-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT(<<PPDINT>>,0)
	for I=0:1:4 set V=V+VT(I,5,1)
	set VL=VL_$J("",69-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT(<<PPDFEE>>,0)
	for I=0:1:4 set V=V+VT(I,4,1)
	set VL=VL_$J("",82-VL.length())_$J($FN(V,",",2),9)
	set V=0						// @TOT(<<RECPRL>>,0)
	for I=0:1:4 set V=V+VT(I,9,1)
	set VL=VL_$J("",96-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT(<<RECINT>>,0)
	for I=0:1:4 set V=V+VT(I,8,1)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT(<<RECFEE>>,0)
	for I=0:1:4 set V=V+VT(I,7,1)
	set VL=VL_$J("",122-VL.length())_$J($FN(V,",",2),9)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,LNLS8]INCD

	type public String vc6,vc7,vc8,vc9,vc10
	type Public String FEEP,FRE,JD,LNLS2,PP,REMAF,REMFRE,RFRE,SFCM,TJD,YIELD,YLD

	type Number AF

	set PP=vc6/100
	set FEEP=vc7/100
	set RFRE=vc8
	set YLD=vc9/100
	set SFCM=vc10
	set FRE=RFRE set JD=TJD do ^UFRE set REMAF=$G(AF)
	quit

VP2	// Column post-processor - [SYSDEV,LNLS8]CID

	type public String vc11,vc12,vc13,vc14,vc6
	type Public String DPSUM,DUEFEE,DUEINT,DUEPRL,FRDATE,LNLS2,LNLS6,OPTR,PLRPB,PP,PPDFEE,PPDINT,PPDPRL,RECFEE,RECINT,RECPRL,TODATE
	type Number CID,SCHSEQ1

	set CID=vc11
	set OPTR=vc12/100
	set PLRPB=vc13
	//
	set SCHSEQ1=vc14
 	type RecordLNBIL1 lnbil1=Db.getRecord("LNBIL1","CID=:CID,SCHSEQ=SCHSEQ1",1)
	set DPSUM=$$DPSUM^LNLS8PD(.lnbil1,CID,FRDATE,TODATE)
	//
	set DUEPRL=$$^SCARND($P(DPSUM,"|",1)*vc6/100,0,CID)
	set DUEINT=$$^SCARND($P(DPSUM,"|",2)*vc6/100,0,CID)
	set DUEFEE=$P(DPSUM,"|",3)
	//
	set PPDPRL=$$^SCARND($P(DPSUM,"|",4)*vc6/100,0,CID)
	set PPDINT=$$^SCARND($P(DPSUM,"|",5)*vc6/100,0,CID)
	set PPDFEE=$P(DPSUM,"|",6)
	//
	set RECPRL=$$^SCARND($P(DPSUM,"|",7)*vc6/100,0,CID)
	set RECINT=$$^SCARND($P(DPSUM,"|",8)*vc6/100,0,CID)
	set RECFEE=$P(DPSUM,"|",9)
	quit

VP3	// Column post-processor - Variable: RECFEE

	type Public String DUEINT,DUEPRL,PPDINT,PPDPRL,RECINT,RECPRL,V,VL

	// Null out print line if all values are zero.
	// Print line is then blank-suppressed in report definition.
	//
	if PPDPRL+PPDINT+RECPRL+RECINT+DUEPRL+DUEINT quit 
	set (V,VL)=""
	quit
