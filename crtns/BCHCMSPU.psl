BCHCMSPU //Batch BCHCMSPRGAU - Unmatched Authorization Purge Utility
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:07 - joynerd
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHCMSPRGAU Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHCMSPRGAU")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHCMSPRGAU") quit
 do JOBMGR^BCHUTL(%FN,"BCHCMSPRGAU",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHCMSPRGAU")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(TJD,CID) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHCMSPRGAU","*","",TJD.get()_","_CID.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHCMSPRGAU",TJD.get()_","_CID.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHCMSPRGAU",TJD.get()_","_CID.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,TJD,CID)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHCMSPRGAU","*","",TJD.get()_","_CID.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHCMSPRGAU",TJD.get()_","_CID.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,TJD,CID) //
	/*
	The variable TJD will be passed into this section since it is a
	key into the dayend file.  It represents the current purge days
	subtracted from the current system date.  It is not the current
	system date.
	*/

	type Public Boolean ER
	type Number AUTHNUM,HLDSEQ
	type String STR
	type ResultSet result
	set result=Db.select("AUTHNUM,HLDSEQ","DAYENDCMSHLD","TJD=:TJD and CID=:CID")
	if result.isEmpty() quit
	while result.next() do {
		
		set AUTHNUM=result.getCol(1)
		set HLDSEQ=result.getCol(2)
		do EXEC(CID,HLDSEQ)
		set STR=CID_"|"_HLDSEQ
		if $G(ER) do EXC quit

		}
	quit

EXEC(CID,SEQ)	//Public// Process one hold
	
	/*
	 ARGUMENTS:
	        
	       . CID 	Account Number		/TYPE=N/REQ/MECH=VAL
	 
		. SEQ		Hold Sequence		/TYPE=N/REQ/MECH=VAL
	*/
	
	type Public Boolean ER
	type Public Number AUTHNUM
	if 'Db.isDefined("PHLD","CID,SEQ") quit
	do {
		// reset TJD to system date for history entry 
		new %SystemDate
		#accept pgm=spier;date=12/08/03
		set %SystemDate=savetjd
		do Db.delete("PHLD","CID=:CID AND SEQ=:SEQ")
		}
	quit:ER

	// Removes the dayend entry only if the hold was removed

	do Db.fastDelete("DAYENDCMSHLD","%SystemDate,CID,AUTHNUM")
	quit
	



GETDATE	// Determine the day in the past for which to purge.
	type Public Number PRGDT
	set PRGDT=""
	type RecordCMSOPT cmsopt=Db.getRecord("CMSOPT",,1)
	// #days to pass before purging
	set PRGDT=cmsopt.prgdys
	// default 10 days if not specified
	if PRGDT="" set PRGDT=10
	set PRGDT=%SystemDate-PRGDT
	quit


EXC	// Log error to DAYENDEXC

	// reset ER to prevent batch "catch" from rolling back transaction
	type Public Boolean ER
	type Public String ET,RM
	type Public Number CID,%ZTSEQ
	set ER=0

	if $G(ET)="" set ET=$G(RM)
	do LOG^UTLEXC($T(+0),"*",,$G(CID),$G(%ZTSEQ),$G(ET))
	kill ET,%ZTSEQ

	quit

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,TJD,CID
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set TJD=vRECORD.piece($C(9),1)
 set CID=vRECORD.piece($C(9),2)
 do vPROC(TJD,CID)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,TJD,CID
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32767 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+24>32767 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
	type Public Number MRPCNO,PRGDT
	type Public Boolean ER
	do GETDATE
	set MRPCNO=68
	do Db.fastDelete("MRPCMSG","MRPCNO,PRGDT")
	do ^UTLO
	if ER set %BatchExit=1 quit

 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("DISTINCT TJD,CID","DAYENDCMSHLD","DAYENDCMSHLD.TJD=:PRGDT")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	type Public Date savetjd
	do ^UTLO
	type RecordCUVAR cuvar
	set cuvar=Db.getRecord("CUVAR")
	set savetjd=cuvar.tjd
	set %UserID="BATCH"

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
