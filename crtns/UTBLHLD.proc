UTBLHLD	//PBS - V4.4 - Maintain Check/Float Hold Tables
	/*
	       ORIG:  Wm. Greene (1674) - 06/17/87

	---- Revision History ------------------------------------------------

	10/31/06 - DHANALAKSHMI R - CR23516
		   Modified to change the scope of the vairables CNT, RT and
		   BRCD. Added description of the argument passed to all the 
		   sections. Modified the section VPG00 by adding "quit" after
		   calling the section QRY.

	10/23/06 - chhabris - CR23516
		   Modified the procedure to change the reference to UTBLRTH.rt
		   to UTBLRTH.num.
		   Added new section LOAD to load the lookup RTN() array for
		   input to R/T number.
		   Modified QRY section to handle file maintenance properly.
		   Previously the function allowed to update the details for
		   all the R/T numbers even if we choose a specific one.
		   The same was the case in inquiry mode. Also modified QRY
		   section to display "No matches found" error if there are
		   no records to display for the specified inputs.
		   Modified VPG00 section, moved the check for VFMQ="Q" after
		   the call to ^UTLREAD to avoid undefined error for variable
		   BRCD.

	11/22/05 - NATRAJAH - 13734
		   General DBI3 cleanup.

	01/04/05 - TITOVE - CR 13734
	   	   Cleaned up logic as part of DBI2 project.

	12/30/03 - CARROLLJ - CR7901
		   Added #ACCEPT prior to xecute command.

	01/06/04 - RussellDS - CR7514
		   Eliminated use of table UTBLRTH1 and replaced with UTBLRTH.

	08/14/02 - TELIV - 49451
		   Converted to PSL.

	  ----------------------------------------------------------------------
	*/

	quit

NEW 	//
	do INIT(0)
	
	quit


UPD 	//
	do INIT(1) 
	quit


INQ	//
	do INIT(2)
        quit


INIT(%ProcessMode) //

	type String OLNTB,VFMQ
	type Number %PG,%PAGE

	set %PG=0 
	set %PAGE=1

	type RecordUTBLRTH fUTBLRTH()
	
	do VPG(.fUTBLRTH())

	quit


 // Page control
VPG(RecordUTBLRTH fUTBLRTH())	// Array of UTBLRTH record

	type Public Number %PG
	type Public Boolean ER
	type Public String VFMQ

	type Number CNT,FINISH
	type String BRCD

        set FINISH=0
        set CNT=0

        for  do { quit:FINISH

                if %PG=0 do VPG00(.fUTBLRTH(),.CNT,.BRCD) if ER set FINISH=1 quit
                if %PG>0 do VPG01(.fUTBLRTH(),.CNT)
                if "DFQ"[VFMQ do VER(.fUTBLRTH(),BRCD) set FINISH=1 quit

                set %PG=%PG+1
                }
        quit


 // Set up
VPG00(RecordUTBLRTH fUTBLRTH(), // Array of UTBLRTH record
	Number CNT, 		// Record Count
	String BRCD)		// Branch Code

	type Public String %NOPRMT,%READ,%TAB,VFMQ
	type Public Boolean ER
	type String RT,RTN()

	set %TAB("BRCD")=".BRCD1/TBL=[UTBLBRCD]/XPP=do LOAD^UTBLHLD(X,.RTN)" 
	set BRCD=CUVAR.bobr

	if %ProcessMode set %TAB("RT")=".RT1/TBL=RTN(:NOVAL/HLP=[SYSDEV,UTBLRTH]NUM/REQ"

	if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)

	set %READ="@@%FN,,,BRCD/REQ" 
	set %NOPRMT="N"

	if %ProcessMode set %READ=%READ_",RT" set RT="ALL"
	if %ProcessMode=2 set %READ=%READ_",IO/REQ"

	do ^UTLREAD
	
	if VFMQ="Q" set ER=1 quit

	if %ProcessMode do QRY(.fUTBLRTH(),.CNT,BRCD,RT) quit
	
	if '%ProcessMode do {
		set fUTBLRTH(1)=Class.new("RecordUTBLRTH")
		set fUTBLRTH(1).brcd=BRCD
		}

	quit


 // Input screen
VPG01(RecordUTBLRTH fUTBLRTH(), 	// Array of UTBLRTH record
	Number CNT)			// Record Count

	type Public String IO,VFMQ
	type Public Number I,%MODS,%PAGE,%PG,%REPEAT
	type Public Boolean ER
	
	if %ProcessMode=2,IO'=$I do OPEN^SCAIO if ER set VFMQ="Q" quit

	// Load page info
	if '%ProcessMode do {

		set CNT = 0
		for I = (%PAGE*4-3):1:(%PAGE*4) set CNT = CNT + 1

		set %PAGE = CNT\4
		}

	set %REPEAT=4 
	set %MODS=%PG*4-3

	if %REPEAT+%MODS>CNT set %REPEAT=CNT-%MODS+1
	
	do DRV^USID(%ProcessMode,"UTBLHLD",.fUTBLRTH())
	
	quit


VER(RecordUTBLRTH fUTBLRTH(), 	// Array of UTBLRTH record
	String BRCD) 		// Branch Code

	type Public String VFMQ
	
	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit

	do FILE(.fUTBLRTH(),BRCD)

	do END

	quit


END	//

	type Number PID
	type Public Boolean ER
	type Public String RM,VFMQ
	set PID=%ProcessID
	do Db.delete("TMPRPT1","PID=:PID")
	
	if ER!(%ProcessMode=2)!(%ProcessMode=4) quit
 
	if VFMQ="Q" do {
		// Route and transit holds not created
		if %ProcessMode=0 set RM=$$^MSG(2435) quit

		// Route and transit holds not modified
		if %ProcessMode=1 set RM=$$^MSG(2437) quit

		// Route and transit holds not deleted
		set RM=$$^MSG(2436)
		}
	else  do {
		// Route and transit holds created
		if %ProcessMode=0 set RM=$$^MSG(2432) quit

		// Route and transit holds modified
		if %ProcessMode=1 set RM=$$^MSG(2434) quit

		// Route and transit holds deleted
		set RM=$$^MSG(2433)
		}
		
	set ER="W"
	
	quit


 // File data
FILE(RecordUTBLRTH fUTBLRTH(),	// Array of UTBLRTH record
	String BRCD)		// Branch Code

	if (%ProcessMode=2)!(%ProcessMode=3) quit

	type Number N

	set N=""

	for  set N=fUTBLRTH(N).order() quit:N.isNull()  do {

		type Number FLG = 0

		if fUTBLRTH(N).num.isNull() quit
		
		type RecordUTBLRTH utblrth=Db.getRecord("UTBLRTH","NUM=:fUTBLRTH(N).num,BRCD=:BRCD",1)

		do utblrth.setAuditFlag(1)
	
		set utblrth.flt1=fUTBLRTH(N).flt1 if 'utblrth.flt1.isNull() set FLG = 1
		set utblrth.rcc1=fUTBLRTH(N).rcc1 if 'utblrth.rcc1.isNull() set FLG = 1
		set utblrth.hld1=fUTBLRTH(N).hld1 if 'utblrth.hld1.isNull() set FLG = 1
		set utblrth.flt2=fUTBLRTH(N).flt2 if 'utblrth.flt2.isNull() set FLG = 1
		set utblrth.rcc2=fUTBLRTH(N).rcc2 if 'utblrth.rcc2.isNull() set FLG = 1
		set utblrth.hld2=fUTBLRTH(N).hld2 if 'utblrth.hld2.isNull() set FLG = 1
		set utblrth.flt3=fUTBLRTH(N).flt3 if 'utblrth.flt3.isNull() set FLG = 1
		set utblrth.rcc3=fUTBLRTH(N).rcc3 if 'utblrth.rcc3.isNull() set FLG = 1
		set utblrth.hld3=fUTBLRTH(N).hld3 if 'utblrth.hld3.isNull() set FLG = 1
		set utblrth.flt4=fUTBLRTH(N).flt4 if 'utblrth.flt4.isNull() set FLG = 1
		set utblrth.rcc4=fUTBLRTH(N).rcc4 if 'utblrth.rcc4.isNull() set FLG = 1
		set utblrth.hld4=fUTBLRTH(N).hld4 if 'utblrth.hld4.isNull() set FLG = 1
		set utblrth.flt5=fUTBLRTH(N).flt5 if 'utblrth.flt5.isNull() set FLG = 1
		set utblrth.rcc5=fUTBLRTH(N).rcc5 if 'utblrth.rcc5.isNull() set FLG = 1
		set utblrth.hld5=fUTBLRTH(N).hld5 if 'utblrth.hld5.isNull() set FLG = 1
		set utblrth.flt6=fUTBLRTH(N).flt6 if 'utblrth.flt6.isNull() set FLG = 1
		set utblrth.rcc6=fUTBLRTH(N).rcc6 if 'utblrth.rcc6.isNull() set FLG = 1
		set utblrth.hld6=fUTBLRTH(N).hld6 if 'utblrth.hld6.isNull() set FLG = 1
		set utblrth.flt7=fUTBLRTH(N).flt7 if 'utblrth.flt7.isNull() set FLG = 1
		set utblrth.rcc7=fUTBLRTH(N).rcc7 if 'utblrth.rcc7.isNull() set FLG = 1
		set utblrth.hld7=fUTBLRTH(N).hld7 if 'utblrth.hld7.isNull() set FLG = 1
		set utblrth.flt8=fUTBLRTH(N).flt8 if 'utblrth.flt8.isNull() set FLG = 1
		set utblrth.rcc8=fUTBLRTH(N).rcc8 if 'utblrth.rcc8.isNull() set FLG = 1
		set utblrth.hld8=fUTBLRTH(N).hld8 if 'utblrth.hld8.isNull() set FLG = 1

		// No data has been entered - nothing to file		
		if FLG = 0 quit

		do utblrth.bypassSave()
		}

	quit


 // If query conditions are involved
QRY(RecordUTBLRTH fUTBLRTH(), 	// Array of UTBLRTH record
	Number CNT, 		// Record Count
	String BRCD,		// Branch Code
	String RT)		// Route and Transit Number

	type Public String Q,RM,SEQBY,VPG
	type Public Number %PAGE
	type Public Boolean ER
	
	type Number X

	kill Q 

	if RT.get().isNull() quit
	set CNT=0
	set SEQBY="[SYSDEV,UTBLRTH]NUM"

	if 'Q("").order().isNull() do ^DBSQRYA

	type ResultSet rs
	if RT="ALL" do {
		set rs=Db.select("NUM","UTBLRTH","BRCD=:BRCD","NUM")		
		}
	else  do {
		set rs=Db.select("NUM","UTBLRTH","BRCD=:BRCD and NUM=:RT")
		}
	while rs.next() do {

		set CNT=CNT+1
		set RT=rs.getCol("NUM")

		set fUTBLRTH(CNT)=Db.getRecord("UTBLRTH","NUM=:RT,BRCD=:BRCD")

		#ACCEPT DATE=12/30/03;PGM=John Carroll
		if 1 set X=0 for  set X=Q(1,X).order() quit:X.isNull()  xecute Q(1,X) else  quit
		else  quit
		}

	// No matches found
	if 'CNT set ER=1 set RM=$$^MSG(1955) quit
	
	set %PAGE=CNT\4 

	if CNT#4 set %PAGE=%PAGE+1
	kill VPG

	quit


 // Builds the RTN()for the look up of the RT Number.
LOAD( String BRCD, 	// Branch Code		
     String RTN())      // Array of RT numbers  

	type ResultSet rs1=Db.select("NUM","UTBLRTH","BRCD=:BRCD","NUM")
	while rs1.next() do {
		set RTN(rs1.getCol("NUM"))=""
		}
	quit

vSIG()	quit "60571^11774^Dhanalakshmi R^7858"	// Signature - LTD^TIME^USER^SIZE
