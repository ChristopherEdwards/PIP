R01S551	// SCA636 - Unswept Investment Funds Trial Bal Rep
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:52 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA636"
	set RN="Unswept Investment Funds Trial Bal Rep"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %BLK,%NOCLOSE,%NOOPEN,%TIM,BC,CC,CONAM,CRCD,IPTJD,NRCNTRY,PGM,RID,RN,TYPE,VL,VLOF,VRF(),VSTATS(),WTHPRC,fDEPINVC,fDEPINVS,fDEPINVT,purch,redemp,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA636",RN="Unswept Investment Funds Trial Bal Rep"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA636","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DEPINVSORT]ICID#41#12,[DEPINVSORT]DAA#70#15,[DEPINVSORT]ACR#86#15,[DEPINVSORT]IYTD#102#15,[DEPINVSORT]IPY#118#15\[DEPINVSORT]ITYPE#49#4,[DEPINVSORT]BWY#102#15,[DEPINVSORT]BWP#118#15"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Unswept Investment Funds Trial Bal Rep"
		set VBNRINFO("PGM")="R01S551"
		set VBNRINFO("RID")="SCA636"
		set VBNRINFO("TABLES")="DEPINVSORT,DEP"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEPINVSORT]CRCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEPINVSORT]CC"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEPINVSORT]TYPE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DEPINVSORT]CID"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DEPINVSORT]ITYPE"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,DEPINVSORT]ICID"

		set VBNRINFO("DOC",1)=" Unswept Investment Funds Trial Balance Report(SCA636)  is a detailed report"
		set VBNRINFO("DOC",2)="which displays transaction accounts with associated investment accounts. It is"
		set VBNRINFO("DOC",3)="created to enable institutions to balance and track non-institution investment"
		set VBNRINFO("DOC",4)="balances and sweep activity. Only non-institution investment accounts are"
		set VBNRINFO("DOC",5)="included in this report.This report is broken down by Transaction Account"
		set VBNRINFO("DOC",6)="Product Type, Cost Center,Currency Code and sorts on account number. Hence,"
		set VBNRINFO("DOC",7)="this report calls three subreports subsequently:"
		set VBNRINFO("DOC",8)="         1) Subtotals By Transaction Account Product Type Report (SCA636A)"
		set VBNRINFO("DOC",9)="         2) Subtotals By Cost Center Report (SCA636B)"
		set VBNRINFO("DOC",10)="         3) Subtotals By Currency Code Report (SCA636C)"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DEPINVSORT.CRCD,DEPINVSORT.CC,DEPINVSORT.TYPE,DEPINVSORT.CID,DEPINVSORT.ITYPE,DEPINVSORT.ICID,DEP.BAL,DEP.BALCOL,DEPINVSORT.DAA,DEPINVSORT.ACR,DEPINVSORT.IYTD,DEPINVSORT.IPY,DEPINVSORT.BWY,DEPINVSORT.BWP,DEPINVSORT.BAL,DEPINVSORT.DBI","DEPINVSORT,DEP","","DEPINVSORT.CRCD,DEPINVSORT.CC,DEPINVSORT.TYPE,DEPINVSORT.CID,DEPINVSORT.ITYPE,DEPINVSORT.ICID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16
	set vc1=V.piece($C(9),1)			// DEPINVSORT.CRCD
	set vc2=V.piece($C(9),2)			// DEPINVSORT.CC
	set vc3=V.piece($C(9),3)			// DEPINVSORT.TYPE
	set vc4=V.piece($C(9),4)			// DEPINVSORT.CID
	set vc5=V.piece($C(9),5)			// DEPINVSORT.ITYPE
	set vc6=V.piece($C(9),6)			// DEPINVSORT.ICID
	set vc7=V.piece($C(9),7)			// DEP.BAL
	set vc8=V.piece($C(9),8)			// DEP.BALCOL
	set vc9=V.piece($C(9),9)			// DEPINVSORT.DAA
	set vc10=V.piece($C(9),10)			// DEPINVSORT.ACR
	set vc11=V.piece($C(9),11)			// DEPINVSORT.IYTD
	set vc12=V.piece($C(9),12)			// DEPINVSORT.IPY
	set vc13=V.piece($C(9),13)			// DEPINVSORT.BWY
	set vc14=V.piece($C(9),14)			// DEPINVSORT.BWP
	set vc15=V.piece($C(9),15)			// DEPINVSORT.BAL
	set vc16=V.piece($C(9),16)			// DEPINVSORT.DBI
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public String fDEPINVT,fDEPINVC,fDEPINVS

 do ^DEPINVSO
 set (fDEPINVT,fDEPINVC,fDEPINVS)=""
	quit

VRPOST	// Report post-processor

 type Public String %BLK,%NOOPEN,%NOCLOSE,RM,RID,PGM
 type public Number IO

 set (%NOOPEN,%NOCLOSE)=""
 set %BLK=""
 set RM=""
 if $$INTRACT^%ZFUNC,$P=IO write $$MSG^%TRMVT("",,1)   
 set RID="SCA636A" do ^URID 
 if PGM.length() do V0^@PGM
 kill %NOCLOSE
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VDTL4	// Detail
	type public String %BLK,%NOCLOSE,%NOOPEN,%TIM,BC,CC,CRCD,IO,IOSL,IPTJD,NRCNTRY,PGM,RID,RM,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),WTHPRC,fDEPINVC,fDEPINVS,fDEPINVT,purch,redemp,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",13-VL.length())_$J(vc7,16,2)
	set V=$E(NRCNTRY,1,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",30-VL.length())_V
	set VL=VL_$J("",33-VL.length())_$E(BC,1,2)
	set V=$E(WTHPRC,1,3) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",36-VL.length())_V
	do VOM
	set VL="             "_$J(vc7-vc8,16,2)
	do VOM
	quit

VDTL6	// Detail
	type public String %BLK,%NOCLOSE,%NOOPEN,%TIM,BC,CC,CRCD,IO,IOSL,IPTJD,NRCNTRY,PGM,RID,RM,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),WTHPRC,fDEPINVC,fDEPINVS,fDEPINVT,purch,redemp,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set V=vc6,VO=V set V=$J(V,12) do VP4 quit:VFMQ!verror.get()  set VL="                                        "_V
	do VP5 quit:VFMQ!verror.get()  set V=$J(purch,15,2)
	set VL=VL_$J("",53-VL.length())_V
	set VL=VL_$J("",69-VL.length())_$J(vc9,15,2)
	set VL=VL_$J("",85-VL.length())_$J(vc10,15,2)
	set VL=VL_$J("",101-VL.length())_$J(vc11,15,2)
	set VL=VL_$J("",117-VL.length())_$J(vc12,15,2)
	do VOM
	set VL="                                                "_$J(vc5,4)
	do VP6 quit:VFMQ!verror.get()  set V=$J(redemp,15,2)
	set VL=VL_$J("",53-VL.length())_V
	set VL=VL_$J("",69-VL.length())_$J(IPTJD,15,2)
	set VL=VL_$J("",85-VL.length())_$J(vc13,31,2)
	set VL=VL_$J("",117-VL.length())_$J(vc14,15,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %BLK,%MSKD,%NOCLOSE,%NOOPEN,%TIM,BC,CC,CONAM,CRCD,IO,IPTJD,NRCNTRY,PGM,RID,RM,RN,TYPE,VL,WTHPRC,fDEPINVC,fDEPINVS,fDEPINVT,purch,redemp,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+10,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="                     "_"Currency Code: "
	set VL=VL_$J("",41-VL.length())_$E(vc1,1,3)
	do VOM
	set VL="                       "_"Cost Center:"
	set VL=VL_$J("",38-VL.length())_$J(vc2,6)
	do VOM
	set VL="  "_"Transaction Account Product Type:"
	set VL=VL_$J("",40-VL.length())_$J(vc3,4)
	do VOM
	set VL="" do VOM
	set VL="Tran Acct   Tr Ac Unswept(Bal) Tax Code   Inv Acct Num    Purchases   Daily Accrual      Div Accrual    Div Paid YTD   Div Pd Pr Yr"
	do VOM
	set VL="   "_"Number   Unavail(Fed)Funds NRA B/C %   Inv Prod Type  Redemptions     Div Paid        This Period    Div W/H YTD    Div W/H Pr Yr"
	do VOM
	set VL="=================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,DEPINVSORT]CID

	type public String vc4
 type public Number ACN,CID,NRCNTRY,WTHPRC
 type public String BC,PCNTRY
 type public Date B1,B2,C1
 type public Boolean TXNFLG
 
 set NRCNTRY=0
 set BC=""   
 set CID=vc4
 type ResultSet rs=Db.select("BNOT1DT,BNOT2DT,CNOTDT","DEP","CID=:CID")
 if rs.next() do {
       set B1=rs.getCol("BNOT1DT")
       set B2=rs.getCol("BNOT2DT")
       set C1=rs.getCol("CNOTDT")
       }

 if 'B1.isNull()!'B2.isNull() set BC="B"
 if 'C1.isNull() set BC="C"
 set TXNFLG=1

 set WTHPRC=0
 type ResultSet rs1=Db.select("ACN","DEP","CID=:CID")
 if rs1.next() set ACN=rs1.getCol("ACN")
 type ResultSet rs2=Db.select("PCNTRY","CIF","ACN=:ACN")
 if rs2.next() set PCNTRY=rs2.getCol("PCNTRY")
 type ResultSet rs3=Db.select("WPCT","UTBLWCALC","KEY=:PCNTRY")
 if rs3.next() set WTHPRC=rs3.getCol("WPCT")
 if WTHPRC.isNull() do {
	type ResultSet rss=Db.select("%BWPCT","CUVAR")
	if rss.next() set WTHPRC=rss.getCol("%BWPCT")
	}
	quit

VP2	// Column post-processor - Variable: NRCNTRY

 type public Boolean TXNFLG
 type public String V 
 
 if 'TXNFLG  set V=" "
	quit

VP3	// Column post-processor - Variable: WTHPRC

 type public Boolean TXNFLG
 type public String V
 
 if 'TXNFLG  set V=" "
	quit

VP4	// Column post-processor - [SYSDEV,DEPINVSORT]ICID

	type public String vc6
 type public Number ICID,IPTJD,vsql
 type public Date IPLD,TJD
 type public String ETC,exe,PGM,Q,X
 
 set IPTJD=0
 set ICID=vc6
 type ResultSet rs4=Db.select("IPLD","DEP","CID=:ICID")
 if rs4.next() set IPLD=rs4.getCol("IPLD")
 if IPLD,IPLD=TJD do {
		type ResultSet rs0 = Db.select("ETC,TAMT","HIST","CID=:CID")
		if rs0.isEmpty() quit
		while rs0.next() do {
			set ETC=rs0.getCol("ETC")
			if ETC.isNull() quit
			type ResultSet rs5=Db.select("PGM","TRN","ETC=:ETC")
			if rs5.next() set PGM=rs5.getCol("PGM")
			if PGM["DEPINT" set IPTJD=IPTJD+rs0.getCol("TAMT")
		 	}
 }
	quit

VP5	// Column pre-processor - Variable: purch

	type public String vc15,vc16
 type Public Number purch,BALDIFF
 
 set purch=0
 set BALDIFF=vc15-vc16
 if BALDIFF>0 set purch=BALDIFF
	quit

VP6	// Column pre-processor - Variable: redemp

	type public String vc15,vc16
 type public Number BALDIFF,redemp
 
 set redemp=0
 set BALDIFF=vc15-vc16
 if BALDIFF<0 set redemp=-BALDIFF
	quit
