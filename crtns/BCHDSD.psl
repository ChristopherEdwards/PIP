BCHDSD //Batch BCHDSD - Deposit Scheduled Dates Conversion Batch
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:07 - joynerd
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHDSD Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit quit
 do JOBMGR^BCHUTL(%FN,"BCHDSD",.vINPUT)
 do ^JOBMGR(.vINPUT)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(CID) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHDSD","*","",CID.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,CID)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHDSD","*","",CID.get(),"",et)
 }
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,CID) //
	// Determine scheduled interest and/or negative interest posting dates
	do CNVACCT^DSDUTL(CID,SPDT,INTPOS,MODE,SAVPID)

	quit


CIDSORT(CID,GRP,TYP,ALLDEP,SAVPID)  // Retrieve account to convert & file them
	/*
	 This section retrieves the account numbers that the user selected
	 to convert and files them to the TMPACNDSD0 table by calling the
	 TMPFILE section.

	 ARGUMENTS:
		. CID		Account Number		/TYP=N/MECH=VAL/REQ
		. GRP		Product Group		/TYP=T/MECH=VAL/REQ
		. TYP		Product Type		/TYP=N/MECH=VAL/REQ
		. ALLDEP	All Deposit Accounts	/TYP=L/MECH=VAL/REQ
		. SAVPID	Process ID		/TYP=N/MECH=VAL/REQ

	 EXAMPLE:
		do CIDSORT(CID,GRP,TYP,ALLDEP,SAVPID)
	*/  

	new rs

	if CID'="" do TMPFILE(CID,SAVPID) quit
	else  if GRP'="" do {

		type ResultSet rs=Db.select("CID","DEP","GRP=:GRP")

		// No accounts satisfy query
		if rs.isEmpty() set vEXIT=1 do Runtime.setErrMSG("DEP",1890) quit:ER

		while rs.next() do TMPFILE(rs.getCol(1),SAVPID)
		}
	else  if TYP'="" do {
		type ResultSet rs=Db.select("CID","DEP","TYPE=:TYP")

		// No accounts satisfy query
		if rs.isEmpty() set vEXIT=1 do Runtime.setErrMSG("DEP",1890) quit:ER
 
		while rs.next() do TMPFILE(rs.getCol(1),SAVPID)
		}
	else  if ALLDEP'="" do {
		type ResultSet rs=Db.select("CID","DEP")

		// No accounts satisfy query
                if rs.isEmpty() set vEXIT=1 do Runtime.setErrMSG("DEP",1890) quit:ER
 
		while rs.next() do TMPFILE(rs.getCol(1),SAVPID)
		}

	quit


TMPFILE(CID,SAVPID)	// File account number to TMPACNDSD0
	/*
	 This section files an account number to the TMPACNDSD0 table so that
	 this batch definition can be run multithreaded.  TMPACNDSD0 is the
	 Access File listed for this batch.

	 ARGUMENTS:
		. CID		Account Number		/TYP=N/MECH=VAL/REQ
		. SAVPID	Process ID		/TYP=N/MECH=VAL/REQ

	 EXAMPLE:
		do TMPFILE(CID,SAVPID)
	*/

	new tmp

	type RecordTMPACNDSD0 tmp=Class.new("RecordTMPACNDSD0")
	set tmp.pid=SAVPID
	set tmp.cid=CID
	do tmp.bypassSave()

	quit

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,CID
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set CID=vRECORD.piece($C(9),1)
 do vPROC(CID)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,CID
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+13>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
	/*
	 This section queries the user to determine which accounts should be
	 converted prior to the batch being released to the job monitor. 
	 Accounts are filed to the TMPACNDSD0 table via the CIDSORT section
	*/ 

	new cuv,CID,GRP,TYP,ALLDEP,rs

	set (PID,SAVPID)=%ProcessID

	// Query user for accounts to convert
	do QUERY^DSDUTL(.CID,.GRP,.TYP,.ALLDEP,.MODE)

	// Account(s) not converted
	if VFMQ="Q" set vEXIT=1 do Runtime.setErrMSG("DEP",184) quit:ER

	type RecordCUVAR cuv=Db.getRecord("CUVAR","*")
	set INTPOS=cuv.intpos			// EOD/BOD Int Posting Indicator
	set SPDT=%SystemDate+INTPOS-1		// Stop Date

	// Retrieve accounts to convert and file to TMPACNDSD0
	do CIDSORT(CID,GRP,TYP,ALLDEP,SAVPID) quit:ER

 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("DISTINCT CID","TMPACNDSD0","PID=:SAVPID")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
	/*
	 This section generates the CNV62DSD report to display the scheduled
	 interest and/or negative interest posting dates calculated.
	*/

	// Generate CNV62DSD report
	do REP^DSDUTL

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
