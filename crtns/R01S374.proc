R01S374	// SCA403 - Loan Past Due Payments Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:49 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD
	type String TYP
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"

	set RID="SCA403"
	set RN="Loan Past Due Payments Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LN]GRP|[LN]GRP:DISTINCT:QU ""[LN]CLS=<<TYP>> AND [LN]STAT=0 AND [LN]DSEQ'>[LN]SCHSEQ""||S GRP=X D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN2")="|255||[LN]TYPE|[LN]TYPE:DISTINCT:QU ""[LN]CLS=<<TYP>> AND [LN]GRP=<<GRP>>""||D EXT^DBSQRY||T|Product Type|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD
	type public String TYP
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CID,CONAM,DAT(),HPH,PREVCID,RID,RN,TMPV(),VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc6,vc7,vc8,vc9,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA403",RN="Loan Past Due Payments Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA403","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LN]LNM#1#20,[LN]ACN#23#12,[LN]BOO#37#5"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LN]GRP "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN2,SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT="""")",SEQ=SEQ+1
		set DQQRY(SEQ)="LN.STAT=0 AND LN.DSEQ<=LN.SCHSEQ AND LNBIL1.CDPD<<<TJD>>",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNBIL1,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Product Group"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Type"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Past Due Payments Report"
		set VBNRINFO("PGM")="R01S374"
		set VBNRINFO("RID")="SCA403"
		set VBNRINFO("TABLES")="LNBIL1,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LN]OFF"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LN]LNM"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNBIL1]CID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LN]GRP"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LN]TYPE"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LNBIL1]SCHSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LN.CID,LNBIL1.PE01EA,LNBIL1.PE01AD,LNBIL1.PE02EA,L"
	set VSELECT=VSELECT_"NBIL1.PE02AD,LNBIL1.PE03EA,LNBIL1.PE03AD,LNBIL1.PE"
	set VSELECT=VSELECT_"04EA,LNBIL1.PE04AD,LNBIL1.PE05EA,LNBIL1.PE05AD,LNB"
	set VSELECT=VSELECT_"IL1.PE06EA,LNBIL1.PE06AD,LNBIL1.PE07EA,LNBIL1.PE07"
	set VSELECT=VSELECT_"AD,LNBIL1.PE08EA,LNBIL1.PE08AD,LNBIL1.PE09EA,LNBIL"
	set VSELECT=VSELECT_"1.PE09AD,LNBIL1.PE10EA,LNBIL1.PE10AD,LNBIL1.PE11EA"
	set VSELECT=VSELECT_",LNBIL1.PE11AD,LNBIL1.PE12EA,LNBIL1.PE12AD,LNBIL1."
	set VSELECT=VSELECT_"PE13EA,LNBIL1.PE13AD,LNBIL1.PE14EA,LNBIL1.PE14AD,L"
	set VSELECT=VSELECT_"NBIL1.PE15EA,LNBIL1.PE15AD,LNBIL1.PE16EA,LNBIL1.PE"
	set VSELECT=VSELECT_"16AD,LNBIL1.PE17EA,LNBIL1.PE17AD,LNBIL1.PE18EA,LNB"
	set VSELECT=VSELECT_"IL1.PE18AD,LNBIL1.PE19EA,LNBIL1.PE19AD,LNBIL1.PE20"
	set VSELECT=VSELECT_"EA,LNBIL1.PE20AD,LNBIL1.CDPD,LNBIL1.CASD,LN.OFF,LN"
	set VSELECT=VSELECT_".LNM,LNBIL1.CID,LN.GRP,LN.TYPE,LNBIL1.SCHSEQ,LN.AC"
	set VSELECT=VSELECT_"N,LN.BOO,LN.MDT,LN.BAL,LN.DIST1ND,LN.LCHG,LN.TDUE,"
	set VSELECT=VSELECT_"LN.PCIDSTAT"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNBIL1,LN",VWHERE,"LN.OFF,LN.LNM,LNBIL1.CID,LN.GRP,LN.TYPE,LNBIL1.SCHSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc44,vovc45,vovc46,vovc47,vovc48,vovc49
	set vovc44="",vovc45="",vovc46="",vovc47="",vovc48="",vovc49=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc44,vc44,vovc45,vc45,vovc46,vc46,vovc47,vc47,vovc48,vc48,vovc49,vc49
	set vovc44=vc44,vovc45=vc45,vovc46=vc46,vovc47=vc47,vovc48=vc48,vovc49=vc49
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57
	set vc1=V.piece($C(9),1)			// LN.CID
	set vc2=V.piece($C(9),2)			// LNBIL1.PE01EA
	set vc3=V.piece($C(9),3)			// LNBIL1.PE01AD
	set vc4=V.piece($C(9),4)			// LNBIL1.PE02EA
	set vc5=V.piece($C(9),5)			// LNBIL1.PE02AD
	set vc6=V.piece($C(9),6)			// LNBIL1.PE03EA
	set vc7=V.piece($C(9),7)			// LNBIL1.PE03AD
	set vc8=V.piece($C(9),8)			// LNBIL1.PE04EA
	set vc9=V.piece($C(9),9)			// LNBIL1.PE04AD
	set vc10=V.piece($C(9),10)			// LNBIL1.PE05EA
	set vc11=V.piece($C(9),11)			// LNBIL1.PE05AD
	set vc12=V.piece($C(9),12)			// LNBIL1.PE06EA
	set vc13=V.piece($C(9),13)			// LNBIL1.PE06AD
	set vc14=V.piece($C(9),14)			// LNBIL1.PE07EA
	set vc15=V.piece($C(9),15)			// LNBIL1.PE07AD
	set vc16=V.piece($C(9),16)			// LNBIL1.PE08EA
	set vc17=V.piece($C(9),17)			// LNBIL1.PE08AD
	set vc18=V.piece($C(9),18)			// LNBIL1.PE09EA
	set vc19=V.piece($C(9),19)			// LNBIL1.PE09AD
	set vc20=V.piece($C(9),20)			// LNBIL1.PE10EA
	set vc21=V.piece($C(9),21)			// LNBIL1.PE10AD
	set vc22=V.piece($C(9),22)			// LNBIL1.PE11EA
	set vc23=V.piece($C(9),23)			// LNBIL1.PE11AD
	set vc24=V.piece($C(9),24)			// LNBIL1.PE12EA
	set vc25=V.piece($C(9),25)			// LNBIL1.PE12AD
	set vc26=V.piece($C(9),26)			// LNBIL1.PE13EA
	set vc27=V.piece($C(9),27)			// LNBIL1.PE13AD
	set vc28=V.piece($C(9),28)			// LNBIL1.PE14EA
	set vc29=V.piece($C(9),29)			// LNBIL1.PE14AD
	set vc30=V.piece($C(9),30)			// LNBIL1.PE15EA
	set vc31=V.piece($C(9),31)			// LNBIL1.PE15AD
	set vc32=V.piece($C(9),32)			// LNBIL1.PE16EA
	set vc33=V.piece($C(9),33)			// LNBIL1.PE16AD
	set vc34=V.piece($C(9),34)			// LNBIL1.PE17EA
	set vc35=V.piece($C(9),35)			// LNBIL1.PE17AD
	set vc36=V.piece($C(9),36)			// LNBIL1.PE18EA
	set vc37=V.piece($C(9),37)			// LNBIL1.PE18AD
	set vc38=V.piece($C(9),38)			// LNBIL1.PE19EA
	set vc39=V.piece($C(9),39)			// LNBIL1.PE19AD
	set vc40=V.piece($C(9),40)			// LNBIL1.PE20EA
	set vc41=V.piece($C(9),41)			// LNBIL1.PE20AD
	set vc42=V.piece($C(9),42)			// LNBIL1.CDPD
	set vc43=V.piece($C(9),43)			// LNBIL1.CASD
	set vc44=V.piece($C(9),44)			// LN.OFF
	set vc45=V.piece($C(9),45)			// LN.LNM
	set vc46=V.piece($C(9),46)			// LNBIL1.CID
	set vc47=V.piece($C(9),47)			// LN.GRP
	set vc48=V.piece($C(9),48)			// LN.TYPE
	set vc49=V.piece($C(9),49)			// LNBIL1.SCHSEQ
	set vc50=V.piece($C(9),50)			// LN.ACN
	set vc51=V.piece($C(9),51)			// LN.BOO
	set vc52=V.piece($C(9),52)			// LN.MDT
	set vc53=V.piece($C(9),53)			// LN.BAL
	set vc54=V.piece($C(9),54)			// LN.DIST1ND
	set vc55=V.piece($C(9),55)			// LN.LCHG
	set vc56=V.piece($C(9),56)			// LN.TDUE
	set vc57=V.piece($C(9),57)			// LN.PCIDSTAT
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43
	/* ---- Revision History ------------------------------------
		06/19/06 - NATRAJAH - CR21257
			Modified payment element(LNBIL1.PE01EA) check 
			condition
	*/

	type String C,PRIN,TY(),X
	type Public String TMPV(),DAT()
	type Public Number CID,PREVCID
	type Number ESC,INT,J
	type Date DD

	set CID=vc1

	//I18N=OFF
	if PREVCID'=CID do {
		set PREVCID=CID
	        type RecordLNBIL0 lnbil0=Db.getRecord("LNBIL0","CID=:CID",1)
		if lnbil0.getMode() do {
			if lnbil0.pe01da if Db.isDefined("LN","CID=:lnbil0.pe01da") set TY(lnbil0.pe01ea)=""
			else  quit
			if lnbil0.pe02da if Db.isDefined("LN","CID=:lnbil0.pe02da") set TY(lnbil0.pe02ea)=""
			else  quit
			if lnbil0.pe03da if Db.isDefined("LN","CID=:lnbil0.pe03da") set TY(lnbil0.pe03ea)=""
			else  quit
			if lnbil0.pe04da if Db.isDefined("LN","CID=:lnbil0.pe04da") set TY(lnbil0.pe04ea)=""
			else  quit
			if lnbil0.pe05da if Db.isDefined("LN","CID=:lnbil0.pe05da") set TY(lnbil0.pe05ea)=""
			else  quit
			if lnbil0.pe06da if Db.isDefined("LN","CID=:lnbil0.pe06da") set TY(lnbil0.pe06ea)=""
			else  quit
			if lnbil0.pe07da if Db.isDefined("LN","CID=:lnbil0.pe07da") set TY(lnbil0.pe07ea)=""
			else  quit
			if lnbil0.pe08da if Db.isDefined("LN","CID=:lnbil0.pe08da") set TY(lnbil0.pe08ea)=""
			else  quit
			if lnbil0.pe09da if Db.isDefined("LN","CID=:lnbil0.pe09da") set TY(lnbil0.pe09ea)=""
			else  quit
			if lnbil0.pe10da if Db.isDefined("LN","CID=:lnbil0.pe10da") set TY(lnbil0.pe10ea)=""
			else  quit
			if lnbil0.pe11da if Db.isDefined("LN","CID=:lnbil0.pe11da") set TY(lnbil0.pe11ea)=""
			else  quit
			if lnbil0.pe12da if Db.isDefined("LN","CID=:lnbil0.pe12da") set TY(lnbil0.pe12ea)=""
			else  quit
			if lnbil0.pe13da if Db.isDefined("LN","CID=:lnbil0.pe13da") set TY(lnbil0.pe13ea)=""
			else  quit
			if lnbil0.pe14da if Db.isDefined("LN","CID=:lnbil0.pe14da") set TY(lnbil0.pe14ea)=""
			else  quit
			if lnbil0.pe15da if Db.isDefined("LN","CID=:lnbil0.pe15da") set TY(lnbil0.pe15ea)=""
			else  quit
			if lnbil0.pe16da if Db.isDefined("LN","CID=:lnbil0.pe16da") set TY(lnbil0.pe16ea)=""
			else  quit
			if lnbil0.pe17da if Db.isDefined("LN","CID=:lnbil0.pe17da") set TY(lnbil0.pe17ea)=""
			else  quit
			if lnbil0.pe18da if Db.isDefined("LN","CID=:lnbil0.pe18da") set TY(lnbil0.pe18ea)=""
			else  quit
			if lnbil0.pe19da if Db.isDefined("LN","CID=:lnbil0.pe19da") set TY(lnbil0.pe19ea)=""
			else  quit
			if lnbil0.pe20da if Db.isDefined("LN","CID=:lnbil0.pe20da") set TY(lnbil0.pe20ea)=""
			else  quit
			}

		}

	// find unpaid bill dates
	set ESC=0
	set PRIN=0
	set INT=0

	if 'vc2.get().isNull() do BILFUNC1(vc2,vc3,.INT,.PRIN,.ESC,.TY)
	if 'vc4.get().isNull() do BILFUNC1(vc4,vc5,.INT,.PRIN,.ESC,.TY)
	if 'vc6.get().isNull() do BILFUNC1(vc6,vc7,.INT,.PRIN,.ESC,.TY)
	if 'vc8.get().isNull() do BILFUNC1(vc8,vc9,.INT,.PRIN,.ESC,.TY)
	if 'vc10.get().isNull() do BILFUNC1(vc10,vc11,.INT,.PRIN,.ESC,.TY)
	if 'vc12.get().isNull() do BILFUNC1(vc12,vc13,.INT,.PRIN,.ESC,.TY)
	if 'vc14.get().isNull() do BILFUNC1(vc14,vc15,.INT,.PRIN,.ESC,.TY)
	if 'vc16.get().isNull() do BILFUNC1(vc16,vc17,.INT,.PRIN,.ESC,.TY)
	if 'vc18.get().isNull() do BILFUNC1(vc18,vc19,.INT,.PRIN,.ESC,.TY)
	if 'vc20.get().isNull() do BILFUNC1(vc20,vc21,.INT,.PRIN,.ESC,.TY)
	if 'vc22.get().isNull() do BILFUNC1(vc22,vc23,.INT,.PRIN,.ESC,.TY)
	if 'vc24.get().isNull() do BILFUNC1(vc24,vc25,.INT,.PRIN,.ESC,.TY)
	if 'vc26.get().isNull() do BILFUNC1(vc26,vc27,.INT,.PRIN,.ESC,.TY)
	if 'vc28.get().isNull() do BILFUNC1(vc28,vc29,.INT,.PRIN,.ESC,.TY)
	if 'vc30.get().isNull() do BILFUNC1(vc30,vc31,.INT,.PRIN,.ESC,.TY)
	if 'vc32.get().isNull() do BILFUNC1(vc32,vc33,.INT,.PRIN,.ESC,.TY)
	if 'vc34.get().isNull() do BILFUNC1(vc34,vc35,.INT,.PRIN,.ESC,.TY)
	if 'vc36.get().isNull() do BILFUNC1(vc36,vc37,.INT,.PRIN,.ESC,.TY)
	if 'vc38.get().isNull() do BILFUNC1(vc38,vc39,.INT,.PRIN,.ESC,.TY)
	if 'vc40.get().isNull() do BILFUNC1(vc40,vc41,.INT,.PRIN,.ESC,.TY)

	set DD=vc42
	set TMPV(CID,DD)=DD_"|"_PRIN_"|"_INT_"|"_ESC_"|"_vc43
	
	quit


BILFUNC1(P1,P2,INT,PRIN,ESC,TY)	// function to manipulate LNBIL1 data

	if P1="I" set INT=P2
	if P1="P" set PRIN=P2
	if $D(TY(P1)) set ESC=ESC+P2

	quit

VPREAQ	// Pre-processor (after query)

	type Public Number PREVCID
	set PREVCID=0
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=%SystemDate
	type Public String TYP
	set TYP="L"
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VHDG5 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc44,vovc44,vc45,vovc45,vc46,vovc46,vc47,vovc47,vc48,vovc48,vc49,vovc49
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc44'=vc44) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc45'=vc45) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(+vovc46'=+vc46) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1
	if vb4!(vovc47'=vc47) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(+vovc48'=+vc48) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VDTL2	// Detail
	type public String %TIM,CID,DAT(),HPH,IOSL,PREVCID,TJD,TMPV(),TYP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc6,vc7,vc8,vc9,verror,vh(),vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$E(vc45,1,20)
	set VL=VL_$J("",21-VL.length())_$J(vc50,13)
	set VL=VL_$J("",35-VL.length())_$J(vc51,6)
	do VP1 quit:VFMQ!verror.get()  set V=$E(HPH,1,12)
	set VL=VL_$J("",44-VL.length())_V
	do VOM
	quit

VHDG5	// Group Header
	type public String %MSKD,%TIM,CID,CONAM,DAT(),ER,HPH,IOSL,PREVCID,RID,RN,TJD,TMPV(),TYP,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vrundate,vsysdate

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "_$J(vc1,12)
	set VL=VL_$J("",15-VL.length())_$J(vc48,5)
	set VL=VL_$J("",24-VL.length())_$J($$DAT^%ZM(vc52),10)
	set VL=VL_$J("",35-VL.length())_$J($FN(vc53,",",2),12)
	set VL=VL_$J("",49-VL.length())_$J($$DAT^%ZM(vc54),10)
	set VL=VL_$J("",60-VL.length())_$J($FN(vc55,",",2),6)
	set V=vc56,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),12)
	set VL=VL_$J("",67-VL.length())_V		// [SYSDEV,LN]TDUE
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,CID,DAT(),HPH,IOSL,PREVCID,TJD,TMPV(),TYP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc6,vc7,vc8,vc9,verror,vh(),vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP3 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(DAT(1)),10) set VL="                                                                                 "_V
	set VL=VL_$J("",92-VL.length())_$J($FN(DAT(2),",",2),9)
	set VL=VL_$J("",102-VL.length())_$J($FN(DAT(3),",",2),9)
	set VL=VL_$J("",112-VL.length())_$J($FN(DAT(4),",",2),9)
	set VL=VL_$J("",122-VL.length())_$J($FN(DAT(5),",",2),10)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CID,CONAM,DAT(),HPH,PREVCID,RID,RN,TJD,TMPV(),TYP,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc6,vc7,vc8,vc9,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Loan Officer "
	set VL=VL_$J("",13-VL.length())_$E(vc44,1,4)
	set V=$$VP4(vc44)				// @TBL([LN]OFF)
	set VL=VL_$J("",19-VL.length())_$E(V,1,40)
	do VOM
	set VL="" do VOM
	set VL="Customer               CIF Number   Branch  Telephone        Late"
	do VOM
	set VL="  "_"Loan Account  Type    Maturity        Balance   Next Due  Charge   Total Due     Pmt Due   Principal  Interest   Escrow      Total"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: HPH

	type public String vc50
	type Public String HPH
	type Public Number ACN
	set ACN=vc50
	type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
	set HPH=cif.hph
	quit

VP2	// Column pre-processor - [SYSDEV,LN]TDUE

	type public String vc57
	type String V,VL

	if vc57 set (V,VL)=""
	quit

VP3	// Column pre-processor - Variable: DAT(1)

	type public String vc42
 type Public String TMPV,DAT
 type Public Date DIST1ND
 type Public Number CID
 type String DATA
 type Number I
 set DIST1ND=vc42
 set DATA=$G(TMPV(CID,DIST1ND))
 for I=1:1:5 set DAT(I)=$P(DATA,"|",I)
	quit

VP4(KEY1)	// @TBL([LN]OFF)

	if KEY1="" quit ""
	type Public Cache %CACHE()
	type RecordUTBLOFF tbl=%CACHE("UTBLOFF").getRecord("UTBLOFF","OFF=:KEY1")
	quit tbl.DESC
