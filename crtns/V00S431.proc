V00S431(%ProcessMode,RecordPURHIS fPURHIS())   //PBS - DEP - SID= <PURHIS> History Purge Prompts
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:58 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="PURHIS",VPGM=$T(+0),VSNAME="History Purge Prompts"
 set VFSN("PURHIS")="zfPURHIS"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=15 do VPR(.fPURHIS()),VDA1(.fPURHIS()),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fPURHIS()) if ER quit  // Screen Pre-Processor
 
 // Display Pre-Processor
 //
 if '%ProcessMode do VNEW(.fPURHIS()),VDSPPRE(.fPURHIS()) quit:$G(ER)  do VPR(.fPURHIS()),VDA1(.fPURHIS())
 if %ProcessMode do VLOD(.fPURHIS()) quit:$G(ER)  do VDSPPRE(.fPURHIS()) quit:$G(ER)  do VPR(.fPURHIS()),VDA1(.fPURHIS())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fPURHIS())
	quit


VNEW(RecordPURHIS fPURHIS()) // Initialize arrays if %O=0
 
 do VDEF(.fPURHIS())
 do VLOD(.fPURHIS())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordPURHIS fPURHIS())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordPURHIS fPURHIS()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=15
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordPURHIS fPURHIS()) // Display screen prompts
 set VO="2||13|"
 set VO(0)="|0"
 set VO(1)=$C(5,1,74,2,0,0,0,0,0,0)_"01TType     Purge               Type      Purge               Type      Purge"
 set VO(2)=$C(6,1,73,2,0,0,0,0,0,0)_"01TCode     Date                Code      Date                Code      Date"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordPURHIS fPURHIS())  // Display screen data
 new V
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set v1=$G(HEADER(1))
 
 //
 set VO="3|3|13|"
 set VO(3)=$C(2,25,0,1,0,0,0,0,0,0)_"01T"_$G(v1)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+0,DY=8 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fPURHIS())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordPURHIS fPURHIS())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'fPURHIS(I).getPointer() do {
     set fPURHIS(I)=Class.new("RecordPURHIS","")
     }
 set VO(VX+1)=$C(DY,1,3,2,0,0,0,0,0,0)_"00N"_fPURHIS(I).TYPE1
 set VO(VX+2)=$C(DY,10,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fPURHIS(I).DATE1)
 set VO(VX+3)=$C(DY,30,3,2,0,0,0,0,0,0)_"00N"_fPURHIS(I).TYPE2
 set VO(VX+4)=$C(DY,40,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fPURHIS(I).DATE2)
 set VO(VX+5)=$C(DY,60,3,2,0,0,0,0,0,0)_"00N"_fPURHIS(I).TYPE3
 set VO(VX+6)=$C(DY,70,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fPURHIS(I).DATE3)
 set DY=DY+1,VX=VX+6
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordPURHIS fPURHIS())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=0,%MOD=6,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=2,VPB=7+%REPEAT,BLKSIZ=(39*%REPEAT)+0,PGM=$T(+0),DLIB="SYSDEV",DFID="PURHIS"
 set OLNTB=VPB*1000
 
 set VFSN("PURHIS")="zfPURHIS"
 //
 for I=7:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(7,0,3)_"00N12401|1|[PURHIS]TYPE1|[PRODDFTC]:NOVAL||do VP1^V00S431(.fPURHIS)"
 set %TAB(2)=$C(7,9,10)_"00D12402|1|[PURHIS]DATE1|||do VP2^V00S431(.fPURHIS)"
 set %TAB(3)=$C(7,29,3)_"00N12403|1|[PURHIS]TYPE2|[PRODDFTC]:NOVAL||do VP3^V00S431(.fPURHIS)"
 set %TAB(4)=$C(7,39,10)_"00D12404|1|[PURHIS]DATE2|||do VP4^V00S431(.fPURHIS)"
 set %TAB(5)=$C(7,59,3)_"00N12405|1|[PURHIS]TYPE3|[PRODDFTC]:NOVAL||do VP5^V00S431(.fPURHIS)"
 set %TAB(6)=$C(7,69,10)_"00D12406|1|[PURHIS]DATE3|||do VP6^V00S431(.fPURHIS)"
 do VTBL(.fPURHIS())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordPURHIS fPURHIS()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordPURHIS fPURHIS()) //
 do CALCDAT^CIFHPRG(.fPURHIS())
 
VP2(RecordPURHIS fPURHIS()) //
 do CHKDATE^CIFHPRG(.fPURHIS())
VP3(RecordPURHIS fPURHIS()) //
 do CALCDAT^CIFHPRG(.fPURHIS())
VP4(RecordPURHIS fPURHIS()) //
 do CHKDATE^CIFHPRG(.fPURHIS())
VP5(RecordPURHIS fPURHIS()) //
 do CALCDAT^CIFHPRG(.fPURHIS())
VP6(RecordPURHIS fPURHIS()) //
 do CHKDATE^CIFHPRG(.fPURHIS())
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordPURHIS fPURHIS()
 do VPR(.fPURHIS())
 do VDA1(.fPURHIS())
 do ^DBSPNT()
 quit

VW(RecordPURHIS fPURHIS())
 do VDA1(.fPURHIS())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordPURHIS fPURHIS())
 do VDA1(.fPURHIS())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordPURHIS fPURHIS()
 do VDA1(.fPURHIS())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordPURHIS fPURHIS()
 if sn="PURHIS" do vSET1(fPURHIS(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordPURHIS fPURHIS,di,X)
 do fPURHIS.setAuditFlag(1)
 set fPURHIS.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordPURHIS fPURHIS()
 if fid="PURHIS" quit $$vREAD1(fPURHIS(I(1)),di)
 quit ""
vREAD1(RecordPURHIS fPURHIS,di)
 quit fPURHIS.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordPURHIS fPURHIS())  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 //Incoming=VX
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
 //
VDSPPRE(RecordPURHIS fPURHIS())  // Display Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type public String RM,TYPE
 
 // Enter 'ALL' to input all ~p1 codes
 set RM=$$^MSG(904,TYPE)
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
