public I18NREP //I18N Translation Set Replace
  /*
	ORIG: kumarb - 11/24/2005
	DESC: I18N Translation Set Replace

	 I18N=QUIT	This program does not need to conform to the I18N
			internal programming standards
	 DESC:	 	This program is responsible for writing back to the
			PROFILE globals all the phrases that either have a
			specific translation of a detail phrase or have a
			normalized translation.
	 
			The user is first prompted for a Tset from a UTLREAD
			screen.  The user input is verified against the existing
			Tsets.
	 
			The logfile is opened.  It will be use to record
			before and after audits of changes made to the PROFILE
			database.
	 
			If a detail phrase has a specific translation the
			translated phrase is replaced. If the detail phrase
			does not have a specific translation then the
			normalized phrase is searched for one. If it gets one,
			this translation is used as input together with the
			phrase type of the detail phrase to generate the phrase
			to be replaced. This generation is called unnormal-
			ization of phrases.
			
			The database is updated with the translated phrase
			by calling SETSRC^I18NUTL 
	 
			After collating thru the selected Tset, the I18NTS
			header is updated with counter information.
	
			The logfile is closed.
	 
			A return message is build in the RM.  
			
	 
	 CALLED BY:	Menusystem. No other routines.
	 CALL TO:      $$DI^SCATAB		- Build %TAB array
			UTLREAD			- Prompt for access keys
			LOGOPN^I18NUTL		- Open logfile
			GETKEY^I18NUTL		- Get keys into I18NEXT 
			UNNRMPHR^I18NNRM	- Unnormalize normalized phrase	
			SETSRC^I18NUTL		- Update PROFILE globals
			LOGCLS^I18NUTL		- Close logfile
	
	 GLOBALS READ:
			I18NTS		- Tsets
			I18NEXT		- Header level for normalized phrases
					  Detail level for detail phrases
	 GLOBALS SET:
			I18NTS		- Tsets
	 ARGUMENTS:
	 INPUTS:
	
	 RETURNS:
	 EXAMPLE:
	 LIBRARY:
	
	---Revision History-------------------------------------------------
	
	11/24/05 - KUMARB - CR 16921
        	Converted to PSL.
        
	--------------------------------------------------------------------
	*/
	
	do INIT
	
	quit
	
INIT	// New variables specific for this program
	/*
	HdrCnt	number of phrases replaced back into the system
		where the phrase used came from the normalized level
		of I18NEXT.  This means that the individual detail
		record did not have a translation, so the header
		record translation was used.   For example, if
		"ACCOUNT NUMBER" occurs 534 times in the system, the
		translator could change it once for all 534 "detail"
		records, or translate some (or all) of the 534 detail
		occurances.
	DtlCnt	number of phrases replaced back into system where a
		detail translation is used
	nseq	Normalized Sequence Number Key in ^I18NTSET (I18NTS2)
	DtlKeys	Array returned back from GETKEY^I18NUTL containing a
		list of the PROFILE references for each detail record
		in the Tset for the given normalized phrase
	indx	index used in for loop
	extdt	Extract date, a key in ^I18NEXT
	NrmPhr	Normalized Phrase
	globref	Global Referece where phrase is to be replaced back inot PROFILE
	piece	MUMPS piece where phrase is to be replaced back into PROFILE
	pt	Phrase Type
	htr	flag indicating the presence of a header (normalized) level translations
	dtr	flag indicating the presence of a detail level translation
	tphr	target or translated phrase
	UnRep	Unreplace flag
	ok	return value from (U)SETSRC False(0) if error occured
	ErrCnt	Number of errors returned from SETSRC (ok=0)
	*/

	type public Number Undo
	type public String ER,RM
	
	type Boolean UnRep
	type Number DtlCnt,ErrCnt,HdrCnt,TSID
	type String HDG,VFMQ,%NOPRMT,%READ,%TAB()

	// Initializing Variables
	set HdrCnt=0
	set DtlCnt=0
	set ErrCnt=0
	set UnRep=0
	
	if Undo.exists() set UnRep=1

	// UTLREAD SCREEN
	set HDG=$$^MSG(5933)
	if UnRep set HDG=$$^MSG(5934)
	set HDG=$J("",40-((HDG).length()/2))_HDG

	set %TAB("TSID")=$$DI^SCATAB("[I18NTS2]TSID","Tset ID",12,"[I18NTS2]","I '%O D CHANGE^DBSMACRO(""TBL"",""""),GOTO^DBSMACRO(""END"")","","T")
	set %READ="@HDG,,TSID#1"
	set %NOPRMT="C"

	do ^UTLREAD 		//display UTLREAD screen
	if "Q"[VFMQ quit	//quit program if Quit hit from UTLREAD screen
	
	// TSet ~p1 already in use
	lock +I18NTS2(TSID):1 else  do Runtime.setErrMSG("I18NTS2",5438,TSID) quit

	//performs main part of program
	do FILE
	
	// Unlock TSET 
	lock -I18NTS2(TSID)
	
	// Build status return message in RM
	if (RM.exists()),('RM.isNull()) quit
	set ER="W"
	// Tset ~p1 replaced: ~p2 header, ~p3 detail with ~p4 error(s)
	set RM=$$^MSG(5470,TSID.get(),HdrCnt,DtlCnt,ErrCnt)
	if UnRep set RM=$$^MSG(5470,TSID.get(),HdrCnt,DtlCnt,ErrCnt)
	
	quit
	
FILE	// File data

	type public Boolean UnRep
	type public Number DtlCnt,ErrCnt,HdrCnt,TSID
	
	type Number dtr,htr,indx,nseq,ok,pt
	type String DtlKeys(),extdt,globref,NrmPhr,origphr,piece,tphr
	
	// Get Tset information
	type RecordI18NTS2 i18nts2=Db.getRecord("I18NTS2","TSID=:TSID",1)

	// Collate thru selected tset
	type DbSet ds=Db.selectDbSet("I18NTSETN","TSID=:TSID","NSEQ")
	while ds.next() do {
		type RecordI18NTSETN i18ntsn=ds.getRecord("I18NTSETN")
		set nseq=i18ntsn.nseq
		do GETKEY^I18NUTL(.i18ntsn,.extdt,.NrmPhr,.DtlKeys)
		type RecordI18NEXTH i18nexth=Db.getRecord("I18NEXTH","EXTDT=:extdt,NORMPHR=:NrmPhr",1)
		// Collate thru detail phrase Key Array
		set indx=""
		for  set indx=DtlKeys(indx).order() quit:indx=""  do {
			// Build phrase replacement data
			set globref=DtlKeys(indx).extract(1,DtlKeys(indx).find(")")-1)
			set piece=DtlKeys(indx).extract(DtlKeys(indx).find(")"),DtlKeys(indx).length())

			type RecordI18NEXTD i18nextd=Db.getRecord("I18NEXTD","EXTDT=:extdt,NORMPHR=:NrmPhr,GLOBREF=:DtlKeys(indx)",1)
			set pt=i18nextd.ptype
			set htr=(i18nexth.ttype>0)
			set dtr=(i18nextd.ttype>0)
			set origphr=i18nextd.origphr
			if dtr set tphr=i18nextd.targphr,DtlCnt=DtlCnt+1
			// Unnormalize if not specific detail translation
			if (htr),('dtr) set HdrCnt=HdrCnt+1,tphr=$$UNNRMPHR^I18NNRM(i18nexth.targphr,pt)
			
			// Use SETSRC to replace PROFILE phrase if it has been translated
			if 'UnRep do {
				if (htr)!(dtr) do {
					set ok=$$SETSRC^I18NUTL(globref,piece,tphr,i18nextd.dbtyp,i18nextd.uxfi,i18nextd.uxdi,TSID,origphr)
					if ('ok),(dtr) set DtlCnt=DtlCnt-1
					if ('ok),(htr),('dtr) set HdrCnt=HdrCnt-1
					// error condition in SETSRC
					if ('ok) set ErrCnt=ErrCnt+1
					}
				}

			// Use USETSRC to unreplace PROFILE phrase if it has been translated
			if UnRep do {
				if (htr)!(dtr) do {
					set ok=$$SETSRC^I18NUTL(globref,piece,origphr,i18nextd.dbtyp,i18nextd.uxfi,i18nextd.uxdi,TSID,origphr,1)
					if ('ok),(dtr) set DtlCnt=DtlCnt-1
					if ('ok),(htr),('dtr) set HdrCnt=HdrCnt-1
					// error condition in SETSRC
					if ('ok) set ErrCnt=ErrCnt+1
					}
				}
			}
		}
		
	// Update Tset information
	set i18nts2.repdt=%CurrentDate
	if 'UnRep do {
		set i18nts2.repnodet=DtlCnt
		set i18nts2.repnoun=HdrCnt
		}
	if UnRep do {
		set i18nts2.repnodet=i18nts2.repnodet-DtlCnt
		set i18nts2.repnoun=i18nts2.repnoun-HdrCnt
		}
		
	do i18nts2.save()
	
	quit
		
public UNREP // Un Replace a TSet Logic
	// Call this line tag to do an un-replace
	
	type Number Undo
	
	set Undo=1
	
	do I18NREP
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60235^24983^Balasubramonian Sankar^6940"	// Signature - LTD^TIME^USER^SIZE
