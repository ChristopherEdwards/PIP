V01S383(Number %ProcessMode,RecordLNICNV LNICNV())   //PBS - LN - SID= <LNICNV3> Deferred-to-Permanent Loan Conversion
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:30 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'LNICNV(1).exists() set LNICNV(1) = Class.new("RecordLNICNV")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNICNV3",VPGM=$T(+0),VSNAME="Deferred-to-Permanent Loan Conversion"
 set VFSN("LNICNV")="zLNICNV"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=16 do VPR(.LNICNV()),VDA1(.LNICNV()),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.LNICNV()),VPR(.LNICNV()),VDA1(.LNICNV())
 if %ProcessMode do VLOD(.LNICNV()) quit:$G(ER)  do VPR(.LNICNV()),VDA1(.LNICNV())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.LNICNV())
	quit


VNEW(RecordLNICNV LNICNV()) // Initialize arrays if %O=0
 
 do VDEF(.LNICNV())
 do VLOD(.LNICNV())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordLNICNV LNICNV())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordLNICNV LNICNV()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=16
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNICNV LNICNV()) // Display screen prompts
 set VO="3||13|0"
 set VO(0)="|0"
 set VO(1)=$C(5,2,12,2,0,0,0,0,0,0)_"01TLoan Account"
 set VO(2)=$C(5,18,28,2,0,0,0,0,0,0)_"01TLoan Account    Loan Account"
 set VO(3)=$C(5,50,28,2,0,0,0,0,0,0)_"01TLoan Account    Loan Account"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordLNICNV LNICNV())  // Display screen data
 new V
 if %ProcessMode=5 new DESC,v1,v2,v3,v4,v5
 if  set (DESC,v1,v2,v3,v4,v5)=""
 else  new v1,v2,v3,v4,v5
 else  set DESC=$G(DESC),v1=$G(TY(1)),v2=$G(TY(2)),v3=$G(TY(3)),v4=$G(TY(4)),v5=$G(TY(5))
 
 s DESC=$G(DESC)
 s TY(1)=$G(TY(1))
 s TY(2)=$G(TY(2))
 s TY(3)=$G(TY(3))
 s TY(4)=$G(TY(4))
 s TY(5)=$G(TY(5))
 //
 set VO="9|4|13|0"
 set VO(4)=$C(1,2,0,2,0,0,0,0,0,0)_"01T"_DESC.get()
 set VO(5)=$C(4,2,0,2,0,0,0,0,0,0)_"01T"_v1.get()
 set VO(6)=$C(4,18,0,2,0,0,0,0,0,0)_"01T"_v2.get()
 set VO(7)=$C(4,34,0,2,0,0,0,0,0,0)_"01T"_v3.get()
 set VO(8)=$C(4,50,0,2,0,0,0,0,0,0)_"01T"_v4.get()
 set VO(9)=$C(4,66,0,2,0,0,0,0,0,0)_"01T"_v5.get()
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+5,DY=7 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.LNICNV())
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNICNV LNICNV())  // Display data %REPEAT times
 //instantiate new object if necessary
  #ACCEPT;DATE=08/08/06; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEPRECATED
  if 'LNICNV(I).getPointer() do {
     set LNICNV(I)=Class.new("RecordLNICNV","")
     }
 set VO(VX+1)=$C(DY,2,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).CID
 set VO(VX+2)=$C(DY,18,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).CID2
 set VO(VX+3)=$C(DY,34,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).CID3
 set VO(VX+4)=$C(DY,50,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).CID4
 set VO(VX+5)=$C(DY,66,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).CID5
 set DY=DY+1,VX=VX+5
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordLNICNV LNICNV())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=6,%MOD=5,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=6+%REPEAT,BLKSIZ=(60*%REPEAT)+0,PGM=$T(+0),DLIB="SYSDEV",DFID="LNICNV"
 set OLNTB=VPB*1000
 
 set VFSN("LNICNV")="zLNICNV"
 //
 for I=12:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,1,0)_"21T|*DESC|[*]@T1"
 set %TAB(2)=$C(3,1,0)_"21T|*TY(1)|[*]@T3"
 set %TAB(3)=$C(3,17,0)_"21T|*TY(2)|[*]@T4"
 set %TAB(4)=$C(3,33,0)_"21T|*TY(3)|[*]@T5"
 set %TAB(5)=$C(3,49,0)_"21T|*TY(4)|[*]@T6"
 set %TAB(6)=$C(3,65,0)_"21T|*TY(5)|[*]@T7"
 set %TAB(7)=$C(6,1,12)_"00N12401|1|[LNICNV]CID|||do VP1^V01S383(.LNICNV)"
 set %TAB(8)=$C(6,17,12)_"00N12421|1|[LNICNV]CID2|||do VP2^V01S383(.LNICNV)"
 set %TAB(9)=$C(6,33,12)_"00N12422|1|[LNICNV]CID3|||do VP3^V01S383(.LNICNV)"
 set %TAB(10)=$C(6,49,12)_"00N12423|1|[LNICNV]CID4|||do VP4^V01S383(.LNICNV)"
 set %TAB(11)=$C(6,65,12)_"00N12424|1|[LNICNV]CID5|||do VP5^V01S383(.LNICNV)"
 do VTBL(.LNICNV())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordLNICNV LNICNV()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordLNICNV LNICNV()) //
	/* ---- Revision History ----------------------------------------------
	
		11/21/06 - MBUIM - CR 23262
		Modified to correct scopping of variably Y to eliminate
		undefined error.

	-----------------------------------------------------------------
	*/

	type public Boolean ER
	type public Number X, Y

	if 'X.length() quit

	do CK3^LNICFE1 quit:ER

	if X = +Y do DEFAULT^DBSMACRO("LNICNV.CID", X)
	quit
VP2(RecordLNICNV LNICNV()) //
	/* ---- Revision History ----------------------------------------------

	11/21/06 - MBUIM - CR 23262
		   Modified to correct scopping of variably Y to 
		   eliminate undefined error.
	-----------------------------------------------------------------
	*/

	type public Boolean ER
	type public Number X, Y
	
	if 'X.length() quit

	do CK3^LNICFE1 quit:ER

	if X = +Y do DEFAULT^DBSMACRO("LNICNV.CID2", X)
	quit
VP3(RecordLNICNV LNICNV()) //
	/* ---- Revision History ----------------------------------------------

	11/21/06 - MBUIM - CR 23262
		   Modified to correct scopping of variably Y to
		   eliminate undefined error.
	
	-----------------------------------------------------------------
	*/

	type public Boolean ER
	type public Number X, Y
	
	if 'X.length() quit

	do CK3^LNICFE1 quit:ER

	if X = +Y do DEFAULT^DBSMACRO("LNICNV.CID3", X)
	quit
VP4(RecordLNICNV LNICNV()) //
	/* ---- Revision History --------------------------------------------
		
		11/21/06 - MBUIM - CR 23262
		           Modified to correct scopping of variably Y to
			   eliminate undefined error.
	-----------------------------------------------------------------
	*/

	type public Boolean ER
	type public Number X, Y

	if 'X.length() quit

	do CK3^LNICFE1 quit:ER

	if X = +Y do DEFAULT^DBSMACRO("LNICNV.CID4", X)
	quit
VP5(RecordLNICNV LNICNV()) //
	/* ---- Revision History --------------------------------------------	
	
	11/21/06 - MBUIM - CR 23262
		   Modified to correct scopping of variably Y to
		   eliminate undefined error.
	-----------------------------------------------------------------
	*/

	type public Boolean ER
	type public Number X, Y
	
	if 'X.length() quit

	do CK3^LNICFE1 quit:ER

	if X = +Y do DEFAULT^DBSMACRO("LNICNV.CID5", X)
	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNICNV LNICNV()
 do VPR(.LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT()
 quit

VW(RecordLNICNV LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNICNV LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNICNV LNICNV()
 do VDA1(.LNICNV())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordLNICNV LNICNV()
 if sn="LNICNV" do vSET1(LNICNV(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordLNICNV LNICNV,di,X)
 do LNICNV.setAuditFlag(1)
 set LNICNV.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordLNICNV LNICNV()
 if fid="LNICNV" quit $$vREAD1(LNICNV(I(1)),di)
 quit ""
vREAD1(RecordLNICNV LNICNV,di)
 quit LNICNV.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
