AWTI	  /*
	ORIG: SCHWARTZA - 09/19/2001
	DESC: Accrued Withholding Tax Index Driver

	---- Comments --------------------------------------------------------

	This procedure provides the means to create, modify, and list an
	Accrued Withholding Tax Rate Index.  
	Procedure AWTIEFD will provide the ability to add, modify, inquire 
	and delete the interest rate tiers and withholding tax rates associated
	with each index.

	---- Revision History ------------------------------------------------

	11/17/06 - PUTTASWH - 24011
		   Modified the section INIT to delete the calls to VPG and
		   VPG0 sections and incorporated the necessary code in the
		   FOR loop.  Modified entire procedure to pass the 
		   RecordUTBLAWTI object to the required sections since this
		   was loosing scope. Fixed the error that were encountered
		   due to the undefined variable fUTBLAWTI. Deleted the 
		   sections ERR and LOAD as these were not required.
		   
	11/08/05 - Sreeram Panyaram
		   Initialized Unscoped Variables for DBI3.
		   
	1/10/02 - Schwartza - 46105:9
		  Modifying an index would give an error stating that 
		  the index already existed.  Set OPT=%ProcessMode and used
		  OPT in function POSGTBL.  Edited the comments about the
		  procedure.

	9/19/01 - Schwartza - 46105
		  Screen Driver for functions @IND008-@IND009 created.

 */
 	quit

NEW	set %ProcessMode=0 do INIT quit
UPD	set %ProcessMode=1 do INIT quit
INQ	set %ProcessMode=2 do INIT quit

INIT		
	type String AWTI,VFMQ
	type Number MAX,OPT,%PG,%PAGE
	type Boolean FINISH
	type RecordUTBLAWTI fUTBLAWT 
	
	set FINISH=0	
	set %PG=0 set %PAGE=1
	set OPT=%ProcessMode	// Needed for the call to POSGTBL
	kill VFMQ
	set MAX=13
	
	for  do { quit:FINISH
                if %PG=0 do VPG00 if ER set FINISH=1 quit
               
                if %PG>0 do VPG01(.fUTBLAWT)

                if "DFQ"[VFMQ!$G(ER) do VER(.fUTBLAWT) set FINISH=1 quit

                set %PG=%PG+1
                }
	
	quit

VPG00	// Setup for ^UTLREAD	
	
	type Public String VFMQ
	type public Number MAX,%NOPRMT,%PAGE
	type String %READ,%TAB()
	type Number CNT
			
	set %TAB("AWTI")="/DES=Index Name/LEN=6/HLP=[UTBLAWTI]AWTI/TBL=[UTBLAWTI]/XPP=D POSGTBL^AWTI"
	set %READ="@@%FN,,,AWTI/REQ" set %NOPRMT="F"
	do ^UTLREAD 
	
	if VFMQ="Q" set ER=1 quit	
	
	if (%ProcessMode=2)!(%ProcessMode=3) set %PAGE=CNT\MAX+1

	quit


VPG01(RecordUTBLAWTI fUTBLAWT)	// Get current record for display

	type Public Number MAX,%MODS,%REPEAT,%PG
	type Public String AWTI
	type String SID
		
	set %REPEAT=MAX
	set %MODS=(MAX*(%PG-1))+1	

	if %ProcessMode>0 set fUTBLAWT=Db.getRecord("UTBLAWTI","AWTI")		
	else  set fUTBLAWT=Class.new("RecordUTBLAWTI")
		
	set SID="UTBLAWTI"	
	set fUTBLAWT.awti=AWTI
	do DRV^USID(%ProcessMode,SID,.fUTBLAWT)	
	
	quit

VER(RecordUTBLAWTI fUTBLAWT)	
	/* If modifying or creating, run section FILE otherwise skip
	to the end */
	type Public String VFMQ
	type Public Boolean ER
	
	if (%ProcessMode=2)!(%ProcessMode=4)!(VFMQ="Q") quit
	do FILE(.fUTBLAWT) quit:ER

	quit

POSGTBL	// Check to see if they are creating a previously used index.

	type Public String I(),RM,X
	type Public Boolean ER
	type public Number OPT
	type Number table
	
	quit:X=""

	set table=I(3)

	if OPT'=0 quit	// Quit if not in create mode	

	set I(3)=""
 
	type ResultSet rs=Db.select("AWTI","UTBLAWTI","AWTI=:X")
	if rs.isEmpty() quit 
	
	// already exists
	set ER=1,RM=$$^MSG(3019,X)      

	set I(3)=table
	quit

FILE(RecordUTBLAWTI fUTBLAWT)	// Set the awti record

	type public String AWTI,fUTBLAWTI
	type RecordUTBLAWTI awti

	if %ProcessMode=0 do {  // Insert
		set awti=Class.new("RecordUTBLAWTI")
		set awti.awti=AWTI		
		set awti.des=fUTBLAWT.des		
        	}
	else  do {		// Modify
		set awti=Db.getRecord("UTBLAWTI","AWTI")		
		set awti.des=fUTBLAWT.des		
	        }

	do awti.bypassSave()
 
	quit

vSIG()	quit "60586^18869^Hema Puttaswamy^3679"	// Signature - LTD^TIME^USER^SIZE
