V01S391(%ProcessMode,RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS)   //PBS - LN - SID= <LNPAS21> Payment Path Application
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:58 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,UL2,UL3,UL4,UL5,UL6,UL7,UL8,UL9,UL10,UL11,UL12,UL13",VSID="LNPAS21",VPGM=$T(+0),VSNAME="Payment Path Application"
 set VFSN("LNPAS2")="zfLNPAS",VFSN("LNPATH")="zfLNPATH"
 set vPSL=1
 set KEYS(1)=fLNPAS.TABLE
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=13 do VPR(.fLNPATH,.fLNPAS),VDA1(.fLNPATH,.fLNPAS),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fLNPATH,.fLNPAS),VPR(.fLNPATH,.fLNPAS),VDA1(.fLNPATH,.fLNPAS)
 if %ProcessMode do VLOD(.fLNPATH,.fLNPAS) quit:$G(ER)  do VPR(.fLNPATH,.fLNPAS),VDA1(.fLNPATH,.fLNPAS)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fLNPATH,.fLNPAS)
	quit


VNEW(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) // Initialize arrays if %O=0
 
 do VLOD(.fLNPATH,.fLNPAS)
 do VDEF(.fLNPATH,.fLNPAS)
 do VLOD(.fLNPATH,.fLNPAS)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VNEWDQ(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) // Original VNEW section
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VLOD(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) // User defined access section
 //
 if '$D(%REPEAT) set %REPEAT=13
 if '$D(%MODS) set %MODS=1
 Q
 #ACCEPT date=11/05/03;pgm=Screen compiler
 quit
VLODDQ(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //Original VLOD section
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) // Display screen prompts
 set VO="7||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,7,7,0,0,0,0,0,0,0)_"01T Table:"
 set VO(2)=$C(1,55,12,0,0,0,0,0,0,0)_"01T Start Date:"
 set VO(3)=$C(2,1,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(4)=$C(2,57,10,0,0,0,0,0,0,0)_"01T End Date:"
 set VO(5)=$C(4,8,6,0,0,0,0,0,0,0)_"01T Path:"
 set VO(6)=$C(5,1,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(7)=$C(9,1,8,2,0,0,0,0,0,0)_"01T--------"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS)  // Display screen data
 new V
 s DASH(1)=$G(DASH(1))
 s DASH(10)=$G(DASH(10))
 s DASH(11)=$G(DASH(11))
 s DASH(12)=$G(DASH(12))
 s DASH(2)=$G(DASH(2))
 s DASH(3)=$G(DASH(3))
 s DASH(4)=$G(DASH(4))
 s DASH(5)=$G(DASH(5))
 s DASH(6)=$G(DASH(6))
 s DASH(7)=$G(DASH(7))
 s DASH(8)=$G(DASH(8))
 s DASH(9)=$G(DASH(9))
 s UL(1)=$G(UL(1))
 s UL(10)=$G(UL(10))
 s UL(11)=$G(UL(11))
 s UL(12)=$G(UL(12))
 s UL(2)=$G(UL(2))
 s UL(3)=$G(UL(3))
 s UL(4)=$G(UL(4))
 s UL(5)=$G(UL(5))
 s UL(6)=$G(UL(6))
 s UL(7)=$G(UL(7))
 s UL(8)=$G(UL(8))
 s UL(9)=$G(UL(9))
 s UL1=$G(UL1)
 s UL10=$G(UL10)
 s UL11=$G(UL11)
 s UL12=$G(UL12)
 s UL13=$G(UL13)
 s UL2=$G(UL2)
 s UL3=$G(UL3)
 s UL4=$G(UL4)
 s UL5=$G(UL5)
 s UL6=$G(UL6)
 s UL7=$G(UL7)
 s UL8=$G(UL8)
 s UL9=$G(UL9)
 s UN(1)=$G(UN(1))
 s UN(10)=$G(UN(10))
 s UN(11)=$G(UN(11))
 s UN(12)=$G(UN(12))
 s UN(2)=$G(UN(2))
 s UN(3)=$G(UN(3))
 s UN(4)=$G(UN(4))
 s UN(5)=$G(UN(5))
 s UN(6)=$G(UN(6))
 s UN(7)=$G(UN(7))
 s UN(8)=$G(UN(8))
 s UN(9)=$G(UN(9))
 //
 set VO="49|8|13|"
 set VO(8)=$C(1,15,8,2,0,0,0,0,0,0)_"01T"_$E(fLNPAS.TABLE,1,8)
 set VO(9)=$C(1,68,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fLNPAS.STDT)
 set VO(10)=$C(2,15,40,2,0,0,0,0,0,0)_"01T"_$E(fLNPAS.TDES,1,40)
 set VO(11)=$C(2,68,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fLNPAS.EDDT)
 set VO(12)=$C(4,15,12,2,0,0,0,0,0,0)_"01T"_$E(fLNPATH.PATH,1,12)
 set VO(13)=$C(5,15,40,2,0,0,0,0,0,0)_"01T"_$E(fLNPATH.DESC,1,40)
 set VO(14)=$C(7,10,0,2,0,0,0,0,0,0)_"01T"_$G(UN(1))
 set VO(15)=$C(7,16,0,2,0,0,0,0,0,0)_"01T"_$G(UN(2))
 set VO(16)=$C(7,22,0,2,0,0,0,0,0,0)_"01T"_$G(UN(3))
 set VO(17)=$C(7,28,0,2,0,0,0,0,0,0)_"01T"_$G(UN(4))
 set VO(18)=$C(7,34,0,2,0,0,0,0,0,0)_"01T"_$G(UN(5))
 set VO(19)=$C(7,40,0,2,0,0,0,0,0,0)_"01T"_$G(UN(6))
 set VO(20)=$C(7,46,0,2,0,0,0,0,0,0)_"01T"_$G(UN(7))
 set VO(21)=$C(7,52,0,2,0,0,0,0,0,0)_"01T"_$G(UN(8))
 set VO(22)=$C(7,58,0,2,0,0,0,0,0,0)_"01T"_$G(UN(9))
 set VO(23)=$C(7,64,0,2,0,0,0,0,0,0)_"01T"_$G(UN(10))
 set VO(24)=$C(7,70,0,2,0,0,0,0,0,0)_"01T"_$G(UN(11))
 set VO(25)=$C(7,76,0,2,0,0,0,0,0,0)_"01T"_$G(UN(12))
 set VO(26)=$C(8,10,0,2,0,0,0,0,0,0)_"01T"_$G(UL(1))
 set VO(27)=$C(8,16,0,2,0,0,0,0,0,0)_"01T"_$G(UL(2))
 set VO(28)=$C(8,22,0,2,0,0,0,0,0,0)_"01T"_$G(UL(3))
 set VO(29)=$C(8,28,0,2,0,0,0,0,0,0)_"01T"_$G(UL(4))
 set VO(30)=$C(8,34,0,2,0,0,0,0,0,0)_"01T"_$G(UL(5))
 set VO(31)=$C(8,40,0,2,0,0,0,0,0,0)_"01T"_$G(UL(6))
 set VO(32)=$C(8,46,0,2,0,0,0,0,0,0)_"01T"_$G(UL(7))
 set VO(33)=$C(8,52,0,2,0,0,0,0,0,0)_"01T"_$G(UL(8))
 set VO(34)=$C(8,58,0,2,0,0,0,0,0,0)_"01T"_$G(UL(9))
 set VO(35)=$C(8,64,0,2,0,0,0,0,0,0)_"01T"_$G(UL(10))
 set VO(36)=$C(8,70,0,2,0,0,0,0,0,0)_"01T"_$G(UL(11))
 set VO(37)=$C(8,76,0,2,0,0,0,0,0,0)_"01T"_$G(UL(12))
 set VO(38)=$C(9,10,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(1))
 set VO(39)=$C(9,16,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(2))
 set VO(40)=$C(9,22,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(3))
 set VO(41)=$C(9,28,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(4))
 set VO(42)=$C(9,34,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(5))
 set VO(43)=$C(9,40,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(6))
 set VO(44)=$C(9,46,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(7))
 set VO(45)=$C(9,52,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(8))
 set VO(46)=$C(9,58,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(9))
 set VO(47)=$C(9,64,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(10))
 set VO(48)=$C(9,70,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(11))
 set VO(49)=$C(9,76,0,2,0,0,0,0,0,0)_"01T"_$G(DASH(12))
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+41,DY=10 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fLNPATH,.fLNPAS)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1,v10,v11,v12,v13,v2,v3,v4,v5,v6,v7,v8,v9
 if  set (v1,v10,v11,v12,v13,v2,v3,v4,v5,v6,v7,v8,v9)=""
 else  new v1,v10,v11,v12,v13,v2,v3,v4,v5,v6,v7,v8,v9
 else  set (v1,UL1(I))=$G(UL1(I)),(v10,UL10(I))=$G(UL10(I)),(v11,UL11(I))=$G(UL11(I)),(v12,UL12(I))=$G(UL12(I)),(v13,UL13(I))=$G(UL13(I)),(v2,UL2(I))=$G(UL2(I)),(v3,UL3(I))=$G(UL3(I)),(v4,UL4(I))=$G(UL4(I)),(v5,UL5(I))=$G(UL5(I)),(v6,UL6(I))=$G(UL6(I)),(v7,UL7(I))=$G(UL7(I)),(v8,UL8(I))=$G(UL8(I)),(v9,UL9(I))=$G(UL9(I))
 
 set VO(VX+1)=$C(DY,1,8,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,10,4,2,0,0,0,0,0,0)_"00T"_v2
 set VO(VX+3)=$C(DY,16,4,2,0,0,0,0,0,0)_"00T"_v3
 set VO(VX+4)=$C(DY,22,4,2,0,0,0,0,0,0)_"00T"_v4
 set VO(VX+5)=$C(DY,28,4,2,0,0,0,0,0,0)_"00T"_v5
 set VO(VX+6)=$C(DY,34,4,2,0,0,0,0,0,0)_"00T"_v6
 set VO(VX+7)=$C(DY,40,4,2,0,0,0,0,0,0)_"00T"_v7
 set VO(VX+8)=$C(DY,46,4,2,0,0,0,0,0,0)_"00T"_v8
 set VO(VX+9)=$C(DY,52,4,2,0,0,0,0,0,0)_"00T"_v9
 set VO(VX+10)=$C(DY,58,4,2,0,0,0,0,0,0)_"00T"_v10
 set VO(VX+11)=$C(DY,64,4,2,0,0,0,0,0,0)_"00T"_v11
 set VO(VX+12)=$C(DY,70,4,2,0,0,0,0,0,0)_"00T"_v12
 set VO(VX+13)=$C(DY,76,4,2,0,0,0,0,0,0)_"00T"_v13
 set DY=DY+1,VX=VX+13
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=42,%MOD=13,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=9+%REPEAT,BLKSIZ=(56*%REPEAT)+120,PGM=$T(+0),DLIB="SYSDEV",DFID="LNPATH,LNPAS2"
 set OLNTB=VPB*1000
 
 set VFSN("LNPAS2")="zfLNPAS",VFSN("LNPATH")="zfLNPATH"
 //
 for I=56:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,14,8)_"21T12401|1|[LNPAS2]TABLE"
 set %TAB(2)=$C(0,67,10)_"21D12403||[LNPAS2]STDT"
 set %TAB(3)=$C(1,14,40)_"21T12401||[LNPAS2]TDES"
 set %TAB(4)=$C(1,67,10)_"21D12404||[LNPAS2]EDDT"
 set %TAB(5)=$C(3,14,12)_"21T12402|1|[LNPATH]PATH"
 set %TAB(6)=$C(4,14,40)_"20T12401||[LNPATH]DESC"
 set %TAB(7)=$C(6,9,0)_"21T|*UN(1)|[*]@UN(1)"
 set %TAB(8)=$C(6,15,0)_"20T|*UN(2)|[*]@UN(2)"
 set %TAB(9)=$C(6,21,0)_"20T|*UN(3)|[*]@UN(3)"
 set %TAB(10)=$C(6,27,0)_"20T|*UN(4)|[*]@UN(4)"
 set %TAB(11)=$C(6,33,0)_"20T|*UN(5)|[*]@UN(5)"
 set %TAB(12)=$C(6,39,0)_"20T|*UN(6)|[*]@UN(6)"
 set %TAB(13)=$C(6,45,0)_"20T|*UN(7)|[*]@UN(7)"
 set %TAB(14)=$C(6,51,0)_"20T|*UN(8)|[*]@UN(8)"
 set %TAB(15)=$C(6,57,0)_"20T|*UN(9)|[*]@UN(9)"
 set %TAB(16)=$C(6,63,0)_"20T|*UN(10)|[*]@UN(10)"
 set %TAB(17)=$C(6,69,0)_"20T|*UN(11)|[*]@UN(11)"
 set %TAB(18)=$C(6,75,0)_"20T|*UN(12)|[*]@UN(12)"
 set %TAB(19)=$C(7,9,0)_"21T|*UL(1)|[*]@UL(1)"
 set %TAB(20)=$C(7,15,0)_"20T|*UL(2)|[*]@UL(2)"
 set %TAB(21)=$C(7,21,0)_"20T|*UL(3)|[*]@UL(3)"
 set %TAB(22)=$C(7,27,0)_"20T|*UL(4)|[*]@UL(4)"
 set %TAB(23)=$C(7,33,0)_"20T|*UL(5)|[*]@UL(5)"
 set %TAB(24)=$C(7,39,0)_"20T|*UL(6)|[*]@UL(6)"
 set %TAB(25)=$C(7,45,0)_"20T|*UL(7)|[*]@UL(7)"
 set %TAB(26)=$C(7,51,0)_"20T|*UL(8)|[*]@UL(8)"
 set %TAB(27)=$C(7,57,0)_"20T|*UL(9)|[*]@UL(9)"
 set %TAB(28)=$C(7,63,0)_"20T|*UL(10)|[*]@UL(10)"
 set %TAB(29)=$C(7,69,0)_"20T|*UL(11)|[*]@UL(11)"
 set %TAB(30)=$C(7,75,0)_"20T|*UL(12)|[*]@UL(12)"
 set %TAB(31)=$C(8,9,0)_"21T|*DASH(1)|[*]@DASH(1)"
 set %TAB(32)=$C(8,15,0)_"20T|*DASH(2)|[*]@DASH(2)"
 set %TAB(33)=$C(8,21,0)_"21T|*DASH(3)|[*]@DASH(3)"
 set %TAB(34)=$C(8,27,0)_"21T|*DASH(4)|[*]@DASH(4)"
 set %TAB(35)=$C(8,33,0)_"21T|*DASH(5)|[*]@DASH(5)"
 set %TAB(36)=$C(8,39,0)_"21T|*DASH(6)|[*]@DASH(6)"
 set %TAB(37)=$C(8,45,0)_"21T|*DASH(7)|[*]@DASH(7)"
 set %TAB(38)=$C(8,51,0)_"21T|*DASH(8)|[*]@DASH(8)"
 set %TAB(39)=$C(8,57,0)_"21T|*DASH(9)|[*]@DASH(9)"
 set %TAB(40)=$C(8,63,0)_"21T|*DASH(10)|[*]@DASH(10)"
 set %TAB(41)=$C(8,69,0)_"21T|*DASH(11)|[*]@DASH(11)"
 set %TAB(42)=$C(8,75,0)_"21T|*DASH(12)|[*]@DASH(12)"
 set %TAB(43)=$C(9,0,8)_"20T12401|*UL1(1)|[*]@UL1"
 set %TAB(44)=$C(9,9,4)_"00T|*UL2(1)|[*]@UL2|[STBLPHFND]"
 set %TAB(45)=$C(9,15,4)_"00T|*UL3(1)|[*]@UL3|[STBLPHFND]||do VP1^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(46)=$C(9,21,4)_"00T|*UL4(1)|[*]@UL4|[STBLPHFND]||do VP2^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(47)=$C(9,27,4)_"00T|*UL5(1)|[*]@UL5|[STBLPHFND]||do VP3^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(48)=$C(9,33,4)_"00T|*UL6(1)|[*]@UL6|[STBLPHFND]||do VP4^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(49)=$C(9,39,4)_"00T|*UL7(1)|[*]@UL7|[STBLPHFND]||do VP5^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(50)=$C(9,45,4)_"00T|*UL8(1)|[*]@UL8|[STBLPHFND]||do VP6^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(51)=$C(9,51,4)_"00T|*UL9(1)|[*]@UL9|[STBLPHFND]||do VP7^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(52)=$C(9,57,4)_"00T|*UL10(1)|[*]@UL10|[STBLPHFND]||do VP8^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(53)=$C(9,63,4)_"00T|*UL11(1)|[*]@UL11|[STBLPHFND]||do VP9^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(54)=$C(9,69,4)_"00T|*UL12(1)|[*]@UL12|[STBLPHFND]||do VP10^V01S391(.fLNPATH,.fLNPAS)"
 set %TAB(55)=$C(9,75,4)_"00T|*UL13(1)|[*]@UL13|[STBLPHFND]||do VP11^V01S391(.fLNPATH,.fLNPAS)"
 do VTBL(.fLNPATH,.fLNPAS),VDEPRE(.fLNPATH,.fLNPAS) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDEPRE(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS)  // Data Entry Pre-processor
 
 N COLUMN,TAG
 ;
 ; Note: ULI is equal to the last column used.  Therefore no entry should
 ;       be allowed in columns numbered greater than the last.
 ;
 F COLUMN=(ULI+1):1:13 S TAG="PROT"_COLUMN D @TAG
 Q
 ;
PROT1 ;
 do PROTECT^DBSMACRO("@UL1")
 Q
PROT2 ;
 do PROTECT^DBSMACRO("@UL2")
 Q
PROT3 ;
 do PROTECT^DBSMACRO("@UL3")
 Q
PROT4 ;
 do PROTECT^DBSMACRO("@UL4")
 Q
PROT5 ;
 do PROTECT^DBSMACRO("@UL5")
 Q
PROT6 ;
 do PROTECT^DBSMACRO("@UL6")
 Q
PROT7 ;
 do PROTECT^DBSMACRO("@UL7")
 Q
PROT8 ;
 do PROTECT^DBSMACRO("@UL8")
 Q
PROT9 ;
 do PROTECT^DBSMACRO("@UL9")
 Q
PROT10 ;
 do PROTECT^DBSMACRO("@UL10")
 Q
PROT11 ;
 do PROTECT^DBSMACRO("@UL11")
 Q
PROT12 ;
 do PROTECT^DBSMACRO("@UL12")
 Q
PROT13 ;
 do PROTECT^DBSMACRO("@UL13")
 Q
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP2(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP3(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP4(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP5(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP6(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP7(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP8(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP9(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP10(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
VP11(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS) //
 I X="    " D CHANGE^DBSMACRO("TBL","")
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNPATH fLNPATH
 type Public RecordLNPAS2 fLNPAS
 do VPR(.fLNPATH,.fLNPAS)
 do VDA1(.fLNPATH,.fLNPAS)
 do ^DBSPNT()
 quit

VW(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS)
 do VDA1(.fLNPATH,.fLNPAS)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNPATH fLNPATH,RecordLNPAS2 fLNPAS)
 do VDA1(.fLNPATH,.fLNPAS)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNPATH fLNPATH
 type Public RecordLNPAS2 fLNPAS
 do VDA1(.fLNPATH,.fLNPAS)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordLNPATH fLNPATH
 if sn="LNPATH" do vSET1(.fLNPATH,di,X)
 type Public RecordLNPAS2 fLNPAS
 if sn="LNPAS2" do vSET2(.fLNPAS,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordLNPATH fLNPATH,di,X)
 do fLNPATH.setAuditFlag(1)
 set fLNPATH.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordLNPAS2 fLNPAS,di,X)
 do fLNPAS.setAuditFlag(1)
 set fLNPAS.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordLNPATH fLNPATH
 if fid="LNPATH" quit $$vREAD1(.fLNPATH,di)
 type Public RecordLNPAS2 fLNPAS
 if fid="LNPAS2" quit $$vREAD2(.fLNPAS,di)
 quit ""
vREAD1(RecordLNPATH fLNPATH,di)
 quit fLNPATH.@di
vREAD2(RecordLNPAS2 fLNPAS,di)
 quit fLNPAS.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
