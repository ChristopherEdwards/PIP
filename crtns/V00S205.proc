V00S205(%ProcessMode,RecordEFTPAY fEFTPAY)   // -  - SID= <INTPAYBR20A> Outgoing Foreign Pmt-Branch Pg 2 (MT103)
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:20 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,EXTREM,INSTCD",VSID="INTPAYBR20A",VPGM=$T(+0),VSNAME="Outgoing Foreign Pmt-Branch Pg 2 (MT103)"
 set VFSN("EFTPAY")="zfEFTPAY"
 set vPSL=1
 set KEYS(1)=fEFTPAY.CID
 set KEYS(2)=fEFTPAY.SEQ
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fEFTPAY),VDA1(.fEFTPAY),^DBSPNT()

 // Display Pre-Processor
 //
 if '%ProcessMode do VNEW(.fEFTPAY),VDSPPRE(.fEFTPAY) quit:$G(ER)  do VPR(.fEFTPAY),VDA1(.fEFTPAY)
 if %ProcessMode do VLOD(.fEFTPAY) quit:$G(ER)  do VDSPPRE(.fEFTPAY) quit:$G(ER)  do VPR(.fEFTPAY),VDA1(.fEFTPAY)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEFTPAY)
	quit


VNEW(RecordEFTPAY fEFTPAY) // Initialize arrays if %O=0
 
 do VDEF(.fEFTPAY)
 do VLOD(.fEFTPAY)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordEFTPAY fEFTPAY)
 if fEFTPAY.DATECRE="" set fEFTPAY.DATECRE=TJD
 if fEFTPAY.TIMECRE="" set fEFTPAY.TIMECRE=$P($H,",",2)
 if fEFTPAY.UID="" set fEFTPAY.UID=%UID
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordEFTPAY fEFTPAY) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEFTPAY fEFTPAY) // Display screen prompts
 set VO="14||13|0"
 set VO(0)="|0"
 set VO(1)=$C(3,8,16,0,0,0,0,0,0,0)_"01T Account Number:"
 set VO(2)=$C(3,44,17,0,0,0,0,0,0,0)_"01T Sequence Number:"
 set VO(3)=$C(4,4,20,0,0,0,0,0,0,0)_"01T Tran Reference Nbr:"
 set VO(4)=$C(4,53,8,0,0,0,0,0,0,0)_"01T Status:"
 set VO(5)=$C(6,10,26,0,0,0,0,0,0,0)_"01TSending Institution (51A):"
 set VO(6)=$C(7,19,17,0,0,0,0,0,0,0)_"01TParty Identifier:"
 set VO(7)=$C(9,9,27,0,0,0,0,0,0,0)_"01TThird Reimburse Inst. (55):"
 set VO(8)=$C(10,19,17,0,0,0,0,0,0,0)_"01TParty Identifier:"
 set VO(9)=$C(11,28,8,0,0,0,0,0,0,0)_"01TAddress:"
 set VO(10)=$C(16,15,21,0,0,0,0,0,0,0)_"01TReg. Reporting (77B):"
 set VO(11)=$C(20,14,22,1,0,0,0,0,0,0)_"01T Operation Code (23B):"
 set VO(12)=$C(21,14,22,0,0,0,0,0,0,0)_"01TTrans Type Code (26T):"
 set VO(13)=$C(22,3,33,0,0,0,0,0,0,0)_"01TModify Extended Remittance (Y/N):"
 set VO(14)=$C(23,5,31,0,0,0,0,0,0,0)_"01TModify Instruction Codes (Y/N):"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordEFTPAY fEFTPAY)  // Display screen data
 new V
 s EXTREM=$G(EXTREM)
 s INSTCD=$G(INSTCD)
 //
 set VO="35|15|13|0"
 set VO(15)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID(%FN))
 set VO(16)=$C(3,25,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.CID
 set VO(17)=$C(3,62,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.SEQ
 set VO(18)=$C(4,25,14,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.REFNO,1,14)
 set VO(19)=$C(4,62,3,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.STATUS,1,3)
 set VO(20)=$C(4,66,15,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.STATDSC,1,15)
 set VO(21)=$C(6,37,11,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.SENDINST,1,11)
 set VO(22)=$C(7,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.SNDRP,1,35)
 set VO(23)=$C(9,37,11,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.TRIB,1,11)
 set VO(24)=$C(10,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.TRIP,1,35)
 set VO(25)=$C(11,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.TRIADD1,1,35)
 set VO(26)=$C(12,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.TRIADD2,1,35)
 set VO(27)=$C(13,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.TRIADD3,1,35)
 set VO(28)=$C(14,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.TRIADD4,1,35)
 set VO(29)=$C(16,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.REGREP1,1,35)
 set VO(30)=$C(17,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.REGREP2,1,35)
 set VO(31)=$C(18,37,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.REGREP3,1,35)
 set VO(32)=$C(20,37,4,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.BANKOP,1,4)
 set VO(33)=$C(21,37,3,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.TRNTYPCD,1,3)
 set VO(34)=$C(22,37,1,2,0,0,0,0,0,0)_"00L"_$S($G(EXTREM):"Y",1:"N")
 set VO(35)=$C(23,37,1,2,0,0,0,0,0,0)_"00L"_$S($G(INSTCD):"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordEFTPAY fEFTPAY)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=20,VPT=1,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="EFTPAY"
 set OLNTB=23037
 
 set VFSN("EFTPAY")="zfEFTPAY"
 //
 // 
	
	
 set %TAB(1)=$C(2,24,12)_"21N12401|1|[EFTPAY]CID"
 set %TAB(2)=$C(2,61,12)_"20N12402|1|[EFTPAY]SEQ|[EFTPAY]"
 set %TAB(3)=$C(3,24,14)_"21T12404|1|[EFTPAY]REFNO|||||||||20"
 set %TAB(4)=$C(3,61,3)_"21T12412|1|[EFTPAY]STATUS|[STBLESTAT]"
 set %TAB(5)=$C(3,65,15)_"21T12400|*STATDSC|[EFTPAY]STATDSC"
 set %TAB(6)=$C(5,36,11)_"00T12406|1|[EFTPAY]SENDINST|[UTBLCORRE]"
 set %TAB(7)=$C(6,36,35)_"00T12402|1|[EFTPAY]SNDRP"
 set %TAB(8)=$C(8,36,11)_"00T12407|1|[EFTPAY]TRIB|[UTBLCORRE]"
 set %TAB(9)=$C(9,36,35)_"00T12401|1|[EFTPAY]TRIP"
 set %TAB(10)=$C(10,36,35)_"00T12408|1|[EFTPAY]TRIADD1|||do VP1^V00S205(.fEFTPAY)"
 set %TAB(11)=$C(11,36,35)_"00T12409|1|[EFTPAY]TRIADD2|||do VP2^V00S205(.fEFTPAY)"
 set %TAB(12)=$C(12,36,35)_"00T12410|1|[EFTPAY]TRIADD3|||do VP3^V00S205(.fEFTPAY)"
 set %TAB(13)=$C(13,36,35)_"00T12411|1|[EFTPAY]TRIADD4|||do VP4^V00S205(.fEFTPAY)"
 set %TAB(14)=$C(15,36,35)_"00T12414|1|[EFTPAY]REGREP1|||do VP5^V00S205(.fEFTPAY)"
 set %TAB(15)=$C(16,36,35)_"00T12415|1|[EFTPAY]REGREP2|||do VP6^V00S205(.fEFTPAY)"
 set %TAB(16)=$C(17,36,35)_"00T12416|1|[EFTPAY]REGREP3|||do VP7^V00S205(.fEFTPAY)"
 set %TAB(17)=$C(19,36,4)_"01T12401|1|[EFTPAY]BANKOP|[STBLSWBOP]"
 set %TAB(18)=$C(20,36,3)_"00T12402|1|[EFTPAY]TRNTYPCD"
 set %TAB(19)=$C(21,36,1)_"00L|*EXTREM|[*]@EXTREM|||do VP8^V00S205(.fEFTPAY)"
 set %TAB(20)=$C(22,36,1)_"00L|*INSTCD|[*]@INSTCD|||do VP9^V00S205(.fEFTPAY)"
 do VTBL(.fEFTPAY),VDEPRE(.fEFTPAY) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordEFTPAY fEFTPAY) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDEPRE(RecordEFTPAY fEFTPAY)  // Data Entry Pre-processor
 
 type public Boolean VFYFLG
 
 if VFYFLG.get() do PROTECT^DBSMACRO("ALL")
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordEFTPAY fEFTPAY) //
 type String BNKOPT
 
 type public Boolean ER
 type public String X
 
 if X'="" do {
 	set BNKOPT=fEFTPAY.BANKOP
 	if (BNKOPT="SPRI")!(BNKOPT="SSTD")!(BNKOPT="SPAY") do { quit
 		set X="" do DISPLAY^DBSMACRO("EFTPAY.TRIADD1",fEFTPAY.TRIADD1)
 		do Runtime.setErrMSG("EFTPAY",4617,BNKOPT_"~55~A")
 		}
 	do CHECKUP^SWFTEDIT quit:ER
 	}
 
 quit
VP2(RecordEFTPAY fEFTPAY) //
 type String BNKOPT
 
 type public Boolean ER
 type public String X
 
 if X'="" do {
 	set BNKOPT=fEFTPAY.BANKOP
 	if (BNKOPT="SPRI")!(BNKOPT="SSTD")!(BNKOPT="SPAY") do { quit
 		set X="" do DISPLAY^DBSMACRO("EFTPAY.TRIADD2",fEFTPAY.TRIADD2)
 		do Runtime.setErrMSG("EFTPAY",4617,BNKOPT_"~55~A")
 		}
 	do CHECKUP^SWFTEDIT quit:ER
 	}
 
 quit
VP3(RecordEFTPAY fEFTPAY) //
 type String BNKOPT
 
 type public Boolean ER
 type public String X
 
 if X'="" do {
 	set BNKOPT=fEFTPAY.BANKOP
 	if (BNKOPT="SPRI")!(BNKOPT="SSTD")!(BNKOPT="SPAY") do { quit
 		set X="" do DISPLAY^DBSMACRO("EFTPAY.TRIADD3",fEFTPAY.TRIADD3)
 		do Runtime.setErrMSG("EFTPAY",4617,BNKOPT_"~55~A")
 		}
 	do CHECKUP^SWFTEDIT quit:ER
 	}
 
 quit
VP4(RecordEFTPAY fEFTPAY) //
 type String BNKOPT
 
 type public Boolean ER
 type public String X
 
 if X'="" do {
 	set BNKOPT=fEFTPAY.BANKOP
 	if (BNKOPT="SPRI")!(BNKOPT="SSTD")!(BNKOPT="SPAY") do { quit
 		set X="" do DISPLAY^DBSMACRO("EFTPAY.TRIADD4",fEFTPAY.TRIADD4)
 		do Runtime.setErrMSG("EFTPAY",4617,BNKOPT_"~55~A")
 		}
 	do CHECKUP^SWFTEDIT quit:ER
 	}
 
 quit
VP5(RecordEFTPAY fEFTPAY) //
 type public Boolean ER
 type public String X
 
 if X'="" do CHECKUP^SWFTEDIT quit:ER
VP6(RecordEFTPAY fEFTPAY) //
 type public Boolean ER
 type public String X
 
 if X'="" do CHECKUP^SWFTEDIT quit:ER
VP7(RecordEFTPAY fEFTPAY) //
 type public Boolean ER
 type public String X
 
 if X'="" do CHECKUP^SWFTEDIT quit:ER
VP8(RecordEFTPAY fEFTPAY) //
 type Number I
 type String MSG,TEXT()
 
 type public Boolean ER
 type public String EFT77T,VFMQ,X
 
 if 'X quit
 
 // Reset logical
 set X=0
 
 // Institution not part of a SWIFT Extended Remittance MUG
 if CUVAR.extrem'=1 do Runtime.setErrMSG("CUVAR",4612) quit
 
 if (fEFTPAY.MSG1'="")!(fEFTPAY.MSG2'="")!(fEFTPAY.MSG3'="")!(fEFTPAY.MSG4'="") do Runtime.setErrMSG("SWFREE",4621,"77T~70") quit
 
 set EFT77T=EFT77T.get()
 
 // Delimit EFT77T by CR/LF for display via DBSWRITE
 for I=1:1:999 set MSG=EFT77T.piece($C(13,10),I)  quit:MSG=""  set TEXT(I)=MSG
 
 // Call DBSWRITE to open the text editor
 do ^DBSWRITE("TEXT")
 if ER quit
 
 // Save TEXT array back into a single string variable
 if VFMQ'="Q" do {
 	set (EFT77T,I)=""
 	for  set I=$O(TEXT(I)) quit:I=""  set EFT77T=EFT77T_TEXT(I)_$C(13,10)
 	}
 
 // Repaint the screen
 do ^DBSPNT()
 
 quit
VP9(RecordEFTPAY fEFTPAY) //
 type public Boolean ER
 type public Number X
 
 if 'X quit
 
 // Reset logical
 set X=0
 
 // Instruction codes not permitted when BANKOP="SSTD" or "SPAY"
 if (fEFTPAY.BANKOP="SSTD")!(fEFTPAY.BANKOP="SPAY") do Runtime.setErrMSG("EFTPAY",4616,fEFTPAY.BANKOP_"~23E") quit
 
 // Display instruction codes screen
 do INST(.fEFTPAY)
 // Define INTPAYBR20A screen data
 do VDA
 // Repaint the INTPAYBR20A screen
 do ^DBSPNT()
 
 quit
 
INST(RecordEFTPAY fEFTPAY) // Modify instruction codes via INTPAYINSTCD screen
 type String SID
 
 // Define system variables
 do SYSVAR^SCADRV0()
 
 // Modify mode
 set %ProcessMode=1
 set SID="INTPAYINSTCD"
 do DRV^USID(%ProcessMode,SID,.fEFTPAY)
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEFTPAY fEFTPAY
 do VPR(.fEFTPAY)
 do VDA1(.fEFTPAY)
 do ^DBSPNT()
 quit

VW(RecordEFTPAY fEFTPAY)
 do VDA1(.fEFTPAY)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEFTPAY fEFTPAY)
 do VDA1(.fEFTPAY)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEFTPAY fEFTPAY
 do VDA1(.fEFTPAY)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordEFTPAY fEFTPAY
 if sn="EFTPAY" do vSET1(.fEFTPAY,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordEFTPAY fEFTPAY,di,X)
 do fEFTPAY.setAuditFlag(1)
 set fEFTPAY.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordEFTPAY fEFTPAY
 if fid="EFTPAY" quit $$vREAD1(.fEFTPAY,di)
 quit ""
vREAD1(RecordEFTPAY fEFTPAY,di)
 quit fEFTPAY.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VDSPPRE(RecordEFTPAY fEFTPAY)  // Display Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 if fEFTPAY.BANKOP="" do DEFAULT^DBSMACRO("EFTPAY.BANKOP","CRED")
 
 quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
