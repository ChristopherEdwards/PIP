EUROTST(Number cnt)	// Conversion Type

	/*
	ORIG: kumarss - 11/25/2005
	DESC: Euro Conversion Test Utility

	---- Comments --------------------------------------------------------

	---- Revision History ------------------------------------------------
	
	08/28/06 - KUMARB - CR 22464
		   Modify section upd in the check tbl="HLD8" to suppress the 
		   Check Hold record creation if Check Hold is not defined 
		   in Available Calculation Formula for the account.

	11/25/05 - KumarSS - 16668
		   Converted to PSL.
		   Removed revision history prior to 2004
		   
	----------------------------------------------------------------------

	*/

	type Number cid,totcid,totseg
	type String zarm,CLS

	set totcid=0
	set totseg=0

	kill zarm

	do Db.delete("EUROCNVRND","EFFDATE=:%SystemDate")

	type DbSet dsdep=Db.selectDbSet("DEP","EUREFD=:%SystemDate")

	while dsdep.next() do {

		type RecordDEP dep=dsdep.getRecord("DEP")

		set dep.eurefd=""
		set dep.eurstat=""
		set dep.eurbatch=""

		do dep.save()
		}

	type DbSet dsln=Db.selectDbSet("LN","EUREFD=:%SystemDate")

	while dsln.next() do {

		type RecordLN ln=dsln.getRecord("LN")

		set ln.eurefd=""
		set ln.eurstat=""
		set ln.eurbatch=""

		do ln.save()
		}

	do Db.delete("DAYENDEXCR","TJD=:%SystemDate AND RTN='QUE099'")
	do Db.delete("DAYENDEXC","TJD=:%SystemDate AND RTN='QUE099'")

	type ResultSet rsacn=Db.select("CID,STAT,CRCD,CLS","ACN")
	
	while rsacn.next() quit:totcid'<cnt  do {

		set cid=rsacn.getCol("CID")
		set CLS=rsacn.getCol("CLS")

		type ResultSet rsdepseg=Db.select("SEGMENT","DEPSEG","CID=:cid")

		if rsdepseg.isEmpty() quit

		if rsacn.getCol("STAT")=4 quit
		if rsacn.getCol("CRCD")'="NLG" quit

		set totcid=totcid+1

		if CLS="D" do {

			type RecordDEP dep=Db.getRecord("DEP","CID=:cid")

			set dep.eurefd=%SystemDate
			set dep.eurstat=1
			set dep.eurbatch=1

			do dep.save()
			}
		else  if CLS="L" do {

			type RecordLN ln=Db.getRecord("LN","CID=:cid")

			set ln.eurefd=%SystemDate
			set ln.eurstat=1
			set ln.eurbatch=1

			do ln.save()
			}

		type RecordACN acn=Db.getRecord("ACN","CID=:cid")

		set acn.eurcnvd=""
		set acn.eurstat=1
		set acn.orgcrcd=""
		set acn.eurbatch=1
		set acn.eurudrq=""
		set acn.eurefd=%SystemDate
		set acn.eureqdat=%SystemDate-1

		do acn.save()

		while rsdepseg.next()  set totseg=totseg+1
		}

	set zarm=totcid_"|"_totseg
	quit


	//----------------------------------------------------------------------
STATS	// Gather statistics
	//----------------------------------------------------------------------

	type Number cid,eurstat
	type String cls,stat(,)

	type ResultSet rsdep=Db.select("CID,CLS,EURSTAT","DEP","EUREFD=:%SystemDate AND EURSTAT=1 AND EURBATCH=1")

	while rsdep.next() do {

		set cid=rsdep.getCol("CID")

		set cls=rsdep.getCol("CLS")
		set eurstat=+rsdep.getCol("EURSTAT")
		set stat(cls,eurstat)=stat(cls,eurstat).get()+1
		}

	type ResultSet rsln=Db.select("CID,CLS,EURSTAT","LN","EUREFD=:%SystemDate AND EURSTAT=1 AND EURBATCH=1")

	while rsln.next() do {

		set cid=rsln.getCol("CID")

		set cls=rsln.getCol("CLS")
		set eurstat=+rsln.getCol("EURSTAT")
		set stat(cls,eurstat)=stat(cls,eurstat).get()+1
		}

	//n (stat)

	zshow "v":^zarm
	quit

	//
	//----------------------------------------------------------------------
UPD(Number cid,			// Account Number
    Number amt,			// Amount
    Number cnt)			// Conversion Type
	//----------------------------------------------------------------------

	//Update columns with specified amount

	type Number segment,tst
	type String cls

	type RecordACN acn=Db.getRecord("ACN","CID=:cid")

	if 'acn.getMode() quit

	set cls=acn.cls
	
	set tst=999999999999
	if 'cnt.get() set cnt=3

	do Db.delete("ACN","CID=:tst")
	do Db.delete("LNBIL0","CID=:tst")
	do Db.delete("PHLD","CID=:tst")
	do Db.delete("HLD7","CID=:tst")
	do Db.delete("HLD8","CID=:tst")
	do Db.delete("PHLD9","CID=:tst")
	do Db.delete("EFTPAY1","CID=:tst")

	do copy("ACN",cid,tst)

	if cls="L" do {

		do upd("LN",tst,cnt,amt,%SystemDate)
		do copy("LNBIL0",cid,tst)
		}

	if cls="D" do {

		do upd("DEP",tst,cnt,amt,%SystemDate)

		type ResultSet rsdepseg=Db.select("SEGMENT","DEPSEG","CID=:cid")

		while rsdepseg.next() do {

			set segment=rsdepseg.getCol("SEGMENT")
			do upd("DEPSEG",tst,cnt,amt,%SystemDate)
			}
		}

	do upd("PAA",tst,cnt,amt,%SystemDate)
	do upd("PHLD",tst,cnt,amt,%SystemDate)
	do upd("HLD7",tst,cnt,amt,%SystemDate)
	do upd("HLD8",tst,cnt,amt,%SystemDate)
	do upd("PHLD9",tst,cnt,amt,%SystemDate)
	do upd("EFTPAY",tst,cnt,amt,%SystemDate)
	do upd("DAYENDNEG",tst,cnt,amt,%SystemDate)

	if cls="D" do {

		type RecordDEP dep=Db.getRecord("DEP","CID=:tst")

		set dep.eurcnvd=""
		set dep.eurstat=1
		set dep.orgcrcd=""
		set dep.eurbatch=1
		set dep.eurudrq=""
		set dep.eurefd=%SystemDate
		set dep.eureqdat=%SystemDate-1
	
		do dep.save()
		}
	else  if cls="L" do {

		type RecordLN ln=Db.getRecord("LN","CID=:tst")

		set ln.eurcnvd=""
		set ln.eurstat=1
		set ln.orgcrcd=""
		set ln.eurbatch=1
		set ln.eurudrq=""
		set ln.eurefd=%SystemDate
		set ln.eureqdat=%SystemDate-1
	
		do ln.save()
		}

	quit


	//----------------------------------------------------------------------
upd(String tbl,				// Table Name
    Number tst,				// Test Account Number
    Number cnt,				// Conversion Type
    Number amt,				// Amount
    Date tjd)				// Current Date
	//----------------------------------------------------------------------

	type public Number segment

	type Number seq
	type String BALAVLCALCFO,col

	if tbl="EFTPAY" do {

		for seq=1:1:cnt do {

			type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID=:tst,SEQ=:seq",1)

			set eftpay.recacct=""
			set eftpay.recinst=""
			set eftpay.amount=""
			set eftpay.crcd=""
			set eftpay.variable=""
			set eftpay.constant=""
			set eftpay.specific=""
			set eftpay.efd=""
			set eftpay.frequency=""
			set eftpay.source=""
			set eftpay.cc=""
			set eftpay.status="A"
			set eftpay.met=""
			set eftpay.tries=""
			set eftpay.actamt=""
			set eftpay.thold=""
			set eftpay.procdt=""
			set eftpay.amttyp=1
			set eftpay.efttype="PO"

			do eftpay.save()
			}
		}

	type ResultSet ctbleuro=Db.select("DI","CTBLEURO","FID=:tbl AND (CONVTYP=1 OR CONVTYP=2)")

	while ctbleuro.next() do {

		set col=ctbleuro.getCol("DI")

		type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS=""SYSDEV"",FID=:tbl,DI=:col")

		if dbtbl1d.typ'="$",dbtbl1d.typ'="N" quit

		if tbl="LN" do { quit

			type RecordLN ln=Db.getRecord("LN","CID=:tst",1)

			set ln.@col=amt

			do ln.save()
			}

		if tbl="DEP" do { quit

			type RecordDEP dep=Db.getRecord("DEP","CID=:tst",1)

			set dep.@col=amt

			do dep.save()
			}

		if tbl="DEPSEG" do { quit

			type RecordDEPSEG depseg=Db.getRecord("DEPSEG","CID=:tst,SEGMENT=:segment",1)

			set depseg.@col=amt

			do depseg.save()
			}

		if tbl="EFTPAY" do { quit

			type DbSet dseftpay=Db.selectDbSet("EFTPAY","CId=:tst AND SEQ>0 AND SEQ<:cnt+1")

			while dseftpay.next() do {

				type RecordEFTPAY eftpay=dseftpay.getRecord("EFTPAY")

				set eftpay.@col=amt

				do eftpay.save()
				}
			}

		if tbl="PHLD" do { quit

			type DbSet dsphld=Db.selectDbSet("PHLD","SEQ>0 AND SEQ<:cnt+1 AND CID=:tst")

			while dsphld.next() do {

				type RecordPHLD phld=dsphld.getRecord("PHLD")

				set phld.@col=amt

				do phld.save()
				}
			}

		if tbl="PHLD9" do { quit

			type DbSet dsphld9=Db.selectDbSet("PHLD9","SEQ>0 AND SEQ<:cnt+1 AND CID=:tst")

			while dsphld9.next() do {

				type RecordPHLD9 phld9=dsphld9.getRecord("PHLD9")

				set phld9.@col=amt
				set phld9.cdt=99999

				do phld9.save()
				}
			}

		if tbl="HLD7" do { quit

			type DbSet dshld7=Db.selectDbSet("HLD7","EXPDT>:tjd-2 AND EXPDT<:tjd-:cnt+1 AND CID=:tst")

			while dshld7.next() do {

				type RecordHLD7 hld7=dshld7.getRecord("HLD7")

				set hld7.@col=amt

				do hld7.save()
				}
			}

		if tbl="HLD8" do { quit
			
			set BALAVLCALCFO = $$BALAVLFO^DEPCDI(tst)
			
			// Suppress check hold if Available Balance Calculation Formula
			// does not include check holds
			if BALAVLCALCFO.extract(4)'=1 quit

			type DbSet dshld8=Db.selectDbSet("HLD8","EXPDT>:tjd-2 AND EXPDT<:tjd-:cnt+1 AND CID=:tst")

			while dshld8.next() do {

				type RecordHLD8 hld8=dshld8.getRecord("HLD8")

				set hld8.@col=amt

				do hld8.save()
				}
			}

		if tbl="DAYENDNEG" do { quit

			type DbSet dsdeneg=Db.selectDbSet("DAYENDNEG","EFD>:tjd-2 AND EFD<:tjd-:cnt+1 AND CID=:tst")

			while dsdeneg.next() do {

				type RecordDAYENDNEG deneg=dsdeneg.getRecord("DAYENDNEG")

				set deneg.@col=amt

				do deneg.save()
				}
			}

		if tbl="PAA" do { quit

			type DbSet dspaa=Db.selectDbSet("PAA","EFD>:tjd-2 AND EFD<:tjd-:cnt+1 AND CID=:tst")

			while dspaa.next() do {

				type RecordPAA paa=dspaa.getRecord("PAA")

				set paa.@col=amt

				do paa.save()
				}
			}
	}
	quit


	//----------------------------------------------------------------------
copy(String tbl,			// Table Name
     Number cid,			// Account Number
     Number tst)			// Test Account Number
	//----------------------------------------------------------------------
	
	if tbl="ACN" do {

		type RecordACN rctst
		type RecordACN rccid=Db.getRecord("ACN","CID=:cid")

		set rctst=rccid.copy()
	
		if rctst.getMode() do rctst.setMode(0)
	
		set rctst.cid=tst
	
		do rctst.bypassSave()
		}
	else  	if tbl="LNBIL0" do {

		type RecordLNBIL0 rctst
		type RecordLNBIL0 rccid=Db.getRecord("LNBIL0","CID=:cid")

		set rctst=rccid.copy()
	
		if rctst.getMode() do rctst.setMode(0)
	
		set rctst.cid=tst
	
		do rctst.bypassSave()
		}
	quit

vSIG()	quit "60523^1051^Balasubramonian Sankar^9048"	// Signature - LTD^TIME^USER^SIZE
