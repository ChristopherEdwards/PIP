public DEPCALC(FORM,NP,IR,PV,PMT,FV,DEC,ER,RM)
	/*

	ORIG:  Chuck Hardy (6721)
	DESC:  Deposit Modeler Formulas

	---- Revision History ------------------------------------------------

	07/28/06 - KELLYP - CR 22048
		   Modified the F2, F4, and F6 sections to eliminate PRECEDENCE
		   warnings.

	10/13/05 - S.Krishnan - CR16885
		   Top of the procedure is made as Public.

	06/13/02 - ZWITKOWITSM - 43583
		   Converted to PSL.

	01/02/01 - HALPINJ - 43373
		   Back out previous fix.  Previous fix was only to roll
		   forward.

	----------------------------------------------------------------------
	*/

	set ER=0
	set (ANS,RM)=""

	if DEC>18 set DEC=18

	if FORM="F1" do F1
	if FORM="F2" do F2
	if FORM="F3" do F3
	if FORM="F4" do F4
	if FORM="F5" do F5
	if FORM="F6" do F6
	if FORM="F7" do F7

	// Error in calculation.  Please enter again.
	if ANS="" do Runtime.setErrMSG("DEP",983)

	quit ANS


F1	/*
	Calculates PV where: PMT,i,and n are defined and FV is optional.
	Solves for #'S 30,28 (where FV=0), and 22 (where PMT=0).
	*/

	set X=$$LNX^%ZFUNC(1+IR)

	if X>88 quit

	set EXP=1/$$EXP^%ZFUNC(X*NP)
	set PV=-PMT*((1-EXP)/IR)+(FV*EXP)
	set ANS=$$^SCARND(PV,0,"","",DEC)

	quit


F2	/*
	Calculates PMT where: i,n, and PV are defined and FV is optional.
	Solves for #'S 23, 21 (where FV=0), and 22 (where PV=0).
	*/

	set X=$$LNX^%ZFUNC(1+IR)

	if X>88 quit

	set EXP=1/$$EXP^%ZFUNC(X*NP)
	set PMT=(FV*EXP-PV)/((1-EXP)/IR)
	set ANS=$$^SCARND(PMT,0,"","",DEC)

	quit


F3	/*
	Calculates FV where: PMT,i, and n are defined and PV is optional.
	Solves for 29, and 28 (where PV=0).
	*/

	set X=$$LNX^%ZFUNC(1+IR)*NP

	if X>88 quit

	set EXP=$$EXP^%ZFUNC(X)
	set FV=((1-EXP)/IR)*-PMT+(PV*EXP)
	set ANS=$$^SCARND(FV,0,"","",DEC)

	quit


F4	/*
	Calculates i where PMT,FV,PV and n are defined.
	Solves for 25 (where FV=0).
	*/

	new CNTR,DONE,PMT1

	kill E,I6

	set DONE=0
	set (ONOF,I3)=1
	set (CNTR,I2)=0
	set I6=.0003
	set MARG=1/(1_$E("0000000000000000",1,DEC-6))

	// Iteration
	for  do { quit:DONE
		set X=$$LNX^%ZFUNC(1+I6)

		if X>88 set DONE=1 quit

		set EXP=1/$$EXP^%ZFUNC(X*NP)
		set PMT1=(FV*EXP-PV)/((1-EXP)/I6)
		set I6(CNTR)=I6
		set E(CNTR)=(PMT1-PMT)

		if E(CNTR)<MARG,E(CNTR)>-MARG do { quit
			set IRN=I6*100
			set ANS=$$^SCARND(IRN,0,"","",DEC)
			set DONE=1
			}

		if CNTR>0,'(E(CNTR)-E(CNTR-1)) do { quit
			set IRN=I6*100
			set ANS=$$^SCARND(IRN,0,"","",DEC)
			set DONE=1
			}

		set CNTR=CNTR+1

		if CNTR'>1 do F4A quit
		if CNTR,'(CNTR#50) set MARG=MARG*10

		// Newton's method
		set A=(E(CNTR-1)-E(CNTR-2))/(I6(CNTR-1)-I6(CNTR-2))
		set I6=I6(CNTR-1)-(E(CNTR-1)/A)

		}

	quit


F4A	// Use Bisection method for first two guesses

	set I3=(I6-I2)/2
	if I3<0 set I3=-I3

	set I2=I6
	if I2<0 set I2=-I2

	if PMT1>PMT set I6=I6-I3
	else  set I6=I6+I3

	quit


F5	/*
	Calculates i where PV,FV, and n are defined and PMT is undefined.
	Solves for 19 (where PV<0 and FV>0 or PV>0 and FV<0).
	*/

	set P=PV
	set F=FV

	new DONE,PV,FV

	if P>1E3 set P=P/1000 set F=F/1000

	kill E,I6

	set DONE=0
	set (I3,ONOF)=1
	set I6=.0003
	set (CNTR,I2)=0
	set MARG=1/(1_$E("0000000000000000",1,DEC-6))

	// Iteration
	for  do { quit:DONE
		set X=$$LNX^%ZFUNC(1+I6)*NP

		if X>88 set DONE=1 quit

		set EXP=$$EXP^%ZFUNC(X)
		set F1=P*EXP
		set I6(CNTR)=I6 set E(CNTR)=F1-F

		if E(CNTR)<MARG,E(CNTR)>-MARG do F5C quit
		if CNTR>0,'(E(CNTR)-E(CNTR-1)) do F5C quit

		set CNTR=CNTR+1

		if CNTR'>1 do F5B quit
		if CNTR,'(CNTR#50) set MARG=MARG*10

		// Newton's method
		set A=(E(CNTR-1)-E(CNTR-2))/(I6(CNTR-1)-I6(CNTR-2))
		set I6=I6(CNTR-1)-(E(CNTR-1)/A)
		}

	quit


F5B	// Use Bisection method for first two guesses

	set I3=(I6-I2)/2
	if I3<0 set I3=-I3

	set I2=I6
	if I2<0 set I2=-I2

	if F1>F set I6=I6-I3
	else  set I6=I6+I3

	quit


F5C
	set DONE=1

	if 'ER do { quit
		set IRN=I6*100
		set ANS=$$^SCARND(IRN,0,"","",DEC)
		}

	set ANS=""

	quit


F6	/*
	Calculates n where PMT,PV and i are defined and FV is optional.
	Solves for 15,13 (where FV=0),7 (where PMT=0), 14 (where PV=0).
	*/

	if PMT-(IR*PV)=0 set NP="" quit
	set X=(PMT+(IR*FV))/(PMT+(IR*PV))
	if X<0 set NP="" quit
	set TOP=$$LNX^%ZFUNC(X)

	if X>88 quit

	set BOT=$$LNX^%ZFUNC(1+IR)
	if 'BOT set NP="" quit

	set NP=TOP/BOT
	set ANS=$$^SCARND(NP,0,"","",DEC)

	quit


F7	/*
	Calculates FV where PV,i, and n are known and PMT is undefined.
	Solves for 21
	*/

	set X=$$LNX^%ZFUNC(1+IR)*NP

	if X>88 quit

	set EXP=$$EXP^%ZFUNC(X)
	set FV=PV*EXP
	set ANS=$$^SCARND(FV,0,"","",DEC)

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60477^65445^Pat Kelly^4168"	// Signature - LTD^TIME^USER^SIZE
