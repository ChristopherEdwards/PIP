R01S224	// SCA172 - Service Fee or Credit Usage by Branch
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String PLTP,Q,SCND
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1
	type Number VIN2
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"

	set RID="SCA172"
	set RN="Service Fee or Credit Usage by Branch"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[SRV]SCND|[SRV]SCND:DISTINCT:NOVAL||S SCND=$$^SCAJD(X)||D|Service Charge Date|||||"
	set %TAB("VIN2")="|1||[SRV]PLTP|[STBLPLTP]:NOVAL||S PLTP=X||N|Plan Type is equal to|||||"
	set %TAB("VIN3")="|255||[SRV]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN4")="|255||[DEP]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN5")="|255||[DEP]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""D"""""":NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN6")="|255||[DEP]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN7")="|255||[DEP]FEEPLN|[FEEPLN]PLAN:DISTINCT:QU ""[FEEPLN]PLTP=0"":NOVAL||D EXT^DBSQRY||T|Service Fee Plan|||||"
	set %TAB("VIN8")="|255||[DEP]OFF|[UTBLOFF]:NOVAL||D EXT^DBSQRY||T|Primary Account Officer Code|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#1,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=31
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String PLTP,Q,SCND
	type public Date VIN1
	type public Number VIN2
	type public String VIN3,VIN4,VIN5,VIN6,VIN7,VIN8
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,AVGBAL,AVGCOL,AVGFLT,AVGRES,BASE,CNT,CONAM,DESC,DIRCHGA,DIRCHGS,EARN,ERNADJ,ERNALL,FEEACT,FEEANL,FEECHG,FEEOFF,FEEOFFPB,FEEPLN,FEEUNP,LTOT(),LWBAL1,LWBAL2,NETFEE,NETFWD,NETPL,OFF,OFFEARN,OLDBOO,RES,RID,RN,RTOT(),SYSADJ,TITLE1,TOTASS,TYPE,UNPR,VL,VLOF,VRF(),VSTATS(),VWHERE,WHERE,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA172",RN="Service Fee or Credit Usage by Branch"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA172","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[SRV]SCND = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		set DQQRY(SEQ)="[SRV]PLTP = "_$$addqts^DBSRWUTL(VIN2),SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[SRV]CID "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DEP]BOO "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DEP]GRP "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[DEP]TYPE "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[DEP]FEEPLN "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[DEP]OFF "_VIN8,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("TMPRPT5") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Service Charge Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC1|"_"Plan Type is equal to"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Account Number"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Branch of Ownership"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Product Group"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Product Type"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Service Fee Plan"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Primary Account Officer Code"_"|VIN8|"_VIN8.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Service Fee or Credit Usage by Branch"
		set VBNRINFO("PGM")="R01S224"
		set VBNRINFO("RID")="SCA172"
		set VBNRINFO("TABLES")="TMPRPT5"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TMPRPT5]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TMPRPT5]KEY1"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TMPRPT5]KEY2"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TMPRPT5]KEY3"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,TMPRPT5]KEY4"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,TMPRPT5]KEY5"

		set VBNRINFO("DOC",1)="This report provides information about the service fees or usage credits"
		set VBNRINFO("DOC",2)="assessed on selected accounts for specified branches."
		set VBNRINFO("DOC",3)=" "
		set VBNRINFO("DOC",4)="This information can be used to analyze the profitability of accounts on a"
		set VBNRINFO("DOC",5)="branch-by-branch basis. Typically, this report is run at the end of each"
		set VBNRINFO("DOC",6)="service fee period or usage credit period.  For each account, the report"
		set VBNRINFO("DOC",7)="includes average balances for the period, detail information about the service"
		set VBNRINFO("DOC",8)="fees or usage credit assessed, and a summary of the earnings allowance"
		set VBNRINFO("DOC",9)="calculation and the resulting fees charged.  It also includes totals and"
		set VBNRINFO("DOC",10)="earnings allowance totals by branch and for all branches reported."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	do VOPRE if VFMQ do VEXIT(0) quit

	set VSELECT=""
	set VSELECT=VSELECT_"TMPRPT5.PID,TMPRPT5.KEY1,TMPRPT5.KEY2,TMPRPT5.KEY3"
	set VSELECT=VSELECT_",TMPRPT5.KEY4,TMPRPT5.KEY5"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"TMPRPT5",VWHERE,"TMPRPT5.PID,TMPRPT5.KEY1,TMPRPT5.KEY2,TMPRPT5.KEY3,TMPRPT5.KEY4,TMPRPT5.KEY5","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6
	set vc1=V.piece($C(9),1)			// TMPRPT5.PID
	set vc2=V.piece($C(9),2)			// TMPRPT5.KEY1
	set vc3=V.piece($C(9),3)			// TMPRPT5.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT5.KEY3
	set vc5=V.piece($C(9),5)			// TMPRPT5.KEY4
	set vc6=V.piece($C(9),6)			// TMPRPT5.KEY5
	quit

	// User-defined pre/post-processor code

VOPRE	// OPEN pre-processor

	type public String VWHERE

	set VWHERE = "PID = "_%ProcessID
	quit

VPREAQ	// Pre-processor (after query)

	/*
	This code is necessary to build the TMPRPT5 table for use by
	report SCA172.  The report pulls data from SRVDTL and SRVD, but
	cannot do so simply using the report writer to try to combine those
	tables since SRVDTL has to be the primary table, and, if it doesn't
	have an entry for a specific FEETYP, SRVD will never be retrieved.
	*/

	type public Number LTOT(), RTOT()
	type public String OLDBOO, Q, PLTP, SCND, WHERE

	type Number I

	// Init totals
	for I = 1:1:8 set (LTOT(I), RTOT(I)) = 0

	// Set up old branch to know when to reset totals
	set OLDBOO = ""

	// Build temporary sort/select table
	do Db.delete("TMPRPT5", "PID=:%ProcessID")

	set WHERE = "(SRV.SCND = "_SCND_" AND SRV.PLTP = "_PLTP_")"
	
	if Q.data() set WHERE = WHERE_" AND ("_$$Q2SQL^SQLCONV(.Q())_")"
	
	set WHERE = WHERE_" AND DEP.CID = SRV.CID"
	
	#ACCEPT Date=08/18/05; PGM=RussellDS; CR=16911
	type ResultSet rs = Db.select("CID,BOO", "SRV,DEP", WHERE)
	
	while rs.next() do {
		
		type Number CID
		type String BOO

		set CID = rs.getCol("CID")
		set BOO = rs.getCol("BOO")
		
		// Save SRVD record, unless there are SRVDTL records, in which
		// case save them
		
		type ResultSet rs2 = Db.select("FEECAT,FEETYP", "SRVD", "CID=:CID AND PLTP=:PLTP AND SCND=:SCND")
		
		while rs2.next() do {
		
			type String FEECAT, FEETYP
			
			set FEECAT = rs2.getCol("FEECAT")
			set FEETYP = rs2.getCol("FEETYP")
			
			type ResultSet rs3 = Db.select("SEQ", "SRVDTL", "CID=:CID AND PLTP=:PLTP AND SCND=:SCND AND FEECAT=:FEECAT AND FEETYP=:FEETYP")
			
			if rs3.isEmpty() do {
				do settemp(BOO, CID, FEECAT, FEETYP, 0)
			}
			else  while rs3.next() do settemp(BOO, CID, FEECAT, FEETYP, rs3.getCol("SEQ"))
		}
	}

	quit
	

settemp(String BOO,
	String CID,
	String FEECAT,
	String FEETYP,
	String SEQ)
	
	type RecordTMPRPT5 tmprpt5 = Class.new("RecordTMPRPT5", "PID=%ProcessID,KEY1=:BOO,KEY2=:CID,KEY3=:FEECAT,KEY4=:FEETYP,KEY5=:SEQ")
	
	do tmprpt5.save()
	
	quit






VPREBQ	// Pre-processor (before query)

	//Incoming=PLTP,Q,SCND

	type public String Q

	// Query array
	kill Q
	quit

VRPOST	// Report post-processor

	do Db.delete("TMPRPT5", "PID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1,vskp(4)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VDTL3	// Detail
	type public String %TIM,AVGBAL,AVGCOL,AVGFLT,AVGRES,BASE,CNT,DESC,DIRCHGA,DIRCHGS,EARN,ERNADJ,ERNALL,FEEACT,FEEANL,FEECHG,FEEOFF,FEEOFFPB,FEEPLN,FEEUNP,IOSL,LTOT(),LWBAL1,LWBAL2,NETFEE,NETFWD,NETPL,OFF,OFFEARN,OLDBOO,PLTP,Q,RES,RTOT(),SCND,SYSADJ,TITLE1,TOTASS,TYPE,UNPR,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),VWHERE,WHERE,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+16>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="            "_"ACCOUNT NUMBER"
	set VL=VL_$J("",31-VL.length())_"PRODUCT TYPE"
	set VL=VL_$J("",50-VL.length())_"ACCOUNT TITLE"
	set VL=VL_$J("",89-VL.length())_"ACCOUNT OFFICER"
	set VL=VL_$J("",109-VL.length())_"FEE PLAN"
	do VOM
	set V=vc3,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,12) set VL="              "_V
	set VL=VL_$J("",39-VL.length())_$J(TYPE,4)
	set VL=VL_$J("",50-VL.length())_$E(TITLE1,1,40)
	set VL=VL_$J("",98-VL.length())_$J(OFF,6)
	set VL=VL_$J("",109-VL.length())_$E(FEEPLN,1,5)
	do VOM
	set VL="" do VOM
	set VL="----------------------------------------------------------"
	set VL=VL_$J("",59-VL.length())_"BALANCE DATA"
	set VL=VL_$J("",72-VL.length())_"-----------------------------------------------------------"
	do VOM
	set VL="" do VOM
	set VL="      "_"Avg Ledger"
	set VL=VL_$J("",23-VL.length())_"Avg Float"
	set VL=VL_$J("",37-VL.length())_"Avg Collected"
	set VL=VL_$J("",53-VL.length())_"Avg Req'd Reserve"
	set VL=VL_$J("",74-VL.length())_"Avg Invstble"
	set VL=VL_$J("",90-VL.length())_"Low Intra-day"
	set VL=VL_$J("",106-VL.length())_"Low End-of-day"
	do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(AVGBAL,"P"_",",2),14) set VL="  "_V
	set VL=VL_$J("",18-VL.length())_$J($FN(AVGFLT,"P"_",",2),14)
	set VL=VL_$J("",36-VL.length())_$J($FN(AVGCOL,"P"_",",2),14)
	set VL=VL_$J("",56-VL.length())_$J($FN(RES,"P"_",",2),14)
	set VL=VL_$J("",72-VL.length())_$J($FN(AVGRES,"P"_",",2),14)
	set VL=VL_$J("",89-VL.length())_$J($FN(LWBAL1,"P"_",",2),14)
	set VL=VL_$J("",106-VL.length())_$J($FN(LWBAL2,"P"_",",2),14)
	do VOM
	set VL="" do VOM
	set VL="-------------------------------------------------------"
	set VL=VL_$J("",56-VL.length())_"SERVICE FEE DETAIL --------------------------------------------------------"
	do VOM
	set VL="" do VOM
	set VL="                                                                    "_"--At Service--"
	set VL=VL_$J("",88-VL.length())_"-----On Analysis----"
	do VOM
	set VL="                                               "_"Item"
	set VL=VL_$J("",58-VL.length())_"Unit"
	set VL=VL_$J("",88-VL.length())_"Direct"
	set VL=VL_$J("",102-VL.length())_"Offset"
	do VOM
	set VL="                   "_"Description"
	set VL=VL_$J("",46-VL.length())_"Count"
	set VL=VL_$J("",57-VL.length())_"Price"
	set VL=VL_$J("",68-VL.length())_"Direct Charge"
	set VL=VL_$J("",88-VL.length())_"Charge"
	set VL=VL_$J("",100-VL.length())_"Earnings"
	do VOM
	set VL="                   "_"-----------------------------------------------------------------------------------------"
	do VOM
	set VL="                   "_"Base Charges"
	do VP3 quit:VFMQ!verror.get()  set V=$J(BASE,10,2)
	set VL=VL_$J("",98-VL.length())_V
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,AVGBAL,AVGCOL,AVGFLT,AVGRES,BASE,CNT,DESC,DIRCHGA,DIRCHGS,EARN,ERNADJ,ERNALL,FEEACT,FEEANL,FEECHG,FEEOFF,FEEOFFPB,FEEPLN,FEEUNP,I,IOSL,LTOT(),LWBAL1,LWBAL2,NETFEE,NETFWD,NETPL,OFF,OFFEARN,OLDBOO,PLTP,Q,RES,RTOT(),SCND,SYSADJ,TITLE1,TOTASS,TYPE,UNPR,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VWHERE,VX(),WHERE,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	do VHDG0 quit:VFMQ				// <<#>>
	do VOM
	set VL="************************************************************************************************************************************"
	do VOM
	set VL="BRANCH TOTAL - "
	set VL=VL_$J("",15-VL.length())_$E(vc2,1,6)
	do VOM
	set VL="-------- On Analysis ---------"
	do VOM
	set VL="   "_"Direct Fees"
	set VL=VL_$J("",18-VL.length())_"Offset Fees"
	set VL=VL_$J("",32-VL.length())_"Earnings Allow"
	set VL=VL_$J("",49-VL.length())_"Earn Allow Adj"
	set VL=VL_$J("",67-VL.length())_"System Adjust"
	set VL=VL_$J("",84-VL.length())_"Carry Forward"
	set VL=VL_$J("",100-VL.length())_"Unapplied Fees"
	set VL=VL_$J("",119-VL.length())_"Fees Charged"
	do VOM
	set VL=$J($FN(LTOT(1),",",2),14)
	set VL=VL_$J("",15-VL.length())_$J($FN(LTOT(2),",",2),14)
	set VL=VL_$J("",32-VL.length())_$J($FN(LTOT(3),"P"_",",2),14)
	set VL=VL_$J("",49-VL.length())_$J($FN(LTOT(4),"P"_",",2),14)
	set VL=VL_$J("",66-VL.length())_$J($FN(LTOT(5),"P"_",",2),14)
	set VL=VL_$J("",83-VL.length())_$J($FN(LTOT(6),"P"_",",2),14)
	set VL=VL_$J("",100-VL.length())_$J($FN(LTOT(7),"P"_",",2),14)
	set VL=VL_$J("",117-VL.length())_$J($FN(LTOT(8),"P"_",",2),14)
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,AVGBAL,AVGCOL,AVGFLT,AVGRES,BASE,CNT,DESC,DIRCHGA,DIRCHGS,EARN,ERNADJ,ERNALL,FEEACT,FEEANL,FEECHG,FEEOFF,FEEOFFPB,FEEPLN,FEEUNP,I,IOSL,LTOT(),LWBAL1,LWBAL2,NETFEE,NETFWD,NETPL,OFF,OFFEARN,OLDBOO,PLTP,Q,RES,RTOT(),SCND,SYSADJ,TITLE1,TOTASS,TYPE,UNPR,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VWHERE,VX(),WHERE,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+11>IOSL do VHDG0 quit:VFMQ

	set VL="                   "_"-----------------------------------------------------------------------------------------"
	do VOM
	set VL="                   "_"Account Totals:"
	do VP4 quit:VFMQ!verror.get()  set V=$S(+FEECHG=0:$J("",12),1:$J($FN(FEECHG,",",2),12))
	set VL=VL_$J("",68-VL.length())_V
	set VL=VL_$J("",82-VL.length())_$S(+FEEANL=0:$J("",12),1:$J($FN(FEEANL,",",2),12))
	set VL=VL_$J("",98-VL.length())_$S(+FEEOFFPB=0:$J("",10),1:$J($FN(FEEOFFPB,",",2),10))
	do VOM
	set VL="" do VOM
	set VL="---------------------------------------------------"
	set VL=VL_$J("",52-VL.length())_"EARNINGS ALLOWANCE SUMMARY"
	set VL=VL_$J("",79-VL.length())_"----------------------------------------------------"
	do VOM
	set VL="" do VOM
	set VL=" "_"Earn Allowance"
	set VL=VL_$J("",19-VL.length())_"Earn Adjustment"
	set VL=VL_$J("",36-VL.length())_"Net Earn Allowance"
	set VL=VL_$J("",56-VL.length())_"Net Profit/(Loss)"
	do VOM
	set VL=" "_$S(+ERNALL=0:$J("",14),1:$J($FN(ERNALL,",",2),14))
	set VL=VL_$J("",20-VL.length())_$S(+ERNADJ=0:$J("",14),1:$J($FN(ERNADJ,",",2),14))
	set VL=VL_$J("",40-VL.length())_$S(+EARN=0:$J("",14),1:$J($FN(EARN,",",2),14))
	set VL=VL_$J("",59-VL.length())_$S(+NETPL=0:$J("",14),1:$J($FN(NETPL,",",2),14))
	do VOM
	set VL="" do VOM
	set VL="----------------------------------------------------------"
	set VL=VL_$J("",59-VL.length())_"FEE SUMMARY"
	set VL=VL_$J("",71-VL.length())_"------------------------------------------------------------"
	do VOM
	set VL="" do VOM
	set VL="       "_"Assessed"
	set VL=VL_$J("",20-VL.length())_"Adjustments"
	set VL=VL_$J("",33-VL.length())_"Total Assessed"
	set VL=VL_$J("",51-VL.length())_"Net Assessed"
	set VL=VL_$J("",73-VL.length())_"Direct"
	set VL=VL_$J("",82-VL.length())_"Carry Forward"
	set VL=VL_$J("",102-VL.length())_"Unapplied"
	set VL=VL_$J("",114-VL.length())_"Total Charged"
	do VOM
	set VL=" "_$S(+FEEOFF=0:$J("",14),1:$J($FN(FEEOFF,",",2),14))
	set VL=VL_$J("",17-VL.length())_$S(+SYSADJ=0:$J("",14),1:$J($FN(SYSADJ,",",2),14))
	set VL=VL_$J("",33-VL.length())_$S(+TOTASS=0:$J("",14),1:$J($FN(TOTASS,",",2),14))
	set VL=VL_$J("",49-VL.length())_$S(+NETFEE=0:$J("",14),1:$J($FN(NETFEE,",",2),14))
	set VL=VL_$J("",65-VL.length())_$S(+FEEANL=0:$J("",14),1:$J($FN(FEEANL,",",2),14))
	set VL=VL_$J("",81-VL.length())_$S(+NETFWD=0:$J("",14),1:$J($FN(NETFWD,",",2),14))
	set VL=VL_$J("",97-VL.length())_$S(+FEEUNP=0:$J("",14),1:$J($FN(FEEUNP,",",2),14))
	set VL=VL_$J("",113-VL.length())_$S(+FEEACT=0:$J("",14),1:$J($FN(FEEACT,",",2),14))
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,AVGBAL,AVGCOL,AVGFLT,AVGRES,BASE,CNT,DESC,DIRCHGA,DIRCHGS,EARN,ERNADJ,ERNALL,FEEACT,FEEANL,FEECHG,FEEOFF,FEEOFFPB,FEEPLN,FEEUNP,IOSL,LTOT(),LWBAL1,LWBAL2,NETFEE,NETFWD,NETPL,OFF,OFFEARN,OLDBOO,PLTP,Q,RES,RTOT(),SCND,SYSADJ,TITLE1,TOTASS,TYPE,UNPR,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),VWHERE,WHERE,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP5 quit:VFMQ!verror.get()  set V=$E(DESC,1,20) set VL="                   "_V
	do VP6 quit:VFMQ!verror.get()  set V=$J(CNT,7)
	set VL=VL_$J("",44-VL.length())_V
	set VL=VL_$J("",57-VL.length())_$J(UNPR,5,2)
	set VL=VL_$J("",68-VL.length())_$S(+DIRCHGS=0:$J("",12),1:$J($FN(DIRCHGS,",",2),12))
	set VL=VL_$J("",86-VL.length())_$S(+DIRCHGA=0:$J("",8),1:$J($FN(DIRCHGA,",",2),8))
	set V=$S(+OFFEARN=0:$J("",8),1:$J($FN(OFFEARN,",",2),8)) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",100-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AVGBAL,AVGCOL,AVGFLT,AVGRES,BASE,CNT,CONAM,DESC,DIRCHGA,DIRCHGS,EARN,ERNADJ,ERNALL,FEEACT,FEEANL,FEECHG,FEEOFF,FEEOFFPB,FEEPLN,FEEUNP,LTOT(),LWBAL1,LWBAL2,NETFEE,NETFWD,NETPL,OFF,OFFEARN,OLDBOO,PLTP,Q,RES,RID,RN,RTOT(),SCND,SYSADJ,TITLE1,TOTASS,TYPE,UNPR,VL,VWHERE,WHERE,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Branch Code: "
	set VL=VL_$J("",13-VL.length())_$E(vc2,1,6)
	set VL=VL_$J("",97-VL.length())_"Analysis Date: "
	set VL=VL_$J("",112-VL.length())_$J($$DAT^%ZM(SCND),10)
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,AVGBAL,AVGCOL,AVGFLT,AVGRES,BASE,CNT,DESC,DIRCHGA,DIRCHGS,EARN,ERNADJ,ERNALL,FEEACT,FEEANL,FEECHG,FEEOFF,FEEOFFPB,FEEPLN,FEEUNP,LTOT(),LWBAL1,LWBAL2,NETFEE,NETFWD,NETPL,OFF,OFFEARN,OLDBOO,PLTP,Q,RES,RTOT(),SCND,SYSADJ,TITLE1,TOTASS,TYPE,UNPR,VPN,VWHERE,WHERE,vc2,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+10>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	do VHDG0 quit:VFMQ				// <<#>>
	do VOM
	set VL="" do VOM
	set VL="****************************************************** REPORT TOTALS **************************************************************"
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="-------- On Analysis ---------"
	do VOM
	set VL="   "_"Direct Fees    Offset Fees   Earnings Allow   Earn Allow Adj    System Adjust    Carry Forward   Unapplied Fees     Fees Charged"
	do VOM
	set VL=$J($FN(RTOT(1),",",2),14)
	set VL=VL_$J("",15-VL.length())_$J($FN(RTOT(2),",",2),14)
	set VL=VL_$J("",32-VL.length())_$J($FN(RTOT(3),"P"_",",2),14)
	set VL=VL_$J("",49-VL.length())_$J($FN(RTOT(4),"P"_",",2),14)
	set VL=VL_$J("",66-VL.length())_$J($FN(RTOT(5),"P"_",",2),14)
	set VL=VL_$J("",83-VL.length())_$J($FN(RTOT(6),"P"_",",2),14)
	set VL=VL_$J("",100-VL.length())_$J($FN(RTOT(7),"P"_",",2),14)
	set VL=VL_$J("",117-VL.length())_$J($FN(RTOT(8),",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,TMPRPT5]KEY2

	type public String vc3,vc2
	// Get DEP data and reset branch totals if branch changes
 
        type public Number CID, LTOT()
        type public String FEEPLN, OLDBOO, OFF, TITLE1, TYPE

	set CID = vc3

	type RecordDEP dep = Db.getRecord("DEP", "CID=:CID", 1)

	set FEEPLN = dep.feepln
	set OFF = dep.off
	set TITLE1 = dep.title1
	set TYPE = dep.type
 
        if (OLDBOO '= vc2) do {
 
                type Number I
 
                for I = 1:1:8 set LTOT(I) = 0
                set OLDBOO = vc2
        }
	quit

VP2	// Column pre-processor - Variable: AVGBAL

	type public String vc3
	// Load SRV0 data

	type public Number AVGBAL, AVGCOL, AVGFLT, AVGRES, LWBAL1, LWBAL2, RES 
	type public String PLTP, SCND

	type Number CID = vc3

	type RecordSRV0 srv0 = Db.getRecord("SRV0", "CID=:CID,PLTP=:PLTP,SCND=:SCND")

	set AVGBAL = srv0.avgbal
	set AVGCOL = srv0.avgcol
	set AVGFLT = AVGBAL - AVGCOL
	set AVGRES = srv0.avgres
	set LWBAL1 = srv0.lwbal1
	set LWBAL2 = srv0.lwbal2
	set RES = AVGCOL - AVGRES
	quit

VP3	// Column pre-processor - Variable: BASE

	type public Number BASE
	type public String FEEPLN, SCND

	type RecordSRVH srvh = Db.getRecord("SRVH", "FEEPLN=:FEEPLN,SCND=:SCND", 1)

	set BASE = srvh.base
	quit

VP4	// Column pre-processor - Variable: FEECHG

	type public String vc3
	type public Number BASE, EARN, ERNADJ, ERNALL, FEEACT, FEEANL, FEECHG
	type public Number FEEOFF, FEEOFFPB, FEEUNP, LTOT(), NETFEE, NETFWD
	type public Number NETPL, RTOT(), SYSADJ, TOTASS
        type public String PLTP, SCND
 
        type Number CID = vc3
 
        type RecordSRV srv = Db.getRecord("SRV", "CID=:CID,PLTP=:PLTP,SCND=:SCND")
 
	set EARN = srv.earn
	set ERNADJ = srv.ernadj
	set ERNALL = srv.ernall
	set FEEACT = srv.feeact
        set FEEANL = srv.feeanl
        set FEECHG = srv.feechg
 	set FEEOFF = srv.feeoff
        set FEEOFFPB = FEEOFF + BASE
	set FEEUNP = srv.feeunp
	set NETFWD = srv.netfwd
	set NETPL = ERNALL + ERNADJ - FEEOFF
	set SYSADJ = srv.sysadj
	set TOTASS = FEEOFF + SYSADJ
	set NETFEE = FEEOFF + SYSADJ - (ERNALL + ERNADJ)

	set LTOT(1) = LTOT(1) + FEEANL
        set RTOT(1) = RTOT(1) + FEEANL

	set LTOT(2) = LTOT(2) + FEEOFF
        set RTOT(2) = RTOT(2) + FEEOFF

	set LTOT(3) = LTOT(3) + ERNALL
        set RTOT(3) = RTOT(3) + ERNALL

	set LTOT(4) = LTOT(4) + ERNADJ
        set RTOT(4) = RTOT(4) + ERNADJ

	set LTOT(5) = LTOT(5) + SYSADJ
        set RTOT(5) = RTOT(5) + SYSADJ

	set LTOT(6) = LTOT(6) + NETFWD
        set RTOT(6) = RTOT(6) + NETFWD

	set LTOT(7) = LTOT(7) + FEEUNP
        set RTOT(7) = RTOT(7) + FEEUNP

	set LTOT(8) = LTOT(8) + FEEACT
        set RTOT(8) = RTOT(8) + FEEACT
	quit

VP5	// Column pre-processor - Variable: DESC

	type public String vc5
	type public String DESC

	type String FEETYP = vc5

	type RecordUTBLTFFEE tffee = Db.getRecord("UTBLTFFEE", "FEETYP=:FEETYP", 1)

	set DESC = tffee.fdesc.extract(1, 20)

	if DESC.isNull() set DESC = FEETYP
	quit

VP6	// Column pre-processor - Variable: CNT

	type public String vc3,vc4,vc5,vc6
	type public Number CNT, DIRCHGA, DIRCHGS, OFFEARN, UNPR
	type public String PLTP, SCND

	type String CID, FEECAT, FEETYP, SEQ

	set CID = vc3
	set FEECAT = vc4
	set FEETYP = vc5
	set SEQ = vc6

	type RecordSRVD srvd = Db.getRecord("SRVD", "CID=:CID,PLTP=:PLTP,SCND=:SCND,FEECAT=:FEECAT,FEETYP=:FEETYP")

	set DIRCHGS = srvd.srvcstd

	if (SEQ = 0) do {

		set CNT = srvd.srvcntd + srvd.srvcnta + srvd.srvadj
		if (CNT > 0) set UNPR = (srvd.srvcstd + srvd.srvcsta) / CNT
		else  set UNPR = 0
		if (srvd.chgopt = 2) set DIRCHGA = srvd.srvcsta
		else  set DIRCHGA = 0
		if (srvd.chgopt = 3) set OFFEARN = srvd.srvcsta
		else  set OFFEARN = 0
	}

	else  do {

		type RecordSRVDTL srvdtl = Db.getRecord("SRVDTL", "CID=:CID,PLTP=:PLTP,SCND=:SCND,FEECAT=:FEECAT,FEETYP=:FEETYP,SEQ=:SEQ")

		set CNT = srvdtl.count
		set UNPR = srvdtl.itm
		if (srvd.chgopt = 2) set DIRCHGA = (srvdtl.itm * srvdtl.count) + srvdtl.base
		else  set DIRCHGA = 0
		if (srvd.chgopt = 3) set OFFEARN = (srvdtl.itm * srvdtl.count) + srvdtl.base
		else  set OFFEARN = 0
	}
	quit

VP7	// Column post-processor - Variable: OFFEARN

	type public Number CNT
	type public String V, VL

	if (CNT = 0) set (V, VL) = ""
	quit
