public LNCALNF	// Calculate Net Investment Yield
	/*
	   ORIG:  Chuck Hardy (6721) - 01/22/88


	------ Revision History ------------------------------------------------

	   07/31/06 - KELLYP - CR 22048
	   	      Modified VPG02A section to eliminate PRECEDENCE warning.

	   02/03/06 - S.Krishnan - CR16885
		      . Ported from v70dev on Bilbo.
		      . In the section T, modified the Db.select method to use
		        ACN table instead of the RELCIF1 index table.
		      . Replaced the ^UFRE calls with .nextFreqDate() method.
		      . All the ln objects are modified from upper case(LN) 
		        to lower-case(ln).
		      .	In the section VLOD, used the .copy() method instead of
		        setting each individual column from LNAMOAO to LNCYCPTS
		        table.
		      . Cleaned up all warnings.
		      		      
	   12/09/03 - CARROLLJ - CR7239
		      Modified call to CTL^UINDX.

	   12/08/02 - TELIV - 49451
		      Converted to PSL

	------------------------------------------------------------------------

	*/
	do INIT
	quit
	
INIT	//

	type Number %PAGE,%PG,OLNTB,STPG
	type String VFMQ
	
	set (STPG,%PG)=0 
	set %PAGE=4

	type RecordLN ln
	
	type RecordLNCYCPTS fLNCPTS

	do VPG(.ln,.fLNCPTS)

	quit


VPG(RecordLN ln,RecordLNCYCPTS fLNCPTS)	// Page control

	type public Boolean ER
	type public Number %PG,STPG
	type public String VFMQ
	type Number FINISH
	
	set FINISH=0

	for  do { quit:FINISH
		if STPG set:%PG<4 %PG=4

		if %PG=0 do VPG00 if ER set FINISH=1 quit
		if %PG=1 do VPG01(.ln) if ER set FINISH=1 quit
		if %PG<4,%PG>1 do VPG02(.ln) if ER set FINISH=1 quit
		if %PG'<4 do VPG03(.ln,.fLNCPTS) 
	
		if "DFQ"[VFMQ!$G(ER) do VER set FINISH=1 quit

		set %PG=%PG+1
		}
	quit
	
VPG00	// Set up


	type public Number OLNTB
	type public String %READ,%TAB,TYP

	type Number PAYEE
	type String CIF()
	
	// Net Investment Yield Calculator
	set CIF(1)=$$^MSG("3932")
	
	set TYP="PTS"
	set PAYEE=1
	set %TAB("TYPE")=".TYPE2/HLP=[PRODDFTL]TYPE/TBL=TY(/XPR=D T^LNCALNF"
	set %TAB("CRCD")=".CRCD1/HLP=[PRODDFTL]CRCD/TBL=[CRCD]"
	set %TAB("PLAN")=".PLAN2/HLP=[LNXAMO]PLAN/TBL=[AOAMO]PLAN:QU ""[AOAMO]TYP=<<TYP>> AND [AOAMO]PAYEE=<<PAYEE>>"""
	set %TAB("PLAN")=%TAB("PLAN")_"/XPP=D P^LNCALNF"
	set %TAB("IO")=$$IO^SCATAB($I)
	set OLNTB=40

	set %READ="@@%FN,,,TYPE/REQ,CRCD/REQ,PLAN/REQ,IO/REQ"

	do ^UTLREAD

	quit


VPG01(RecordLN ln)	// Screen

	type public Boolean PPIF
	type public Date NJD,JD
	type public Number CID,FV,INDO,N,SRATE,TYPE
	type public String CF(),FRE,SID
	type Date LPD,MDT,ODT
	type Number AF,AMBAS,PMT,Z
	type String BUSOPT,CLS,GRP,IX,NBDC,PAR(),PCM,TRM
	
	set CID=0
	set CLS="L"

	type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE",1)
	set PPIF=prodctl.ppif
	
	new BOO 
	set BOO=0
	set N=""

	// Load product defaults into LN
	set ln=Db.getRecord("LN","CID=:CID",1)
	do ln.default(TYPE)

	// Product Group
	set GRP=ln.grp
        set ln.cid=0
 	set CID=ln.cid
 	
	// Payment Calculation Method
	set PCM=ln.pcm

	if '$D(PCM(PCM)) do {
		type RecordSTBLPCM stblpcm=Db.getRecord("STBLPCM","KEY=:PCM",1)
		set PCM(PCM)=stblpcm.pcmp
		}

	// Original Disbursement Date
	set ln.odt=%SystemDate 
	set ln.odd=%SystemDate

	// Account Term
	if ln.ptrm="" set ln.ptrm=ln.trm

	set ln.dico=0
	set ln.pmt=0
	set ln.ppa=0
	set ln.pmttrs=0
	set ln.pmtpi=0
	set ln.schnd=0
	set ln.schnum=0
	set ln.schbal=0
	set ln.type=TYPE
        
	set SID="LNMDLNF"
	do DRV^USID(%ProcessMode,SID,.ln)

	// Int/Div Index
	set IX=$P(ln.index," ",1)

	// Index Value - Original
	if IX'="",'ln.indo do {
		set PAR("INDEX")=IX
		set PAR("IXLOAD")=0
		set PAR("IPMODE")=0
		set PAR("ROUND")=0
		set PAR("LIMIT")=1
		do CTL^UINDX(.ln,%SystemDate,ln.amtreq,.PAR) 
		set ln.indo=SRATE
		}

	set FV=0

	// Distribution 1 Frequency
	set JD=ln.dist1nd 
	set FRE="-"_ln.dist1fre 

	set NJD=JD.nextFreqDate("FRE")

	set LPD=NJD 
	set FRE=$E(FRE,2,99)

	// Distribution 1 Annual Factor
	set ln.dist1af=AF

	// Compute AMBAS
	if ln.ambas-0=0 do {

		// Account Term
		set ODT=LPD 
		set TRM=ln.trm
		set BUSOPT=ln.busopt
		set NBDC=ln.nbdc
		set MDT=$$EXT^UMDT(TRM,ODT,0,BUSOPT,NBDC)
		set Z=(MDT-ODT)/365 
		if Z<0 set Z=0

		// Amortization Base (Number of Payments)
		set ln.ambas=(Z*AF).roundDec(0)
		}

	// Compute ONP
	// Original Number of Payments
	if ln.onp-0=0 do {
		// Payment Term
		set ODT=LPD 
		set TRM=ln.ptrm
		if TRM="" quit

		set BUSOPT=ln.busopt
		set NBDC=ln.nbdc
		set MDT=$$EXT^UMDT(TRM,ODT,0,BUSOPT,NBDC)
		set Z=(MDT-ODT)/365 
		set:Z<0 Z=0

		// Original Number of Payments
		set ln.onp=(Z*AF).roundDec(0)
		}

	if ln.onp-ln.ambas=0 do VPG01A(.ln) quit

	// Calculate Balloon Balance
	// Principal and Interest Payment
	set AMBAS=ln.onp 
	set PMT=ln.pmtpi
	set FV=$$FV^UFINC(ln.amtreq,ln.irn,AMBAS,PMT,AF)
	set FV=FV.roundCur()

	// Original Number of Payments
	set CF(1)=ln.pmtpi_"|"_(ln.onp-1)_"|"_ln.irn

	// Principal and Interest Payment
	set CF(2)=(FV+ln.pmtpi)_"|1|"_ln.irn

	do VPG01B(.ln)
	quit



VPG01A(RecordLN ln)	//

	type public Number CID,N
	type public String CF()
	type Number A
	
	// Amortization Base (Number of Payments)
	set CF(1)=ln.pmtpi_"|"_ln.ambas_"|"_ln.irn

	// Payment Change Method
	set A=ln.pchm

	if A'=2,A'=3 do VPG01B(.ln) quit

	do PCHG^LNNEW10A(.ln)

	set N=0

	for  set N=$O(CF(N)) do { quit:N=""  
		if $P(CF(N),"|",3)="" do { 
			set $P(CF(N),"|",3)=ln.irn
			}
		}

	do VPG01B(.ln)
	
	quit



VPG01B(RecordLN ln)	// Principal and Interest Payment

	type public String PLAN
	type Number BAL,COST,FEE
	
	set ln.pmtorg=ln.pmtpi

	// Principal and Interest Payment
	set ln.anpto=ln.pmtpi

	// Original Int/Div Rate
	set ln.iro=ln.irn

	// Annual Rate Limit - Original Rate
	set ln.aniro=ln.irn

	// Amount Requested
	set BAL=ln.amtreq

	// Credit Limit - Current
	set ln.crlmt=BAL

	// Origination Fees - Percentage
	set FEE=BAL*(ln.orgfp/100)

	// Origination Fee - Amount
	set ln.orgfa=FEE

	// APR - Fees Required of All Borrowers
	set FEE=FEE+ln.aprapp

	// Disclosure - Mtg Ins Prem Pd
	set COST=ln.dismip

	// ln.NFAMTORG
	set ln.nfamtorg=FEE-COST

	// ln.NFPLNORG
	set ln.nfplnorg=PLAN

	quit


VPG02(RecordLN ln)	// Screen

	type public Number CID,%PG,TYPE
	type public String INDEX,SID
	
	set CID=" "
	set SID=""
        set ln.cid=0
	// Int/Div Index
	set INDEX=ln.index
	if INDEX.isNull() set %PG=%PG+1 do VPG02A(.ln) quit

	type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE",1)
	set SID=prodctl.arscr
	
	if SID="" set %PG=%PG+1 do VPG02A(.ln) quit

	do DRV^USID(%ProcessMode,SID,.ln)
	
	do VPG02A(.ln)

	quit


VPG02A(RecordLN ln)	//

	type public Boolean PPIF
	type public Number CID,CNT,IOSL,%PAGE,%PG,%REPEAT
	type public String %TAB,CF(),FRE,I,INDEX,DAYEND,X
	type Number CNTS,DAYS,INTFRE,IF,OINT
	type String %PR(),VPG()

	if %PG>3 quit 
	type public Date NJD,JD
	
	// Original Disbursement Date
	set %EffectiveDate=ln.odd 
	#ACCEPT DATE=12/09/03;PGM=John Carroll
	set %SystemDate=%EffectiveDate

	// Prepayment Flag
	set IF=$S(ln.ppf:36500,1:36000)

	// Int/Div Check Frequency
	set (INTFRE,FRE)=ln.intfre

	// Int/Div Change - Next Date
	if 'INDEX.isNull(),INTFRE'="" do {
		set JD=%SystemDate 
		set ln.ichld=JD 
		set NJD=JD.nextFreqDate("FRE")
		set ln.ichnd=NJD
		}

	// Original Disbursement Date
	set DAYS=ln.amodt-ln.odd

	// Distribution 1 Next Due
	set FRE="-"_ln.dist1fre 
	set JD=ln.dist1nd
	set NJD=JD.nextFreqDate("FRE")

	// Interest Prepaid Date
	if 'DAYS,NJD'=ln.amodt set DAYS=NJD-ln.amodt

	set OINT=0
	if PPIF,DAYS do {
		// Credit Limit - Current
		set OINT=ln.crlmt*ln.irn*DAYS/IF
		if OINT#.01 set OINT=(OINT+.005).roundDec(0)
		}

	set %PR(1)="I|1|1"
	set %PR(2)="P|1|1"
	// Original Net Fee Plan
	do ^LNNFNEW1(.ln,ln.nfamtorg,ln.nfplnorg)

	kill DAYEND,%TAB

	set CNT=$O(CF(""),-1) if 'CNT quit
	set %REPEAT=IOSL-14

	
	set X=%PAGE-1
	set %PAGE=('(CNT#%REPEAT=0))+(CNT\%REPEAT)+3

	// Cash flow page ~p1
	for I=X:1:%PAGE set VPG(I)=$$^MSG("3931",I)
	set CNTS=0

	quit


VPG03(RecordLN ln,RecordLNCYCPTS fLNCPTS)	// Screen

	type public Number %MODS,%PG,%REPEAT,CID,CNT,IOSL,OLNTB,STPG,ZGCD,ZGFD,ZXNETBAL
	type public String CF(),IO,SID
	
	kill OLNTB
	set STPG=1
	set %ProcessMode=2

	if IO'=$I set %ProcessMode=4 do OPEN^SCAIO

	set %REPEAT=IOSL-14
	set %MODS=(%PG-4)*(%REPEAT+1)
	if %REPEAT*(%PG-3)>CNT set %REPEAT=CNT-%MODS+1

	set SID="LNMDLNF1"

	// Overdraft Option
	if ln.odo=4 set SID="LNMDLNF3"
	
	set ln.cid=0
	set CID=ln.CID

	do VLOD(.fLNCPTS,.ln,SID)
	
        do DRV^USID(%ProcessMode,SID,.fLNCPTS,.ln)
	
	quit

ERR	//
	type public Boolean ER
	type public String VFMQ
	
	set ER=1 do ^UTLERR
	set VFMQ="Q"
	quit


VER //
	type public String %TAB
	
	kill %TAB
	quit

T	// Load available loan product types
	type public Number TY
	type public String I
	type String DES,T
	
	set I(3)="TY("
	if TY.exists() quit
	set T=""

	type ResultSet rs=Db.select("TYPE","LN")
	while rs.next() do {
		set T=rs.getCol("TYPE")
		type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:T",1)
		set DES=prodctl.des
		set TY(T)=DES
		}

	quit



P	// Check for interest method only
	type public Boolean ER
	type public String X
	type String ET
	
	if X.isNull() quit

	type RecordAOAMO aoamo=Db.getRecord("AOAMO","TYP='PTS',PAYEE=1,PLAN=:X",1)
	if aoamo.fmet'=0 do {
		set ER=1 
		set ET="INVLDNFMET" 
		do ^UTLERR
		}

	quit


VLOD(RecordLNCYCPTS fLNCPTS,RecordLN ln,SID)	//

	type public Number CID,ZGCD,ZGFD,ZXNETBAL
	
	if SID="LNMDLNF1" do {
		if Db.isDefined("LNAMOAO","CID=:CID,TYP='PTS'") do {
			type RecordLNAMOAO lnamoao=Db.getRecord("LNAMOAO","CID=:CID,TYP='PTS'",1)

			set fLNCPTS=lnamoao.copy()
							
			set ZXNETBAL=ln.amtreq-fLNCPTS.amt

			set ZGFD=ln.orgfa+ln.comfa+ln.aprapp+ln.aprapp1

			set ZGCD=ln.comfa+ln.orgfa+ln.aprapp+ln.aprapp1-fLNCPTS.amt
			}
		else  do {
			set fLNCPTS=Db.getRecord("LNCYCPTS","CID=:CID,TYP='TYP'",1)
			set ZXNETBAL=fLNCPTS.xnetbal
			set ZGFD=fLNCPTS.gfd
			set ZGCD=fLNCPTS.gcd
			}
		}

	if SID="LNMDLNF3" do {
		set fLNCPTS=Db.getRecord("LNCYCPTS","CID=:CID,TYP='TYP'",1)
		}

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60477^65449^Pat Kelly^9396"	// Signature - LTD^TIME^USER^SIZE
