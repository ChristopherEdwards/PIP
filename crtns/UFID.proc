UFID(String FEEPLN, Date %EffectiveDate)
 	/*
 	Utility Fee Plan Identification
 
 	---- Comments --------------------------------------------------------
 
	CALLED BY: SRVCMP*
	
	DESC:  	This routine will return the program name for the
		service fee plan and set up the program sequence
		in the top level of ^FEEPGM.
	
	Arguments:	
		. FEEPLN		Fee plan
		. %Effective Date	Effective Date
	
	Returns:	
		. $$			Program name	TYP=T

	---- Revision History --------------------------------------------------
	
	05/15/06 - RussellDS - CR21296
		   Changed to use cache array instead of %CACHE, which is
		   reserved for PSL record objects.
		   
		   Cleaned up minor areas related to PSL warnings.
	
	08/24/05 - RussellDS - CR16911
		   Cleaned up PSL warnings.
		   
		   Removed old revision history.

	------------------------------------------------------------------------
	*/
	
	type Number I, INST, LENGTH, SEQ
	type String PGM, PGMTYP

	/* Determine if there is a program name for this plan for this
	effective date.  If there is, then return that name. */

	if FEEPLN.get().isNull() ! %EffectiveDate.get().isNull() quit ""
	set PGMTYP = "FEEPGM"

	type RecordFEEPGM feepgm = Db.getRecord("FEEPGM", "PLAN=:FEEPLN,EFD=:%EffectiveDate", 1)
	if (feepgm.getMode() > 0) quit feepgm.pgm

	/* This effective date has not been compiled before.  Determine the
	next routine name to use.  The name of the routine is comprised
	of the string "F" followed by a 2 character hex translation
	of the instution number.  This is then followed by a five digit
	sequential number. The last sequential number used is stored in
	in  ^FEEPGM("FEEPLN"). */

	type RecordFEEPGMSQ feepgmsq = Db.getRecord("FEEPGMSQ", "PGMTYP=:PGMTYP", 1)
	if (feepgmsq.getMode() > 0) set SEQ = feepgmsq.seq + 1
	else  set SEQ = 1

	for I = {String}SEQ.length() + 1:1:5 set SEQ = "0"_SEQ

	set INST = CUVAR.SBINSTNO

	set INST = $$DECHEX^%ZHEX(INST)
	set LENGTH = {String}INST.length()
	if (LENGTH = 1) set INST = "0"_INST
	else  if (LENGTH > 2) set INST = {String}INST.extract(LENGTH - 1, LENGTH)
	set PGM = "F"_INST_SEQ

	// Store the highest program sequence to be used for next pgm name
	set feepgmsq.seq = SEQ
	do feepgmsq.save()

	set feepgm.pgm = PGM
	do feepgm.save()

	quit PGM


public FEEPGM(String FEEPLN,		// Service fee plan [*]
	      Date %EffectiveDate)	// Effective date [*]
	/*
	Get fee program from table FEEPGM
	
	Determine if there is a program name for this plan for this
	effective date.  If there is, then return that name. If there is
	determined.  The first entry will be the date which is less than or
	equal to the value of EFD - the entry for which EFD would apply.
	
	Argument notes:

		. FEEPLN
			The service fee plan for which compiled program names
	            	are to be determined.

		. %EffectiveDate
			The beginning date for which program names are to be
	                determined.  The first entry will be the date which
	                is less than or equal to the value of EFD - the entry
	                for which EFD would apply.

	Returns:
		. $$	The name of the service fee compiled routine
	                from the FEEPGM table.

	Example:
		S PGM=$$FEEPGM^UFID(FEEPLN,EFD)
	*/
	
	type public String cache()
	
	type Date SRVDT
	type String FEEPGM
	
	// Get first date less than or equal to effective date
	type ResultSet rs = Db.select("FEEDT", "FEEPLN", "PLAN = :FEEPLN AND FEEDT <= :%EffectiveDate", "FEEDT DESC")

	if rs.isEmpty() quit ""
	
	if rs.next() set SRVDT = rs.getCol("FEEDT")
	
	// Build cache for all program names for the service plan starting
	// from the effective date (or next earliest date) and forward
	if 'cache("UFID", FEEPLN, SRVDT).exists() do {
	
		type ResultSet rs = Db.select("EFD,PGM", "FEEPGM", "PLAN=:FEEPLN AND EFD >= :SRVDT")
		
		while rs.next() set cache("UFID", FEEPLN, rs.getCol("EFD")) = rs.getCol("PGM")
	}

	set FEEPGM = cache("UFID", FEEPLN, SRVDT).get()

	quit FEEPGM

vSIG()	quit "60401^67471^Dan Russell^3758"	// Signature - LTD^TIME^USER^SIZE
