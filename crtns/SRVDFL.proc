SRVDFL(RecordSRVD srvd, String vpar, Boolean vparNorm) // SRVD - Service Fee Detail Data Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:23 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (14)             11/22/2003
	// Journal File Definition (3)                 12/25/2006
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = srvd.getMode()                        // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(srvd,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(srvd,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("CID").exists()!vx("PLTP").exists()!vx("SCND").exists()!vx("FEECAT").exists()!vx("FEETYP").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("SRVD",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("SRVD","CID = :srvd.cid and PLTP = :srvd.pltp and SCND = :srvd.scnd and FEECAT = :srvd.feecat and FEETYP = :srvd.feetyp") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String CID
	type public String PLTP
	type public String SCND
	type public String FEECAT
	type public String FEETYP

	type RecordSRVD srvd = Db.getRecord("SRVD","CID=:CID,PLTP=:PLTP,SCND=:SCND,FEECAT=:FEECAT,FEETYP=:FEETYP")
	if (%ProcessMode = 2) do {
		do srvd.setMode(2)

		do SRVDFL(srvd,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordSRVD srvd

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("SRVD","CID = :srvd.cid and PLTP = :srvd.pltp and SCND = :srvd.scnd and FEECAT = :srvd.feecat and FEETYP = :srvd.feetyp") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(srvd))  S ^SRV(vobj(srvd,-3),vobj(srvd,-4),vobj(srvd,-5),vobj(srvd,-6),vobj(srvd,-7))=vobj(srvd)
		#ENDBYPASS

		if vpar["/JOURNAL/" do VJOURNAL(.srvd)                // Create journal files
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordSRVD srvd

	if vpar["/JOURNAL/" do VJOURNAL(.srvd)                 // Create journal entries

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	ZWI ^SRV(vobj(srvd,-3),vobj(srvd,-4),vobj(srvd,-5),vobj(srvd,-6),vobj(srvd,-7)) // Delete Record
	quit


vreqn // Validate required data items

	type public RecordSRVD srvd

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordSRVD srvd

	if srvd.cid.isNull() do vreqerr("CID") quit
	if srvd.pltp.isNull() do vreqerr("PLTP") quit
	if srvd.scnd.isNull() do vreqerr("SCND") quit
	if srvd.feecat.isNull() do vreqerr("FEECAT") quit
	if srvd.feetyp.isNull() do vreqerr("FEETYP") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("SRVD","MSG",1767,"SRVD."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordSRVD srvd

	set X = srvd.cid if 'X.isNull(),'Db.isDefined("ACN","X") set vRM = $$^MSG(1485,X) do vdderr("CID", vRM) quit
	set X = srvd.pltp if 'X.isNull(),'Db.isDefined("STBLPLTP","X") set vRM = $$^MSG(1485,X) do vdderr("PLTP", vRM) quit
	set X = srvd.scnd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("SCND", vRM) quit
	set X = srvd.feecat if 'X.isNull(),'Db.isDefined("STBLFEEFC","X") set vRM = $$^MSG(1485,X) do vdderr("FEECAT", vRM) quit
	if srvd.feetyp.length()>8 set vRM = $$^MSG(1076,8) do vdderr("FEETYP", vRM) quit
	set X = srvd.chgopt if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("CHGOPT", vRM) quit
	set X = srvd.srvadj if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("SRVADJ", vRM) quit
	set X = srvd.srvcnta if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("SRVCNTA", vRM) quit
	set X = srvd.srvcntd if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("SRVCNTD", vRM) quit
	set X = srvd.srvcsta if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SRVD.SRVCSTA"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = srvd.srvcstd if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SRVD.SRVCSTD"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = srvd.srvdlr if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("SRVDLR", vRM) quit
	set X = srvd.srvdly if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SRVD.SRVDLY"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = srvd.srvtamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SRVD.SRVTAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("SRVD","MSG",979,"SRVD."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VJOURNAL(RecordSRVD srvd)	//SRVD Journal file entries

	type Public Date %EffectiveDate
	type Public String %TSRC,vpar,vx()
	type String TSRC,vdi,vdx()

	if %TSRC.get().isNull() set TSRC="O"
	else  set TSRC=%TSRC

	if %ProcessMode=0 do {
		if TSRC="O" do {
			if 'EFD.get() do {
				do vj2(.srvd)	// Mode=I Tran=O EFD=N Seq=1 JRNID=SRVD_HIST1
				do vj3(.srvd)	// Mode=I Tran=O EFD=N Seq=1 JRNID=SRVD_HIST2
				}
			}
		}
	else  if %ProcessMode=1 do {
		if TSRC="O" do {
			if 'EFD.get() do {
				quit:'vx.data()
				for vdi="SRVTAMT","SRVADJ" if vx(vdi).data() do vj1(.srvd,vdi)	// Mode=U Tran=O EFD=N Seq=1 JRNID=SRVD_HIST
				}
			}
		}

	quit


vj1(RecordSRVD srvd,String vdi)	// SRVD_HIST  Table HIST  SRVTAMT,SRVADJ history

	type Public String vx(),%IDENT,%UID,TJD,TLO,vfmtable
	type String v1,vlastkey

	type String vold,vnew,vfmtable

	set vold=vx(vdi).piece("|",1)
	set vnew=vx(vdi).piece("|",2)
	set vfmtable=vx(vdi).piece("|",11)

	set v1=srvd.cid
	set vlastkey=Db.nextVal("HIST","CID=:v1")
	type RecordHIST hist=Db.getRecord("HIST","CID=:v1,TSEQ=:vlastkey",1)
	set hist.ident=%IDENT
	set hist.tcmt=$$TCMTFM^ACNFUNCS(srvd.cid_","_srvd.pltp_","_srvd.scnd_","_srvd.feecat_","_srvd.feetyp,"SRVD",vdi,vold,vnew,"",$$^MSG(1781,srvd.feetyp),vfmtable)
	set hist.tjd=TJD
	set hist.tlo=TLO
	set hist.uid=%UID

	do hist.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj2(RecordSRVD srvd)	// SRVD_HIST1  Table HIST  SRVADJ history

	if srvd.srvadj'=""
	else  quit

	type Public String %UID,TJD,TLO
	type String v1,vlastkey
	set v1=srvd.cid
	set vlastkey=Db.nextVal("HIST","CID=:v1")
	type RecordHIST hist=Db.getRecord("HIST","CID=:v1,TSEQ=:vlastkey",1)
	set hist.tcmt=$$TCMTFM^ACNFUNCS(srvd.cid_","_srvd.pltp_","_srvd.scnd_","_srvd.feecat_","_srvd.feetyp,"SRVD","SRVADJ","",+srvd.srvadj,"",$$^MSG(1781,srvd.feetyp))
	set hist.tjd=TJD
	set hist.tlo=TLO
	set hist.uid=%UID

	do hist.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj3(RecordSRVD srvd)	// SRVD_HIST2  Table HIST  SRVTAMT history

	if srvd.srvtamt'=""
	else  quit

	type Public String %UID,TJD,TLO
	type String v1,vlastkey
	set v1=srvd.cid
	set vlastkey=Db.nextVal("HIST","CID=:v1")
	type RecordHIST hist=Db.getRecord("HIST","CID=:v1,TSEQ=:vlastkey",1)
	set hist.tcmt=$$TCMTFM^ACNFUNCS(srvd.cid_","_srvd.pltp_","_srvd.scnd_","_srvd.feecat_","_srvd.feetyp,"SRVD","SRVTAMT","",+srvd.srvtamt,"",$$^MSG(1781,srvd.feetyp))
	set hist.tjd=TJD
	set hist.tlo=TLO
	set hist.uid=%UID

	do hist.save("/NOVALFK/NOVALDD/NOVALRI")

	quit



vkchged // Access key changed

	type public RecordSRVD srvd

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("CID").exists() set vux("CID") = vx("CID")
	if vx("PLTP").exists() set vux("PLTP") = vx("PLTP")
	if vx("SCND").exists() set vux("SCND") = vx("SCND")
	if vx("FEECAT").exists() set vux("FEECAT") = vx("FEECAT")
	if vx("FEETYP").exists() set vux("FEETYP") = vx("FEETYP")
	do vkey(1) set voldkey = srvd.cid_","_srvd.pltp_","_srvd.scnd_","_srvd.feecat_","_srvd.feetyp // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = srvd.cid_","_srvd.pltp_","_srvd.scnd_","_srvd.feecat_","_srvd.feetyp // Copy new keys into object
	type RecordSRVD vnewrec = srvd.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("SRVD",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordSRVD srvd

	if vux("CID").exists() set srvd.cid = vux("CID").piece("|",i)
	if vux("PLTP").exists() set srvd.pltp = vux("PLTP").piece("|",i)
	if vux("SCND").exists() set srvd.scnd = vux("SCND").piece("|",i)
	if vux("FEECAT").exists() set srvd.feecat = vux("FEECAT").piece("|",i)
	if vux("FEETYP").exists() set srvd.feetyp = vux("FEETYP").piece("|",i)
	quit
