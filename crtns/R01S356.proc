R01S356	// SCA369C - FDIC Schedule RC-C Report (Memoranda)
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:48 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DTL,TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DTL="N"

	set RID="SCA369C"
	set RN="FDIC Schedule RC-C Report (Memoranda)"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DTL")="|1|||||||L|Print Detail|||||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,DTL#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DTL,TJD
	type public Number DTL
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,RID,RN,VL,VLOF,VRF(),VSTATS(),ZAMT1,ZAMT2,ZAMT3,ZHD1,ZHD2,ZLN(),vCOL,vHDG,vc1,vc2,vc3,vovc1,vovc2,vovc3,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA369C",RN="FDIC Schedule RC-C Report (Memoranda)"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA369C","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=57				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNFDC1]CID#119#12"

	// Initialize variables
	set (vc1,vc2,vc3)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNFDC1.TJD,LNFDC1.RCCL,LNFDC1.CID","LNFDC1,LNFDC","LNFDC1.TJD=:TJD AND LNFDC1.RCCL>29","LNFDC1.TJD,LNFDC1.RCCL,LNFDC1.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3
	set vc1=V.piece($C(9),1)			// LNFDC1.TJD
	set vc2=V.piece($C(9),2)			// LNFDC1.RCCL
	set vc3=V.piece($C(9),3)			// LNFDC1.CID
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public Boolean DTL
 type Public String ZHD1,ZHD2,ZLN()
 
 set ZHD1="",ZHD2="" 
 if DTL.get() set ZHD1="Account",ZHD2="Number"

 set ZLN(37)="Loans and leases restructured and in compliance with|"
 set ZLN(37)=ZLN(37)_"modified terms|1616"

 set ZLN(38)="Maturity and repricing data for loans and leases|"_$CHAR(1)_"|"
 set ZLN(38)=ZLN(38)_"  Closed-end loans by first liens on 1-4 family|"
 set ZLN(38)=ZLN(38)_"  residential properties with a remaining maturity|"
 set ZLN(38)=ZLN(38)_"  or next repricing date of:|"_$CHAR(1)_"|"
 set ZLN(38)=ZLN(38)_"          Three months or less|A564"

 set ZLN(39)="          Over three months through 12 months|A565"
 set ZLN(40)="          Over one year through three years|A566"
 set ZLN(41)="          Over three years through five years|A567"
 set ZLN(42)="          Over five years through 15 years|A568"
 set ZLN(43)="          Over 15 years|A569"

 set ZLN(44)="   All Loans and leases other than closed-end loans|"
 set ZLN(44)=ZLN(44)_"   secured by first liens on 1-4 family residential|"
 set ZLN(44)=ZLN(44)_"   properties with a remaining maturity or next|"
 set ZLN(44)=ZLN(44)_"   repricing date of:|"_$CHAR(1)_"|"
 set ZLN(44)=ZLN(44)_"          Three months or less|A570"

 set ZLN(45)="          Over three months through 12 months|A571"
 set ZLN(46)="          Over one year through three years|A572"
 set ZLN(47)="          Over three years through five years|A573"
 set ZLN(48)="          Over five years through 15 years|A574"
 set ZLN(49)="          Over 15 years|A575"

 set ZLN(50)="Loans and leases with remaining maturity|"
 set ZLN(50)=ZLN(50)_"of one year or less|A247"

 set ZLN(53)="Loans to finance commercial real estate, construction,|"
 set ZLN(53)=ZLN(53)_"and land development (not secured by real estate)|2746"

 set ZLN(55)="Adjustable rate closed-end loans secured by first liens on 1-4|"
 set ZLN(55)=ZLN(55)_"family residential properties|5370"

 set ZLN(56)="Loans secured by real estate to non-US addresses|B837"
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=DTL,TJD
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL2	// Detail
	type public String %TIM,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,DTL,IOSL,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZAMT1,ZAMT2,ZAMT3,ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+9>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC1,1,55) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC2,1,55)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC3,1,55)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC4,1,55)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC5,1,55)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC6,1,55)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC7,1,55)
	set VL=VL_$J("",58-VL.length())_$E(DESC8,1,4)
	set VL=VL_$J("",65-VL.length())_$J($FN(ZAMT1,",",2),15)
	set VL=VL_$J("",85-VL.length())_$J($FN(ZAMT2,",",0),12)
	set VL=VL_$J("",101-VL.length())_$J($FN(ZAMT3,",",0),12)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC9,1,1)
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL3	// Detail
	type public String %TIM,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,DTL,IOSL,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZAMT1,ZAMT2,ZAMT3,ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc3,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,12) set VL="                                                                                                                      "_V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,DTL,RID,RN,TJD,VL,ZAMT1,ZAMT2,ZAMT3,ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="                                                "_"(Billion, Million, Thousand)"
	do VOM
	set VL="" do VOM
	set VL="                                                         "_"RCON      Uncharged-Off         Unearned         Loan"
	set VL=VL_$J("",123-VL.length())_$E(ZHD1,1,7)
	do VOM
	set VL="                                                        "_"Number   Principal Balance       Interest      Book Value"
	set VL=VL_$J("",124-VL.length())_$E(ZHD2,1,6)
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC1

	type public String vc2
 type Public Boolean DTL
 type Public Date TJD
 type Public Number RCCL,ZAMT1,ZAMT2,ZAMT3
 type Public String DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,ZLN()
 
 type Number L
 type String X

 set RCCL=vc2
 type RecordLNFDC lnfdc = Db.getRecord("LNFDC","TJD=:TJD,RCCL=:RCCL")

 set ZAMT1=lnfdc.tbal
 set ZAMT2=lnfdc.tunin
 set ZAMT3=lnfdc.tbalnet

 set X=ZLN(RCCL),L=X.length("|")

 set X="||||||||".extract(1,8-L)_X
 set DESC1=X.piece("|",1),DESC2=X.piece("|",2),DESC3=X.piece("|",3)
 set DESC4=X.piece("|",4),DESC5=X.piece("|",5),DESC6=X.piece("|",6)
 set DESC7=X.piece("|",7),DESC8=X.piece("|",8),DESC9=""

 if DTL.get() set DESC9=$CHAR(1)
	quit

VP2	// Column pre-processor - [SYSDEV,LNFDC1]CID

	type public String vc3
 type Public Boolean DTL
 type Public String V,VL
 
 if 'DTL!(vc3=0) set (V,VL)=""
 
	quit
