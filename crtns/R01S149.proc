R01S149	// SCA081 - Loan Property Code Summary (2)
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:43 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DRCN,JOB
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA081"
	set RN="Loan Property Code Summary (2)"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DRCN,JOB
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %NOCLOSE,%NOOPEN,%TIM,COLCD,CONAM,DONE,GRP,RID,RN,TB1,TB10,TB11,TB12,TB13,TB14,TB15,TB16,TB17,TB18,TB19,TB2,TB20,TB3,TB4,TB5,TB6,TB7,TB8,TB9,TBAL,TN1,TN10,TN11,TN12,TN13,TN14,TN15,TN16,TN17,TN18,TN19,TN2,TN20,TN3,TN4,TN5,TN6,TN7,TN8,TN9,TNUM,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133,vc134,vc135,vc136
	type String vc137,vc138,vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc17,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc202,vc203,vc204,vc205,vc206,vc207,vc208,vc209,vc21,vc210,vc211,vc212,vc213,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34
	type String vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA081",RN="Loan Property Code Summary (2)"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA081","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="LNDELQ2B.JOB=:JOB"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Loan Property Code Summary (2)"
		set VBNRINFO("PGM")="R01S149"
		set VBNRINFO("RID")="SCA081"
		set VBNRINFO("TABLES")="LNDELQ2B,LNDELT1,LNDELT2,LNDELT3,LNDELQ2B1"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNDELQ2B]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNDELQ2B]2"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNDELQ2B]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNDELQ2B]TYPE"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNDELQ2B]COLCD"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LNDELQ2B]PRPCD"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vc100)=""
	set (vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138,vc139,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc200)=""
	set (vc201,vc202,vc203,vc204,vc205,vc206,vc207,vc208,vc209,vc210,vc211,vc212,vc213)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNDELQ2B.JOB,LNDELQ2B.GRP,LNDELQ2B.TYPE,LNDELQ2B.COLCD,LNDELQ2B.PRPCD,LNDELT2.TB1,LNDELT2.TB2,LNDELT2.TB3,LNDELT2.TB4,LNDELT2.TN1,LNDELT2.TN2,LNDELT2.TN3,LNDELT2.TN4,LNDELT2.TB5,LNDELT2.TB6,LNDELT2.TB7,LNDELT2.TB8,LNDELT2.TN5,LNDELT2.TN6,LNDELT2.TN7,LNDELT2.TN8,LNDELT2.TB9,LNDELT2.TB10,LNDELT2.TB11,LNDELT2.TB12,LNDELT2.TN9,LNDELT2.TN10,LNDELT2.TN11,LNDELT2.TN12,LNDELT2.TB13,LNDELT2.TB14,LNDELT2.TB15,LNDELT2.TB16,LNDELT2.TN13,LNDELT2.TN14,LNDELT2.TN15,LNDELT2.TN16,LNDELT2.TB17,LNDELT2.TB18,LNDELT2.TB19,LNDELT2.TB20,LNDELT2.TN17,LNDELT2.TN18,LNDELT2.TN19,LNDELT2.TN20,LNDELT2.TBAL,LNDELT2.TNUM,LNDELQ2B.BD1,LNDELQ2B1.BP1,LNDELQ2B.BD2,LNDELQ2B1.BP2,LNDELQ2B.BD3,LNDELQ2B1.BP3,LNDELQ2B.BD4,LNDELQ2B1.BP4,LNDELQ2B.NN1,LNDELQ2B1.NP1,LNDELQ2B.NN2,LNDELQ2B1.NP2,LNDELQ2B.NN3,LNDELQ2B1.NP3,LNDELQ2B.NN4,LNDELQ2B1.NP4,LNDELQ2B.BD5,LNDELQ2B1.BP5,LNDELQ2B.BD6,LNDELQ2B1.BP6,LNDELQ2B.BD7,LNDELQ2B1.BP7,LNDELQ2B.BD8,LNDELQ2B1.BP8,LNDELQ2B.NN5,LNDELQ2B1.NP5,LNDELQ2B.NN6,LNDELQ2B1.NP6,LNDELQ2B.NN7,LNDELQ2B1.NP7,LNDELQ2B.NN8,LNDELQ2B1.NP8,LNDELQ2B.BD9,LNDELQ2B1.BP9,LNDELQ2B.BD10,LNDELQ2B1.BP10,LNDELQ2B.BD11,LNDELQ2B1.BP11,LNDELQ2B.BD12,LNDELQ2B1.BP12,LNDELQ2B.NN9,LNDELQ2B1.NP9,LNDELQ2B.NN10,LNDELQ2B1.NP10,LNDELQ2B.NN11,LNDELQ2B1.NP11,LNDELQ2B.NN12,LNDELQ2B1.NP12,LNDELQ2B.BD13,LNDELQ2B1.BP13,LNDELQ2B.BD14,LNDELQ2B1.BP14,LNDELQ2B.BD15,LNDELQ2B1.BP15,LNDELQ2B.BD16,LNDELQ2B1.BP16,LNDELQ2B.NN13,LNDELQ2B1.NP13,LNDELQ2B.NN14,LNDELQ2B1.NP14,LNDELQ2B.NN15,LNDELQ2B1.NP15,LNDELQ2B.NN16,LNDELQ2B1.NP16,LNDELQ2B.BD17,LNDELQ2B1.BP17,LNDELQ2B.BD18,LNDELQ2B1.BP18,LNDELQ2B.BD19,LNDELQ2B1.BP19,LNDELQ2B.BD20,LNDELQ2B1.BP20,LNDELQ2B.NN17,LNDELQ2B1.NP17,LNDELQ2B.NN18,LNDELQ2B1.NP18,LNDELQ2B.NN19,LNDELQ2B1.NP19,LNDELQ2B.NN20,LNDELQ2B1.NP20,LNDELQ2B.TOTBAL,LNDELQ2B.TOTNUM,LNDELT3.TB1,LNDELT3.TB2,LNDELT3.TB3,LNDELT3.TB4,LNDELT3.TN1,LNDELT3.TN2,LNDELT3.TN3,LNDELT3.TN4,LNDELT3.TB5,LNDELT3.TB6,LNDELT3.TB7,LNDELT3.TB8,LNDELT3.TN5,LNDELT3.TN6,LNDELT3.TN7,LNDELT3.TN8,LNDELT3.TB9,LNDELT3.TB10,LNDELT3.TB11,LNDELT3.TB12,LNDELT3.TN9,LNDELT3.TN10,LNDELT3.TN11,LNDELT3.TN12,LNDELT3.TB13,LNDELT3.TB14,LNDELT3.TB15,LNDELT3.TB16,LNDELT3.TN13,LNDELT3.TN14,LNDELT3.TN15,LNDELT3.TN16,LNDELT3.TB17,LNDELT3.TB18,LNDELT3.TB19,LNDELT3.TB20,LNDELT3.TN17,LNDELT3.TN18,LNDELT3.TN19,LNDELT3.TN20,LNDELT3.TBAL,LNDELT3.TNUM,LNDELT1.TB1,LNDELT1.TB2,LNDELT1.TB3,LNDELT1.TB4,LNDELT1.TN1,LNDELT1.TN2,LNDELT1.TN3,LNDELT1.TN4,LNDELT1.TB5,LNDELT1.TB6,LNDELT1.TB7,LNDELT1.TB8,LNDELT1.TN5,LNDELT1.TN6,LNDELT1.TN7,LNDELT1.TN8,LNDELT1.TB9,LNDELT1.TB10,LNDELT1.TB11,LNDELT1.TB12,LNDELT1.TN9,LNDELT1.TN10,LNDELT1.TN11,LNDELT1.TN12,LNDELT1.TB13,LNDELT1.TB14,LNDELT1.TB15,LNDELT1.TB16,LNDELT1.TN13,LNDELT1.TN14,LNDELT1.TN15,LNDELT1.TN16,LNDELT1.TB17,LNDELT1.TB18,LNDELT1.TB19,LNDELT1.TB20,LNDELT1.TN17,LNDELT1.TN18,LNDELT1.TN19,LNDELT1.TN20,LNDELT1.TBAL,LNDELT1.TNUM","LNDELQ2B,LNDELT1,LNDELT2,LNDELT3,LNDELQ2B1","LNDELQ2B.JOB=:JOB","LNDELQ2B.JOB,LNDELQ2B.GRP,LNDELQ2B.TYPE,LNDELQ2B.COLCD,LNDELQ2B.PRPCD","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vc100
	type Public String vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138,vc139,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc200
	type Public String vc201,vc202,vc203,vc204,vc205,vc206,vc207,vc208,vc209,vc210,vc211,vc212,vc213
	set vc1=V.piece($C(9),1)			// LNDELQ2B.JOB
	set vc2=V.piece($C(9),2)			// LNDELQ2B.GRP
	set vc3=V.piece($C(9),3)			// LNDELQ2B.TYPE
	set vc4=V.piece($C(9),4)			// LNDELQ2B.COLCD
	set vc5=V.piece($C(9),5)			// LNDELQ2B.PRPCD
	set vc6=V.piece($C(9),6)			// LNDELT2.TB1
	set vc7=V.piece($C(9),7)			// LNDELT2.TB2
	set vc8=V.piece($C(9),8)			// LNDELT2.TB3
	set vc9=V.piece($C(9),9)			// LNDELT2.TB4
	set vc10=V.piece($C(9),10)			// LNDELT2.TN1
	set vc11=V.piece($C(9),11)			// LNDELT2.TN2
	set vc12=V.piece($C(9),12)			// LNDELT2.TN3
	set vc13=V.piece($C(9),13)			// LNDELT2.TN4
	set vc14=V.piece($C(9),14)			// LNDELT2.TB5
	set vc15=V.piece($C(9),15)			// LNDELT2.TB6
	set vc16=V.piece($C(9),16)			// LNDELT2.TB7
	set vc17=V.piece($C(9),17)			// LNDELT2.TB8
	set vc18=V.piece($C(9),18)			// LNDELT2.TN5
	set vc19=V.piece($C(9),19)			// LNDELT2.TN6
	set vc20=V.piece($C(9),20)			// LNDELT2.TN7
	set vc21=V.piece($C(9),21)			// LNDELT2.TN8
	set vc22=V.piece($C(9),22)			// LNDELT2.TB9
	set vc23=V.piece($C(9),23)			// LNDELT2.TB10
	set vc24=V.piece($C(9),24)			// LNDELT2.TB11
	set vc25=V.piece($C(9),25)			// LNDELT2.TB12
	set vc26=V.piece($C(9),26)			// LNDELT2.TN9
	set vc27=V.piece($C(9),27)			// LNDELT2.TN10
	set vc28=V.piece($C(9),28)			// LNDELT2.TN11
	set vc29=V.piece($C(9),29)			// LNDELT2.TN12
	set vc30=V.piece($C(9),30)			// LNDELT2.TB13
	set vc31=V.piece($C(9),31)			// LNDELT2.TB14
	set vc32=V.piece($C(9),32)			// LNDELT2.TB15
	set vc33=V.piece($C(9),33)			// LNDELT2.TB16
	set vc34=V.piece($C(9),34)			// LNDELT2.TN13
	set vc35=V.piece($C(9),35)			// LNDELT2.TN14
	set vc36=V.piece($C(9),36)			// LNDELT2.TN15
	set vc37=V.piece($C(9),37)			// LNDELT2.TN16
	set vc38=V.piece($C(9),38)			// LNDELT2.TB17
	set vc39=V.piece($C(9),39)			// LNDELT2.TB18
	set vc40=V.piece($C(9),40)			// LNDELT2.TB19
	set vc41=V.piece($C(9),41)			// LNDELT2.TB20
	set vc42=V.piece($C(9),42)			// LNDELT2.TN17
	set vc43=V.piece($C(9),43)			// LNDELT2.TN18
	set vc44=V.piece($C(9),44)			// LNDELT2.TN19
	set vc45=V.piece($C(9),45)			// LNDELT2.TN20
	set vc46=V.piece($C(9),46)			// LNDELT2.TBAL
	set vc47=V.piece($C(9),47)			// LNDELT2.TNUM
	set vc48=V.piece($C(9),48)			// LNDELQ2B.BD1
	set vc49=V.piece($C(9),49)			// LNDELQ2B1.BP1
	set vc50=V.piece($C(9),50)			// LNDELQ2B.BD2
	set vc51=V.piece($C(9),51)			// LNDELQ2B1.BP2
	set vc52=V.piece($C(9),52)			// LNDELQ2B.BD3
	set vc53=V.piece($C(9),53)			// LNDELQ2B1.BP3
	set vc54=V.piece($C(9),54)			// LNDELQ2B.BD4
	set vc55=V.piece($C(9),55)			// LNDELQ2B1.BP4
	set vc56=V.piece($C(9),56)			// LNDELQ2B.NN1
	set vc57=V.piece($C(9),57)			// LNDELQ2B1.NP1
	set vc58=V.piece($C(9),58)			// LNDELQ2B.NN2
	set vc59=V.piece($C(9),59)			// LNDELQ2B1.NP2
	set vc60=V.piece($C(9),60)			// LNDELQ2B.NN3
	set vc61=V.piece($C(9),61)			// LNDELQ2B1.NP3
	set vc62=V.piece($C(9),62)			// LNDELQ2B.NN4
	set vc63=V.piece($C(9),63)			// LNDELQ2B1.NP4
	set vc64=V.piece($C(9),64)			// LNDELQ2B.BD5
	set vc65=V.piece($C(9),65)			// LNDELQ2B1.BP5
	set vc66=V.piece($C(9),66)			// LNDELQ2B.BD6
	set vc67=V.piece($C(9),67)			// LNDELQ2B1.BP6
	set vc68=V.piece($C(9),68)			// LNDELQ2B.BD7
	set vc69=V.piece($C(9),69)			// LNDELQ2B1.BP7
	set vc70=V.piece($C(9),70)			// LNDELQ2B.BD8
	set vc71=V.piece($C(9),71)			// LNDELQ2B1.BP8
	set vc72=V.piece($C(9),72)			// LNDELQ2B.NN5
	set vc73=V.piece($C(9),73)			// LNDELQ2B1.NP5
	set vc74=V.piece($C(9),74)			// LNDELQ2B.NN6
	set vc75=V.piece($C(9),75)			// LNDELQ2B1.NP6
	set vc76=V.piece($C(9),76)			// LNDELQ2B.NN7
	set vc77=V.piece($C(9),77)			// LNDELQ2B1.NP7
	set vc78=V.piece($C(9),78)			// LNDELQ2B.NN8
	set vc79=V.piece($C(9),79)			// LNDELQ2B1.NP8
	set vc80=V.piece($C(9),80)			// LNDELQ2B.BD9
	set vc81=V.piece($C(9),81)			// LNDELQ2B1.BP9
	set vc82=V.piece($C(9),82)			// LNDELQ2B.BD10
	set vc83=V.piece($C(9),83)			// LNDELQ2B1.BP10
	set vc84=V.piece($C(9),84)			// LNDELQ2B.BD11
	set vc85=V.piece($C(9),85)			// LNDELQ2B1.BP11
	set vc86=V.piece($C(9),86)			// LNDELQ2B.BD12
	set vc87=V.piece($C(9),87)			// LNDELQ2B1.BP12
	set vc88=V.piece($C(9),88)			// LNDELQ2B.NN9
	set vc89=V.piece($C(9),89)			// LNDELQ2B1.NP9
	set vc90=V.piece($C(9),90)			// LNDELQ2B.NN10
	set vc91=V.piece($C(9),91)			// LNDELQ2B1.NP10
	set vc92=V.piece($C(9),92)			// LNDELQ2B.NN11
	set vc93=V.piece($C(9),93)			// LNDELQ2B1.NP11
	set vc94=V.piece($C(9),94)			// LNDELQ2B.NN12
	set vc95=V.piece($C(9),95)			// LNDELQ2B1.NP12
	set vc96=V.piece($C(9),96)			// LNDELQ2B.BD13
	set vc97=V.piece($C(9),97)			// LNDELQ2B1.BP13
	set vc98=V.piece($C(9),98)			// LNDELQ2B.BD14
	set vc99=V.piece($C(9),99)			// LNDELQ2B1.BP14
	set vc100=V.piece($C(9),100)			// LNDELQ2B.BD15
	set vc101=V.piece($C(9),101)			// LNDELQ2B1.BP15
	set vc102=V.piece($C(9),102)			// LNDELQ2B.BD16
	set vc103=V.piece($C(9),103)			// LNDELQ2B1.BP16
	set vc104=V.piece($C(9),104)			// LNDELQ2B.NN13
	set vc105=V.piece($C(9),105)			// LNDELQ2B1.NP13
	set vc106=V.piece($C(9),106)			// LNDELQ2B.NN14
	set vc107=V.piece($C(9),107)			// LNDELQ2B1.NP14
	set vc108=V.piece($C(9),108)			// LNDELQ2B.NN15
	set vc109=V.piece($C(9),109)			// LNDELQ2B1.NP15
	set vc110=V.piece($C(9),110)			// LNDELQ2B.NN16
	set vc111=V.piece($C(9),111)			// LNDELQ2B1.NP16
	set vc112=V.piece($C(9),112)			// LNDELQ2B.BD17
	set vc113=V.piece($C(9),113)			// LNDELQ2B1.BP17
	set vc114=V.piece($C(9),114)			// LNDELQ2B.BD18
	set vc115=V.piece($C(9),115)			// LNDELQ2B1.BP18
	set vc116=V.piece($C(9),116)			// LNDELQ2B.BD19
	set vc117=V.piece($C(9),117)			// LNDELQ2B1.BP19
	set vc118=V.piece($C(9),118)			// LNDELQ2B.BD20
	set vc119=V.piece($C(9),119)			// LNDELQ2B1.BP20
	set vc120=V.piece($C(9),120)			// LNDELQ2B.NN17
	set vc121=V.piece($C(9),121)			// LNDELQ2B1.NP17
	set vc122=V.piece($C(9),122)			// LNDELQ2B.NN18
	set vc123=V.piece($C(9),123)			// LNDELQ2B1.NP18
	set vc124=V.piece($C(9),124)			// LNDELQ2B.NN19
	set vc125=V.piece($C(9),125)			// LNDELQ2B1.NP19
	set vc126=V.piece($C(9),126)			// LNDELQ2B.NN20
	set vc127=V.piece($C(9),127)			// LNDELQ2B1.NP20
	set vc128=V.piece($C(9),128)			// LNDELQ2B.TOTBAL
	set vc129=V.piece($C(9),129)			// LNDELQ2B.TOTNUM
	set vc130=V.piece($C(9),130)			// LNDELT3.TB1
	set vc131=V.piece($C(9),131)			// LNDELT3.TB2
	set vc132=V.piece($C(9),132)			// LNDELT3.TB3
	set vc133=V.piece($C(9),133)			// LNDELT3.TB4
	set vc134=V.piece($C(9),134)			// LNDELT3.TN1
	set vc135=V.piece($C(9),135)			// LNDELT3.TN2
	set vc136=V.piece($C(9),136)			// LNDELT3.TN3
	set vc137=V.piece($C(9),137)			// LNDELT3.TN4
	set vc138=V.piece($C(9),138)			// LNDELT3.TB5
	set vc139=V.piece($C(9),139)			// LNDELT3.TB6
	set vc140=V.piece($C(9),140)			// LNDELT3.TB7
	set vc141=V.piece($C(9),141)			// LNDELT3.TB8
	set vc142=V.piece($C(9),142)			// LNDELT3.TN5
	set vc143=V.piece($C(9),143)			// LNDELT3.TN6
	set vc144=V.piece($C(9),144)			// LNDELT3.TN7
	set vc145=V.piece($C(9),145)			// LNDELT3.TN8
	set vc146=V.piece($C(9),146)			// LNDELT3.TB9
	set vc147=V.piece($C(9),147)			// LNDELT3.TB10
	set vc148=V.piece($C(9),148)			// LNDELT3.TB11
	set vc149=V.piece($C(9),149)			// LNDELT3.TB12
	set vc150=V.piece($C(9),150)			// LNDELT3.TN9
	set vc151=V.piece($C(9),151)			// LNDELT3.TN10
	set vc152=V.piece($C(9),152)			// LNDELT3.TN11
	set vc153=V.piece($C(9),153)			// LNDELT3.TN12
	set vc154=V.piece($C(9),154)			// LNDELT3.TB13
	set vc155=V.piece($C(9),155)			// LNDELT3.TB14
	set vc156=V.piece($C(9),156)			// LNDELT3.TB15
	set vc157=V.piece($C(9),157)			// LNDELT3.TB16
	set vc158=V.piece($C(9),158)			// LNDELT3.TN13
	set vc159=V.piece($C(9),159)			// LNDELT3.TN14
	set vc160=V.piece($C(9),160)			// LNDELT3.TN15
	set vc161=V.piece($C(9),161)			// LNDELT3.TN16
	set vc162=V.piece($C(9),162)			// LNDELT3.TB17
	set vc163=V.piece($C(9),163)			// LNDELT3.TB18
	set vc164=V.piece($C(9),164)			// LNDELT3.TB19
	set vc165=V.piece($C(9),165)			// LNDELT3.TB20
	set vc166=V.piece($C(9),166)			// LNDELT3.TN17
	set vc167=V.piece($C(9),167)			// LNDELT3.TN18
	set vc168=V.piece($C(9),168)			// LNDELT3.TN19
	set vc169=V.piece($C(9),169)			// LNDELT3.TN20
	set vc170=V.piece($C(9),170)			// LNDELT3.TBAL
	set vc171=V.piece($C(9),171)			// LNDELT3.TNUM
	set vc172=V.piece($C(9),172)			// LNDELT1.TB1
	set vc173=V.piece($C(9),173)			// LNDELT1.TB2
	set vc174=V.piece($C(9),174)			// LNDELT1.TB3
	set vc175=V.piece($C(9),175)			// LNDELT1.TB4
	set vc176=V.piece($C(9),176)			// LNDELT1.TN1
	set vc177=V.piece($C(9),177)			// LNDELT1.TN2
	set vc178=V.piece($C(9),178)			// LNDELT1.TN3
	set vc179=V.piece($C(9),179)			// LNDELT1.TN4
	set vc180=V.piece($C(9),180)			// LNDELT1.TB5
	set vc181=V.piece($C(9),181)			// LNDELT1.TB6
	set vc182=V.piece($C(9),182)			// LNDELT1.TB7
	set vc183=V.piece($C(9),183)			// LNDELT1.TB8
	set vc184=V.piece($C(9),184)			// LNDELT1.TN5
	set vc185=V.piece($C(9),185)			// LNDELT1.TN6
	set vc186=V.piece($C(9),186)			// LNDELT1.TN7
	set vc187=V.piece($C(9),187)			// LNDELT1.TN8
	set vc188=V.piece($C(9),188)			// LNDELT1.TB9
	set vc189=V.piece($C(9),189)			// LNDELT1.TB10
	set vc190=V.piece($C(9),190)			// LNDELT1.TB11
	set vc191=V.piece($C(9),191)			// LNDELT1.TB12
	set vc192=V.piece($C(9),192)			// LNDELT1.TN9
	set vc193=V.piece($C(9),193)			// LNDELT1.TN10
	set vc194=V.piece($C(9),194)			// LNDELT1.TN11
	set vc195=V.piece($C(9),195)			// LNDELT1.TN12
	set vc196=V.piece($C(9),196)			// LNDELT1.TB13
	set vc197=V.piece($C(9),197)			// LNDELT1.TB14
	set vc198=V.piece($C(9),198)			// LNDELT1.TB15
	set vc199=V.piece($C(9),199)			// LNDELT1.TB16
	set vc200=V.piece($C(9),200)			// LNDELT1.TN13
	set vc201=V.piece($C(9),201)			// LNDELT1.TN14
	set vc202=V.piece($C(9),202)			// LNDELT1.TN15
	set vc203=V.piece($C(9),203)			// LNDELT1.TN16
	set vc204=V.piece($C(9),204)			// LNDELT1.TB17
	set vc205=V.piece($C(9),205)			// LNDELT1.TB18
	set vc206=V.piece($C(9),206)			// LNDELT1.TB19
	set vc207=V.piece($C(9),207)			// LNDELT1.TB20
	set vc208=V.piece($C(9),208)			// LNDELT1.TN17
	set vc209=V.piece($C(9),209)			// LNDELT1.TN18
	set vc210=V.piece($C(9),210)			// LNDELT1.TN19
	set vc211=V.piece($C(9),211)			// LNDELT1.TN20
	set vc212=V.piece($C(9),212)			// LNDELT1.TBAL
	set vc213=V.piece($C(9),213)			// LNDELT1.TNUM
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type Public String %NOCLOSE,%NOOPEN,DONE

	set DONE=0 set (%NOOPEN,%NOCLOSE)=""
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=DRCN,JOB
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(vovc4'=vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VSUM4	// Summary
	type public String %NOCLOSE,%NOOPEN,%TIM,COLCD,DONE,DRCN,GRP,I,IOSL,JOB,TB1,TB10,TB11,TB12,TB13,TB14,TB15,TB16,TB17,TB18,TB19,TB2,TB20,TB3,TB4,TB5,TB6,TB7,TB8,TB9,TBAL,TN1,TN10,TN11,TN12,TN13,TN14,TN15,TN16,TN17,TN18,TN19,TN2,TN20,TN3,TN4,TN5,TN6,TN7,TN8,TN9,TNUM,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133
	type public String vc134,vc135,vc136,vc137,vc138,vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc17,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc202,vc203,vc204,vc205,vc206,vc207,vc208,vc209,vc21,vc210,vc211,vc212,vc213,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31
	type public String vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+18>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$J(DRCN(1),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(2),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(3),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(4),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="GROUP "_vc2_" TOTAL:"
	set VL=VL_$J("",31-VL.length())_$J(vc130,12)
	set VL=VL_$J("",57-VL.length())_$J(vc131,12)
	set VL=VL_$J("",83-VL.length())_$J(vc132,12)
	set VL=VL_$J("",109-VL.length())_$J(vc133,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc134,5)
	set VL=VL_$J("",64-VL.length())_$J(vc135,5)
	set VL=VL_$J("",90-VL.length())_$J(vc136,5)
	set VL=VL_$J("",116-VL.length())_$J(vc137,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$J(DRCN(5),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(6),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(7),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(8),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc138,12)
	set VL=VL_$J("",57-VL.length())_$J(vc139,12)
	set VL=VL_$J("",83-VL.length())_$J(vc140,12)
	set VL=VL_$J("",109-VL.length())_$J(vc141,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc142,5)
	set VL=VL_$J("",64-VL.length())_$J(vc143,5)
	set VL=VL_$J("",90-VL.length())_$J(vc144,5)
	set VL=VL_$J("",116-VL.length())_$J(vc145,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$J(DRCN(9),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(10),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(11),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(12),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc146,12)
	set VL=VL_$J("",57-VL.length())_$J(vc147,12)
	set VL=VL_$J("",83-VL.length())_$J(vc148,12)
	set VL=VL_$J("",109-VL.length())_$J(vc149,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc150,5)
	set VL=VL_$J("",64-VL.length())_$J(vc151,5)
	set VL=VL_$J("",90-VL.length())_$J(vc152,5)
	set VL=VL_$J("",116-VL.length())_$J(vc153,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$J(DRCN(13),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(14),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(15),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(16),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc154,12)
	set VL=VL_$J("",57-VL.length())_$J(vc155,12)
	set VL=VL_$J("",83-VL.length())_$J(vc156,12)
	set VL=VL_$J("",109-VL.length())_$J(vc157,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc158,5)
	set VL=VL_$J("",64-VL.length())_$J(vc159,5)
	set VL=VL_$J("",90-VL.length())_$J(vc160,5)
	set VL=VL_$J("",116-VL.length())_$J(vc161,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP5 quit:VFMQ!verror.get()  set V=$J(DRCN(17),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(18),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(19),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(20),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc162,12)
	set VL=VL_$J("",57-VL.length())_$J(vc163,12)
	set VL=VL_$J("",83-VL.length())_$J(vc164,12)
	set VL=VL_$J("",109-VL.length())_$J(vc165,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc166,5)
	set VL=VL_$J("",64-VL.length())_$J(vc167,5)
	set VL=VL_$J("",90-VL.length())_$J(vc168,5)
	set VL=VL_$J("",116-VL.length())_$J(vc169,5)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="                                                                                                             "_"COLLATERAL TOTAL"
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                             "_$J(vc170,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                                    "_$J(vc171,5)
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM5	// Summary
	type public String %NOCLOSE,%NOOPEN,%TIM,COLCD,DONE,DRCN,GRP,I,IOSL,JOB,TB1,TB10,TB11,TB12,TB13,TB14,TB15,TB16,TB17,TB18,TB19,TB2,TB20,TB3,TB4,TB5,TB6,TB7,TB8,TB9,TBAL,TN1,TN10,TN11,TN12,TN13,TN14,TN15,TN16,TN17,TN18,TN19,TN2,TN20,TN3,TN4,TN5,TN6,TN7,TN8,TN9,TNUM,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133
	type public String vc134,vc135,vc136,vc137,vc138,vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc17,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc202,vc203,vc204,vc205,vc206,vc207,vc208,vc209,vc21,vc210,vc211,vc212,vc213,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31
	type public String vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+19>IOSL do VHDG0 quit:VFMQ

	do VP6 quit:VFMQ!verror.get()  set V=$J(DRCN(1),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(2),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(3),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(4),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="TYPE "_vc3_" TOTAL:"
	set VL=VL_$J("",31-VL.length())_$J(vc130,12)
	set VL=VL_$J("",57-VL.length())_$J(vc131,12)
	set VL=VL_$J("",83-VL.length())_$J(vc132,12)
	set VL=VL_$J("",109-VL.length())_$J(vc133,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc134,5)
	set VL=VL_$J("",64-VL.length())_$J(vc135,5)
	set VL=VL_$J("",90-VL.length())_$J(vc136,5)
	set VL=VL_$J("",116-VL.length())_$J(vc137,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP7 quit:VFMQ!verror.get()  set V=$J(DRCN(5),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(6),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(7),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(8),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc138,12)
	set VL=VL_$J("",57-VL.length())_$J(vc139,12)
	set VL=VL_$J("",83-VL.length())_$J(vc140,12)
	set VL=VL_$J("",109-VL.length())_$J(vc141,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc142,5)
	set VL=VL_$J("",64-VL.length())_$J(vc143,5)
	set VL=VL_$J("",90-VL.length())_$J(vc144,5)
	set VL=VL_$J("",116-VL.length())_$J(vc145,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP8 quit:VFMQ!verror.get()  set V=$J(DRCN(9),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(10),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(11),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(12),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc146,12)
	set VL=VL_$J("",57-VL.length())_$J(vc147,12)
	set VL=VL_$J("",83-VL.length())_$J(vc148,12)
	set VL=VL_$J("",109-VL.length())_$J(vc149,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc150,5)
	set VL=VL_$J("",64-VL.length())_$J(vc151,5)
	set VL=VL_$J("",90-VL.length())_$J(vc152,5)
	set VL=VL_$J("",116-VL.length())_$J(vc153,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP9 quit:VFMQ!verror.get()  set V=$J(DRCN(13),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(14),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(15),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(16),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc154,12)
	set VL=VL_$J("",57-VL.length())_$J(vc155,12)
	set VL=VL_$J("",83-VL.length())_$J(vc156,12)
	set VL=VL_$J("",109-VL.length())_$J(vc157,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc158,5)
	set VL=VL_$J("",64-VL.length())_$J(vc159,5)
	set VL=VL_$J("",90-VL.length())_$J(vc160,5)
	set VL=VL_$J("",116-VL.length())_$J(vc161,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP10 quit:VFMQ!verror.get()  set V=$J(DRCN(17),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(18),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(19),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(20),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc162,12)
	set VL=VL_$J("",57-VL.length())_$J(vc163,12)
	set VL=VL_$J("",83-VL.length())_$J(vc164,12)
	set VL=VL_$J("",109-VL.length())_$J(vc165,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc166,5)
	set VL=VL_$J("",64-VL.length())_$J(vc167,5)
	set VL=VL_$J("",90-VL.length())_$J(vc168,5)
	set VL=VL_$J("",116-VL.length())_$J(vc169,5)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="                                                                                                             "_"COLLATERAL TOTAL"
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                             "_$J(vc170,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                                    "_$J(vc171,5)
	if 'VL.translate(" ").isNull() do VOM
	set V="" do VP11 quit:VFMQ!verror.get()  set VL=V
	do VOM
	quit

VDTL6	// Detail
	type public String %NOCLOSE,%NOOPEN,%TIM,COLCD,DONE,DRCN,GRP,IOSL,JOB,TB1,TB10,TB11,TB12,TB13,TB14,TB15,TB16,TB17,TB18,TB19,TB2,TB20,TB3,TB4,TB5,TB6,TB7,TB8,TB9,TBAL,TN1,TN10,TN11,TN12,TN13,TN14,TN15,TN16,TN17,TN18,TN19,TN2,TN20,TN3,TN4,TN5,TN6,TN7,TN8,TN9,TNUM,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133
	type public String vc134,vc135,vc136,vc137,vc138,vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc17,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc202,vc203,vc204,vc205,vc206,vc207,vc208,vc209,vc21,vc210,vc211,vc212,vc213,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31
	type public String vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+11>IOSL do VHDG0 quit:VFMQ

	set VL="                               "_$J(DRCN(1),23)
	set VL=VL_$J("",57-VL.length())_$J(DRCN(2),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(3),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(4),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(vc2,1,5)
	set VL=VL_$J("",6-VL.length())_$J(vc3,5)
	set VL=VL_$J("",13-VL.length())_$E(vc4,1,7)
	set VL=VL_$J("",22-VL.length())_$E(vc5,1,7)
	set VL=VL_$J("",30-VL.length())_$J(vc48,13)
	set VL=VL_$J("",44-VL.length())_$J(vc49,10)
	set VL=VL_$J("",55-VL.length())_$J(vc50,14)
	set VL=VL_$J("",70-VL.length())_$J(vc51,10)
	set VL=VL_$J("",81-VL.length())_$J(vc52,14)
	set VL=VL_$J("",96-VL.length())_$J(vc53,10)
	set VL=VL_$J("",107-VL.length())_$J(vc54,14)
	set VL=VL_$J("",122-VL.length())_$J(vc55,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc56,5)
	set VL=VL_$J("",44-VL.length())_$J(vc57,10)
	set VL=VL_$J("",55-VL.length())_$J(vc58,14)
	set VL=VL_$J("",70-VL.length())_$J(vc59,10)
	set VL=VL_$J("",81-VL.length())_$J(vc60,14)
	set VL=VL_$J("",96-VL.length())_$J(vc61,10)
	set VL=VL_$J("",107-VL.length())_$J(vc62,14)
	set VL=VL_$J("",122-VL.length())_$J(vc63,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP12 quit:VFMQ!verror.get()  set V=$J(DRCN(5),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(6),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(7),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(8),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc64,12)
	set VL=VL_$J("",44-VL.length())_$J(vc65,10)
	set VL=VL_$J("",55-VL.length())_$J(vc66,14)
	set VL=VL_$J("",70-VL.length())_$J(vc67,10)
	set VL=VL_$J("",81-VL.length())_$J(vc68,14)
	set VL=VL_$J("",96-VL.length())_$J(vc69,10)
	set VL=VL_$J("",107-VL.length())_$J(vc70,14)
	set VL=VL_$J("",122-VL.length())_$J(vc71,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc72,5)
	set VL=VL_$J("",44-VL.length())_$J(vc73,10)
	set VL=VL_$J("",55-VL.length())_$J(vc74,14)
	set VL=VL_$J("",70-VL.length())_$J(vc75,10)
	set VL=VL_$J("",81-VL.length())_$J(vc76,14)
	set VL=VL_$J("",96-VL.length())_$J(vc77,10)
	set VL=VL_$J("",107-VL.length())_$J(vc78,14)
	set VL=VL_$J("",122-VL.length())_$J(vc79,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP13 quit:VFMQ!verror.get()  set V=$J(DRCN(9),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(10),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(11),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(12),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc80,12)
	set VL=VL_$J("",44-VL.length())_$J(vc81,10)
	set VL=VL_$J("",55-VL.length())_$J(vc82,14)
	set VL=VL_$J("",70-VL.length())_$J(vc83,10)
	set VL=VL_$J("",81-VL.length())_$J(vc84,14)
	set VL=VL_$J("",96-VL.length())_$J(vc85,10)
	set VL=VL_$J("",107-VL.length())_$J(vc86,14)
	set VL=VL_$J("",122-VL.length())_$J(vc87,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc88,5)
	set VL=VL_$J("",44-VL.length())_$J(vc89,10)
	set VL=VL_$J("",55-VL.length())_$J(vc90,14)
	set VL=VL_$J("",70-VL.length())_$J(vc91,10)
	set VL=VL_$J("",81-VL.length())_$J(vc92,14)
	set VL=VL_$J("",96-VL.length())_$J(vc93,10)
	set VL=VL_$J("",107-VL.length())_$J(vc94,14)
	set VL=VL_$J("",122-VL.length())_$J(vc95,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP14 quit:VFMQ!verror.get()  set V=$J(DRCN(13),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(14),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(15),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(16),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc96,12)
	set VL=VL_$J("",44-VL.length())_$J(vc97,10)
	set VL=VL_$J("",55-VL.length())_$J(vc98,14)
	set VL=VL_$J("",70-VL.length())_$J(vc99,10)
	set VL=VL_$J("",81-VL.length())_$J(vc100,14)
	set VL=VL_$J("",96-VL.length())_$J(vc101,10)
	set VL=VL_$J("",107-VL.length())_$J(vc102,14)
	set VL=VL_$J("",122-VL.length())_$J(vc103,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc104,5)
	set VL=VL_$J("",44-VL.length())_$J(vc105,10)
	set VL=VL_$J("",55-VL.length())_$J(vc106,14)
	set VL=VL_$J("",70-VL.length())_$J(vc107,10)
	set VL=VL_$J("",81-VL.length())_$J(vc108,14)
	set VL=VL_$J("",96-VL.length())_$J(vc109,10)
	set VL=VL_$J("",107-VL.length())_$J(vc110,14)
	set VL=VL_$J("",122-VL.length())_$J(vc111,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP15 quit:VFMQ!verror.get()  set V=$J(DRCN(17),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(18),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(19),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(20),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc112,12)
	set VL=VL_$J("",44-VL.length())_$J(vc113,10)
	set VL=VL_$J("",55-VL.length())_$J(vc114,14)
	set VL=VL_$J("",70-VL.length())_$J(vc115,10)
	set VL=VL_$J("",81-VL.length())_$J(vc116,14)
	set VL=VL_$J("",96-VL.length())_$J(vc117,10)
	set VL=VL_$J("",107-VL.length())_$J(vc118,14)
	set VL=VL_$J("",122-VL.length())_$J(vc119,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc120,5)
	set VL=VL_$J("",44-VL.length())_$J(vc121,10)
	set VL=VL_$J("",55-VL.length())_$J(vc122,14)
	set VL=VL_$J("",70-VL.length())_$J(vc123,10)
	set VL=VL_$J("",81-VL.length())_$J(vc124,14)
	set VL=VL_$J("",96-VL.length())_$J(vc125,10)
	set VL=VL_$J("",107-VL.length())_$J(vc126,14)
	set VL=VL_$J("",122-VL.length())_$J(vc127,10)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                                                                                                             "_"COLLATERAL TOTAL"
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                             "_$J(vc128,12)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                                "_$J(vc129,9)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	quit

VSUM6	// Summary
	type public String %NOCLOSE,%NOOPEN,%TIM,COLCD,DONE,DRCN,GRP,I,IOSL,JOB,TB1,TB10,TB11,TB12,TB13,TB14,TB15,TB16,TB17,TB18,TB19,TB2,TB20,TB3,TB4,TB5,TB6,TB7,TB8,TB9,TBAL,TN1,TN10,TN11,TN12,TN13,TN14,TN15,TN16,TN17,TN18,TN19,TN2,TN20,TN3,TN4,TN5,TN6,TN7,TN8,TN9,TNUM,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133
	type public String vc134,vc135,vc136,vc137,vc138,vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc17,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc202,vc203,vc204,vc205,vc206,vc207,vc208,vc209,vc21,vc210,vc211,vc212,vc213,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31
	type public String vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+18>IOSL do VHDG0 quit:VFMQ

	do VP16 quit:VFMQ!verror.get()  set V=$J(DRCN(1),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(2),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(3),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(4),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="COLLAT CODE "_vc4_" TOTAL:"
	set VL=VL_$J("",31-VL.length())_$J(vc130,12)
	set VL=VL_$J("",57-VL.length())_$J(vc131,12)
	set VL=VL_$J("",83-VL.length())_$J(vc132,12)
	set VL=VL_$J("",109-VL.length())_$J(vc133,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc134,5)
	set VL=VL_$J("",64-VL.length())_$J(vc135,5)
	set VL=VL_$J("",90-VL.length())_$J(vc136,5)
	set VL=VL_$J("",116-VL.length())_$J(vc137,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP17 quit:VFMQ!verror.get()  set V=$J(DRCN(5),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(6),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(7),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(8),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc138,12)
	set VL=VL_$J("",57-VL.length())_$J(vc139,12)
	set VL=VL_$J("",83-VL.length())_$J(vc140,12)
	set VL=VL_$J("",109-VL.length())_$J(vc141,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc142,5)
	set VL=VL_$J("",64-VL.length())_$J(vc143,5)
	set VL=VL_$J("",90-VL.length())_$J(vc144,5)
	set VL=VL_$J("",116-VL.length())_$J(vc145,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP18 quit:VFMQ!verror.get()  set V=$J(DRCN(9),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(10),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(11),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(12),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc146,12)
	set VL=VL_$J("",57-VL.length())_$J(vc147,12)
	set VL=VL_$J("",83-VL.length())_$J(vc148,12)
	set VL=VL_$J("",109-VL.length())_$J(vc149,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc150,5)
	set VL=VL_$J("",64-VL.length())_$J(vc151,5)
	set VL=VL_$J("",90-VL.length())_$J(vc152,5)
	set VL=VL_$J("",116-VL.length())_$J(vc153,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP19 quit:VFMQ!verror.get()  set V=$J(DRCN(13),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(14),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(15),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(16),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc154,12)
	set VL=VL_$J("",57-VL.length())_$J(vc155,12)
	set VL=VL_$J("",83-VL.length())_$J(vc156,12)
	set VL=VL_$J("",109-VL.length())_$J(vc157,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc158,5)
	set VL=VL_$J("",64-VL.length())_$J(vc159,5)
	set VL=VL_$J("",90-VL.length())_$J(vc160,5)
	set VL=VL_$J("",116-VL.length())_$J(vc161,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP20 quit:VFMQ!verror.get()  set V=$J(DRCN(17),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(18),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(19),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(20),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc162,12)
	set VL=VL_$J("",57-VL.length())_$J(vc163,12)
	set VL=VL_$J("",83-VL.length())_$J(vc164,12)
	set VL=VL_$J("",109-VL.length())_$J(vc165,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc166,5)
	set VL=VL_$J("",64-VL.length())_$J(vc167,5)
	set VL=VL_$J("",90-VL.length())_$J(vc168,5)
	set VL=VL_$J("",116-VL.length())_$J(vc169,5)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="                                                                                                             "_"COLLATERAL TOTAL"
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                             "_$J(vc170,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                                    "_$J(vc171,5)
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%NOCLOSE,%NOOPEN,%TIM,COLCD,CONAM,DONE,DRCN,GRP,JOB,RID,RN,TB1,TB10,TB11,TB12,TB13,TB14,TB15,TB16,TB17,TB18,TB19,TB2,TB20,TB3,TB4,TB5,TB6,TB7,TB8,TB9,TBAL,TN1,TN10,TN11,TN12,TN13,TN14,TN15,TN16,TN17,TN18,TN19,TN2,TN20,TN3,TN4,TN5,TN6,TN7,TN8,TN9,TNUM,TYPE,VL,vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138
	type public String vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc17,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc202,vc203,vc204,vc205,vc206,vc207,vc208,vc209,vc21,vc210,vc211,vc212,vc213,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36
	type public String vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA081)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="                                    "_"BALANCE    PERCENT        BALANCE    PERCENT        BALANCE    PERCENT        BALANCE    PERCENT"
	do VOM
	set VL="GROUP  TYPE  COL CD   PRP CD         NUMBER    PERCENT         NUMBER    PERCENT         NUMBER    PERCENT         NUMBER    PERCENT"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DRCN(1)

	type Public String DRCN,VL

	if $L(DRCN(1)) set VL="" do VOM
	quit

VP2	// Column pre-processor - Variable: DRCN(5)

	type Public String DRCN,VL

	if $L(DRCN(5)) set VL="" do VOM
	quit

VP3	// Column pre-processor - Variable: DRCN(9)

	type Public String DRCN,VL

	if $L(DRCN(9)) set VL="" do VOM
	quit

VP4	// Column pre-processor - Variable: DRCN(13)

	type Public String DRCN,VL

	if $L(DRCN(13)) set VL="" do VOM
	quit

VP5	// Column pre-processor - Variable: DRCN(17)

	type Public String DRCN,VL

	if $L(DRCN(17)) set VL="" do VOM
	quit

VP6	// Column pre-processor - Variable: DRCN(1)

	type Public String DRCN,VL

	if $L(DRCN(1)) set VL="" do VOM
	quit

VP7	// Column pre-processor - Variable: DRCN(5)

	type Public String DRCN,VL

	if $L(DRCN(5)) set VL="" do VOM
	quit

VP8	// Column pre-processor - Variable: DRCN(9)

	type Public String DRCN,VL

	if $L(DRCN(9)) set VL="" do VOM
	quit

VP9	// Column pre-processor - Variable: DRCN(13)

	type Public String DRCN,VL

	if $L(DRCN(13)) set VL="" do VOM
	quit

VP10	// Column pre-processor - Variable: DRCN(17)

	type Public String DRCN,VL

	if $L(DRCN(17)) set VL="" do VOM
	quit

VP11	// Column post-processor -

	do VOM
	quit

VP12	// Column pre-processor - Variable: DRCN(5)

	type Public String DRCN,VL

	if $L(DRCN(5)) set VL="" do VOM
	quit

VP13	// Column pre-processor - Variable: DRCN(9)

	type Public String DRCN,VL

	if $L(DRCN(9)) set VL="" do VOM
	quit

VP14	// Column pre-processor - Variable: DRCN(13)

	type Public String DRCN,VL

	if $L(DRCN(13)) set VL="" do VOM
	quit

VP15	// Column pre-processor - Variable: DRCN(17)

	type Public String DRCN,VL

	if $L(DRCN(17)) set VL="" do VOM
	quit

VP16	// Column pre-processor - Variable: DRCN(1)

	type Public String DRCN,VL

	if $L(DRCN(1)) set VL="" do VOM
	quit

VP17	// Column pre-processor - Variable: DRCN(5)

	type Public String DRCN,VL

	if $L(DRCN(5)) set VL="" do VOM
	quit

VP18	// Column pre-processor - Variable: DRCN(9)

	type Public String DRCN,VL

	if $L(DRCN(9)) set VL="" do VOM
	quit

VP19	// Column pre-processor - Variable: DRCN(13)

	type Public String DRCN,VL

	if $L(DRCN(13)) set VL="" do VOM
	quit

VP20	// Column pre-processor - Variable: DRCN(17)

	type Public String DRCN,VL

	if $L(DRCN(17)) set VL="" do VOM
	quit
