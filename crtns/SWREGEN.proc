SWREGEN	//Private;SWIFT Message Regenerating Routine
	/*
	   ORIG: YANGR - 03/28/94
	   DESC: SWIFT Message Regenerating Routine is made for regenerating
	   SWIFT messages for these stored in SWIFT repair queue
	   SWIFTQ("REP").
	   1. Read Repair Queue SWIFTQ("REP",seq,refno,msgtype) one
	      message at a time.
	   2. With refno, determine the SWIFT message is from DEALs or
	      EFTPAY by checking:
	      DLINDX("REF",REFNO)=DEAL#  or  EFTREF(REFNO)=CID|SEQ
	   3. Go back to DEAL1 or EFTPAY, make local variable
	      for the DEAL record or EFTPAY record, call SWIFTGEN.M
	            to regenerate the message.

	   INPUTS:
	   . System

	   . Data [ddfile]di

	   . v1 desc of variable /TYP=T

	   RETURNS:
	   . XX desc of return  /TYP=T

	   EXAMPLE:
	   Text of example (line one)

	  ---- Revision History --------------------------------------------
	   02/03/06 - ratht - CR 18292
	   	      Added do MAIN in TOP of the Procedure
	   	      Modified QUE='REP' in EFTPAY section 
	   	      
	   09/07/05 - KELLYP - CR 17118
	   	      Removed references to MT100 message type which was
	   	      obsoleted by SWIFT.

           07/26/05 - SkariahV- CR16679
	              Removed #WARN and #OPTIMIZE directives.
	              
	   12/29/03 - CARROLLJ - CR7658
		      Removed call to DATECONV.

	   06/17/03 - BHANGALEV - 51351
	              Converted to PSL
	  ------------------------------------------------------------------
	*/
	
	
	do MAIN
	quit

	
MAIN	//
	/*
	  Read record from REP queue SWIFTQ("REP",SEQ,REFNO,TYPE)=""
	  Locate the REFNO in either Global

	  Step 1: read record from "REP" queue, get REFNO and TYPE(message type)
	*/
	
	type Number COUNT,OLDTOTAL
	type Public Number REFNO,seq,SEQVAR,TYPE
	type Public String ER,HOME,RM
	
	//counter for regenerated messages
	set COUNT=0
	
	type RecordSWQCNT swqcnt=Db.getRecord("SWQCNT","QUE='REP'")

	//old total "rep" ques
	set OLDTOTAL=swqcnt.tot
	
	type ResultSet rs=Db.select("SEQ,TRREFNO,TYPE","SWIFTQ2","QUE='REP'")
	while rs.next() do {
		set seq=rs.getCol("SEQ")
		set REFNO=rs.getCol("TRREFNO")
		set TYPE=rs.getCol("TYPE")
		
		set HOME=$$REFHOME(REFNO)
		
		if HOME="" do ERR quit
		
		//get the record from Global EFTPAY,SEQ is sequency# in EFYPAY
		if HOME="EFTPAY" do EFTPAY(.SEQVAR,REFNO,TYPE) quit
		
		//get record from Global DEAL1,SEQ is sequency# in DEAL1
		if HOME="DEAL" do DEAL(REFNO,TYPE) quit
		}
		
	//update global swiftq("rep")="x|update|x"
	set swqcnt.tot=OLDTOTAL-COUNT
	do swqcnt.bypassSave()

	// ~p1 message(s) regenerated
	set ER="W"
	set RM=$$^MSG(7356,COUNT)
	
	quit


REFHOME(Number REFNO)	//

	/*
	  ARGUMENTS:
	  	. REFNO		Reference number	/REQ/MECH=VAL
	  
	  RETURNS:
	  	. $$ 	Returns the FID in which the refno is found	
	  
	  Extrinsic function to return HOME="EFTPAY" or HOME="DEAL"
	  find out where is the current REFNO from.
	  check both index file EFTREF(REFNO)=CID|SEQ and
	  DLINDX("REF",REFNO)=DEAL#
	  
	*/
	type Public String HOME
	
	set HOME=""
	if Db.isDefined("EFTREF","REFNO=:REFNO") do { quit HOME

		//found REFNO in EFTPAY
		set HOME="EFTPAY"
		}

	if Db.isDefined("DEALREFNO","TRREFNO=:REFNO") do { quit HOME
		
		//found REFNO in DEAL1
		set HOME="DEAL"
		}

	quit HOME


ERR	//
	
	type Public String ER,RM,REFNO
	
	// ~p1 not found
	set ER=1
	set RM=$$^MSG(3060,REFNO)

	// SWIFT messages regeneration
	do LOG^UTLEXC("SWREGEN","*",$$^MSG(7373),"","",RM)

	quit


EFTPAY(Number SEQVAR,Number REFNO,Number TYPE)	//

	/*
	  
	  ARGUMENTS:
	  	. SEQVAR	Sequence Number		/REQ/MECH=REF
	  	. REFNO		Reference number	/REQ/MECH=VAL
	  	. TYPE		Message Type		/REQ/MECH=VAL
	  	
	  The current REFNO is from EFTPAY global, find the record in EFTPAY
	  by using index file EFTREF(REFNO)=CID|SEQ
	  The message type could be 103, 202.
	  set SWIFT message flag to TYPE before call SWIFTGEN.M

	*/
	type Public Number CID,COUNT,seq
	
	type RecordEFTREF eftref=Db.getRecord("EFTREF","REFNO=:REFNO",1)
	
	set CID=eftref.cid
	set SEQVAR=eftref.seq

	//Set up initial data value for EFTPAY record
	/*
	   Uses EFTPAY record to generate SWIFT message MT103 and MT202
	   for EFTPAY: MT103, MT202
	   for Non-Documentary Payment Orders.
	*/
	type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID=:CID,SEQ=:SEQVAR",1)

	//regenerate message
	do NDPO^SWIFTGEN(CID,SEQVAR,TYPE)

	//Kill the record from "REP" queue
	do Db.delete("SWIFTQ2","QUE='REP' AND SEQ=:seq AND TRREFNO=:REFNO AND TYPE=:TYPE")
	
	set COUNT=COUNT+1

	quit


DEAL(Number REFNO,Number TYPE)	//

	/*
	  ARGUMENTS:
	  	. REFNO		Reference number	/REQ/MECH=VAL
	  	. TYPE		Message Type		/REQ/MECH=VAL
	  
	  The current REFNO is from DEAL1 global, find the record in DEAL1
	  by using index file DLINDX("REF",REFNO)=DEAL#
	  The message type could be 202,210,300
	  set SWIFT message flag to TYPE before call SWIFTGEN.M

	*/

	type Public String NOINT
	type Public Number COUNT,seq
	
	type RecordDEALREFNO dealrfno=Db.getRecord("DEALREFNO","TRREFNO=:REFNO",1)
	
	//get the deal contract number NOINT
	set NOINT=dealrfno.noint
	
	type RecordDEAL1 fdeal1=Db.getRecord("DEAL1","NOINT=:NOINT",1)
	
	//set up initial data value for DEAL record
	do RELREF(.fdeal1)

	//kill the record from "REP" queue
	do Db.delete("SWIFTQ2","QUE='REF' AND SEQ=:seq AND TRREFNO=:REFNO AND TYPE=:TYPE")
	
	set COUNT=COUNT+1
	quit


RELREF(RecordDEAL1 fdeal1)	//
	
	/*
	   ARGUMENTS:
	   	. fdeal1	DEAL1 Object	/REQ/MECH=REF
	*/
	type Public String swftadd1,swftadd2,swftcvr,swftnam
	type Public Date efd,spot,today,tradate,trade,value
	type Public Number accnt,trefno
	
	set accnt=fdeal1.acn
	
	type RecordCIF cif=Db.getRecord("CIF","ACN=:accnt")
	set swftnam=cif.nam_"|"_cif.xname
	set swftadd1=cif.pad1
	set swftadd2=cif.pcity_"|"_cif.pcntry
	set swftcvr=CUVAR.swiftadd
	
	set (efd,today,trade,tradate)=fdeal1.tdt
	
	set trade=$$DAT^%ZM(fdeal1.tdt,"YYMMDD")
	
	set spot=fdeal1.sdt
	set value=fdeal1.vdt
	 
	set value=$$DAT^%ZM(fdeal1.vdt,"YYMMDD")
	
	set trefno=fdeal1.trrefno
	
	quit

vSIG()	quit "60299^25488^Tarini Charan Rath^5653"	// Signature - LTD^TIME^USER^SIZE
