R01S246	// SCA225 - Loan Sale Trial Balance with History
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String TOTAL
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"

	set RID="SCA225"
	set RN="Loan Sale Trial Balance with History"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNLS8R]INCD|[LNLS8]INCD:DISTINCT||D EXT^DBSQRY||T|Investor Code|||||"
	set %TAB("VIN2")="|255||[LNTAMT]PRNPMTRCD|||D EXT^DBSQRY||T|Prin Only Payments|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TOTAL
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ACTV,ACTVINCD,ACTVPL,BEG,CONAM,END,ESCRN,ESCRNINV,ESCRNPL,ESCRP,ESCRPINV,ESCRPPL,ESCWASH,INCD,INCDINCD,INCDPL,INTGL,MSTR,MSTRINCD,MSTRPL,PIWASH,PL,PMTPI,PMTPIINCD,PMTPIPL,PRGL,RID,RN,TOTAL,TOTAL(),UNAPF,UNAPFINV,UNAPFPL,VL,VLOF,VRF(),VSTATS(),WASH,fLNLS2,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61
	type String vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA225",RN="Loan Sale Trial Balance with History"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA225","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNLS8R]TSEQ#7#4,[LNLS8R]TAMT#12#12,[LNLS8R]DT#25#10,[LNLS8R]EFDDT#36#10,[LNLS8R]ETC#47#12,[LNTAMT]PRNCOLTOT#61#12,[LNTAMT]PRNPMTRCD#74#12,[LNTAMT]NETINTCNG#87#10,[LNTAMT]LATCHGCOL#98#8,[LNTAMT]UAPBALCHG#107#10,[LNTAMT]ESCBALCHG#118#10"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNLS8R]INCD "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LNTAMT]PRNPMTRCD "_VIN2,SEQ=SEQ+1
		set DQQRY(SEQ)="[LNLS6]POBPRPF'=1",SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNLS8R,LNLS6C,LNLS2,LNLS6,LNLS1,LN,LNTAMT") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Investor Code"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Prin Only Payments"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Sale Trial Balance with History"
		set VBNRINFO("PGM")="R01S246"
		set VBNRINFO("RID")="SCA225"
		set VBNRINFO("TABLES")="LNLS8R,LNLS6C,LNLS2,LNLS6,LNLS1,LN,LNTAMT"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLS8R]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLS8R]INCD"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNLS8R]PL"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLS8R]CID"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNLS8R]PSEQ"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LNLS8R]TSEQ"

		set VBNRINFO("DOC",1)=" 02/18/02     Pam Esterly -  48458"
		set VBNRINFO("DOC",2)="              Correct problems due to Euro changes."
		set VBNRINFO("DOC",3)="              Change compile flag back to No."
		set VBNRINFO("DOC",4)="              Replace HIST references with sets from temp global."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:19 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNLS8R.PID,LNLS8R.INCD,LNLS8R.PL,LNLS8R.CID,LNLS8R"
	set VSELECT=VSELECT_".PSEQ,LNLS8R.TSEQ,LNTAMT.PRNRED,LNTAMT.PRNINC,LNTA"
	set VSELECT=VSELECT_"MT.NETPRNCNG,LNLS6C.INVPRNPCT,LNTAMT.INTCOL,LNTAMT"
	set VSELECT=VSELECT_".INTCOLRED,LNTAMT.NETINTCNG,LNLS6C.INVINTPCT,LNTAM"
	set VSELECT=VSELECT_"T.SUBREC,LNTAMT.SUBDIS,LNTAMT.SUBNETCNG,LNLS6C.SUB"
	set VSELECT=VSELECT_"INV,LNTAMT.ESCCOL,LNTAMT.ESCRED,LNTAMT.NETESCCNG,L"
	set VSELECT=VSELECT_"NLS6C.INVESCPCT,LNTAMT.UAPBALINC,LNTAMT.UAPBALRED,"
	set VSELECT=VSELECT_"LNTAMT.UAPBALCHG,LNLS2.EFD,LNLS2.PP,LNLS2.PICM,LNL"
	set VSELECT=VSELECT_"S2.SVN,LNLS2.YIELD,LNLS2.FEEP,LNLS2.SFCM,LNLS2.ACT"
	set VSELECT=VSELECT_"GRP,LNLS6.INVAC,LN.BALCMP,LNLS6.INBAL,LN.TEB,LN.UN"
	set VSELECT=VSELECT_"APF,LN.PMTPI,LN.IRN,LNLS6.INVYLD,LN.DIST1LD,LNLS6."
	set VSELECT=VSELECT_"ACTIVE,LNLS2.PRGL,LNLS2.INTGL,LNLS2.WASH,LNLS2.ESC"
	set VSELECT=VSELECT_"WASH,LNLS1.PIWASH,LNLS1.ESCWASH,LNLS8R.TAMT,LNLS8R"
	set VSELECT=VSELECT_".DT,LNLS8R.EFDDT,LNLS8R.ETC,LNTAMT.PRNCOLTOT,LNTAM"
	set VSELECT=VSELECT_"T.PRNPMTRCD,LNTAMT.LATCHGCOL,LNTAMT.ESCBALCHG,LNLS"
	set VSELECT=VSELECT_"2.REMLD,LNLS2.REMFRE,LN.TREXD,LN.TRATE"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNLS8R,LNLS6C,LNLS2,LNLS6,LNLS1,LN,LNTAMT",VWHERE,"LNLS8R.PID,LNLS8R.INCD,LNLS8R.PL,LNLS8R.CID,LNLS8R.PSEQ,LNLS8R.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61
	set vc1=V.piece($C(9),1)			// LNLS8R.PID
	set vc2=V.piece($C(9),2)			// LNLS8R.INCD
	set vc3=V.piece($C(9),3)			// LNLS8R.PL
	set vc4=V.piece($C(9),4)			// LNLS8R.CID
	set vc5=V.piece($C(9),5)			// LNLS8R.PSEQ
	set vc6=V.piece($C(9),6)			// LNLS8R.TSEQ
	set vc7=V.piece($C(9),7)			// LNTAMT.PRNRED
	set vc8=V.piece($C(9),8)			// LNTAMT.PRNINC
	set vc9=V.piece($C(9),9)			// LNTAMT.NETPRNCNG
	set vc10=V.piece($C(9),10)			// LNLS6C.INVPRNPCT
	set vc11=V.piece($C(9),11)			// LNTAMT.INTCOL
	set vc12=V.piece($C(9),12)			// LNTAMT.INTCOLRED
	set vc13=V.piece($C(9),13)			// LNTAMT.NETINTCNG
	set vc14=V.piece($C(9),14)			// LNLS6C.INVINTPCT
	set vc15=V.piece($C(9),15)			// LNTAMT.SUBREC
	set vc16=V.piece($C(9),16)			// LNTAMT.SUBDIS
	set vc17=V.piece($C(9),17)			// LNTAMT.SUBNETCNG
	set vc18=V.piece($C(9),18)			// LNLS6C.SUBINV
	set vc19=V.piece($C(9),19)			// LNTAMT.ESCCOL
	set vc20=V.piece($C(9),20)			// LNTAMT.ESCRED
	set vc21=V.piece($C(9),21)			// LNTAMT.NETESCCNG
	set vc22=V.piece($C(9),22)			// LNLS6C.INVESCPCT
	set vc23=V.piece($C(9),23)			// LNTAMT.UAPBALINC
	set vc24=V.piece($C(9),24)			// LNTAMT.UAPBALRED
	set vc25=V.piece($C(9),25)			// LNTAMT.UAPBALCHG
	set vc26=V.piece($C(9),26)			// LNLS2.EFD
	set vc27=V.piece($C(9),27)			// LNLS2.PP
	set vc28=V.piece($C(9),28)			// LNLS2.PICM
	set vc29=V.piece($C(9),29)			// LNLS2.SVN
	set vc30=V.piece($C(9),30)			// LNLS2.YIELD
	set vc31=V.piece($C(9),31)			// LNLS2.FEEP
	set vc32=V.piece($C(9),32)			// LNLS2.SFCM
	set vc33=V.piece($C(9),33)			// LNLS2.ACTGRP
	set vc34=V.piece($C(9),34)			// LNLS6.INVAC
	set vc35=V.piece($C(9),35)			// LN.BALCMP
	set vc36=V.piece($C(9),36)			// LNLS6.INBAL
	set vc37=V.piece($C(9),37)			// LN.TEB
	set vc38=V.piece($C(9),38)			// LN.UNAPF
	set vc39=V.piece($C(9),39)			// LN.PMTPI
	set vc40=V.piece($C(9),40)			// LN.IRN
	set vc41=V.piece($C(9),41)			// LNLS6.INVYLD
	set vc42=V.piece($C(9),42)			// LN.DIST1LD
	set vc43=V.piece($C(9),43)			// LNLS6.ACTIVE
	set vc44=V.piece($C(9),44)			// LNLS2.PRGL
	set vc45=V.piece($C(9),45)			// LNLS2.INTGL
	set vc46=V.piece($C(9),46)			// LNLS2.WASH
	set vc47=V.piece($C(9),47)			// LNLS2.ESCWASH
	set vc48=V.piece($C(9),48)			// LNLS1.PIWASH
	set vc49=V.piece($C(9),49)			// LNLS1.ESCWASH
	set vc50=V.piece($C(9),50)			// LNLS8R.TAMT
	set vc51=V.piece($C(9),51)			// LNLS8R.DT
	set vc52=V.piece($C(9),52)			// LNLS8R.EFDDT
	set vc53=V.piece($C(9),53)			// LNLS8R.ETC
	set vc54=V.piece($C(9),54)			// LNTAMT.PRNCOLTOT
	set vc55=V.piece($C(9),55)			// LNTAMT.PRNPMTRCD
	set vc56=V.piece($C(9),56)			// LNTAMT.LATCHGCOL
	set vc57=V.piece($C(9),57)			// LNTAMT.ESCBALCHG
	set vc58=V.piece($C(9),58)			// LNLS2.REMLD
	set vc59=V.piece($C(9),59)			// LNLS2.REMFRE
	set vc60=V.piece($C(9),60)			// LN.TREXD
	set vc61=V.piece($C(9),61)			// LN.TRATE
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 /*
  ------- Revision History --------------------------------------------

	06/26/06 - KELLYP - CR 21974
		   Modified to remove MIN and MAX parameters passed to
		   TRN^LNLS8R (which no longer accepts these par's) to
		   prevent an UNDEFINED error.

  ---------------------------------------------------------------------
 */

 type public String ACTV,ESCRN,ESCRP,fLNLS2,INCD,MSTR,PMTPI,TOTAL(),UNAPF

 set TOTAL("MSTR")=""
 set TOTAL("INCD")=""
 set TOTAL("ESCRP")=""
 set TOTAL("ESCRN")=""
 set TOTAL("UNAPF")=""
 set TOTAL("PMTPI")="" 
 set TOTAL("ACTV")=""
 do TRN^LNLS8R
 set fLNLS2=fLNLS2.get()
	quit

VPREBQ	// Pre-processor (before query)

  type public String TOTAL

  kill TOTAL
	quit

VRPOST	// Report post-processor

 type public String TOTAL

 kill TOTAL
 do Db.fastDelete("TMPRPT0","PID=:%ProcessID")

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc22,vc14,vc10,vc18,vc19,vc20,vc11,vc12,vc21,vc13,vc9,vc8,vc7,vc16,vc17,vc15,vc25,vc23,vc24
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+vc22			// @TOT([LNLS6C]INVESCPCT)
	set VT(6,2,1)=VT(6,2,1)+vc14			// @TOT([LNLS6C]INVINTPCT)
	set VT(6,3,1)=VT(6,3,1)+vc10			// @TOT([LNLS6C]INVPRNPCT)
	set VT(6,4,1)=VT(6,4,1)+vc18			// @TOT([LNLS6C]SUBINV)
	set VT(6,5,1)=VT(6,5,1)+vc19			// @TOT([LNTAMT]ESCCOL)
	set VT(6,6,1)=VT(6,6,1)+vc20			// @TOT([LNTAMT]ESCRED)
	set VT(6,7,1)=VT(6,7,1)+vc11			// @TOT([LNTAMT]INTCOL)
	set VT(6,8,1)=VT(6,8,1)+vc12			// @TOT([LNTAMT]INTCOLRED)
	set VT(6,9,1)=VT(6,9,1)+vc21			// @TOT([LNTAMT]NETESCCNG)
	set VT(6,10,1)=VT(6,10,1)+vc13			// @TOT([LNTAMT]NETINTCNG)
	set VT(6,11,1)=VT(6,11,1)+vc9			// @TOT([LNTAMT]NETPRNCNG)
	set VT(6,12,1)=VT(6,12,1)+vc8			// @TOT([LNTAMT]PRNINC)
	set VT(6,13,1)=VT(6,13,1)+vc7			// @TOT([LNTAMT]PRNRED)
	set VT(6,14,1)=VT(6,14,1)+vc16			// @TOT([LNTAMT]SUBDIS)
	set VT(6,15,1)=VT(6,15,1)+vc17			// @TOT([LNTAMT]SUBNETCNG)
	set VT(6,16,1)=VT(6,16,1)+vc15			// @TOT([LNTAMT]SUBREC)
	set VT(6,17,1)=VT(6,17,1)+vc25			// @TOT([LNTAMT]UAPBALCHG)
	set VT(6,18,1)=VT(6,18,1)+vc23			// @TOT([LNTAMT]UAPBALINC)
	set VT(6,19,1)=VT(6,19,1)+vc24			// @TOT([LNTAMT]UAPBALRED)
	quit

VSUM3	// Summary
	type public String %TIM,ACTV,ACTVINCD,ACTVPL,BEG,END,ESCRN,ESCRNINV,ESCRNPL,ESCRP,ESCRPINV,ESCRPPL,ESCWASH,I,INCD,INCDINCD,INCDPL,INTGL,IOSL,MSTR,MSTRINCD,MSTRPL,PIWASH,PL,PMTPI,PMTPIINCD,PMTPIPL,PRGL,TOTAL,TOTAL(),UNAPF,UNAPFINV,UNAPFPL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),WASH,fLNLS2,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6
	type public String vc60,vc61,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+9>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Investor "_vc2_" Totals"
	set VL=VL_$J("",51-VL.length())_"Receipts"
	set VL=VL_$J("",62-VL.length())_"Disbursements"
	set VL=VL_$J("",81-VL.length())_"Net Change"
	set VL=VL_$J("",99-VL.length())_"Investor"
	set VL=VL_$J("",116-VL.length())_"Account"
	do VOM
	set VL="                                  "_"-----------------------------------------------------------------------------------------"
	do VOM
	set VL="     "_"Master:"
	do VP1 quit:VFMQ!verror.get()  set V=$J($FN(MSTRINCD,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",34-VL.length())_"Principal:"
	set V=VT(3,13,1)				// @TOT([LNTAMT]PRNRED,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,12,1)				// @TOT([LNTAMT]PRNINC,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,11,1)				// @TOT([LNTAMT]NETPRNCNG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,3,1)					// @TOT([LNLS6C]INVPRNPCT,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="   "_"Investor:"
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(INCDINCD,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",35-VL.length())_"Interest:"
	set V=VT(3,7,1)					// @TOT([LNTAMT]INTCOL,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,8,1)					// @TOT([LNTAMT]INTCOLRED,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,10,1)				// @TOT([LNTAMT]NETINTCNG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,2,1)					// @TOT([LNLS6C]INVINTPCT,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL=" "_"Pos Escrow:"
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(ESCRPINV,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",35-VL.length())_"Subtotal:"
	set V=VT(3,16,1)				// @TOT([LNTAMT]SUBREC,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,14,1)				// @TOT([LNTAMT]SUBDIS,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,15,1)				// @TOT([LNTAMT]SUBNETCNG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,4,1)					// @TOT([LNLS6C]SUBINV,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",108-VL.length())_"**"
	set VL=VL_$J("",111-VL.length())_$J(vc48,12)
	set VL=VL_$J("",125-VL.length())_"Deposit"
	do VOM
	set VL=" "_"Neg Escrow:"
	do VP4 quit:VFMQ!verror.get()  set V=$J($FN(ESCRNINV,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	do VOM
	set VL="  "_"Unapplied: "
	do VP5 quit:VFMQ!verror.get()  set V=$J($FN(UNAPFINV,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",37-VL.length())_"Escrow:"
	set V=VT(3,5,1)					// @TOT([LNTAMT]ESCCOL,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,6,1)					// @TOT([LNTAMT]ESCRED,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,9,1)					// @TOT([LNTAMT]NETESCCNG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,1,1)					// @TOT([LNLS6C]INVESCPCT,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",111-VL.length())_$J(vc49,12)
	set VL=VL_$J("",125-VL.length())_"Deposit"
	do VOM
	set VL="    "_"P&I Pmt:"
	do VP6 quit:VFMQ!verror.get()  set V=$J($FN(PMTPIINCD,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	do VOM
	set VL="     "_"Active:"
	do VP7 quit:VFMQ!verror.get()  set V=$J(ACTVINCD,4)
	set VL=VL_$J("",20-VL.length())_V
	set VL=VL_$J("",34-VL.length())_"Unapplied:"
	set V=VT(3,18,1)				// @TOT([LNTAMT]UAPBALINC,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,19,1)				// @TOT([LNTAMT]UAPBALRED,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,17,1)				// @TOT([LNTAMT]UAPBALCHG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,17,1)				// @TOT([LNTAMT]UAPBALCHG,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,ACTV,ACTVINCD,ACTVPL,BEG,CONAM,END,ER,ESCRN,ESCRNINV,ESCRNPL,ESCRP,ESCRPINV,ESCRPPL,ESCWASH,INCD,INCDINCD,INCDPL,INTGL,IOSL,MSTR,MSTRINCD,MSTRPL,PIWASH,PL,PMTPI,PMTPIINCD,PMTPIPL,PRGL,RID,RN,TOTAL,TOTAL(),UNAPF,UNAPFINV,UNAPFPL,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,WASH,fLNLS2,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56
	type public String vc57,vc58,vc59,vc6,vc60,vc61,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+9>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Investor:"
	set V=vc2,VO=V set V=$E(V,1,5) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",10-VL.length())_V		// [SYSDEV,LNLS8R]INCD
	set VL=VL_$J("",20-VL.length())_"From:"
	do VP9 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(BEG),10)
	set VL=VL_$J("",26-VL.length())_V
	set VL=VL_$J("",39-VL.length())_"Dated:"
	set VL=VL_$J("",46-VL.length())_$J($$DAT^%ZM(vc26),10)
	set VL=VL_$J("",59-VL.length())_"Part %:"
	set VL=VL_$J("",67-VL.length())_$J(vc27,9,5)
	set VL=VL_$J("",79-VL.length())_"Rem Method:"
	set VL=VL_$J("",91-VL.length())_$J(vc28,12)
	set VL=VL_$J("",105-VL.length())_"Servicer:"
	set VL=VL_$J("",115-VL.length())_$E(vc29,1,10)
	do VOM
	set VL="    "_"Pool:"
	set VL=VL_$J("",10-VL.length())_$E(vc3,1,10)
	set VL=VL_$J("",22-VL.length())_"To:"
	set VL=VL_$J("",26-VL.length())_$J($$DAT^%ZM(END),10)
	set VL=VL_$J("",39-VL.length())_"Yield:"
	set VL=VL_$J("",46-VL.length())_$J(vc30,8)
	set VL=VL_$J("",60-VL.length())_"Fee %:"
	set VL=VL_$J("",67-VL.length())_$J(vc31,8)
	set VL=VL_$J("",79-VL.length())_"Fee Method:"
	set VL=VL_$J("",91-VL.length())_$E(vc32,1,5)
	set VL=VL_$J("",103-VL.length())_"Actg Group:"
	set VL=VL_$J("",115-VL.length())_$J(vc33,7)
	do VOM
	set VL="" do VOM
	set VL="---------- Account ---------    -------------------- Balance --------------------          P & I  - Interest Rate -    Paid"
	do VOM
	set VL="    "_"Internal      Investor        Master      Investor        Escrow    Unapplied         Amount  Borrower  Inv Yld    Through Act"
	do VOM
	set VL="" do VOM
	set VL="       "_"Seq       Amount  Posted    Effective  Code              Prin Pmt    Prin Only   Interest  Penalty  Unapplied     Escrow"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,ACTV,ACTVINCD,ACTVPL,BEG,END,ESCRN,ESCRNINV,ESCRNPL,ESCRP,ESCRPINV,ESCRPPL,ESCWASH,INCD,INCDINCD,INCDPL,INTGL,IOSL,MSTR,MSTRINCD,MSTRPL,PIWASH,PL,PMTPI,PMTPIINCD,PMTPIPL,PRGL,TOTAL,TOTAL(),UNAPF,UNAPFINV,UNAPFPL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),WASH,fLNLS2,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6
	type public String vc60,vc61,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	if VLC+3>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set V=vc4,VO=V set V=$J(V,12) do VP10 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",14-VL.length())_$J(vc34,12)
	set VL=VL_$J("",27-VL.length())_$J($FN(vc35,",",2),13)
	set VL=VL_$J("",42-VL.length())_$J($FN(vc36,",",2),13)
	set VL=VL_$J("",56-VL.length())_$J($FN(vc37,",",2),12)
	set VL=VL_$J("",69-VL.length())_$J($FN(vc38,",",2),13)
	set VL=VL_$J("",83-VL.length())_$J($FN(vc39,",",2),13)
	set VL=VL_$J("",98-VL.length())_$J(vc40,8,5)
	set VL=VL_$J("",107-VL.length())_$J(vc41,8,5)
	set VL=VL_$J("",116-VL.length())_$J($$DAT^%ZM(vc42),10)
	set VL=VL_$J("",128-VL.length())_$S(vc43:"Y",1:"N")
	if VLC+3>IOSL do VHDG0 quit:VFMQ
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,ACTV,ACTVINCD,ACTVPL,BEG,END,ESCRN,ESCRNINV,ESCRNPL,ESCRP,ESCRPINV,ESCRPPL,ESCWASH,I,INCD,INCDINCD,INCDPL,INTGL,IOSL,MSTR,MSTRINCD,MSTRPL,PIWASH,PL,PMTPI,PMTPIINCD,PMTPIPL,PRGL,TOTAL,TOTAL(),UNAPF,UNAPFINV,UNAPFPL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),WASH,fLNLS2,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6
	type public String vc60,vc61,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+9>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL="" do VOM
	set VL="Investor "_vc2_", Pool "_vc3_" Totals"
	set VL=VL_$J("",51-VL.length())_"Receipts"
	set VL=VL_$J("",62-VL.length())_"Disbursements"
	set VL=VL_$J("",81-VL.length())_"Net Change"
	set VL=VL_$J("",99-VL.length())_"Investor"
	set VL=VL_$J("",116-VL.length())_"Account"
	do VOM
	set VL="                                  "_"-----------------------------------------------------------------------------------------"
	do VOM
	set VL="     "_"Master:"
	do VP11 quit:VFMQ!verror.get()  set V=$J($FN(MSTRPL,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",34-VL.length())_"Principal:"
	set V=VT(4,13,1)				// @TOT([LNTAMT]PRNRED,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,12,1)				// @TOT([LNTAMT]PRNINC,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,11,1)				// @TOT([LNTAMT]NETPRNCNG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,3,1)					// @TOT([LNLS6C]INVPRNPCT,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",111-VL.length())_$J(vc44,12)
	set VL=VL_$J("",125-VL.length())_"G/L"
	do VOM
	set VL="   "_"Investor:"
	do VP12 quit:VFMQ!verror.get()  set V=$J($FN(INCDPL,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",35-VL.length())_"Interest:"
	set V=VT(4,7,1)					// @TOT([LNTAMT]INTCOL,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,8,1)					// @TOT([LNTAMT]INTCOLRED,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,10,1)				// @TOT([LNTAMT]NETINTCNG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,2,1)					// @TOT([LNLS6C]INVINTPCT,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",111-VL.length())_$J(vc45,12)
	set VL=VL_$J("",125-VL.length())_"G/L"
	do VOM
	set VL=" "_"Pos Escrow:"
	do VP13 quit:VFMQ!verror.get()  set V=$J($FN(ESCRPPL,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",35-VL.length())_"Subtotal:"
	set V=VT(4,16,1)				// @TOT([LNTAMT]SUBREC,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,14,1)				// @TOT([LNTAMT]SUBDIS,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,15,1)				// @TOT([LNTAMT]SUBNETCNG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,4,1)					// @TOT([LNLS6C]SUBINV,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",108-VL.length())_"**"
	set VL=VL_$J("",111-VL.length())_$J(vc46,12)
	set VL=VL_$J("",125-VL.length())_"Deposit"
	do VOM
	set VL=" "_"Neg Escrow:"
	do VP14 quit:VFMQ!verror.get()  set V=$J($FN(ESCRNPL,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	do VOM
	set VL="  "_"Unapplied: "
	do VP15 quit:VFMQ!verror.get()  set V=$J($FN(UNAPFPL,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",37-VL.length())_"Escrow:"
	set V=VT(4,5,1)					// @TOT([LNTAMT]ESCCOL,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,6,1)					// @TOT([LNTAMT]ESCRED,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,9,1)					// @TOT([LNTAMT]NETESCCNG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,1,1)					// @TOT([LNLS6C]INVESCPCT,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",111-VL.length())_$J(vc49,12)
	set VL=VL_$J("",125-VL.length())_"Deposit"
	do VOM
	set VL="    "_"P&I Pmt:"
	do VP16 quit:VFMQ!verror.get()  set V=$J($FN(PMTPIPL,",",2),14)
	set VL=VL_$J("",13-VL.length())_V
	do VOM
	set VL="     "_"Active:"
	do VP17 quit:VFMQ!verror.get()  set V=$J(ACTVPL,4)
	set VL=VL_$J("",20-VL.length())_V
	set VL=VL_$J("",34-VL.length())_"Unapplied:"
	set V=VT(4,18,1)				// @TOT([LNTAMT]UAPBALINC,)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,19,1)				// @TOT([LNTAMT]UAPBALRED,)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,17,1)				// @TOT([LNTAMT]UAPBALCHG,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,17,1)				// @TOT([LNTAMT]UAPBALCHG,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,ACTV,ACTVINCD,ACTVPL,BEG,END,ESCRN,ESCRNINV,ESCRNPL,ESCRP,ESCRPINV,ESCRPPL,ESCWASH,INCD,INCDINCD,INCDPL,INTGL,IOSL,MSTR,MSTRINCD,MSTRPL,PIWASH,PL,PMTPI,PMTPIINCD,PMTPIPL,PRGL,TOTAL,TOTAL(),UNAPF,UNAPFINV,UNAPFPL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),WASH,fLNLS2,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6
	type public String vc60,vc61,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"****"
	set V=vc6,VO=V set V=$J(V,4) do VP18 quit:VFMQ!verror.get()
	set VL=VL_$J("",6-VL.length())_V		// [SYSDEV,LNLS8R]TSEQ
	set VL=VL_$J("",11-VL.length())_$J(vc50,12)
	set VL=VL_$J("",24-VL.length())_$J($$DAT^%ZM(vc51),10)
	set VL=VL_$J("",35-VL.length())_$J($$DAT^%ZM(vc52),10)
	set VL=VL_$J("",46-VL.length())_$E(vc53,1,12)
	set VL=VL_$J("",59-VL.length())_$J($FN(vc54,",",2),13)
	set VL=VL_$J("",73-VL.length())_$J($FN(vc55,",",2),12)
	set VL=VL_$J("",86-VL.length())_$J($FN(vc13,",",2),10)
	set VL=VL_$J("",97-VL.length())_$J($FN(vc56,",",2),8)
	set VL=VL_$J("",106-VL.length())_$J($FN(vc25,",",2),10)
	set V=vc57,VO=V set V=$J($FN(V,",",2),10) do VP19 quit:VFMQ!verror.get()
	set VL=VL_$J("",117-VL.length())_V		// [SYSDEV,LNTAMT]ESCBALCHG
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ACTV,ACTVINCD,ACTVPL,BEG,CONAM,END,ESCRN,ESCRNINV,ESCRNPL,ESCRP,ESCRPINV,ESCRPPL,ESCWASH,INCD,INCDINCD,INCDPL,INTGL,MSTR,MSTRINCD,MSTRPL,PIWASH,PL,PMTPI,PMTPIINCD,PMTPIPL,PRGL,RID,RN,TOTAL,TOTAL(),UNAPF,UNAPFINV,UNAPFPL,VL,WASH,fLNLS2,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc7,vc8,vc9,vovc1
	type public String vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,ACTV,ACTVINCD,ACTVPL,BEG,END,ESCRN,ESCRNINV,ESCRNPL,ESCRP,ESCRPINV,ESCRPPL,ESCWASH,INCD,INCDINCD,INCDPL,INTGL,MSTR,MSTRINCD,MSTRPL,PIWASH,PL,PMTPI,PMTPIINCD,PMTPIPL,PRGL,TOTAL,TOTAL(),UNAPF,UNAPFINV,UNAPFPL,VPN,WASH,fLNLS2,vc44,vc45,vc46,vc48,vc49,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+10>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Report Totals                                      Receipts   Disbursements      Net Change        Investor"
	do VOM
	set VL="                                  "_"-------------------------------------------------------------------------"
	do VOM
	set VL="     "_"MASTER:"
	set VL=VL_$J("",13-VL.length())_$J($FN(TOTAL("MSTR"),",",2),14)
	set VL=VL_$J("",34-VL.length())_"Principal:"
	set V=0						// @TOT([LNTAMT]PRNRED,0)
	for I=0:1:6 set V=V+VT(I,13,1)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]PRNINC,0)
	for I=0:1:6 set V=V+VT(I,12,1)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]NETPRNCNG,0)
	for I=0:1:6 set V=V+VT(I,11,1)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6C]INVPRNPCT,0)
	for I=0:1:6 set V=V+VT(I,3,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="   "_"INVESTOR:"
	set VL=VL_$J("",13-VL.length())_$J($FN(TOTAL("INCD"),",",2),14)
	set VL=VL_$J("",35-VL.length())_"Interest:"
	set V=0						// @TOT([LNTAMT]INTCOL,0)
	for I=0:1:6 set V=V+VT(I,7,1)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]INTCOLRED,0)
	for I=0:1:6 set V=V+VT(I,8,1)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]NETINTCNG,0)
	for I=0:1:6 set V=V+VT(I,10,1)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6C]INVINTPCT,0)
	for I=0:1:6 set V=V+VT(I,2,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL=" "_"POS ESCROW:"
	set VL=VL_$J("",13-VL.length())_$J($FN(TOTAL("ESCRP"),",",2),14)
	set VL=VL_$J("",35-VL.length())_"Subtotal:"
	set V=0						// @TOT([LNTAMT]SUBREC,0)
	for I=0:1:6 set V=V+VT(I,16,1)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]SUBDIS,0)
	for I=0:1:6 set V=V+VT(I,14,1)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]SUBNETCNG,0)
	for I=0:1:6 set V=V+VT(I,15,1)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6C]SUBINV,0)
	for I=0:1:6 set V=V+VT(I,4,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",108-VL.length())_"**"
	do VOM
	set VL=" "_"NEG ESCROW:"
	set VL=VL_$J("",13-VL.length())_$J($FN(TOTAL("ESCRN"),",",2),14)
	do VOM
	set VL="  "_"UNAPPLIED: "
	set VL=VL_$J("",13-VL.length())_$J($FN(TOTAL("UNAPF"),",",2),14)
	set VL=VL_$J("",37-VL.length())_"Escrow:"
	set V=0						// @TOT([LNTAMT]ESCCOL,0)
	for I=0:1:6 set V=V+VT(I,5,1)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]ESCRED,0)
	for I=0:1:6 set V=V+VT(I,6,1)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]NETESCCNG,0)
	for I=0:1:6 set V=V+VT(I,9,1)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6C]INVESCPCT,0)
	for I=0:1:6 set V=V+VT(I,1,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="    "_"P&I PMT:"
	set VL=VL_$J("",13-VL.length())_$J($FN(TOTAL("PMTPI"),",",2),14)
	do VOM
	set VL="     "_"ACTIVE:"
	set VL=VL_$J("",20-VL.length())_$J(TOTAL("ACTV"),4)
	set VL=VL_$J("",34-VL.length())_"Unapplied:"
	set V=0						// @TOT([LNTAMT]UAPBALINC,0)
	for I=0:1:6 set V=V+VT(I,18,1)
	set VL=VL_$J("",45-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]UAPBALRED,0)
	for I=0:1:6 set V=V+VT(I,19,1)
	set VL=VL_$J("",61-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]UAPBALCHG,0)
	for I=0:1:6 set V=V+VT(I,17,1)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNTAMT]UAPBALCHG,0)
	for I=0:1:6 set V=V+VT(I,17,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: MSTRINCD

 type public String INCD,MSTRINCD,TOTAL()

 set MSTRINCD=TOTAL("MSTR",INCD).get()
	quit

VP2	// Column pre-processor - Variable: INCDINCD

 type public String INCD,INCDINCD,TOTAL()

 set INCDINCD=TOTAL("INCD",INCD).get()
	quit

VP3	// Column pre-processor - Variable: ESCRPINV

 type public String ESCRPINV,INCD,TOTAL()

 set ESCRPINV=TOTAL("ESCRP",INCD).get()
	quit

VP4	// Column pre-processor - Variable: ESCRNINV

 type public String ESCRNINV,INCD,TOTAL()

 set ESCRNINV=TOTAL("ESCRN",INCD).get()
	quit

VP5	// Column pre-processor - Variable: UNAPFINV

 type public String INCD,TOTAL(),UNAPFINV

 set UNAPFINV=TOTAL("UNAPF",INCD).get()
	quit

VP6	// Column pre-processor - Variable: PMTPIINCD

 type public String INCD,PMTPIINCD,TOTAL()
 set PMTPIINCD=TOTAL("PMTPI",INCD).get()
	quit

VP7	// Column pre-processor - Variable: ACTVINCD

 type public String ACTVINCD,INCD,TOTAL()

 set ACTVINCD=TOTAL("ACTV",INCD).get()
	quit

VP8	// Column post-processor - [SYSDEV,LNLS8R]INCD

	type public String vc2,vc3
 type public String INCD,fLNLS1,PL
 type String I,TOTAL()

 set INCD=vc2
 set PL=vc3
 
 type RecordLNLS1 lnls1 = Db.getRecord("LNLS1","INCD=:INCD",1)
 if lnls1.getMode() do {
        set fLNLS1=lnls1.desc_"|"_lnls1.acn_"||"_"||"_"||"_"||"_lnls1.piwash_"|"_lnls1.escwash_"|"_lnls1.leadinst_"|"_lnls1.grpctrl_"|"_lnls1.revcus
        }
 for I="MSTR","INCD","ESCRP","ESCRN","UNAPF","PMTPI","ACTV" set TOTAL(I)=0
	quit

VP9	// Column pre-processor - Variable: BEG

	type public String vc58,vc59
 type String FRE1
 type public String BEG,END,FRE
 type public Date TJD
	
 // Calculate pool beginning (BEG) and ending (EFD) cutoff dates
 // Last history date equals last remittance or beginning of month
 
 set END=vc58 
 if END.isNull() set END=$$BOMJD^SCADAT(TJD,1)

 // Frequency equals remittance frequency or monthly
 set FRE1=vc59
 set FRE="-"_FRE1
 if FRE="-" set FRE="-1MA1"
 set BEG=$$NJD^UFRE(END,FRE)+1
 quit
	quit

VP10	// Column post-processor - [SYSDEV,LNLS8R]CID

	type public String vc60,vc40,vc61
 type public Boolean FLAG

 set FLAG=0
 if vc60>%SystemDate set vc40=vc61
	quit

VP11	// Column pre-processor - Variable: MSTRPL

 type public String INCD,MSTRPL,PL,TOTAL()

 set MSTRPL=TOTAL("MSTR",INCD,PL).get()
	quit

VP12	// Column pre-processor - Variable: INCDPL

 type public String INCD,INCDPL,PL,TOTAL()

 set INCDPL=TOTAL("INCD",INCD,PL).get()
	quit

VP13	// Column pre-processor - Variable: ESCRPPL

 type public String ESCRPPL,INCD,PL,TOTAL()

 set ESCRPPL=TOTAL("ESCRP",INCD,PL).get()
	quit

VP14	// Column pre-processor - Variable: ESCRNPL

 type public String ESCRNPL,INCD,PL,TOTAL()

 set ESCRNPL=TOTAL("ESCRN",INCD,PL).get()
	quit

VP15	// Column pre-processor - Variable: UNAPFPL

 type public String INCD,PL,TOTAL(),UNAPFPL

 set UNAPFPL=TOTAL("UNAPF",INCD,PL).get()
	quit

VP16	// Column pre-processor - Variable: PMTPIPL

 type public String INCD,PL,PMTPIPL,TOTAL()

 set PMTPIPL=TOTAL("PMTPI",INCD,PL).get()
	quit

VP17	// Column pre-processor - Variable: ACTVPL

 type public String ACTVPL,INCD,PL,TOTAL() 

 set ACTVPL=TOTAL("ACTV",INCD,PL).get()
	quit

VP18	// Column post-processor - [SYSDEV,LNLS8R]TSEQ

	type public String vc35,vc36,vc37,vc38,vc39,vc43
 type public Boolean FLAG
 type public String INDC,PL,TOTAL(,,)

 // Accumulate totals for each investor account
 if FLAG=0 do {
        // Do not accumulate for each TSEQ detail line
        set TOTAL("MSTR")=TOTAL("MSTR").get()+vc35
        set TOTAL("MSTR",INCD)=TOTAL("MSTR",INCD).get()+vc35
        set TOTAL("MSTR",INCD,PL)=TOTAL("MSTR",INCD,PL).get()+vc35
        set TOTAL("INCD")=TOTAL("INCD")+$$^SCARND(vc36,0,,,2)
        set TOTAL("INCD",INCD)=TOTAL("INCD",INCD).get()+$$^SCARND(vc36,0,,,2)
        set TOTAL("INCD",INCD,PL)=TOTAL("INCD",INCD,PL).get()+$$^SCARND(vc36,0,,,2)
        set TOTAL("ESCRP")=TOTAL("ESCRP").get()+$S(vc37>0:vc37,1:0)
        set TOTAL("ESCRP",INCD)=TOTAL("ESCRP",INCD).get()+$S(vc37>0:vc37,1:0)
        set TOTAL("ESCRP",INCD,PL)=TOTAL("ESCRP",INCD,PL).get()+$S(vc37>0:vc37,1:0)
        set TOTAL("ESCRN")=TOTAL("ESCRN").get()+$S(vc37<0:vc37,1:0)
        set TOTAL("ESCRN",INCD)=TOTAL("ESCRN",INCD).get()+$S(vc37<0:vc37,1:0)
        set TOTAL("ESCRN",INCD,PL)=TOTAL("ESCRN",INCD,PL).get()+$S(vc37<0:vc37,1:0)
        set TOTAL("UNAPF")=TOTAL("UNAPF").get()+vc38
        set TOTAL("UNAPF",INCD)=TOTAL("UNAPF",INCD).get()+vc38
        set TOTAL("UNAPF",INCD,PL)=TOTAL("UNAPF",INCD,PL).get()+vc38
        set TOTAL("PMTPI")=TOTAL("PMTPI").get()+vc39
        set TOTAL("PMTPI",INCD)=TOTAL("PMTPI",INCD).get()+vc39
        set TOTAL("PMTPI",INCD,PL)=TOTAL("PMTPI",INCD,PL).get()+vc39
        set TOTAL("ACTV")=TOTAL("ACTV").get()+vc43
        set TOTAL("ACTV",INCD)=TOTAL("ACTV",INCD).get()+vc43
        set TOTAL("ACTV",INCD,PL)=TOTAL("ACTV",INCD,PL).get()+vc43
        set FLAG=1
        }
	quit

VP19	// Column post-processor - [SYSDEV,LNTAMT]ESCBALCHG

	type public String vc6
 type public String V,VL

 if vc6=0 set (V,VL)=""

	quit
