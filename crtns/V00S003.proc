V00S003(%ProcessMode,RecordACH1 fACH1)   //PBS - DBS - SID= <ACHBCH1> ACH Batch Record Maintenance 
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:04 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="ACHBCH1",VPGM=$T(+0),VSNAME="ACH Batch Record Maintenance "
 set VFSN("ACH1")="zfACH1"
 set vPSL=1
 set KEYS(1)=fACH1.COID
 set KEYS(2)=fACH1.PTYPE
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fACH1),VDA1(.fACH1),^DBSPNT()

 set ER=0 do VSCRPRE(.fACH1) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fACH1),VPR(.fACH1),VDA1(.fACH1)
 if %ProcessMode do VLOD(.fACH1) quit:$G(ER)  do VPR(.fACH1),VDA1(.fACH1)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fACH1)
	quit


VNEW(RecordACH1 fACH1) // Initialize arrays if %O=0
 
 do VDEF(.fACH1)
 do VLOD(.fACH1)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordACH1 fACH1)
 if fACH1.OCAGLFLG="" set fACH1.OCAGLFLG=0
 if fACH1.ODAGLFLG="" set fACH1.ODAGLFLG=0
 if fACH1.OSC="" set fACH1.OSC=1
 if fACH1.PREAUTH="" set fACH1.PREAUTH=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordACH1 fACH1) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordACH1 fACH1) // Display screen prompts
 set VO="22||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,25,31,1,0,0,0,0,0,0)_"01T ACH Originations Batch Record "
 set VO(2)=$C(3,5,19,0,0,0,0,0,0,0)_"01T Company ID Number:"
 set VO(3)=$C(3,47,14,0,0,0,0,0,0,0)_"01T Payment Type:"
 set VO(4)=$C(4,10,14,1,0,0,0,0,0,0)_"01T Company Name:"
 set VO(5)=$C(5,15,9,1,0,0,0,0,0,0)_"01T Address:"
 set VO(6)=$C(6,18,6,1,0,0,0,0,0,0)_"01T City:"
 set VO(7)=$C(6,52,9,1,0,0,0,0,0,0)_"01T Country:"
 set VO(8)=$C(7,9,15,0,0,0,0,0,0,0)_"01TState/Province:"
 set VO(9)=$C(7,45,16,0,0,0,0,0,0,0)_"01TZIP/Postal Code:"
 set VO(10)=$C(9,10,14,0,0,0,0,0,0,0)_"01T Contact Name:"
 set VO(11)=$C(9,52,9,0,0,0,0,0,0,0)_"01T Phone #:"
 set VO(12)=$C(11,32,17,2,0,0,0,0,0,0)_"01TBatch Information"
 set VO(13)=$C(13,6,18,1,0,0,0,0,0,0)_"01T Batch Originator:"
 set VO(14)=$C(13,42,19,1,0,0,0,0,0,0)_"01T ACH Type of Entry:"
 set VO(15)=$C(14,4,20,1,0,0,0,0,0,0)_"01T Company Entry Desc:"
 set VO(16)=$C(15,4,20,0,0,0,0,0,0,0)_"01T Discretionary Data:"
 set VO(17)=$C(17,8,16,0,0,0,0,0,0,0)_"01T Beginning Date:"
 set VO(18)=$C(17,44,17,0,0,0,0,0,0,0)_"01T Expiration Date:"
 set VO(19)=$C(18,5,19,1,0,0,0,0,0,0)_"01T Valid Frequencies:"
 set VO(20)=$C(20,30,23,2,0,0,0,0,0,0)_"01TPrenotification Control"
 set VO(21)=$C(22,8,16,1,0,0,0,0,0,0)_"01T Prenote Option:"
 set VO(22)=$C(22,45,16,0,0,0,0,0,0,0)_"01T Number of Days:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordACH1 fACH1)  // Display screen data
 new V
 //
 set VO="41|23|13|"
 set VO(23)=$C(3,25,10,2,0,0,0,0,0,0)_"01T"_$E(fACH1.COID,1,10)
 set VO(24)=$C(3,62,10,2,0,0,0,0,0,0)_"01T"_$E(fACH1.PTYPE,1,10)
 set VO(25)=$C(4,25,16,2,0,0,0,0,0,0)_"00T"_$E(fACH1.CNAME,1,16)
 set VO(26)=$C(5,25,25,2,0,0,0,0,0,0)_"00T"_$E(fACH1.ADDR,1,25)
 set VO(27)=$C(6,25,15,2,0,0,0,0,0,0)_"00T"_$E(fACH1.CITY,1,15)
 set VO(28)=$C(6,62,2,2,0,0,0,0,0,0)_"00T"_$E(fACH1.CNTRY,1,2)
 set VO(29)=$C(7,25,2,2,0,0,0,0,0,0)_"00T"_$E(fACH1.STATE,1,2)
 set VO(30)=$C(7,62,10,2,0,0,0,0,0,0)_"00T"_$E(fACH1.MZIP,1,10)
 set VO(31)=$C(9,25,25,2,0,0,0,0,0,0)_"00T"_$E(fACH1.CONTACT,1,25)
 set VO(32)=$C(9,62,12,2,0,0,0,0,0,0)_"00T"_$E(fACH1.PHONE,1,12)
 set VO(33)=$C(13,25,9,2,0,0,0,0,0,0)_"00T"_$E(fACH1.BORIG,1,9)
 set VO(34)=$C(13,62,3,2,0,0,0,0,0,0)_"00T"_$E(fACH1.SEC,1,3)
 set VO(35)=$C(14,25,10,2,0,0,0,0,0,0)_"00T"_$E(fACH1.CED,1,10)
 set VO(36)=$C(15,25,20,2,0,0,0,0,0,0)_"00T"_$E(fACH1.DISCR,1,20)
 set VO(37)=$C(17,25,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fACH1.BDATE)
 set VO(38)=$C(17,62,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fACH1.EDATE)
 set VO(39)=$C(18,25,50,2,0,0,0,0,0,0)_"00T"_$E(fACH1.VFREQ,1,50)
 set VO(40)=$C(22,25,1,2,0,0,0,0,0,0)_"00N"_fACH1.PREOPT
 set VO(41)=$C(22,62,2,2,0,0,0,0,0,0)_"00N"_fACH1.PREDAYS
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordACH1 fACH1)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=19,VPT=1,VPB=22,PGM=$T(+0),DLIB="SYSDEV",DFID="ACH1"
 set OLNTB=22062
 
 set VFSN("ACH1")="zfACH1"
 //
 // 
	
	
 set %TAB(1)=$C(2,24,10)_"21T12401|1|[ACH1]COID|^ACH(|if X?1""1""9n!(X?1""3""9N)!(X?1""9""9AN)"
 set %TAB(2)=$C(2,61,10)_"21T12402|1|[ACH1]PTYPE"
 set %TAB(3)=$C(3,24,16)_"01T12423|1|[ACH1]CNAME"
 set %TAB(4)=$C(4,24,25)_"01T12428|1|[ACH1]ADDR"
 set %TAB(5)=$C(5,24,15)_"01T12424|1|[ACH1]CITY"
 set %TAB(6)=$C(5,61,2)_"01T12427|1|[ACH1]CNTRY|[STBLCNTRY]||do VP1^V00S003(.fACH1)"
 set %TAB(7)=$C(6,24,2)_"00T12425|1|[ACH1]STATE|[STBLCNTRY1]||do VP2^V00S003(.fACH1)"
 set %TAB(8)=$C(6,61,10)_"00T12426|1|[ACH1]MZIP|||do VP3^V00S003(.fACH1)"
 set %TAB(9)=$C(8,24,25)_"00T12429|1|[ACH1]CONTACT"
 set %TAB(10)=$C(8,61,12)_"00T12430|1|[ACH1]PHONE"
 set %TAB(11)=$C(12,24,9)_"01T12407|1|[ACH1]BORIG|[UTBLACHRT]||do VP4^V00S003(.fACH1)"
 set %TAB(12)=$C(12,61,3)_"01T12404|1|[ACH1]SEC|[STBLACHSEC]||do VP5^V00S003(.fACH1)"
 set %TAB(13)=$C(13,24,10)_"01T12405|1|[ACH1]CED"
 set %TAB(14)=$C(14,24,20)_"00T12403|1|[ACH1]DISCR"
 set %TAB(15)=$C(16,24,10)_"00D12418|1|[ACH1]BDATE||||do VP6^V00S003(.fACH1)"
 set %TAB(16)=$C(16,61,10)_"00D12419|1|[ACH1]EDATE||||do VP7^V00S003(.fACH1)"
 set %TAB(17)=$C(17,24,50)_"01T12417|1|[ACH1]VFREQ|||do VP8^V00S003(.fACH1)|do VP9^V00S003(.fACH1)"
 set %TAB(18)=$C(21,24,1)_"01N12408|1|[ACH1]PREOPT|[STBLACHPO]||do VP10^V00S003(.fACH1)"
 set %TAB(19)=$C(21,61,2)_"00N12409|1|[ACH1]PREDAYS|||do VP11^V00S003(.fACH1)||6|30"
 do VTBL(.fACH1)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordACH1 fACH1) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String CNTRY,X
 
 set CNTRY=X

 quit
VP2(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String CNTRY,PROV,X

 if CNTRY="CA" set PROV=X

 type ResultSet rs=Db.select("STATE","STBLCNTRY1","CNTRY=:CNTRY")
 if rs.isEmpty() quit

 // Required
 if X="" do Runtime.setErrMSG("ACH1","2385") quit:ER

 quit

VP3(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type String ST

 set ST=fACH1.state

 do VPO1(.fACH1)

 quit

VPO1(RecordACH1 fACH1)  // user library ZIP
 ; The code previously found in this routine has been moved to the new filer
 ; processer library.  This library contains code shared by the filers and by
 ; DQ screens. ; code removed 12/9/96 Spier
 ; Zip Code Verification
 ;
 D ZIP^PROCZIP($G(CNTRY),$G(ST),$G(X))
 Q
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP4(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 /*
  Ensure that the institution is a valid batch originator (based upon
  data item [UTBLACHRT]BORIG).
 */

 type Public String X

 quit:X=""

 type RecordUTBLACHRT achrt=Db.getRecord("UTBLACHRT","KEY=:X")

 if achrt.getMode()=0 quit
 if 'achrt.key quit

 // ~p1 is not a valid batch originator
 if 'achrt.borig do Runtime.setErrMSG("ACH1","3044","X") quit:ER

 quit

VP5(RecordACH1 fACH1) //
  /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String X

 Q:(X="")!(X="PPD")!(X="WEB")!(X="TEL")!(X="ARC")

 // Limited to ACH types PPD, ARC, WEB, and TEL
 do Runtime.setErrMSG("ACH1","1609") quit:ER

 quit
VP6(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 if %ProcessMode=0 do CHANGE^DBSMACRO("[ACH1]BDATE","%SystemDate")

 quit
VP7(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Date tmp
 
 set tmp=fACH1.lead+%SystemDate+1
 if tmp<fACH1.bdate set tmp=fACH1.bdate

 do CHANGE^DBSMACRO("[ACH1]ENDDATE",tmp)

 quit
VP8(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */
 
 type Public String E8,ER,I(),X

 quit:X=""

 set E8="T"
 set I(3)=""

 // Validate each frequency contained in comma separated frequency string
 set ER=0
 if X="*" quit

 type String SEC
 set SEC=fACH1.sec

 // Specific freqs not valid for ~p1 Standard Entry Class. Please enter an "*".
 if (SEC="TEL")!(SEC="ARC") do Runtime.setErrMSG("ACH1","5098","SEC") quit:ER

 type String FRE
 type Number J

 for J=1:1 set FRE=X.piece(",",J) quit:FRE=""  set FRE(FRE)=""

 // Must re-use X here because EDT^UFRE expects it to contain a frequency
 type String XSAV
 set XSAV=X
 set X=""
 for  set X=$O(FRE(X)) quit:X=""  do EDT^UFRE quit:ER
 
 // Invalid frequency
 if ER do Runtime.setErrMSG("ACH1","1353") quit:ER

 // Need to restore original value of X to avoid "Data required" error
 set X=XSAV
 quit
VP9(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String E8,I()

 set E8="F"     // Frequency format type (used for look-up)

 set I(3)="[USRFRE]UFRE"	// Table look-up

 quit
VP10(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String X

 quit:X>1

 do DELETE^DBSMACRO("[ACH1]PREDAYS","1","0")
 do GOTO^DBSMACRO("END") quit

VP11(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String X

 // Data required
 if X="",fACH1.preopt>1 do Runtime.setErrMSG("ACH1","741") quit:ER

 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordACH1 fACH1
 do VPR(.fACH1)
 do VDA1(.fACH1)
 do ^DBSPNT()
 quit

VW(RecordACH1 fACH1)
 do VDA1(.fACH1)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordACH1 fACH1)
 do VDA1(.fACH1)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordACH1 fACH1
 do VDA1(.fACH1)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordACH1 fACH1
 if sn="ACH1" do vSET1(.fACH1,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordACH1 fACH1,di,X)
 do fACH1.setAuditFlag(1)
 set fACH1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordACH1 fACH1
 if fid="ACH1" quit $$vREAD1(.fACH1,di)
 quit ""
vREAD1(RecordACH1 fACH1,di)
 quit fACH1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordACH1 fACH1)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */
 type Public String PS,PZ
 type String CCNTRY
 set CCNTRY=CUVAR.ccntry
 if CCBTRY="CA" set PS="Province:",PZ=$$^MSG(6009) quit
 set PS=$$^MSG(6012),PZ=$$^MSG(6015)
 quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
