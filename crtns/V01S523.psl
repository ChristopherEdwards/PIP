V01S523(Number %ProcessMode,RecordUTBLRSPDEF fUTBLRSP)   // -  - SID= <RSPDEF> Retirement Savings Plan Definition
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:34 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fUTBLRSP.exists() set fUTBLRSP = Class.new("RecordUTBLRSPDEF")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="RSPDEF",VPGM=$T(+0),VSNAME="Retirement Savings Plan Definition"
 set VFSN("UTBLRSPDEF")="zfUTBLRSP"
 set vPSL=1
 set KEYS(1)=fUTBLRSP.KEY
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLRSP),VDA1(.fUTBLRSP),^DBSPNT() quit

 set ER=0 do VSCRPRE(.fUTBLRSP) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLRSP),VPR(.fUTBLRSP),VDA1(.fUTBLRSP)
 if %ProcessMode do VLOD(.fUTBLRSP) quit:$G(ER)  do VPR(.fUTBLRSP),VDA1(.fUTBLRSP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLRSP)
	quit


VNEW(RecordUTBLRSPDEF fUTBLRSP) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLRSP)
 do VLOD(.fUTBLRSP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordUTBLRSPDEF fUTBLRSP)
 quit:fUTBLRSP.KEY.isNull() 
 quit:%ProcessMode  set ER=0 if (fUTBLRSP.KEY="") set ER=1,RM=$$^MSG(1767,"KEY") Q
 if Db.isDefined("UTBLRSPDEF","UTBLRSPDEF.KEY=:fUTBLRSP.KEY") S ER=1,RM=$$^MSG(2327) Q
 do fUTBLRSP.setAuditFlag(1)
 if fUTBLRSP.TAXIND="" set fUTBLRSP.TAXIND=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordUTBLRSPDEF fUTBLRSP) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLRSPDEF fUTBLRSP) // Display screen prompts
 set VO="31||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,20,36,1,0,0,0,0,0,0)_"01T Retirement Savings Plan Definition "
 set VO(2)=$C(3,13,10,0,0,0,0,0,0,0)_"01TPlan Type:"
 set VO(3)=$C(5,16,59,0,0,0,0,0,0,0)_"01TPlan Limitations           Annual Distribution Requirements"
 set VO(4)=$C(6,9,20,0,0,0,0,0,0,0)_"01T Duplicate Plan IDs:"
 set VO(5)=$C(6,47,20,0,0,0,0,0,0,0)_"01TAge for Eligibility:"
 set VO(6)=$C(7,3,26,0,0,0,0,0,0,0)_"01TMin Age for Participation:"
 set VO(7)=$C(7,44,23,0,0,0,0,0,0,0)_"01TDist Deadline (Year 1):"
 set VO(8)=$C(8,3,26,0,0,0,0,0,0,0)_"01TMax Age for Participation:"
 set VO(9)=$C(8,48,19,0,0,0,0,0,0,0)_"01TCalculation Option:"
 set VO(10)=$C(9,7,22,0,0,0,0,0,0,0)_"01TPrior Year Cont Limit:"
 set VO(11)=$C(9,46,21,0,0,0,0,0,0,0)_"01TCurr Year Cont Limit:"
 set VO(12)=$C(10,1,28,0,0,0,0,0,0,0)_"01TPr Yr Contribution Deadline:"
 set VO(13)=$C(10,58,9,0,0,0,0,0,0,0)_"01TAge Base:"
 set VO(14)=$C(11,6,23,0,0,0,0,0,0,0)_"01TNext Bus Day Extension:"
 set VO(15)=$C(11,43,24,0,0,0,0,0,0,0)_"01TMin Calc Percent Option:"
 set VO(16)=$C(12,7,22,0,0,0,0,0,0,0)_"01TMax Age to Contribute:"
 set VO(17)=$C(12,42,25,0,0,0,0,0,0,0)_"01TUpdate Auto-Distribution:"
 set VO(18)=$C(13,4,25,0,0,0,0,0,0,0)_"01TMin Age for Distribution:"
 set VO(19)=$C(13,48,19,0,0,0,0,0,0,0)_"01TReport at Year End:"
 set VO(20)=$C(14,4,25,0,0,0,0,0,0,0)_"01TMax Age for Distribution:"
 set VO(21)=$C(14,46,21,0,0,0,0,0,0,0)_"01TMaximum LIF % Option:"
 set VO(22)=$C(15,11,18,0,0,0,0,0,0,0)_"01TTaxable Indicator:"
 set VO(23)=$C(17,12,21,0,0,0,0,0,0,0)_"01T Default Reason Codes"
 set VO(24)=$C(17,46,14,0,0,0,0,0,0,0)_"01T              "
 set VO(25)=$C(18,15,14,0,0,0,0,0,0,0)_"01T Contribution:"
 set VO(26)=$C(19,15,14,0,0,0,0,0,0,0)_"01T Distribution:"
 set VO(27)=$C(20,11,18,0,0,0,0,0,0,0)_"01TAuto-Distribution:"
 set VO(28)=$C(21,11,18,0,0,0,0,0,0,0)_"01TInterest Paid Out:"
 set VO(29)=$C(22,8,21,0,0,0,0,0,0,0)_"01TInterest Transfer In:"
 set VO(30)=$C(23,7,22,0,0,0,0,0,0,0)_"01TMaturity Transfer Out:"
 set VO(31)=$C(23,42,3,0,0,0,0,0,0,0)_"01TIn:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordUTBLRSPDEF fUTBLRSP)  // Display screen data
 new V
 //
 set VO="59|32|13|0"
 set VO(32)=$C(3,24,2,2,0,0,0,0,0,0)_"01N"_fUTBLRSP.KEY
 set VO(33)=$C(3,27,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLRSP.DESC,1,40)
 set VO(34)=$C(6,30,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLRSP.DUPPLNID:"Y",1:"N")
 set V=$S(fUTBLRSP.MADAGE="":"",1:$J(fUTBLRSP.MADAGE,0,2)) set VO(35)=$C(6,68,5,2,0,0,0,0,0,0)_"00N"_$S(fUTBLRSP.MADAGE="":"",1:$J(fUTBLRSP.MADAGE,0,2))
 set V=$S(fUTBLRSP.MINAGE="":"",1:$J(fUTBLRSP.MINAGE,0,2)) set VO(36)=$C(7,30,5,2,0,0,0,0,0,0)_"00N"_$S(fUTBLRSP.MINAGE="":"",1:$J(fUTBLRSP.MINAGE,0,2))
 set VO(37)=$C(7,68,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fUTBLRSP.DISDEAD)
 set V=$S(fUTBLRSP.MAXPAR="":"",1:$J(fUTBLRSP.MAXPAR,0,2)) set VO(38)=$C(8,30,5,2,0,0,0,0,0,0)_"00N"_$S(fUTBLRSP.MAXPAR="":"",1:$J(fUTBLRSP.MAXPAR,0,2))
 set VO(39)=$C(8,68,2,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.RSPMADO
 set V=$S(fUTBLRSP.LIMITPY="":"",1:$J(fUTBLRSP.LIMITPY,0,2)) set VO(40)=$C(9,30,12,2,0,0,0,0,0,0)_"00$"_$S(fUTBLRSP.LIMITPY="":"",1:$J(fUTBLRSP.LIMITPY,0,2))
 set V=$S(fUTBLRSP.LIMIT="":"",1:$J(fUTBLRSP.LIMIT,0,2)) set VO(41)=$C(9,68,12,2,0,0,0,0,0,0)_"00$"_$S(fUTBLRSP.LIMIT="":"",1:$J(fUTBLRSP.LIMIT,0,2))
 set VO(42)=$C(10,30,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fUTBLRSP.PRYRDTE)
 set VO(43)=$C(10,68,2,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.RSPMADB
 set VO(44)=$C(11,30,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLRSP.PRYROPT:"Y",1:"N")
 set VO(45)=$C(11,68,2,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.MADPCT
 set V=$S(fUTBLRSP.MAXAGE="":"",1:$J(fUTBLRSP.MAXAGE,0,2)) set VO(46)=$C(12,30,5,2,0,0,0,0,0,0)_"00N"_$S(fUTBLRSP.MAXAGE="":"",1:$J(fUTBLRSP.MAXAGE,0,2))
 set VO(47)=$C(12,68,2,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.AUTUPD
 set V=$S(fUTBLRSP.MINADIS="":"",1:$J(fUTBLRSP.MINADIS,0,2)) set VO(48)=$C(13,30,5,2,0,0,0,0,0,0)_"00N"_$S(fUTBLRSP.MINADIS="":"",1:$J(fUTBLRSP.MINADIS,0,2))
 set VO(49)=$C(13,68,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLRSP.YEFLG:"Y",1:"N")
 set V=$S(fUTBLRSP.DISAGE="":"",1:$J(fUTBLRSP.DISAGE,0,2)) set VO(50)=$C(14,30,5,2,0,0,0,0,0,0)_"00N"_$S(fUTBLRSP.DISAGE="":"",1:$J(fUTBLRSP.DISAGE,0,2))
 set VO(51)=$C(14,68,12,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.LIFPCT
 set VO(52)=$C(15,30,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLRSP.TAXIND:"Y",1:"N")
 set VO(53)=$C(18,30,10,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.IRACON
 set VO(54)=$C(19,30,10,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.IRADIS
 set VO(55)=$C(20,30,10,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.IRAAUT
 set VO(56)=$C(21,30,10,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.IRAIPO
 set VO(57)=$C(22,30,10,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.IRAIPI
 set VO(58)=$C(23,30,10,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.IRACLTO
 set VO(59)=$C(23,46,10,2,0,0,0,0,0,0)_"00N"_fUTBLRSP.IRACLTI
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordUTBLRSPDEF fUTBLRSP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=28,VPT=1,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLRSPDEF"
 set OLNTB=23046
 
 set VFSN("UTBLRSPDEF")="zfUTBLRSP"
 //
 // 
	
	
 set %TAB(1)=$C(2,23,2)_"21N12401|1|[UTBLRSPDEF]KEY"
 set %TAB(2)=$C(2,26,40)_"01T12401|1|[UTBLRSPDEF]DESC"
 set %TAB(3)=$C(5,29,1)_"00L12429|1|[UTBLRSPDEF]DUPPLNID"
 set %TAB(4)=$C(5,67,5)_"00N12411|1|[UTBLRSPDEF]MADAGE|||||||2"
 set %TAB(5)=$C(6,29,5)_"00N12413|1|[UTBLRSPDEF]MINAGE||||||99.99|2"
 set %TAB(6)=$C(6,67,10)_"00D12430|1|[UTBLRSPDEF]DISDEAD"
 set %TAB(7)=$C(7,29,5)_"00N12428|1|[UTBLRSPDEF]MAXPAR|||||||2"
 set %TAB(8)=$C(7,67,2)_"00N12409|1|[UTBLRSPDEF]RSPMADO|[STBLRSPMADO]"
 set %TAB(9)=$C(8,29,12)_"00$12431|1|[UTBLRSPDEF]LIMITPY|||||||2||18"
 set %TAB(10)=$C(8,67,12)_"00$12402|1|[UTBLRSPDEF]LIMIT|||||||2||18"
 set %TAB(11)=$C(9,29,10)_"00D12416|1|[UTBLRSPDEF]PRYRDTE"
 set %TAB(12)=$C(9,67,2)_"00N12410|1|[UTBLRSPDEF]RSPMADB|[STBLRSPMADB]"
 set %TAB(13)=$C(10,29,1)_"00L12417|1|[UTBLRSPDEF]PRYROPT"
 set %TAB(14)=$C(10,67,2)_"00N12426|1|[UTBLRSPDEF]MADPCT|[UTBLMADDESC]"
 set %TAB(15)=$C(11,29,5)_"00N12414|1|[UTBLRSPDEF]MAXAGE|||||||2"
 set %TAB(16)=$C(11,67,2)_"00N12412|1|[UTBLRSPDEF]AUTUPD|[STBLDISUPD]"
 set %TAB(17)=$C(12,29,5)_"00N12415|1|[UTBLRSPDEF]MINADIS|||||||2"
 set %TAB(18)=$C(12,67,1)_"00L12418|1|[UTBLRSPDEF]YEFLG"
 set %TAB(19)=$C(13,29,5)_"00N12420|1|[UTBLRSPDEF]DISAGE|||||||2"
 set %TAB(20)=$C(13,67,12)_"00N12427|1|[UTBLRSPDEF]LIFPCT|[UTBLLIFDESC]||do VP1^V01S523(.fUTBLRSP)"
 set %TAB(21)=$C(14,29,1)_"00L12436|1|[UTBLRSPDEF]TAXIND"
 set %TAB(22)=$C(17,29,10)_"00N12403|1|[UTBLRSPDEF]IRACON|[UTBLIRACON]||do VP2^V01S523(.fUTBLRSP)|do VP3^V01S523(.fUTBLRSP)"
 set %TAB(23)=$C(18,29,10)_"00N12404|1|[UTBLRSPDEF]IRADIS|[UTBLIRADIS]||do VP4^V01S523(.fUTBLRSP)|do VP5^V01S523(.fUTBLRSP)"
 set %TAB(24)=$C(19,29,10)_"00N12422|1|[UTBLRSPDEF]IRAAUT|[UTBLIRADIS]||do VP6^V01S523(.fUTBLRSP)|do VP7^V01S523(.fUTBLRSP)"
 set %TAB(25)=$C(20,29,10)_"00N12421|1|[UTBLRSPDEF]IRAIPO|[UTBLIRADIS]||do VP8^V01S523(.fUTBLRSP)|do VP9^V01S523(.fUTBLRSP)"
 set %TAB(26)=$C(21,29,10)_"00N12423|1|[UTBLRSPDEF]IRAIPI|[UTBLIRACON]||do VP10^V01S523(.fUTBLRSP)|do VP11^V01S523(.fUTBLRSP)"
 set %TAB(27)=$C(22,29,10)_"00N12424|1|[UTBLRSPDEF]IRACLTO|[UTBLIRADIS]||do VP12^V01S523(.fUTBLRSP)|do VP13^V01S523(.fUTBLRSP)"
 set %TAB(28)=$C(22,45,10)_"00N12425|1|[UTBLRSPDEF]IRACLTI|[UTBLIRACON]||do VP14^V01S523(.fUTBLRSP)|do VP15^V01S523(.fUTBLRSP)"
 do VTBL(.fUTBLRSP)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordUTBLRSPDEF fUTBLRSP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordUTBLRSPDEF fUTBLRSP) //
 type public String X

 if (X.isNull()),(fUTBLRSP.KEY=7) do Runtime.setErrMSG("UTBLRSPDEF",908)
VP2(RecordUTBLRSPDEF fUTBLRSP) //
 type public String X

 if (X.isNull())!(fUTBLRSP.KEY'=7) quit

 type RecordUTBLIRACON utblirac=Db.getRecord("UTBLIRACON","KEY=:X",1)
 if 'utblirac.lif do Runtime.setErrMSG("UTBLRSPDEF",908)
VP3(RecordUTBLRSPDEF fUTBLRSP) //
 type public String I(),TBLCON()
 set I(3)="TBLCON("
 type ResultSet rs = Db.select("CON,FMDESC","UTBLCONTYP","IRATYP = :fUTBLRSP.key")
 if rs.isEmpty() do {
	type ResultSet rs1 = Db.select("KEY,DESC","UTBLIRACON")
	while rs1.next() set TBLCON(rs1.getCol("KEY")) = rs1.getCol("DESC")
 }
 else  while rs.next() set TBLCON(rs.getCol("CON")) = rs.getCol("FMDESC")
VP4(RecordUTBLRSPDEF fUTBLRSP) //
 type public String X

 if (X.isNull())!(fUTBLRSP.KEY'=7) quit

 type RecordUTBLIRADIS utblirad=Db.getRecord("UTBLIRADIS","KEY=:X",1)
 if 'utblirad.lif do Runtime.setErrMSG("UTBLRSPDEF",908)
VP5(RecordUTBLRSPDEF fUTBLRSP) //
 type public String I(),TBLDIS()
 set I(3)="TBLDIS("
 type ResultSet rs = Db.select("DIS,FMDESC","UTBLDISTYP","IRATYP = :fUTBLRSP.key")
 if rs.isEmpty() do {
        type ResultSet rs1 = Db.select("KEY,DESC","UTBLIRADIS")
        while rs1.next() set TBLDIS(rs1.getCol("KEY")) = rs1.getCol("DESC")
 }
 else  while rs.next() set TBLDIS(rs.getCol("DIS")) = rs.getCol("FMDESC")   
VP6(RecordUTBLRSPDEF fUTBLRSP) //
 type public String X
 if (X.isNull())!(fUTBLRSP.KEY'=7) quit

 type RecordUTBLIRADIS utblirad=Db.getRecord("UTBLIRADIS","KEY=:X",1)
 if 'utblirad.lif do Runtime.setErrMSG("UTBLRSPDEF",908)
VP7(RecordUTBLRSPDEF fUTBLRSP) //
 type public String I(),TBLDIS()
 set I(3)="TBLDIS("
VP8(RecordUTBLRSPDEF fUTBLRSP) //
 type public String X
 if (X.isNull())!(fUTBLRSP.KEY'=7) quit

 type RecordUTBLIRADIS utblirad=Db.getRecord("UTBLIRADIS","KEY=:X",1)
 if 'utblirad.lif do Runtime.setErrMSG("UTBLRSPDEF",908)
VP9(RecordUTBLRSPDEF fUTBLRSP) //
 type public String I(),TBLDIS()
 set I(3)="TBLDIS("
VP10(RecordUTBLRSPDEF fUTBLRSP) //
 type public String X
 if (X.isNull())!(fUTBLRSP.KEY'=7) quit

 type RecordUTBLIRACON utblirac=Db.getRecord("UTBLIRACON","KEY=:X",1)
 if 'utblirac.lif do Runtime.setErrMSG("UTBLRSPDEF",908)
VP11(RecordUTBLRSPDEF fUTBLRSP) //
 type public String I(),TBLCON()
 set I(3)="TBLCON("
VP12(RecordUTBLRSPDEF fUTBLRSP) //
 type public String X
 if (X.isNull())!(fUTBLRSP.key'=7) quit

 type RecordUTBLIRADIS utblirad=Db.getRecord("UTBLIRADIS","KEY=:X",1)
 if 'utblirad.lif do Runtime.setErrMSG("UTBLRSPDEF",908)

VP13(RecordUTBLRSPDEF fUTBLRSP) //
 type public String I(),TBLDIS()
 set I(3)="TBLDIS("
VP14(RecordUTBLRSPDEF fUTBLRSP) //
 type public String X
 if (X.isNull())!(fUTBLRSP.key'=7) quit

 type RecordUTBLIRACON utblirac=Db.getRecord("UTBLIRACON","KEY=:X",1)
 if 'utblirac.lif do Runtime.setErrMSG("UTBLRSPDEF",908)
VP15(RecordUTBLRSPDEF fUTBLRSP) //
 type public String I(),TBLCON()
 set I(3)="TBLCON("
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLRSPDEF fUTBLRSP
 do VPR(.fUTBLRSP)
 do VDA1(.fUTBLRSP)
 do ^DBSPNT()
 quit

VW(RecordUTBLRSPDEF fUTBLRSP)
 do VDA1(.fUTBLRSP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLRSPDEF fUTBLRSP)
 do VDA1(.fUTBLRSP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLRSPDEF fUTBLRSP
 do VDA1(.fUTBLRSP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLRSPDEF fUTBLRSP
 if sn="UTBLRSPDEF" do vSET1(.fUTBLRSP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordUTBLRSPDEF fUTBLRSP,di,X)
 do fUTBLRSP.setAuditFlag(1)
 set fUTBLRSP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordUTBLRSPDEF fUTBLRSP
 if fid="UTBLRSPDEF" quit $$vREAD1(.fUTBLRSP,di)
 quit ""
vREAD1(RecordUTBLRSPDEF fUTBLRSP,di)
 quit fUTBLRSP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 //
VSCRPRE(RecordUTBLRSPDEF fUTBLRSP)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type public Number ER
 if %ProcessMode=3 do {
	type ResultSet rs=Db.select("ACN","IRATYPE","IRATYP=:fUTBLRSP.KEY")
	// Cannot delete RPA type that is used for existing accounts.
	if rs.next() do Runtime.setErrMSG("UTBLRSPDEF",1121) set VFMQ="Q"
	}
 #ACCEPT date=11/05/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
