R01S536	// SCA616 - Mass Matrix Change Support Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:00 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA616"
	set RN="Mass Matrix Change Support Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DAYENDMAT2]TJD|[DAYENDMAT2]TJD:DISTINCT:NOVAL||D EXT^DBSQRY||T|System Date|||||"
	set %TAB("VIN2")="|255||[DAYENDMAT2]NAME|[DAYENDMAT2]NAME:DISTINCT:NOVAL||D EXT^DBSQRY||T|Matrix Name|||||"
	set %TAB("VIN3")="|255||[DAYENDMAT2]MATXSEQ|[DAYENDMAT2]MATXSEQ:DISTINCT:NOVAL||D EXT^DBSQRY||T|Matrix Change Sequence|||||"
	set %TAB("VIN4")="|255||[DAYENDMAT]EFD|||D EXT^DBSQRY||T|Effective Date|||||"
	set %TAB("VIN5")="|255||[ACN]CLS|[STBLCLS]:NOVAL||D EXT^DBSQRY||T|Product Class|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ANT,CID,CLS,CONAM,DEPACR0,DEPACR1,DEPINT0,DEPINT1,DESC,GRP,LNNAM,MATXSEQ,NAM,NAME,RID,RN,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA616",RN="Mass Matrix Change Support Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA616","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DAYENDMAT2]TJD "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DAYENDMAT2]NAME "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DAYENDMAT2]MATXSEQ "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DAYENDMAT]EFD "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[ACN]CLS "_VIN5,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DAYENDMAT2,DAYENDMAT,ACN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:8 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:22 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DAYENDMAT.ANT,DAYENDMAT2.TJD,DAYENDMAT2.NAME,DAYEN"
	set VSELECT=VSELECT_"DMAT2.MATXSEQ,ACN.CLS,ACN.GRP,ACN.TYPE,DAYENDMAT2."
	set VSELECT=VSELECT_"CID,ACN.CRCD,DAYENDMAT2.DACRADJ,DAYENDMAT2.AIACRAD"
	set VSELECT=VSELECT_"J,DAYENDMAT2.NACRADJ,DAYENDMAT2.NACRUADJ,DAYENDMAT"
	set VSELECT=VSELECT_"2.NINTADJ,DAYENDMAT2.RINTADJ,DAYENDMAT2.AIACRBEF,D"
	set VSELECT=VSELECT_"AYENDMAT2.NACRBEF,DAYENDMAT2.NACRUBEF,DAYENDMAT2.N"
	set VSELECT=VSELECT_"INTBEF,DAYENDMAT2.RINTBEF,DAYENDMAT2.AIACRAFT,DAYE"
	set VSELECT=VSELECT_"NDMAT2.NACRAFT,DAYENDMAT2.NACRUAFT,DAYENDMAT2.DINT"
	set VSELECT=VSELECT_"AFT,DAYENDMAT2.NINTAFT,DAYENDMAT2.RINTAFT,DAYENDMA"
	set VSELECT=VSELECT_"T2.DINTADJ,DAYENDMAT2.DACRBEF,DAYENDMAT2.DINTBEF,D"
	set VSELECT=VSELECT_"AYENDMAT2.DACRAFT,DAYENDMAT2.TAMT,DAYENDMAT2.AVGBA"
	set VSELECT=VSELECT_"L,DAYENDMAT2.AVGIRN1,DAYENDMAT2.AVGIRN2,DAYENDMAT2"
	set VSELECT=VSELECT_".NIRN,ACN.LNM,ACN.ACN"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DAYENDMAT2,DAYENDMAT,ACN",VWHERE,"DAYENDMAT2.TJD,DAYENDMAT2.NAME,DAYENDMAT2.MATXSEQ,ACN.CLS,ACN.GRP,ACN.TYPE,DAYENDMAT2.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8
	set vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7="",vovc8=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc8,vc8
	set vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37
	set vc1=V.piece($C(9),1)			// DAYENDMAT.ANT
	set vc2=V.piece($C(9),2)			// DAYENDMAT2.TJD
	set vc3=V.piece($C(9),3)			// DAYENDMAT2.NAME
	set vc4=V.piece($C(9),4)			// DAYENDMAT2.MATXSEQ
	set vc5=V.piece($C(9),5)			// ACN.CLS
	set vc6=V.piece($C(9),6)			// ACN.GRP
	set vc7=V.piece($C(9),7)			// ACN.TYPE
	set vc8=V.piece($C(9),8)			// DAYENDMAT2.CID
	set vc9=V.piece($C(9),9)			// ACN.CRCD
	set vc10=V.piece($C(9),10)			// DAYENDMAT2.DACRADJ
	set vc11=V.piece($C(9),11)			// DAYENDMAT2.AIACRADJ
	set vc12=V.piece($C(9),12)			// DAYENDMAT2.NACRADJ
	set vc13=V.piece($C(9),13)			// DAYENDMAT2.NACRUADJ
	set vc14=V.piece($C(9),14)			// DAYENDMAT2.NINTADJ
	set vc15=V.piece($C(9),15)			// DAYENDMAT2.RINTADJ
	set vc16=V.piece($C(9),16)			// DAYENDMAT2.AIACRBEF
	set vc17=V.piece($C(9),17)			// DAYENDMAT2.NACRBEF
	set vc18=V.piece($C(9),18)			// DAYENDMAT2.NACRUBEF
	set vc19=V.piece($C(9),19)			// DAYENDMAT2.NINTBEF
	set vc20=V.piece($C(9),20)			// DAYENDMAT2.RINTBEF
	set vc21=V.piece($C(9),21)			// DAYENDMAT2.AIACRAFT
	set vc22=V.piece($C(9),22)			// DAYENDMAT2.NACRAFT
	set vc23=V.piece($C(9),23)			// DAYENDMAT2.NACRUAFT
	set vc24=V.piece($C(9),24)			// DAYENDMAT2.DINTAFT
	set vc25=V.piece($C(9),25)			// DAYENDMAT2.NINTAFT
	set vc26=V.piece($C(9),26)			// DAYENDMAT2.RINTAFT
	set vc27=V.piece($C(9),27)			// DAYENDMAT2.DINTADJ
	set vc28=V.piece($C(9),28)			// DAYENDMAT2.DACRBEF
	set vc29=V.piece($C(9),29)			// DAYENDMAT2.DINTBEF
	set vc30=V.piece($C(9),30)			// DAYENDMAT2.DACRAFT
	set vc31=V.piece($C(9),31)			// DAYENDMAT2.TAMT
	set vc32=V.piece($C(9),32)			// DAYENDMAT2.AVGBAL
	set vc33=V.piece($C(9),33)			// DAYENDMAT2.AVGIRN1
	set vc34=V.piece($C(9),34)			// DAYENDMAT2.AVGIRN2
	set vc35=V.piece($C(9),35)			// DAYENDMAT2.NIRN
	set vc36=V.piece($C(9),36)			// ACN.LNM
	set vc37=V.piece($C(9),37)			// ACN.ACN
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1
 type public Boolean ANT
 set ANT=vc1
 set ANT=$select(ANT:"Anticipated",1:"Live")
	quit

VPREAQ	// Pre-processor (after query)

 type public Number MATXSEQ,TYPE
 type public String CLS,DESC,GRP,NAME

 set (CLS,GRP,TYPE,NAME,MATXSEQ,DESC)=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0,vs(8)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1,vskp(8)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(8).get() do VDTL8 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(8)
	type Public String vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7,vc8,vovc8
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8)=0
	if vb1!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,vb8=1
	if vb6!(vovc6'=vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,vb8=1
	if vb7!(+vovc7'=+vc7) set vs(8)=0,vh(8)=0,VD(7)=0,vb8=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(8) set vs(8)=1 do VSUM8 quit:VFMQ  do stat^DBSRWUTL(8)
	if 'vs(7) set vs(7)=1 do VSUM7 quit:VFMQ  do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc11,vc21,vc16,vc10,vc30,vc28,vc27,vc24,vc29,vc12,vc22,vc17,vc13,vc23,vc18,vc14,vc25,vc19,vc15,vc26,vc20,vc31
	type Public String VSTATS

	set VT(8)=VT(8)+1
	set VT(8,1,1)=VT(8,1,1)+vc11			// @TOT([DAYENDMAT2]AIACRADJ)
	set VT(8,2,1)=VT(8,2,1)+vc21			// @TOT([DAYENDMAT2]AIACRAFT)
	set VT(8,3,1)=VT(8,3,1)+vc16			// @TOT([DAYENDMAT2]AIACRBEF)
	set VT(8,4,1)=VT(8,4,1)+vc10			// @TOT([DAYENDMAT2]DACRADJ)
	set VT(8,5,1)=VT(8,5,1)+vc30			// @TOT([DAYENDMAT2]DACRAFT)
	set VT(8,6,1)=VT(8,6,1)+vc28			// @TOT([DAYENDMAT2]DACRBEF)
	set VT(8,7,1)=VT(8,7,1)+vc27			// @TOT([DAYENDMAT2]DINTADJ)
	set VT(8,8,1)=VT(8,8,1)+vc24			// @TOT([DAYENDMAT2]DINTAFT)
	set VT(8,9,1)=VT(8,9,1)+vc29			// @TOT([DAYENDMAT2]DINTBEF)
	set VT(8,10,1)=VT(8,10,1)+vc12			// @TOT([DAYENDMAT2]NACRADJ)
	set VT(8,11,1)=VT(8,11,1)+vc22			// @TOT([DAYENDMAT2]NACRAFT)
	set VT(8,12,1)=VT(8,12,1)+vc17			// @TOT([DAYENDMAT2]NACRBEF)
	set VT(8,13,1)=VT(8,13,1)+vc13			// @TOT([DAYENDMAT2]NACRUADJ)
	set VT(8,14,1)=VT(8,14,1)+vc23			// @TOT([DAYENDMAT2]NACRUAFT)
	set VT(8,15,1)=VT(8,15,1)+vc18			// @TOT([DAYENDMAT2]NACRUBEF)
	set VT(8,16,1)=VT(8,16,1)+vc14			// @TOT([DAYENDMAT2]NINTADJ)
	set VT(8,17,1)=VT(8,17,1)+vc25			// @TOT([DAYENDMAT2]NINTAFT)
	set VT(8,18,1)=VT(8,18,1)+vc19			// @TOT([DAYENDMAT2]NINTBEF)
	set VT(8,19,1)=VT(8,19,1)+vc15			// @TOT([DAYENDMAT2]RINTADJ)
	set VT(8,20,1)=VT(8,20,1)+vc26			// @TOT([DAYENDMAT2]RINTAFT)
	set VT(8,21,1)=VT(8,21,1)+vc20			// @TOT([DAYENDMAT2]RINTBEF)
	set VT(8,22,1)=VT(8,22,1)+vc31			// @TOT([DAYENDMAT2]TAMT)
	quit

VSUM7	// Summary
	type public String %TIM,ANT,CID,CLS,DEPACR0,DEPACR1,DEPINT0,DEPINT1,DESC,GRP,I,IOSL,LNNAM,MATXSEQ,NAM,NAME,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(7) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="GROUP "_GRP.justify(3)_"   TOTALS: $"
	do VOM
	set VL="               "_"Adjustment:"
	set V=VT(7,4,1)					// @TOT([DAYENDMAT2]DACRADJ,)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,1,1)					// @TOT([DAYENDMAT2]AIACRADJ,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,10,1)				// @TOT([DAYENDMAT2]NACRADJ,)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,13,1)				// @TOT([DAYENDMAT2]NACRUADJ,)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,7,1)					// @TOT(DINTADJ,)
	set VL=VL_$J("",87-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,16,1)				// @TOT([DAYENDMAT2]NINTADJ,)
	set VL=VL_$J("",102-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,19,1)				// @TOT([DAYENDMAT2]RINTADJ,)
	set V=$J($FN(V,",",2),13) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",117-VL.length())_V		// @TOT([DAYENDMAT2]RINTADJ,)
	do VOM
	set VL="                "_"Beginning:"
	set V=VT(7,6,1)					// @TOT(DACRBEF,)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,3,1)					// @TOT([DAYENDMAT2]AIACRBEF,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,12,1)				// @TOT([DAYENDMAT2]NACRBEF,)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,15,1)				// @TOT([DAYENDMAT2]NACRUBEF,)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,9,1)					// @TOT(DINTBEF,)
	set VL=VL_$J("",87-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,18,1)				// @TOT([DAYENDMAT2]NINTBEF,)
	set VL=VL_$J("",102-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,21,1)				// @TOT([DAYENDMAT2]RINTBEF,)
	set V=$J($FN(V,",",2),13) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",117-VL.length())_V		// @TOT([DAYENDMAT2]RINTBEF,)
	do VOM
	set VL="               "_"==================================================================================================================="
	set V=$E(" ",1,1) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",131-VL.length())_V
	do VOM
	set VL="                   "_"Ending:"
	set V=VT(7,5,1)					// @TOT(DACRAFT,)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,2,1)					// @TOT([DAYENDMAT2]AIACRAFT,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,11,1)				// @TOT([DAYENDMAT2]NACRAFT,)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,14,1)				// @TOT([DAYENDMAT2]NACRUAFT,)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,8,1)					// @TOT([DAYENDMAT2]DINTAFT,)
	set VL=VL_$J("",87-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,17,1)				// @TOT([DAYENDMAT2]NINTAFT,)
	set VL=VL_$J("",102-VL.length())_$J($FN(V,",",2),13)
	set V=VT(7,20,1)				// @TOT([DAYENDMAT2]RINTAFT,)
	set V=$J($FN(V,",",2),13) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",117-VL.length())_V		// @TOT([DAYENDMAT2]RINTAFT,)
	do VOM
	set VL="" do VOM
	quit

VDTL8	// Detail
	type public String %TIM,ANT,CID,CLS,DEPACR0,DEPACR1,DEPINT0,DEPINT1,DESC,GRP,IOSL,LNNAM,MATXSEQ,NAM,NAME,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set V=vc8,VO=V set V=$E(V,1,12) do VP5 quit:VFMQ!verror.get()  set VL=V
	set V=$E(NAM,1,27) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",14-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="               "_"Adjustment:"
	set VL=VL_$J("",28-VL.length())_$J($FN(vc10,",",2),12)
	set VL=VL_$J("",43-VL.length())_$J($FN(vc11,",",2),12)
	set VL=VL_$J("",58-VL.length())_$J($FN(vc12,",",2),12)
	set VL=VL_$J("",73-VL.length())_$J($FN(vc13,",",2),12)
	set VL=VL_$J("",88-VL.length())_$J($FN(vc27,",",2),12)
	set VL=VL_$J("",103-VL.length())_$J($FN(vc14,",",2),12)
	set V=vc15,VO=V set V=$J($FN(V,",",2),12) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V		// [SYSDEV,DAYENDMAT2]RINTADJ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                "_"Beginning:"
	set VL=VL_$J("",28-VL.length())_$J($FN(vc28,",",2),12)
	set VL=VL_$J("",43-VL.length())_$J($FN(vc16,",",2),12)
	set VL=VL_$J("",58-VL.length())_$J($FN(vc17,",",2),12)
	set VL=VL_$J("",73-VL.length())_$J($FN(vc18,",",2),12)
	set VL=VL_$J("",88-VL.length())_$J($FN(vc29,",",2),12)
	set VL=VL_$J("",103-VL.length())_$J($FN(vc19,",",2),12)
	set V=vc20,VO=V set V=$J($FN(V,",",2),12) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V		// [SYSDEV,DAYENDMAT2]RINTBEF
	if 'VL.translate(" ").isNull() do VOM
	set VL="               "_"==================================================================================================================="
	set V=$E(" ",1,1) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",131-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                   "_"Ending:"
	set VL=VL_$J("",28-VL.length())_$J($FN(vc30,",",2),12)
	set VL=VL_$J("",43-VL.length())_$J($FN(vc21,",",2),12)
	set VL=VL_$J("",58-VL.length())_$J($FN(vc22,",",2),12)
	set VL=VL_$J("",73-VL.length())_$J($FN(vc23,",",2),12)
	set VL=VL_$J("",88-VL.length())_$J($FN(vc24,",",2),12)
	set VL=VL_$J("",103-VL.length())_$J($FN(vc25,",",2),12)
	set V=vc26,VO=V set V=$J($FN(V,",",2),12) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V		// [SYSDEV,DAYENDMAT2]RINTAFT
	if 'VL.translate(" ").isNull() do VOM
	set VL=$J(vc8,12)
	do VP11 quit:VFMQ!verror.get()  set V=$E(LNNAM,1,20)
	set VL=VL_$J("",14-VL.length())_V
	set VL=VL_$J("",43-VL.length())_$J($FN(vc31,",",2),12)
	set VL=VL_$J("",57-VL.length())_$J($FN(vc32,",",2),12)
	set VL=VL_$J("",75-VL.length())_$J(vc33,8,5)
	set VL=VL_$J("",83-VL.length())_"%"
	set VL=VL_$J("",90-VL.length())_$J(vc34,8,5)
	set VL=VL_$J("",98-VL.length())_"%"
	set VL=VL_$J("",105-VL.length())_$J(vc35,8,5)
	set V="%" do VP12 quit:VFMQ!verror.get()
	set VL=VL_$J("",113-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit

VSUM8	// Summary
	type public String %TIM,ANT,CID,CLS,DEPACR0,DEPACR1,DEPINT0,DEPINT1,DESC,GRP,I,IOSL,LNNAM,MATXSEQ,NAM,NAME,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(8) quit
	if VLC+8>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="         "_"TYPE "_TYPE.justify(4)_"  TOTALS:  $"
	set V=VT(8,22,1)				// @TOT([DAYENDMAT2]TAMT,)
	set V=$J($FN(V,",",2),13) do VP13 quit:VFMQ!verror.get()
	set VL=VL_$J("",46-VL.length())_V		// @TOT([DAYENDMAT2]TAMT,)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="TYPE "_TYPE.justify(4)_"   TOTALS: $"
	if 'VL.translate(" ").isNull() do VOM
	set VL="               "_"Adjustment:"
	set V=VT(8,4,1)					// @TOT([DAYENDMAT2]DACRADJ,)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,1,1)					// @TOT([DAYENDMAT2]AIACRADJ,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,10,1)				// @TOT([DAYENDMAT2]NACRADJ,)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,13,1)				// @TOT([DAYENDMAT2]NACRUADJ,)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,7,1)					// @TOT([DAYENDMAT2]DINTADJ,)
	set VL=VL_$J("",87-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,16,1)				// @TOT([DAYENDMAT2]NINTADJ,)
	set VL=VL_$J("",102-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,19,1)				// @TOT([DAYENDMAT2]RINTADJ,)
	set V=$J($FN(V,",",2),13) do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",117-VL.length())_V		// @TOT([DAYENDMAT2]RINTADJ,)
	do VOM
	set VL="                "_"Beginning:"
	set V=VT(8,6,1)					// @TOT(DACRBEF,)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,3,1)					// @TOT([DAYENDMAT2]AIACRBEF,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,12,1)				// @TOT([DAYENDMAT2]NACRBEF,)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,15,1)				// @TOT([DAYENDMAT2]NACRUBEF,)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,9,1)					// @TOT(DINTBEF,)
	set VL=VL_$J("",87-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,18,1)				// @TOT([DAYENDMAT2]NINTBEF,)
	set VL=VL_$J("",102-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,21,1)				// @TOT([DAYENDMAT2]RINTBEF,)
	set V=$J($FN(V,",",2),13) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",117-VL.length())_V		// @TOT([DAYENDMAT2]RINTBEF,)
	do VOM
	set VL="               "_"==================================================================================================================="
	set V=$E(" ",1,1) do VP16 quit:VFMQ!verror.get()
	set VL=VL_$J("",131-VL.length())_V
	do VOM
	set VL="                   "_"Ending:"
	set V=VT(8,5,1)					// @TOT(DACRAFT,)
	set VL=VL_$J("",27-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,2,1)					// @TOT([DAYENDMAT2]AIACRAFT,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,11,1)				// @TOT([DAYENDMAT2]NACRAFT,)
	set VL=VL_$J("",57-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,14,1)				// @TOT([DAYENDMAT2]NACRUAFT,)
	set VL=VL_$J("",72-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,8,1)					// @TOT([DAYENDMAT2]DINTAFT,)
	set VL=VL_$J("",87-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,17,1)				// @TOT([DAYENDMAT2]NINTAFT,)
	set VL=VL_$J("",102-VL.length())_$J($FN(V,",",2),13)
	set V=VT(8,20,1)				// @TOT([DAYENDMAT2]RINTAFT,)
	set V=$J($FN(V,",",2),13) do VP17 quit:VFMQ!verror.get()
	set VL=VL_$J("",117-VL.length())_V		// @TOT([DAYENDMAT2]RINTAFT,)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ANT,CID,CLS,CONAM,DEPACR0,DEPACR1,DEPINT0,DEPINT1,DESC,GRP,LNNAM,MATXSEQ,NAM,NAME,RID,RN,TYPE,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+12,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",41-VL.length())_"- "_ANT.get()
	set VL=VL_$J("",99-VL.length())_"Effective:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Matrix: "_vc3
	do VP18 quit:VFMQ!verror.get()  set V=$E($S(CLS="L":"   Loan", CLS="D":"Deposit", 1:"       ")_" Group: "_GRP,1,20)
	set VL=VL_$J("",24-VL.length())_V
	set VL=VL_$J("",74-VL.length())_"------- Adjustment Transaction Codes -------"
	do VOM
	set VL="  "_"Seq: "_vc4
	set V="Product: "_vc7 do VP19 quit:VFMQ!verror.get()
	set VL=VL_$J("",30-VL.length())_V
	set VL=VL_$J("",53-VL.length())_"Currency: "
	set VL=VL_$J("",63-VL.length())_$E(vc9,1,3)
	set VL=VL_$J("",74-VL.length())_"Acr Int DR:"
	set VL=VL_$J("",86-VL.length())_$E(DEPACR0,1,8)
	set VL=VL_$J("",98-VL.length())_"Acr Int CR:"
	set VL=VL_$J("",110-VL.length())_$E(DEPACR1,1,8)
	do VOM
	set VL="                                                                          "_"INT "_$S(CLS="D":"EXP",1:"INC")_" DR:"
	set VL=VL_$J("",86-VL.length())_$E(DEPINT0,1,8)
	set V=$E(DEPINT1,1,8) do VP20 quit:VFMQ!verror.get()
	set VL=VL_$J("",110-VL.length())_V
	do VOM
	set VL="=================================================================================================================================="
	do VOM
	set VL="                                               "_"Accrual        -------------- Average --------------       New Loan"
	set V=$E(" ",1,1) do VP21 quit:VFMQ!verror.get()
	set VL=VL_$J("",131-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_"Account  Name                          Adjustment        Balance       Old Rate       New Rate         Rate"
	set V=$E(" ",1,1) do VP22 quit:VFMQ!verror.get()
	set VL=VL_$J("",131-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                "_"----------------------- Accrual ---------------------  ------------------ Interest ---------------"
	set V=$E(" ",1,1) do VP23 quit:VFMQ!verror.get()
	set VL=VL_$J("",131-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_"Account  Name              Positive      Avail Int       Negative     Neg Unauth       Positive       Negative       Residual"
	set V=$E(" ",1,1) do VP24 quit:VFMQ!verror.get()
	set VL=VL_$J("",131-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="=================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - @TOT([DAYENDMAT2]RINTADJ,,E,13)

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP2	// Column post-processor - @TOT([DAYENDMAT2]RINTBEF,,E,13)

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP3	// Column post-processor - Variable: " "

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP4	// Column post-processor - @TOT([DAYENDMAT2]RINTAFT,,E,13)

 type public String CLS,V,VL
 if CLS'="D" set (V,VL)=""
	quit

VP5	// Column post-processor - Variable: CID

	type public String vc36
 type public String NAM
 set NAM=vc36
	quit

VP6	// Column post-processor - Variable: NAM

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP7	// Column post-processor - [SYSDEV,DAYENDMAT2]RINTADJ

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP8	// Column post-processor - [SYSDEV,DAYENDMAT2]RINTBEF

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP9	// Column post-processor - Variable: " "

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP10	// Column post-processor - [SYSDEV,DAYENDMAT2]RINTAFT

 type public String CLS,V,VL
 if CLS'="D" set (V,VL)=""
	quit

VP11	// Column pre-processor - Variable: LNNAM

	type public String vc37
 type public String CLS,LNNAM

 set LNNAM=""

 if CLS'="L" quit

 type Number ACN=vc37

 type ResultSet rs=Db.select("NAM","CIF","ACN=:ACN")
 if rs.next() set LNNAM=rs.getCol("NAM")  
	quit

VP12	// Column post-processor - %

 type public String CLS,V,VL

 if CLS'="L" set (V,VL)=""
	quit

VP13	// Column post-processor - @TOT([DAYENDMAT2]TAMT,,E,13)

 type public String CLS,V,VL

 if CLS'="L" set (V,VL)=""
	quit

VP14	// Column post-processor - @TOT([DAYENDMAT2]RINTADJ,,E,13)

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP15	// Column post-processor - @TOT([DAYENDMAT2]RINTBEF,,E,13)

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP16	// Column post-processor - Variable: " "

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP17	// Column post-processor - @TOT([DAYENDMAT2]RINTAFT,,E,13)

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP18	// Column pre-processor - Variable: $S(CLS="L":"   Loan"

	type public String vc5,vc6,vc7
 type public String CLS,GRP,TYPE

 set CLS=vc5
 set GRP=vc6
 set TYPE=vc7
	quit

VP19	// Column post-processor - Product: <<TYPE>>

 type public Number TYPE
 type public String DEPACR0,DEPACR1,DEPINT0,DEPINT1

 set (DEPACR0,DEPACR1,DEPINT1,DEPINT0)=""

 if TYPE.isNull() quit

 type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE",1)
 if prodctl.getMode()=1 do {
        set DEPACR0=prodctl.dradin
        set DEPACR1=prodctl.cradin
        set DEPINT0=prodctl.dradie
        set DEPINT1=prodctl.cradie
        }

	quit

VP20	// Column post-processor - Variable: DEPINT1

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP21	// Column post-processor - Variable: " "

 type public String CLS,V,VL

 if CLS'="L" set (V,VL)=""
	quit

VP22	// Column post-processor - Variable: " "

 type public String CLS,V,VL

 if CLS'="L" set (V,VL)=""
	quit

VP23	// Column post-processor - Variable: " "

 type public String CLS,V,VL

 if CLS'="D" set (V,VL)=""
	quit

VP24	// Column post-processor - Variable: " "

 type public String CLS,V,VL
 if CLS'="D" set (V,VL)=""
	quit
