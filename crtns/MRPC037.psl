public MRPC037(String return, Number versn, Number ACN, String from, String sellist, String group, String where, Boolean primary, String hhtyp)
	/*
	Aggregate date from accounts linked to CIF

	ORIG:  FSANCHEZ - 11 JUN 1996

	Return selected aggregate data from accounts linked to a customer

	KEYWORDS: MRPC,CIF

	ARGUMENTS:
		. return 	Return Data  			/MECH=REFNAM:W
				CRLF separated records with each
				record containing each of the group
				by columns, count of accounts included
				in the group, and the requested fields,
	    			separated by tabs, in the order indicated
	    			in the select statement.

	   	. versn  	^MRPC037 version number
	     			Current version = 1

	   	. ACN  		Customer Number
	   	
	   	. from  	From Table name - single table only

	   	. sellist 	List of items for which we will
	   			calculate aggregates

	   	. group  	Group by column list  		/NOREQ

	   	. where  	Where Clause   			/NOREQ
	     		 	Other than ACN

	   	. primary 	Primary relationship only 	/NOREQ/DFT=0

	   	. hhtyp  	Include Houshold Type  		/NOREQ/TBL=HHLD

	RETURNS:
	   	. $$ 	Error message
	    		Null = no error

	---- Revision History ------------------------------------------------
	
	01/11/06 - RussellDS - CR17693
		   Modify to eliminate messing with exe array.  Just get data
		   and group on own.
		   
		   Clean up PSL code and header documentation.
		   
	04/17/02 - CHHABRIAS - 49794
		   Converted to PSL
	*/
	
	type Number CNT(), grplen, sellen
	type String AGG(), GRP, select, TAB

	// Version number of client message is not compatible with server
	if (versn <> 1) quit $$ERRMSG^PBSUTL($$^MSG(2951))
	
	set return = ""
	
	set TAB = 9.char()

	// Default group
	if group.get().isNull() set group = "CID"

	set select = "CID,"_group_","_sellist
	if where.get().isNull() set where = ""
	else  set where = where_" AND "
	set where = where_"RELCIF.ACN=:ACN AND RELCIF.CID="_from_".CID"
	if primary.get() set where = where_" AND "_from_".ACN=:ACN"
	
	set grplen = group.length(",")
	set sellen = sellist.length(",")
	
	do ACCUM(select, "RELCIF,"_from, where, .CNT(), .AGG(), grplen, sellen)
	
	if 'CNT.data() do { quit ""			// No data
	
		set return = $$V2LV^MSG("")
	}
	
	if 'hhtyp.get().isNull() do {
		
		set where = "RELCIF.CID="_from_".CID AND RELCIF.ACN IN "
		set where = where_"(SELECT CIFHH0.MACN FROM CIFHH0 WHERE CIFHH0.ACN=:ACN AND CIFHH0.HHTYP='"_hhtyp_"')"
		
		do ACCUM(select, "RELCIF,"_from, where, .CNT(), .AGG(), grplen, sellen)
	}

	set GRP = ""
	for  set GRP = AGG(GRP).order() quit:GRP.isNull()  do {

		if 'AGG(GRP).isNull() do {
		
			if 'return.isNull() set return = return_$C(13,10)
			set return = return_GRP_TAB_CNT(GRP)_TAB_AGG(GRP)
		}
	}

	set return = $$V2LV^MSG(return)
	
	quit ""
	
	
ACCUM(String select,	// Select list
      String from,	// From clause
      String where,	// Where clause
      Number CNT(),	// Count accumulator		/MECH=REFARR:W
      String AGG(),	// Aggregate accumulator	/MECH=REFAFF:W
      Number grplen,	// Number of pieces of group
      Number sellen)	// Number of pieces of sellist
      
	/*
	Accumulate counts and totals for sellist items by group
	*/
	
	type Number I
	type String GRP, SEL, TAB
	
	set TAB = 9.char()

	// Accept dynamic SQL statement
	#ACCEPT Date=01/12/06; Pgm=RussellDS; CR=17693
	type ResultSet rs = Db.select(select, from, where)
	
	while rs.next() do {
		
		type String row 
		
		set row = rs.getRow()
		
		set GRP = row.piece(TAB, 2, grplen + 1)
		set SEL = row.piece(TAB, grplen + 2, 1 + grplen + sellen)
		
		set CNT(GRP) = CNT(GRP).get() + 1
		
		for I = 1:1:sellen set AGG(GRP).piece(TAB, I) = AGG(GRP).get().piece(TAB, I) + SEL.piece(TAB, I)
	}
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60277^57101^Dan Russell^3394"	// Signature - LTD^TIME^USER^SIZE
