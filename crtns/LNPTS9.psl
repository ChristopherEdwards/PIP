LNPTS9(RecordLN ln,		// Loan account		/REF:RW
       RecordTTX ttx)		// Transaction		/REF:RW

	/*
	Loan Late Charge Assessment

	---- Revision History -------------------------------------------------
	
	07/24/07 - PUTTASWH - CR 28332
		   Modified LNPTS9 section to insert "VL" while VAT on Late 
		   Charge Amount Due entry is filed into History of bills for 
		   satisfied (HISTSB).
		   
	07/16/07 - PUTTASWH - CR 28194
		   Modified VAT section to insert "VL" while VAT on Late Charge 
		   Amount Due entry is filed into History of bills for 
		   satisfied (HISTSB).
		   
	05/10/07 - SENTHIL.J KUMAR - CR 27015
		   Modified LCHGAMT.isNull() check to 'LCHGAMT to prevent missing 
		   update of the penalty position in ttx.tamt, and the appearance 
		   of incorrect capitalization of late charges in history when 
		   LNPOPT.CWA flag is set to "N".
		  
	03/13/07 - SENTHIL.J KUMAR / SmithCD - CR 24945
		   Enhanced for VAT on Late Charge processing. Added public 
		   VAT tag, to be called by VAT on late charge asessment 
		   transaction codes. Consolidated sections.
		   Also modiied the LNPTS9 section to set the ZAMT to zero 
		   before quitting.
	
	05/15/06 - KELLYP - CR 21249
		   Modified SET section to set LN.DLCAF=0 instead of null. Since
		   DLCAF is a logical field, it must always be defined.
	
	03/08/06 - TITOVE - CR 19832
		   Modified SET section to correctly update LN.DLCAF
		   and prevent null subscript when POPT is null.

	02/26/06 - TITOVE - CR 19733
		   Modified PRBLN section to pass correct arguments to
		   CURRCID^LNPTS8.

	*/

	type public Number ZAMT

	type String ICPA, POPT
	type Number BALINT, LCHGAMT, VATAMT

	// If Update Tran Detail: D:Penalty L:Late Charge is set already by 
	// the caller, use it; otherwise, define it with transaction amount
	set LCHGAMT = ttx.penalty
	if 'LCHGAMT do {
		set LCHGAMT = ZAMT
		do GL^LNPTSU(.ttx, LCHGAMT, 4)
		}	
	
	// Tran Detail: D:St W/H L:Val Tax Lchg
	set VATAMT=ttx.vatlchg

	set BALINT = ln.balint
	set POPT = ln.popt
	set ICPA = ln.icpa
	
	if 'ICPA.isNull() do {
		type RecordUTBLICPA utblicpa = Db.getRecord("UTBLICPA", "KEY=:ICPA")
		set ICPA = utblicpa.prio
		}
	
	if 'POPT.isNull() do {
		type RecordLNPOPT lnpopt = Db.getRecord("LNPOPT", "GRP=:ln.grp,POPT=:POPT")
		set POPT = lnpopt.popt
		}
	
	set ttx.tso = $$FIELDIN^UTSO(ttx.tso, "LCHGADJ")

	if ICPA.extract(6) set BALINT = ln.balint + LCHGAMT
	
	do %HSEQ^LNPTSU(.ttx, "*#L#"_LCHGAMT)
	if VATAMT do %HSEQ^LNPTSU(.ttx, "*#VL#"_VATAMT)
		
	do SET(.ln, POPT, LCHGAMT, %EffectiveDate, VATAMT)
	
	set ZAMT = ZAMT - LCHGAMT
	set ZAMT = ZAMT - VATAMT
	if ln.paoi=1 do PRBLN(.ln, .ttx, LCHGAMT)
	
	set ZAMT=0
	
	quit 

	
public SET(RecordLN ln,			// Loan account			/REF:RW
	   String POPT,			// Penalty plan
	   Number AMT,			// Late charge amount
	   Date %EffectiveDate,		// Effective date
	   Number VATAMT)		// Value added tax amount

	// Update loan account fields related to late charge
	
	type public Date CUVAR2
	type public Number BALINT
	
	type Number FIN1

	// # Assessed Life
	set ln.lcanlf = ln.lcanlf + 1

	// $ Assessed Life
	set ln.papl = ln.papl + AMT

	set FIN1 = $$BOFY^SCADAT(CUVAR2, 1)

	if (CUVAR.YEOFF)&(%EffectiveDate < FIN1)&(CUVAR2 '> ((FIN1 + CUVAR.YEOFF) - 1)) set ln.papy = ln.papy + AMT
	else  do {
		// # Assessed YTD
		set ln.lcan = ln.lcan + 1

		// $ Assessed YTD
		set ln.paytd = ln.paytd + AMT
		}
	/*
	Late charge assessed tax year-date and prior tax year are NOT defined
	fields in functional spec. for tax year so far, else will be set here.
	*/	

	// Update miscellaneous account fields

	// Int Calc Bal
	set ln.balint = BALINT

	// Late Charge Due
	set ln.lchg = ln.lchg + AMT
	
	if VATAMT set ln.vatlchgdue = ln.vatlchgdue + VATAMT

	// Chg Assessed Thru
	set ln.lcla = %EffectiveDate

	// Daily Chg Flag
	if ln.bseq do {

		set ln.dlcaf = 0
		
		if POPT.isNull() quit
		
		type RecordLNPOPT lnpopt = Db.getRecord("LNPOPT", "GRP = :ln.grp, POPT = :POPT", 1)
		
		if lnpopt.cdf set ln.dlcaf = 1
		}
	
	quit


PRBLN(RecordLN ln,		// Loan account			/REF:RW
      RecordTTX ttx,		// Transaction			/REF:RW
      Number TAMT)		// Transaction amount

	// Apply late charges to linked current sub-account for problem loans

	type Number CURRCID
	type String TSO, SUBTLO

	set CURRCID = $$CURRCID^LNPTS8(ln.cid, %EffectiveDate)
	quit:'CURRCID
	
	type RecordLN ln1 = Db.getRecord("LN", "CID=:CURRCID")

	type RecordPRODCTL prodctl1 = Db.getRecord("PRODCTL", "TYPE=:ln1.type")

	type RecordUTBLGLSC utblglsc1 = Db.getRecord("UTBLGLSC", "GLSC=:ln1.glsc")

	set TSO = $$FIELDIN^UTSO("","LCHGADJ")
	if '%UserStation.isNull() set SUBTLO = %UserStation
	else  set SUBTLO = $$TLO^UTLO

	type RecordTTX ttxpri = Class.new("RecordTTX")

	// DRTRPE - Late charge debit
	do POST^LNTRB(.ttxpri, CURRCID, prodctl1.drtrpe, TAMT, %EffectiveDate, SUBTLO, TSO, , ln1.crcd)
	
	// LGLL - late charge income
	do POST^LNTRB(.ttxpri, utblglsc1.lgll, "MCR", TAMT, %EffectiveDate, SUBTLO, TSO, , ln1.crcd)
	
	quit
	
	
public	VAT(RecordLN ln,		// Loan account		/REF:RW
	    RecordTTX ttx,		// Transaction		/REF:RW
	    RecordTRN trn)		// Transaction code	/REF:R

	/*
	Assess Value Added Tax on late charges
	
	Called externally by VAT on late charge assessment adjustment 
	transaction codes.
	*/

	type public Number ZAMT

	// Update Tran Detail: L:Val Tax Lchg (ttx.vatlchg)
	do GL^LNPTSU(.ttx, ZAMT, 17)

	do %HSEQ^LNPTSU(.ttx, "*#VL#"_ZAMT)
	
	set ln.vatlchgdue = ln.vatlchgdue + ZAMT	
	
	set ZAMT = 0
    
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60835^24927^Hema Puttaswamy^5226"	// Signature - LTD^TIME^USER^SIZE
