R01S219	// SCA166 - Account History Purge Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String P(),PD()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA166"
	set RN="Account History Purge Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String P(),PD()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CLS,CONAM,GLDESC,GLDESC(),P,PD,POU,PTD1,RID,RN,SPR,TAMT,TCMT,V,V1,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA166",RN="Account History Purge Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA166","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[SCA166]CID#1#12,[DEP]TITLE1#15#40"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"SCA166.PID=:%ProcessID AND SCA166.CID=DEP.CID AND "
		set VWHERE=VWHERE_"SCA166.CID=HIST.CID AND SCA166.TSEQ=HIST.TSEQ"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Account History Purge Report"
		set VBNRINFO("PGM")="R01S219"
		set VBNRINFO("RID")="SCA166"
		set VBNRINFO("TABLES")="SCA166,DEP,HIST"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,SCA166]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SCA166]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,SCA166]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("HIST.TAMT,SCA166.PID,SCA166.CID,SCA166.TSEQ,DEP.TITLE1,HIST.EFD,HIST.TSO,HIST.TJD,HIST.TSEQ,HIST.ETC,HIST.TOT,HIST.BRCD,HIST.TLO,HIST.TRC,HIST.UID,HIST.ENDBAL,HIST.SPR,HIST.PRIN,HIST.TCMT,HIST.INT,DEP.CLS,HIST.ITC,HIST.XHS16","SCA166,DEP,HIST","SCA166.PID=:%ProcessID AND SCA166.CID=DEP.CID AND SCA166.CID=HIST.CID AND SCA166.TSEQ=HIST.TSEQ","SCA166.PID,SCA166.CID,SCA166.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc3,vovc4
	set vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// HIST.TAMT
	set vc2=V.piece($C(9),2)			// SCA166.PID
	set vc3=V.piece($C(9),3)			// SCA166.CID
	set vc4=V.piece($C(9),4)			// SCA166.TSEQ
	set vc5=V.piece($C(9),5)			// DEP.TITLE1
	set vc6=V.piece($C(9),6)			// HIST.EFD
	set vc7=V.piece($C(9),7)			// HIST.TSO
	set vc8=V.piece($C(9),8)			// HIST.TJD
	set vc9=V.piece($C(9),9)			// HIST.TSEQ
	set vc10=V.piece($C(9),10)			// HIST.ETC
	set vc11=V.piece($C(9),11)			// HIST.TOT
	set vc12=V.piece($C(9),12)			// HIST.BRCD
	set vc13=V.piece($C(9),13)			// HIST.TLO
	set vc14=V.piece($C(9),14)			// HIST.TRC
	set vc15=V.piece($C(9),15)			// HIST.UID
	set vc16=V.piece($C(9),16)			// HIST.ENDBAL
	set vc17=V.piece($C(9),17)			// HIST.SPR
	set vc18=V.piece($C(9),18)			// HIST.PRIN
	set vc19=V.piece($C(9),19)			// HIST.TCMT
	set vc20=V.piece($C(9),20)			// HIST.INT
	set vc21=V.piece($C(9),21)			// DEP.CLS
	set vc22=V.piece($C(9),22)			// HIST.ITC
	set vc23=V.piece($C(9),23)			// HIST.XHS16
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1
 type public String CLS,P,PD,TAMT,GLDESC()
 type Number I,X

 set TAMT=vc1
 for I=4:1:15 do {
	set X=TAMT.piece("#",I)
	set P(I)="",PD(I)=""
	if X set P(I)=X,PD(I)=GLDESC(CLS,I)
	}
	quit

VPREAQ	// Pre-processor (after query)

 type public String GLDESC
 type Number I

 for I=4:1:15 do {
	type RecordSTBLGLDESCD stblgldescd=Db.getRecord("STBLGLDESCD","KEY=:I",1)
	if stblgldescd.getMode() set GLDESC("D",I)=stblgldescd.sdesc
	}
 
 for I=4:1:15 do {
	type RecordSTBLGLDESCL stblgldescl=Db.getRecord("STBLGLDESCL","KEY=:I",1)
	if stblgldescl.getMode() set GLDESC("L",I)=stblgldescl.sdesc
	}

 quit

SPR(TCMT) // [SYSDEV,HIST]SPR

 type public String V,V1
 type String SPR

 set SPR=V,V1="" if 'V.isNull() quit

 quit:TCMT.isNull()

 if TCMT["["=0 set V=TCMT.extract(1,28),V1=TCMT.extract(29,56) if 'V1.isNull() do SPLIT quit

 do TCMT^DEPDI set V=TCMT.extract(1,28),V1=TCMT.extract(29,56) if 'V1.isNull() do SPLIT 

 quit

TCMT(TCMT) // [SYSDEV,HIST]TCMT

 type public Number SPR
 type public String V,V1

 set SPR=V

 if SPR.isNull() set V=V1,V1="" quit

 quit:TCMT.isNull()

 if TCMT["["=0 set V=TCMT.extract(1,28),V1=TCMT.extract(29,56) if 'V1.isNull() do SPLIT quit

 do TCMT^DEPDI set V=TCMT.extract(1,28),V1=TCMT.extract(29,56) if 'V1.isNull() do SPLIT 
 
 quit

SPLIT // Split comment after space

 type public String TCMT,V,V1
 type String P
 type Number I

 for I=1:1:29 do {
	set P=V.extract(29-I,29-I)
	if P=" " do { quit
		set V=V.extract(1,29-I)
		set V1=TCMT.extract((30-I),(30-I+28))
		}
	}
	quit

VPREBQ	// Pre-processor (before query)

 type public String P(),PD()

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc2'=+vc2) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(+vovc3'=+vc3) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL2	// Detail
	type public String %TIM,CLS,GLDESC,GLDESC(),IOSL,P,P(),PD,PD(),POU,PTD1,SPR,TAMT,TCMT,V,V1,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc3,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",14-VL.length())_$E(vc5,1,40)
	do VOM
	quit

VDTL3	// Detail
	type public String %TIM,CLS,GLDESC,GLDESC(),IOSL,P,P(),PD,PD(),POU,PTD1,SPR,TAMT,TCMT,V,V1,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+16>IOSL do VHDG0 quit:VFMQ

	set V=vc6,VO=V set V=$J($$DAT^%ZM(V),10) do VP2 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",61-VL.length())_$E(vc7,1,12)
	do VP3 quit:VFMQ!verror.get()  set V=$E(POU,1,3)
	set VL=VL_$J("",81-VL.length())_V
	do VOM
	set V=vc8,VO=V set V=$J($$DAT^%ZM(V),10) do VP4 quit:VFMQ!verror.get()  set VL=V
	do VP5 quit:VFMQ!verror.get()  set V=$E(PTD1,1,4)
	set VL=VL_$J("",12-VL.length())_V
	set VL=VL_$J("",17-VL.length())_$J(vc9,4)
	set VL=VL_$J("",22-VL.length())_$E(vc10,1,8)
	set V=vc11,VO=V set V=$S(+V=0:$J("",18),1:$J($FN(vc11,"P",2),18)) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",30-VL.length())_V		// [SYSDEV,HIST]TOT
	set VL=VL_$J("",49-VL.length())_$J(vc12,2)
	set VL=VL_$J("",51-VL.length())_"-"
	set VL=VL_$J("",52-VL.length())_$E(vc13,1,8)
	set VL=VL_$J("",61-VL.length())_$J(vc14,15)
	set VL=VL_$J("",78-VL.length())_$E(vc15,1,6)
	set VL=VL_$J("",85-VL.length())_$J(vc16,18,2)
	set V=vc17,VO=V set V=$E(V,1,28) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",104-VL.length())_V		// [SYSDEV,HIST]SPR
	if 'VL.translate(" ").isNull() do VOM
	set V=vc18,VO=V set V=$S(+V=0:$J("",18),1:$J($FN(vc18,"P",2),18)) do VP8 quit:VFMQ!verror.get()  set VL="                              "_V
	set V=vc19,VO=V set V=$E(V,1,28) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",104-VL.length())_V		// [SYSDEV,HIST]TCMT
	if 'VL.translate(" ").isNull() do VOM
	set V=vc20,VO=V set V=$S(+V=0:$J("",18),1:$J($FN(vc20,"P",2),18)) do VP10 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",104-VL.length())_$E(V1,1,28)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(4)=0:$J("",14),1:$J($FN(P(4),"P",2),14)) do VP11 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(4),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(5)=0:$J("",14),1:$J($FN(P(5),"P",2),14)) do VP12 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(5),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(6)=0:$J("",14),1:$J($FN(P(6),"P",2),14)) do VP13 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(6),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(7)=0:$J("",14),1:$J($FN(P(7),"P",2),14)) do VP14 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(7),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(8)=0:$J("",14),1:$J($FN(P(8),"P",2),14)) do VP15 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(8),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(9)=0:$J("",14),1:$J($FN(P(9),"P",2),14)) do VP16 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(9),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(10)=0:$J("",14),1:$J($FN(P(10),"P",2),14)) do VP17 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(10),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(11)=0:$J("",14),1:$J($FN(P(11),"P",2),14)) do VP18 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(11),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(12)=0:$J("",14),1:$J($FN(P(12),"P",2),14)) do VP19 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(12),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(13)=0:$J("",14),1:$J($FN(P(13),"P",2),14)) do VP20 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(13),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(14)=0:$J("",14),1:$J($FN(P(14),"P",2),14)) do VP21 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(14),1,7)
	if 'VL.translate(" ").isNull() do VOM
	set V=$S(+P(15)=0:$J("",14),1:$J($FN(P(15),"P",2),14)) do VP22 quit:VFMQ!verror.get()  set VL="                              "_V
	set VL=VL_$J("",45-VL.length())_$E(PD(15),1,7)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CLS,CONAM,GLDESC,GLDESC(),P,P(),PD,PD(),POU,PTD1,RID,RN,SPR,TAMT,TCMT,V1,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="Anticipated Archived/Purged History Report (SCA166)                                                   System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="EFD  Account  Title                                          Source              POU"
	do VOM
	set VL="Date        Paid Seq# TC             Amount      Location    Trace#          User ID            Balance Spray# / Comment"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,SCA166]CID

	type public String vc21
 type public String CLS

 set CLS=vc21
	quit

VP2	// Column post-processor - [SYSDEV,HIST]EFD

 type public Date V
 type String VZMDAT

 set VZMDAT=V.toString("MM-DD-YEAR")
 set V=$S(V?5N:VZMDAT.extract(1,5),1:V)
	quit

VP3	// Column pre-processor - Variable: POU

	type public String vc22
	type public String ITC,POU

	set ITC=vc22
 
	// PMed
	set POU=$S(ITC.extract(8):"P",1:" ")

	// Off-line
	set POU=POU_$S(ITC.extract(10):"O",1:" ")

	// Passbook updated
	set POU=POU_$S(ITC.extract(11):"U",1:" ")

	quit 

VP4	// Column post-processor - [SYSDEV,HIST]TJD

 type public Date V
 type String VZMDAT

 set VZMDAT=V.toString("MM-DD-YEAR")
 set V=$S(V?5N:VZMDAT.extract(1,5),1:V)
	quit

VP5	// Column pre-processor - Variable: PTD1

	type public String vc23,vc22
 type public String CLS,PTD1
 type String ITC

 if CLS="D" set PTD1="" quit

 set PTD1=vc23
 
 set PTD1=$S(PTD1?5N:$E($ZD(PTD1),1,5),1:"")

 set ITC=vc22

 if 'ITC.extract(1) set PTD1=""
	quit

VP6	// Column post-processor - [SYSDEV,HIST]TOT

	type public String vc1
 type public Number VO
 type public String CLS
 type String TAMT
 type public Number INT,PRIN

 set TAMT=vc1
 set PRIN=$S(TAMT["#":TAMT.piece("#",2),1:TAMT)

 set INT=TAMT.piece("#",3)

 if +VO=+PRIN set PRIN=0
 if +VO=+INT,(CLS="D") set INT=0
	quit

VP7	// Column post-processor - [SYSDEV,HIST]SPR

	type public String vc19
	type String TCMT

	set TCMT=vc19

	do SPR(TCMT)

	quit

VP8	// Column post-processor - [SYSDEV,HIST]PRIN

 type public Number PRIN
 type public String V,VL

 if PRIN=0 set VL="" quit

 // ~p1 Principal
 set V=$$^MSG(3665,V)
	quit

VP9	// Column post-processor - [SYSDEV,HIST]TCMT

	type public String vc19
	type String TCMT

	set TCMT=vc19

	do TCMT(TCMT)

	quit

VP10	// Column post-processor - [SYSDEV,HIST]INT

 type public String INT,VL,V

 if INT.isNull() set VL="" quit

 // ~p1 Interest/Dividend
 set V=$$^MSG(3664,V)

 
	quit

VP11	// Column post-processor - Variable: P(4)

 type public String P(),VL

 if P(4).isNull() set VL="" quit
 
	quit

VP12	// Column post-processor - Variable: P(5)

 type public String P(),VL

 if P(5).isNull() set VL="" quit
	quit

VP13	// Column post-processor - Variable: P(6)

 type public String P(),VL

 if P(6).isNull() set VL="" quit
	quit

VP14	// Column post-processor - Variable: P(7)

 type public String P(),VL

 if P(7).isNull() set VL="" quit
 
	quit

VP15	// Column post-processor - Variable: P(8)

 type public String P(),VL

 if P(8).isNull() set VL="" quit
 
	quit

VP16	// Column post-processor - Variable: P(9)

 type public String P(),VL

 if P(9).isNull() set VL="" quit

 
	quit

VP17	// Column post-processor - Variable: P(10)

 type public String P(),VL

 if P(10).isNull() set VL="" quit
 
	quit

VP18	// Column post-processor - Variable: P(11)

 type public String P(),VL

 if P(11).isNull() set VL="" quit
	quit

VP19	// Column post-processor - Variable: P(12)

 type public String P(),VL

 if P(12).isNull() set VL="" quit
 
	quit

VP20	// Column post-processor - Variable: P(13)

 type public String P(),VL

 if P(13).isNull() set VL="" quit
 
	quit

VP21	// Column post-processor - Variable: P(14)

 type public String P(),VL

 if P(14).isNull() set VL="" quit
 
	quit

VP22	// Column post-processor - Variable: P(15)

 type public String P(),VL

 if P(15).isNull() set VL="" quit
 
	quit
