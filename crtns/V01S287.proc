V01S287(%ProcessMode,RecordINDEX fINDEX)   // -  - SID= <INDXTST> Index Test Utility Screen
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="INDXTST",VPGM=$T(+0),VSNAME="Index Test Utility Screen"
 set vPSL=1
 set KEYS(1)=fINDEX.INDEX
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=9 do VPR(.fINDEX),VDA1(.fINDEX),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fINDEX) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fINDEX),VPR(.fINDEX),VDA1(.fINDEX)
 if %ProcessMode do VLOD(.fINDEX) quit:$G(ER)  do VPR(.fINDEX),VDA1(.fINDEX)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fINDEX)
	quit


VNEW(RecordINDEX fINDEX) // Initialize arrays if %O=0
 
 do VDEF(.fINDEX)
 do VLOD(.fINDEX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordINDEX fINDEX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordINDEX fINDEX) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=9
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordINDEX fINDEX) // Display screen prompts
 set VO="20||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,26,1,1,0,0,0,0,0,0)_"01T "
 set VO(2)=$C(1,27,28,1,0,0,0,0,0,0)_"01TInterest Index Test Utility "
 set VO(3)=$C(3,13,6,0,0,0,0,0,0,0)_"01TIndex:"
 set VO(4)=$C(3,44,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(5)=$C(4,6,13,0,0,0,0,0,0,0)_"01TIndex Offset:"
 set VO(6)=$C(4,45,11,0,0,0,0,0,0,0)_"01TIndex Type:"
 set VO(7)=$C(5,3,16,0,0,0,0,0,0,0)_"01TRounding Factor:"
 set VO(8)=$C(5,41,15,0,0,0,0,0,0,0)_"01TIndex Sub Type:"
 set VO(9)=$C(6,4,15,0,0,0,0,0,0,0)_"01TEffective Date:"
 set VO(10)=$C(6,43,13,0,0,0,0,0,0,0)_"01TBase Balance:"
 set VO(11)=$C(7,4,15,0,0,0,0,0,0,0)_"01TAccount Number:"
 set VO(12)=$C(7,42,14,0,0,0,0,0,0,0)_"01TAccount Class:"
 set VO(13)=$C(10,9,10,0,0,0,0,0,0,0)_"01TUnrounded:"
 set VO(14)=$C(10,51,5,0,0,0,0,0,0,0)_"01TRate:"
 set VO(15)=$C(11,6,13,0,0,0,0,0,0,0)_"01TAfter Offset:"
 set VO(16)=$C(11,43,13,0,0,0,0,0,0,0)_"01TAfter Limits:"
 set VO(17)=$C(13,11,7,2,0,0,0,0,0,0)_"01TBalance"
 set VO(18)=$C(13,26,4,2,0,0,0,0,0,0)_"01TRate"
 set VO(19)=$C(13,39,5,2,0,0,0,0,0,0)_"01TIndex"
 set VO(20)=$C(13,59,15,0,0,0,0,0,0,0)_"01TExpiration Date"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordINDEX fINDEX)  // Display screen data
 new V
 s BAL=$G(BAL)
 s CID=$G(CID)
 s CLS=$G(CLS)
 s DSC=$G(DSC)
 s EFD=$G(EFD)
 s IDX=$G(IDX)
 s INDTYP=$G(INDTYP)
 s OFF=$G(OFF)
 s R=$G(R)
 s RATE=$G(RATE)
 s RND=$G(RND)
 s RRATE=$G(RRATE)
 s SRATE=$G(SRATE)
 s TYPE=$G(TYPE)
 s URATE=$G(URATE)
 s WARN=$G(WARN)
 //
 set VO="35|21|13|"
 set VO(21)=$C(3,20,18,2,0,0,0,0,0,0)_"01T"_$G(IDX)
 set VO(22)=$C(3,57,20,2,0,0,0,0,0,0)_"01T"_$G(DSC)
 set VO(23)=$C(4,20,10,2,0,0,0,0,0,0)_"01T"_$G(OFF)
 set VO(24)=$C(4,57,20,2,0,0,0,0,0,0)_"01T"_$G(TYPE)
 set VO(25)=$C(5,20,10,2,0,0,0,0,0,0)_"01T"_$G(RND)
 set VO(26)=$C(5,57,20,2,0,0,0,0,0,0)_"01T"_$G(INDTYP)
 set VO(27)=$C(6,20,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM($G(EFD))
 set VO(28)=$C(6,57,15,2,0,0,0,0,0,0)_"01$"_$S($G(BAL)="":"",1:$G(BAL))
 set VO(29)=$C(7,20,12,2,0,0,0,0,0,0)_"01N"_$G(CID)
 set VO(30)=$C(7,57,3,2,0,0,0,0,0,0)_"01T"_$G(CLS)
 set VO(31)=$C(8,17,45,2,0,0,0,0,0,0)_"01T"_$G(WARN)
 set VO(32)=$C(10,20,10,2,0,0,0,0,0,0)_"01N"_$S($G(SRATE)="":"",1:$J($G(SRATE),0,6))
 set VO(33)=$C(10,57,10,2,0,0,0,0,0,0)_"01N"_$S($G(RATE)="":"",1:$J($G(RATE),0,6))
 set VO(34)=$C(11,20,10,2,0,0,0,0,0,0)_"01N"_$S($G(RRATE)="":"",1:$J($G(RRATE),0,6))
 set VO(35)=$C(11,57,10,2,0,0,0,0,0,0)_"01N"_$S($G(URATE)="":"",1:$J($G(URATE),0,6))
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+14,DY=14 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fINDEX)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordINDEX fINDEX)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,R(I))=$G(R(I))
 
 set VO(VX+1)=$C(DY,7,2,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",3)
 set VO(VX+2)=$C(DY,11,12,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",4)
 set V=$P(v1,"|",2) set VO(VX+3)=$C(DY,26,10,2,0,0,0,0,0,0)_"01N"_$S(V="":"",1:$J(V,0,6))
 set VO(VX+4)=$C(DY,39,18,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",1)
 set VO(VX+5)=$C(DY,59,18,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",7)
 set DY=DY+1,VX=VX+5
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordINDEX fINDEX)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=15,%MOD=5,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=13+%REPEAT,BLKSIZ=(60*%REPEAT)+223,PGM=$T(+0),DLIB="SYSDEV",DFID="INDEX"
 set OLNTB=VPB*1000
 
 for I=21:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,19,18)_"20T|*IDX|[*]@IDX"
 set %TAB(2)=$C(2,56,20)_"20T|*DSC|[*]@DSC"
 set %TAB(3)=$C(3,19,10)_"20T|*OFF|[*]@OFF"
 set %TAB(4)=$C(3,56,20)_"20T|*TYPE|[*]@TYPE"
 set %TAB(5)=$C(4,19,10)_"20T|*RND|[*]@RND"
 set %TAB(6)=$C(4,56,20)_"20T|*INDTYP|[*]@INDTYP"
 set %TAB(7)=$C(5,19,10)_"20D|*EFD|[*]@EFD"
 set %TAB(8)=$C(5,56,15)_"20$|*BAL|[*]@BAL"
 set %TAB(9)=$C(6,19,12)_"20N|*CID|[*]@CID"
 set %TAB(10)=$C(6,56,3)_"20T|*CLS|[*]@CLS"
 set %TAB(11)=$C(7,16,45)_"20T|*WARN|[*]@WARN"
 set %TAB(12)=$C(9,19,10)_"20N|*SRATE|[*]@SRATE|||||||6"
 set %TAB(13)=$C(9,56,10)_"20N|*RATE|[*]@RATE|||||||6"
 set %TAB(14)=$C(10,19,10)_"20N|*RRATE|[*]@RRATE|||||||6"
 set %TAB(15)=$C(10,56,10)_"20N|*URATE|[*]@URATE|||||||6"
 set %TAB(16)=$C(13,6,2)_"20N12403|*R(1)|[*]@R"
 set %TAB(17)=$C(13,10,12)_"20$12404|*R(1)|[*]@R|||||||2"
 set %TAB(18)=$C(13,25,10)_"20N12402|*R(1)|[*]@R|||||||6"
 set %TAB(19)=$C(13,38,18)_"20T12401|*R(1)|[*]@R"
 set %TAB(20)=$C(13,58,18)_"20T12407|*R(1)|[*]@R"
 do VTBL(.fINDEX)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordINDEX fINDEX) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordINDEX fINDEX
 do VPR(.fINDEX)
 do VDA1(.fINDEX)
 do ^DBSPNT()
 quit

VW(RecordINDEX fINDEX)
 do VDA1(.fINDEX)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordINDEX fINDEX)
 do VDA1(.fINDEX)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordINDEX fINDEX
 do VDA1(.fINDEX)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordINDEX fINDEX
 if sn="INDEX" do vSET1(.fINDEX,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordINDEX fINDEX,di,X)
 do fINDEX.setAuditFlag(1)
 set fINDEX.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordINDEX fINDEX
 if fid="INDEX" quit $$vREAD1(.fINDEX,di)
 quit ""
vREAD1(RecordINDEX fINDEX,di)
 quit fINDEX.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordINDEX fINDEX)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 /* Revision History
	03/22/06 - SmithCD - CR 20248
		   Cleaned up code.
 */
 type public Number OFF, RATE, RRATE, SRATE, TYPE, URATE
 type public String CLS, DSC, IDX, INDTYP, RND, WARN
 type public Date EFD, TEFD
 // load in local variables computed by UINDX and INDXTST
 set TYPE = INDXTST.piece("|", 3)
 set INDTYP = INDXTST.piece("|", 2)
 set IDX = INDXTST.piece("|", 13)
 set OFF = INDXTST.piece("|", 11)
 set RND = INDXTST.piece("|", 12)
 set DSC = INDXTST.piece("|", 1)
 set RATE = INDXTST.piece("|", 8)
 set SRATE = INDXTST.piece("|", 6)
 set URATE = INDXTST.piece("|", 7)
 set RRATE = INDXTST.piece("|", 9)
 set EFD = INDXTST.piece("|", 15)
 set TEFD = INDXTST.piece("|", 14)
 set CLS = INDXTST.piece("|", 16)
 if TEFD > EFD do {
	// *** Teaser in Effect
	set WARN = $$^MSG(6095)
	// ~p1- Expires on ~p2
	set WARN = $$^MSG(6096, WARN, TEFD.toString())
	}
 else  set WARN = ""
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
