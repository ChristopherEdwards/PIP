COMGRP	//;  V6.1 -Commission GroupTable Maintenance -  Screen Driver
	/*

	       ORIG: Vince Arpa  10/21/98
	       INIT:
	       DESC:

	  ---- Revision History------------------------------------------------

	   02/28/02 - CHHABRIAS - 49451
    		      Converted to PSL

	  ---------------------------------------------------------------------

	*/


NEW	//
	do INIT(0)
	quit


UPD	//
	do INIT(1)
	quit


INQ	//
	do INIT(2)
	quit


DEL	//
	do INIT(3)
	quit


INIT(%ProcessMode)
	new ERFLAG,GRP,MAX,VFMQ,OLNTB

	set %PG=0
	set %PAGE=1
	set ANT=0
	set DFT=0
	set MAX=12
	type RecordUTBLCOMGRPT fUTBLCGT
	do VPG(.fUTBLCGT)

	quit


VPG(RecordUTBLCOMGRPT fUTBLCGT)   	// Page control

	new FINISH
	set FINISH=0
	for  do { quit:FINISH
		if %PG=0 do VPG00 if ER set FINISH=1 quit
		if %PG>0 do VPG01(.fUTBLCGT)
		if "DFQ"[VFMQ do VER(.fUTBLCGT) set FINISH=1 quit
		set %PG=%PG+1
		}
	quit


VPG00   // Set up screen for Commission Group Table

	set %TAB("COMGRP")="[UTBLCOMGRPT]COMGRP/HLP=[UTBLCOMGRPT]COMGRP/TBL=[UTBLCOMGRPT]/XPP=D POSCGRP^COMGRP"
	if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)

	set %READ="@@%FN,,,COMGRP/REQ"
	set %NOPRMT="F"
	if %ProcessMode=2 set %READ=%READ_",,IO/REQ"

	do ^UTLREAD

	if VFMQ="Q" set ER=1 quit

	if %ProcessMode=2,IO'=$I do OPEN^SCAIO

	quit


VPG01(RecordUTBLCOMGRPT fUTBLCGT)   // Screen Set Up for data entry
	new %REPEAT,A,ZGRP

	set %REPEAT=MAX

	if %ProcessMode>0 do {
		set fUTBLCGT=Db.getRecord("UTBLCOMGRPT","COMGRP=:COMGRP")

		// Call function to load commission group table
		do LOAD
		}
	else  do {
		set fUTBLCGT=Class.new("RecordUTBLCOMGRPT")
		set fUTBLCGT.comgrp=COMGRP
		set GRP(1)="|"
		}

	if %ProcessMode'=2 do {
		for I=$O(GRP(""),-1)+1:1:MAX set GRP(I)="|"
		}

	do DRV^USID(%ProcessMode,"UTBLCOMGRP",.fUTBLCGT)

	quit


LOAD	// Load rate array for screen with commission groups

	new CPLAN,I,SEQ
	set SEQ=1
	set GRP(SEQ)="|"
	set CPLAN=""
	type ResultSet rs=Db.select("CPLAN","UTBLCOMGRP","COMGRP=:COMGRP")
	while rs.next() do {
		set CPLAN=rs.getCol("CPLAN")
	
		// Commission Plan
		set $P(GRP(SEQ),"|",1)=CPLAN

		// Used to check for duplicates
		set ZGRP(CPLAN)=""

		type RecordUTBLCOMPLN fUTBLCOM=Db.getRecord("UTBLCOMPLN","CPLAN=:CPLAN")

		// Description
		set $P(GRP(SEQ),"|",2)=fUTBLCOM.descr
		set SEQ=SEQ+1
		}

	quit


POSCGRP	// Post processor for Commission Group prompt

	if X="" quit
	if %OSAVE>0 quit

	// Group ~P1 Already Exists
	if Db.isDefined("UTBLCOMGRPT","COMGRP=:X") do {

		set ER=1
		set RM=$$^MSG(1171,X)
		}
	set I(3)=""
	quit


VER(RecordUTBLCOMGRPT fUTBLCGT) 	//
	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit

	do FILE(.fUTBLCGT)

	do END
	quit


FILE(RecordUTBLCOMGRPT fUTBLCGT)	// File data

	new cnt,i

	/*
	 First file the top level information and then file the individual
	 commission plans for each group.
	*/

	if %ProcessMode=3 do {
		do Db.delete("UTBLCOMGRPT","COMGRP=:COMGRP")
		}
	else  do fUTBLCGT.save()

	/*
	 If maintenance is performed, then plans may have been removed as well.
	 Loop through the user table and remove the records before the update.
	*/

	if (%ProcessMode=1)!(%ProcessMode=3) do {

		// Delete Record
		do Db.delete("UTBLCOMGRP","COMGRP=:COMGRP")
		}

	// Quit if delete
	if %ProcessMode=3 quit

	// Loop through the GRP array and set each commission plan

	set cnt=""
	for  set cnt=$O(GRP(cnt)) quit:cnt=""  do {
		new CPLAN
		set CPLAN=$P(GRP(cnt),"|",1)
		if CPLAN="" quit

		// Update Record
		type RecordUTBLCOMGRP fUTBLCG=Class.new("RecordUTBLCOMGRP")
		set fUTBLCG.comgrp=COMGRP
		set fUTBLCG.cplan=CPLAN
		do fUTBLCG.save()
		}

	quit


END	//  Display return Messages

	if $G(ER)!(%ProcessMode=2)!(%ProcessMode=4) quit
	set COMGRP=$G(COMGRP)

	if VFMQ="Q" do {

		// ~p1 not created
		if %ProcessMode=0 set RM=$$^MSG(6709,COMGRP) quit

 		// ~p1 not modified
		if %ProcessMode=1 set RM=$$^MSG(6710,COMGRP) quit

		// ~p1 not deleted
		set RM=$$^MSG(6711,COMGRP)
		}
	else  do {

		// ~p1 created
		if %ProcessMode=0 set RM=$$^MSG(6712,COMGRP) quit

		// ~p1 modified
		if %ProcessMode=1 set RM=$$^MSG(6713,COMGRP) quit

		// ~p1 deleted
		set RM=$$^MSG(3028,COMGRP)
		}

	set ER="W"

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "59886^43498^Sanchez SCM Administrator^3843"	// Signature - LTD^TIME^USER^SIZE
