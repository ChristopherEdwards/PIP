V00S011(%ProcessMode,RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM)   //PBS -  - SID= <BRLIM> Branch Denomination Limits Screen
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:04 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,AMTMIN,AMTMAX",VSID="BRLIM",VPGM=$T(+0),VSNAME="Branch Denomination Limits Screen"
 set VFSN("UTBLDENLIMBR")="zfBRDNLIM",VFSN("UTBLDENOM")="zfUTBLDEN"
 set vPSL=1
 set KEYS(1)=fUTBLDEN.CRCD
 set KEYS(2)=fUTBLDEN.CSEQ
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=16 do VPR(.fUTBLDEN,.fBRDNLIM),VDA1(.fUTBLDEN,.fBRDNLIM),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fUTBLDEN,.fBRDNLIM),VPR(.fUTBLDEN,.fBRDNLIM),VDA1(.fUTBLDEN,.fBRDNLIM)
 if %ProcessMode do VLOD(.fUTBLDEN,.fBRDNLIM) quit:$G(ER)  do VPR(.fUTBLDEN,.fBRDNLIM),VDA1(.fUTBLDEN,.fBRDNLIM)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLDEN,.fBRDNLIM)
	quit


VNEW(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLDEN,.fBRDNLIM)
 do VLOD(.fUTBLDEN,.fBRDNLIM)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=16
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM) // Display screen prompts
 set VO="8||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,26,26,0,0,0,0,0,0,0)_"01TBranch Denomination Limits"
 set VO(2)=$C(3,9,7,0,0,0,0,0,0,0)_"01TBranch:"
 set VO(3)=$C(4,2,14,0,0,0,0,0,0,0)_"01TCurrency Code:"
 set VO(4)=$C(6,4,11,0,0,0,0,0,0,0)_"01TDescription"
 set VO(5)=$C(6,22,10,0,0,0,0,0,0,0)_"01TMin Amount"
 set VO(6)=$C(6,35,9,0,0,0,0,0,0,0)_"01TMin Count"
 set VO(7)=$C(6,51,10,0,0,0,0,0,0,0)_"01TMax Amount"
 set VO(8)=$C(6,64,9,0,0,0,0,0,0,0)_"01TMax Count"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM)  // Display screen data
 new V
 s AMTMAX=$G(AMTMAX)
 s AMTMIN=$G(AMTMIN)
 s CNTMAX=$G(CNTMAX)
 s CNTMIN=$G(CNTMIN)
 s DESC=$G(DESC)
 //
 set VO="10|9|13|0"
 set VO(9)=$C(3,17,6,2,0,0,0,0,0,0)_"01N"_fBRDNLIM.BRCD
 set VO(10)=$C(4,17,3,2,0,0,0,0,0,0)_"01T"_$E(fBRDNLIM.CRCD,1,3)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+1,DY=7 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLDEN,.fBRDNLIM)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v4,v2,v5,v3,v1
 if  set (v4,v2,v5,v3,v1)=""
 else  new v4,v2,v5,v3,v1
 else  set (v4,AMTMAX(I))=$G(AMTMAX(I)),(v2,AMTMIN(I))=$G(AMTMIN(I)),(v5,CNTMAX(I))=$G(CNTMAX(I)),(v3,CNTMIN(I))=$G(CNTMIN(I)),(v1,DESC(I))=$G(DESC(I))
 
 set VO(VX+1)=$C(DY,2,15,2,0,0,0,0,0,0)_"01T"_v1
 set VO(VX+2)=$C(DY,21,12,2,0,0,0,0,0,0)_"00$"_$S(v2="":"",1:$J(v2,0,2))
 set VO(VX+3)=$C(DY,37,5,2,0,0,0,0,0,0)_"01N"_v3
 set VO(VX+4)=$C(DY,50,12,2,0,0,0,0,0,0)_"00$"_$S(v4="":"",1:$J(v4,0,2))
 set VO(VX+5)=$C(DY,66,5,2,0,0,0,0,0,0)_"01N"_v5
 set DY=DY+1,VX=VX+5
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=2,%MOD=5,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=2,VPB=6+%REPEAT,BLKSIZ=(49*%REPEAT)+9,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLDENOM"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLDENLIMBR")="zfBRDNLIM",VFSN("UTBLDENOM")="zfUTBLDEN"
 //
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,16,6)_"21N12401|1|[UTBLDENLIMBR]BRCD|[UTBLBRCD]"
 set %TAB(2)=$C(3,16,3)_"21T12402|1|[UTBLDENLIMBR]CRCD|[CRCD]"
 set %TAB(3)=$C(6,1,15)_"21T|*DESC(1)|[*]@DESC"
 set %TAB(4)=$C(6,20,12)_"00$|*AMTMIN(1)|[*]@AMTMIN|||do VP1^V00S011(.fUTBLDEN,.fBRDNLIM)||0||2"
 set %TAB(5)=$C(6,36,5)_"20N|*CNTMIN(1)|[*]@CNTMIN"
 set %TAB(6)=$C(6,49,12)_"00$|*AMTMAX(1)|[*]@AMTMAX|||do VP2^V00S011(.fUTBLDEN,.fBRDNLIM)||0||2"
 set %TAB(7)=$C(6,65,5)_"20N|*CNTMAX(1)|[*]@CNTMAX"
 do VTBL(.fUTBLDEN,.fBRDNLIM),VDEPRE(.fUTBLDEN,.fBRDNLIM) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDEPRE(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM)  // Data Entry Pre-processor
 
 if $G(CPYFLG) do PROTECT^DBSMACRO("ALL")
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM) //
 if V,$G(X)="" do DEFAULT^DBSMACRO("@CNTMIN","","1","0","0")
 if '$L(X) quit 
 set INDX=(%PG-1)*%REPEAT
 if $G(MAST(INDX+z1))="",X set X="" quit
 set MULT=$P(MAST(INDX+z1),"|",4)
 
 // Entered amount must be divisible by ~p1
 if X#MULT set ER=1 set RM=$$^MSG(8676,MULT) quit
       
 // Minimum must be less than or equal to maximum
 if $G(AMTMAX(z1))'="",X>AMTMAX(z1) set ER=1 set RM=$$^MSG(1737) quit
 
 do DEFAULT^DBSMACRO("@CNTMIN",X/MULT,"1","0","0")
 quit
 
VP2(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM) //
 if V,$G(X)="" do DEFAULT^DBSMACRO("@CNTMAX","","1","0","0")
 if '$L(X) quit
 set INDX=(%PG-1)*%REPEAT
 if $G(MAST(INDX+z1))="",X set X="" quit
 set MULT=$P(MAST(INDX+z1),"|",4)
 
 // Entered amount must be divisible by ~p1
 if X#MULT set ER=1 set RM=$$^MSG(8676,MULT) quit
 
 // Minimum must be less than or equal to maximum
 if $G(AMTMIN(z1))'="",X<AMTMIN(z1) set ER=1 set RM=$$^MSG(1737) quit   
 
 do DEFAULT^DBSMACRO("@CNTMAX",X/MULT,"1","0","0")
 quit
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLDENOM fUTBLDEN
 type Public RecordUTBLDENLIMBR fBRDNLIM
 do VPR(.fUTBLDEN,.fBRDNLIM)
 do VDA1(.fUTBLDEN,.fBRDNLIM)
 do ^DBSPNT()
 quit

VW(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM)
 do VDA1(.fUTBLDEN,.fBRDNLIM)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLDENOM fUTBLDEN,RecordUTBLDENLIMBR fBRDNLIM)
 do VDA1(.fUTBLDEN,.fBRDNLIM)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLDENOM fUTBLDEN
 type Public RecordUTBLDENLIMBR fBRDNLIM
 do VDA1(.fUTBLDEN,.fBRDNLIM)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLDENOM fUTBLDEN
 if sn="UTBLDENOM" do vSET1(.fUTBLDEN,di,X)
 type Public RecordUTBLDENLIMBR fBRDNLIM
 if sn="UTBLDENLIMBR" do vSET2(.fBRDNLIM,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLDENOM fUTBLDEN,di,X)
 do fUTBLDEN.setAuditFlag(1)
 set fUTBLDEN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLDENLIMBR fBRDNLIM,di,X)
 do fBRDNLIM.setAuditFlag(1)
 set fBRDNLIM.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLDENOM fUTBLDEN
 if fid="UTBLDENOM" quit $$vREAD1(.fUTBLDEN,di)
 type Public RecordUTBLDENLIMBR fBRDNLIM
 if fid="UTBLDENLIMBR" quit $$vREAD2(.fBRDNLIM,di)
 quit ""
vREAD1(RecordUTBLDENOM fUTBLDEN,di)
 quit fUTBLDEN.@di
vREAD2(RecordUTBLDENLIMBR fBRDNLIM,di)
 quit fBRDNLIM.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
