V01S665(%ProcessMode,RecordUTBLEXPGRTHT fEXPGTHT)   // -  - SID= <UTBLEXPGRTH> Expected Growth User Table Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,GTB",VSID="UTBLEXPGRTH",VPGM=$T(+0),VSNAME="Expected Growth User Table Maintenance"
 set VFSN("UTBLEXPGRTHT")="zfEXPGTHT"
 set vPSL=1
 set KEYS(1)=fEXPGTHT.GTBL
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=14 do VPR(.fEXPGTHT),VDA1(.fEXPGTHT),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fEXPGTHT),VPR(.fEXPGTHT),VDA1(.fEXPGTHT)
 if %ProcessMode do VLOD(.fEXPGTHT) quit:$G(ER)  do VPR(.fEXPGTHT),VDA1(.fEXPGTHT)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEXPGTHT)
	quit


VNEW(RecordUTBLEXPGRTHT fEXPGTHT) // Initialize arrays if %O=0
 
 do VDEF(.fEXPGTHT)
 do VLOD(.fEXPGTHT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLEXPGRTHT fEXPGTHT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLEXPGRTHT fEXPGTHT) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=14
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLEXPGRTHT fEXPGTHT) // Display screen prompts
 set VO="7||13|0"
 set VO(0)="|0"
 set VO(1)=$C(3,19,13,0,0,0,0,0,0,0)_"01TGrowth Table:"
 set VO(2)=$C(4,20,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(3)=$C(6,17,15,0,0,0,0,0,0,0)_"01T Currency Code:"
 set VO(4)=$C(7,65,1,0,0,0,0,0,0,0)_"01T "
 set VO(5)=$C(8,4,52,0,0,0,0,0,0,0)_"01TLevel     End of Period Balance     Expected Growth "
 set VO(6)=$C(8,62,8,0,0,0,0,0,0,0)_"01TExpected"
 set VO(7)=$C(8,71,8,0,0,0,0,0,0,0)_"01TGrowth %"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLEXPGRTHT fEXPGTHT)  // Display screen data
 new V
 s GTB=$G(GTB)
 //
 set VO="11|8|13|0"
 set VO(8)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(9)=$C(3,33,12,2,0,0,0,0,0,0)_"01T"_$E(fEXPGTHT.GTBL,1,12)
 set VO(10)=$C(4,33,40,2,0,0,0,0,0,0)_"00T"_$E(fEXPGTHT.DESCR,1,40)
 set VO(11)=$C(6,33,3,2,0,0,0,0,0,0)_"00T"_$E(fEXPGTHT.CRCD,1,3)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+3,DY=9 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fEXPGTHT)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLEXPGRTHT fEXPGTHT)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,GTB(I))=$G(GTB(I))
 
 set VO(VX+1)=$C(DY,5,3,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",1)
 set V=$P(v1,"|",2) set VO(VX+2)=$C(DY,14,18,2,0,0,0,0,0,0)_"00$"_$S(V="":"",1:$J(V,0,2))
 set V=$P(v1,"|",3) set VO(VX+3)=$C(DY,40,18,2,0,0,0,0,0,0)_"00$"_$S(V="":"",1:$J(V,0,2))
 set V=$P(v1,"|",4) set VO(VX+4)=$C(DY,62,8,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,5))
 set DY=DY+1,VX=VX+4
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLEXPGRTHT fEXPGTHT)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=4,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=8+%REPEAT,BLKSIZ=(47*%REPEAT)+55,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLEXPGRTHT"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLEXPGRTHT")="zfEXPGTHT"
 //
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,32,12)_"21T12401|1|[UTBLEXPGRTHT]GTBL"
 set %TAB(2)=$C(3,32,40)_"00T12401||[UTBLEXPGRTHT]DESCR"
 set %TAB(3)=$C(5,32,3)_"01T12402||[UTBLEXPGRTHT]CRCD|[CRCD]"
 set %TAB(4)=$C(8,4,3)_"20N12401|*GTB(1)|[*]@SEQ"
 set %TAB(5)=$C(8,13,18)_"00$12402|*GTB(1)|[*]@EOPBAL|||do VP1^V01S665(.fEXPGTHT)||||2"
 set %TAB(6)=$C(8,39,18)_"00$12403|*GTB(1)|[*]@EXPGRTH|||do VP2^V01S665(.fEXPGTHT)||||2"
 set %TAB(7)=$C(8,61,8)_"00N12404|*GTB(1)|[*]@EXGRPCT|||do VP3^V01S665(.fEXPGTHT)||||5"
 do VTBL(.fEXPGTHT)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLEXPGRTHT fEXPGTHT) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLEXPGRTHT fEXPGTHT) //
 if X'=V do { quit:ER 

 	if $D(DUP(X)) set ER=1 set RM=$$^MSG(7177) quit
 	kill DUP(V)
 	if X'="" set DUP(X)=""
 	}
 
 // If this is the last line on the page and it is valued, then add another page
 if X'="",z1#MAX=0 set %PAGE=%PAGE+1
 
 if X="" do {
 	do DELETE^DBSMACRO("@EXPGRTH","1","0")
 	do DELETE^DBSMACRO("@EXGRPCT","1","0")
 	do GOTO^DBSMACRO("NEXT") quit 
 	}
 quit

VP2(RecordUTBLEXPGRTHT fEXPGTHT) //
 if X'="" do {
 	do GOTO^DBSMACRO("@EXGRPCT") quit
 	do PROTECT^DBSMACRO("@EXGRPCT")
 	}
 else  do {
 	do UNPROT^DBSMACRO("@EXGRPCT")
 	do GOTO^DBSMACRO("@EXGRPCT") quit
 	do PROTECT^DBSMACRO("@EXPGRTH")
 	}
 quit 

VP3(RecordUTBLEXPGRTHT fEXPGTHT) //
  /* 
	Current field (Expected Growth %) is null, Expected Growth amount is null
 	and Minimum Balance Tier is defined for current line...
 	Cannot have an end of period balance without an expected growth amount or %
  */
 if X="",$P(GTB(z1),"|",3)="",$P(GTB(z1),"|",2)'="" set ER=1 set RM=$$^MSG(3360) quit   
 
 // Either an Expected Growth amount or % should be defined
 if X'="",$P(GTB(z1),"|",3)>0 set ER=1 set RM=$$^MSG(4890) quit       
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLEXPGRTHT fEXPGTHT
 do VPR(.fEXPGTHT)
 do VDA1(.fEXPGTHT)
 do ^DBSPNT()
 quit

VW(RecordUTBLEXPGRTHT fEXPGTHT)
 do VDA1(.fEXPGTHT)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLEXPGRTHT fEXPGTHT)
 do VDA1(.fEXPGTHT)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLEXPGRTHT fEXPGTHT
 do VDA1(.fEXPGTHT)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLEXPGRTHT fEXPGTHT
 if sn="UTBLEXPGRTHT" do vSET1(.fEXPGTHT,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLEXPGRTHT fEXPGTHT,di,X)
 do fEXPGTHT.setAuditFlag(1)
 set fEXPGTHT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLEXPGRTHT fEXPGTHT
 if fid="UTBLEXPGRTHT" quit $$vREAD1(.fEXPGTHT,di)
 quit ""
vREAD1(RecordUTBLEXPGRTHT fEXPGTHT,di)
 quit fEXPGTHT.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
