V01S568(%ProcessMode,RecordSTBLSWIFT fSTBLSW)   // -  - SID= <STBLSWIFT> SWIFT Message Format Screen
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:52 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="STBLSWIFT",VPGM=$T(+0),VSNAME="SWIFT Message Format Screen"
 set VFSN("STBLSWIFT")="zfSTBLSW"
 set vPSL=1
 set KEYS(1)=fSTBLSW.TYPE
 set KEYS(2)=fSTBLSW.SEQ
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fSTBLSW),VDA1(.fSTBLSW),^DBSPNT()

 if '%ProcessMode do VNEW(.fSTBLSW),VPR(.fSTBLSW),VDA1(.fSTBLSW)
 if %ProcessMode do VLOD(.fSTBLSW) quit:$G(ER)  do VPR(.fSTBLSW),VDA1(.fSTBLSW)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fSTBLSW)
	quit


VNEW(RecordSTBLSWIFT fSTBLSW) // Initialize arrays if %O=0
 
 do VDEF(.fSTBLSW)
 do VLOD(.fSTBLSW)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordSTBLSWIFT fSTBLSW)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordSTBLSWIFT fSTBLSW) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordSTBLSWIFT fSTBLSW) // Display screen prompts
 set VO="17||13|"
 set VO(0)="|0"
 set VO(1)=$C(5,23,22,1,0,0,0,0,0,0)_"01T SWIFT Message Format "
 set VO(2)=$C(7,9,20,1,0,0,0,0,0,0)_"01T SWIFT Message Type:"
 set VO(3)=$C(8,5,24,1,0,0,0,0,0,0)_"01T SWIFT Message Sequence:"
 set VO(4)=$C(8,41,7,0,0,0,0,0,0,0)_"01TOption:"
 set VO(5)=$C(9,18,11,0,0,0,0,0,0,0)_"01T SWIFT Tag:"
 set VO(6)=$C(10,19,10,0,0,0,0,0,0,0)_"01TMandatory:"
 set VO(7)=$C(10,36,12,0,0,0,0,0,0,0)_"01TCan be Null:"
 set VO(8)=$C(12,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(9)=$C(13,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(10)=$C(14,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(11)=$C(15,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(12)=$C(16,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(13)=$C(17,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(14)=$C(18,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(15)=$C(19,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(16)=$C(20,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
 set VO(17)=$C(21,19,10,0,0,0,0,0,0,0)_"01T[SWIFT]DI:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordSTBLSWIFT fSTBLSW)  // Display screen data
 new V
 //
 set VO="33|18|13|"
 set VO(18)=$C(7,30,3,2,0,0,0,0,0,0)_"01N"_fSTBLSW.TYPE
 set VO(19)=$C(8,30,3,2,0,0,0,0,0,0)_"01N"_fSTBLSW.SEQ
 set VO(20)=$C(8,49,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.OPTION,1,25)
 set VO(21)=$C(9,30,4,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.TAG,1,4)
 set VO(22)=$C(10,30,1,2,0,0,0,0,0,0)_"00L"_$S(fSTBLSW.MANDFLG:"Y",1:"N")
 set VO(23)=$C(10,49,1,2,0,0,0,0,0,0)_"00L"_$S(fSTBLSW.NULLFLG:"Y",1:"N")
 set VO(24)=$C(12,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI1,1,25)
 set VO(25)=$C(13,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI2,1,25)
 set VO(26)=$C(14,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI3,1,25)
 set VO(27)=$C(15,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI4,1,25)
 set VO(28)=$C(16,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI5,1,25)
 set VO(29)=$C(17,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI6,1,25)
 set VO(30)=$C(18,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI7,1,25)
 set VO(31)=$C(19,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI8,1,25)
 set VO(32)=$C(20,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI9,1,25)
 set VO(33)=$C(21,30,25,2,0,0,0,0,0,0)_"00T"_$E(fSTBLSW.DI10,1,25)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordSTBLSWIFT fSTBLSW)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=16,VPT=5,VPB=21,PGM=$T(+0),DLIB="SYSDEV",DFID="STBLSWIFT"
 set OLNTB=21030
 
 set VFSN("STBLSWIFT")="zfSTBLSW"
 //
 // 
	
	
 set %TAB(1)=$C(6,29,3)_"21N12401|1|[STBLSWIFT]TYPE"
 set %TAB(2)=$C(7,29,3)_"21N12402|1|[STBLSWIFT]SEQ|[STBLSWIFT]"
 set %TAB(3)=$C(7,48,25)_"00T12408|1|[STBLSWIFT]OPTION"
 set %TAB(4)=$C(8,29,4)_"00T12406|1|[STBLSWIFT]TAG"
 set %TAB(5)=$C(9,29,1)_"00L12409|1|[STBLSWIFT]MANDFLG"
 set %TAB(6)=$C(9,48,1)_"00L12414|1|[STBLSWIFT]NULLFLG"
 set %TAB(7)=$C(11,29,25)_"00T12401|1|[STBLSWIFT]DI1"
 set %TAB(8)=$C(12,29,25)_"00T12402|1|[STBLSWIFT]DI2"
 set %TAB(9)=$C(13,29,25)_"00T12403|1|[STBLSWIFT]DI3"
 set %TAB(10)=$C(14,29,25)_"00T12404|1|[STBLSWIFT]DI4"
 set %TAB(11)=$C(15,29,25)_"00T12405|1|[STBLSWIFT]DI5"
 set %TAB(12)=$C(16,29,25)_"00T12407|1|[STBLSWIFT]DI6"
 set %TAB(13)=$C(17,29,25)_"00T12410|1|[STBLSWIFT]DI7"
 set %TAB(14)=$C(18,29,25)_"00T12411|1|[STBLSWIFT]DI8"
 set %TAB(15)=$C(19,29,25)_"00T12412|1|[STBLSWIFT]DI9"
 set %TAB(16)=$C(20,29,25)_"00T12413|1|[STBLSWIFT]DI10"
 do VTBL(.fSTBLSW)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordSTBLSWIFT fSTBLSW) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordSTBLSWIFT fSTBLSW
 do VPR(.fSTBLSW)
 do VDA1(.fSTBLSW)
 do ^DBSPNT()
 quit

VW(RecordSTBLSWIFT fSTBLSW)
 do VDA1(.fSTBLSW)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordSTBLSWIFT fSTBLSW)
 do VDA1(.fSTBLSW)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordSTBLSWIFT fSTBLSW
 do VDA1(.fSTBLSW)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordSTBLSWIFT fSTBLSW
 if sn="STBLSWIFT" do vSET1(.fSTBLSW,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordSTBLSWIFT fSTBLSW,di,X)
 do fSTBLSW.setAuditFlag(1)
 set fSTBLSW.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordSTBLSWIFT fSTBLSW
 if fid="STBLSWIFT" quit $$vREAD1(.fSTBLSW,di)
 quit ""
vREAD1(RecordSTBLSWIFT fSTBLSW,di)
 quit fSTBLSW.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
