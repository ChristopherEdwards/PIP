CIFTFSFL(RecordCIFTFS ciftfs,String vpar) // CIFTFS - Customer Trade Finance Journal Filer
	// Copyright(c)2005 Sanchez Computer Associates, Inc.  All Rights Reserved - 06/06/2005 12:03 - spatola
	// Generated from DATA-QWIK schema in: /sanchez/p04devut_gtmlx  by: /p04devut_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (4)              11/22/2003
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL  - Cascade delete
		/[NO]INDEX   - Update Indexes
		/[NO]JOURNAL - Journal update
		/[NO]TRIGAFT - After update triggers
		/[NO]TRIGBEF - Before update triggers
		/[NO]UPDATE  - Update primary table
		/[NO]VALDD   - Validate column values
		/[NO]VALFK   - Validate foreign keys
		/[NO]VALREQ  - Validate not null values
		/[NO]VALRI   - Validate transaction integrity
		/[NO]VALST   - Validate database state
	*/

	type public String verrors()

	type String vx()                                       // audit column array
	type Number %O = ciftfs.getMode()                      // Processing mode
	if %O.isNull() set %O = Db.isDefined("CIFTFS","SEQ = :ciftfs.seq"),vpar = vpar.get()_"/NOVALST" do ciftfs.setMode(%O)
	if %O = 1 do AUDIT^UCUTILN(ciftfs,.vx(),1,"|")

	set vpar = $$initPar^UCUTILN(.vpar)                    // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("SEQ").data() do vkchged quit                   // Primary key changed
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do {
			type Boolean ER = 0
			type String RM

			do VDDUX^DBSFILER("CIFTFS",.vx)
			if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
		}
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("CIFTFS","SEQ = :ciftfs.seq")      // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (e.g. EXT^DBSFILER for %O = 2)

	type Public String SEQ

	type RecordCIFTFS ciftfs = Db.getRecord("CIFTFS","SEQ=:SEQ")
	do ciftfs.setMode(%ProcessMode)

	do CIFTFSFL(ciftfs,vpar)

	quit

vexec // Execute transaction

	type Public Number %O
	type Public String vpar,vobj(),vx()

	type Public RecordCIFTFS ciftfs

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("CIFTFS","SEQ = :ciftfs.seq") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {


		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell
		set ^CIFTFS(vobj(ciftfs,-3)) = vobj(ciftfs).trim(1,$C(124))
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type Public String vobj(),vpar
	type Public RecordCIFTFS ciftfs


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell
	ZWI ^CIFTFS(vobj(ciftfs,-3))                           // Delete Record
	quit


vreqn // Validate required data items

	type Public RecordCIFTFS ciftfs

	if ciftfs.seq.isNull() do vreqerr("SEQ") quit
	if ciftfs.tjd.isNull() do vreqerr("TJD") quit
	quit

vreqerr(di) // Required error

	type Boolean ER = 0
	type String RM
	do SETERR^DBSEXECU("CIFTFS","MSG",1767,"CIFTFS."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type Public Number %O
	type Public String vpar(),vx()

	type String RM,X
	type Public RecordCIFTFS ciftfs

	set X = ciftfs.seq if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set RM=$$^MSG(742,"N") do vdderr("SEQ", RM) quit
	set X = ciftfs.acn if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set RM=$$^MSG(742,"N") do vdderr("ACN", RM) quit
	set X = ciftfs.mode if 'X.isNull(),X'?1N set RM=$$^MSG(742,"N") do vdderr("MODE", RM) quit
	set X = ciftfs.tjd if 'X.isNull(),X'?1.5N set RM=$$^MSG(742,"D") do vdderr("TJD", RM) quit
	#xecute kill dbLoad("vddver","ciftfs")
	quit

vdderr(di, vRM) // Column attribute error

	do SETERR^DBSEXECU("CIFTFS","MSG",979,"CIFTFS."_di_" "_vRM)
	quit


vkchged // Access key changed

	type Public RecordCIFTFS ciftfs

	type Public String vpar,vx()

	type Boolean ER = 0
	type Number %O = 1
	type String RM,vnewkey,voldkey,vux

	set vux = vx("SEQ")
	set voldkey = vux.piece("|",1),vobj(ciftfs,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vreqn
	if vpar["/VALDD/" do vddver
	do vexec

	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/")
	set %O = 3 do vdelete(1)                               // Delete old record
	set vnewkey = vux.piece("|",2),vobj(ciftfs,-3) = vnewkey // Copy new keys into object

	set %O = 0 do vexec                                    // Create new record
	set %O = 1 do CASUPD^DBSEXECU("CIFTFS",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update
	quit
