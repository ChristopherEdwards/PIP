RSPWHSC	//Public;Special Considerations RRSP withholding routine
	/*
	   ORIG: JOYNER - 01/21/97
	   DESC: Special Considerations RRSP withholding routine

	   KEYWORDS: RRSP,RRIF,WITHHOLDING,SPECIAL CONSIDERATIONS

	   INPUTS:
	   	 . AMT,CID,CYR,ACN,RSPSEQ,IRAP(),IRA,UTSO(),AMTWA,WHOPT
	  	 . WP,WA,WS,WC,WCREC,TBL
	  	 . LS*,P* (MED,FCB,BER)

	   RETURNS:
	  	 . $$ 	 Withholding Amount 	/TYP=$/MECH=REF
	  	 . AMTWA Amount used to compute /TYP=$
	    		 withholding.

	   EXAMPLE:
	  	 S DWA=$$NZ^RSPWHSC()


	---- Revision History ------------------------------------------------
	
	10/10/02 - GRAY - 49794
		   Rewrote most of converted procedure.

	04/11/02 - GORDONT - 49794
		    Converted to PSL.
                    Removed Pre-2000 revision history.
			    
	*/

	quit


Public NZ()	// New Zealand's Special Considerations for withholding.

	set AMTWA=$$EXEC("1,10,18",.TSO,.UTSO)
	if AMTWA=0 quit 0
	quit $$CALC(AMTWA,WP,WA,WS)


Public PH()	// Phillipine's Special Considerations for withholding.
	
	set AMTWA=$$EXEC("10",.TSO,.UTSO)
	if AMTWA=0 quit 0
	quit $$CALC(AMTWA,WP,WA,WS)


Public IT()	// Italy's Special Considerations for withholding.

	new A,DWA,TOTAMT,TOTDWA
	set AMTWA=$$EXEC("1,10,18",.TSO,.UTSO,.TOTAMT)
	if AMTWA=0 quit 0
	
	set DWA=$$CALC(AMTWA,WP,WA,WS)
	
	if WHOPT<2 quit DWA
	
	set TOTDWA=$$ACCUM(2,10)+DWA
	
	if TOTDWA'>(TOTAMT*.15) quit DWA
	
	do Runtime.setErrMSG("DEP",5171)

	quit 0


Public CY()	// Cyprus's Speical Considerations for withholding.
	
	// periodic distr
	if TBL="P" set AMTWA=$$EXEC("10",.TSO,.UTSO)
	
	// lumpsum distr
	else  set AMTWA=$$EXEC("1,18",.TSO,.UTSO)
	
	if AMTWA=0 quit 0
	
	quit $$CALC(AMTWA,WP,WA,WS)


EXEC(FLDS,TSO,UTSO,TOTAMT)	//Private;Compute AMTWA
	/*
	   This function will compute the AMTWA (Amount to
	   Withhold Against). Please note that the Maximum
	   Exempt Distribution (MED) may not all be used in some
	   cases. After a reversal or EC of a transaction that
	   originally used part of the MED the amount returned to MED
	   will not be used in the example below.

	   EXAMPLE: The last transaction does not reclaim the $50
	     	    available for MED. Because the before this
	     	    transaction is greater than the MED.

	   MED=1000 (total dist)=YTD distribution
	   Amount Total Dist  MED Used    AMTWA
	   950    	 950       950        0
	   200    	1150        50      150
	   2000   	3150         0 	   2000
	   -200   	2950       -50     -150 (Error Correct of $200 distribution)
	   3000   	5950         0 	   3000

	   ARGUMENTS:
	   	 . FLDS	 Pieces of IRA() to add. 	/TYP=T/REQ/MECH=VAL
	  	 . TSO 	 tso field.  			/TYP=T/REQ/MECH=REF
	  	 . UTSO  tso array.  			/TYP=T/REQ/MECH=REF
	  	 . TOTAMT Antic YTD trans 		/TYP=N/NOREQ/MECH=REF

	   INPUTS:
	  	 . IRA(ACN,RSPSEQ,CYR,0,
	  	 . IRAP(ACN,RSPSEQ,CYR,0)

	   RETURNS:
	  	 . $$ AMTWA    				/TYP=$/MECH=REF
	    	      Amt Withheld Against.
	  	 . UTSO("AWA")   			/TYP=T/MECH=REF
	  	 . TSO    				/TYP=T/MECH=REF

	*/

	new AMTWA,I,PC
	
	set MED=LSMED 
	set FCB=LSFCB 
	set BER=LSBER
	
	if TBL="P" do {
		set MED=PMED
		set FCB=PFCB 
		set BER=PBER
		}
	
	if (FCB'="")&(BER'="") do {
		new X 
		set X=$$^SCARND((FCB*(BER/100)),0,CID)
		if X>MED set MED=X
		}

	set TOTAMT=0
	if $D(TAMT) set TOTAMT=+TAMT

	// FLDS can be any of the following values: 1,10,18
	for I=1:1:$L(FLDS,",") do {
		set PC=$P(FLDS,",",I)
		set TOTAMT=TOTAMT+$$ACCUM(0,PC)
		}

	set AMTWA=TOTAMT-MED
	
	if AMTWA<0 set AMTWA=0
	
	if AMTWA>AMT set AMTWA=AMT

	if AMTWA'=AMT do {
		set UTSO("AWA")=AMTWA 
		do IN^UTSO(.UTSO,.TSO)
		}
	
	quit AMTWA


CALC(AMTWA,WP,WA,WS)	//Private;Compute withholding amount
	/*

	   ARGUMENTS:
	  	 . AMTWA 	Amount to compute 	/TYP=$/REQ/MECH=VAL
	    			withholding on.
	  	 . WP 		Withholding %.  	/TYP=N/NOREQ/MECH=REF
	  	 . WA 		Withholding Amount. 	/TYP=$/NOREQ/MECH=REF
	  	 . WS 		Withholding Schedule. 	/TYP=T/NOREQ/MECH=REF

	   INPUTS:
	  	 . ^UTBL("RSPWSCH",
	  	 . UTSO("TOTDIS")

	   RETURNS:
	  	 . $$ 		Withholding Amount. 	/TYP=$

	   EXAMPLE:
	  	 S DWA=$$CALC(200,10) ; DWA=20

	*/

	new DWA,MYAMT,W,WMYAMT,WP1

	if $L(WS) do {
		set MYAMT=AMTWA
		if $D(UTSO("TOTDIS")) set MYAMT=UTSO("TOTDIS")
		set WMYAMT=MYAMT-.001
		type ResultSet rs=Db.select("KEY","UTBLRSPWSCH","WSCH=:WS AND KEY>:WMYAMT")
		if rs.next() do {
			set W=rs.getCol(1)
			type RecordUTBLRSPWSCH utblrspwsch
			set utblrspwsch=Db.getRecord("UTBLRSPWSCH","WSCH=:WS,KEY=:W",1)
			set WP1=+utblrspwsch.pct
			}
		}
	
	set DWA=(AMTWA*(WP/100))+(AMTWA*($G(WP1)/100))+WA
	
	if DWA<0 set DWA=0
	
	quit $$^SCARND(DWA,0,CID)


ACCUM(ND,PC)	//Private;Accumulate totals for a specified bucket
	//   within the current plan.
		
	
	/*
	The calls into ACCUM can consist of having the following values
	for ND and PC:

		ND = 2  PC = 10
		ND = 0  PC = 1,10,18
	
	This section uses the column name based on just those ND and PC values
	listed above.
	*/
	
	new A,CID,TOT

	if $D(IRAP(ACN,RSPSEQ,CYR,ND)) do {
		set A=IRAP(ACN,RSPSEQ,CYR,ND)
		set TOT=$P(A,"|",PC)
		}
	
	else  do {
		type RecordIRA ira=Db.getRecord("IRA","ACN=:ACN,RPASEQ=:RSPSEQ,TAXYR=:CYR",1)
		if ND=2,PC=10 set TOT=TOT+ira.w10
		if ND=0,PC=1 set TOT=TOT+ira.d1
		if ND=0,PC=10 set TOT=TOT+ira.d10
		if ND=0,PC=18 set TOT=TOT+ira.d18
		}
	
	set CID="" 
	for  set CID=$O(IRA(CID)) quit:CID=""  do {
		set TOT=TOT+$G(IRA(CID,ACN,RSPSEQ,CYR,ND,PC))
		}

	quit TOT

vSIG()	quit "59886^43602^Sanchez SCM Administrator^5064"	// Signature - LTD^TIME^USER^SIZE
