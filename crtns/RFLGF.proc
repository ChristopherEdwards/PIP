public RFLGF
	/*

	---- Revision History ------------------------------------------------
	   08/14/06 - VANITHAK - CR 22061
	   	      Modified FILE section to remove the check for the value 
	   	      fUTRFLG.tares when setting %ProcessMode=1 and 
	   	      fUTRFLG.fares=0.	

	   08/02/06 - KELLYP - CR 22048
	   	      Modified LDFNCTN section to eliminate PRECEDENCE warning.

	   04/28/05 - TITOVE - CR 15221
		      Modified VPG section to prevent undefined on %PG. 

	   12/29/03 - CARROLLJ - CR7658
		      Corrected parameter mismatch error.

	   11/26/02 - TELIV - 49451
		      Converted to PSL.
	-----------------------------------------------------------------------
	*/

	// Insert/Update

	do INIT(1)
	
	quit


public	INQ 	// Inquiry

	do INIT(2)
	
	quit
	

public	DEL	// Delete

	do INIT(3)
	
	quit
	

INIT(Number %ProcessMode)

	type Number %PAGE, %PG, ALP, OLNTB, ZNW
	type String FUNCSAV(), FUNCTION(), GRP, RFLG, VFMQ
	
	type RecordUTBLRFLG2 fUTBLRFL
	type RecordUTBLRFLG fUTRFLG
	
	set %PG = 0 
	set %PAGE = 1 
	set ALP = 9

	do VPG(.fUTBLRFL,.fUTRFLG)
	
	quit


VPG(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)	// Page control

	type public Number %PG, ER
	type public String VFMQ

	type Boolean FINISH = 0

	for  do { quit:FINISH
		
		if (%PG = 0) do VPG00 if ER!(VFMQ = "Q") set FINISH = 1 quit
		
		if (%PG > 0) do VPG01(.fUTBLRFL,.fUTRFLG)
		
		if "DFQ"[VFMQ set FINISH = 1 do VER(.fUTRFLG) quit
		
		set %PG = %PG + 1
		}

	quit


VPG00	// Set up

	type public Number %TAB, ER
	type public String %NOPRMT, %READ, VFMQ

	set %TAB("GRP") = ".GRP1/TBL=[STBLLIBS]NAME"
	set %TAB("RFLG") = ".RFLG1/TBL=[UTBLRFLG]RFLG:DISTINCT:QU ""[UTBLRFLG]GRP=<<GRP>>""/XPP=D PP^RFLGF"

	if (%ProcessMode = 2) set %TAB("IO") = $$IO^SCATAB($I)

	set %READ = "@@%FN,,,GRP/REQ,RFLG/REQ"
	
	set %NOPRMT = "N"

	if (%ProcessMode = 2) set %READ = %READ_",IO/REQ"
	
	if (%ProcessMode = 3) do DEL^UTLREAD quit

	do ^UTLREAD 
	
	if (VFMQ = "Q") set ER = 1 quit
	
	do PPG00

	quit


PP	// UTLREAD post processor
	
	type public Number %OSAVE, ER, ZNW
	type public String GRP, I(), X

	type ResultSet rs = Db.select("UCLS","UTBLRFLG3","GRP=:GRP AND RFLG=:X")

	// Delete the authorizations before deleting the restriction
	if 'rs.isEmpty() , (%ProcessMode = 3) do Runtime.setErrMSG("UTBLRFLG3",8424) quit:ER

	if X.isNull() quit
	
	kill ZNW

	if (%ProcessMode = 0) set I(3) = "" set ZNW = 1

	// Restriction must exist in OVR system table or RFLG user table
	if 'Db.isDefined("UTBLRFLG","GRP=:GRP AND RFLG=:X") , (%OSAVE.get() > 1) do Runtime.setErrMSG("UTBLRFLG",2408) quit:ER

	type ResultSet rs1 = Db.select("FNIG", "UTBLRFLG2", "GRP = :GRP AND RFLG = :X")

	if 'rs1.isEmpty() do LDFNCTN kill ZNW

	quit


VPG01(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)	// Restrict screen

	type public Number %MODS, %PG, ALP, ER
	type public String GRP, RFLG, VFMQ

	set %MODS = ((%PG - 1) * ALP) + 1

	if (%ProcessMode = 2) do OPEN^SCAIO if ER set VFMQ = "Q" quit

	set fUTRFLG = Db.getRecord("UTBLRFLG", "GRP = :GRP, RFLG = :RFLG", 1)

	do DRV^USID(%ProcessMode,"UTBLRFLG2",.fUTBLRFL,.fUTRFLG)	

	quit


LDFNCTN
	/*
	 Load functions that the user class (X) cannot override in the array
	 FUNCTION and array FUNCSAV. FUNCSAV array will be used upon filing
	 the changes, in order to delete the records in UTBLRFLG3 that are
	 being replaced by new function names.
	*/

	type public Number %PAGE, ALP
	type public String FUNCSAV(), FUNCTION(), GRP, RFLG, X
	
	type Number PC, SUB

	type ResultSet rs2 = Db.select("FNIG","UTBLRFLG2","GRP=:GRP AND RFLG=:X")
	if rs2.isEmpty() quit	

	set PC = 0 
	set SUB = 1

	type ResultSet rs3 = Db.select("FNIG","UTBLRFLG2","GRP=:GRP AND RFLG=:X","FNIG")
	while rs3.next() do {

		set PC = PC + 1

		if (PC > 4) set PC = 1,SUB = SUB + 1
			
		set $P(FUNCTION(SUB),"|",PC) = rs3.getCol("FNIG")
		
		set $P(FUNCSAV(SUB),"|",PC) = rs3.getCol("FNIG")
		}

	if SUB set %PAGE = ('(SUB#ALP=0)) + (SUB\ALP)
		
	quit


PPG00	// Post-processor

	type public String GRP, RFLG

	type RecordUTBLRFLG utblrflg = Db.getRecord("UTBLRFLG", "GRP = :GRP, RFLG = :RFLG", 1)

	if 'utblrflg.getMode() set %ProcessMode = 0 quit

	if 'utblrflg.fares set %ProcessMode = 0

	quit


VER(RecordUTBLRFLG fUTRFLG)

	type public String VFMQ

	if (%ProcessMode = 2) ! (VFMQ = "Q") do END quit
	
	do FILE(.fUTRFLG)
	
	do END
	
	quit


FILE(RecordUTBLRFLG fUTRFLG)

	type public Number ZNW
	type public String FUNCSAV(), FUNCTION(), GRP, RFLG
	
	type Boolean DONE = 0
	type Number I, SUB
	type String FNORIG, FNIG

	if %ProcessMode = 3 do Db.delete("UTBLRFLG2","GRP=:GRP AND RFLG=:RFLG")

	// Function Access Restriction (PCS, 595)
	if (%ProcessMode = 1) ! (%ProcessMode = 0) set fUTRFLG.fares = 1

	// Function Access Restriction (PCS, 595)
	if (%ProcessMode = 3) set %ProcessMode = 1 set fUTRFLG.fares = 0

	if ZNW.get() set %ProcessMode = 0

	if Db.isDefined("UTBLRFLG", "GRP = :GRP AND RFLG = :RFLG") set %ProcessMode = 1

	do fUTRFLG.save()

	if (%ProcessMode = 3) quit

	set SUB = ""
	for  set SUB = FUNCTION(SUB).order() quit:SUB.isNull()  do {
		
		for I = 1:1:4 set FNIG = FUNCTION(SUB).piece("|",I)  do { quit:DONE
			
			set FNORIG = FUNCSAV(SUB).get().piece("|",I)
			
			/*
			  In case there are more entries in FUNCSAV than in
			  FUNCTION, that means some entries have been deleted.
			  In such case we still need to delete the old entry.
			  Only if there are no more entries in both arrays do
			  we need to quit the processing completely.
			*/

			if FNORIG.isNull() , FNIG.isNull() set DONE = 1 quit

			// Delete entries in UTBLRFLG2 that have been replaced
			if 'FNORIG.isNull() , (FNORIG '= FNIG) do Db.delete("UTBLRFLG2","GRP=:GRP AND RFLG=:RFLG AND FNIG=:FNORIG")

			if FNIG.isNull() quit

			type RecordSCATBL scatbl = Db.getRecord("SCATBL", "FN = :FNIG", 1)
			type RecordUTBLRFLG2 utblrflg2 = Db.getRecord("UTBLRFLG2", "GRP = :GRP, RFLG = :RFLG, FNIG = :FNIG", 1)

			// Record already exists and hasn't been changed
			if utblrflg2.getMode() quit

			set utblrflg2.desc = scatbl.desc

			do utblrflg2.save()
			}
		}

	quit


END

	type public Number ER, ZNW
	type public String RFLG, RM, VFMQ

	if ER ! (%ProcessMode = 2) ! (%ProcessMode = 4) quit
	
	set ZNW = ZNW.get()

	if (VFMQ = "Q") do {

		// User-defined restriction ~p1 not created
		if ZNW set RM = $$^MSG(2886,RFLG.get()) quit

		// User-defined restriction ~p1 not modified
		if (%ProcessMode = 1) set RM = $$^MSG(2888,RFLG.get()) quit

		// User-defined restriction ~p1 not deleted
		set RM = $$^MSG(2887,RFLG.get())
		}
	else  do {
		// User-defined restriction ~p1 created
		if ZNW set RM = $$^MSG(2883,RFLG) quit

		// User-defined restriction ~p1 modified
		if (%ProcessMode = 1) set RM=$$^MSG(2885,RFLG) quit

		// User-defined restriction ~p1 deleted
		set RM = $$^MSG(2884,RFLG)
		}

	set ER = "W"
	
	quit

vSIG()	quit "60491^37986^Vanitha Krishnasamy^6490"	// Signature - LTD^TIME^USER^SIZE
