V00S026(%ProcessMode,RecordCRCD fCRCD)   //PBS -  - SID= <CRCD> Currency Code
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:05 - kini
 // This screen is used to create and maintain the valid currency codes used within
 // a multicurrency database system.
 // 
 // Refer to the Multicurrency Processing - General Reference Manual for further
 // information.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="CRCD",VPGM=$T(+0),VSNAME="Currency Code"
 set VFSN("CRCD")="zfCRCD"
 set vPSL=1
 set KEYS(1)=fCRCD.CO
 set KEYS(2)=fCRCD.CRCD
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fCRCD),VDA1(.fCRCD),^DBSPNT()

 if '%ProcessMode do VNEW(.fCRCD),VPR(.fCRCD),VDA1(.fCRCD)
 if %ProcessMode do VLOD(.fCRCD) quit:$G(ER)  do VPR(.fCRCD),VDA1(.fCRCD)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCRCD)
	quit


VNEW(RecordCRCD fCRCD) // Initialize arrays if %O=0
 
 do VDEF(.fCRCD)
 do VLOD(.fCRCD)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCRCD fCRCD)
 if fCRCD.RETAIL="" set fCRCD.RETAIL=1
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCRCD fCRCD) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCRCD fCRCD) // Display screen prompts
 set VO="31||13|"
 set VO(0)="|0"
 set VO(1)=$C(3,14,15,1,0,0,0,0,0,0)_"01T Currency Code:"
 set VO(2)=$C(3,40,14,1,0,0,0,0,0,0)_"01T Country Code:"
 set VO(3)=$C(4,7,22,1,0,0,0,0,0,0)_"01T Currency Description:"
 set VO(4)=$C(5,1,28,1,0,0,0,0,0,0)_"01T Check Printing Description:"
 set VO(5)=$C(6,7,22,1,0,0,0,0,0,0)_"01T Currency Code Number:"
 set VO(6)=$C(7,4,25,1,0,0,0,0,0,0)_"01T Currency Decimal Places:"
 set VO(7)=$C(7,43,21,1,0,0,0,0,0,0)_"01T Rate Decimal Places:"
 set VO(8)=$C(8,18,11,1,0,0,0,0,0,0)_"01T Spot Days:"
 set VO(9)=$C(8,43,21,0,0,0,0,0,0,0)_"01T Settlement Calendar:"
 set VO(10)=$C(9,7,22,0,0,0,0,0,0,0)_"01TYearend Exchange Rate:"
 set VO(11)=$C(11,3,26,0,0,0,0,0,0,0)_"01T Treasury Reference Var %:"
 set VO(12)=$C(11,42,22,1,0,0,0,0,0,0)_"01T Minimum Rate Allowed:"
 set VO(13)=$C(12,1,28,0,0,0,0,0,0,0)_"01TForeign Exchange Rate Var %:"
 set VO(14)=$C(12,42,22,1,0,0,0,0,0,0)_"01T Maximum Rate Allowed:"
 set VO(15)=$C(14,17,12,0,0,0,0,0,0,0)_"01T EMU Member:"
 set VO(16)=$C(14,37,26,0,0,0,0,0,0,0)_"01T Fixed Notional Conv Rate:"
 set VO(17)=$C(15,7,22,0,0,0,0,0,0,0)_"01TTransition Start Date:"
 set VO(18)=$C(15,44,20,0,0,0,0,0,0,0)_"01TTransition End Date:"
 set VO(19)=$C(17,30,21,2,0,0,0,0,0,0)_"01T Currency Code Flags "
 set VO(20)=$C(18,2,19,0,0,0,0,0,0,0)_"01T System Equivalent:"
 set VO(21)=$C(18,28,15,0,0,0,0,0,0,0)_"01T Valid for Buy:"
 set VO(22)=$C(18,50,19,1,0,0,0,0,0,0)_"01T PO Accepted by CC:"
 set VO(23)=$C(19,5,16,0,0,0,0,0,0,0)_"01T For Retail Use:"
 set VO(24)=$C(19,27,16,0,0,0,0,0,0,0)_"01T Valid for Sell:"
 set VO(25)=$C(19,50,19,1,0,0,0,0,0,0)_"01T CO Accepted by CC:"
 set VO(26)=$C(20,6,15,0,0,0,0,0,0,0)_"01T Cash Currency:"
 set VO(27)=$C(20,30,13,1,0,0,0,0,0,0)_"01T Convertible:"
 set VO(28)=$C(20,51,18,0,0,0,0,0,0,0)_"01TAllow Foreign Pmt:"
 set VO(29)=$C(21,5,16,0,0,0,0,0,0,0)_"01TMultiply X Base:"
 set VO(30)=$C(23,2,19,0,0,0,0,0,0,0)_"01T Cash Count Screen:"
 set VO(31)=$C(23,44,20,0,0,0,0,0,0,0)_"01TSmallest Cash Denom:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCRCD fCRCD)  // Display screen data
 new V
 //
 set VO="62|32|13|"
 set VO(32)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(33)=$C(3,30,3,2,0,0,0,0,0,0)_"01T"_$E(fCRCD.CRCD,1,3)
 set VO(34)=$C(3,55,2,2,0,0,0,0,0,0)_"00T"_$E(fCRCD.CNTRY,1,2)
 set VO(35)=$C(4,30,40,2,0,0,0,0,0,0)_"00T"_$E(fCRCD.DESC,1,40)
 set VO(36)=$C(5,30,20,2,0,0,0,0,0,0)_"00T"_$E(fCRCD.CHKDESC,1,20)
 set VO(37)=$C(6,30,3,2,0,0,0,0,0,0)_"00T"_$E(fCRCD.CRCDNO,1,3)
 set VO(38)=$C(7,30,1,2,0,0,0,0,0,0)_"00N"_fCRCD.CURDEC
 set VO(39)=$C(7,65,1,2,0,0,0,0,0,0)_"00N"_fCRCD.RATDEC
 set VO(40)=$C(8,30,4,2,0,0,0,0,0,0)_"00N"_fCRCD.SPTDYS
 set VO(41)=$C(8,65,8,2,0,0,0,0,0,0)_"00T"_$E(fCRCD.CALENDAR,1,8)
 set V=$S(fCRCD.EXCH="":"",1:$J(fCRCD.EXCH,0,6)) set VO(42)=$C(9,30,12,2,0,0,0,0,0,0)_"00N"_$S(fCRCD.EXCH="":"",1:$J(fCRCD.EXCH,0,6))
 set VO(43)=$C(11,30,2,2,0,0,0,0,0,0)_"00N"_fCRCD.VARIANCE
 set V=$S(fCRCD.MINRATE="":"",1:$J(fCRCD.MINRATE,0,6)) set VO(44)=$C(11,65,12,2,0,0,0,0,0,0)_"00N"_$S(fCRCD.MINRATE="":"",1:$J(fCRCD.MINRATE,0,6))
 set VO(45)=$C(12,30,10,2,0,0,0,0,0,0)_"00N"_fCRCD.FXVAR
 set V=$S(fCRCD.MAXRATE="":"",1:$J(fCRCD.MAXRATE,0,6)) set VO(46)=$C(12,65,12,2,0,0,0,0,0,0)_"00N"_$S(fCRCD.MAXRATE="":"",1:$J(fCRCD.MAXRATE,0,6))
 set VO(47)=$C(14,30,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.EMU:"Y",1:"N")
 set V=$S(fCRCD.FNCRATE="":"",1:$J(fCRCD.FNCRATE,0,7)) set VO(48)=$C(14,65,12,2,0,0,0,0,0,0)_"00N"_$S(fCRCD.FNCRATE="":"",1:$J(fCRCD.FNCRATE,0,7))
 set VO(49)=$C(15,30,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fCRCD.EMUTSD)
 set VO(50)=$C(15,65,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fCRCD.EMUTED)
 set VO(51)=$C(18,22,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.SYSCEQ:"Y",1:"N")
 set VO(52)=$C(18,44,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.BUY:"Y",1:"N")
 set VO(53)=$C(18,70,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.POACC:"Y",1:"N")
 set VO(54)=$C(19,22,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.RETAIL:"Y",1:"N")
 set VO(55)=$C(19,44,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.SELL:"Y",1:"N")
 set VO(56)=$C(19,70,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.COACC:"Y",1:"N")
 set VO(57)=$C(20,22,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.CASHCUR:"Y",1:"N")
 set VO(58)=$C(20,44,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.CONV:"Y",1:"N")
 set VO(59)=$C(20,70,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.INTPMT:"Y",1:"N")
 set VO(60)=$C(21,22,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCD.TERMS:"Y",1:"N")
 set VO(61)=$C(23,22,15,2,0,0,0,0,0,0)_"00T"_$E(fCRCD.CCSCREEN,1,15)
 set V=$S(fCRCD.MINCASH="":"",1:$J(fCRCD.MINCASH,0,2)) set VO(62)=$C(23,65,12,2,0,0,0,0,0,0)_"00$"_$S(fCRCD.MINCASH="":"",1:$J(fCRCD.MINCASH,0,2))
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCRCD fCRCD)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=30,VPT=1,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="CRCD"
 set OLNTB=23065
 
 set VFSN("CRCD")="zfCRCD"
 //
 // 
	
	
 set %TAB(1)=$C(2,29,3)_"21T12402|1|[CRCD]CRCD"
 set %TAB(2)=$C(2,54,2)_"01T12409|1|[CRCD]CNTRY|[STBLCNTRY]"
 set %TAB(3)=$C(3,29,40)_"01T12401|1|[CRCD]DESC"
 set %TAB(4)=$C(4,29,20)_"01T12415|1|[CRCD]CHKDESC"
 set %TAB(5)=$C(5,29,3)_"01T12402|1|[CRCD]CRCDNO|||do VP1^V00S026(.fCRCD)"
 set %TAB(6)=$C(6,29,1)_"01N12407|1|[CRCD]CURDEC|||||0|2"
 set %TAB(7)=$C(6,64,1)_"01N12408|1|[CRCD]RATDEC|||||0|6"
 set %TAB(8)=$C(7,29,4)_"01N12436|1|[CRCD]SPTDYS"
 set %TAB(9)=$C(7,64,8)_"00T12410|1|[CRCD]CALENDAR|[UTBLNBD]"
 set %TAB(10)=$C(8,29,12)_"00N12453|1|[CRCD]EXCH|||||||6"
 set %TAB(11)=$C(10,29,2)_"00N12406|1|[CRCD]VARIANCE"
 set %TAB(12)=$C(10,64,12)_"01N12413|1|[CRCD]MINRATE|||||||6"
 set %TAB(13)=$C(11,29,10)_"00N12445|1|[CRCD]FXVAR"
 set %TAB(14)=$C(11,64,12)_"01N12414|1|[CRCD]MAXRATE|||do VP2^V00S026(.fCRCD)||||6"
 set %TAB(15)=$C(13,29,1)_"00L12456|1|[CRCD]EMU|||do VP3^V00S026(.fCRCD)"
 set %TAB(16)=$C(13,64,12)_"00N12457|1|[CRCD]FNCRATE|||do VP4^V00S026(.fCRCD)||||7"
 set %TAB(17)=$C(14,29,10)_"00D12458|1|[CRCD]EMUTSD|||do VP5^V00S026(.fCRCD)"
 set %TAB(18)=$C(14,64,10)_"00D12459|1|[CRCD]EMUTED|||do VP6^V00S026(.fCRCD)"
 set %TAB(19)=$C(17,21,1)_"00L12416|1|[CRCD]SYSCEQ"
 set %TAB(20)=$C(17,43,1)_"00L12404|1|[CRCD]BUY"
 set %TAB(21)=$C(17,69,1)_"00L12419|1|[CRCD]POACC"
 set %TAB(22)=$C(18,21,1)_"00L12403|1|[CRCD]RETAIL"
 set %TAB(23)=$C(18,43,1)_"00L12405|1|[CRCD]SELL"
 set %TAB(24)=$C(18,69,1)_"00L12420|1|[CRCD]COACC"
 set %TAB(25)=$C(19,21,1)_"00L12411|1|[CRCD]CASHCUR"
 set %TAB(26)=$C(19,43,1)_"00L12421|1|[CRCD]CONV"
 set %TAB(27)=$C(19,69,1)_"00L12440|1|[CRCD]INTPMT"
 set %TAB(28)=$C(20,21,1)_"00L12410|1|[CRCD]TERMS"
 set %TAB(29)=$C(22,21,15)_"00T12412|1|[CRCD]CCSCREEN|[STBLCSHSCR]"
 set %TAB(30)=$C(22,64,12)_"00$12418|1|[CRCD]MINCASH|||||||2"
 do VTBL(.fCRCD)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCRCD fCRCD) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordCRCD fCRCD) //
	type public String RM, X
	type public Boolean ER

	if X="" quit

	type RecordUTBLCRCDNO crcdno=Db.getRecord("UTBLCRCDNO","CRCDNO=:X",1)
	if (crcdno.crcd="") ! (crcdno.crcd=CRCD) quit

	// Currency number ~p1 is assigned to currency code ~p2 
	set ER=1
	set RM=$$^MSG(677,X,crcdno.crcd)    

	quit

VP2(RecordCRCD fCRCD) //

 // Maximum Rate Allowed may not be less than Minimum Rate Allowed
 if X<fCRCD.minrate set ER=1 set RM=$$^MSG(8471) 
 quit

VP3(RecordCRCD fCRCD) //
 if 'X do { quit 
 	set fCRCD.fncrate="" do DISPLAY^DBSMACRO("CRCD.FNCRATE","","0")
 	set fCRCD.emutsd="" do DISPLAY^DBSMACRO("CRCD.EMUTSD","","0")
 	set fCRCD.emuted="" do DISPLAY^DBSMACRO("CRCD.EMUTED","","0")
 	
	do GOTO^DBSMACRO("CRCD.SYSCEQ")
	
	quit 
 	}
 
 new EMUCRCD
 set EMUCRCD=CUVAR.emucrcd
 if EMUCRCD="" do { quit 

 	// EMU currency not defined. EMU member currencies not allowed.
 	set ER=1
	set RM=$$^MSG(4004)  
 	}
 
 if fCRCD.crcd=EMUCRCD do {

 	do DEFAULT^DBSMACRO("CRCD.FNCRATE","","1","0","0")

	// Euro Currency cannot be an EMU member currency
 	set ER=1
	set RM=$$^MSG(3348)    
 	}
 
 if CUVAR.fncrate do GOTO^DBSMACRO("CRCD.EMUTSD") 

 quit 

VP4(RecordCRCD fCRCD) //

 // Fixed conversion rate required for EMU member currencies
 if fCRCD.emu=1,X="" set ER=1 set RM=$$^MSG(3178)
 
 quit

VP5(RecordCRCD fCRCD) //

 // Data required
 if fCRCD.emu,X="" set ER=1 set RM=$$^MSG(741)

 quit

VP6(RecordCRCD fCRCD) //

 // Data required
 if fCRCD.emu,X="" set ER=1 set RM=$$^MSG(741)

 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCRCD fCRCD
 do VPR(.fCRCD)
 do VDA1(.fCRCD)
 do ^DBSPNT()
 quit

VW(RecordCRCD fCRCD)
 do VDA1(.fCRCD)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCRCD fCRCD)
 do VDA1(.fCRCD)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCRCD fCRCD
 do VDA1(.fCRCD)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCRCD fCRCD
 if sn="CRCD" do vSET1(.fCRCD,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCRCD fCRCD,di,X)
 do fCRCD.setAuditFlag(1)
 set fCRCD.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCRCD fCRCD
 if fid="CRCD" quit $$vREAD1(.fCRCD,di)
 quit ""
vREAD1(RecordCRCD fCRCD,di)
 quit fCRCD.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
