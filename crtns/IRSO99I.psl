IRSO99I		/*
	ORIG: Michael Winigrad (6969)
	DESC: IRS Processing - Form 1099-INT Original
	I18N=QUIT: Excluded from I18N standards.

	---- Comments --------------------------------------------------------
	======================================================================
		*** THIS ROUTINE IS TO BE COMPILED WITH IRSTPMTR ***
		     *** DO NOT RUN THIS ROUTINE STANDALONE ***
	======================================================================
	
	---- Revision History ------------------------------------------------
	
	10/30/06 - SWARNALP - CR 23635
		   The following changes are made in this procedure as part of 
		   the Year 2006 programming changes for magnetic media 
		   reporting of IRS 1098, 1099 & 5498 forms supported by 
		   Profile.
		   .	Modified section ARECBLD to set a value '123489' in 
		   	Amount Codes field (positions 28-41) of the "A" Record 
		   	when reporting for Form 1099-INT. Also the field 
		   	description for the new elements 8 and 9 are stored 
		   	in the second piece of their respective elements 
		   	(8 and 9) in the public array TAMT() so that this data 
		   	will get populated in the IRS Tape Transmittal table 
		   	(IRSCTTR1) later in the procedure IRSTPMTR. 
		   .	Modified section BONDS to include the following changes:
		   	O	Records with the transaction types 8, 9 and 10 
		   		are made to be reportable and the records having 
		   		no interest paid, no withholding and no interest 
		   		on private activity bonds are made non-reportable.
		   	O	Interest Paid (M1099.INT) amount is set to 
		   		Payment Amount #1 (field position 55-66) of 
		   		the Payee "B" Record, B1099INT.BAMT1 and 
		   		B1099INTCID.BAMT1 when the Transaction Type 
		   		(M1099.TYPE) is either equal to 8 - Clean Renewal 
		   		Bonds or 9 - Gulf Bonds.
		   	O	Interest Paid (M1099.INT) amount is set to 
		   		Payment Amount #8 (field position 139-150) of 
		   		the Payee "B" Record, B1099INT.BAMT8 and 
		   		B1099INTCID.BAMT8 when the Transaction Type 
		   		(M1099.TYPE) is 10 - State or Local Bonds.
		   	O	Interest Paid (M1099.INT) amount is set to 
		   		Payment Amount #3 (field position 79-90) of 
		   		the Payee "B" Record, B1099INT.BAMT3 and 
		   		B1099INTCID.BAMT3 when the Transaction Type 
		   		(M1099.TYPE) is equal to any of the bond types 
		   		1, 2, 3 or 4.	
		   	O	Int on Pvt Activity Bonds (M1099.INTPAB) is set 
		   		to Payment Amount #9 (field position 151-162) of 
		   		the Payee "B" Record, B1099INT.BAMT9 and 
		   		B1099INTCID.BAMT9 when the Transaction Type 
		   		(M1099.TYPE) is 10 - State or Local Bonds.
		   	O	Each of Payment Amounts #1, #8 and #9 are all 
		   		totalled separately to report in the tax form 
		   		report totals.
		   .	Modified section CIFCHK to to make the records reportable 
		   	for the transaction types 8, 9 and 10.
		   	
	05/15/06 - DESHPANDE S K - CR 21167
		   Modified Section BRECBLD to set address variables to mailing 
		   address instead of permanent address.
		   	
	04/21/06 - Mugilvannan - CR 20826
		   .Modified the section BONDS to replace the condition 
		    NAMCON.get to NAMCON.exists to correct the savings bonds 
		    total & Fed Inc Tax Withheld total in IRS99INTA report.
		   .Modified the section SORT to restrict account with
		    negative interest from reporting.
		   .Modified the sections BRECBLD and BONDS by moving the 
		    FCNT settings inside the inner while loop, after the call
		    to BRECWRT to correct the record count in IRS99INTA report.
		   
	04/03/06 - TITOVE - CR 20556
		   CIFCTOF variable has been set at the top of the procedure
		   to prevent undefined in BONDS when no records are built
		   by SORT. Added DISTINCT to select from TMPRPT2 to prevent
		   processing same records multiple times.

	09/26/05 - HAILEYM - CR17143
		Converted to PSL.
		
	*/
	
	// Accept "Dead code" warning during runtime of @IRSTAPE.
	#ACCEPT Date=10/14/2005;PGM=Marie Hailey
	quit
	
	
MTRCNTRL	// Master control

	type public Boolean ER
	type public Number FAMT(),FCNT,SRT
	type public String INSTADDR,INSTEIN,PAYERNAM,Q(,)
	
	type Boolean CIFCTOF = CUVAR.CTOF1099,REG
	type Number BONDS,I
	type String BRREG,REGION(),X
	
	type RecordUTBLREGION uregion
	type ResultSet rs
	
	set FCNT=""
	for I=1:1:8 set FAMT(I)=""

	set REG=Q(1).data()
	set BONDS=0
	
	do Db.fastDelete("B1099INT")
	do Db.fastDelete("B1099INTCID")
	do Db.fastDelete("TMPRPT2","PID=:%ProcessID")
	do Db.fastDelete("TMPRPT3","PID=:%ProcessID")

	do SORT(.REGION)
	
	set rs=Db.select("DISTINCT KEY1","TMPRPT2","PID=:%ProcessID")

	// If no records, do only bonds
	if rs.isEmpty() set BRREG="" do CNTRL2
	
	while rs.next() do {
		set BRREG=rs.getCol(1)
		
		if 'REGION(BRREG).exists() do {
			set uregion=Db.getRecord("UTBLREGION","KEY=:BRREG",1)
			if 'uregion.getMode() set REGION(BRREG)="" quit
			set REGION(BRREG).piece("|",1)=uregion.desc
			set REGION(BRREG).piece("|",2)=uregion.taxid
			set REGION(BRREG).piece("|",3)=uregion.city
			set REGION(BRREG).piece("|",4)=uregion.state
			set REGION(BRREG).piece("|",5)=uregion.mzip
			set REGION(BRREG).piece("|",6)=uregion.cntry
			set REGION(BRREG).piece("|",7)=uregion.ad1
			set REGION(BRREG).piece("|",8)=uregion.ad2
			set REGION(BRREG).piece("|",9)=uregion.ad3
			set REGION(BRREG).piece("|",12)=uregion.ctof1099
			}
		
		set X=REGION(BRREG).piece("|",12) 
		if X set CIFCTOF=X-1
		else  set CIFCTOF=CUVAR.CTOF1099
		
		if 'SRT,'REG do CNTRL2 quit
		if REGION(BRREG).piece("|",2,9)="" do CNTRL2 quit
		
		set PAYERNAM=REGION(BRREG).piece("|",1)
		set INSTEIN=REGION(BRREG).piece("|",2)
		set INSTADDR=REGION(BRREG).piece("|",3,5)_"|"_REGION(BRREG).piece("|",7,9)
		do CNTRL2
		}
		
	do Db.fastDelete("TMPRPT2","PID=:%ProcessID")
	do Db.fastDelete("TMPRPT3","PID=:%ProcessID")
	quit
	

CNTRL2	// Control 2

	type public Boolean BONDS,ER

	do ARECBLD quit:ER	// Build and write the "A" record
	
	// Build and write the "B" records for Interest Earnings
	do BRECBLD quit:ER
	
	// Build and write the "B" records for Savings Bond Earnings
	if 'BONDS do BONDS set BONDS=1 quit:ER

	do CRECBLD quit:ER	// Build and write the "C" record
	do STORETOT		// Store the TTR report totals
	quit


ARECBLD	// "A" record builder

	type public String TAMT()
	
	type String AMTIND,FORMCODE
	
	set FORMCODE=6	// IRS form code
	// IRS amount type indicator
	set AMTIND=123489
	set TAMT(1).piece("|",2)="Earnings Amount"
	set TAMT(2).piece("|",2)="Early Withdrawal Penalty"
	set TAMT(3).piece("|",2)="U.S. Savings Bonds, etc."
	set TAMT(4).piece("|",2)="Federal Income Tax Withheld"
	set TAMT(8).piece("|",2)="Tax-exempt Interest"
	set TAMT(9).piece("|",2)="Interest on Private Activity Bonds"
	do ARECWRT	// Write the record to tape
	quit
	

BRECBLD	// "B" record builder

	type public Boolean CIFCTOF
	type public Number AMT(),CUTOFF,FAMT(),FCNT
	type public String BRREG
	
	// If no records, quit
	if BRREG="" quit
	
	type Number ACN,AMT1,AMT2,AMT4,CID,I,TF,TI,TW,ZAMT1,ZAMT2,ZAMT4
	type String ADDR,CITY,CNTRY,CORRTN,DOCCODE,FORCNTY,FULLADDR,LNAME,NAMCON
	type String NAME,SPECIAL,STATE,TIN,TINTYPE,X,XTIN,ZIP
	
	type DbSet ds
	type RecordB1099INT b1099int
	type RecordB1099INTCID b1099cid
	type RecordCIF cif
	type RecordTMPRPT2 tmprpt2
	type RecordTMPRPT3 tmprpt3
	
	for I=1:1:9,"A","B","C" set AMT(I)=0
	
	set DOCCODE="  "	// Document specific code
	set CORRTN=" "		// Corrected return indicator
	
	// Special date position 544-750
	//; Blank |544|722
	set SPECIAL="".justify(179)
	//; State Income Tax Withheld|723|734
	set SPECIAL=SPECIAL_"".justify(12,,0)
	//; Local Income Tax Withheld|735|746
	set SPECIAL=SPECIAL_"".justify(12,,0)
	//; Blank |747|750
	set SPECIAL=SPECIAL_"".justify(4)
	
	set b1099int=Class.new("RecordB1099INT")
	set b1099int.pdate=CUVAR.TJD
	set b1099int.bamt3=0	// "Savings Bonds" currently not tallied
	
	set b1099cid=Class.new("RecordB1099INTCID")
	set b1099cid.pdate=CUVAR.TJD
	set b1099cid.bamt3=0	// "Savings Bonds" currently not tallied

	set ds=Db.selectDbSet("TMPRPT2","PID=:%ProcessID AND KEY1=:BRREG")
	while ds.next() do {
		set tmprpt2=ds.getRecord("TMPRPT2")
		
		set TI=tmprpt2.data.piece("|",1)
		set TW=tmprpt2.data.piece("|",2)
		set TF=tmprpt2.data.piece("|",3)
		
		// CIF cutoff not met
		if CIFCTOF,TI<CUTOFF,'TW,'TF quit
		
		set ACN=tmprpt2.key2
		
		set cif=Db.getRecord("CIF","ACN=:ACN",1)

		set TIN=cif.taxid
		set TINTYPE=$S(TIN?2N1"-"7N:1,TIN?3N1"-"2N1"-"4N:2,1:" ")
		set XTIN=TIN.piece("|",1).translate(" ","-")
		
		set NAME=cif.nam
		set LNAME=cif.lnm
		set FULLADDR=cif.mcity_"|"_cif.mstate_"|"_cif.mzip_"|"_cif.mcntry_"|"_cif.mad1_"|"_cif.mad2_"|"_cif.mad3_"|"_cif.mad4_"|"_cif.mloc
		set ADDR=cif.mad1_" "_cif.mad2_" "_cif.mad3
		set CITY=cif.mcity
		set STATE=cif.mstate
		set ZIP=cif.mzip.piece("-",1)_cif.mzip.piece("-",2)
		set CNTRY=cif.mcntry
		set FORCNTY=$S(CNTRY="US":" ",1:1)	// foreign country indicator
		
		if TINTYPE=2 set X=LNAME   ; 48920 - AS
		else  set X=NAME
		do NAMCNTRL^IRSTPMTR set NAMCON=X
		
		set (AMT1,AMT2,AMT4)=0
		
		set b1099cid.bkey=ACN
		set b1099cid.bnamcon=NAMCON
		set b1099cid.btintype=TINTYPE
		set b1099cid.btin=XTIN
		set b1099cid.bname=NAME
		set b1099cid.baddr1=cif.mad1
		set b1099cid.baddr2=cif.mad2
		set b1099cid.baddr3=cif.mad3
		set b1099cid.bcity=cif.mcity
		set b1099cid.bstate=cif.mstate
		set b1099cid.bzip=cif.mzip
		
		set b1099int.key=ACN
		set b1099int.bnamcon=NAMCON
		set b1099int.btintype=TINTYPE
		set b1099int.btin=XTIN
		set b1099int.bname=NAME
		set b1099int.baddr1=cif.mad1
		set b1099int.baddr2=cif.mad2
		set b1099int.baddr3=cif.mad3
		set b1099int.bcity=cif.mcity
		set b1099int.bstate=cif.mstate
		set b1099int.bzip=cif.mzip
		
		type DbSet ds1=Db.selectDbSet("TMPRPT3","PID=:%ProcessID AND KEY1=:BRREG AND KEY2=:ACN")
		while ds1.next() do {
			set tmprpt3=ds1.getRecord("TMPRPT3")
			
			set CID=tmprpt3.key3
			
			set AMT(1)=tmprpt3.data.piece("|",1)*100	// Interest earnings
			set AMT(2)=tmprpt3.data.piece("|",3)*100	// Early withdrawal penalty
			set AMT(4)=tmprpt3.data.piece("|",2)*100	// Federal income tax withheld
			
			do BRECWRT		// Write the record to tape
			
			// Calculate number of records and amounts by CID, accumulate amounts by ACN
			set FCNT=FCNT+1
			set ZAMT1=AMT(1)/100,AMT1=AMT1+ZAMT1
			set ZAMT2=AMT(2)/100,AMT2=AMT2+ZAMT2
			set ZAMT4=AMT(4)/100,AMT4=AMT4+ZAMT4
			
			// Inserting "B" Records into B1099INTCID File.
			if b1099cid.getMode() do b1099cid.setMode(0)
			set b1099cid.bseq=CID
			set b1099cid.bcid=CID
			set b1099cid.bamt1=ZAMT1
			set b1099cid.bamt2=ZAMT2
			set b1099cid.bamt4=ZAMT4
			do b1099cid.bypassSave()
			}
			
		// Inserting "B" Records into B1099INT File.
		if b1099int.getMode() do b1099int.setMode(0)
		set b1099int.bseq=CID
		set b1099int.bcid=CID
		set b1099int.bamt1=AMT1
		set b1099int.bamt2=AMT2
		set b1099int.bamt4=AMT4
		do b1099int.bypassSave()

		// Calculate tax form report totals.
		
		set FAMT(1)=FAMT(1)+AMT1	// Interest earnings
		set FAMT(2)=FAMT(2)+AMT2	// Early withdrawal penalty
		set FAMT(4)=FAMT(4)+AMT4	// Federal income tax withheld
		}
	quit


SORT(String REGION())	// Sort Records

	type public Boolean REG
	type public Number CUTOFF,SRT
	type public String Q()
	
	type Boolean CIFCTOF,QUIT
	type Number ACN,BW,CID,FOR,INT,OACN,TI(),TF(),TW()
	type String BRREG,N,R,X
	
	type RecordACN acn
	type RecordTMPRPT2 tmprpt2
	type RecordTMPRPT3 tmprpt3
	type RecordUTBLREGION uregion
	type ResultSet rs
	
	set tmprpt2=Class.new("RecordTMPRPT2")
	set tmprpt2.pid=%ProcessID
	
	set tmprpt3=Class.new("RecordTMPRPT3")
	set tmprpt3.pid=%ProcessID
	
	set OACN=""
	set rs=Db.select("ACN,CID","RELCIF",,"ACN")
	while rs.next() do {
		set ACN=rs.getCol(1)
		set CID=rs.getCol(2)
		
		if OACN<>ACN do {
			set R="" for  set R=TI(R).order() quit:R.isNull()  do {
				if tmprpt2.getMode() do tmprpt2.setMode(0)
				set tmprpt2.key1=R
				set tmprpt2.key2=OACN
				set tmprpt2.data=TI(R)_"|"_TW(R)_"|"_TF(R)
				do tmprpt2.bypassSave()
				}
			
			set OACN=ACN
			kill TI,TF,TW
			}
		
		set acn=Db.getRecord("ACN","CID=:CID",1)
		if ACN<>acn.acn quit	// Not primary customer		
		if acn.grp="ESC" quit 	// Escrow done under loan
		
		set (BW,FOR,INT,QUIT)=0
		if acn.cls="L" do ESC(CID,.FOR,.INT,.BW)
		if acn.cls="D" do {
			type RecordDEP dep={RecordDEP}acn
			
			if dep.oid set QUIT=1 quit	// Skip OID accounts
			if dep.ira set QUIT=1 quit	// Skip IRA accounts
			if dep.irsexm set QUIT=1 quit	// Account exempt from 1099 reporting

			set BW=dep.bwpty
			set FOR=dep.penpty
			set INT=dep.ipty
			}
			
		// Don't report negative interest
		if (INT < 0) set INT = 0
		
		if QUIT=1 quit
		
		do BRREG^DEPDI
		if BRREG="" set BRREG="*"
		
		#ACCEPT Date=10/14/2005;PGM=Marie Hailey
		if REG set N="" if 1 for  set N=Q(1,N).order() quit:N.isNull()  xecute Q(1,N) else  quit
		
		if 'REGION(BRREG).exists() do {
			set uregion=Db.getRecord("UTBLREGION","KEY=:BRREG",1)
			if 'uregion.getMode() set REGION(BRREG)="" quit
			set REGION(BRREG).piece("|",1)=uregion.desc
			set REGION(BRREG).piece("|",2)=uregion.taxid
			set REGION(BRREG).piece("|",3)=uregion.city
			set REGION(BRREG).piece("|",4)=uregion.state
			set REGION(BRREG).piece("|",5)=uregion.mzip
			set REGION(BRREG).piece("|",6)=uregion.cntry
			set REGION(BRREG).piece("|",7)=uregion.ad1
			set REGION(BRREG).piece("|",8)=uregion.ad2
			set REGION(BRREG).piece("|",9)=uregion.ad3
			set REGION(BRREG).piece("|",12)=uregion.ctof1099
			}
			
		set X=REGION(BRREG).piece("|",12) 
		if X set CIFCTOF=X-1
		else  set CIFCTOF=CUVAR.CTOF1099 
		
		if 'SRT set BRREG="*"
		
		if tmprpt3.getMode() do tmprpt3.setMode(0)
		
		// Reportable array (don't consider CIF cutoff, single account only)
		if 'CIFCTOF,(INT'<CUTOFF!(BW!FOR)) do {
			set tmprpt3.key1=BRREG
			set tmprpt3.key2=ACN
			set tmprpt3.key3=CID
			set tmprpt3.data=INT_"|"_BW_"|"_FOR
			do tmprpt3.bypassSave()
			}

		// Reportable array (consider CIF cutoff)			
		if CIFCTOF,(INT!BW!FOR) do {
			set tmprpt3.key1=BRREG
			set tmprpt3.key2=ACN
			set tmprpt3.key3=CID
			set tmprpt3.data=INT_"|"_BW_"|"_FOR
			do tmprpt3.bypassSave()
			
			set TI(BRREG)=$G(TI(BRREG))+INT
			set TW(BRREG)=$G(TW(BRREG))+BW
			set TF(BRREG)=$G(TF(BRREG))+FOR
			}
		}
	quit


ESC(Number CID,Number FOR,Number INT,Number WITH)	// Escrow accounts

	type DbSet ds
	type RecordLNBIL0 lnbil0
	
	set ds=Db.selectDbSet("LNBIL0","CID=:CID")
	while ds.next() do {
		set lnbil0=ds.getRecord("LNBIL0")
		
		if lnbil0.pe01da do DEP(lnbil0.pe01da,.FOR,.INT,.WITH)
		if lnbil0.pe02da do DEP(lnbil0.pe02da,.FOR,.INT,.WITH)
		if lnbil0.pe03da do DEP(lnbil0.pe03da,.FOR,.INT,.WITH)
		if lnbil0.pe04da do DEP(lnbil0.pe04da,.FOR,.INT,.WITH)
		if lnbil0.pe05da do DEP(lnbil0.pe05da,.FOR,.INT,.WITH)
		if lnbil0.pe06da do DEP(lnbil0.pe06da,.FOR,.INT,.WITH)
		if lnbil0.pe07da do DEP(lnbil0.pe07da,.FOR,.INT,.WITH)
		if lnbil0.pe08da do DEP(lnbil0.pe08da,.FOR,.INT,.WITH)
		if lnbil0.pe09da do DEP(lnbil0.pe09da,.FOR,.INT,.WITH)
		if lnbil0.pe10da do DEP(lnbil0.pe10da,.FOR,.INT,.WITH)
		if lnbil0.pe11da do DEP(lnbil0.pe11da,.FOR,.INT,.WITH)
		if lnbil0.pe12da do DEP(lnbil0.pe12da,.FOR,.INT,.WITH)
		if lnbil0.pe13da do DEP(lnbil0.pe13da,.FOR,.INT,.WITH)
		if lnbil0.pe14da do DEP(lnbil0.pe14da,.FOR,.INT,.WITH)
		if lnbil0.pe15da do DEP(lnbil0.pe15da,.FOR,.INT,.WITH)
		if lnbil0.pe16da do DEP(lnbil0.pe16da,.FOR,.INT,.WITH)
		if lnbil0.pe17da do DEP(lnbil0.pe17da,.FOR,.INT,.WITH)
		if lnbil0.pe18da do DEP(lnbil0.pe18da,.FOR,.INT,.WITH)
		if lnbil0.pe19da do DEP(lnbil0.pe19da,.FOR,.INT,.WITH)
		if lnbil0.pe20da do DEP(lnbil0.pe20da,.FOR,.INT,.WITH)
		}
	quit
	
	
DEP(Number ECID,Number FOR,Number INT,Number WITH)	// Payment Element - Deposit Account
		
	type RecordDEP dep
	
	set dep=Db.getRecord("DEP","CID=:ECID",1)
	if 'dep.getMode() quit
	
	if dep.oid quit		// Savings bond type of interest
	if dep.irsexm quit	// Exempt from IRS1099 reporting
	
	set INT=INT+dep.ipty
	set WITH=WITH+dep.bwpty
	set FOR=FOR+dep.penpty
	quit


BONDS	// Savings bond transactions

	type public Boolean CIFCTOF
	type public Date BEGYR,ENDYR
	type public Number AMT(),CUTOFF,FAMT(),FCNT

	type Boolean DONE,NO
	type Number AMT1,AMT3,AMT4,AMT8,AMT9,BOND,CID,I,ZAMT1,ZAMT3,ZAMT4,ZAMT8,ZAMT9
	type String ADDR,CITY,CNTRY,CORRTN,DOCCODE,FORCNTY,FULLADDR,LNAME,NAMCON
	type String NAME,SPECIAL,STATE,TIN,TINTYPE,X,XTIN,ZIP

	type RecordB1099INT b1099int
	type RecordB1099INTCID b1099cid
	type RecordM1099 m1099
	type ResultSet rs
	
	for I=1:1:9,"A","B","C" set AMT(I)=0
	
	set DOCCODE="  "	// Document specific code
	set CORRTN=" "		// Corrected return indicator
	set SPECIAL=""
	
	set b1099int=Class.new("RecordB1099INT")
	set b1099int.pdate=CUVAR.TJD
	set b1099int.bamt1=0	// "Interest Earnings" not tallied
	set b1099int.bamt2=0	// "Early Withdrawal Penalty" not tallied

	set b1099cid=Class.new("RecordB1099INTCID")
	set b1099cid.pdate=CUVAR.TJD
	set b1099cid.bamt1=0	// "Interest Earnings" not tallied
	set b1099cid.bamt2=0	// "Early Withdrawal Penalty" not tallied
	
	set rs=Db.select("DISTINCT TAXID","M1099","FORMTYP=1")
	while rs.next() do {
		set (TIN,XTIN)=rs.getCol(1)
		set TINTYPE=$S(TIN?2N1"-"7N:1,TIN?3N1"-"2N1"-"4N:2,1:" ")
		
		set (AMT1,AMT3,AMT4,AMT8,AMT9,DONE,NO)=0
		
		set b1099int.key=TIN
		set b1099int.btintype=TINTYPE
		set b1099int.btin=XTIN
				
		set b1099cid.bkey=TIN
		set b1099cid.btintype=TINTYPE
		set b1099cid.btin=XTIN

		type DbSet ds=Db.selectDbSet("M1099","TAXID=:TIN AND FORMTYP=1")
		if ds.isEmpty() quit
		while ds.next() do {
			for I=1:1:4,8,9 set AMT(I)=0
			
			set m1099=ds.getRecord("M1099")
			
			set BOND=m1099.seq
		
			if m1099.td<BEGYR!(m1099.td>ENDYR) quit	// Wrong year
			if (m1099.int+m1099.intwh+m1099.intpab)=0 quit	// No amounts
			if (m1099.type>4)&(m1099.type<8) quit	// Non-reportable
			
			// Amount is less than cutoff
			if 'CIFCTOF,m1099.int<CUTOFF,+m1099.intwh=0,+m1099.intpab=0 quit
			if CIFCTOF,'DONE do CIFCHK(TIN,BOND,m1099.int,m1099.intwh,m1099.intpab) if NO quit
			
			set CID=TIN_"-"_BOND
	
			// Clean Renewal Bonds and Gulf Bonds
			if (m1099.type=8)!(m1099.type=9) set AMT(1)=m1099.int*100
				
			// State or Local Bonds 
			if m1099.type=10 do {
				set AMT(8)=m1099.int*100
				set AMT(9)=m1099.intpab*100
				}
			
			// Savings Bond
			if ((m1099.type=1)!(m1099.type=2)!(m1099.type=3)!(m1099.type=4)) set AMT(3)=m1099.int*100
			
			// Federal income tax withheld
			set AMT(4)=m1099.intwh*100	  
			
			// Promotional item = interest
			//if m1099.type=7 set AMT(1)=AMT(3),AMT(3)=0

			set NAME=m1099.nam.translate(","," ")
			set LNAME=m1099.lnam
			set FULLADDR=m1099.ad1_"|"_m1099.ad2_"|"_m1099.ad3_"|"_m1099.city_"|"_m1099.state_"|"_m1099.mzip
			set ADDR=m1099.ad1_" "_m1099.ad2_" "_m1099.ad3
			set CITY=m1099.city
			set STATE=m1099.state
			set ZIP=m1099.mzip.piece("-",1)_m1099.mzip.piece("-",2)
			set CNTRY=m1099.cntry
			set FORCNTY=$S(CNTRY="US":" ",1:1)	// Foreign country indicator
			
			do BRECWRT	// Write the record to tape
			
			// Calculate number of records and amounts by CID, accumulate amounts by ACN
			set FCNT=FCNT+1
			set ZAMT1=AMT(1)/100,AMT1=AMT1+ZAMT1
			set ZAMT3=AMT(3)/100,AMT3=AMT3+ZAMT3
			set ZAMT4=AMT(4)/100,AMT4=AMT4+ZAMT4
			set ZAMT8=AMT(8)/100,AMT8=AMT8+ZAMT8
			set ZAMT9=AMT(9)/100,AMT9=AMT9+ZAMT9
			
			if TINTYPE=2 set X=LNAME
			else  set X=NAME
			do NAMCNTRL^IRSTPMTR set NAMCON=X
			
			// Inserting "B" Records saving bonds into B1099INTCID File
			if b1099cid.getMode() do b1099cid.setMode(0)
			set b1099cid.bseq=BOND
			set b1099cid.bnamcon=NAMCON
			set b1099cid.bcid=CID
			set b1099cid.bamt1=ZAMT1
			set b1099cid.bamt3=ZAMT3
			set b1099cid.bamt4=ZAMT4
			set b1099cid.bamt8=ZAMT8
			set b1099cid.bamt9=ZAMT9
			set b1099cid.bname=NAME
			set b1099cid.baddr1=m1099.ad1
			set b1099cid.baddr2=m1099.ad2
			set b1099cid.baddr3=m1099.ad3
			set b1099cid.bcity=CITY
			set b1099cid.bstate=STATE
			set b1099cid.bzip=m1099.mzip
			do b1099cid.bypassSave()
			}
		
		if NO quit
		
		if 'NAMCON.exists() quit
		
		set m1099=Db.getRecord("M1099","TAXID=:TIN,SEQ=:BOND")
		
		// Inserting "B" Records into B1099INT File.
		if b1099int.getMode() do b1099int.setMode(0)
		set b1099int.bseq=BOND
		set b1099int.bnamcon=NAMCON
		set b1099int.bcid=CID
		set b1099int.bamt1=AMT1
		set b1099int.bamt3=AMT3
		set b1099int.bamt4=AMT4
		set b1099int.bamt8=AMT8
		set b1099int.bamt9=AMT9
		set b1099int.bname=NAME
		set b1099int.baddr1=m1099.ad1
		set b1099int.baddr2=m1099.ad2
		set b1099int.baddr3=m1099.ad3
		set b1099int.bcity=CITY
		set b1099int.bstate=STATE
		set b1099int.bzip=m1099.mzip
		do b1099int.bypassSave()
		
		// Calculate tax form report totals.
		set FAMT(1)=FAMT(1)+AMT1
		set FAMT(3)=FAMT(3)+AMT3	// Savings Bonds
		set FAMT(4)=FAMT(4)+AMT4	// Federal income tax withheld
		set FAMT(8)=FAMT(8)+AMT8
		set FAMT(9)=FAMT(9)+AMT9
		}
	quit
	
	
CIFCHK(String TIN,Number BOND,Number TI,Number TW,Number TIPAB)	// Check bond totals for 1 taxid
	
	type public Boolean DONE,NO
	type public Date BEGYR,ENDYR
	type public Number CUTOFF
	
	type DbSet ds
	type RecordM1099 m1099
	
	set DONE=1
	
	set ds=Db.selectDbSet("M1099","TAXID=:TIN AND SEQ>:BOND AND FORMTYP=1")
	while ds.next() do {
		set m1099=ds.getRecord("M1099")
		
		if m1099.td<BEGYR!(m1099.td>ENDYR) quit	// Wrong year
		if (m1099.type>4)&(m1099.type<8) quit	// Non-reportable
		
		set TI=TI+m1099.int
		set TW=TW+m1099.intwh
		set TIPAB=TIPAB+m1099.intpab
		}
		
	if TI<CUTOFF&(TW=0)&(TI)&(TIPAB=0) set NO=1
	quit
	
	
CRECBLD	// "C" record builder
	
	do CRECWRT	// Write the record to tape
	quit


%STOPLOD	// Stop %ZRTNLOD from this point on down

	quit
	
	
TRECWRT		// Dummy line reference for GT.M

	quit
	

ARECWRT		// Dummy line reference for GT.M

	quit
	
	
BRECWRT		// Dummy line reference for GT.M

	quit
	
	
CRECWRT		// Dummy line reference for GT.M

	quit
	
	
STORETOT	// Dummy line reference for GT.M

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60585^12815^P.R. Swarnalatha^21048"	// Signature - LTD^TIME^USER^SIZE
