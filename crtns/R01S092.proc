R01S092	// SCA019 - Daily Cost Center Totals by Group/Type
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String RDATE
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA019"
	set RN="Daily Cost Center Totals by Group/Type"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[TTL]TJD|[TTL]TJD:DISTINCT:NOVAL||S RDATE=X||D|Transaction Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String RDATE
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CCR,CDR,CONAM,CR,CRCD,DESC,DR,RID,RN,TXCR,TXDR,VL,VLOF,VRF(),VSTATS(),X,XCR,XDR,XFR,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA019",RN="Daily Cost Center Totals by Group/Type"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA019","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[TTL]TYPE#1#4,[TTL]DRCNT#10#6,[TTL]DRAMT#18#12,[TTL]CRCNT#32#6,[TTL]CRAMT#40#12,[TTL]NEW#54#6,[TTL]CLOSED#62#6,[TTL]MDRCNT#72#6,[TTL]MDRAMT#80#12,[TTL]MCRCNT#94#6,[TTL]MCRAMT#102#12,[TTL]MNEW#116#6,[TTL]MCLOSED#124#6"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Transaction Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE="TTL.TJD=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Daily Cost Center Totals by Group/Type"
		set VBNRINFO("PGM")="R01S092"
		set VBNRINFO("RID")="SCA019"
		set VBNRINFO("TABLES")="TTL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TTL]CRCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TTL]CC"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TTL]TJD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TTL]CLS"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,TTL]GRP"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,TTL]TYPE"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,TTL]GLSC"

		set VBNRINFO("DOC",1)="The Daily Cost Center Totals Report (SCA019) lists cost center totals"
		set VBNRINFO("DOC",2)="by product type and group.  The totals include daily and month-to-date"
		set VBNRINFO("DOC",3)="debit/credit amounts, as well as a count of the number of new accounts"
		set VBNRINFO("DOC",4)="and closed accounts.  This report also indicates the daily change in"
		set VBNRINFO("DOC",5)="debit and credit totals for all product types within each cost center."
		set VBNRINFO("DOC",6)=""
		set VBNRINFO("DOC",7)="Refer to the Product Type/Cost Center Transfers Reference Manual for"
		set VBNRINFO("DOC",8)="further information."
		set VBNRINFO("DOC",9)=""

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:16 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("TTL.TJD,TTL.CRCD,TTL.CLS,TTL.GRP,TTL.TYPE,TTL.GLSC,TTL.CC,TTL.CRAMT,TTL.DRAMT,TTL.TRIN,TTL.TROUT,TTL.OTRIN,TTL.CTROUT,TTL.DRCNT,TTL.CRCNT,TTL.NEW,TTL.CLOSED,TTL.MDRCNT,TTL.MDRAMT,TTL.MCRCNT,TTL.MCRAMT,TTL.MNEW,TTL.MCLOSED","TTL","TTL.TJD=:VIN1","TTL.CRCD,TTL.CC,TTL.TJD,TTL.CLS,TTL.GRP,TTL.TYPE,TTL.GLSC","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc7,vovc1,vovc3,vovc4,vovc5,vovc6
	set vovc2="",vovc7="",vovc1="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc7,vc7,vovc1,vc1,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc2=vc2,vovc7=vc7,vovc1=vc1,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// TTL.TJD
	set vc2=V.piece($C(9),2)			// TTL.CRCD
	set vc3=V.piece($C(9),3)			// TTL.CLS
	set vc4=V.piece($C(9),4)			// TTL.GRP
	set vc5=V.piece($C(9),5)			// TTL.TYPE
	set vc6=V.piece($C(9),6)			// TTL.GLSC
	set vc7=V.piece($C(9),7)			// TTL.CC
	set vc8=V.piece($C(9),8)			// TTL.CRAMT
	set vc9=V.piece($C(9),9)			// TTL.DRAMT
	set vc10=V.piece($C(9),10)			// TTL.TRIN
	set vc11=V.piece($C(9),11)			// TTL.TROUT
	set vc12=V.piece($C(9),12)			// TTL.OTRIN
	set vc13=V.piece($C(9),13)			// TTL.CTROUT
	set vc14=V.piece($C(9),14)			// TTL.DRCNT
	set vc15=V.piece($C(9),15)			// TTL.CRCNT
	set vc16=V.piece($C(9),16)			// TTL.NEW
	set vc17=V.piece($C(9),17)			// TTL.CLOSED
	set vc18=V.piece($C(9),18)			// TTL.MDRCNT
	set vc19=V.piece($C(9),19)			// TTL.MDRAMT
	set vc20=V.piece($C(9),20)			// TTL.MCRCNT
	set vc21=V.piece($C(9),21)			// TTL.MCRAMT
	set vc22=V.piece($C(9),22)			// TTL.MNEW
	set vc23=V.piece($C(9),23)			// TTL.MCLOSED
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13
 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

	// Accumulate totals

	type Date PDT
	type Number CC, TYPE
	type String CLS, CLSC, CRCD, GRP, X
	
	set PDT = vc1
	set CRCD = vc2
	set CLS = vc3
	set GRP = vc4
	set TYPE = vc5
	set GLSC = vc6
	set CC = vc7

	type RecordTMPRPT7 tmp7 = Db.getRecord("TMPRPT7", "PID = :%ProcessID, KEY1 = :PDT, KEY2 = :CRCD, KEY3 = :CLS, KEY4 = :GRP, KEY5 = :TYPE, KEY6 = :GLSC, KEY7 = :CC", 1)

	if CC = "zzzzz" do SETCOL(.tmp7,TYPE) quit
	
	// If not breaking down by branch, * = institution
	if CC = "*" do { quit
		
		set tmp7.data = vc8_"|"_vc9_"|"_vc10_"|"_vc11_"|"_vc12_"|"_vc13

		do SETCOL(.tmp7,TYPE)
		}
	
	// Move into totals for institution at "zzzzz" level
	set X = tmp7.data.piece("|",1) + vc8
	set X = X_"|"_tmp7.data.piece("|",2) + vc9
	set X = X_"|"_tmp7.data.piece("|",3) + vc10
	set X = X_"|"_tmp7.data.piece("|",4) + vc11
	set X = X_"|"_tmp7.data.piece("|",5) + vc12
	set X = X_"|"_tmp7.data.piece("|",6) + vc13

	set tmp7.data = X
	
	do tmp7.bypassSave()

	do SETCOL(.tmp7,TYPE)
	
	quit
	
SETCOL(RecordTMPRPT7 tmp7,Number TYPE)

	type public Number CCR, CDR, CR, DR, TXCR, TXDR, X, XCR, XDR
	type public String XFR
	
	type Number TRB = 0

	if vc3 = "L" do {

		type RecordPRODDFTL dftl = Db.getRecord("PRODDFTL", "TYPE = :TYPE")
		set TRB = dftl.trb
		}

	if vc3 = "D" do {

		type RecordPRODDFTD dftd = Db.getRecord("PRODDFTD", "TYPE = :TYPE")
		set TRB = dftd.trb
		} 

	set CR = tmp7.data.piece("|",1)
	set DR = tmp7.data.piece("|",2)
	
	if TRB do {
		
		set (TXDR,XDR) = tmp7.data.piece("|",3)
		set (TXCR,XCR) = tmp7.data.piece("|",4)
		set CDR = tmp7.data.piece("|",5)
		set CCR = tmp7.data.piece("|",6)
		set X = (DR + XDR) - (CR + XCR)
		}
	
	else  do {
		
		set (TXCR,XCR) = tmp7.data.piece("|",3)
		set (TXDR,XDR) = tmp7.data.piece("|",4)
		set CCR = tmp7.data.piece("|",5)
		set CDR = tmp7.data.piece("|",6)
		set X = (CR + XCR) - (DR + XDR)
		}

	if (XCR ! XDR) set XFR = "Tfr:"
	else  set XFR = ""
	
	quit

VPREAQ	// Pre-processor (after query)

 /*
  ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */

 type public String CRCD, DESC, XFR
 
 set (CRCD,DESC,XFR) = ""
	quit

VPREBQ	// Pre-processor (before query)

 /*
  ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */

 //Incoming=RDATE
	quit

VRPOST	// Report post-processor

 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

 do Db.fastDelete("TMPRPT7", "PID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc2,vovc2,vc7,vovc7,vc1,vovc1,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(vovc2'=vc2) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb2!(+vovc7'=+vc7) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb3!(vovc1'=vc1) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb4!(vovc3'=vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,VH0=1
	if vb5!(vovc4'=vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,VH0=1
	if vb6!(+vovc5'=+vc5) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),CCR,CDR,TXCR,TXDR,vc17,vc8,vc15,vc9,vc14,vc23,vc21,vc20,vc19,vc18,vc22,vc16
	type Public String VSTATS

	set VT(7)=VT(7)+1
	set VT(7,1,1)=VT(7,1,1)+CCR			// @TOT(<<CCR>>)
	set VT(7,2,1)=VT(7,2,1)+CDR			// @TOT(<<CDR>>)
	set VT(7,3,1)=VT(7,3,1)+TXCR			// @TOT(<<TXCR>>)
	set VT(7,4,1)=VT(7,4,1)+TXDR			// @TOT(<<TXDR>>)
	set VT(7,5,1)=VT(7,5,1)+vc17			// @TOT([TTL]CLOSED)
	set VT(7,6,1)=VT(7,6,1)+vc8			// @TOT([TTL]CRAMT)
	set VT(7,7,1)=VT(7,7,1)+vc15			// @TOT([TTL]CRCNT)
	set VT(7,8,1)=VT(7,8,1)+vc9			// @TOT([TTL]DRAMT)
	set VT(7,9,1)=VT(7,9,1)+vc14			// @TOT([TTL]DRCNT)
	set VT(7,10,1)=VT(7,10,1)+vc23			// @TOT([TTL]MCLOSED)
	set VT(7,11,1)=VT(7,11,1)+vc21			// @TOT([TTL]MCRAMT)
	set VT(7,12,1)=VT(7,12,1)+vc20			// @TOT([TTL]MCRCNT)
	set VT(7,13,1)=VT(7,13,1)+vc19			// @TOT([TTL]MDRAMT)
	set VT(7,14,1)=VT(7,14,1)+vc18			// @TOT([TTL]MDRCNT)
	set VT(7,15,1)=VT(7,15,1)+vc22			// @TOT([TTL]MNEW)
	set VT(7,16,1)=VT(7,16,1)+vc16			// @TOT([TTL]NEW)
	quit

VDTL6	// Detail
	type public String %TIM,CCR,CDR,CR,CRCD,DESC,DR,IOSL,RDATE,TXCR,TXDR,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),X,XCR,XDR,XFR,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc5,4)
	set VL=VL_$J("",5-VL.length())_$J(vc14,10)
	set VL=VL_$J("",17-VL.length())_$J($FN(vc9,",",2),12)
	set VL=VL_$J("",30-VL.length())_$J(vc15,7)
	set VL=VL_$J("",39-VL.length())_$J($FN(vc8,",",2),12)
	set VL=VL_$J("",52-VL.length())_$J(vc16,7)
	set VL=VL_$J("",60-VL.length())_$J(vc17,7)
	set VL=VL_$J("",68-VL.length())_$J(vc18,9)
	set VL=VL_$J("",79-VL.length())_$J($FN(vc19,",",2),12)
	set VL=VL_$J("",92-VL.length())_$J(vc20,7)
	set VL=VL_$J("",101-VL.length())_$J($FN(vc21,",",2),12)
	set VL=VL_$J("",114-VL.length())_$J(vc22,7)
	set VL=VL_$J("",122-VL.length())_$J(vc23,7)
	do VOM
	set VL=$E(XFR,1,4)
	set VL=VL_$J("",11-VL.length())_$S(+CDR=0:$J("",4),1:$J(CDR,4))
	set VL=VL_$J("",17-VL.length())_$J(XDR,12,2)
	set VL=VL_$J("",33-VL.length())_$S(+CCR=0:$J("",4),1:$J(CCR,4))
	set VL=VL_$J("",39-VL.length())_$J(XCR,12,2)
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM6	// Summary
	type public String %TIM,CCR,CDR,CR,CRCD,DESC,DR,I,IOSL,RDATE,TXCR,TXDR,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),X,XCR,XDR,XFR,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate

	if 'VT(6) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="         "_"______  ____________  ______  ____________  ______  ______"
	set VL=VL_$J("",71-VL.length())_"______  ____________  ______  ____________  ______  ______"
	do VOM
	set VL="TOTALS:"
	set V=VT(6,9,1)					// @TOT([TTL]DRCNT,)
	set VL=VL_$J("",7-VL.length())_$J(V,8)
	set V=VT(6,7,1)					// @TOT([TTL]CRCNT,)
	set VL=VL_$J("",29-VL.length())_$J(V,8)
	set V=VT(6,16,1)				// @TOT([TTL]NEW,)
	set VL=VL_$J("",53-VL.length())_$J(V,6)
	set V=VT(6,5,1)					// @TOT([TTL]CLOSED,)
	set VL=VL_$J("",61-VL.length())_$J(V,6)
	set V=VT(6,14,1)				// @TOT([TTL]MDRCNT,)
	set VL=VL_$J("",69-VL.length())_$J(V,8)
	set V=VT(6,12,1)				// @TOT([TTL]MCRCNT,)
	set VL=VL_$J("",91-VL.length())_$J(V,8)
	set V=VT(6,15,1)				// @TOT([TTL]MNEW,)
	set VL=VL_$J("",115-VL.length())_$J(V,6)
	set V=VT(6,10,1)				// @TOT([TTL]MCLOSED,)
	set VL=VL_$J("",123-VL.length())_$J(V,6)
	do VOM
	set V=VT(6,8,1)					// @TOT(DRAMT,)
	set VL="               "_$J($FN(V,",",2),14)
	set V=VT(6,6,1)					// @TOT(CRAMT,)
	set VL=VL_$J("",37-VL.length())_$J($FN(V,",",2),14)
	set V=VT(6,13,1)				// @TOT(MDRAMT,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(6,11,1)				// @TOT(MCRAMT,)
	set VL=VL_$J("",99-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="Tfr:"
	set V=VT(6,2,1)					// @TOT(<<CDR>>,)
	set VL=VL_$J("",7-VL.length())_$J(V,8)
	set V=VT(6,4,1)					// @TOT(<<TXDR>>,)
	set VL=VL_$J("",15-VL.length())_$J(V,14,2)
	set V=VT(6,1,1)					// @TOT(<<CCR>>,)
	set VL=VL_$J("",29-VL.length())_$J(V,8)
	set V=VT(6,3,1)					// @TOT(<<TXCR>>,)
	set VL=VL_$J("",37-VL.length())_$J(V,14,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CCR,CDR,CONAM,CR,CRCD,DESC,DR,RDATE,RID,RN,TXCR,TXDR,VL,X,XCR,XDR,XFR,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA019)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$J($$DAT^%ZM(RDATE),10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V="Currency "_vc2_" - "_DESC do VP2 quit:VFMQ!verror.get()  set VL=V
	set V=vc7,VO=V set V=$E(V,1,14) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",61-VL.length())_V		// [SYSDEV,TTL]CC
	do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(GRP_" T o t a l s",1,30) set VL="                                                             "_V
	do VOM
	set VL="         "_"** - - - - - - - - - -   D a i l y  - - - - - - - - - - **    ** - - - - - -  M o n t h - t o - D a t e - - - - - - - **"
	do VOM
	set VL="Prod     < - -  Debits  - - >  < - -  Credits - - >    < Accounts >    < - -  Debits  - - >  < - -  Credits - - >    < Accounts >"
	do VOM
	set VL="Type     Number        Amount  Number        Amount     New  Closed    Number        Amount  Number        Amount     New  Closed"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Currency <<CRCD>> - <<DESC>>

	type public String vc2
 /*
  ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */

 type public String CRCD, DESC

 type String CO = CUVAR.CO

 set CRCD = vc2 quit:CRCD.isNull()

 type RecordCRCD crcd = Db.getRecord("CRCD", "CO = :CO, CRCD = :CRCD")

 set DESC = crcd.desc
	quit

VP2	// Column post-processor - Currency <<CRCD>> - <<DESC>>

 /*
  ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */

 type public Boolean %MCP
 type public String V, VL

 if '%MCP set (V,VL) = ""
	quit

VP3	// Column post-processor - [SYSDEV,TTL]CC

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */

 type public Number CC
 type public String V

 set CC = vc7

 // Cost Center ~p1
 set V = $S((CC = "zzzzz")!(CC = "*"):"Institution",1:$$^MSG(6290,CC))
	quit

VP4	// Column pre-processor - Variable: GRP_" T o t a l s"

	type public String vc4
 /*
  ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */

 type public String GRP

 set GRP = vc4
	quit
