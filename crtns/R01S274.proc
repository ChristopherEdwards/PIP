R01S274	// SCA264 - Revolving Credit Trial Bal by Curr Code
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA264"
	set RN="Revolving Credit Trial Bal by Curr Code"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LN]TYPE|[PRODDFTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN2")="|255||[LN]CRCD|||D EXT^DBSQRY||T|Currency Code|||||"
	set %TAB("VIN3")="|255||[LN]CID|[LN]CID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Account Number|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,DESC,RID,RN,TCRCD,TTYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA264",RN="Revolving Credit Trial Bal by Curr Code"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA264","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LN]CID#1#12,[LN]CC#14#6,[LN]LNM#21#18,[LN]BAL#40#12,[LN]ODT#53#10,[LN]TLD#73#10,[LN]ACR#84#8,[LN]PMT#94#7,[LN]LCHG#108#6\[LN]CRLMT#55#8,[LN]IRN#64#8,[LN]DIST1ND#73#10,[LN]IYTD#84#8,[LN]DIST1FRE#94#12,[LN]MCHG#108#6"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]CRCD "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]CID "_VIN3,SEQ=SEQ+1
		set DQQRY(SEQ)="[LN]CLS=""L""",SEQ=SEQ+1
		set DQQRY(SEQ)="[LN]GRP=""RC""",SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Product Type"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Currency Code"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Account Number"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Revolving Credit Trial Bal by Curr Code"
		set VBNRINFO("PGM")="R01S274"
		set VBNRINFO("RID")="SCA264"
		set VBNRINFO("TABLES")="LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LN]CLS"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LN]GRP"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LN]TYPE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LN]CRCD"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LN]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:5 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LN.CLS,LN.GRP,LN.TYPE,LN.CRCD,LN.CID,LN.BAL,LN.CC,"
	set VSELECT=VSELECT_"LN.LNM,LN.ODT,LN.TLD,LN.ACR,LN.PMT,LN.LCHG,LN.CRLM"
	set VSELECT=VSELECT_"T,LN.IRN,LN.DIST1ND,LN.IYTD,LN.DIST1FRE,LN.MCHG"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LN",VWHERE,"LN.CLS,LN.GRP,LN.TYPE,LN.CRCD,LN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19
	set vc1=V.piece($C(9),1)			// LN.CLS
	set vc2=V.piece($C(9),2)			// LN.GRP
	set vc3=V.piece($C(9),3)			// LN.TYPE
	set vc4=V.piece($C(9),4)			// LN.CRCD
	set vc5=V.piece($C(9),5)			// LN.CID
	set vc6=V.piece($C(9),6)			// LN.BAL
	set vc7=V.piece($C(9),7)			// LN.CC
	set vc8=V.piece($C(9),8)			// LN.LNM
	set vc9=V.piece($C(9),9)			// LN.ODT
	set vc10=V.piece($C(9),10)			// LN.TLD
	set vc11=V.piece($C(9),11)			// LN.ACR
	set vc12=V.piece($C(9),12)			// LN.PMT
	set vc13=V.piece($C(9),13)			// LN.LCHG
	set vc14=V.piece($C(9),14)			// LN.CRLMT
	set vc15=V.piece($C(9),15)			// LN.IRN
	set vc16=V.piece($C(9),16)			// LN.DIST1ND
	set vc17=V.piece($C(9),17)			// LN.IYTD
	set vc18=V.piece($C(9),18)			// LN.DIST1FRE
	set vc19=V.piece($C(9),19)			// LN.MCHG
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		set PN=VPN
		do ^DBSRWSTS(.VSTATS)			// Print statistics
		quit:VFMQ

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc11,vc6,vc17,vc13,vc19,vc3,vc4
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+vc11			// @TOT([LN]ACR)
	set VT(5,2,1)=VT(5,2,1)+vc6			// @TOT([LN]BAL)
	set VT(5,3,1)=VT(5,3,1)+vc17			// @TOT([LN]IYTD)
	set VT(5,4,1)=VT(5,4,1)+vc13			// @TOT([LN]LCHG)
	set VT(5,5,1)=VT(5,5,1)+vc19			// @TOT([LN]MCHG)
	if VRWOPT("NOSTAT").get() quit
	do vstats^DBSRWUTL(1,vc3,vc6,"[LN]TYPE|N|[LN]BAL|",.VSTATS)
	do vstats^DBSRWUTL(2,vc4,vc6,"[LN]CRCD|T|[LN]BAL|",.VSTATS)
	quit

VSUM4	// Summary
	type public String %TIM,DESC,I,IOSL,TCRCD,TTYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="TYPE "
	do VP1 quit:VFMQ!verror.get()  set V=$J(TTYPE,4)
	set VL=VL_$J("",5-VL.length())_V
	set V=VT(4,2,1)					// @TOT([LN]BAL,)
	set VL=VL_$J("",39-VL.length())_$J($FN(V,",",2),12)
	set V=VT(4,1,1)					// @TOT([LN]ACR,)
	set VL=VL_$J("",83-VL.length())_$J($FN(V,",",2),8)
	set V=VT(4,4,1)					// @TOT([LN]LCHG,)
	set VL=VL_$J("",105-VL.length())_$J($FN(V,",",2),8)
	do VOM
	set V=VT(4,3,1)					// @TOT([LN]IYTD,)
	set VL="                                                                                   "_$J($FN(V,",",2),8)
	set V=VT(4,5,1)					// @TOT([LN]MCHG,)
	set VL=VL_$J("",105-VL.length())_$J($FN(V,",",2),8)
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,DESC,IOSL,TCRCD,TTYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc5,12)
	set VL=VL_$J("",13-VL.length())_$$CTR^%ZM(vc7,6)
	set VL=VL_$J("",20-VL.length())_$E(vc8,1,18)
	set VL=VL_$J("",39-VL.length())_$J($FN(vc6,",",2),12)
	set VL=VL_$J("",52-VL.length())_$J($$DAT^%ZM(vc9),10)
	set VL=VL_$J("",72-VL.length())_$J($$DAT^%ZM(vc10),10)
	set VL=VL_$J("",83-VL.length())_$J($FN(vc11,",",2),8)
	set VL=VL_$J("",92-VL.length())_$J(vc12,8,2)
	set VL=VL_$J("",101-VL.length())_$J($FN(vc13,",",2),12)
	do VOM
	set VL="                                                      "_$J($FN(vc14,",",2),8)
	set VL=VL_$J("",63-VL.length())_$J($FN(vc15,",",2),8)
	set VL=VL_$J("",72-VL.length())_$J($$DAT^%ZM(vc16),10)
	set VL=VL_$J("",83-VL.length())_$J($FN(vc17,",",2),8)
	set VL=VL_$J("",93-VL.length())_$E(vc18,1,12)
	set VL=VL_$J("",106-VL.length())_$J($FN(vc19,",",2),7)
	do VOM
	set VL="" do VOM
	quit

VSUM5	// Summary
	type public String %TIM,DESC,I,IOSL,TCRCD,TTYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="CURRENCY CODE"
	do VP2 quit:VFMQ!verror.get()  set V=$E(TCRCD,1,3)
	set VL=VL_$J("",14-VL.length())_V
	set VL=VL_$J("",18-VL.length())_"TOTALS:"
	set V=VT(5,2,1)					// @TOT([LN]BAL,)
	set VL=VL_$J("",39-VL.length())_$J($FN(V,",",2),12)
	set V=VT(5,1,1)					// @TOT([LN]ACR,)
	set VL=VL_$J("",83-VL.length())_$J($FN(V,",",2),8)
	set V=VT(5,4,1)					// @TOT([LN]LCHG,)
	set VL=VL_$J("",105-VL.length())_$J($FN(V,",",2),8)
	do VOM
	set V=VT(5,3,1)					// @TOT([LN]IYTD,)
	set VL="                                                                                   "_$J($FN(V,",",2),8)
	set V=VT(5,5,1)					// @TOT([LN]MCHG,)
	set VL=VL_$J("",105-VL.length())_$J($FN(V,",",2),8)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DESC,RID,RN,TCRCD,TTYPE,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",97-VL.length())_"System Date:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Type "
	set VL=VL_$J("",6-VL.length())_$J(vc3,3)
	do VOM
	set VL="Currency Code"
	set VL=VL_$J("",14-VL.length())_$E(vc4,1,3)
	set VL=VL_$J("",18-VL.length())_"- "
	do VP3 quit:VFMQ!verror.get()  set V=$E(DESC,1,20)
	set VL=VL_$J("",20-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="   "_"Account #   CC   Account Title           Balance  Org Date            Last Tran  Acr Int  Pmt Amt       LC Due"
	do VOM
	set VL="                                                     "_"Crd Limit Int Rate   Next Due  Int YTD  Pmt Freq      MC Due"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: TTYPE

	type public Number TTYPE,vovc3

	// Reset TYPE to the value saved in the report buffer, otherwise
	// it will be reset to the newly fetched value

	set TTYPE=vovc3
 
	quit

VP2	// Column pre-processor - Variable: TCRCD

	type public String TCRCD,vovc4

	// Reset CRCD to the value saved in the report buffer, otherwise it
	// will be reset to the newly fetched value

	set TCRCD=vovc4
 
	quit

VP3	// Column pre-processor - Variable: DESC

	type public String vc4
	type public String CRCD,DESC

	if vc4="" set DESC="" quit
	
	set CRCD=vc4
	
	type RecordCUVAR cuvar
	set cuvar=Db.getRecord("CUVAR")

	type RecordCRCD crcd
	set crcd=Db.getRecord("CRCD","CO=:cuvar.co,CRCD=:CRCD")

	set DESC=crcd.desc
 
	quit
