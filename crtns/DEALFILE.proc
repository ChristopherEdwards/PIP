DEALFILE(RecordDEAL1 deal1, String vpar, Boolean vparNorm) // DEAL1 - Foreign Exchange Deal Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:23 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (170)            05/15/2006
	// Journal File Definition (6)                 12/17/2004
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = deal1.getMode()                       // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(deal1,.vxins(),10,"|")
	if %O = 1 quit:'deal1.isChanged()  do AUDIT^UCUTILN(deal1,.vx(),10,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		do vinit                                              // Initialize column values
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("NOINT").exists() do vkchged quit               // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("DEAL1",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("DEAL1","NOINT = :deal1.noint")    // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String NOINT

	type RecordDEAL1 deal1 = Db.getRecord("DEAL1","NOINT=:NOINT")
	if (%ProcessMode = 2) do {
		do deal1.setMode(2)

		do DEALFILE(deal1,vpar)
	}
	else  do VINDEX(deal1)

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordDEAL1 deal1

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("DEAL1","NOINT = :deal1.noint") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		type String n = -1
		type String x

		if %O = 0 for  set n = vobj(deal1,n).order() quit:n.isNull()  do {
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
				S ^DEAL1(vobj(deal1,-3),n)=vobj(deal1,n)
			#ENDBYPASS
		}

		else  for  set n = vobj(deal1,-100,n).order() quit:n.isNull()  do {
			quit:'$D(vobj(deal1,n))
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
				S ^DEAL1(vobj(deal1,-3),n)=vobj(deal1,n)
			#ENDBYPASS
		}


		if vpar["/JOURNAL/" do VJOURNAL(.deal1)               // Create journal files
	}

	if vpar["/INDEX/",'(%O = 1)!'vx("").order().isNull() do VINDEX(.deal1) // Update Index files

	quit

vload // Record Load - force loading of unloaded data

	type public RecordDEAL1 deal1
	type String n = ""

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	for  set n = $order(^DEAL1(vobj(deal1,-3),n)) quit:n.isNull()  if 'vobj(deal1,n).data(),^DEAL1(vobj(deal1,-3),n).data()#2 set vobj(deal1,n) = ^(n)
	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordDEAL1 deal1

	if 'vkeychg.get(),deal1.isChanged() throw Class.new("Error","%PSL-E-DBFILER,Deleted object cannot be modified")

	if vpar["/INDEX/" do VINDEX(.deal1)                    // Delete index entries
	if vpar["/JOURNAL/" do VJOURNAL(.deal1)                // Create journal entries

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DEAL1(vobj(deal1,-3))                            // Delete Record
	quit


vinit // Initialize default values

	type public RecordDEAL1 deal1

	// Type local variables for access keys for defaults
	type public String NOINT

	if deal1.cnfrm.isNull() set deal1.cnfrm = 0            // cnfrm
	type public String TJD
	if deal1.edt.isNull() set deal1.edt = TJD              // edt
	if deal1.inst.isNull() set deal1.inst = 0              // inst
	if deal1.instrflg.isNull() set deal1.instrflg = 0      // instrflg
	if deal1.mt202flg.isNull() set deal1.mt202flg = 0      // mt202flg
	if deal1.mt202pri.isNull() set deal1.mt202pri = "N"    // mt202pri
	if deal1.mt210flg.isNull() set deal1.mt210flg = 0      // mt210flg
	if deal1.mt210pri.isNull() set deal1.mt210pri = "N"    // mt210pri
	if deal1.mt300flg.isNull() set deal1.mt300flg = 0      // mt300flg
	if deal1.mt300pri.isNull() set deal1.mt300pri = "N"    // mt300pri
	if deal1.recp.isNull() set deal1.recp = 0              // recp
	if deal1.reflg.isNull() set deal1.reflg = 0            // reflg
	if deal1.spliti.isNull() set deal1.spliti = 0          // spliti
	if deal1.status.isNull() set deal1.status = 2          // status
	if deal1.swap.isNull() set deal1.swap = 0              // swap
	type public String TJD
	if deal1.tdt.isNull() set deal1.tdt = TJD              // tdt
	quit


vreqn // Validate required data items

	type public RecordDEAL1 deal1

	if deal1.cnfrm.isNull() do vreqerr("CNFRM") quit
	if deal1.inst.isNull() do vreqerr("INST") quit
	if deal1.instrflg.isNull() do vreqerr("INSTRFLG") quit
	if deal1.mt202flg.isNull() do vreqerr("MT202FLG") quit
	if deal1.mt210flg.isNull() do vreqerr("MT210FLG") quit
	if deal1.mt300flg.isNull() do vreqerr("MT300FLG") quit
	if deal1.recp.isNull() do vreqerr("RECP") quit
	if deal1.reflg.isNull() do vreqerr("REFLG") quit
	if deal1.spliti.isNull() do vreqerr("SPLITI") quit
	if deal1.status.isNull() do vreqerr("STATUS") quit
	if deal1.swap.isNull() do vreqerr("SWAP") quit
	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordDEAL1 deal1

	if deal1.noint.isNull() do vreqerr("NOINT") quit

	if 'vobj(deal1,-100,1,"").order().isNull() do {
		if vx("STATUS").exists(),deal1.status.isNull() do vreqerr("STATUS") quit
		if vx("SWAP").exists(),deal1.swap.isNull() do vreqerr("SWAP") quit
		if vx("REFLG").exists(),deal1.reflg.isNull() do vreqerr("REFLG") quit
		if vx("INSTRFLG").exists(),deal1.instrflg.isNull() do vreqerr("INSTRFLG") quit
		if vx("CNFRM").exists(),deal1.cnfrm.isNull() do vreqerr("CNFRM") quit
		if vx("RECP").exists(),deal1.recp.isNull() do vreqerr("RECP") quit
		if vx("INST").exists(),deal1.inst.isNull() do vreqerr("INST") quit
	}
	if 'vobj(deal1,-100,17,"").order().isNull() do {
		if vx("SPLITI").exists(),deal1.spliti.isNull() do vreqerr("SPLITI") quit
	}
	if 'vobj(deal1,-100,20,"").order().isNull() do {
		if vx("MT300FLG").exists(),deal1.mt300flg.isNull() do vreqerr("MT300FLG") quit
		if vx("MT210FLG").exists(),deal1.mt210flg.isNull() do vreqerr("MT210FLG") quit
		if vx("MT202FLG").exists(),deal1.mt202flg.isNull() do vreqerr("MT202FLG") quit
	}
		if vx("CNFRM").exists(),deal1.cnfrm.isNull() do vreqerr("CNFRM") quit
		if vx("INST").exists(),deal1.inst.isNull() do vreqerr("INST") quit
		if vx("INSTRFLG").exists(),deal1.instrflg.isNull() do vreqerr("INSTRFLG") quit
		if vx("MT202FLG").exists(),deal1.mt202flg.isNull() do vreqerr("MT202FLG") quit
		if vx("MT210FLG").exists(),deal1.mt210flg.isNull() do vreqerr("MT210FLG") quit
		if vx("MT300FLG").exists(),deal1.mt300flg.isNull() do vreqerr("MT300FLG") quit
		if vx("RECP").exists(),deal1.recp.isNull() do vreqerr("RECP") quit
		if vx("REFLG").exists(),deal1.reflg.isNull() do vreqerr("REFLG") quit
		if vx("SPLITI").exists(),deal1.spliti.isNull() do vreqerr("SPLITI") quit
		if vx("STATUS").exists(),deal1.status.isNull() do vreqerr("STATUS") quit
		if vx("SWAP").exists(),deal1.swap.isNull() do vreqerr("SWAP") quit
	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DEAL1","MSG",1767,"DEAL1."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordDEAL1 deal1

	if (%O = 2) do vload

	if vobj(deal1,1).exists() do {

		set X = deal1.acn if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("ACN", vRM) quit
		if deal1.acnnam.length()>20 set vRM = $$^MSG(1076,20) do vdderr("ACNNAM", vRM) quit
		set X = deal1.amtb if 'X.isNull() set vRM = $$VAL^DBSVER("$",19,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"DEAL1.AMTB"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = deal1.amtbase if 'X.isNull() set vRM = $$VAL^DBSVER("$",19,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"DEAL1.AMTBASE"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = deal1.amts if 'X.isNull() set vRM = $$VAL^DBSVER("$",19,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"DEAL1.AMTS"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = deal1.by if 'X.isNull(),'Db.isDefined("STBLDEALBY","X") set vRM = $$^MSG(1485,X) do vdderr("BY", vRM) quit
		set X = deal1.by2 if 'X.isNull(),'Db.isDefined("STBLDEALBY2","X") set vRM = $$^MSG(1485,X) do vdderr("BY2", vRM) quit
		set X = deal1.cc if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("CC", vRM) quit
		if '("01"[deal1.CNFRM) set vRM=$$^MSG(742,"L") do vdderr("CNFRM", vRM) quit
		set X = deal1.cnfrmby if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("CNFRMBY", vRM) quit
		set X = deal1.corrercv if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("CORRERCV", vRM) quit
		set X = deal1.corresnd if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("CORRESND", vRM) quit
		if deal1.crcdb.length()>3 set vRM = $$^MSG(1076,3) do vdderr("CRCDB", vRM) quit
		if deal1.crcdbase.length()>3 set vRM = $$^MSG(1076,3) do vdderr("CRCDBASE", vRM) quit
		if deal1.crcds.length()>3 set vRM = $$^MSG(1076,3) do vdderr("CRCDS", vRM) quit
		set X = deal1.dealps if 'X.isNull(),'Db.isDefined("STBLDEALPS","X") set vRM = $$^MSG(1485,X) do vdderr("DEALPS", vRM) quit
		set X = deal1.edt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("EDT", vRM) quit
		if '("01"[deal1.INST) set vRM=$$^MSG(742,"L") do vdderr("INST", vRM) quit
		if '("01"[deal1.INSTRFLG) set vRM=$$^MSG(742,"L") do vdderr("INSTRFLG", vRM) quit
		if deal1.msg202dt.length()>22 set vRM = $$^MSG(1076,22) do vdderr("MSG202DT", vRM) quit
		if deal1.msg210dt.length()>22 set vRM = $$^MSG(1076,22) do vdderr("MSG210DT", vRM) quit
		if deal1.msg300dt.length()>22 set vRM = $$^MSG(1076,22) do vdderr("MSG300DT", vRM) quit
		if deal1.noext.length()>6 set vRM = $$^MSG(1076,6) do vdderr("NOEXT", vRM) quit
		set X = deal1.nostrob if 'X.isNull(),'Db.isDefined("DEP","X") set vRM = $$^MSG(1485,X) do vdderr("NOSTROB", vRM) quit
		set X = deal1.nostros if 'X.isNull(),'Db.isDefined("DEP","X") set vRM = $$^MSG(1485,X) do vdderr("NOSTROS", vRM) quit
		set X = deal1.priority if 'X.isNull(),'Db.isDefined("STBLPRIORITY","X") set vRM = $$^MSG(1485,X) do vdderr("PRIORITY", vRM) quit
		set X = deal1.rate if 'X.isNull() set vRM = $$VAL^DBSVER("N",12,0,,,,,7) if 'vRM.isNull() set vRM = $$^MSG(979,"DEAL1.RATE"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = deal1.ratebase if 'X.isNull() set vRM = $$VAL^DBSVER("N",12,0,,,,,7) if 'vRM.isNull() set vRM = $$^MSG(979,"DEAL1.RATEBASE"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		if '("01"[deal1.RECP) set vRM=$$^MSG(742,"L") do vdderr("RECP", vRM) quit
		set X = deal1.recvcorr if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("RECVCORR", vRM) quit
		if '("01"[deal1.REFLG) set vRM=$$^MSG(742,"L") do vdderr("REFLG", vRM) quit
		set X = deal1.sdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("SDT", vRM) quit
		set X = deal1.status if 'X.isNull(),'Db.isDefined("STBLDSTAT","X") set vRM = $$^MSG(1485,X) do vdderr("STATUS", vRM) quit
		if '("01"[deal1.SWAP) set vRM=$$^MSG(742,"L") do vdderr("SWAP", vRM) quit
		set X = deal1.tdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("TDT", vRM) quit
		set X = deal1.trader if 'X.isNull(),'Db.isDefined("UTBLRADR","X") set vRM = $$^MSG(1485,X) do vdderr("TRADER", vRM) quit
		set X = deal1.trrefno if 'X.isNull(),X'?1.14N,X'?1"-"1.13N set vRM=$$^MSG(742,"N") do vdderr("TRREFNO", vRM) quit
		set X = deal1.type if 'X.isNull(),'Db.isDefined("STBLDEALTYPE","X") set vRM = $$^MSG(1485,X) do vdderr("TYPE", vRM) quit
		if deal1.typeol.length()>12 set vRM = $$^MSG(1076,12) do vdderr("TYPEOL", vRM) quit
		if deal1.uid.length()>20 set vRM = $$^MSG(1076,20) do vdderr("UID", vRM) quit
		set X = deal1.vdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("VDT", vRM) quit
	}

	if vobj(deal1,2).exists() do {

		set X = deal1.paidbyb if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("PAIDBYB", vRM) quit
		if deal1.paidbyb1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYB1", vRM) quit
		if deal1.paidbyb2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYB2", vRM) quit
		if deal1.paidbyb3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYB3", vRM) quit
		if deal1.paidbyb4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYB4", vRM) quit
		if deal1.paidbyb5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYB5", vRM) quit
		if deal1.paytob.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOB", vRM) quit
		if deal1.paytob1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOB1", vRM) quit
		if deal1.paytob2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOB2", vRM) quit
		if deal1.paytob3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOB3", vRM) quit
		if deal1.paytob4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOB4", vRM) quit
		if deal1.pdtocidb.length()>20 set vRM = $$^MSG(1076,20) do vdderr("PDTOCIDB", vRM) quit
	}

	if vobj(deal1,3).exists() do {

		set X = deal1.paidbys if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("PAIDBYS", vRM) quit
		if deal1.paidbys1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYS1", vRM) quit
		if deal1.paidbys2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYS2", vRM) quit
		if deal1.paidbys3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYS3", vRM) quit
		if deal1.paidbys4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAIDBYS4", vRM) quit
		set X = deal1.paytos if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("PAYTOS", vRM) quit
		if deal1.paytos1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOS1", vRM) quit
		if deal1.paytos2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOS2", vRM) quit
		if deal1.paytos3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOS3", vRM) quit
		if deal1.paytos4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOS4", vRM) quit
		if deal1.paytos5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PAYTOS5", vRM) quit
		if deal1.pdtocids.length()>20 set vRM = $$^MSG(1076,20) do vdderr("PDTOCIDS", vRM) quit
	}

	if vobj(deal1,4).exists() do {

		set X = deal1.interb if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("INTERB", vRM) quit
		if deal1.interb1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERB1", vRM) quit
		if deal1.interb2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERB2", vRM) quit
		if deal1.interb3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERB3", vRM) quit
		if deal1.interb4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERB4", vRM) quit
		if deal1.interb5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERB5", vRM) quit
	}

	if vobj(deal1,5).exists() do {

		set X = deal1.inters if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("INTERS", vRM) quit
		if deal1.inters1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERS1", vRM) quit
		if deal1.inters2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERS2", vRM) quit
		if deal1.inters3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERS3", vRM) quit
		if deal1.inters4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERS4", vRM) quit
		if deal1.inters5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INTERS5", vRM) quit
	}

	if vobj(deal1,8).exists() do {

		if deal1.vdate.length()>8 set vRM = $$^MSG(1076,8) do vdderr("VDATE", vRM) quit
	}

	if vobj(deal1,10).exists() do {

		if deal1.recv1.length()>35 set vRM = $$^MSG(1076,35) do vdderr("RECV1", vRM) quit
		if deal1.recv2.length()>35 set vRM = $$^MSG(1076,35) do vdderr("RECV2", vRM) quit
		if deal1.recv3.length()>35 set vRM = $$^MSG(1076,35) do vdderr("RECV3", vRM) quit
		if deal1.recv4.length()>35 set vRM = $$^MSG(1076,35) do vdderr("RECV4", vRM) quit
	}

	if vobj(deal1,17).exists() do {

		set X = deal1.bltdin if 'X.isNull(),'{List}"N,Y".contains(X) set vRM = $$^MSG(1485,X) do vdderr("BLTDIN", vRM) quit
		if '("01"[deal1.SPLITI) set vRM=$$^MSG(742,"L") do vdderr("SPLITI", vRM) quit
	}

	if vobj(deal1,20).exists() do {

		if deal1.benopt.length()>1 set vRM = $$^MSG(1076,1) do vdderr("BENOPT", vRM) quit
		set X = deal1.constant if 'X.isNull(),'Db.isDefined("UTBLECOACT","X") set vRM = $$^MSG(1485,X) do vdderr("CONSTANT", vRM) quit
		set X = deal1.constants if 'X.isNull(),'Db.isDefined("UTBLECOACT","X") set vRM = $$^MSG(1485,X) do vdderr("CONSTANTS", vRM) quit
		set X = deal1.ds1 if 'X.isNull(),'Db.isDefined("UTBLFOREX","X") set vRM = $$^MSG(1485,X) do vdderr("DS1", vRM) quit
		set X = deal1.ds1s if 'X.isNull(),'Db.isDefined("UTBLFOREX","X") set vRM = $$^MSG(1485,X) do vdderr("DS1S", vRM) quit
		set X = deal1.ds2 if 'X.isNull(),'Db.isDefined("STBLCNTRY","X") set vRM = $$^MSG(1485,X) do vdderr("DS2", vRM) quit
		set X = deal1.ds2s if 'X.isNull(),'Db.isDefined("STBLCNTRY","X") set vRM = $$^MSG(1485,X) do vdderr("DS2S", vRM) quit
		set X = deal1.interbopt if 'X.isNull(),'{List}"A,B,D".contains(X) set vRM = $$^MSG(1485,X) do vdderr("INTERBOPT", vRM) quit
		set X = deal1.intersopt if 'X.isNull(),'{List}"A,J,D".contains(X) set vRM = $$^MSG(1485,X) do vdderr("INTERSOPT", vRM) quit
		if '("01"[deal1.MT202FLG) set vRM=$$^MSG(742,"L") do vdderr("MT202FLG", vRM) quit
		set X = deal1.mt202pri if 'X.isNull(),'Db.isDefined("STBLPRIORITY","X") set vRM = $$^MSG(1485,X) do vdderr("MT202PRI", vRM) quit
		if '("01"[deal1.MT210FLG) set vRM=$$^MSG(742,"L") do vdderr("MT210FLG", vRM) quit
		set X = deal1.mt210pri if 'X.isNull(),'Db.isDefined("STBLPRIORITY","X") set vRM = $$^MSG(1485,X) do vdderr("MT210PRI", vRM) quit
		if '("01"[deal1.MT300FLG) set vRM=$$^MSG(742,"L") do vdderr("MT300FLG", vRM) quit
		set X = deal1.mt300pri if 'X.isNull(),'Db.isDefined("STBLPRIORITY","X") set vRM = $$^MSG(1485,X) do vdderr("MT300PRI", vRM) quit
		set X = deal1.paidbybopt if 'X.isNull(),'{List}"A,J,D".contains(X) set vRM = $$^MSG(1485,X) do vdderr("PAIDBYBOPT", vRM) quit
		set X = deal1.paidbysopt if 'X.isNull(),'{List}"A,B,D".contains(X) set vRM = $$^MSG(1485,X) do vdderr("PAIDBYSOPT", vRM) quit
		set X = deal1.paytosopt if 'X.isNull(),'{List}"A,J,D".contains(X) set vRM = $$^MSG(1485,X) do vdderr("PAYTOSOPT", vRM) quit
		set X = deal1.recvcorropt if 'X.isNull(),'{List}"A,B,D".contains(X) set vRM = $$^MSG(1485,X) do vdderr("RECVCORROPT", vRM) quit
		set X = deal1.recvopt if 'X.isNull(),'{List}"A,B,D".contains(X) set vRM = $$^MSG(1485,X) do vdderr("RECVOPT", vRM) quit
	}

	if vobj(deal1,21).exists() do {

		if deal1.brokref.length()>16 set vRM = $$^MSG(1076,16) do vdderr("BROKREF", vRM) quit
	}

	if vobj(deal1,22).exists() do {

		if deal1.typeop.length()>4 set vRM = $$^MSG(1076,4) do vdderr("TYPEOP", vRM) quit
	}

	if vobj(deal1,24).exists() do {

		if deal1.dlmeth.length()>39 set vRM = $$^MSG(1076,39) do vdderr("DLMETH", vRM) quit
	}

	if vobj(deal1,26).exists() do {

		if deal1.cntpref.length()>16 set vRM = $$^MSG(1076,16) do vdderr("CNTPREF", vRM) quit
	}

	if vobj(deal1,29).exists() do {

		if deal1.contact1.length()>35 set vRM = $$^MSG(1076,35) do vdderr("CONTACT1", vRM) quit
		if deal1.contact2.length()>35 set vRM = $$^MSG(1076,35) do vdderr("CONTACT2", vRM) quit
		if deal1.contact3.length()>35 set vRM = $$^MSG(1076,35) do vdderr("CONTACT3", vRM) quit
		if deal1.contact4.length()>35 set vRM = $$^MSG(1076,35) do vdderr("CONTACT4", vRM) quit
	}

	if vobj(deal1,58).exists() do {

		set X = deal1.beninst if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("BENINST", vRM) quit
		if deal1.beninst1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BENINST1", vRM) quit
		if deal1.beninst2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BENINST2", vRM) quit
		if deal1.beninst3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BENINST3", vRM) quit
		if deal1.beninst4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BENINST4", vRM) quit
		if deal1.beninst5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BENINST5", vRM) quit
		set X = deal1.beninstopt if 'X.isNull(),'{List}"D,J,A".contains(X) set vRM = $$^MSG(1485,X) do vdderr("BENINSTOPT", vRM) quit
	}

	if vobj(deal1,71).exists() do {

		if deal1.brokcm.length()>18 set vRM = $$^MSG(1076,18) do vdderr("BROKCM", vRM) quit
	}

	if vobj(deal1,77).exists() do {

		if deal1.tercon1.length()>35 set vRM = $$^MSG(1076,35) do vdderr("TERCON1", vRM) quit
		if deal1.tercon2.length()>35 set vRM = $$^MSG(1076,35) do vdderr("TERCON2", vRM) quit
		if deal1.tercon3.length()>35 set vRM = $$^MSG(1076,35) do vdderr("TERCON3", vRM) quit
		if deal1.tercon4.length()>35 set vRM = $$^MSG(1076,35) do vdderr("TERCON4", vRM) quit
		if deal1.tercon5.length()>35 set vRM = $$^MSG(1076,35) do vdderr("TERCON5", vRM) quit
		if deal1.tercon6.length()>35 set vRM = $$^MSG(1076,35) do vdderr("TERCON6", vRM) quit
	}

	if vobj(deal1,82).exists() do {

		set X = deal1.partya if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("PARTYA", vRM) quit
		if deal1.partya1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYA1", vRM) quit
		if deal1.partya2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYA2", vRM) quit
		if deal1.partya3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYA3", vRM) quit
		if deal1.partya4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYA4", vRM) quit
		if deal1.partya5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYA5", vRM) quit
		set X = deal1.partyaopt if 'X.isNull(),'{List}"D,J,A".contains(X) set vRM = $$^MSG(1485,X) do vdderr("PARTYAOPT", vRM) quit
	}

	if vobj(deal1,83).exists() do {

		set X = deal1.fobcus if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("FOBCUS", vRM) quit
		if deal1.fobcus1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("FOBCUS1", vRM) quit
		if deal1.fobcus2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("FOBCUS2", vRM) quit
		if deal1.fobcus3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("FOBCUS3", vRM) quit
		if deal1.fobcus4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("FOBCUS4", vRM) quit
		if deal1.fobcus5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("FOBCUS5", vRM) quit
		set X = deal1.fobcusopt if 'X.isNull(),'{List}"D,J,A".contains(X) set vRM = $$^MSG(1485,X) do vdderr("FOBCUSOPT", vRM) quit
	}

	if vobj(deal1,84).exists() do {

		set X = deal1.dlbrpya if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("DLBRPYA", vRM) quit
		if deal1.dlbrpya1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYA1", vRM) quit
		if deal1.dlbrpya2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYA2", vRM) quit
		if deal1.dlbrpya3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYA3", vRM) quit
		if deal1.dlbrpya4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYA4", vRM) quit
		if deal1.dlbrpya5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYA5", vRM) quit
		set X = deal1.dlbrpyaopt if 'X.isNull(),'{List}"A,B,D,J".contains(X) set vRM = $$^MSG(1485,X) do vdderr("DLBRPYAOPT", vRM) quit
	}

	if vobj(deal1,85).exists() do {

		set X = deal1.dlbrpyb if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("DLBRPYB", vRM) quit
		if deal1.dlbrpyb1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYB1", vRM) quit
		if deal1.dlbrpyb2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYB2", vRM) quit
		if deal1.dlbrpyb3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYB3", vRM) quit
		if deal1.dlbrpyb4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYB4", vRM) quit
		if deal1.dlbrpyb5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DLBRPYB5", vRM) quit
		set X = deal1.dlbrpybopt if 'X.isNull(),'{List}"A,B,D,J".contains(X) set vRM = $$^MSG(1485,X) do vdderr("DLBRPYBOPT", vRM) quit
	}

	if vobj(deal1,87).exists() do {

		set X = deal1.partyb if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("PARTYB", vRM) quit
		if deal1.partyb1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYB1", vRM) quit
		if deal1.partyb2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYB2", vRM) quit
		if deal1.partyb3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYB3", vRM) quit
		if deal1.partyb4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYB4", vRM) quit
		if deal1.partyb5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PARTYB5", vRM) quit
		set X = deal1.partybopt if 'X.isNull(),'{List}"D,J,A".contains(X) set vRM = $$^MSG(1485,X) do vdderr("PARTYBOPT", vRM) quit
	}

	if vobj(deal1,88).exists() do {

		set X = deal1.brokid if 'X.isNull(),'Db.isDefined("UTBLCORRE","X") set vRM = $$^MSG(1485,X) do vdderr("BROKID", vRM) quit
		if deal1.brokid1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BROKID1", vRM) quit
		if deal1.brokid2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BROKID2", vRM) quit
		if deal1.brokid3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BROKID3", vRM) quit
		if deal1.brokid4.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BROKID4", vRM) quit
		if deal1.brokid5.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BROKID5", vRM) quit
		set X = deal1.brokidopt if 'X.isNull(),'{List}"D,J,A".contains(X) set vRM = $$^MSG(1485,X) do vdderr("BROKIDOPT", vRM) quit
	}

	if vobj(deal1,94).exists() do {

		set X = deal1.scopop if 'X.isNull(),'{List}"AGNT,BILA,BROK".contains(X) set vRM = $$^MSG(1485,X) do vdderr("SCOPOP", vRM) quit
	}
	set X = deal1.noint if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("NOINT", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DEAL1","MSG",979,"DEAL1."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VJOURNAL(RecordDEAL1 deal1)	//DEAL1 Journal file entries

	type Public Date %EffectiveDate
	type Public String %TSRC,vpar,vx()
	type String TSRC,vdi,vdx()

	if %TSRC.get().isNull() set TSRC="O"
	else  set TSRC=%TSRC

	if %ProcessMode=3 do {
		if TSRC="B" do {
			if 'EFD.get() do {
				do vj1(.deal1)	// Mode=D Tran=B EFD=N Seq=1 JRNID=DEAL1TRREF_IUD
				do vj2(.deal1)	// Mode=D Tran=B EFD=N Seq=1 JRNID=DEALHIST_D
				do vj5(.deal1)	// Mode=D Tran=B EFD=N Seq=1 JRNID=DEALMEMO_IUD
				do vj6(.deal1)	// Mode=D Tran=B EFD=N Seq=1 JRNID=DEALREFNO_IUD
				}
			}
		else  if TSRC="O" do {
			if 'EFD.get() do {
				do vj1(.deal1)	// Mode=D Tran=O EFD=N Seq=1 JRNID=DEAL1TRREF_IUD
				do vj2(.deal1)	// Mode=D Tran=O EFD=N Seq=1 JRNID=DEALHIST_D
				do vj5(.deal1)	// Mode=D Tran=O EFD=N Seq=1 JRNID=DEALMEMO_IUD
				do vj6(.deal1)	// Mode=D Tran=O EFD=N Seq=1 JRNID=DEALREFNO_IUD
				}
			}
		}
	else  if %ProcessMode=0 do {
		if TSRC="B" do {
			if 'EFD.get() do {
				do vj1(.deal1)	// Mode=I Tran=B EFD=N Seq=1 JRNID=DEAL1TRREF_IUD
				do vj3(.deal1)	// Mode=I Tran=B EFD=N Seq=1 JRNID=DEALHIST_I
				do vj5(.deal1)	// Mode=I Tran=B EFD=N Seq=1 JRNID=DEALMEMO_IUD
				do vj6(.deal1)	// Mode=I Tran=B EFD=N Seq=1 JRNID=DEALREFNO_IUD
				}
			}
		else  if TSRC="O" do {
			if 'EFD.get() do {
				do vj1(.deal1)	// Mode=I Tran=O EFD=N Seq=1 JRNID=DEAL1TRREF_IUD
				do vj3(.deal1)	// Mode=I Tran=O EFD=N Seq=1 JRNID=DEALHIST_I
				do vj5(.deal1)	// Mode=I Tran=O EFD=N Seq=1 JRNID=DEALMEMO_IUD
				do vj6(.deal1)	// Mode=I Tran=O EFD=N Seq=1 JRNID=DEALREFNO_IUD
				}
			}
		}
	else  if %ProcessMode=1 do {
		if TSRC="B" do {
			if 'EFD.get() do {
				do vj1(.deal1)	// Mode=U Tran=B EFD=N Seq=1 JRNID=DEAL1TRREF_IUD
				do vj4(.deal1)	// Mode=U Tran=B EFD=N Seq=1 JRNID=DEALHIST_U
				do vj5(.deal1)	// Mode=U Tran=B EFD=N Seq=1 JRNID=DEALMEMO_IUD
				do vj6(.deal1)	// Mode=U Tran=B EFD=N Seq=1 JRNID=DEALREFNO_IUD
				}
			}
		else  if TSRC="O" do {
			if 'EFD.get() do {
				do vj1(.deal1)	// Mode=U Tran=O EFD=N Seq=1 JRNID=DEAL1TRREF_IUD
				do vj4(.deal1)	// Mode=U Tran=O EFD=N Seq=1 JRNID=DEALHIST_U
				do vj5(.deal1)	// Mode=U Tran=O EFD=N Seq=1 JRNID=DEALMEMO_IUD
				do vj6(.deal1)	// Mode=U Tran=O EFD=N Seq=1 JRNID=DEALREFNO_IUD
				}
			}
		}

	quit


vj1(RecordDEAL1 deal1)	// DEAL1TRREF_IUD  Table TRREF  Treasury Reference ( Ins, Upd, Del)

	type String VQ1

	set VQ1=$$TRREFQ^EFTFUNCS(1,deal1.trrefno)

	if VQ1="1"
	else  quit

							//// Save this line for Public datatyping, if needed
	type String vlastkey
	set vlastkey=1
	type RecordTRREF trref=Db.getRecord("TRREF","TYPE=:vlastkey",1)
	set trref.refno=deal1.trrefno

	do trref.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj2(RecordDEAL1 deal1)	// DEALHIST_D  Table DEALHIST  DEALHIST Journal (Delete)

	type Public String %UID,TJD,TLO
	type String v1,vlastkey
	set v1=deal1.noint
	set vlastkey=Db.nextVal("DEALHIST","NOINT=:v1")
	type RecordDEALHIST dealhist=Db.getRecord("DEALHIST","NOINT=:v1,TSEQ=:vlastkey",1)
	set dealhist.cdt=+$H
	set dealhist.efd=TJD
	set dealhist.src="DEAL"
	set dealhist.tcmt=$$^MSG(3028,deal1.dealdesc)
	set dealhist.time=$P($H,",",2)
	set dealhist.tjd=TJD
	set dealhist.tlo=TLO
	set dealhist.uid=%UID

	do dealhist.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj3(RecordDEAL1 deal1)	// DEALHIST_I  Table DEALHIST  Deal History Journal (Insert)

	type Public String %UID,TJD,TLO
	type String v1,vlastkey
	set v1=deal1.noint
	set vlastkey=Db.nextVal("DEALHIST","NOINT=:v1")
	type RecordDEALHIST dealhist=Db.getRecord("DEALHIST","NOINT=:v1,TSEQ=:vlastkey",1)
	set dealhist.cdt=+$H
	set dealhist.efd=TJD
	set dealhist.src="DEAL"
	set dealhist.tcmt=$$^MSG(6712,deal1.dealdesc)
	set dealhist.time=$P($H,",",2)
	set dealhist.tjd=TJD
	set dealhist.tlo=TLO
	set dealhist.uid=%UID

	do dealhist.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj4(RecordDEAL1 deal1)	// DEALHIST_U  Table DEALHIST  DEALHIST Journal (Update)

	type Public String vx()
	type String vdi

	set vdi="" for  set vdi=vx(vdi).order() quit:vdi=""  do {
		type Public String vx(),%UID,TJD,TLO
		type String v1,vlastkey

		type String vold,vnew

		set vold=vx(vdi).piece("|",1)
		set vnew=vx(vdi).piece("|",2)

		set v1=deal1.noint
		set vlastkey=Db.nextVal("DEALHIST","NOINT=:v1")
		type RecordDEALHIST dealhist=Db.getRecord("DEALHIST","NOINT=:v1,TSEQ=:vlastkey",1)
		set dealhist.cdt=+$H
		set dealhist.efd=TJD
		set dealhist.src="DEAL"
		set dealhist.tcmt=$$TCMTFM^ACNFUNCS("","DEAL1",vdi,vold,vnew)
		set dealhist.time=$P($H,",",2)
		set dealhist.tjd=TJD
		set dealhist.tlo=TLO
		set dealhist.uid=%UID

		do dealhist.save("/NOVALFK/NOVALDD/NOVALRI")
		}

	quit


vj5(RecordDEAL1 deal1)	// DEALMEMO_IUD  Table DEALMEMO  DEALMEMO Journal (Ins & Upd & Del)

							//// Save this line for Public datatyping, if needed
	type String vlastkey
	set vlastkey=deal1.noext
	type RecordDEALMEMO dealmemo=Db.getRecord("DEALMEMO","NOEXT=:vlastkey",1)
	set dealmemo.noint=deal1.noint

	do dealmemo.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj6(RecordDEAL1 deal1)	// DEALREFNO_IUD  Table DEALREFNO  Deal Reference Number (Ins, Upd, Del)

							//// Save this line for Public datatyping, if needed
	type String vlastkey
	set vlastkey=deal1.trrefno
	type RecordDEALREFNO dealrefno=Db.getRecord("DEALREFNO","TRREFNO=:vlastkey",1)
	set dealrefno.noint=deal1.noint

	do dealrefno.save("/NOVALFK/NOVALDD/NOVALRI")

	quit



public VINDEX(RecordDEAL1 deal1) // Update index entries

		type Public String vx()

	if %ProcessMode=1 do { quit
		type String vf,vi,viMap,vxn
		set viMap=",STATUS,~1~|,TDT,~2~|,SDT,~3~|,VDT,~4~|,ACN,VDT,CRCDB,TYPEOL,~5~|,ACN,VDT,CRCDS,TYPEOL,~6~|,TRADER,~7~|,EDT,CRCDB,~8~|,EDT,CRCDS,~9~|,EDT,~10~|"
		set vf=0
		set vxn=""
		for  set vxn=vx(vxn).order() quit:vxn=""  do {
			for  set vf=$F(viMap,(","_vxn_","),vf) quit:vf=0  do {
				set vi=viMap.extract(vf,999).piece("~",2)
				set viMap.piece("|",vi)=""
				do @("vi"_vi_"(.deal1)")
			}
		}
	}
	do vi1(.deal1)
	do vi2(.deal1)
	do vi3(.deal1)
	do vi4(.deal1)
	do vi5(.deal1)
	do vi6(.deal1)
	do vi7(.deal1)
	do vi8(.deal1)
	do vi9(.deal1)
	do vi10(.deal1)

	quit
	

vi1(RecordDEAL1 deal1) // Maintain DLINDX2 index entries (Deals by Status)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.status
	type String v3 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="" if '$D(^DLINDX("STATUS",v2,v3)) do vidxerr("DLINDX2")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="" if %ProcessMode<2 set ^DLINDX("STATUS",v2,v3)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("STATUS").exists() set v2=vx("STATUS").piece("|",1)
	if v2.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("STATUS",v2,v3)
	quit

vi2(RecordDEAL1 deal1) // Maintain DLINDX3A index entries (Deals by Trade Date)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.tdt
	type String v3 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="" if '$D(^DLINDX("TRADE",v2,v3)) do vidxerr("DLINDX3A")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="" if %ProcessMode<2 set ^DLINDX("TRADE",v2,v3)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("TDT").exists() set v2=vx("TDT").piece("|",1)
	if v2.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("TRADE",v2,v3)
	quit

vi3(RecordDEAL1 deal1) // Maintain DLINDX3B index entries (Deals by Spot Date)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.sdt
	type String v3 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="" if '$D(^DLINDX("SPOT",v2,v3)) do vidxerr("DLINDX3B")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="" if %ProcessMode<2 set ^DLINDX("SPOT",v2,v3)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("SDT").exists() set v2=vx("SDT").piece("|",1)
	if v2.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("SPOT",v2,v3)
	quit

vi4(RecordDEAL1 deal1) // Maintain DLINDX3C index entries (Deals by Value Date)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.vdt
	type String v3 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="" if '$D(^DLINDX("VALUE",v2,v3)) do vidxerr("DLINDX3C")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="" if %ProcessMode<2 set ^DLINDX("VALUE",v2,v3)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("VDT").exists() set v2=vx("VDT").piece("|",1)
	if v2.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("VALUE",v2,v3)
	quit

vi5(RecordDEAL1 deal1) // Maintain DLINDX4A index entries (Deals by Counterparty (Buy))

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.acn
	type String v3 = deal1.vdt
	type String v4 = deal1.crcdb
	type String v5 = deal1.typeol
	type String v6 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="",v3'="",v4'="",v5'="" if '$D(^DLINDX("CPARTB",v2,v3,v4,v5,v6)) do vidxerr("DLINDX4A")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="",v3'="",v4'="",v5'="" if %ProcessMode<2 set ^DLINDX("CPARTB",v2,v3,v4,v5,v6)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("ACN").exists() set v2=vx("ACN").piece("|",1)
	if v2.isNull() quit
	if vx("VDT").exists() set v3=vx("VDT").piece("|",1)
	if v3.isNull() quit
	if vx("CRCDB").exists() set v4=vx("CRCDB").piece("|",1)
	if v4.isNull() quit
	if vx("TYPEOL").exists() set v5=vx("TYPEOL").piece("|",1)
	if v5.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("CPARTB",v2,v3,v4,v5,v6)
	quit

vi6(RecordDEAL1 deal1) // Maintain DLINDX4B index entries (Deals by Counterparty (Sell))

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.acn
	type String v3 = deal1.vdt
	type String v4 = deal1.crcds
	type String v5 = deal1.typeol
	type String v6 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="",v3'="",v4'="",v5'="" if '$D(^DLINDX("CPARTS",v2,v3,v4,v5,v6)) do vidxerr("DLINDX4B")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="",v3'="",v4'="",v5'="" if %ProcessMode<2 set ^DLINDX("CPARTS",v2,v3,v4,v5,v6)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("ACN").exists() set v2=vx("ACN").piece("|",1)
	if v2.isNull() quit
	if vx("VDT").exists() set v3=vx("VDT").piece("|",1)
	if v3.isNull() quit
	if vx("CRCDS").exists() set v4=vx("CRCDS").piece("|",1)
	if v4.isNull() quit
	if vx("TYPEOL").exists() set v5=vx("TYPEOL").piece("|",1)
	if v5.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("CPARTS",v2,v3,v4,v5,v6)
	quit

vi7(RecordDEAL1 deal1) // Maintain DLINDX5 index entries (Deals by Trader)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.trader
	type String v3 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="" if '$D(^DLINDX("TRADER",v2,v3)) do vidxerr("DLINDX5")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="" if %ProcessMode<2 set ^DLINDX("TRADER",v2,v3)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("TRADER").exists() set v2=vx("TRADER").piece("|",1)
	if v2.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("TRADER",v2,v3)
	quit

vi8(RecordDEAL1 deal1) // Maintain DLINDX6A index entries (Deals by Currency (Buy))

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.edt
	type String v3 = deal1.crcdb
	type String v4 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="",v3'="" if '$D(^DLINDX("CRCDBS",v2,v3,v4)) do vidxerr("DLINDX6A")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="",v3'="" if %ProcessMode<2 set ^DLINDX("CRCDBS",v2,v3,v4)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("EDT").exists() set v2=vx("EDT").piece("|",1)
	if v2.isNull() quit
	if vx("CRCDB").exists() set v3=vx("CRCDB").piece("|",1)
	if v3.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("CRCDBS",v2,v3,v4)
	quit

vi9(RecordDEAL1 deal1) // Maintain DLINDX6B index entries (Deals by Currency (Sell))

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.edt
	type String v3 = deal1.crcds
	type String v4 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if v2'="",v3'="" if '$D(^DLINDX("CRCDBS",v2,v3,v4)) do vidxerr("DLINDX6B")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if v2'="",v3'="" if %ProcessMode<2 set ^DLINDX("CRCDBS",v2,v3,v4)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("EDT").exists() set v2=vx("EDT").piece("|",1)
	if v2.isNull() quit
	if vx("CRCDS").exists() set v3=vx("CRCDS").piece("|",1)
	if v3.isNull() quit

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("CRCDBS",v2,v3,v4)
	quit

vi10(RecordDEAL1 deal1) // Maintain DLINDX8 index entries (Deals by Date Entered)

	type Public String vx()
	type Boolean vdelete = 0
	type String v2 = deal1.edt
	if v2.isNull() set v2=(PSL.maxCharValue-1).char()
	type String v3 = deal1.noint

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if '$D(^DLINDX("EDT",v2,v3)) do vidxerr("DLINDX8")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if %ProcessMode<2 set ^DLINDX("EDT",v2,v3)="" 
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1
	if vx("EDT").exists() set v2=vx("EDT").piece("|",1) set:v2.isNull() v2=(PSL.maxCharValue-1).char()

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^DLINDX("EDT",v2,v3)
	quit

public VIDXBLD(List vlist) // Rebuild index files (External call)


	type Number %ProcessMode=0                             // Create mode
	type Number i

	if vlist.get().isNull() set vlist="VINDEX"             // Build all

	type DbSet ds=Db.selectDbSet("DEAL1")

	while ds.next() do {
		type RecordDEAL1 deal1=ds.getRecord("DEAL1")
		if vlist.contains("VINDEX") do VINDEX(.deal1) quit
		if vlist.contains("DLINDX2") do vi1(.deal1)
		if vlist.contains("DLINDX3A") do vi2(.deal1)
		if vlist.contains("DLINDX3B") do vi3(.deal1)
		if vlist.contains("DLINDX3C") do vi4(.deal1)
		if vlist.contains("DLINDX4A") do vi5(.deal1)
		if vlist.contains("DLINDX4B") do vi6(.deal1)
		if vlist.contains("DLINDX5") do vi7(.deal1)
		if vlist.contains("DLINDX6A") do vi8(.deal1)
		if vlist.contains("DLINDX6B") do vi9(.deal1)
		if vlist.contains("DLINDX8") do vi10(.deal1)
	}

	quit


public VIDXBLD1(RecordDEAL1 deal1, List vlist) // Rebuild index files for one record (External call)


	type Number i

	if vlist.contains("VINDEX") do VINDEX(.deal1) quit
	if vlist.contains("DLINDX2") do vi1(.deal1)
	if vlist.contains("DLINDX3A") do vi2(.deal1)
	if vlist.contains("DLINDX3B") do vi3(.deal1)
	if vlist.contains("DLINDX3C") do vi4(.deal1)
	if vlist.contains("DLINDX4A") do vi5(.deal1)
	if vlist.contains("DLINDX4B") do vi6(.deal1)
	if vlist.contains("DLINDX5") do vi7(.deal1)
	if vlist.contains("DLINDX6A") do vi8(.deal1)
	if vlist.contains("DLINDX6B") do vi9(.deal1)
	if vlist.contains("DLINDX8") do vi10(.deal1)

	quit


vidxerr(di) // Error message

	D SETERR^DBSEXECU("DEAL1","MSG",1225,"DEAL1."_di)

	quit


vkchged // Access key changed

	type public RecordDEAL1 deal1

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	set vux = vx("NOINT")
	set voldkey = vux.piece("|",1),vobj(deal1,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	do vload                                               // Make sure all data is loaded locally
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	set vnewkey = vux.piece("|",2),vobj(deal1,-3) = vnewkey // Copy new keys into object
	type RecordDEAL1 vnewrec = deal1.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("DEAL1",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	set vobj(deal1,-3) = vux.piece("|",1)                  // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

VIDXPGM()	quit "DEALFILE"	// Location of index program

