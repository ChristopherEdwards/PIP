V01S118(%ProcessMode,RecordCHKREG1 fCKREG)   // -  - SID= <CHKREM> Check Removal Verification
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:50 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="CHKREM",VPGM=$T(+0),VSNAME="Check Removal Verification"
 set vPSL=1
 set KEYS(1)=fCKREG.CO
 set KEYS(2)=fCKREG.GL
 set KEYS(3)=fCKREG.CKNO
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=15 do VPR(.fCKREG),VDA1(.fCKREG),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fCKREG),VPR(.fCKREG),VDA1(.fCKREG)
 if %ProcessMode do VLOD(.fCKREG) quit:$G(ER)  do VPR(.fCKREG),VDA1(.fCKREG)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCKREG)
	quit


VNEW(RecordCHKREG1 fCKREG) // Initialize arrays if %O=0
 
 do VDEF(.fCKREG)
 do VLOD(.fCKREG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCHKREG1 fCKREG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCHKREG1 fCKREG) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=15
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCHKREG1 fCKREG) // Display screen prompts
 set VO="9||13|"
 set VO(0)="|"
 set VO(1)=$C(1,9,14,0,0,0,0,0,0,0)_"01TRemove checks "
 set VO(2)=$C(1,36,3,0,0,0,0,0,0,0)_"01Tto "
 set VO(3)=$C(1,52,19,0,0,0,0,0,0,0)_"01Tfrom check register"
 set VO(4)=$C(2,9,12,0,0,0,0,0,0,0)_"01TG/L account "
 set VO(5)=$C(5,9,12,0,0,0,0,0,0,0)_"01TCheck Number"
 set VO(6)=$C(5,25,7,0,0,0,0,0,0,0)_"01TPrinted"
 set VO(7)=$C(5,35,6,0,0,0,0,0,0,0)_"01TBranch"
 set VO(8)=$C(5,44,9,0,0,0,0,0,0,0)_"01TTeller ID"
 set VO(9)=$C(6,28,4,0,0,0,0,0,0,0)_"01TDate"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCHKREG1 fCKREG)  // Display screen data
 new V
 s CKS=$G(CKS)
 s GL=$G(GL)
 s MAX=$G(MAX)
 s MIN=$G(MIN)
 //
 set VO="12|10|13|"
 set VO(10)=$C(1,23,12,2,0,0,0,0,0,0)_"01N"_$G(MIN)
 set VO(11)=$C(1,39,12,2,0,0,0,0,0,0)_"01N"_$G(MAX)
 set VO(12)=$C(2,21,12,2,0,0,0,0,0,0)_"01N"_$G(GL)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=8 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fCKREG)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordCHKREG1 fCKREG)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,CKS(I))=$G(CKS(I))
 
 set VO(VX+1)=$C(DY,9,12,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,23,10,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,35,6,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",3)
 set VO(VX+4)=$C(DY,44,12,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",4)
 set DY=DY+1,VX=VX+4
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCHKREG1 fCKREG)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=4,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=7+%REPEAT,BLKSIZ=(40*%REPEAT)+36,PGM=$T(+0),DLIB="SYSDEV",DFID="CHKREG1"
 set OLNTB=VPB*1000
 
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,22,12)_"20N|*MIN|[*]@MIN"
 set %TAB(2)=$C(0,38,12)_"20N|*MAX|[*]@MAX"
 set %TAB(3)=$C(1,20,12)_"20N|*GL|[*]@GL"
 set %TAB(4)=$C(7,8,12)_"20N12401|*CKS(1)|[*]@CKS"
 set %TAB(5)=$C(7,22,10)_"20T12402|*CKS(1)|[*]@CKS"
 set %TAB(6)=$C(7,34,6)_"20N12403|*CKS(1)|[*]@CKS"
 set %TAB(7)=$C(7,43,12)_"20T12404|*CKS(1)|[*]@CKS"
 do VTBL(.fCKREG)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCHKREG1 fCKREG) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCHKREG1 fCKREG
 do VPR(.fCKREG)
 do VDA1(.fCKREG)
 do ^DBSPNT()
 quit

VW(RecordCHKREG1 fCKREG)
 do VDA1(.fCKREG)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCHKREG1 fCKREG)
 do VDA1(.fCKREG)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCHKREG1 fCKREG
 do VDA1(.fCKREG)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCHKREG1 fCKREG
 if sn="CHKREG1" do vSET1(.fCKREG,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCHKREG1 fCKREG,di,X)
 do fCKREG.setAuditFlag(1)
 set fCKREG.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCHKREG1 fCKREG
 if fid="CHKREG1" quit $$vREAD1(.fCKREG,di)
 quit ""
vREAD1(RecordCHKREG1 fCKREG,di)
 quit fCKREG.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
