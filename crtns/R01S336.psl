R01S336	// SCA347 - ACH Origination Detail Transaction Rpt
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:56 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String TCR,TDR
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA347"
	set RN="ACH Origination Detail Transaction Rpt"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[ACHFIL]QTDATE|||D EXT^DBSQRY||T|Tape Creation Date|||||"
	set %TAB("VIN2")="|255||[ACHFIL]QTTIME|||D EXT^DBSQRY||T|Tape Creation Time|||||"
	set %TAB("VIN3")="|255||[ACHDTL]RTNUMFULL|||D EXT^DBSQRY||T|Receiver Identification|||||"
	set %TAB("VIN4")="|255||[ACHBCH]TJD|[ACHDTL]:NOVAL||D EXT^DBSQRY||T|System Processing Date|||||"
	set %TAB("VIN5")="|255||[ACHDTL]TAMT|||D EXT^DBSQRY||T|Transaction Amount|||||"
	set %TAB("VIN6")="|255||[ACHDTL]TRACE|||D EXT^DBSQRY||T|Trace Number|||||"
	set %TAB("VIN7")="|255||[ACHDTL]IBSTC|[TRN]:NOVAL||D EXT^DBSQRY||T|IBS Transaction Code|||||"
	set %TAB("VIN8")="|255||[ACHDTL]ACHTC|[STBLACHTC]:NOVAL||D EXT^DBSQRY||T|ACH Transaction Code|||||"
	set %TAB("VIN9")="|255||[ACHDTL]COID|[ACH]:NOVAL||D EXT^DBSQRY||T|Company ID|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TCR,TDR
	type public String VIN1,VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BORIGDEF,CONAM,ETC,FDATEF1,FDES,FORDES,ND2,NDF1,RID,RN,RTDES,RTNUM1,RTNUMFULL,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA347",RN="ACH Origination Detail Transaction Rpt"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA347","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[ACHDTL]CID#1#17,[ACHBCH]PTYPE#20#10,[ACHDTL]TAMTF#31#13,[ACHDTL]INDNAM#46#22,[ACHDTL]INDID#70#15,[ACHDTL]COID#87#10,[ACHDTL]BATCH#99#3,[ACHDTL]SEQ#104#6,[ACHDTL]TRACE#112#15"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[ACHFIL]QTDATE "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[ACHFIL]QTTIME "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[ACHDTL]RTNUMFULL "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[ACHBCH]TJD "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[ACHDTL]TAMT "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[ACHDTL]TRACE "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[ACHDTL]IBSTC "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[ACHDTL]ACHTC "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[ACHDTL]COID "_VIN9,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("ACHDTL,ACHBCH,ACHFIL") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Tape Creation Date"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Tape Creation Time"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Receiver Identification"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"System Processing Date"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Transaction Amount"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Trace Number"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"IBS Transaction Code"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"ACH Transaction Code"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"Company ID"_"|VIN9|"_VIN9.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="ACH Origination Detail Transaction Rpt"
		set VBNRINFO("PGM")="R01S336"
		set VBNRINFO("RID")="SCA347"
		set VBNRINFO("TABLES")="ACHDTL,ACHBCH,ACHFIL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ACHFIL]FORIG"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,ACHDTL]FILE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ACHBCH]BORIG5"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,ACHDTL]RTNUM"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,ACHDTL]BATCH"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,ACHDTL]TJD"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,ACHDTL]ACHTC"
		set VBNRINFO("ORDERBY",8)="[SYSDEV,ACHDTL]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:8 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"ACHFIL.FORIG,ACHDTL.FILE,ACHBCH.BORIG5,ACHDTL.RTNU"
	set VSELECT=VSELECT_"M,ACHDTL.BATCH,ACHDTL.TJD,ACHDTL.ACHTC,ACHDTL.SEQ,"
	set VSELECT=VSELECT_"ACHDTL.RPA,ACHDTL.RTNUMFULL,ACHFIL.FTIMEF,ACHDTL.C"
	set VSELECT=VSELECT_"ID,ACHBCH.PTYPE,ACHDTL.TAMTF,ACHDTL.INDNAM,ACHDTL."
	set VSELECT=VSELECT_"INDID,ACHDTL.COID,ACHDTL.TRACE,ACHFIL.FDEST,ACHFIL"
	set VSELECT=VSELECT_".FDATEF,ACHBCH.NDF,ACHDTL.IBSTC,ACHDTL.FREE,ACHDTL"
	set VSELECT=VSELECT_".ADDSEQ,ACHDTL.TAMT,ACHDTL.ATC"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"ACHDTL,ACHBCH,ACHFIL",VWHERE,"ACHFIL.FORIG,ACHDTL.FILE,ACHBCH.BORIG5,ACHDTL.RTNUM,ACHDTL.BATCH,ACHDTL.TJD,ACHDTL.ACHTC,ACHDTL.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7="",vovc8=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc8,vc8
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26
	set vc1=V.piece($C(9),1)			// ACHFIL.FORIG
	set vc2=V.piece($C(9),2)			// ACHDTL.FILE
	set vc3=V.piece($C(9),3)			// ACHBCH.BORIG5
	set vc4=V.piece($C(9),4)			// ACHDTL.RTNUM
	set vc5=V.piece($C(9),5)			// ACHDTL.BATCH
	set vc6=V.piece($C(9),6)			// ACHDTL.TJD
	set vc7=V.piece($C(9),7)			// ACHDTL.ACHTC
	set vc8=V.piece($C(9),8)			// ACHDTL.SEQ
	set vc9=V.piece($C(9),9)			// ACHDTL.RPA
	set vc10=V.piece($C(9),10)			// ACHDTL.RTNUMFULL
	set vc11=V.piece($C(9),11)			// ACHFIL.FTIMEF
	set vc12=V.piece($C(9),12)			// ACHDTL.CID
	set vc13=V.piece($C(9),13)			// ACHBCH.PTYPE
	set vc14=V.piece($C(9),14)			// ACHDTL.TAMTF
	set vc15=V.piece($C(9),15)			// ACHDTL.INDNAM
	set vc16=V.piece($C(9),16)			// ACHDTL.INDID
	set vc17=V.piece($C(9),17)			// ACHDTL.COID
	set vc18=V.piece($C(9),18)			// ACHDTL.TRACE
	set vc19=V.piece($C(9),19)			// ACHFIL.FDEST
	set vc20=V.piece($C(9),20)			// ACHFIL.FDATEF
	set vc21=V.piece($C(9),21)			// ACHBCH.NDF
	set vc22=V.piece($C(9),22)			// ACHDTL.IBSTC
	set vc23=V.piece($C(9),23)			// ACHDTL.FREE
	set vc24=V.piece($C(9),24)			// ACHDTL.ADDSEQ
	set vc25=V.piece($C(9),25)			// ACHDTL.TAMT
	set vc26=V.piece($C(9),26)			// ACHDTL.ATC
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 type public String TCR,TDR

 set TDR=0,TCR=0
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0,vs(8)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1,vskp(8)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	if 'vskp(7).get() do VDTL7 quit:VFMQ
	do VHDG8 quit:VFMQ
	if 'vskp(8).get() do VDTL8 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(8)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7,vc8,vovc8
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,vb8=1,VH0=1
	if vb6!(vovc6'=vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,vb8=1
	if vb7!(vovc7'=vc7) set vs(8)=0,vh(8)=0,VD(7)=0,vb8=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(8) set vs(8)=1 do VSUM8 quit:VFMQ  do stat^DBSRWUTL(8)
	if 'vs(7) set vs(7)=1 do VSUM7 quit:VFMQ  do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(8)=VT(8)+1
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,BORIGDEF,CONAM,ER,ETC,FDATEF1,FDES,FORDES,IOSL,ND2,NDF1,RID,RN,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"File Originator:"
	do VP1 quit:VFMQ!verror.get()  set V=$E(FORDES,1,24)
	set VL=VL_$J("",19-VL.length())_V
	set VL=VL_$J("",49-VL.length())_"File Destination:"
	do VP2 quit:VFMQ!verror.get()  set V=$E(FDES,1,25)
	set VL=VL_$J("",68-VL.length())_V
	set VL=VL_$J("",101-VL.length())_"File Date:"
	do VP3 quit:VFMQ!verror.get()  set V=$E(FDATEF1,1,10)
	set VL=VL_$J("",112-VL.length())_V
	do VOM
	set VL="Batch Originator:"
	do VP4 quit:VFMQ!verror.get()  set V=$E(BORIGDEF,1,25) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",19-VL.length())_V
	set VL=VL_$J("",54-VL.length())_"File Number:"
	set VL=VL_$J("",68-VL.length())_$J(vc2,2)
	set VL=VL_$J("",101-VL.length())_"File Time:"
	set VL=VL_$J("",112-VL.length())_$J($$TIM^%ZM(vc11),8)
	do VOM
	set VL="" do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,BORIGDEF,ETC,FDATEF1,FDES,FORDES,IOSL,ND2,NDF1,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL="" do VOM
	set VL="Receiver ID:"
	set VL=VL_$J("",14-VL.length())_$J(vc10,9)
	set VL=VL_$J("",28-VL.length())_"Name:"
	do VP6 quit:VFMQ!verror.get()  set V=$E(RTDES,1,20)
	set VL=VL_$J("",34-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VSUM5	// Summary
	type public String %TIM,BORIGDEF,ETC,FDATEF1,FDES,FORDES,I,IOSL,ND2,NDF1,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="                         "_"============================== RECEIVER ID TOTALS"
	set VL=VL_$J("",75-VL.length())_"=============================="
	do VOM
	set VL="                           "_"Receiving ID:"
	set VL=VL_$J("",42-VL.length())_$J(vc10,9)
	set VL=VL_$J("",74-VL.length())_"Debit Amount"
	set VL=VL_$J("",92-VL.length())_"Credit Amount"
	do VOM
	set VL="                                                                         "_$J($FN(TRIDD,",",2),13)
	set VL=VL_$J("",92-VL.length())_$J($FN(TRIDC,",",2),13)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,BORIGDEF,ETC,FDATEF1,FDES,FORDES,IOSL,ND2,NDF1,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="    "_"Effective Date:"
	do VP7 quit:VFMQ!verror.get()  set V=$E(NDF1,1,10)
	set VL=VL_$J("",20-VL.length())_V
	set VL=VL_$J("",32-VL.length())_"Receiver ID:"
	set VL=VL_$J("",45-VL.length())_$J(vc10,9)
	set VL=VL_$J("",58-VL.length())_"Name:"
	do VP8 quit:VFMQ!verror.get()  set V=$E(RTDES,1,20)
	set VL=VL_$J("",64-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VDTL7	// Detail
	type public String %TIM,BORIGDEF,ETC,FDATEF1,FDES,FORDES,IOSL,ND2,NDF1,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:VD(7)  set VD(7)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="Tran Code:"
	do VP9 quit:VFMQ!verror.get()  set V=$E(ETC,1,12)
	set VL=VL_$J("",11-VL.length())_V
	set VL=VL_$J("",25-VL.length())_"RPA Code:"
	set VL=VL_$J("",35-VL.length())_$E(vc9,1,10)
	set VL=VL_$J("",47-VL.length())_"Effective Date:"
	do VP10 quit:VFMQ!verror.get()  set V=$E(NDF1,1,10)
	set VL=VL_$J("",63-VL.length())_V
	set VL=VL_$J("",75-VL.length())_"Receiver ID:"
	set VL=VL_$J("",88-VL.length())_$J(vc10,9)
	set VL=VL_$J("",99-VL.length())_"Name:"
	do VP11 quit:VFMQ!verror.get()  set V=$E(RTDES,1,20)
	set VL=VL_$J("",105-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VSUM7	// Summary
	type public String %TIM,BORIGDEF,ETC,FDATEF1,FDES,FORDES,I,IOSL,ND2,NDF1,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(7) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                         "_"============================ EFFECTIVE DATE TOTALS"
	set VL=VL_$J("",76-VL.length())_"============================="
	do VOM
	set VL="                           "_"Receiving ID:"
	do VP12 quit:VFMQ!verror.get()  set V=$E(RTNUM1,1,10)
	set VL=VL_$J("",42-VL.length())_V
	set VL=VL_$J("",74-VL.length())_"Debit Amount"
	set VL=VL_$J("",92-VL.length())_"Credit Amount"
	do VOM
	set VL="                         "_"Effective Date:"
	do VP13 quit:VFMQ!verror.get()  set V=$E(ND2,1,10)
	set VL=VL_$J("",42-VL.length())_V
	set VL=VL_$J("",73-VL.length())_$J($FN(TEDD,",",2),13)
	set VL=VL_$J("",92-VL.length())_$J($FN(TEDC,",",2),13)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit

VHDG8	// Group Header
	type public String %MSKD,%TIM,BORIGDEF,CONAM,ER,ETC,FDATEF1,FDES,FORDES,IOSL,ND2,NDF1,RID,RN,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:vh(8)  set vh(8)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Account Number     PMT Type          Amount  Name                    Individual ID       Company  Batch   Seq            Trace"
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VDTL8	// Detail
	type public String %TIM,BORIGDEF,ETC,FDATEF1,FDES,FORDES,IOSL,ND2,NDF1,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$E(vc12,1,17)
	set VL=VL_$J("",19-VL.length())_$E(vc13,1,10)
	set V=vc14,VO=V set V=$J($FN(V,",",2),13) do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",30-VL.length())_V		// [SYSDEV,ACHDTL]TAMTF
	set VL=VL_$J("",45-VL.length())_$E(vc15,1,22)
	set VL=VL_$J("",69-VL.length())_$E(vc16,1,15)
	set VL=VL_$J("",86-VL.length())_$E(vc17,1,10)
	set VL=VL_$J("",98-VL.length())_$J(vc5,3)
	set VL=VL_$J("",103-VL.length())_$J(vc8,6)
	set VL=VL_$J("",111-VL.length())_$J(vc18,15)
	do VOM
	set VL="" do VOM
	quit

VSUM8	// Summary
	type public String %TIM,BORIGDEF,ETC,FDATEF1,FDES,FORDES,I,IOSL,ND2,NDF1,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(8) quit
	if VLC+8>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="                         "_"=============================== TRAN CODE TOTALS"
	set VL=VL_$J("",74-VL.length())_"==============================="
	do VOM
	set VL="                           "_"Receiving ID:"
	set VL=VL_$J("",42-VL.length())_$J(vc10,9)
	set VL=VL_$J("",74-VL.length())_"Debit Amount"
	set VL=VL_$J("",92-VL.length())_"Credit Amount"
	do VOM
	set VL="                         "_"Effective Date: "
	do VP15 quit:VFMQ!verror.get()  set V=$E(NDF1,1,10)
	set VL=VL_$J("",41-VL.length())_V
	set VL=VL_$J("",73-VL.length())_$J($FN(TTCD,",",2),13)
	set VL=VL_$J("",92-VL.length())_$J($FN(TTCC,",",2),13)
	do VOM
	set VL="                              "_"Tran Code:"
	set VL=VL_$J("",42-VL.length())_$E(ETC,1,12)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BORIGDEF,CONAM,ETC,FDATEF1,FDES,FORDES,ND2,NDF1,RID,RN,RTDES,RTNUM1,RTNUMFULL,TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: FORDES

	type public String vc1
 /*
 ---- Revision History ------------------------------------------------
 
 06/14/06 - MBUIM - CR 21461
	    Modified to replace long variable name utblachrt

 ----------------------------------------------------------------------
 */
 type public String fACHFIL,FDATEF,FORDES,FTIMEF
 type String FOR,INAME

 // None Defined
 if 'FTIMEF.exists() set FTIMEF=$$^MSG(6436)

 if 'FDATEF.exists() set FDATEF=$$^MSG(6436)

 // None Defined
 set FORDES=$$^MSG(6436)
 
 if 'fACHFIL.get() set fACHFIL="" quit

 set FOR=vc1

 do STRIP^DEPDI("FOR",vc1,"L")

 quit:'FOR.length()

 type RecordUTBLACHRT uachrt=Db.getRecord("UTBLACHRT","KEY=:FOR",1)
 set INAME=uachrt.iname
 set FORDES=INAME.extract(1,21)
	quit

VP2	// Column pre-processor - Variable: FDES

	type public String vc19
 /*
 ---- Revision History ------------------------------------------------
 
 06/14/06 - MBUIM - CR 21461
	    Modified to replace long variable name utblachrt
 
 ---------------------------------------------------------------------- 
 */
 type public String DES,fACHFIL,FDES
 type String INAME

 // None Defined
 set FDES=$$^MSG(6436)

 if 'fACHFIL.get() set fACHFIL="" quit

 do STRIP^DEPDI("DES",vc19,"L")

 quit:'DES.length()

 type RecordUTBLACHRT uachrt=Db.getRecord("UTBLACHRT","KEY=:DES",1)
 set INAME=uachrt.iname
 set FDES=INAME.extract(1,21)
	quit

VP3	// Column pre-processor - Variable: FDATEF1

	type public String vc20
 type public String FDATEF1

 set FDATEF1=$$Y2K(vc20)
	quit

VP4	// Column pre-processor - Variable: BORIGDEF

	type public String vc3
 type public String BORIGDEF,fACHBCH
 type String BOR,VAL

 // None Defined
 set BORIGDEF=$$^MSG(6436)

 if 'fACHBCH.get() set fACHBCH="" quit

 set BOR=vc3, VAL=""

 type ResultSet rs=Db.select("KEY,INAME","UTBLACHRT")
 while rs.next() do {
 	set VAL=rs.getCol("KEY")
	if VAL.extract(1,8)=BOR quit
	if VAL.length() set BORIGDEF=rs.getCol("INAME")
	}
	quit

VP5	// Column post-processor - Variable: BORIGDEF

  type public Number TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD

  set (TRIDD,TRIDC,TEDD,TEDC,TTCD,TTCC)=0
	quit

VP6	// Column pre-processor - Variable: RTDES

	type public String vc4
 type public String RTDES
 type String RT,VAL

 // None Defined
 set RTDES=$$^MSG(6436)

 set VAL="",RT=vc4

 type ResultSet rs=Db.select("KEY,INAME","UTBLACHRT")
 while rs.next() do {
 	set VAL=rs.getCol("KEY")
	if VAL.extract(1,8)=RT quit
 	if VAL.length() set RTDES=rs.getCol("INAME")
	}
	quit

VP7	// Column pre-processor - Variable: NDF1

	type public String vc21
 type public String NDF1

 set NDF1=$$Y2K(vc21)
	quit

VP8	// Column pre-processor - Variable: RTDES

	type public String vc4
 type String RT,RTDES,VAL

 // None Defined
 set RTDES=$$^MSG(6436)

 set VAL="",RT=vc4

 type ResultSet rs=Db.select("KEY,INAME","UTBLACHRT")
 while rs.next() do {
	set VAL=rs.getCol("KEY")
	if VAL.extract(1,8)=RT quit
	if VAL.length() set RTDES=rs.getCol("INAME")
	}
	quit

VP9	// Column pre-processor - Variable: ETC

	type public String vc7,vc22
 type public String ETC
 type String ACHDTC

 set ACHDTC=vc7

 if vc7 do {
	if ACHDTC.extract()'=$CHAR(32) set ETC=vc7 quit
	}

 if (vc22).length()  set ETC=vc22 quit

 // None Defined
 set ETC=$$^MSG(6436)
	quit

VP10	// Column pre-processor - Variable: NDF1

	type public String vc21
 type public String NDF1

 set NDF1=$$Y2K(vc21)
	quit

VP11	// Column pre-processor - Variable: RTDES

	type public String vc4
 type public String RT,RTDES,VAL

 // None Defined
 set RTDES=$$^MSG(6436)

 set VAL="",RT=vc4

 type ResultSet rs=Db.select("KEY,INAME","UTBLACHRT")
 while rs.next() do {
	set VAL=rs.getCol("KEY")
	if VAL.extract(1,8)=RT quit
	if VAL.length() set RTDES=rs.getCol("INAME")
	}
	quit

VP12	// Column pre-processor - Variable: RTNUM1

	type public String vc10
 type public Number RTNUM1

 set RTNUM1=vc10
	quit

VP13	// Column pre-processor - Variable: ND2

	type public String vc21
 type public String ND2

 set ND2=$$Y2K(vc21)
	quit

VP14	// Column post-processor - [SYSDEV,ACHDTL]TAMTF

	type public String vc23,vc24,vc25,vc26,vc22
 /*
 ---- Revision History ------------------------------------------------
 
 06/14/06 - MBUIM - CR 21461
	    Modified to replace long variable name stblachtc

 ----------------------------------------------------------------------
 */
 type public Number TCR,TDR,TEDC,TEDD,TRIDC,TRIDD,TTCC,TTCD
 type public String TRN
 type Number AMT,DC
 type String ART

 set ART=vc23_vc24
 set AMT=vc25,TRN=vc26

 if 'TRN.length() set TRN=vc22

 quit:'TRN.length()
 
 type RecordSTBLACHTC sachtc=Db.getRecord("STBLACHTC","ACHTC=:TRN",1)
 if 'sachtc.getMode() do {
 	set TRN=vc22
	quit:'TRN.length()
	}

 if sachtc.getMode() do {
	set DC=sachtc.dc
	}

 else  do {
 	type RecordTRN trn=Db.getRecord("TRN","ETC=:TRN",1)
	set DC=trn.itc
	}
 
 set AMT=AMT/100

 if DC set TCR=TCR+(AMT),TTCC=TTCC+AMT,TEDC=TEDC+AMT,TRIDC=TRIDC+AMT quit

 set TDR=TDR+(AMT),TTCD=TTCD+AMT,TEDD=TEDD+AMT,TRIDD=TRIDD+AMT
	quit

VP15	// Column pre-processor - Variable: NDF1

	type public String vc21
 type public String NDF1

 set NDF1=$$Y2K(vc21)
 quit


Y2K(String VAL)

 type Date MDT

 set MDT=VAL.toDate("MM-DD-YEAR")
 set VAL=MDT.toString("MM/DD/YEAR")

 quit VAL
	quit
