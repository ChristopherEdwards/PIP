V00S137(%ProcessMode,RecordDDPHOST %ZDDP())   // -  - SID= <DDPDIRSU> DDP Host/FEP Directory Maintenance
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:15 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="DDPDIRSU",VPGM=$T(+0),VSNAME="DDP Host/FEP Directory Maintenance"
 set VFSN("DDPHOST")="zZDDP"
 set vPSL=1
 set KEYS(1)=%ZDDP(1).HOSTDIR.get()
 set KEYS(2)=%ZDDP(1).FEPDIR.get()
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=15 do VPR(.%ZDDP()),VDA1(.%ZDDP()),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.%ZDDP()),VPR(.%ZDDP()),VDA1(.%ZDDP())
 if %ProcessMode do VLOD(.%ZDDP()) quit:$G(ER)  do VPR(.%ZDDP()),VDA1(.%ZDDP())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.%ZDDP())
 type Number ptr
 set ptr=""
 for  set ptr = %ZDDP(ptr).order() quit:ptr.isNull()  do {
     if %ZDDP(ptr).FEPDIR="" kill %ZDDP(ptr)
     }
	quit


VNEW(RecordDDPHOST %ZDDP()) // Initialize arrays if %O=0
 
 do VDEF(.%ZDDP())
 do VLOD(.%ZDDP())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordDDPHOST %ZDDP())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordDDPHOST %ZDDP()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=15
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDDPHOST %ZDDP()) // Display screen prompts
 set VO="6||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,20,36,1,0,0,0,0,0,0)_"01T DDP Host/FEP Directory Maintenance "
 set VO(2)=$C(4,24,15,0,0,0,0,0,0,0)_"01THost Directory:"
 set VO(3)=$C(6,14,8,2,0,0,0,0,0,0)_"01TFEP Name"
 set VO(4)=$C(6,32,9,2,0,0,0,0,0,0)_"01TSql Based"
 set VO(5)=$C(6,44,14,2,0,0,0,0,0,0)_"01TDirectory Name"
 set VO(6)=$C(7,32,6,2,0,0,0,0,0,0)_"01TClient"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordDDPHOST %ZDDP())  // Display screen data
 new V
 s HOSTDIR=$G(HOSTDIR)
 //
 set VO="7|7|13|0"
 set VO(7)=$C(4,40,20,2,0,0,0,0,0,0)_"01T"_$G(HOSTDIR)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+0,DY=8 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.%ZDDP())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordDDPHOST %ZDDP())  // Display data %REPEAT times
 //instantiate new object if necessary
  if '%ZDDP(I).getPointer() do {
     set %ZDDP(I)=Class.new("RecordDDPHOST","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY,14,15,2,0,0,0,0,0,0)_"00T"_$E(%ZDDP(I).FEPDIR,1,15)
 set VO(VX+2)=$C(DY,35,1,2,0,0,0,0,0,0)_"00L"_$S(%ZDDP(I).SQLBASE:"Y",1:"N")
 set VO(VX+3)=$C(DY,44,20,2,0,0,0,0,0,0)_"00T"_$E(%ZDDP(I).FEPNAM,1,20)
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordDDPHOST %ZDDP())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=1,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=2,VPB=7+%REPEAT,BLKSIZ=(36*%REPEAT)+20,PGM=$T(+0),DLIB="SYSDEV",DFID="DDPHOST"
 set OLNTB=VPB*1000
 
 set VFSN("DDPHOST")="zZDDP"
 //
 for I=5:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(3,39,20)_"20T|*HOSTDIR|[*]@HOSTDIR"
 set %TAB(2)=$C(7,13,15)_"00T12402|1|[DDPHOST]FEPDIR|||do VP1^V00S137(.%ZDDP)"
 set %TAB(3)=$C(7,34,1)_"00L12418|1|[DDPHOST]SQLBASE"
 set %TAB(4)=$C(7,43,20)_"00T12401|1|[DDPHOST]FEPNAM|||do VP2^V00S137(.%ZDDP)"
 do VTBL(.%ZDDP())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordDDPHOST %ZDDP()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordDDPHOST %ZDDP()) //
 /*
   ---- Revision History------------------------------------------------
 
	02/08/05 - KELLYP - CR 13664
	      Modified to use DBSMACRO calls instead of modifying local
	      array.
 
   ---------------------------------------------------------------------
 */

 if X.isNull() do { quit
	// Delete whole row
	do DEFAULT^DBSMACRO("[DDPHOST]HOSTDIR","")
	do DEFAULT^DBSMACRO("[DDPHOST]FEPDIR","")
	do DEFAULT^DBSMACRO("[DDPHOST]SQLBASE","")
	do DEFAULT^DBSMACRO("[DDPHOST]FEPNAM","")	
	}

 /*
  Update the record's first primary key (in case
  case it's a new record).
 */
 do DEFAULT^DBSMACRO("[DDPHOST]HOSTDIR",HOSTDIR)

 quit

VP2(RecordDDPHOST %ZDDP()) //
 /*
   ---- Revision History------------------------------------------------
 
	02/08/05 - KELLYP - CR 13664
	      Modified to use %ZDDP object array instead of local array.  
 
   --------------------------------------------------------------------- 
 */
  
 type Public String V,X

 type Number ROW
 set ROW=I(1)

 if X.isNull(),%ZDDP(ROW).fepdir.isNull() quit

 if X.isNull(),'%ZDDP(ROW).fepdir.isNull() do { quit:ER

	// Delete FEP Name to delete Directory
	do Runtime.setErrMSG("DDPHOST",8494)
	set X=V
	}

 type Number J
 set J=""

 // Check to make sure same FEPDIR isn't used twice
 for  set J=%ZDDP(J).order() quit:(J.isNull())  do { quit:ER
	
	// Same row, ignore it
	if J=ROW quit

	// FEP Directory already added, delete this entry
	if %ZDDP(J).fepdir=%ZDDP(ROW).fepdir do Runtime.setErrMSG("DDPHOST",8495) quit:ER
	}
 
 // GUI front end, don't need to verify FEPNAM is valid
 if %ZDDP(ROW).sqlbase quit

 type String GBLDIR
 set GBLDIR=$$GBLDIR^DDPUTL(X)
 
 // Invalid directory
 if GBLDIR.isNull() do Runtime.setErrMSG("DDPHOST",1315) quit:ER
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDDPHOST %ZDDP()
 do VPR(.%ZDDP())
 do VDA1(.%ZDDP())
 do ^DBSPNT()
 quit

VW(RecordDDPHOST %ZDDP())
 do VDA1(.%ZDDP())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDDPHOST %ZDDP())
 do VDA1(.%ZDDP())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDDPHOST %ZDDP()
 do VDA1(.%ZDDP())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordDDPHOST %ZDDP()
 if sn="DDPHOST" do vSET1(%ZDDP(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordDDPHOST %ZDDP,di,X)
 do %ZDDP.setAuditFlag(1)
 set %ZDDP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordDDPHOST %ZDDP()
 if fid="DDPHOST" quit $$vREAD1(%ZDDP(I(1)),di)
 quit ""
vREAD1(RecordDDPHOST %ZDDP,di)
 quit %ZDDP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
