R01S111	// SCA042 - Escrow Analysis Modeler
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String AEDT,ASDT,BEGBAL,CID,ESC,INIDEP,TYPE
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String QESC=$G(ESC)

	set RID="SCA042"
	set RN="Escrow Analysis Modeler"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("QESC")="|5|||||||T|Run Analysis for Escrow:|||||"

	set %READ="IO/REQ,QESC#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String AEDT,ASDT,BEGBAL,CID,ESC,INIDEP,TYPE
	type public String QESC
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,NM,PGN,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vovc1,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA042",RN="Escrow Analysis Modeler"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA042","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[LNEAM]JD#1#10,[LNEAM]PMT#13#12,[LNEAM]RAMT#27#12,[LNEAM]BAL#41#12,[LNEAM]DESC#55#20"

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:1 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNEAM.JD,LNEAM.PMT,LNEAM.RAMT,LNEAM.BAL,LNEAM.DESC","LNEAM","","LNEAM.JD","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1
	set vovc1=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1
	set vovc1=vc1
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5
	set vc1=V.piece($C(9),1)			// LNEAM.JD
	set vc2=V.piece($C(9),2)			// LNEAM.PMT
	set vc3=V.piece($C(9),3)			// LNEAM.RAMT
	set vc4=V.piece($C(9),4)			// LNEAM.BAL
	set vc5=V.piece($C(9),5)			// LNEAM.DESC
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number CID
 type public String NM
 type Number I

 for I=1:1:6 set NM(I)=""
 if 'CID.get() quit
 set NM="NM"
 do UTLADDR^UTLADDR(,.NM,5,2,"ACN",CID)
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=ESC,CID,TYPE,ASDT,AEDT,INIDEP,BEGBAL
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1		// Skip detail
	do VBREAK

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(1)
	type Public String vc1,vovc1
	type Number vb1
	set (vb1)=0
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(1)=VT(1)+1
	quit

VDTL1	// Detail
	type public String AEDT,ASDT,BEGBAL,CID,ESC,INIDEP,IOSL,NM,PGN,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc2,vc3,vc4,vc5,verror,vh(),vovc1

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc1,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(V),10) set VL=V
	set VL=VL_$J("",12-VL.length())_$S(+vc2=0:$J("",12),1:$J($FN(vc2,",",2),12))
	set VL=VL_$J("",26-VL.length())_$S(+vc3=0:$J("",12),1:$J($FN(vc3,",",2),12))
	set VL=VL_$J("",39-VL.length())_$J($FN(vc4,",",2),13)
	set VL=VL_$J("",54-VL.length())_$E(vc5,1,20)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AEDT,ASDT,BEGBAL,CID,CONAM,ESC,INIDEP,NM,PGN,RID,RN,TYPE,VL,vc1,vc2,vc3,vc4,vc5,vovc1,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+16,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL="                                                                      "_"PAGE: "
	do VP2 quit:VFMQ!verror.get()  set V=$J(PGN,2)
	set VL=VL_$J("",76-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Analysis Period: "
	set VL=VL_$J("",17-VL.length())_$J($$DAT^%ZM(ASDT),10)
	set VL=VL_$J("",28-VL.length())_"to "
	set VL=VL_$J("",31-VL.length())_$J($$DAT^%ZM(AEDT),10)
	set VL=VL_$J("",57-VL.length())_"Product: "
	set VL=VL_$J("",66-VL.length())_$J(TYPE,4)
	do VOM
	set VL="                                     "_"Calculated Starting Balance:"
	set V=$J(INIDEP,12,2) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",66-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                         "_"Actual Starting Balance:"
	set V=$J(BEGBAL,12,2) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",66-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(NM(1),1,40)
	set VL=VL_$J("",52-VL.length())_"Loan Account: "
	set V=$J(CID,12) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",66-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(NM(3),1,40)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(NM(4),1,40)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(NM(5),1,40)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(NM(6),1,40)
	do VOM
	set VL="" do VOM
	set VL=" "_"Activity                   Remittance        Ending"
	do VOM
	set VL="   "_"Date          Payment        Amount       Balance  Description"
	do VOM
	set VL="================================================================================"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,LNEAM]JD

 type public Date JD
 type public String LNEAM()

 set JD=LNEAM(JD).order() 
	quit

VP2	// Column pre-processor - Variable: PGN

 type public Number CID,PGN,SAVCID

 if 'PGN.exists() set PGN=1,SAVCID=CID quit
 if CID=SAVCID set PGN=PGN+1
 set PGN=1,SAVCID=CID
	quit

VP3	// Column post-processor - Variable: INIDEP

 type public String INIDEP
 type String V,VL

 if INIDEP="" set (V,VL)=""
	quit

VP4	// Column post-processor - Variable: BEGBAL

 type public Number BEGBAL 
 type String V,VL

 if BEGBAL="" set (V,VL)=""
	quit

VP5	// Column post-processor - Variable: CID

 type public Number CID
 type String V,VL

 if 'CID.get() set (V,VL)=""
	quit
