V01S379(%ProcessMode,RecordLNFEEP fLNFEEP)   //PBS - LN - SID= <LNFEEPC> Loan Fee Plan Maintenance (Page 3)
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:57 - shetyes
 // This screen supports the Loan Fee Plans user table (LNFEE).
 // The LNFEEPC screen identifies the minimum and maximum charges
 // that may be assessed for the loan fee; specifies a fixed charge
 // if applicable; indicates the rounding options for the fee
 // calculations; and contains fee calculation information.
 // 
 // The user accesses the LNFEEPC screen via the Loan Fee Plan functions
 // (LNFEEP1, LNFEEP2, LNFEEP3, and LNFEEP4).
 // 
 // For further information, refer to the Loan Fee Processing Reference
 // Manual.
 // 
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,oper",VSID="LNFEEPC",VPGM=$T(+0),VSNAME="Loan Fee Plan Maintenance (Page 3)"
 set VFSN("LNFEEP")="zfLNFEEP"
 set vPSL=1
 set KEYS(1)=fLNFEEP.FEETYP
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=11 do VPR(.fLNFEEP),VDA1(.fLNFEEP),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fLNFEEP),VPR(.fLNFEEP),VDA1(.fLNFEEP)
 if %ProcessMode do VLOD(.fLNFEEP) quit:$G(ER)  do VPR(.fLNFEEP),VDA1(.fLNFEEP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fLNFEEP)
	quit


VNEW(RecordLNFEEP fLNFEEP) // Initialize arrays if %O=0
 
 do VDEF(.fLNFEEP)
 do VLOD(.fLNFEEP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordLNFEEP fLNFEEP)
 if fLNFEEP.DTST="" set fLNFEEP.DTST=TJD
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordLNFEEP fLNFEEP) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=11
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNFEEP fLNFEEP) // Display screen prompts
 set VO="11||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,11,10,0,0,0,0,0,0,0)_"01T Fee Type:"
 set VO(2)=$C(2,9,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(3)=$C(4,25,28,1,0,0,0,0,0,0)_"01T  Loan Fee Plan Maintenance "
 set VO(4)=$C(6,5,16,0,0,0,0,0,0,0)_"01TRounding Option:"
 set VO(5)=$C(6,41,8,0,0,0,0,0,0,0)_"01TMinimum:"
 set VO(6)=$C(6,64,7,0,0,0,0,0,0,0)_"01TOption:"
 set VO(7)=$C(7,6,15,0,0,0,0,0,0,0)_"01TFixed $ Amount:"
 set VO(8)=$C(7,41,8,0,0,0,0,0,0,0)_"01TMaximum:"
 set VO(9)=$C(7,64,7,0,0,0,0,0,0,0)_"01TOption:"
 set VO(10)=$C(8,7,14,0,0,0,0,0,0,0)_"01TFunction Call:"
 set VO(11)=$C(10,8,50,2,0,0,0,0,0,0)_"01TOp      Percent  Of Account Data / Payment Element"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordLNFEEP fLNFEEP)  // Display screen data
 new V
 s oper=$G(oper)
 //
 set VO="20|12|13|"
 set VO(12)=$C(1,22,8,2,0,0,0,0,0,0)_"01T"_$E(fLNFEEP.FEETYP,1,8)
 set VO(13)=$C(2,22,30,2,0,0,0,0,0,0)_"01T"_$E(fLNFEEP.DESC,1,30)
 set VO(14)=$C(6,22,2,2,0,0,0,0,0,0)_"00T"_$E(fLNFEEP.RND,1,2)
 set V=$S(fLNFEEP.FEEMIN="":"",1:$J(fLNFEEP.FEEMIN,0,2)) set VO(15)=$C(6,50,12,2,0,0,0,0,0,0)_"00$"_$S(fLNFEEP.FEEMIN="":"",1:$J(fLNFEEP.FEEMIN,0,2))
 set VO(16)=$C(6,72,1,2,0,0,0,0,0,0)_"00N"_fLNFEEP.FMINOP
 set V=$S(fLNFEEP.FAMT="":"",1:$J(fLNFEEP.FAMT,0,2)) set VO(17)=$C(7,22,12,2,0,0,0,0,0,0)_"00$"_$S(fLNFEEP.FAMT="":"",1:$J(fLNFEEP.FAMT,0,2))
 set V=$S(fLNFEEP.FEEMAX="":"",1:$J(fLNFEEP.FEEMAX,0,2)) set VO(18)=$C(7,50,12,2,0,0,0,0,0,0)_"00$"_$S(fLNFEEP.FEEMAX="":"",1:$J(fLNFEEP.FEEMAX,0,2))
 set VO(19)=$C(7,72,1,2,0,0,0,0,0,0)_"00N"_fLNFEEP.FMAXOP
 set VO(20)=$C(8,22,40,2,0,0,0,0,0,0)_"00T"_$E(fLNFEEP.CFUNC,1,40)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+8,DY=12 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fLNFEEP)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNFEEP fLNFEEP)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,oper(I))=$G(oper(I))
 
 set VO(VX+1)=$C(DY,9,1,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",1)
 set V=$P(v1,"|",2) set VO(VX+2)=$C(DY,14,9,2,0,0,0,0,0,0)_"00$"_$S(V="":"",1:$J(V,0,2))
 set VO(VX+3)=$C(DY,25,55,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",3)
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordLNFEEP fLNFEEP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %REPREQ=12 set %MODGRP=1
 set %MODOFF=9,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=11+%REPEAT,BLKSIZ=(65*%REPEAT)+118,PGM=$T(+0),DLIB="SYSDEV",DFID="LNFEEP",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("LNFEEP")="zfLNFEEP"
 //
 for I=13:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,21,8)_"21T12401|1|[LNFEEP]FEETYP||if X?1A.AN"
 set %TAB(2)=$C(1,21,30)_"20T12401||[LNFEEP]DESC"
 set %TAB(3)=$C(5,21,2)_"00T12410||[LNFEEP]RND|||do VP1^V01S379(.fLNFEEP)"
 set %TAB(4)=$C(5,49,12)_"00$12415||[LNFEEP]FEEMIN|||||||2"
 set %TAB(5)=$C(5,71,1)_"00N12416||[LNFEEP]FMINOP|,0#""If less than min: chg=0"",1#""If less than min: chg=min""||do VP2^V01S379(.fLNFEEP)"
 set %TAB(6)=$C(6,21,12)_"00$12419||[LNFEEP]FAMT|||||||2"
 set %TAB(7)=$C(6,49,12)_"00$12417||[LNFEEP]FEEMAX|||||||2"
 set %TAB(8)=$C(6,71,1)_"00N12418||[LNFEEP]FMAXOP|,0#""If >max: chg=max"",1#""If >max: chg=max - report excess ""||do VP3^V01S379(.fLNFEEP)"
 set %TAB(9)=$C(7,21,40)_"00T12405||[LNFEEP]CFUNC|||do VP4^V01S379(.fLNFEEP)"
 set %TAB(10)=$C(11,8,1)_"00T12401|*oper(1)|[*]@OPER1|,#+#Add,-#Subtract,*#Multiply,/#Divide||do VP5^V01S379(.fLNFEEP)"
 set %TAB(11)=$C(11,13,9)_"00$12402|*oper(1)|[*]@OPER2|||||||2"
 set %TAB(12)=$C(11,24,55)_"00T12403|*oper(1)|[*]@OPER3|TBLELMNT(||do VP6^V01S379(.fLNFEEP)|do VP7^V01S379(.fLNFEEP)"
 do VTBL(.fLNFEEP)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordLNFEEP fLNFEEP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordLNFEEP fLNFEEP
 do VSPP1(.fLNFEEP)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordLNFEEP fLNFEEP)
 D VSPPREQ(.fLNFEEP) I ER Q
 ;
 type String HIT,N
 set (HIT,N)=""
 if fLNFEEP.FAMT'="" quit
 if fLNFEEP.CFUNC'="" quit
 for  set N=oper(N).order() quit:(N.isNull())  if oper(N).piece("|",1)'="" set HIT=1 quit
 if 'HIT set ER=1,ET="LNFEE5" do ^UTLERR quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit

VSPPREQ(RecordLNFEEP fLNFEEP) 
 //_______________________________________________________
 //  User Defined Required Data Item Definitions
 //_______________________________________________________

 set ER=0

 for I=%MODS:1:%REPEAT+%MODS-1 do VR1(.fLNFEEP) if ER set NI=((I-1)*3)+(1+%MODOFF) quit
 quit

VR1(RecordLNFEEP fLNFEEP) 

 // (@OPER1,@OPER2,@OPER3)

 I ($P(oper(I),"|",1)'=""),($P(oper(I),"|",2)'=""),($P(oper(I),"|",3)'="") quit


 // (@OPER1-,@OPER2-,@OPER3-)

 I ($P(oper(I),"|",1)=""),($P(oper(I),"|",2)=""),($P(oper(I),"|",3)="") quit

 do VR99 quit

VR99 
 set RM="Missing required field(s)/data item set definition error"
 set ER=1 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordLNFEEP fLNFEEP) //
 D VPO1(.fLNFEEP)
VPO1(RecordLNFEEP fLNFEEP)  // user library ROUND_PP
 I X'="",("RUD"'[$E(X)!($E(X,2)<1)) S ER=1,ET="INDEX3" D ^UTLERR Q
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP2(RecordLNFEEP fLNFEEP) //
 if X="",fLNFEEP.FEEMIN'="" set ET="FEEMIN",ER=1 do ^UTLERR quit
VP3(RecordLNFEEP fLNFEEP) //
 if X="",fLNFEEP.FEEMAX'="" set ET="FEEMAX",ER=1 do ^UTLERR quit
VP4(RecordLNFEEP fLNFEEP) //
 if X="" quit
 type String ZRTN,ZTAG
 set ZRTN=X.piece("(",1),ZTAG=ZRTN.piece("^",1),ZRTN=ZRTN.piece("^",2)
 if ZTAG.extract(1,2)="$$" set ZTAG=ZTAG.extract(3,99)
 if (ZTAG?.E1P.E)!(ZRTN?.E1P.E) set ER=1,RM=$$^MSG(2438) quit
 if '$$VALID^%ZRTNS(ZRTN) S ER=1,RM=$$^MSG(2438) quit
 set ZTAG=ZTAG.translate("$")
 if ZTAG'="" do { if ER quit
 	type String X
 	set ZRTN=ZTAG_"^"_ZRTN
 #ACCEPT Date=04/05/05; PGM=Santosh George; CR=13136
 	set X="S X=$T("_ZRTN_")" X X
 	if X="" S ER=1,RM=$$^MSG(1390) quit
 	}
 if X.extract(1,2)'="$$" S X="$$"_X
 set X=X.piece("(",1)
VP5(RecordLNFEEP fLNFEEP) //
 ;
 ; 09/27/96 - Matthew Zwitkowits - ARQ 21169
 ;       Modified previous modification to allow for deletion of
 ;       first line.  The code finds the first input line and
 ;       then checks previous modification.
 ;
 ; 02/26/96 - LOCKE - ARQ21033
 ;            Modified logic below to allow operands other than "+" if
 ;            either a fixed amount or function call are used.
 ;
 if X'="" do {                              ; MJZ - 9/27/96
 type String HIT
 set HIT=""
 for  set HIT=oper(HIT).order() quit:HIT=z1  quit:oper(HIT).piece("|",1)'=""
 if z1=HIT,(X'="+") do {  if ER quit
 		  if fLNFEEP.FAMT'="" quit               ; LOCKE - 2/26/96
 		  if fLNFEEP.CFUNC'="" quit
 		  set ER=1,RM=$$^MSG(480)
		  }
 }
 quit
VP6(RecordLNFEEP fLNFEEP) //
 if X="" Q
 if TBLELMNT(X).exists() do { quit
 if X'=fLNFEEP.BASIS S ER=1,ET="BASIS" do ^UTLERR quit
 if (X="I")!(X="P") do {
 	  if fLNFEEP.AMTH'=2,fLNFEEP.AMTH'=3 S ER=1,ET="LNFEE8" do ^UTLERR quit
	  }
 }
 if X'["[",X'["." S ER=1,RM=$$^MSG(2567) quit
 set I(3)=""
 N Z S Z=X N X S X=Z
 D ^DBSPARS
 ;
VP7(RecordLNFEEP fLNFEEP) //
 K TBLELMNT D TBL1^LNFEEU(.TBLELMNT)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNFEEP fLNFEEP
 do VPR(.fLNFEEP)
 do VDA1(.fLNFEEP)
 do ^DBSPNT()
 quit

VW(RecordLNFEEP fLNFEEP)
 do VDA1(.fLNFEEP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNFEEP fLNFEEP)
 do VDA1(.fLNFEEP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNFEEP fLNFEEP
 do VDA1(.fLNFEEP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordLNFEEP fLNFEEP
 if sn="LNFEEP" do vSET1(.fLNFEEP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordLNFEEP fLNFEEP,di,X)
 do fLNFEEP.setAuditFlag(1)
 set fLNFEEP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordLNFEEP fLNFEEP
 if fid="LNFEEP" quit $$vREAD1(.fLNFEEP,di)
 quit ""
vREAD1(RecordLNFEEP fLNFEEP,di)
 quit fLNFEEP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
