V01S257(%ProcessMode,RecordEXC fEXC)   //PBS - PAY - SID= <EXCRTY> Exception File Retry Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
 //  /*
 //  The Exception File Retry Maintenance screen (EXCRTY) enables users to
 //  change the remaining number of times that Retry processing may attempt
 //  to repost a failed transaction.  This screen displays when the user
 //  selects the Exception Retry File Edit function (EXCRTY), and completes
 //  the request screen to identify the failed transaction for which the
 //  Retries Remaining counter ([EXC]RTY) needs to be updated.
 //  For further information, refer to the "Batch Transaction Processing
 //  Reference Manual."
 //  */
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="EXCRTY",VPGM=$T(+0),VSNAME="Exception File Retry Maintenance"
 set VFSN("EXC")="zfEXC"
 set vPSL=1
 set KEYS(1)=fEXC.TJD
 set KEYS(2)=fEXC.BRCD
 set KEYS(3)=fEXC.UID
 set KEYS(4)=fEXC.TSEQ
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=8 do VPR(.fEXC),VDA1(.fEXC),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fEXC),VPR(.fEXC),VDA1(.fEXC)
 if %ProcessMode do VLOD(.fEXC) quit:$G(ER)  do VPR(.fEXC),VDA1(.fEXC)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEXC)
	quit


VNEW(RecordEXC fEXC) // Initialize arrays if %O=0
 
 do VDEF(.fEXC)
 do VLOD(.fEXC)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordEXC fEXC)
 if fEXC.CDT="" set fEXC.CDT=+$H
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordEXC fEXC) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=8
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEXC fEXC) // Display screen prompts
 set VO="15||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,24,34,1,0,0,0,0,0,0)_"01T Exception File Retry Maintenance "
 set VO(2)=$C(3,13,19,1,0,0,0,0,0,0)_"01T Retries Remaining:"
 set VO(3)=$C(5,11,5,0,0,0,0,0,0,0)_"01TDate:"
 set VO(4)=$C(5,39,13,0,0,0,0,0,0,0)_"01T      Branch:"
 set VO(5)=$C(6,7,9,0,0,0,0,0,0,0)_"01TSequence:"
 set VO(6)=$C(6,44,8,0,0,0,0,0,0,0)_"01TUser ID:"
 set VO(7)=$C(7,8,8,0,0,0,0,0,0,0)_"01TAccount:"
 set VO(8)=$C(7,33,19,0,0,0,0,0,0,0)_"01TTransaction Amount:"
 set VO(9)=$C(8,39,13,0,0,0,0,0,0,0)_"01T Tran Amount:"
 set VO(10)=$C(9,8,8,0,0,0,0,0,0,0)_"01T Source:"
 set VO(11)=$C(10,8,8,0,0,0,0,0,0,0)_"01TComment:"
 set VO(12)=$C(13,6,7,2,0,0,0,0,0,0)_"01TAccount"
 set VO(13)=$C(13,15,4,2,0,0,0,0,0,0)_"01TType"
 set VO(14)=$C(13,22,7,2,0,0,0,0,0,0)_"01T Reason"
 set VO(15)=$C(13,37,11,2,0,0,0,0,0,0)_"01TDescription"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordEXC fEXC)  // Display screen data
 new V
 s OVR=$G(OVR)
 //
 set VO="25|16|13|"
 set VO(16)=$C(3,33,3,2,0,0,0,0,0,0)_"00N"_fEXC.RTY
 set VO(17)=$C(5,17,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fEXC.TJD)
 set VO(18)=$C(5,53,6,2,0,0,0,0,0,0)_"01T"_$E(fEXC.BRCD,1,6)
 set VO(19)=$C(6,17,6,2,0,0,0,0,0,0)_"01N"_fEXC.TSEQ
 set VO(20)=$C(6,53,20,2,0,0,0,0,0,0)_"01T"_$E(fEXC.UID,1,20)
 set VO(21)=$C(7,17,12,2,0,0,0,0,0,0)_"01N"_fEXC.CID
 set V=$S(fEXC.TOT="":"",1:$J(fEXC.TOT,0,2)) set VO(22)=$C(7,53,18,2,0,0,0,0,0,0)_"01$"_$S(fEXC.TOT="":"",1:$J(fEXC.TOT,0,2))
 set VO(23)=$C(8,53,12,2,0,0,0,0,0,0)_"01T"_$E(fEXC.TAMT,1,12)
 set VO(24)=$C(9,17,50,2,0,0,0,0,0,0)_"01T"_$E(fEXC.TSO,1,50)
 set VO(25)=$C(10,17,40,2,0,0,0,0,0,0)_"01T"_$E(fEXC.TCMT,1,40)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+9,DY=15 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fEXC)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordEXC fEXC)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,OVR(I))=$G(OVR(I))
 
 set VO(VX+1)=$C(DY,1,12,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,15,6,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,23,12,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",3)
 set VO(VX+4)=$C(DY,37,40,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",4)
 set DY=DY+1,VX=VX+4
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordEXC fEXC)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=10,%MOD=4,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=14+%REPEAT,BLKSIZ=(70*%REPEAT)+177,PGM=$T(+0),DLIB="SYSDEV",DFID="EXC"
 set OLNTB=VPB*1000
 
 set VFSN("EXC")="zfEXC"
 //
 for I=15:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,32,3)_"01N12428||[EXC]RTY|||||0"
 set %TAB(2)=$C(4,16,10)_"21D12401|1|[EXC]TJD"
 set %TAB(3)=$C(4,52,6)_"21N12402|1|[EXC]BRCD|[UTBLBRCD]"
 set %TAB(4)=$C(5,16,6)_"21N12404|1|[EXC]TSEQ|||||||||9"
 set %TAB(5)=$C(5,52,20)_"21T12403|1|[EXC]UID"
 set %TAB(6)=$C(6,16,12)_"21N12401||[EXC]CID"
 set %TAB(7)=$C(6,52,18)_"20$|*TOT|[EXC]TOT|||||||2"
 set %TAB(8)=$C(7,52,12)_"21T12404||[EXC]TAMT|||||||||60"
 set %TAB(9)=$C(8,16,50)_"21T12407||[EXC]TSO|||||||||300"
 set %TAB(10)=$C(9,16,40)_"20T12408||[EXC]TCMT|||||||||510"
 set %TAB(11)=$C(14,0,12)_"20N12401|*OVR(1)|[*]@OVR"
 set %TAB(12)=$C(14,14,6)_"20N12402|*OVR(1)|[*]@OVR"
 set %TAB(13)=$C(14,22,12)_"20T12403|*OVR(1)|[*]@OVR"
 set %TAB(14)=$C(14,36,40)_"20T12404|*OVR(1)|[*]@OVR"
 do VTBL(.fEXC)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordEXC fEXC) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEXC fEXC
 do VPR(.fEXC)
 do VDA1(.fEXC)
 do ^DBSPNT()
 quit

VW(RecordEXC fEXC)
 do VDA1(.fEXC)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEXC fEXC)
 do VDA1(.fEXC)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEXC fEXC
 do VDA1(.fEXC)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordEXC fEXC
 if sn="EXC" do vSET1(.fEXC,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordEXC fEXC,di,X)
 do fEXC.setAuditFlag(1)
 set fEXC.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordEXC fEXC
 if fid="EXC" quit $$vREAD1(.fEXC,di)
 quit ""
vREAD1(RecordEXC fEXC,di)
 quit fEXC.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
