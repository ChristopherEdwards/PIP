R01S260	// SCA246 - Negative Loan Balance Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA246"
	set RN="Negative Loan Balance Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|255||[DAYENDNEG]EFD|[DAYENDNEG]EFD:DISTINCT:NOVAL||D EXT^DBSQRY||T|Report Date|||||"
	set %TAB("VIN3")="|255||[LN]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""L"""""":NOVAL||D EXT^DBSQRY||T|Loan Group|||||"
	set %TAB("VIN4")="|255||[LN]TYPE|[PRODDFTL]:NOVAL||D EXT^DBSQRY||T|Loan Type|||||"

	set %READ="IO/REQ,VIN2#0,VIN3#0,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN2,VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,GRP,RID,RN,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA246",RN="Negative Loan Balance Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA246","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[DAYENDNEG]CID#1#12,[LN]LNM#16#20,[LN]BAL#38#12,[LN]ACR#52#12,[LN]TLD#67#10"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[LN]CLS=""L""",SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DAYENDNEG]EFD "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]GRP "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DAYENDNEG,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC2|"_"Report Date"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Loan Group"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Loan Type"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Negative Loan Balance Report"
		set VBNRINFO("PGM")="R01S260"
		set VBNRINFO("RID")="SCA246"
		set VBNRINFO("TABLES")="DAYENDNEG,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DAYENDNEG]EFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DAYENDNEG]""NEG"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LN]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LN]TYPE"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DAYENDNEG]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DAYENDNEG.EFD,LN.GRP,LN.TYPE,DAYENDNEG.CID,LN.BAL,"
	set VSELECT=VSELECT_"LN.ACR,LN.LNM,LN.TLD"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DAYENDNEG,LN",VWHERE,"DAYENDNEG.EFD,LN.GRP,LN.TYPE,DAYENDNEG.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8
	set vc1=V.piece($C(9),1)			// DAYENDNEG.EFD
	set vc2=V.piece($C(9),2)			// LN.GRP
	set vc3=V.piece($C(9),3)			// LN.TYPE
	set vc4=V.piece($C(9),4)			// DAYENDNEG.CID
	set vc5=V.piece($C(9),5)			// LN.BAL
	set vc6=V.piece($C(9),6)			// LN.ACR
	set vc7=V.piece($C(9),7)			// LN.LNM
	set vc8=V.piece($C(9),8)			// LN.TLD
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc6,vc5
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+vc6			// @TOT([LN]ACR)
	set VT(5,2,1)=VT(5,2,1)+vc5			// @TOT([LN]BAL)
	quit

VSUM4	// Summary
	type public String %TIM,GRP,I,IOSL,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="TOTALS FOR GROUP: "
	set VL=VL_$J("",18-VL.length())_$E(vc2,1,4)
	do VOM
	set VL="" do VOM
	set V=VT(4)					// @CNT(,N,12)
	set VL=$J(V,12)
	set V=VT(4,2,1)					// @TOT([LN]BAL,)
	set VL=VL_$J("",37-VL.length())_$J(V,12,2)
	set V=VT(4,1,1)					// @TOT([LN]ACR,)
	set VL=VL_$J("",51-VL.length())_$J(V,12,2)
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,GRP,IOSL,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc4,12)
	set VL=VL_$J("",15-VL.length())_$E(vc7,1,20)
	set VL=VL_$J("",36-VL.length())_$J(vc5,13,2)
	set VL=VL_$J("",51-VL.length())_$J(vc6,12,2)
	set VL=VL_$J("",66-VL.length())_$J($$DAT^%ZM(vc8),10)
	do VOM
	quit

VSUM5	// Summary
	type public String %TIM,GRP,I,IOSL,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="TOTALS FOR TYPE: "
	set VL=VL_$J("",17-VL.length())_$J(vc3,4)
	do VOM
	set VL="" do VOM
	set V=VT(5)					// @CNT(,N,12)
	set VL=$J(V,12)
	set V=VT(5,2,1)					// @TOT([LN]BAL,)
	set VL=VL_$J("",37-VL.length())_$J(V,12,2)
	set V=VT(5,1,1)					// @TOT([LN]ACR,)
	set VL=VL_$J("",51-VL.length())_$J(V,12,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,GRP,RID,RN,TYPE,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",48-VL.length())_"Run Date:"
	set VL=VL_$J("",58-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",50-VL.length())_"System:"
	set VL=VL_$J("",58-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="DATE: "
	set VL=VL_$J("",6-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",19-VL.length())_"GROUP: "
	set VL=VL_$J("",26-VL.length())_$E(vc2,1,4)
	set VL=VL_$J("",35-VL.length())_"TYPE: "
	set VL=VL_$J("",42-VL.length())_$J(vc3,3)
	do VOM
	set VL="" do VOM
	set VL="LOAN ACCOUNT   BORROWER                   BALANCE       ACCRUAL   LAST TRANS"
	do VOM
	set VL="================================================================================"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,GRP,TYPE,vc2,vc3,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="REPORT TOTALS:"
	do VOM
	set VL="" do VOM
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4)+VT(5))	// @CNT(0,N,12)
	set VL=$J(V,12)
	set V=0						// @TOT([LN]BAL,0)
	for I=0:1:5 set V=V+VT(I,2,1)
	set VL=VL_$J("",39-VL.length())_$J(V,12,2)
	set V=0						// @TOT([LN]ACR,0)
	for I=0:1:5 set V=V+VT(I,1,1)
	set VL=VL_$J("",54-VL.length())_$J(V,12,2)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
