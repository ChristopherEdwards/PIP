V00S588(%ProcessMode,RecordUTBLEMPLOYER fUTBLEMP)   // -  - SID= <UTBLEMPLOYER> Employer Information
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:29 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLEMPLOYER",VPGM=$T(+0),VSNAME="Employer Information"
 set VFSN("UTBLEMPLOYER")="zfUTBLEMP"
 set vPSL=1
 set KEYS(1)=fUTBLEMP.EMPLNO
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLEMP),VDA1(.fUTBLEMP),^DBSPNT()

 if '%ProcessMode do VNEW(.fUTBLEMP),VPR(.fUTBLEMP),VDA1(.fUTBLEMP)
 if %ProcessMode do VLOD(.fUTBLEMP) quit:$G(ER)  do VPR(.fUTBLEMP),VDA1(.fUTBLEMP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLEMP)
	quit


VNEW(RecordUTBLEMPLOYER fUTBLEMP) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLEMP)
 do VLOD(.fUTBLEMP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLEMPLOYER fUTBLEMP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLEMPLOYER fUTBLEMP) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLEMPLOYER fUTBLEMP) // Display screen prompts
 set VO="13||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,30,14,0,0,0,0,0,0,0)_"01TEmployer Table"
 set VO(2)=$C(3,6,17,1,0,0,0,0,0,0)_"01T Employer Number:"
 set VO(3)=$C(4,8,15,1,0,0,0,0,0,0)_"01T Employer Name:"
 set VO(4)=$C(6,7,16,1,0,0,0,0,0,0)_"01T Address Line 1:"
 set VO(5)=$C(10,17,6,1,0,0,0,0,0,0)_"01T City:"
 set VO(6)=$C(10,47,9,1,0,0,0,0,0,0)_"01T Country:"
 set VO(7)=$C(11,8,15,0,0,0,0,0,0,0)_"01TState/Province:"
 set VO(8)=$C(11,40,4,0,0,0,0,0,0,0)_"01TZIP/"
 set VO(9)=$C(11,44,12,0,0,0,0,0,0,0)_"01TPostal Code:"
 set VO(10)=$C(12,6,17,0,0,0,0,0,0,0)_"01TTelephone Number:"
 set VO(11)=$C(12,41,15,0,0,0,0,0,0,0)_"01TEmployer Group:"
 set VO(12)=$C(14,10,13,0,0,0,0,0,0,0)_"01TContact Name:"
 set VO(13)=$C(15,5,18,0,0,0,0,0,0,0)_"01TFirst Acct Opened:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLEMPLOYER fUTBLEMP)  // Display screen data
 new V
 //
 set VO="26|14|13|0"
 set VO(14)=$C(3,24,12,2,0,0,0,0,0,0)_"01T"_$E(fUTBLEMP.EMPLNO,1,12)
 set VO(15)=$C(4,24,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.NAM,1,40)
 set VO(16)=$C(6,24,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.AD1,1,40)
 set VO(17)=$C(7,24,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.AD2,1,40)
 set VO(18)=$C(8,24,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.AD3,1,40)
 set VO(19)=$C(10,24,24,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.CITY,1,40)
 set VO(20)=$C(10,57,2,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.CNTRY,1,2)
 set VO(21)=$C(11,24,2,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.STATE,1,2)
 set VO(22)=$C(11,57,10,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.EZIP,1,10)
 set VO(23)=$C(12,24,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.TEL,1,12)
 set VO(24)=$C(12,57,20,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.EMPLGRP,1,20)
 set VO(25)=$C(14,24,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEMP.CON,1,40)
 set VO(26)=$C(15,24,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fUTBLEMP.FCIDD)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLEMPLOYER fUTBLEMP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=13,VPT=1,VPB=15,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLEMPLOYER"
 set OLNTB=15024
 
 set VFSN("UTBLEMPLOYER")="zfUTBLEMP"
 //
 // 
	
	
 set %TAB(1)=$C(2,23,12)_"21T12401|1|[UTBLEMPLOYER]EMPLNO"
 set %TAB(2)=$C(3,23,40)_"01T12401|1|[UTBLEMPLOYER]NAM"
 set %TAB(3)=$C(5,23,40)_"01T12402|1|[UTBLEMPLOYER]AD1"
 set %TAB(4)=$C(6,23,40)_"00T12403|1|[UTBLEMPLOYER]AD2"
 set %TAB(5)=$C(7,23,40)_"00T12404|1|[UTBLEMPLOYER]AD3"
 set %TAB(6)=$C(9,23,24)_"01T12405|1|[UTBLEMPLOYER]CITY|||||||||40"
 set %TAB(7)=$C(9,56,2)_"01T12406|1|[UTBLEMPLOYER]CNTRY|[STBLCNTRY]||do VP1^V00S588(.fUTBLEMP)"
 set %TAB(8)=$C(10,23,2)_"00T12407|1|[UTBLEMPLOYER]STATE|[STBLCNTRY1]||do VP2^V00S588(.fUTBLEMP)"
 set %TAB(9)=$C(10,56,10)_"00T12408|1|[UTBLEMPLOYER]EZIP|||do VP3^V00S588(.fUTBLEMP)"
 set %TAB(10)=$C(11,23,12)_"00T12409|1|[UTBLEMPLOYER]TEL"
 set %TAB(11)=$C(11,56,20)_"00T12411|1|[UTBLEMPLOYER]EMPLGRP|[UTBLEMPLGRP]"
 set %TAB(12)=$C(13,23,40)_"00T12410|1|[UTBLEMPLOYER]CON"
 set %TAB(13)=$C(14,23,10)_"00D12412|1|[UTBLEMPLOYER]FCIDD"
 do VTBL(.fUTBLEMP)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLEMPLOYER fUTBLEMP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLEMPLOYER fUTBLEMP) //
	set CNTRY=X

	quit

VP2(RecordUTBLEMPLOYER fUTBLEMP) //

	type RecordSTBLCNTRY stblcntry
	set stblcntry=Db.getRecord("STBLCNTRY","CNTRY=:CNTRY")

	if stblcntry.cntry'="US" quit
 
	// Required
	if X="" do Runtime.setErrMSG("STBLCNTRY",2385) quit:ER

	quit
VP3(RecordUTBLEMPLOYER fUTBLEMP) //
	set ST=fUTBLEMP.state

	do VPO1(.fUTBLEMP)

VPO1(RecordUTBLEMPLOYER fUTBLEMP)  // user library ZIP
 ; The code previously found in this routine has been moved to the new filer
 ; processer library.  This library contains code shared by the filers and by
 ; DQ screens. ; code removed 12/9/96 Spier
 ; Zip Code Verification
 ;
 D ZIP^PROCZIP($G(CNTRY),$G(ST),$G(X))
 Q
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLEMPLOYER fUTBLEMP
 do VPR(.fUTBLEMP)
 do VDA1(.fUTBLEMP)
 do ^DBSPNT()
 quit

VW(RecordUTBLEMPLOYER fUTBLEMP)
 do VDA1(.fUTBLEMP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLEMPLOYER fUTBLEMP)
 do VDA1(.fUTBLEMP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLEMPLOYER fUTBLEMP
 do VDA1(.fUTBLEMP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLEMPLOYER fUTBLEMP
 if sn="UTBLEMPLOYER" do vSET1(.fUTBLEMP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLEMPLOYER fUTBLEMP,di,X)
 do fUTBLEMP.setAuditFlag(1)
 set fUTBLEMP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLEMPLOYER fUTBLEMP
 if fid="UTBLEMPLOYER" quit $$vREAD1(.fUTBLEMP,di)
 quit ""
vREAD1(RecordUTBLEMPLOYER fUTBLEMP,di)
 quit fUTBLEMP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
