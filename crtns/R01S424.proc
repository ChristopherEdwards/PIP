R01S424	// SCA461 - On-Demand Auto Escrow Adjustment Extract
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:49 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN2
	type Number VIN3
	type String VIN4="ALL"

	set RID="SCA461"
	set RN="On-Demand Auto Escrow Adjustment Extract"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|10||[LNAEU3]EFD|[LNAEU1]EFD:DISTINCT||S EFD=X||D|Extract Date|||||"
	set %TAB("VIN3")="|8||[LNAEU3]EXTSEQ|[LNAEU1]EXTSEQ,DESC:DISTINCT:QU ""[LNAEU1]EFD=<<EFD>>""||||N|Sequence|||||"
	set %TAB("VIN4")="|255||[LNAEU3]CID|[LNAEU3]CID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Loan Account Number|||||"

	set %READ="IO/REQ,VIN2#1,VIN3#1,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN2
	type public Number VIN3
	type public String VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BBAL,CNT,CONAM,EBAL,EFD,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),LNM,NADJ,PADJ,RID,RN,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA461",RN="On-Demand Auto Escrow Adjustment Extract"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA461","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=1324")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNAEU3]TRTYPE#84#8,[LNAEU3]BAL#94#12,[LNAEU3]EADJAMT#107#12,[LNAEU3]ADJEBAL#120#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[LNAEU3]TRTYPE'=0",SEQ=SEQ+1
		set DQQRY(SEQ)="[LNAEU3]EFD = "_$$addqts^DBSRWUTL(VIN2),SEQ=SEQ+1
		set DQQRY(SEQ)="[LNAEU3]EXTSEQ = "_$$addqts^DBSRWUTL(VIN3),SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[LNAEU3]CID "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNAEU3,LNAEU2,LNAEU1,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC1|"_"Extract Date"_"|VIN2|"_$$DAT^%ZM(VIN2.get(),%MSKD)
		set VBNRINFO("PROMPTS",3)="WC1|"_"Sequence"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Loan Account Number"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="On-Demand Auto Escrow Adjustment Extract"
		set VBNRINFO("PGM")="R01S424"
		set VBNRINFO("RID")="SCA461"
		set VBNRINFO("TABLES")="LNAEU3,LNAEU2,LNAEU1,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNAEU3]EFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNAEU3]EXTSEQ"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LN]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LN]TYPE"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNAEU3]CID"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LNAEU3]TRTYPE"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:4 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNAEU3.EFD,LNAEU3.EXTSEQ,LN.GRP,LN.TYPE,LNAEU3.CID"
	set VSELECT=VSELECT_",LNAEU3.TRTYPE,LNAEU3.BAL,LNAEU3.ADJEBAL,LNAEU3.EA"
	set VSELECT=VSELECT_"DJPOS,LNAEU3.EADJNEG,LNAEU2.CID,LNAEU2.IGNORE,LNAE"
	set VSELECT=VSELECT_"U2.BALCMP,LNAEU2.LADJAMT,LNAEU2.ADJLBAL,LNAEU3.EAD"
	set VSELECT=VSELECT_"JAMT"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNAEU3,LNAEU2,LNAEU1,LN",VWHERE,"LNAEU3.EFD,LNAEU3.EXTSEQ,LN.GRP,LN.TYPE,LNAEU3.CID,LNAEU3.TRTYPE","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16
	set vc1=V.piece($C(9),1)			// LNAEU3.EFD
	set vc2=V.piece($C(9),2)			// LNAEU3.EXTSEQ
	set vc3=V.piece($C(9),3)			// LN.GRP
	set vc4=V.piece($C(9),4)			// LN.TYPE
	set vc5=V.piece($C(9),5)			// LNAEU3.CID
	set vc6=V.piece($C(9),6)			// LNAEU3.TRTYPE
	set vc7=V.piece($C(9),7)			// LNAEU3.BAL
	set vc8=V.piece($C(9),8)			// LNAEU3.ADJEBAL
	set vc9=V.piece($C(9),9)			// LNAEU3.EADJPOS
	set vc10=V.piece($C(9),10)			// LNAEU3.EADJNEG
	set vc11=V.piece($C(9),11)			// LNAEU2.CID
	set vc12=V.piece($C(9),12)			// LNAEU2.IGNORE
	set vc13=V.piece($C(9),13)			// LNAEU2.BALCMP
	set vc14=V.piece($C(9),14)			// LNAEU2.LADJAMT
	set vc15=V.piece($C(9),15)			// LNAEU2.ADJLBAL
	set vc16=V.piece($C(9),16)			// LNAEU3.EADJAMT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number BBAL,CNT,EBAL,NADJ,PADJ,TOTCNT
 type public Number GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),TYPBBAL(),TYPCNT(),TYPEBAL(),TYPNADJ(),TYPPADJ()

 // Initialize total arrays
 set (TOTCNT,BBAL,PADJ,NADJ,EBAL,CNT)=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG2 quit:VFMQ
	do VHDG4 quit:VFMQ
	do VHDG5 quit:VFMQ
	do VHDG6 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc8,vc7,vc10,vc9
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+vc8			// @TOT([LNAEU3]ADJEBAL)
	set VT(6,2,1)=VT(6,2,1)+vc7			// @TOT([LNAEU3]BAL)
	set VT(6,3,1)=VT(6,3,1)+vc10			// @TOT([LNAEU3]EADJNEG)
	set VT(6,4,1)=VT(6,4,1)+vc9			// @TOT([LNAEU3]EADJPOS)
	quit

VHDG2	// Group Header
	type public String %MSKD,%TIM,BBAL,CNT,CONAM,EBAL,EFD,ER,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),IOSL,LNM,NADJ,PADJ,RID,RN,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:vh(2)  set vh(2)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="       "_"File Dated:"
	set VL=VL_$J("",19-VL.length())_$J($$DAT^%ZM(vc1),10)
	do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,BBAL,CNT,CONAM,EBAL,EFD,ER,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),IOSL,LNM,NADJ,PADJ,RID,RN,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="            "_"Group:"
	set V=vc3,VO=V do VP1 quit:VFMQ!verror.get()  set V=$E(V,1,6)
	set VL=VL_$J("",19-VL.length())_V
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,BBAL,CNT,EBAL,EFD,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),I,IOSL,LNM,NADJ,PADJ,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL="     "_"Group: "
	set VL=VL_$J("",12-VL.length())_$E(vc3,1,5)
	set VL=VL_$J("",22-VL.length())_"Cnt:"
	set VL=VL_$J("",27-VL.length())_$J(GRPCNT(GRP),6)
	set VL=VL_$J("",37-VL.length())_$J($FN(GRPBBAL(GRP),",",2),14)
	set VL=VL_$J("",65-VL.length())_$J($FN(GRPEBAL(GRP),",",2),14)
	set VL=VL_$J("",80-VL.length())_"Cnt:"
	set V=VT(4)					// @CNT(,N,6)
	set VL=VL_$J("",84-VL.length())_$J(V,6)
	set V=VT(4,2,1)					// @TOT([LNAEU3]BAL,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,1,1)					// @TOT([LNAEU3]ADJEBAL,)
	set VL=VL_$J("",117-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                        "_"Increases:"
	set VL=VL_$J("",51-VL.length())_$J($FN(GRPPADJ(GRP),",",2),14)
	set VL=VL_$J("",93-VL.length())_"Increases:"
	set V=VT(4,4,1)					// @TOT([LNAEU3]EADJPOS,)
	set VL=VL_$J("",104-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                        "_"Decreases:"
	set VL=VL_$J("",51-VL.length())_$J($FN(GRPNADJ(GRP),",",2),14)
	set VL=VL_$J("",93-VL.length())_"Decreases:"
	set V=VT(4,3,1)					// @TOT([LNAEU3]EADJNEG,)
	set VL=VL_$J("",104-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VHDG5	// Group Header
	type public String %MSKD,%TIM,BBAL,CNT,CONAM,EBAL,EFD,ER,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),IOSL,LNM,NADJ,PADJ,RID,RN,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="          "_"Product:"
	set VL=VL_$J("",19-VL.length())_$E(vc4,1,8)
	do VOM
	set VL="" do VOM
	set VL="     "_"--------------------------------- Loan -----------------------------------    -------------------- Escrow --------------------"
	do VOM
	set VL="      "_"Account Borrower            Ignore    Balance    Adjustment      Adjusted    Type           Balance   Adjustment     Adjusted"
	do VOM
	set VL="==================================================================================================================================="
	do VOM
	set VL="" do VOM
	quit

VSUM5	// Summary
	type public String %TIM,BBAL,CNT,EBAL,EFD,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),I,IOSL,LNM,NADJ,PADJ,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ  set vh(5)=0 do VHDG5 quit:VFMQ

	set VL="      "_"Type: "
	set VL=VL_$J("",12-VL.length())_$E(vc4,1,5)
	set VL=VL_$J("",22-VL.length())_"Cnt:"
	set VL=VL_$J("",27-VL.length())_$J(TYPCNT(TYPE),6)
	set VL=VL_$J("",37-VL.length())_$J($FN(TYPBBAL(TYPE),",",2),14)
	set VL=VL_$J("",65-VL.length())_$J($FN(TYPEBAL(TYPE),",",2),14)
	set VL=VL_$J("",80-VL.length())_"Cnt:"
	set V=VT(5)					// @CNT(,N,6)
	set VL=VL_$J("",84-VL.length())_$J(V,6)
	set V=VT(5,2,1)					// @TOT([LNAEU3]BAL,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set V=VT(5,1,1)					// @TOT([LNAEU3]ADJEBAL,)
	set VL=VL_$J("",117-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                        "_"Increases:"
	set VL=VL_$J("",51-VL.length())_$J($FN(TYPPADJ(TYPE),",",2),14)
	set VL=VL_$J("",93-VL.length())_"Increases:"
	set V=VT(5,4,1)					// @TOT([LNAEU3]EADJPOS,)
	set VL=VL_$J("",104-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                        "_"Decreases:"
	set VL=VL_$J("",51-VL.length())_$J($FN(TYPNADJ(TYPE),",",2),14)
	set VL=VL_$J("",93-VL.length())_"Decreases:"
	set V=VT(5,3,1)					// @TOT([LNAEU3]EADJNEG,)
	set VL=VL_$J("",104-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VHDG6	// Group Header
	type public String %MSKD,%TIM,BBAL,CNT,CONAM,EBAL,EFD,ER,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),IOSL,LNM,NADJ,PADJ,RID,RN,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:vh(6)  set vh(6)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc11,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,12) set VL=V
	do VP3 quit:VFMQ!verror.get()  set V=$E(LNM,1,20)
	set VL=VL_$J("",14-VL.length())_V
	set VL=VL_$J("",36-VL.length())_$S(vc12:"Y",1:"N")
	set V=vc13,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),13)
	set VL=VL_$J("",38-VL.length())_V		// [SYSDEV,LNAEU2]BALCMP
	set V=vc14,VO=V do VP5 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),13)
	set VL=VL_$J("",52-VL.length())_V		// [SYSDEV,LNAEU2]LADJAMT
	set V=vc15,VO=V do VP6 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),13)
	set VL=VL_$J("",66-VL.length())_V		// [SYSDEV,LNAEU2]ADJLBAL
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,BBAL,CNT,EBAL,EFD,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),IOSL,LNM,NADJ,PADJ,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(6)=0 do VHDG6 quit:VFMQ

	set VL="                                                                                   "_$E(vc6,1,8)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc7,",",2),13)
	set VL=VL_$J("",106-VL.length())_$J($FN(vc16,",",2),12)
	set VL=VL_$J("",119-VL.length())_$J($FN(vc8,",",2),12)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BBAL,CNT,CONAM,EBAL,EFD,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),LNM,NADJ,PADJ,RID,RN,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,BBAL,CNT,EBAL,EFD,GRP,GRPBBAL(),GRPCNT(),GRPEBAL(),GRPNADJ(),GRPPADJ(),LNM,NADJ,PADJ,TOTCNT,TYPBBAL(),TYPCNT(),TYPE,TYPEBAL(),TYPNADJ(),TYPPADJ(),VPN,vc1,vc3,vc4,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="     "_"Grand Totals     Cnt:"
	set VL=VL_$J("",27-VL.length())_$J(TOTCNT,6)
	set VL=VL_$J("",37-VL.length())_$J($FN(BBAL,",",2),14)
	set VL=VL_$J("",65-VL.length())_$J($FN(EBAL,",",2),14)
	set VL=VL_$J("",80-VL.length())_"Cnt:"
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4)+VT(5)+VT(6))	// @CNT(0,N,6)
	set VL=VL_$J("",84-VL.length())_$J(V,6)
	set V=0						// @TOT([LNAEU3]BAL,0)
	for I=0:1:6 set V=V+VT(I,2,1)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNAEU3]ADJEBAL,0)
	for I=0:1:6 set V=V+VT(I,1,1)
	set VL=VL_$J("",117-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                        "_"Increases:"
	set VL=VL_$J("",51-VL.length())_$J($FN(PADJ,",",2),14)
	set VL=VL_$J("",93-VL.length())_"Increases:"
	set V=0						// @TOT([LNAEU3]EADJPOS,0)
	for I=0:1:6 set V=V+VT(I,4,1)
	set VL=VL_$J("",104-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                        "_"Decreases:"
	set VL=VL_$J("",51-VL.length())_$J($FN(NADJ,",",2),14)
	set VL=VL_$J("",93-VL.length())_"Decreases:"
	set V=0						// @TOT([LNAEU3]EADJNEG,0)
	for I=0:1:6 set V=V+VT(I,3,1)
	set VL=VL_$J("",104-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: GRP

	type public String vc11
 type public String GRP,TYPE

 type RecordLN ln=Db.getRecord("LN","CID=vc11")
 set GRP=ln.grp
 set TYPE=ln.type
	quit

VP2	// Column pre-processor - [SYSDEV,LNAEU2]CID

	type public String vc11
 // Define level not defined by DATA-QWIK

 type public Number CID,LNESCEXT()

 set LNESCEXT("CID")=vc11

	quit

VP3	// Column pre-processor - Variable: LNM

	type public String vc11
 type public String LNM

 type RecordLN ln=Db.getRecord("LN","CID=vc11")
 set LNM=ln.lnm
	quit

VP4	// Column pre-processor - [SYSDEV,LNAEU2]BALCMP

 /*
 Accumulate type, group, and branch totals.  This cannot be done by DATA-QWIK
 because DQ does not currently accumulate information at anything other than
 the lowest detail level
 */

 type public Number BBAL,GRP,GRPBBAL(),GRPCNT(),TYPE,TYPBBAL(),TYPCNT(),TOTCNT
 type public String V

 set TYPCNT(TYPE)=TYPCNT(TYPE).get()+1
 set TYPBBAL(TYPE)=TYPBBAL(TYPE).get()+V

 set GRPCNT(GRP)=GRPCNT(GRP).get()+1
 set GRPBBAL(GRP)=GRPBBAL(GRP).get()+V

 set TOTCNT=TOTCNT.get()+1
 set BBAL=BBAL.get()+V
	quit

VP5	// Column pre-processor - [SYSDEV,LNAEU2]LADJAMT

 /*
 Accumulate type, group, and branch totals.  This cannot be done by 
DATA-QWIK
 because DQ does not currently accumulate information at anything other 
than
 the lowest detail level.
 */

 // Positive adjustments

 type public Number A,GRPNADJ,GRPPADJ(),NADJ,PADJ,TYPNADJ,TYPPADJ()
 type public String GRP,TYPE,V

 if V>0 set A=V
 else  set A=0
 set TYPPADJ(TYPE)=TYPPADJ(TYPE).get()+A
 set GRPPADJ(GRP)=GRPPADJ(GRP).get()+A
 set PADJ=PADJ.get()+A
 
 // Negative adjustments
 if V<0 set A=V*(-1)
 else  set A=0

 set TYPNADJ(TYPE)=TYPNADJ(TYPE).get()+A
 set GRPNADJ(GRP)=GRPNADJ(GRP).get()+A
 set NADJ=NADJ.get()+A
	quit

VP6	// Column pre-processor - [SYSDEV,LNAEU2]ADJLBAL

 /*
 Accumulate type, group, and branch totals.  This cannot be done by DATA-QWIK
 because DQ does not currently accumulate information at anything other than
 the lowest detail level.
 */

 type public Number EBAL,GRPEBAL(),TYPEBAL()
 type public String GRP,TYPE,V

 set TYPEBAL(TYPE)=TYPEBAL(TYPE).get()+V

 set GRPEBAL(GRP)=GRPEBAL(GRP).get()+V

 set EBAL=EBAL.get()+V

	quit
