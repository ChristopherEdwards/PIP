V00S019(%ProcessMode,RecordCHKPURG fCHKPURG)   //PBS -  - SID= <CHKPURG> Prompt for Check Purge
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:04 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="CHKPURG",VPGM=$T(+0),VSNAME="Prompt for Check Purge"
 set VFSN("CHKPURG")="zfCHKPURG"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fCHKPURG),VDA1(.fCHKPURG),^DBSPNT()

 if '%ProcessMode do VNEW(.fCHKPURG),VPR(.fCHKPURG),VDA1(.fCHKPURG)
 if %ProcessMode do VLOD(.fCHKPURG) quit:$G(ER)  do VPR(.fCHKPURG),VDA1(.fCHKPURG)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCHKPURG)
	quit


VNEW(RecordCHKPURG fCHKPURG) // Initialize arrays if %O=0
 
 do VDEF(.fCHKPURG)
 do VLOD(.fCHKPURG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCHKPURG fCHKPURG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCHKPURG fCHKPURG) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCHKPURG fCHKPURG) // Display screen prompts
 set VO="5||13|"
 set VO(0)="|N"
 set VO(1)=$C(1,20,34,1,0,0,0,0,0,0)_"01T Check Register Purge to RMS file "
 set VO(2)=$C(4,4,14,1,0,0,0,0,0,0)_"01T Company Name:"
 set VO(3)=$C(4,49,13,1,0,0,0,0,0,0)_"01T Bank Number:"
 set VO(4)=$C(7,8,34,1,0,0,0,0,0,0)_"01T Remove Checks Prior to What Date:"
 set VO(5)=$C(8,11,31,1,0,0,0,0,0,0)_"01T Print Report of Purged Checks:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCHKPURG fCHKPURG)  // Display screen data
 new V
 //
 set VO="9|6|13|"
 set VO(6)=$C(4,19,12,2,0,0,0,0,0,0)_"00T"_$E(fCHKPURG.CO,1,12)
 set VO(7)=$C(4,63,2,2,0,0,0,0,0,0)_"00N"_fCHKPURG.BANK
 set VO(8)=$C(7,43,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fCHKPURG.PRIOR)
 set VO(9)=$C(8,43,1,2,0,0,0,0,0,0)_"00L"_$S(fCHKPURG.REPT:"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCHKPURG fCHKPURG)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=4,VPT=1,VPB=8,PGM=$T(+0),DLIB="SYSDEV",DFID="CHKPURG"
 set OLNTB=8043
 
 set VFSN("CHKPURG")="zfCHKPURG"
 //
 // 
	
	
 set %TAB(1)=$C(3,18,12)_"01T12401|1|[CHKPURG]CO|[UTBLCHKBANK]||do VP1^V00S019(.fCHKPURG)"
 set %TAB(2)=$C(3,62,2)_"01N12402|1|[CHKPURG]BANK|[UTBLCHKBANK1]"
 set %TAB(3)=$C(6,42,10)_"01D12403|1|[CHKPURG]PRIOR|||do VP2^V00S019(.fCHKPURG)"
 set %TAB(4)=$C(7,42,1)_"00L12404|1|[CHKPURG]REPT"
 do VTBL(.fCHKPURG)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCHKPURG fCHKPURG) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordCHKPURG fCHKPURG) //
	type public String CO,X

	set CO=X
	quit
VP2(RecordCHKPURG fCHKPURG) //
	type public String X

	// Invalid date ~p1
	set %JD=X.toDate("MM/DD/YY") if %JD<0 do Runtime.setErrMSG("CHKPURG",1308)
	quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCHKPURG fCHKPURG
 do VPR(.fCHKPURG)
 do VDA1(.fCHKPURG)
 do ^DBSPNT()
 quit

VW(RecordCHKPURG fCHKPURG)
 do VDA1(.fCHKPURG)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCHKPURG fCHKPURG)
 do VDA1(.fCHKPURG)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCHKPURG fCHKPURG
 do VDA1(.fCHKPURG)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCHKPURG fCHKPURG
 if sn="CHKPURG" do vSET1(.fCHKPURG,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCHKPURG fCHKPURG,di,X)
 do fCHKPURG.setAuditFlag(1)
 set fCHKPURG.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCHKPURG fCHKPURG
 if fid="CHKPURG" quit $$vREAD1(.fCHKPURG,di)
 quit ""
vREAD1(RecordCHKPURG fCHKPURG,di)
 quit fCHKPURG.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
