DDPMGR	//DDP Host/FEP Directory Maintenance
	/*
	       ORIG:  Pete Chenard 5/17/90

	  -------Revision History-----------------------------------------------

	   02/04/05 - KELLYP - CR 13664
	   	      Modified this procedure to call DRV^USID instead of ^USID.
	   	      This prevented a %GTM-E-ACTLSTEXP error that occurred when
	   	      running the DDPSU* functions which happened because 
	   	      DRV^USID was changed to require that objects be passed in
	   	      to it.  Also collapsed this procedure into a simpler format,
	   	      since DDPHOST records are always deleted and then re-
	   	      instantiated, and removed pre-2004 revision history.  
	
	   05/10/04 - KELLYP - 9935
		      Modified this procedure so it would work properly.  Was
		      previously causing a stack overflow when executed and
		      the logic in the PRELOD section was incorrect for setting
		      up DDPHOST.SQLBASE in the DDPDIR array (used by the FEP
		      post-processor on the DDPDIRSU screen).  Also modified
		      the entire procedure so it would conform to PSL standards.
	*/

	quit		// Dummy quit for compiler

public PROC	// Main processing section

	type Public Number ER

	type String HOSTDIR,VFMQ
	
	set %ProcessMode=1
	
	set HOSTDIR=$$DIR^DDPUTL()

	type RecordDDPHOST ddphosts()	// Array for storing DDPHOST objects

	do PRELOD(.ddphosts())

	/*
	 Call the screen driver to allow user to enter, maintain, 
	 or delete DDPHOST records.
	*/
	do DRV^USID(%ProcessMode,"DDPDIRSU",.ddphosts())

	if 'ER,VFMQ'="Q" do FILE(.ddphosts())
	
	do END
	
	quit


PRELOD(RecordDDPHOST ddphosts())	// Initialize object array with DDPHOST records

	type Public String HOSTDIR

	type Number I
	set I=1

	type DbSet ds=Db.selectDbSet("DDPHOST")
	if ds.isEmpty() do { quit
		set ddphosts(I)=Class.new("RecordDDPHOST")
		set ddphosts(I).hostdir=HOSTDIR
		}

	while ds.next() do {
		set ddphosts(I)=ds.getRecord()
		set I=I+1
		}

	quit


FILE(RecordDDPHOST ddphosts())		// File data

	// Delete all the DDPHOST records...
	do Db.delete("DDPHOST")
	
	// ...And add the ones back that are still in the object array

	type Number I
	
	set I=0
	for  set I=ddphosts(I).order() quit:I.isNull()  do {

		type RecordDDPHOST ddphost=ddphosts(I)

		if ddphost.fepdir.isNull() quit
		
		do ddphost.setMode(0)	// Force create mode
		do ddphost.save()
		}

	quit


END	// Exit

	type Public String ER,HOSTDIR,RM,VFMQ

	quit:ER.get()!(%ProcessMode=2)!(%ProcessMode=4)

	if VFMQ="Q" do {
		// Host directory not created
		if %ProcessMode=0 set RM=$$^MSG(1188,HOSTDIR) quit
		// Host directory not modified
		if %ProcessMode=1 set RM=$$^MSG(1190,HOSTDIR) quit
		// Host directory not deleted
		set RM=$$^MSG(1189,HOSTDIR.get())
		}
	else  do {
		// Host directory created
		if %ProcessMode=0 set RM=$$^MSG(1185,HOSTDIR) quit
		// Host directory modified
		if %ProcessMode=1 set RM=$$^MSG(1187,HOSTDIR) quit
		// Host directory deleted
		set RM=$$^MSG(1186,HOSTDIR)
		}
		
	set ER="W"
	
	quit
	
	

vSIG()	quit "59939^48578^Pat Kelly^2812"	// Signature - LTD^TIME^USER^SIZE
