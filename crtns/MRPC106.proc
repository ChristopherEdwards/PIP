MRPC106(return,version,CID,EFD)
  /*
 ORIG: 	BAILDONC - 06/26/2000
 DESC: 	Problem Loan Sub-Account Amounts
	This procedure returns a string of principal, interest, fees, and late
	charges on the linked current, non-accrual and charge-off sub-accounts
	as they would have been for for the effective date of the loan.

 ---- Comments --------------------------------------------------------

 ---- Revision History ------------------------------------------------
 	
 	03/20/06 - Hillanbrand - CR 20201
 	           Removed parameters ttx1 and ttx from call to 
 	           EXEC^LNUEFD in EFDAMT subsection since they 
 	           are not required or needed. This prevents the
 	           error Undefined local variable: ttx1.
 	
 	06/14/05 - SWARNALATHAP - CR13281
 		   Modified EFDAMT section to change cid to lns.cid 
 		   while passing it as parameter to SCARND function.
 		 	
	12/12/03 - CARROLLJ - CR7239
		   Correct call to ^LNUEFD to pass correct parameters.

	05/08/03 - CARROLLJ - 51349
		   Modified EFDAMT section to remove %a and a array's

  */

MAIN

	new ln,ln1,ln2,ln3,curramt,naamt,coamt,str

	// Version number of client message is not compatible with server
	if $G(version)'=1 quit $$ERRMSG^PBSUTL($$^MSG(2951))

	if $G(EFD)="" set EFD=%SystemDate	// default system date
	else  set EFD=$$DSJD^SCADAT(EFD)	// convert to Julian format

	// Effective date may not be in the future
	if EFD>TJD quit $$ERRMSG^PBSUTL($$^MSG(876))

	set ER=0
	set RM=""

	type RecordLN ln=Db.getRecord("LN","CID")
	
	new A

	// find the appropriate subaccount based upon a customer
        // view account number and status

	new rs,currcid

	type ResultSet rs=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=1")
	if rs.isEmpty() set ER=1 quit $$ERRMSG^PBSUTL($$^MSG(4870)) 
	while rs.next() do {
		set currcid=rs.getCol(1)
			}

	new rs2,nonacrcid

	type ResultSet rs2=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=2")
	if rs2.isEmpty() set ER=1 quit $$ERRMSG^PBSUTL($$^MSG(4871))
        while rs2.next() do {
                set nonacrcid=rs2.getCol(1)
                        }


	new rs3,chgcid

	type ResultSet rs3=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=3")
	if rs3.isEmpty() set ER=1 quit $$ERRMSG^PBSUTL($$^MSG(4872))
        while rs3.next() do {
                set chgcid=rs3.getCol(1)
                        }

	type RecordLN ln1=Db.getRecord("LN","currcid")
	type RecordLN ln2=Db.getRecord("LN","nonacrcid")
	type RecordLN ln3=Db.getRecord("LN","chgcid")

	if EFD<%SystemDate do { quit:ER $$ERRMSG^PBSUTL(RM)
		// Cannot effective-date prior to opening date
		if EFD<ln.odd set ER=1,RM=$$^MSG(450) quit
		set curramt=$$EFDAMT(.ln1) quit:ER
		set naamt=$$EFDAMT(.ln2) quit:ER
		set coamt=$$EFDAMT(.ln3) quit:ER
		}
	else  do {
		new acr1,acr2,acr3
		set acr1=$$^SCARND(ln1.acr,0,ln1.cid)
		set acr2=$$^SCARND(ln2.acr,0,ln2.cid)
		set acr3=$$^SCARND(ln3.acr,0,ln3.cid)
		set curramt=ln1.balcmp_$C(9)_acr1_$C(9)_ln1.mchg_$C(9)_ln1.lchg
		set naamt=ln2.balcmp_$C(9)_acr2_$C(9)_ln2.mchg_$C(9)_ln2.lchg
		set coamt=ln3.balcmp_$C(9)_acr3_$C(9)_ln3.mchg_$C(9)_ln3.lchg
		}
	set str=curramt_$C(9)_naamt_$C(9)_coamt
	set return=$$V2LV^MSG($G(str))
	quit ""


EFDAMT(RecordLN lns)


	// Cannot effective-date prior to opening date
	if EFD<lns.odd set ER=1,RM=$$^MSG(450) quit ""

	new BIL,ETC,ITC
	new feepln,bal,acr,mchg,str

	do EXEC^LNUEFD(.lns,,,EFD)

	set bal=lns.bal
	if lns.aruf set bal=bal-lns.udbal
	set acr=$$^SCARND(lns.acr,0,lns.cid)

	// misc fees on the sub-account
	Type DbSet rs=Db.selectDbSet("LNFEE","CID=:CID")
	if rs.isEmpty() set mchg=lns.mchg
	while rs.next() do {
		type RecordLNFEE lnfee=rs.getRecord("LNFEE")
		set mchg=$G(mchg)+lnfee.feerem
		}

	set mchg=+$G(mchg)
	set str=bal_$C(9)_acr_$C(9)_mchg_$C(9)_lns.lchg
	quit str

vSIG()	quit "60344^40517^Laura Hillanbrand^3634"	// Signature - LTD^TIME^USER^SIZE
