ALMUTL	//Private;Asset and Liability Management Utility Routine ; Procedure ALMUTL - Asset and Liability Management Utility 
 ;;Copyright(c)2005 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/09/05 10:29 - spatola
 ;
 ; **** This is a DATA-QWIK generated routine (level 25) ****
 ;
	/*
	   ORIG: KLINEB - 02/19/97
	   DESC: Asset and Liability Management Utility Routine

	   This routine is a utility routine used to handle various functions
	   in relation to Asset/Liabilty Management.

	  ---- Revision History ------------------------------------------------
	
           	
	   05/10/02 - GORDONT 49794
	              Converted to PSL
		      Removed Pre-2000 revision history.
 
	   03/14/00 - TANY - 37587
	              Modified SCADAT calls by passing an additional
	              parameter to the calls to improve performance.
	              The parameter is a "1" which will return a known
	              julian date.

	*/
	
	quit

PAMT(DEALNUM,EVENTCD,PRIN,TAMT)	//Returns the principal amount of cash flow transactions.

	/*

	ARGUMENTS:

	   	. EVENTCD 	Cash Flow Event Code  		/TYP=N/REQ

	   	. PRIN  - 	Cash Flow Principal  		/TYP=N/REQ
	              		Amount

	   	. TAMT  - 	Cash Flow Transaction  		/TYP=N/REQ
	      			Amount

	RETURNS:

	   	. PRIN  - 	Principal Amount of    		/TYP=N
	      			Cash Flow Transaction

	INPUT   . v7    - 	Record passed from compiled aggregate matrix


	*/
	
	new P,X
	if $G(EVENTCD)=10 do { quit P
		if $P(v7,"|",23)'="GP",($P(v7,"|",23))'="SC" set P=PRIN
		if $P(v7,"|",23)="GP" do PNUM
		if $P(v7,"|",23)="SC" do PNUM
		}
	
	if $G(PNUM)=$P(v7,"|",20) set P=0 quit P
	
	set X=$F(TAMT,"#")
	if X=0 set P=TAMT
	else  set P=$P(TAMT,"#",2)
	
	quit P


PNUM	// Define deal number for which we are determining principal balance

	/*
	Rate reset is not defined because we would drop
	out of the nostro acoount number and muliple variable
	rate deals and securites can be filed under one nostro account.
	*/
	
	if $G(PNUM)=$P(v7,"|",20) set P=0
	else  set P=PRIN
	
	set PNUM=$P(v7,"|",20)
	
	quit

IAMT(TAMT)	// Returns the interest amount of cash flow transactions.

	/*

	ARGUMENTS:

	   	. EVENTCD 	Cash Flow Event Code  	 /TYP=N/REQ

	   	. PAMT  - 	Principal Balance Amount /TYP=N/REQ

	        . TAMT  - 	Cash Flow Transaction  	 /TYP=N/REQ
	      			Amount

	RETURNS:

	         . INT  - 	Interest Amount Of  	 /TYP=N
	     			Cash Flow Transaction


	*/
	
	new I
	set I=$P(TAMT,"#",3)
	quit I


AIAMT(DEALNUM,EVENTCD,PAMT,PRIN,RATE)	// Annualized Interest Amount

	/*

	ARGUMENTS:

	   	. EVENTCD 	CF.EVENTCD  		/TYP=N/REQ

	   	. PAMT  	CF.PAMT   		/TYP=N/REQ

	   	. PRIN   	CF.PRIN   		/TYP=N/REQ

	   	. RATE   	CF.RATE   		/TYP=N/REQ

	RETURNS:

	   	. AIAMT  	Annualized interest	/TYP=N
	     			amount of cashflow
	     			transaction

	INPUT   . v7    - Record passed from compiled aggregate matrix


	*/
	
	if $G(EVENTCD)=10 do { quit AIAMT
		if $P(v7,"|",23)'="GP",($P(v7,"|",23))'="SC" set AIAMT=PRIN*RATE
		if $P(v7,"|",23)="GP" do AINUM
		if $P(v7,"|",23)="SC" do AINUM
		}

	if $G(AINUM)=$P(v7,"|",20) set AIAMT=0 quit AIAMT
	else  set AIAMT=PAMT*RATE quit AIAMT


AINUM	// Define deal number for which we are determining annualized interest

	/*
	Rate reset is not defined because we would drop
	out of the nostro acoount number and muliple variable
	rate deals and securites can be filed under one nostro account.
	*/
	
	if $G(AINUM)=$P(v7,"|",20) set AIAMT=0
	else  set AIAMT=PRIN*RATE
	set AINUM=$P(v7,"|",20)
	quit


PERIOD(JD,TRM)	// Scaler Function to Return Date

	/*

	ARGUMENTS:

	   	.JD 	Julian Date  		/TYP=D/REQ

	   	.TRM 	Term   			/TYP=T/REQ

	RETURNS:

	   	.NOM 	Number of Months 	/TYP=N
	    		Between Dates


	*/
	if TRM'="M" quit ""

	if '$D(period) do period
	
	set JD=JD-.01
	
	//get first period that this JD falls into
	set JD=$O(period(JD))
	
	quit period(JD)


period	//  Pre-fill in the start of each monthly period for up to 10 years.  
	/*
	The 'period' array will look like this:


	                       date|   |period number
	                       ----v---v----------
	                 period(56000)=1
	                 period(56030)=2
	                 period(56061)=3
	                 period(56092)=4


	*/
	
	new BOM,EOM,JD,cnt
	set JD=%SystemDate
	set JD=$$BOMJD^SCADAT(%SystemDate,1)

	set cnt=0
	for cnt=1:1:120 do {
		set JD=$$EOMJD^SCADAT(JD,1)
		set period(JD)=cnt
		set JD=JD+1
		}
	
	//default the very last period to a very high date
	set period(99999)=99999
	
	quit

DAMT(EVENTCD,PRIN,TAMT)	// Duration Amount

	/*

	ARGUMENTS:

	         . EVENTCD       CF.EVENTCD              /TYP=N/REQ

	         . PRIN          CF.PRIN                 /TYP=N/REQ

	         . TAMT          CF.TAMT                 /TYP=N/REQ

	RETURNS:

	         . DAMT         Duration Amount     	/TYP=N

	   INPUT . v7    - Record passed from compile aggregate matrix



	*/
	
	if $G(EVENTCD)=10 do { quit DAMT
		if $P(v7,"|",23)'="GP",($P(v7,"|",23))'="SC" set DAMT=TAMT
		if $P(v7,"|",23)="GP" do DANUM
		if $P(v7,"|",23)="SC" do DANUM
		}
	
	if $P(v7,"|",20)'="" do {
		if $G(DANUM)=$P(v7,"|",20) set DAMT=0 quit DAMT
		else  set DAMT=TAMT
		}
	
	else  set DAMT=TAMT
	
	quit DAMT


DANUM	// Define deal number for which we are determining duration amount

	/*
	Rate reset is not defined because we would drop
	out of the nostro acoount number and muliple variable
	rate deals and securites can be filed under one nostro account.
	*/
	
	if $G(DANUM)=$P(v7,"|",20) set DAMT=0
	else  set DAMT=TAMT
	set DANUM=$P(v7,"|",20)
	quit


RTRST(RTN)	// Rate Reset Indicator


	new RTN
	
	// Securities and Short Term Securities
	if v2="ITST"!(v2="ITSC")!(v2="ITSG") do {
		set RTN=0
		}
	
	else  do {
		if $P(v7,"|",4)=10 set RTN=1
		else  set RTN=0
		}
	
	quit RTN

vSIG()	quit "59886^43489^Sanchez SCM Administrator^5192"	// Signature - LTD^TIME^USER^SIZE
