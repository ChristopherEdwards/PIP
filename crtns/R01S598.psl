R01S598	// SCA673 - Sub-Account Payoff Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:02 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA673"
	set RN="Sub-Account Payoff Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CHGOFF,CONAM,CURR,DTE,GRP,NONACR,RID,RN,TYP,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA673",RN="Sub-Account Payoff Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA673","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="DTJCL.CLS='L' AND LN.PAOI=1 AND LN.PCIDSTAT=0"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Sub-Account Payoff Report"
		set VBNRINFO("PGM")="R01S598"
		set VBNRINFO("RID")="SCA673"
		set VBNRINFO("TABLES")="DTJCL,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DTJCL]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DTJCL]CLS"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DTJCL]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DTJCL]TYP"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DTJCL]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DTJCL.TJD,DTJCL.CLS,DTJCL.GRP,DTJCL.TYP,DTJCL.CID,LN.BOO,LN.TITLE1,LN.LPTSD,LN.TITLE2,LN.CRNTBAL,LN.CRNTINT,LN.CRNTLC,LN.CRNTFEE,LN.TITLE3,LN.NAPRBAL,LN.NAINT,LN.NALC,LN.NAFEE,LN.TITLE4,LN.COBAL,LN.COINT,LN.COLC,LN.COFEE","DTJCL,LN","DTJCL.CLS='L' AND LN.PAOI=1 AND LN.PCIDSTAT=0","DTJCL.TJD,DTJCL.CLS,DTJCL.GRP,DTJCL.TYP,DTJCL.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// DTJCL.TJD
	set vc2=V.piece($C(9),2)			// DTJCL.CLS
	set vc3=V.piece($C(9),3)			// DTJCL.GRP
	set vc4=V.piece($C(9),4)			// DTJCL.TYP
	set vc5=V.piece($C(9),5)			// DTJCL.CID
	set vc6=V.piece($C(9),6)			// LN.BOO
	set vc7=V.piece($C(9),7)			// LN.TITLE1
	set vc8=V.piece($C(9),8)			// LN.LPTSD
	set vc9=V.piece($C(9),9)			// LN.TITLE2
	set vc10=V.piece($C(9),10)			// LN.CRNTBAL
	set vc11=V.piece($C(9),11)			// LN.CRNTINT
	set vc12=V.piece($C(9),12)			// LN.CRNTLC
	set vc13=V.piece($C(9),13)			// LN.CRNTFEE
	set vc14=V.piece($C(9),14)			// LN.TITLE3
	set vc15=V.piece($C(9),15)			// LN.NAPRBAL
	set vc16=V.piece($C(9),16)			// LN.NAINT
	set vc17=V.piece($C(9),17)			// LN.NALC
	set vc18=V.piece($C(9),18)			// LN.NAFEE
	set vc19=V.piece($C(9),19)			// LN.TITLE4
	set vc20=V.piece($C(9),20)			// LN.COBAL
	set vc21=V.piece($C(9),21)			// LN.COINT
	set vc22=V.piece($C(9),22)			// LN.COLC
	set vc23=V.piece($C(9),23)			// LN.COFEE
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	// Converted to PSL by CNV70RW
	type Public String DTE,GRP,TYP

	set (GRP,TYP)="" set DTE=%SystemDate
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VDTL5	// Detail
	type public String %TIM,CHGOFF,CURR,DTE,GRP,IOSL,NONACR,TYP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc5,15)
	set VL=VL_$J("",17-VL.length())_$E(vc7,1,34)
	set VL=VL_$J("",52-VL.length())_$J($$DAT^%ZM(vc8),10)
	do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$J(CURR,15) set VL=V
	set VL=VL_$J("",17-VL.length())_$E(vc9,1,34)
	set VL=VL_$J("",52-VL.length())_$S(vc10="":"",1:$J(vc10,0,2))
	set VL=VL_$J("",71-VL.length())_$S(vc11="":"",1:$J(vc11,0,2))
	set VL=VL_$J("",90-VL.length())_$S(vc12="":"",1:$J(vc12,0,2))
	set VL=VL_$J("",109-VL.length())_$S(vc13="":"",1:$J(vc13,0,2))
	do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$J(NONACR,15) set VL=V
	set VL=VL_$J("",17-VL.length())_$E(vc14,1,34)
	set VL=VL_$J("",52-VL.length())_$S(vc15="":"",1:$J(vc15,0,2))
	set VL=VL_$J("",71-VL.length())_$S(vc16="":"",1:$J(vc16,0,2))
	set VL=VL_$J("",90-VL.length())_$S(vc17="":"",1:$J(vc17,0,2))
	set VL=VL_$J("",109-VL.length())_$S(vc18="":"",1:$J(vc18,0,2))
	do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$J(CHGOFF,15) set VL=V
	set VL=VL_$J("",17-VL.length())_$E(vc19,1,34)
	set VL=VL_$J("",52-VL.length())_$S(vc20="":"",1:$J(vc20,0,2))
	set VL=VL_$J("",71-VL.length())_$S(vc21="":"",1:$J(vc21,0,2))
	set VL=VL_$J("",90-VL.length())_$S(vc22="":"",1:$J(vc22,0,2))
	set VL=VL_$J("",109-VL.length())_$S(vc23="":"",1:$J(vc23,0,2))
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CHGOFF,CONAM,CURR,DTE,GRP,NONACR,RID,RN,TYP,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+13,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="Branch"
	set VL=VL_$J("",7-VL.length())_$J(vc6,6)
	do VOM
	set VL="" do VOM
	set VL="Main Acct #      Title                              Payoff Date"
	do VOM
	set VL="Current Sub #                                       Existing Prin Bal  Existing Int Bal   Existing Late Chg  Existing Fee Bal"
	do VOM
	set VL="Non-Accrual Sub #"
	do VOM
	set VL="Charge-Off Sub #"
	do VOM
	set VL="" do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: CURR

	type public String vc5
	
	type Public Number CID
	type Public String CURR
	
	set CID=vc5

	do { 
	    new rs 
	    type ResultSet rs=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=1") 
	    set CURR="" if 'rs.next()  quit
	    set CURR=rs.getRow()
	   } 
	
	
	quit

VP2	// Column pre-processor - Variable: NONACR

	type Public String NONACR
	
	do { 
	    new rs 
	    type ResultSet rs=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=2") 
	    set NONACR="" if 'rs.next()  quit
	    set NONACR=rs.getRow()
	   } 
	
	
	quit

VP3	// Column pre-processor - Variable: CHGOFF

	type Public String CHGOFF

	do { 
	    new rs 
	    type ResultSet rs=Db.select("CID","LN","CVCID=:CID AND STAT=0 AND PCIDSTAT=3") 
	    set CHGOFF="" if 'rs.next()  quit
	    set CHGOFF=rs.getRow()
	   } 
	
	
	quit
