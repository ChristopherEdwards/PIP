V01S722(Number %ProcessMode,RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG())   // -  - SID= <TRNGRP1> Build Fee Transaction Group Table 
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:34 - joynerd
 // This screen is used to create, maintain, or display the transaction code groups
 // used within service fee plans to define the transactions for which fees will be
 // charged or to track transaction code usage by account.  The screen supports the
 // entry of a single transaction code or ranges of transaction codes on a single
 // line.  For example, the entry ATM* would include any transaction beginning with
 // ATM; the entry A-BD would include any transaction beginning with A through BD.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fUTBLTRN.exists() set fUTBLTRN = Class.new("RecordUTBLTRNGRPT")
  if 'TG(1).exists() set TG(1) = Class.new("RecordUTBLTRNGRP")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="TRNGRP1",VPGM=$T(+0),VSNAME="Build Fee Transaction Group Table "
 set VFSN("UTBLTRNGRP")="zTG",VFSN("UTBLTRNGRPT")="zfUTBLTRN"
 set vPSL=1
 set KEYS(1)=fUTBLTRN.TRNGRP
 set KEYS(2)=fUTBLTRN.TRNGRPDT
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=15 do VPR(.fUTBLTRN,.TG()),VDA1(.fUTBLTRN,.TG()),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fUTBLTRN,.TG()) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLTRN,.TG()),VPR(.fUTBLTRN,.TG()),VDA1(.fUTBLTRN,.TG())
 if %ProcessMode do VLOD(.fUTBLTRN,.TG()) quit:$G(ER)  do VPR(.fUTBLTRN,.TG()),VDA1(.fUTBLTRN,.TG())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLTRN,.TG())
 type Number ptr
 set ptr=""
 for  set ptr = TG(ptr).order() quit:ptr.isNull()  do {
     if TG(ptr).TRNCD="" kill TG(ptr)
     }
	quit


VNEW(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG()) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLTRN,.TG())
 do VLOD(.fUTBLTRN,.TG())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=15
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG()) // Display screen prompts
 set VO="5||13|"
 set VO(0)="|0"
 set VO(1)=$C(3,7,17,0,0,0,0,0,0,0)_"01T Tran Code Group:"
 set VO(2)=$C(4,11,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(4,51,15,0,0,0,0,0,0,0)_"01TEffective Date:"
 set VO(4)=$C(6,11,9,2,0,0,0,0,0,0)_"01TTran Code"
 set VO(5)=$C(6,45,10,2,0,0,0,0,0,0)_"01TFee Amount"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG())  // Display screen data
 new V
 //
 set VO="9|6|13|"
 set VO(6)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(7)=$C(3,25,8,2,0,0,0,0,0,0)_"01T"_$E(fUTBLTRN.TRNGRP,1,8)
 set VO(8)=$C(4,25,25,2,0,0,0,0,0,0)_"00T"_$E(fUTBLTRN.DESC,1,25)
 set VO(9)=$C(4,67,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fUTBLTRN.TRNGRPDT)
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+3,DY=8 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLTRN,.TG())
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG())  // Display data %REPEAT times
 //instantiate new object if necessary
  #ACCEPT;DATE=08/08/06; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEPRECATED
  if 'TG(I).getPointer() do {
     set TG(I)=Class.new("RecordUTBLTRNGRP","$G(KEYS(1)),$G(KEYS(2))")
     }
 set VO(VX+1)=$C(DY,11,12,2,0,0,0,0,0,0)_"00T"_$E(TG(I).TRNCD,1,12)
 set V=$S(TG(I).FEEAMT="":"",1:$J(TG(I).FEEAMT,0,2)) set VO(VX+2)=$C(DY,43,12,2,0,0,0,0,0,0)_"00$"_$S(TG(I).FEEAMT="":"",1:$J(TG(I).FEEAMT,0,2))
 set DY=DY+1,VX=VX+2
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=2,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=7+%REPEAT,BLKSIZ=(24*%REPEAT)+43,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLTRNGRPT,UTBLTRNGRP"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLTRNGRP")="zTG",VFSN("UTBLTRNGRPT")="zfUTBLTRN"
 //
 for I=6:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,24,8)_"21T12401|1|[UTBLTRNGRPT]TRNGRP|[UTBLTRNGRPT]TRNGRP:DISTINCT"
 set %TAB(2)=$C(3,24,25)_"01T12401||[UTBLTRNGRPT]DESC"
 set %TAB(3)=$C(3,66,10)_"21D12402|1|[UTBLTRNGRPT]TRNGRPDT|[UTBLTRNGRPT]:QU ""[UTBLTRNGRPT]TRNGRP=<<TRNGRP>>"""
 set %TAB(4)=$C(7,10,12)_"00T12403|1|[UTBLTRNGRP]TRNCD|[TRN]||do VP1^V01S722(.fUTBLTRN,.TG)"
 set %TAB(5)=$C(7,42,12)_"00$12401|1|[UTBLTRNGRP]FEEAMT|||||||2"
 do VTBL(.fUTBLTRN,.TG())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG()) //
	type public String X

	quit:X.isNull()

	if X?1UN.UN do { quit
		set TG(I(1)).trngrpdt = fUTBLTRN.trngrpdt
	}

	quit:X?1UN.UN

	if (X?1UN.UN1"*") ! (X?1UN.UN1"-"1UN.UN) do { quit
		do CHANGE^DBSMACRO("TBL", "")
		set TG(I(1)).trngrpdt = fUTBLTRN.trngrpdt
	}

	set ER = 1
	// Press the Select key, or use TRN* or TRN-TRNZ syntax
	set RM = $$^MSG(2219)

	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLTRNGRPT fUTBLTRN
 type Public RecordUTBLTRNGRP TG()
 do VPR(.fUTBLTRN,.TG())
 do VDA1(.fUTBLTRN,.TG())
 do ^DBSPNT()
 quit

VW(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG())
 do VDA1(.fUTBLTRN,.TG())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG())
 do VDA1(.fUTBLTRN,.TG())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLTRNGRPT fUTBLTRN
 type Public RecordUTBLTRNGRP TG()
 do VDA1(.fUTBLTRN,.TG())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLTRNGRPT fUTBLTRN
 if sn="UTBLTRNGRPT" do vSET1(.fUTBLTRN,di,X)
 type Public RecordUTBLTRNGRP TG()
 if sn="UTBLTRNGRP" do vSET2(TG(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordUTBLTRNGRPT fUTBLTRN,di,X)
 do fUTBLTRN.setAuditFlag(1)
 set fUTBLTRN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordUTBLTRNGRP TG,di,X)
 do TG.setAuditFlag(1)
 set TG.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordUTBLTRNGRPT fUTBLTRN
 if fid="UTBLTRNGRPT" quit $$vREAD1(.fUTBLTRN,di)
 type Public RecordUTBLTRNGRP TG()
 if fid="UTBLTRNGRP" quit $$vREAD2(TG(I(1)),di)
 quit ""
vREAD1(RecordUTBLTRNGRPT fUTBLTRN,di)
 quit fUTBLTRN.@di
vREAD2(RecordUTBLTRNGRP TG,di)
 quit TG.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 //
VSCRPRE(RecordUTBLTRNGRPT fUTBLTRN,RecordUTBLTRNGRP TG())  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
	type public Boolean ER
	type public String RM
	if (%ProcessMode < 2), (fUTBLTRN.trngrpdt < %SystemDate) do {
		set ER = 1
		//  Effective date must be the same as or after the system date
		set RM = $$^MSG(879)
	}
	quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
