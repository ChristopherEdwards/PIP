BCHTYE //Batch BCHTYE - Beginning of Tax Year Reset
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:47 - shetyes
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHTYE Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHTYE")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHTYE") quit
 do JOBMGR^BCHUTL(%FN,"BCHTYE",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHTYE")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(CID) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHTYE","*","",CID.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHTYE",CID.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHTYE",CID.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,CID)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHTYE","*","",CID.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHTYE",CID.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,CID) //
	type public Date HJD
	
	type RecordACN acn = Db.getRecord("ACN", "CID = :CID")
	
	set acn.ipty = +acn.itytd             
	set acn.penpty = +acn.pentytd        
	set acn.pentytd = 0
	
	do acn.bypassSave()

	if (acn.cls = "D") do DEP(.acn)
	
	if (acn.cls = "L") do LN(.acn)

 	// File History
 
 	type RecordHIST0 hist0 = Db.getRecord("HIST0", "CID = :CID, JD = :HJD", 1)

	set hist0.bal = +acn.bal
	set hist0.seqzero = Db.currVal("HIST","CID") 

	do hist0.bypassSave()
	
	quit
	

DEP(RecordDEP dep)	// Deposit specific

	set dep.itytd = 0	
	set dep.negipty = +dep.negitytd    
	set dep.negitytd = 0
	set dep.bwpty = +dep.bwtytd
	set dep.bwtytd = 0
	
	// Reset the non-resident buckets

	set dep.nrnegipty = +dep.nrnegitytd	// NR negative interest 
	set dep.nrnegitytd = 0
	set dep.nrposipty = +dep.nrpositytd	// NR positive interest
	set dep.nrpositytd = 0
	set dep.nrppty = +dep.nrptytd		// NR penalty
	set dep.nrptytd = 0
	set dep.nrwapty = +dep.nrwatytd		// NR interest w/h against	
	set dep.nrwatytd = 0
	set dep.nrwhpty = +dep.nrwhtytd		// NR interest withheld
	set dep.nrwhtytd = 0		

	do dep.bypassSave()

	// Reset the Escrow Funds Remitted 
 
 	type DbSet dstrtype = Db.selectDbSet("TRTYPE", "CID=:dep.cid")
               
	while dstrtype.next() do {
				
		type RecordTRTYPE trtype = dstrtype.getRecord("TRTYPE")
			
		set trtype.rempy = +trtype.remytd
		set trtype.remytd = 0
		
		do trtype.bypassSave()
		}
	
	quit
	

LN(RecordLN ln)		// Loan specific

	set ln.intdefpty = +ln.intdeftytd	// Deferred interest
	set ln.itytd = +ln.intdeftytd
	set ln.intdeftytd = 0

	set ln.dafpty = +ln.daftytd		// Deductible asessed fees
	set ln.daftytd = 0
	set ln.ndafpty = +ln.ndaftytd		// Nondeductible assessed fees
	set ln.ndaftytd = 0
	set ln.prefint = +ln.refint        	// Refunded interest
	set ln.refint = 0	
	set ln.copty = +ln.cotytd		// Charge-off
	set ln.cotytd = 0
	set ln.cipy98e = 0			// Corrected interest paid prior year
	set ln.dicytd = 0			// Deferred interest capitalize   
	set ln.aytd = 0				// Net deferred fees amortized
	set ln.ispytd = 0			// Interest on sold participations
	
	do ln.bypassSave()

	type DbSet dslnfee = Db.selectDbSet("LNFEE", "CID = :ln.cid")
	
	while dslnfee.next() do {
		
		type RecordLNFEE lnfee = dslnfee.getRecord("LNFEE")
		
		set lnfee.feepty = lnfee.feetytd	// Fee paid
		set lnfee.feetytd = 0
		set lnfee.aspty = lnfee.astytd		// Fee assessed
		set lnfee.astytd = 0
		
		do lnfee.bypassSave()                       
		}
	quit
	
	
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,CID
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set CID=vRECORD.piece($C(9),1)
 do vPROC(CID)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,CID
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+13>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
	type Date TYE = CUVAR.TAXYE + 1
	
	if (TYE '= %SystemDate) set %BatchExit = 1 quit

 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("CID","ACN","")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	type public Date HJD = %SystemDate - 1

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
	// Reset Tax Year-end                  
	
	type Date TYE
	type String DP, MP, YP
	
	type RecordCUVAR cuvar = Db.getRecord("CUVAR")
 
        set TYE = cuvar.taxye			// Tax year end 
	set YP = $$YEAR^SCADAT(TYE, 1) + 1	// Year portion of TAXYE
        set DP = $$DAY^SCADAT(TYE, 1)		// Day portion of TAXYE
        set MP = $$MON^SCADAT(TYE, 1)		// Month portion of TAXYE
        set TYE = $$DSJD^SCADAT(MP_"/"_DP_"/"_YP)
        set cuvar.taxye = TYE
        
        do cuvar.bypassSave()
        
	quit
	

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
