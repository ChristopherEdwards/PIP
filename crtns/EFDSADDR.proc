EFDSADDR	  /*
ORIG: ANTONOVS - 05/16/2001
DESC: Test

---- Revision History ------------------------------------------------

	09/08/05 - NATRAJAH - CR16674
		   Replaced the method Db.getOneRow and Db.insert with
		   Db.getRecord
		   
	07/25/01 - ANTONOVS - 46279:006
		   A new flag INS was added to the ADDR section. This flag is
		   used to quit from the main loop after a new record inserted 
		   to SADDREFD table

	07/05/01 - ANTONOVS - 46279:003
		   New parameters BUFF and SEQ added to section ADDR.
	
	*/
	 
	quit 

ADDR(DATA,FID,XKEY,EFD,BUFF,SEQ)    //Mailing address columns check for a future UPD
	
	/*
	 This section is used to check if the record in EFD contains mailing
	address COLUNMs from CIF or ACNADDR table for a future update. If it 
	does, the section gets a customer seasonal address and checks if the 
	dates of the seasonal address conflict with EFD date and returns an 
	error message if it is true. 
	If the seasonal address is not defined or deleted but EFD record 
	contains mailing address columns - section inserts new entry into 
	SADDREFD table

	   ARGUMENTS:
	 . DATA		EFD transaction (SQL format) /TYP=M/REQ
	 . FID		Table name		     /TYP=T/REQ	
	 . XKEY		Table access key	     /TYP=N/REQ 	
	 . EFD		Effective date		     /TYP=D/REQ
	 . BUFF		Group number		     /TYP=N/REQ
	 . SEQ		Transaction sequence	     /TYP=N/REQ 	
	
	*/	

	type Public Boolean ER
	new X,ZUX,def,addr,ITEM
 	new SADSD,SADED,XSEQ,XBUFF

	new INS		// 46279:6 - needed to quit from main loop after first 
	set INS=0	// insert

	set X=$$SQLTOSHR^SQLFUNCS(DATA,FID,.ZUX)
	set ITEM=""
	set XSEQ=SEQ
	set XBUFF=BUFF

	for  set ITEM=$O(ZUX(FID,ITEM)) quit:((ITEM="")!(ER))  do {
 
	set SADSD=""
	set SADED=""

	if INS quit	// 46279:6

	if FID="CIF" do { quit:ER
		if (",MAD1,MAD2,MAD3,MAD4,MCITY,MSTATE,MCNTRY,MZIP,"[(","_ITEM_",")) do { quit:ER
			set def=Db.isDefined("SADDRCIF","XKEY")
			if def do { quit:ER
				type RecordSADDRCIF saddrcif=Db.getRecord("SADDRCIF","ACN=:XKEY")
				set SADSD=saddrcif.sadsd				
				set SADED=saddrcif.saded
				//Seasonal address dates conflict with temporary address dates
				if ((EFD'<SADSD)&(EFD'>SADED)) set ER=1 do Runtime.setErrMSG("SADDRCIF",4905) quit:ER
			}
			if ('def)!((SADSD="")&(SADED="")) do { quit:ER
				type RecordSADDREFD saddrefd=Db.getRecord("SADDREFD",":FID,:XKEY,:EFD,:XBUFF,:XSEQ",1)
				set saddrefd.akey=XKEY
				set saddrefd.buff=XBUFF
				set saddrefd.efdate=EFD
				set saddrefd.fid=FID
				set saddrefd.seq=XSEQ
				do saddrefd.save()
				set INS=1
			}
		}
	}
	else  if FID="ACNADDR" do { quit:ER
		if (",AD1,AD2,AD3,AD4,CITY,STATE,CNTRY,MZIP,"[(","_ITEM_",")) do { quit:ER
			set def=Db.isDefined("SADDRACN","XKEY")
			if def do { quit:ER
				type RecordSADDRACN saddracn=Db.getRecord("SADDRACN","CID=:XKEY")
				set SADSD=saddracn.sadsd
				set SADED=saddracn.saded
				//Seasonal address dates conflict with temporary address dates
				if ((EFD'<SADSD)&(EFD'>SADED)) set ER=1 do Runtime.setErrMSG("SADDRCIF",4905) quit:ER
			}
			if ('def)!((SADSD="")&(SADED="")) do { quit:ER
				type RecordSADDREFD saddrefd=Db.getRecord("SADDREFD",":FID,:XKEY,:EFD,:XBUFF,:XSEQ",1)
				set saddrefd.akey=XKEY
				set saddrefd.buff=XBUFF
				set saddrefd.efdate=EFD
				set saddrefd.fid=FID
				set saddrefd.seq=XSEQ
				do saddrefd.save()
				set INS=1
			}
	       	}
	}
 
	}
 
	quit 
 

vSIG()	quit "60152^20711^Hari Natrajan^3229"	// Signature - LTD^TIME^USER^SIZE
