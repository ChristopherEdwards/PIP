R01S467	// SCA517 - Pending Provision Amounts
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:50 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String PROVNPDT
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA517"
	set RN="Pending Provision Amounts"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[ACN]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN2")="|255||[ACN]CLS|[STBLCLS]:NOVAL||D EXT^DBSQRY||T|Product Class|||||"
	set %TAB("VIN3")="|255||[DAYENDLNRP]ACLS|[UTBLACC]:NOVAL||D EXT^DBSQRY||T|Asset Classification|||||"
	set %TAB("VIN4")="|255||[ACN]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN5")="|255||[DAYENDLNRP]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String PROVNPDT
	type public String VIN1,VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BAL,BASE,BOO,CONAM,DAYSDELQ,LPDAT,PROVPCT,RID,RN,TOTCOL,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA517",RN="Pending Provision Amounts"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA517","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[ACN]BOO "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[ACN]CLS "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DAYENDLNRP]ACLS "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[ACN]TYPE "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DAYENDLNRP]CID "_VIN5,SEQ=SEQ+1
		set DQQRY(SEQ)="[DAYENDLNRP]PROVNPDT=<<PROVNPDT>>",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DAYENDLNRP,LN,ACN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Branch of Ownership"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Class"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Asset Classification"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Product Type"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Account Number"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Pending Provision Amounts"
		set VBNRINFO("PGM")="R01S467"
		set VBNRINFO("RID")="SCA517"
		set VBNRINFO("TABLES")="DAYENDLNRP,LN,ACN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DAYENDLNRP]PROVNPDT"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DAYENDLNRP]""PROVPOST"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ACN]BOO"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,ACN]CLS"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DAYENDLNRP]CID"

		set VBNRINFO("DOC",1)="This report will provide both the current Provision amounts and the recommended"
		set VBNRINFO("DOC",2)="increases and decreases to the Provision balance for each loan account with"
		set VBNRINFO("DOC",3)="Provisions.  If there are no pending changes, then this report will display no"
		set VBNRINFO("DOC",4)="data underneath the standard header."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DAYENDLNRP.PROVNPDT,ACN.BOO,ACN.CLS,DAYENDLNRP.CID"
	set VSELECT=VSELECT_",ACN.TYPE,DAYENDLNRP.COLOFF,ACN.CRCD,DAYENDLNRP.PR"
	set VSELECT=VSELECT_"OVEXPD,DAYENDLNRP.PROVTOT,DAYENDLNRP.PROVPCT,DAYEN"
	set VSELECT=VSELECT_"DLNRP.ACLS,ACN.PROVBAL,ACN.BAL,LN.ARUF,LN.UDBAL,LN"
	set VSELECT=VSELECT_".LPDT,LN.DIST1ND,ACN.PROVCAT,ACN.CID"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DAYENDLNRP,LN,ACN",VWHERE,"DAYENDLNRP.PROVNPDT,ACN.BOO,ACN.CLS,DAYENDLNRP.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19
	set vc1=V.piece($C(9),1)			// DAYENDLNRP.PROVNPDT
	set vc2=V.piece($C(9),2)			// ACN.BOO
	set vc3=V.piece($C(9),3)			// ACN.CLS
	set vc4=V.piece($C(9),4)			// DAYENDLNRP.CID
	set vc5=V.piece($C(9),5)			// ACN.TYPE
	set vc6=V.piece($C(9),6)			// DAYENDLNRP.COLOFF
	set vc7=V.piece($C(9),7)			// ACN.CRCD
	set vc8=V.piece($C(9),8)			// DAYENDLNRP.PROVEXPD
	set vc9=V.piece($C(9),9)			// DAYENDLNRP.PROVTOT
	set vc10=V.piece($C(9),10)			// DAYENDLNRP.PROVPCT
	set vc11=V.piece($C(9),11)			// DAYENDLNRP.ACLS
	set vc12=V.piece($C(9),12)			// ACN.PROVBAL
	set vc13=V.piece($C(9),13)			// ACN.BAL
	set vc14=V.piece($C(9),14)			// LN.ARUF
	set vc15=V.piece($C(9),15)			// LN.UDBAL
	set vc16=V.piece($C(9),16)			// LN.LPDT
	set vc17=V.piece($C(9),17)			// LN.DIST1ND
	set vc18=V.piece($C(9),18)			// ACN.PROVCAT
	set vc19=V.piece($C(9),19)			// ACN.CID
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 /*
  ---- Revision History ------------------------------------------------
 
        04/19/05 - TITOVE - CR 15089
                   Added calculation of Provision Next Posting Date
		   to be used in report's select statement, to
                   replace old collating logic.
               
 */
 
 type public Date PROVNPDT
 
 // Provision Next Posting Date
 set PROVNPDT = CUVAR.PROVNPDT

 // Check against Provision Regeneration Posting Date
 if (CUVAR.PROVRPDT > %SystemDate) , (CUVAR.PROVRPDT < PROVNPDT) set PROVNPDT = CUVAR.PROVRPDT

 //Incoming=PROVNPDT
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,VH0=1
	if vb4!(vovc3'=vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,BAL,BASE,BOO,CONAM,DAYSDELQ,ER,IOSL,LPDAT,PROVNPDT,PROVPCT,RID,RN,TOTCOL,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"Branch of Ownership "
	set VL=VL_$J("",22-VL.length())_$J(vc2,5)
	set V=$$VP9(vc2)				// @TBL([ACN]BOO)
	set V=$E(V,1,20) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",30-VL.length())_V		// @TBL([ACN]BOO)
	do VOM
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %TIM,BAL,BASE,BOO,DAYSDELQ,I,IOSL,LPDAT,PROVNPDT,PROVPCT,TOTCOL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL=" "_"Branch "
	set VL=VL_$J("",8-VL.length())_$J(vc2,6)
	set VL=VL_$J("",33-VL.length())_"Totals (Base Equivalent "
	do VP2 quit:VFMQ!verror.get()  set V=$E(BASE,1,3)
	set VL=VL_$J("",57-VL.length())_V
	set VL=VL_$J("",61-VL.length())_":)"
	set VL=VL_$J("",74-VL.length())_"Loan: "
	set VL=VL_$J("",80-VL.length())_$J(TOT("L"),12,2)
	do VOM
	set VL="                                                                       "_"Deposit:"
	set VL=VL_$J("",80-VL.length())_$J(TOT("D"),12,2)
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,BAL,BASE,BOO,DAYSDELQ,IOSL,LPDAT,PROVNPDT,PROVPCT,TOTCOL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$J(V,12) do VP3 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",13-VL.length())_$J(vc5,5)
	set VL=VL_$J("",19-VL.length())_$J(vc6,5)
	set V=vc13,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J(V,12,2)
	set VL=VL_$J("",27-VL.length())_V
	set VL=VL_$J("",41-VL.length())_$E(vc7,1,3)
	do VP5 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(LPDAT),10)
	set VL=VL_$J("",46-VL.length())_V
	do VP6 quit:VFMQ!verror.get()  set V=$J(DAYSDELQ,4)
	set VL=VL_$J("",59-VL.length())_V
	set VL=VL_$J("",67-VL.length())_$J($$DAT^%ZM(vc8),10)
	set VL=VL_$J("",78-VL.length())_$J(vc9,14,2)
	set VL=VL_$J("",95-VL.length())_$J(vc10,9,5)
	set VL=VL_$J("",105-VL.length())_$J(vc11,9)
	do VP7 quit:VFMQ!verror.get()  set V=$J(TOTCOL,12,2)
	set VL=VL_$J("",116-VL.length())_V
	do VOM
	set VL="                           "_$J(vc12,12,2)
	do VOM
	set V=vc10,VO=V do VP8 quit:VFMQ!verror.get()  set V=$J(V,9,5) set VL="                              "_V
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BAL,BASE,BOO,CONAM,DAYSDELQ,LPDAT,PROVNPDT,PROVPCT,RID,RN,TOTCOL,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL=" "_"Class:"
	set V=$$VP10(vc3)				// @TBL([ACN]CLS)
	set VL=VL_$J("",8-VL.length())_$E(V,1,20)
	do VOM
	set VL="" do VOM
	set VL="     "_"Account  Prod  Coll    Account Bal  Curr   Last Pmt   Days       Pending       Pending     Pending    Pending    Collateral"
	do VOM
	set VL="      "_"Number  Type   Off  Provision Bal  Code       Date   Delq    Expiration     Provision   Provision  Provision         Value"
	do VOM
	set VL="                          "_"Provision Pct                                  Date        Amount     Percent   Category"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - @TBL([ACN]BOO)

 /*
  ---- Revision History ------------------------------------------------
 
        04/18/05 - TITOVE - CR 15089
                   Added as part of DBI2 project.
 
 */
 
 type public Number TOT()
 
 // Initialize totals array
 set TOT("D") = 0
 set TOT("L") = 0
	quit

VP2	// Column pre-processor - Variable: BASE

 /*
  ---- Revision History ------------------------------------------------
 
        04/18/05 - TITOVE - CR 15089
                   Added as part of DBI2 project.
 
 */
 
 type public String BASE
 
 set BASE = CUVAR.%CRCD
	quit

VP3	// Column post-processor - [SYSDEV,DAYENDLNRP]CID

	type public String vc3,vc13
 /*
  ---- Revision History ------------------------------------------------
 
        04/18/05 - TITOVE - CR 15089
                   Converted into PSL.
 
 */

 type public Number TOT()

 // Build TOT array for class subtotals
 set TOT(vc3) = TOT(vc3).get() + vc13
	quit

VP4	// Column pre-processor - Variable: BAL

	type public String vc3,vc13,vc14,vc15
 /*
  ---- Revision History ------------------------------------------------
 
        04/18/05 - TITOVE - CR 15089
		   Converted to PSL.

 */

 type public Number BAL

 if vc3 = "D" set BAL = vc13
 else  set BAL = $$BALCMP^LNCDI(vc14,vc13,vc15)
	quit

VP5	// Column pre-processor - Variable: LPDAT

	type public String vc3,vc16
 /*
  ---- Revision History ------------------------------------------------
 
        04/18/05 - TITOVE - CR 15089
		   Converted into PSL.

 */

 type public Date LPDAT

 if vc3 = "L" set LPDAT = vc16
 else  set LPDAT = ""
	quit

VP6	// Column pre-processor - Variable: DAYSDELQ

	type public String vc3,vc17
 /*
  ---- Revision History ------------------------------------------------
 
        04/18/05 - TITOVE - CR 15089
		   Converted into PSL.

 */

 type public Number DAYSDELQ
  
 if vc3 = "L" set DAYSDELQ = %SystemDate - vc17
 else  set DAYSDELQ = ""
 
 if (DAYSDELQ < 0) set DAYSDELQ = 0
	quit

VP7	// Column pre-processor - Variable: TOTCOL

	type public String vc3,vc4
  /*
  ---- Revision History ------------------------------------------------
 
        04/18/05 - TITOVE - CR 15089
                   Converted to PSL.
 */
 
 type public Number TOTCOL
 
 // Calculate the collateral value using the provision percentage
 // defined on the collateral record
 if vc3 = "L" set TOTCOL =$$XLN16^LNCDI(vc4,1).piece("|",3)
 else  set TOTCOL = 0
	quit

VP8	// Column pre-processor - Variable: PROVPCT

	type public String vc18,vc12,vc19
 /*
  ---- Revision History ------------------------------------------------
 
        03/16/06 - TITOVE - CR 20174
                   Modified to work for both loans and deposits.
 
 */

 type public Number PROVPCT

 set PROVPCT = $$PROVPCT^LNCDI(vc18,vc12,vc19)

	quit

VP9(KEY1)	// @TBL([ACN]BOO)

	if KEY1="" quit ""
	type Public Cache %CACHE()
	type RecordUTBLBRCD tbl=%CACHE("UTBLBRCD").getRecord("UTBLBRCD","BRCD=:KEY1")
	quit tbl.DESC

VP10(KEY1)	// @TBL([ACN]CLS)

	if KEY1="" quit ""
	type Public Cache %CACHE()
	type RecordSTBLCLS tbl=%CACHE("STBLCLS").getRecord("STBLCLS","CLS=:KEY1")
	quit tbl.DES
