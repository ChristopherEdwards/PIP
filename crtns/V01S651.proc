V01S651(%ProcessMode,RecordUTBLCTFGRP fCTFGRP)   // -  - SID= <UTBLCTFGRP> Commission/Tax/Fee Grp Table Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,DESCRPT,PLN",VSID="UTBLCTFGRP",VPGM=$T(+0),VSNAME="Commission/Tax/Fee Grp Table Maintenance"
 set VFSN("UTBLCTFGRP")="zfCTFGRP"
 set vPSL=1
 set KEYS(1)=fCTFGRP.GRPNAME
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=15 do VPR(.fCTFGRP),VDA1(.fCTFGRP),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fCTFGRP),VPR(.fCTFGRP),VDA1(.fCTFGRP)
 if %ProcessMode do VLOD(.fCTFGRP) quit:$G(ER)  do VPR(.fCTFGRP),VDA1(.fCTFGRP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCTFGRP)
	quit


VNEW(RecordUTBLCTFGRP fCTFGRP) // Initialize arrays if %O=0
 
 do VDEF(.fCTFGRP)
 do VLOD(.fCTFGRP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLCTFGRP fCTFGRP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLCTFGRP fCTFGRP) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=15
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLCTFGRP fCTFGRP) // Display screen prompts
 set VO="4||13|0"
 set VO(0)="|0"
 set VO(1)=$C(3,25,11,0,0,0,0,0,0,0)_"01TGroup Name:"
 set VO(2)=$C(4,24,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(3)=$C(7,14,17,0,0,0,0,0,0,0)_"01TCalculation Order"
 set VO(4)=$C(7,33,26,0,0,0,0,0,0,0)_"01T   Commission/Tax/Fee Plan"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLCTFGRP fCTFGRP)  // Display screen data
 new V
 s DESCRPT=$G(DESCRPT)
 s PLN=$G(PLN)
 //
 set VO="7|5|13|0"
 set VO(5)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD(%FN.get()))
 set VO(6)=$C(3,37,8,2,0,0,0,0,0,0)_"01T"_$E(fCTFGRP.GRPNAME,1,8)
 set VO(7)=$C(4,37,40,2,0,0,0,0,0,0)_"00T"_$G(DESCRPT)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=8 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fCTFGRP)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLCTFGRP fCTFGRP)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,PLN(I))=$G(PLN(I))
 
 set VO(VX+1)=$C(DY,27,3,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,51,8,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",2)
 set DY=DY+1,VX=VX+2
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLCTFGRP fCTFGRP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=2,%MOD=2,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=7+%REPEAT,BLKSIZ=(11*%REPEAT)+48,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLCTFGRP"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLCTFGRP")="zfCTFGRP"
 //
 for I=5:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,36,8)_"21T12401|1|[UTBLCTFGRP]GRPNAME"
 set %TAB(2)=$C(3,36,40)_"01T|*DESCRPT|[*]@DESCR"
 set %TAB(3)=$C(7,26,3)_"00N12401|*PLN(1)|[*]@CALCORD|||do VP1^V01S651(.fCTFGRP)"
 set %TAB(4)=$C(7,50,8)_"00T12402|*PLN(1)|[*]@CTFPLN|[UTBLCTFPLN]||do VP2^V01S651(.fCTFGRP)"
 do VTBL(.fCTFGRP)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLCTFGRP fCTFGRP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLCTFGRP fCTFGRP) //
 type public Number X
 if X.isNull() do {
 	do DELETE^DBSMACRO("@CTFPLN","1","0")
	do GOTO^DBSMACRO("NEXT")
	}

VP2(RecordUTBLCTFGRP fCTFGRP) //
 // Check for end date on plan
                          
 type public Date ENDDATE()
 type public Number DUP(),%PAGE,V,X,z1 
 type String CTFPLN
 type Boolean tvar
 type Date EDATE
			                            
 set tvar=0

 set CTFPLN=X

 if 'X.isNull()&'ENDDATE(X).exists() do {
 	type RecordUTBLCTFPLN ctfpln=Db.getRecord("UTBLCTFPLN","CTFPLN=:CTFPLN")
	set ENDDATE(X)=ctfpln.enddate
	}
		
 if 'X.isNull()&('ENDDATE(X).isNull()) do {
 	set EDATE=ENDDATE(X)
	// No Duplicates Allowed
        if %SystemDate>EDATE do Runtime.setErrMSG("UTBLCTFGRP",4817)
	set tvar=1
	quit
	}
	
 // Check for duplicate CTF plans

 if (X'=V)&(tvar=0) do { quit:ER
	// Invalid. Plan end date is prior to system date.
	if DUP(X).exists() do Runtime.setErrMSG("UTBLCTFGRP",7177) quit
        kill DUP(V)
	if 'X.isNull() set DUP(X)=""
	}

 // If this is the last line on the page and it is valued, then add another page
 if 'X.isNull(),z1#13=0,z1/13=%PAGE  set %PAGE=%PAGE+1
 if X.isNull() do { 
 	kill DUP(X)
	do DELETE^DBSMACRO("@CALCORD","1","0")
	}
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLCTFGRP fCTFGRP
 do VPR(.fCTFGRP)
 do VDA1(.fCTFGRP)
 do ^DBSPNT()
 quit

VW(RecordUTBLCTFGRP fCTFGRP)
 do VDA1(.fCTFGRP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLCTFGRP fCTFGRP)
 do VDA1(.fCTFGRP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLCTFGRP fCTFGRP
 do VDA1(.fCTFGRP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLCTFGRP fCTFGRP
 if sn="UTBLCTFGRP" do vSET1(.fCTFGRP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLCTFGRP fCTFGRP,di,X)
 do fCTFGRP.setAuditFlag(1)
 set fCTFGRP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLCTFGRP fCTFGRP
 if fid="UTBLCTFGRP" quit $$vREAD1(.fCTFGRP,di)
 quit ""
vREAD1(RecordUTBLCTFGRP fCTFGRP,di)
 quit fCTFGRP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
