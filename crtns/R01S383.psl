R01S383	// SCA416 - Custodial Account Transaction Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String EWASH,FD,INCD,PL,PWASH,TD,TJD,TONLY
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number EWASH=1
	type Date FD=TJD.get()
	type Number PWASH=1
	type Date TD=TJD.get()
	type Number TONLY=1
	type String VIN1="ALL"
	type String VIN2="ALL"

	set RID="SCA416"
	set RN="Custodial Account Transaction Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("EWASH")="|1|||||||L|Escrow Wash Account|||||"
	set %TAB("FD")="|10|||||||D|Start Date|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("PWASH")="|1|||||||L|P&I Wash Account|||||"
	set %TAB("TD")="|10|||||||D|End Date|||||"
	set %TAB("TONLY")="|1|||||||L|Totals Only|||||"
	set %TAB("VIN1")="|255||[TMPRPT6]KEY1|[LNLS8]INCD:DISTINCT||S INCD=X D EXT^DBSQRY||T|Investor|||||"
	set %TAB("VIN2")="|255||[TMPRPT6]KEY2|[LNLS8]PL:DISTINCT:QU ""[LNLS8]INCD=INCD""||S PL=X D EXT^DBSQRY||T|Pool Number|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,PWASH#0,EWASH#0,FD#0,TD#0,TONLY#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String EWASH,FD,INCD,PL,PWASH,TD,TJD,TONLY
	type public Date FD,TD
	type public Number PWASH,EWASH,TONLY
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,CR,DR,ENDBAL,ETC,FEEP,LS2EFD,PICM,PP,RID,RN,SFCM,TCMT,TOTCRE,TOTDBE,VL,VLOF,VRF(),VSKIPREC,VSTATS(),VWHERE,XEFD,XTJD,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA416",RN="Custodial Account Transaction Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA416","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[TMPRPT6]KEY1 "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[TMPRPT6]KEY2 "_VIN2,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("TMPRPT6") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Investor"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Pool Number"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Custodial Account Transaction Summary"
		set VBNRINFO("PGM")="R01S383"
		set VBNRINFO("RID")="SCA416"
		set VBNRINFO("TABLES")="TMPRPT6"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TMPRPT6]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TMPRPT6]KEY1"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TMPRPT6]KEY2"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TMPRPT6]KEY3"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,TMPRPT6]KEY4"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,TMPRPT6]KEY5"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,TMPRPT6]KEY6"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"TMPRPT6.PID,TMPRPT6.KEY1,TMPRPT6.KEY2,TMPRPT6.KEY3"
	set VSELECT=VSELECT_",TMPRPT6.KEY4,TMPRPT6.KEY5,TMPRPT6.KEY6,TMPRPT6.DA"
	set VSELECT=VSELECT_"TA"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"TMPRPT6",VWHERE,"TMPRPT6.PID,TMPRPT6.KEY1,TMPRPT6.KEY2,TMPRPT6.KEY3,TMPRPT6.KEY4,TMPRPT6.KEY5,TMPRPT6.KEY6","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8
	set vc1=V.piece($C(9),1)			// TMPRPT6.PID
	set vc2=V.piece($C(9),2)			// TMPRPT6.KEY1
	set vc3=V.piece($C(9),3)			// TMPRPT6.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT6.KEY3
	set vc5=V.piece($C(9),5)			// TMPRPT6.KEY4
	set vc6=V.piece($C(9),6)			// TMPRPT6.KEY5
	set vc7=V.piece($C(9),7)			// TMPRPT6.KEY6
	set vc8=V.piece($C(9),8)			// TMPRPT6.DATA
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

 type public Boolean TONLY,VSKIPREC
 if TONLY set VSKIPREC=1
	quit

VPREAQ	// Pre-processor (after query)

 type public Number PL
 type public String INCD,VWHERE

 do Db.delete("TMPRPT6","PID=:%ProcessID")

 do ^SCA416(INCD,PL)

 if VWHERE.get().isNull() set VWHERE="PID="_%ProcessID
 else  set VWHERE=VWHERE_" AND PID="_%ProcessID
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=INCD,PL,PWASH,EWASH,FD,TD,TONLY
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(6)=1,vskp(7)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG6 quit:VFMQ
	if 'vskp(7).get() do VDTL7 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,VH0=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,VH0=1
	if vb6!(vovc6'=vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(7)=VT(7)+1
	quit

VHDG6	// Group Header
	type public String %MSKD,%TIM,CONAM,CR,DR,ENDBAL,ER,ETC,EWASH,FD,FEEP,INCD,IOSL,LS2EFD,PICM,PL,PP,PWASH,RID,RN,SFCM,TCMT,TD,TJD,TONLY,TOTCRE,TOTDBE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,VSKIPREC,VWHERE,XEFD,XTJD,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:vh(6)  set vh(6)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="Custodial Account: "
	set V=vc6,VO=V do VP1 quit:VFMQ!verror.get()  set V=$E(V,1,20)
	set VL=VL_$J("",19-VL.length())_V		// [SYSDEV,TMPRPT6]KEY5
	do VOM
	set VL="" do VOM
	quit

VSUM6	// Summary
	type public String %TIM,CR,DR,ENDBAL,ETC,EWASH,FD,FEEP,I,INCD,IOSL,LS2EFD,PICM,PL,PP,PWASH,SFCM,TCMT,TD,TJD,TONLY,TOTCRE,TOTDBE,V,VFMQ,VL,VLC,VO,VOFFLG,VSKIPREC,VT(),VWHERE,VX(),XEFD,XTJD,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                             "_"Beginning Balance "
	set VL=VL_$J("",53-VL.length())_"Total Credits"
	set VL=VL_$J("",74-VL.length())_"Total Debits"
	set VL=VL_$J("",92-VL.length())_"Ending Balance"
	do VOM
	set VL="                            "_$E($J($FN(+$P(HIST(WASH,-1),%,1)-$P(HIST(WASH,-1),%,2)+$P(HIST(WASH,-1),%,3),",",2),18),1,18)
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(TOTCRE,",",2),18)
	set VL=VL_$J("",48-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(TOTDBE,",",2),18)
	set VL=VL_$J("",68-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J($FN(ENDBAL,",",2),18)
	set VL=VL_$J("",88-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VDTL7	// Detail
	type public String %TIM,CR,DR,ENDBAL,ETC,EWASH,FD,FEEP,INCD,IOSL,LS2EFD,PICM,PL,PP,PWASH,SFCM,TCMT,TD,TJD,TONLY,TOTCRE,TOTDBE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VSKIPREC,VT(),VWHERE,XEFD,XTJD,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP5 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(XTJD),10) set VL="       "_V
	set VL=VL_$J("",18-VL.length())_$J($$DAT^%ZM(XEFD),10)
	set VL=VL_$J("",31-VL.length())_$E(ETC,1,12)
	set VL=VL_$J("",48-VL.length())_$J($FN(CR,",",2),18)
	set VL=VL_$J("",68-VL.length())_$J($FN(DR,",",2),18)
	set VL=VL_$J("",88-VL.length())_$E(TCMT,1,40)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,CR,DR,ENDBAL,ETC,EWASH,FD,FEEP,INCD,LS2EFD,PICM,PL,PP,PWASH,RID,RN,SFCM,TCMT,TD,TJD,TONLY,TOTCRE,TOTDBE,VL,VSKIPREC,VWHERE,XEFD,XTJD,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",98-VL.length())_"Run Date:"
	set VL=VL_$J("",108-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",100-VL.length())_"System:"
	set VL=VL_$J("",108-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Start Date: "
	set VL=VL_$J("",12-VL.length())_$J($$DAT^%ZM(FD),10)
	set VL=VL_$J("",24-VL.length())_"Investor: "
	set VL=VL_$J("",34-VL.length())_$E(INCD,1,6)
	set VL=VL_$J("",45-VL.length())_"Rem Method:"
	do VP6 quit:VFMQ!verror.get()  set V=$J(PICM,12)
	set VL=VL_$J("",57-VL.length())_V
	set VL=VL_$J("",74-VL.length())_"% Sold:"
	set VL=VL_$J("",82-VL.length())_$J(PP,9,5)
	set VL=VL_$J("",94-VL.length())_"Dated: "
	set VL=VL_$J("",101-VL.length())_$J($$DAT^%ZM(LS2EFD),10)
	do VOM
	set VL="  "_"End Date:"
	set VL=VL_$J("",12-VL.length())_$J($$DAT^%ZM(TD),10)
	set VL=VL_$J("",28-VL.length())_"Pool: "
	set VL=VL_$J("",34-VL.length())_$E(PL,1,10)
	set VL=VL_$J("",45-VL.length())_"Fee Method:"
	set VL=VL_$J("",57-VL.length())_$E(SFCM,1,5)
	set VL=VL_$J("",75-VL.length())_"Fee %: "
	set VL=VL_$J("",83-VL.length())_$J(FEEP,8,5)
	do VOM
	set VL="" do VOM
	set VL="        "_"Tran Date  Effective   Tran Code                   Credits              Debits  Comments"
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,TMPRPT6]KEY5

	type public String vc6
 type public Number WASH
 set WASH=vc6

	quit

VP2	// Column pre-processor - Variable: TOTCRE

 type public Number WASH
 type public String HIST(,), TOTCRE

 set TOTCRE = $P(HIST(WASH,-1),"|",2)
	quit

VP3	// Column pre-processor - Variable: TOTDBE

 type public Number WASH
 type public String HIST(,), TOTDBE
 
 set TOTDBE = $P(HIST(WASH,-1),"|",3)
	quit

VP4	// Column pre-processor - Variable: ENDBAL

 type public Number WASH
 type public String HIST(,), ENDBAL

 set ENDBAL = $P(HIST(WASH,-1),"|",1)
	quit

VP5	// Column pre-processor - Variable: XTJD

	type public String vc8
 type public Date XEFD,XTJD
 type public Number CR,DR
 type public String ETC,TCMT

 type String DATA
 set DATA=vc8
 set XTJD=DATA.piece("|",6)
 set XEFD=DATA.piece("|",1)
 set ETC=DATA.piece("|",2)
 set CR=DATA.piece("|",3)
 set DR=DATA.piece("|",4)
 set TCMT=DATA.piece("|",5)
	quit

VP6	// Column pre-processor - Variable: PICM

	type public String vc2,vc3
 type public Date LS2EFD
 type public Number FEEP,PICM,PL,PP
 type public String INCD,SFCM

 set INCD=vc2
 set PL=vc3

 if INCD.isNull()!PL.isNull() do { quit
 	set PICM=""
	set PP=""
	set LS2EFD=""
	set SFCM=""
	set FEEP=""
	}

 type RecordLNLS2 lnls2=Db.getRecord("LNLS2","INCD=:INCD,PL=:PL")
 set PICM=lnls2.picm
 set PP=lnls2.pp
 set LS2EFD=lnls2.efd
 set SFCM=lnls2.sfcm
 set FEEP=lnls2.feep
	quit
