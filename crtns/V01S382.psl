V01S382(Number %ProcessMode,RecordLNICNV LNICNV())   //PBS - LN - SID= <LNICNV2> Permanent-to-Deferred Loan Conversion
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:30 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'LNICNV(1).exists() set LNICNV(1) = Class.new("RecordLNICNV")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNICNV2",VPGM=$T(+0),VSNAME="Permanent-to-Deferred Loan Conversion"
 set VFSN("LNICNV")="zLNICNV"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=17 do VPR(.LNICNV()),VDA1(.LNICNV()),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.LNICNV()),VPR(.LNICNV()),VDA1(.LNICNV())
 if %ProcessMode do VLOD(.LNICNV()) quit:$G(ER)  do VPR(.LNICNV()),VDA1(.LNICNV())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.LNICNV())
	quit


VNEW(RecordLNICNV LNICNV()) // Initialize arrays if %O=0
 
 do VDEF(.LNICNV())
 do VLOD(.LNICNV())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordLNICNV LNICNV())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordLNICNV LNICNV()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=17
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNICNV LNICNV()) // Display screen prompts
 set VO="8||13|0"
 set VO(0)="|0"
 set VO(1)=$C(4,6,9,2,0,0,0,0,0,0)_"01TPermanent"
 set VO(2)=$C(4,25,44,2,0,0,0,0,0,0)_"01T----------------- Deferment ----------------"
 set VO(3)=$C(5,5,12,2,0,0,0,0,0,0)_"01TLoan Account"
 set VO(4)=$C(5,25,3,2,0,0,0,0,0,0)_"01TRsn"
 set VO(5)=$C(5,30,4,2,0,0,0,0,0,0)_"01TTerm"
 set VO(6)=$C(5,40,10,2,0,0,0,0,0,0)_"01TStart Date"
 set VO(7)=$C(5,52,8,2,0,0,0,0,0,0)_"01TEnd Date"
 set VO(8)=$C(5,63,6,2,0,0,0,0,0,0)_"01TDirect"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordLNICNV LNICNV())  // Display screen data
 new V
 if %ProcessMode=5 new DESC
 if  set (DESC)=""
 else  set DESC=$G(DESC)
 
 s DESC=$G(DESC)
 //
 set VO="9|9|13|0"
 set VO(9)=$C(1,2,0,2,0,0,0,0,0,0)_"01T"_DESC.get()
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+0,DY=6 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.LNICNV())
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNICNV LNICNV())  // Display data %REPEAT times
 //instantiate new object if necessary
  #ACCEPT;DATE=08/08/06; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEPRECATED
  if 'LNICNV(I).getPointer() do {
     set LNICNV(I)=Class.new("RecordLNICNV","")
     }
 set VO(VX+1)=$C(DY,5,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).CID
 set VO(VX+2)=$C(DY,25,3,2,0,0,0,0,0,0)_"00N"_LNICNV(I).SLDRSN
 set VO(VX+3)=$C(DY,30,8,2,0,0,0,0,0,0)_"00T"_$E(LNICNV(I).SLDTRM,1,8)
 set VO(VX+4)=$C(DY,40,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(LNICNV(I).SLDFD)
 set VO(VX+5)=$C(DY,52,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(LNICNV(I).SLDTD)
 set VO(VX+6)=$C(DY,65,1,2,0,0,0,0,0,0)_"00L"_$S(LNICNV(I).DIRDEF:"Y",1:"N")
 set DY=DY+1,VX=VX+6
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordLNICNV LNICNV())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=1,%MOD=6,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=5+%REPEAT,BLKSIZ=(44*%REPEAT)+0,PGM=$T(+0),DLIB="SYSDEV",DFID="LNICNV",VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("LNICNV")="zLNICNV"
 //
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,1,0)_"21T|*DESC|[*]@T1"
 set %TAB(2)=$C(5,4,12)_"00N12401|1|[LNICNV]CID|||do VP1^V01S382(.LNICNV)"
 set %TAB(3)=$C(5,24,3)_"00N12411|1|[LNICNV]SLDRSN|[UTBLSLDRSN]|||do VP2^V01S382(.LNICNV)"
 set %TAB(4)=$C(5,29,8)_"00T12410|1|[LNICNV]SLDTRM||||do VP3^V01S382(.LNICNV)"
 set %TAB(5)=$C(5,39,10)_"00D12412|1|[LNICNV]SLDFD|||do VP4^V01S382(.LNICNV)|do VP5^V01S382(.LNICNV)"
 set %TAB(6)=$C(5,51,10)_"00D12413|1|[LNICNV]SLDTD||||do VP6^V01S382(.LNICNV)"
 set %TAB(7)=$C(5,64,1)_"00L12417|1|[LNICNV]DIRDEF"
 do VTBL(.LNICNV())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordLNICNV LNICNV()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit



 quit

VSPP

 do VSPPREQ(.LNICNV()) if ER quit


VSPPREQ(RecordLNICNV LNICNV()) 
 //_______________________________________________________
 //  User Defined Required Data Item Definitions
 //_______________________________________________________

 set ER=0

 for I=%MODS:1:%REPEAT+%MODS-1 do VR1(.LNICNV()) if ER set NI=((I-1)*6)+(1+%MODOFF) quit
 quit

VR1(RecordLNICNV LNICNV()) 

 // ([LNICNV]CID,[LNICNV]SLDTRM,[LNICNV]SLDFD,[LNICNV]SLDTD)

 I (LNICNV(I).CID'=""),(LNICNV(I).SLDTRM'=""),(LNICNV(I).SLDFD'=""),(LNICNV(I).SLDTD'="") quit


 // ([LNICNV]CID-,[LNICNV]SLDTRM-,[LNICNV]SLDFD-,[LNICNV]SLDTD-)

 I (LNICNV(I).CID=""),(LNICNV(I).SLDTRM=""),(LNICNV(I).SLDFD=""),(LNICNV(I).SLDTD="") quit

 do VR99 quit

VR99 
 set RM="Missing required field(s)/data item set definition error"
 set ER=1 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordLNICNV LNICNV()) //

	type public Boolean ER
	type public Number V, X, Y

	type public String I()

	type Number TCID 

	set TCID = X

	if (X.isNull() & 'V.isNull()) do { if ER quit
                do DELETE^DBSMACRO("LNICNV.SLDRSN", "1", "0")
                do DELETE^DBSMACRO("LNICNV.SLDTRM", "1", "0")
                do DELETE^DBSMACRO("LNICNV.SLDFD", "1", "0")
                do DELETE^DBSMACRO("LNICNV.SLDTD", "1", "0")
                do GOTO^DBSMACRO("NEXT")
		}

	if (X.isNull() & V.isNull()) do GOTO^DBSMACRO("NEXT") quit

	do CK2^LNICFE1 quit  if ER

	if X = +Y do DEFAULT^DBSMACRO("lnicnv.cid", X, "1", "0", "0") quit
VP2(RecordLNICNV LNICNV()) //
	/* ---- Revision History ----------------------------------------------
	
	12/12/06 - MBUIM - CR 23262	
		   Modified to replace unknown .piece method.

	-----------------------------------------------------------------
	*/

	type public Number CID, TCID

	type public String I()	
	type String C, X

	if 'TCID quit

	set C = LNICNV(I(1)).CID

	if 'C.length() quit        
	type ResultSet Y = Db.select("CMT", "LNADV", "CID = :CID")         	

	if Y.getCol("CMT") do {
		set X = Y.getCol("CMT")
		do DEFAULT^DBSMACRO("LNICNV.SLDRSN", X, "1", "0", "0") quit
		}

	quit
VP3(RecordLNICNV LNICNV()) //
	/* ---- Revision History --------------------------------------------

	12/12/06 - MBUIM - CR 23262
	           Modified to replace unknown .piece method.
	
	----------------------------------------------------------------
	*/
	
	type public Number CID, TCID

	type public String I()

	type String C, X
 
	if 'TCID quit

	set C = LNICNV(I(1)).CID

	if 'C.length() quit        
	type ResultSet Y = Db.select("OFF", "LNADV", "CID = :CID")     

	if Y.getCol("OFF") do {
		    set X = Y.getCol("OFF")
		    do DEFAULT^DBSMACRO("LNICNV.SLDTRM", X, "1", "0", "0")
		    quit
		    } 

 	quit
	
VP4(RecordLNICNV LNICNV()) //
	type public Number TCID	

	if 'TCID quit
	do EFD^LNICFE
	
	quit
VP5(RecordLNICNV LNICNV()) //
	/* ---- Revision History ----------------------------------------------
	    
		12/12/06 - MBUIM - CR 23262
			   Modified to replace unknown .piece method.
			   Removed ' from C.length() to conform to old code

	----------------------------------------------------------------
	*/

	type public Number TCID

	type public String I()

	type String C, UX()

	if 'TCID quit
	
	set C = LNICNV(I(1)).SLDFD

	if C.length() quit
	do DEFAULT^DBSMACRO("LNICNV.SLDFD", TJD, "1", "0", "0")

	set UX("LNICNV", "SLDFD", I(1)) = "|"_TJD_"|1|12"
		
	quit
VP6(RecordLNICNV LNICNV()) //
	/* ---- Revision History ----------------------------------------------
	
	12/12/06 - MBUIM - CR 23262
		    Modified to replace unknown .piece method.
	----------------------------------------------------------------
	*/
	
	type public Boolean ER
	type public Date NJD
        type public Number TCID
	type public String I()

        type Date JD
        type String FRE, UX()

	if 'TCID quit

	set FRE = LNICNV(I(1)).SLDTRM
	set JD = LNICNV(I(1)).SLDFD

	if 'FRE.length() ! ('JD.length()) quit
	set FRE = FRE_"A"
	do ^UFRE quit:ER

	do DEFAULT^DBSMACRO("LNICNV.SLDTD", NJD, "1", "0", "0")

	set UX("LNICNV", "SLDTD", I(1)) = "|"_NJD_"|1|13"
	
	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNICNV LNICNV()
 do VPR(.LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT()
 quit

VW(RecordLNICNV LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNICNV LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNICNV LNICNV()
 do VDA1(.LNICNV())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordLNICNV LNICNV()
 if sn="LNICNV" do vSET1(LNICNV(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordLNICNV LNICNV,di,X)
 do LNICNV.setAuditFlag(1)
 set LNICNV.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordLNICNV LNICNV()
 if fid="LNICNV" quit $$vREAD1(LNICNV(I(1)),di)
 quit ""
vREAD1(RecordLNICNV LNICNV,di)
 quit LNICNV.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
