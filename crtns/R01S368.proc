R01S368	// SCA389 - Loan Sale Weighted Average Interest Rpt
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:48 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DTL="N"
	type String VIN1="ALL"

	set RID="SCA389"
	set RN="Loan Sale Weighted Average Interest Rpt"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DTL")="|1|||||||L|Account Detail|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNLS8]INCD|[LNLS8]:NOVAL||D EXT^DBSQRY||T|Investor Code|||||"

	set %READ="IO/REQ,VIN1#0,DTL#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD
	type public Number DTL
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ADVPP,CBAL,CNT,CONAM,IRN,LIQCRT,PI,RID,RN,SBAL,TOTADVPP,TOTCBAL,TOTCNT,TOTLIQCRT,TOTPI,TOTSBAL,TOTUNPR,UNPR,VL,VLOF,VRF(),VSTATS(),WAIR,YIELD,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA389",RN="Loan Sale Weighted Average Interest Rpt"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA389","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LN]BAL#38#12,[LN]UNPR#54#12,[LN]ADVPP#68#12,[LN]PMTPI#119#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNLS8]INCD "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNLS8,LNLS6,LNLS3,LNLS2,LNLS1,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Investor Code"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Sale Weighted Average Interest Rpt"
		set VBNRINFO("PGM")="R01S368"
		set VBNRINFO("RID")="SCA389"
		set VBNRINFO("TABLES")="LNLS8,LNLS6,LNLS3,LNLS2,LNLS1,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLS8]INCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLS8]PL"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LN]IRN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLS8]GRP"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNLS8]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LN.TREXD,LN.IRN,LN.TRATE,LNLS8.INCD,LNLS8.PL,LNLS8"
	set VSELECT=VSELECT_".GRP,LNLS8.CID,LNLS1.DESC,LNLS2.PP,LNLS2.SVN,LNLS2"
	set VSELECT=VSELECT_".YIELD,LNLS2.FEEP,LNLS2.SFCM,LN.BAL,LN.UNPR,LN.ADV"
	set VSELECT=VSELECT_"PP,LN.PMTPI"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNLS8,LNLS6,LNLS3,LNLS2,LNLS1,LN",VWHERE,"LNLS8.INCD,LNLS8.PL,LN.IRN,LNLS8.GRP,LNLS8.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc4,vovc5,vovc2,vovc6,vovc7
	set vovc4="",vovc5="",vovc2="",vovc6="",vovc7=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc4,vc4,vovc5,vc5,vovc2,vc2,vovc6,vc6,vovc7,vc7
	set vovc4=vc4,vovc5=vc5,vovc2=vc2,vovc6=vc6,vovc7=vc7
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17
	set vc1=V.piece($C(9),1)			// LN.TREXD
	set vc2=V.piece($C(9),2)			// LN.IRN
	set vc3=V.piece($C(9),3)			// LN.TRATE
	set vc4=V.piece($C(9),4)			// LNLS8.INCD
	set vc5=V.piece($C(9),5)			// LNLS8.PL
	set vc6=V.piece($C(9),6)			// LNLS8.GRP
	set vc7=V.piece($C(9),7)			// LNLS8.CID
	set vc8=V.piece($C(9),8)			// LNLS1.DESC
	set vc9=V.piece($C(9),9)			// LNLS2.PP
	set vc10=V.piece($C(9),10)			// LNLS2.SVN
	set vc11=V.piece($C(9),11)			// LNLS2.YIELD
	set vc12=V.piece($C(9),12)			// LNLS2.FEEP
	set vc13=V.piece($C(9),13)			// LNLS2.SFCM
	set vc14=V.piece($C(9),14)			// LN.BAL
	set vc15=V.piece($C(9),15)			// LN.UNPR
	set vc16=V.piece($C(9),16)			// LN.ADVPP
	set vc17=V.piece($C(9),17)			// LN.PMTPI
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3
 type public Date TJD
 
 if vc1>TJD set vc2=vc3
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=TJD
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc4,vovc4,vc5,vovc5,vc2,vovc2,vc6,vovc6,vc7,vovc7
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc4'=vc4) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(vovc5'=vc5) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(vovc6'=vc6) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VDTL2	// Detail
	type public String %TIM,ADVPP,CBAL,CNT,IOSL,IRN,LIQCRT,PI,SBAL,TJD,TOTADVPP,TOTCBAL,TOTCNT,TOTLIQCRT,TOTPI,TOTSBAL,TOTUNPR,UNPR,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),WAIR,YIELD,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="     "_"Rate"
	set VL=VL_$J("",14-VL.length())_"Yield"
	set VL=VL_$J("",21-VL.length())_"# Loans"
	set VL=VL_$J("",38-VL.length())_"Current Bal"
	set VL=VL_$J("",56-VL.length())_"Delinq Pr"
	set VL=VL_$J("",69-VL.length())_"Prepaid Pr"
	set VL=VL_$J("",82-VL.length())_"Liq & Crt Pr"
	set VL=VL_$J("",100-VL.length())_"Scheduled Bal"
	set VL=VL_$J("",123-VL.length())_"P&I Amt"
	do VOM
	set VL="" do VOM
	quit

VSUM3	// Summary
	type public String %TIM,ADVPP,CBAL,CNT,I,IOSL,IRN,LIQCRT,PI,SBAL,TJD,TOTADVPP,TOTCBAL,TOTCNT,TOTLIQCRT,TOTPI,TOTSBAL,TOTUNPR,UNPR,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),WAIR,YIELD,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Total:"
	set VL=VL_$J("",22-VL.length())_$J(TOTCNT,6)
	set VL=VL_$J("",33-VL.length())_$J($FN(TOTCBAL,",",2),16)
	set VL=VL_$J("",53-VL.length())_$J($FN(TOTUNPR,",",2),12)
	set VL=VL_$J("",67-VL.length())_$J($FN(TOTADVPP,",",2),12)
	set VL=VL_$J("",82-VL.length())_$J($FN(TOTLIQCRT,",",2),12)
	set VL=VL_$J("",97-VL.length())_$J($FN(TOTSBAL,",",2),16)
	set VL=VL_$J("",115-VL.length())_$J($FN(TOTPI,",",2),15)
	do VOM
	set VL="" do VOM
	set VL="Weighted Average Interest Rate:"
	do VP1 quit:VFMQ!verror.get()  set V=$J(WAIR,7,4)
	set VL=VL_$J("",33-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %TIM,ADVPP,CBAL,CNT,I,IOSL,IRN,LIQCRT,PI,SBAL,TJD,TOTADVPP,TOTCBAL,TOTCNT,TOTLIQCRT,TOTPI,TOTSBAL,TOTUNPR,UNPR,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),WAIR,YIELD,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL=" "_$J(vc2,8,5)
	set VL=VL_$J("",11-VL.length())_$J(vc11,8,5)
	do VP2 quit:VFMQ!verror.get()  set V=$J(CNT,6)
	set VL=VL_$J("",22-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(CBAL,",",2),16)
	set VL=VL_$J("",33-VL.length())_V
	set V=vc15,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),12)
	set VL=VL_$J("",52-VL.length())_V
	set V=vc16,VO=V do VP5 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),12)
	set VL=VL_$J("",67-VL.length())_V
	do VP6 quit:VFMQ!verror.get()  set V=$J($FN(LIQCRT,",",2),12)
	set VL=VL_$J("",82-VL.length())_V
	do VP7 quit:VFMQ!verror.get()  set V=$J($FN(SBAL,",",2),16)
	set VL=VL_$J("",97-VL.length())_V
	do VP8 quit:VFMQ!verror.get()  set V=$J($FN(PI,",",2),15)
	set VL=VL_$J("",115-VL.length())_V
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,ADVPP,CBAL,CNT,IOSL,IRN,LIQCRT,PI,SBAL,TJD,TOTADVPP,TOTCBAL,TOTCNT,TOTLIQCRT,TOTPI,TOTSBAL,TOTUNPR,UNPR,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),WAIR,YIELD,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set V=vc14,VO=V set V=$J($FN(V,",",2),12) do VP9 quit:VFMQ!verror.get()  set VL="                                     "_V
	set V=vc15,VO=V set V=$J($FN(V,",",2),15) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",50-VL.length())_V		// [SYSDEV,LN]UNPR
	set V=vc16,VO=V set V=$J($FN(V,",",2),13) do VP11 quit:VFMQ!verror.get()
	set VL=VL_$J("",66-VL.length())_V		// [SYSDEV,LN]ADVPP
	do VP12 quit:VFMQ!verror.get()  set V=$J($FN(LIQCRT,",",2),12)
	set VL=VL_$J("",82-VL.length())_V
	do VP13 quit:VFMQ!verror.get()  set V=$J($FN(SBAL,",",2),12)
	set VL=VL_$J("",101-VL.length())_V
	set V=vc17,VO=V set V=$J($FN(V,",",2),16) do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",114-VL.length())_V		// [SYSDEV,LN]PMTPI
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ADVPP,CBAL,CNT,CONAM,IRN,LIQCRT,PI,RID,RN,SBAL,TJD,TOTADVPP,TOTCBAL,TOTCNT,TOTLIQCRT,TOTPI,TOTSBAL,TOTUNPR,UNPR,VL,WAIR,YIELD,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="   "_"Investor: "
	set VL=VL_$J("",13-VL.length())_$E(vc4,1,5)
	set VL=VL_$J("",21-VL.length())_$E(vc8,1,30)
	set VL=VL_$J("",73-VL.length())_"% Owned:"
	set VL=VL_$J("",82-VL.length())_$J(vc9,9,5)
	set VL=VL_$J("",95-VL.length())_"Servicer:"
	set VL=VL_$J("",105-VL.length())_$E(vc10,1,10)
	do VOM
	set VL="       "_"Pool: "
	set V=vc5,VO=V set V=$E(V,1,10) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",13-VL.length())_V		// [SYSDEV,LNLS8]PL
	set VL=VL_$J("",57-VL.length())_"Yield:"
	set VL=VL_$J("",64-VL.length())_$J(vc11,8,5)
	set VL=VL_$J("",75-VL.length())_"Fee %:"
	set VL=VL_$J("",82-VL.length())_$J(vc12,8,5)
	set VL=VL_$J("",93-VL.length())_"Fee Method:"
	set VL=VL_$J("",105-VL.length())_$E(vc13,1,5)
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: WAIR

 // Calculate Weighted Average Interest Rate
 //
 // Determine total return (TRET) and divide by total investment (TOTSBAL)

 type public String SBAL(),RAT,TOTSBAL,TRET,WAIR
 type Number I

 set WAIR=0
 set RAT=""
 set TRET=0

 for I=1:1 set RAT=SBAL(RAT).order()  quit:RAT=""  do {
  set TRET=TRET+((SBAL(RAT)*RAT)/100)
  }

 if 'TRET quit // Don't divide by zero, leave WAIR at zero.

 set WAIR=TRET/TOTSBAL
 set WAIR=WAIR*100
	quit

VP2	// Column pre-processor - Variable: CNT

 type public Number CNT,CNT()

 set CNT=CNT("RATE")
	quit

VP3	// Column pre-processor - Variable: CBAL

 type public Number CBAL,CBAL()
 
 set CBAL=CBAL("RATE")
	quit

VP4	// Column pre-processor - Variable: UNPR

 type public Number UNPR,UNPR()
 
 set UNPR=UNPR("RATE")
 
	quit

VP5	// Column pre-processor - Variable: ADVPP

 type public Number ADVPP,ADVPP()

 set ADVPP=ADVPP("RATE")

	quit

VP6	// Column pre-processor - Variable: LIQCRT

 type public Number LIQCRT,LIQCRT()

 set LIQCRT=LIQCRT("RATE")
	quit

VP7	// Column pre-processor - Variable: SBAL

 type public Number SBAL,SBAL()

 set SBAL=SBAL("RATE")

	quit

VP8	// Column pre-processor - Variable: PI

 type public Number PI,PI()

 set PI=PI("RATE")
	quit

VP9	// Column post-processor - [SYSDEV,LN]BAL

	type public String vc14
 type public Number CBAL(),CNT(),TOTCBAL,TOTCNT
 type Number BAL1    

 set BAL1=vc14  
 set CBAL("RATE")=CBAL("RATE").get()+BAL1 
 set TOTCBAL=TOTCBAL.get()+BAL1
 set CNT("RATE")=CNT("RATE").get()+1 
 set TOTCNT=TOTCNT.get()+1
	quit

VP10	// Column post-processor - [SYSDEV,LN]UNPR

	type public String vc15
 type public Number TOTUNPR,UNPR()
 type Number UNPR1

 set UNPR1=vc15 
 set UNPR("RATE")=UNPR("RATE").get()+UNPR1
 set TOTUNPR=TOTUNPR.get()+UNPR1
	quit

VP11	// Column post-processor - [SYSDEV,LN]ADVPP

	type public String vc16
 type public Number ADVPP(),TOTADVPP
 set ADVPP=vc16
 set ADVPP("RATE")=ADVPP("RATE").get()+ADVPP
 set TOTADVPP=TOTADVPP.get()+ADVPP
	quit

VP12	// Column pre-processor - Variable: LIQCRT

 type public Number LIQCRT,LIQCRT(),TOTLIQCRT

 set LIQCRT=0
 set LIQCRT("RATE")=LIQCRT("RATE").get()+LIQCRT
 set TOTLIQCRT=TOTLIQCRT.get()+LIQCRT
	quit

VP13	// Column pre-processor - Variable: SBAL

	type public String vc14,vc15,vc16
 type public Number LIQCRT,SBAL,SBAL(),TOTSBAL
 type Number ADVPP1,BAL1,UNPR1

 set BAL1=vc14
 set UNPR1=vc15
 set ADVPP1=vc16
 
 set SBAL=BAL1-UNPR1+(ADVPP1+LIQCRT.get())
 set SBAL("RATE")=SBAL("RATE").get()+SBAL
 set TOTSBAL=TOTSBAL.get()+SBAL
	quit

VP14	// Column post-processor - [SYSDEV,LN]PMTPI

	type public String vc17
 type public Number DTL,PI(),TOTPI
 type public String V,VL
 type String PMTPI1
 
 set PMTPI1=vc17

 set PI("RATE")=PI("RATE").get()+PMTPI1
 set TOTPI=TOTPI.get()+PMTPI1
 if DTL=0 set V="",VL=""
	quit

VP15	// Column post-processor - [SYSDEV,LNLS8]PL


 type public Number ADVPP,CBAL,CNT,LIQCRT,SBAL,PI,TOTADVPP,TOTLIQCRT,TOTSBAL,TOTPI,TOTCBAL,TOTCNT,TOTUNPR,UNPR

 kill CNT,CBAL,UNPR,ADVPP,LIQCRT,SBAL,PI

 set (TOTCNT,TOTCBAL,TOTUNPR,TOTADVPP,TOTLIQCRT,TOTSBAL,TOTPI)=0
	quit
