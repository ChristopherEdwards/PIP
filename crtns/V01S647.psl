V01S647(Number %ProcessMode,RecordUTBLCOMPLN fUTBLCOM)   // -  - SID= <UTBLCOMPLN> Commission Plan User Table Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:35 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fUTBLCOM.exists() set fUTBLCOM = Class.new("RecordUTBLCOMPLN")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLCOMPLN",VPGM=$T(+0),VSNAME="Commission Plan User Table Maintenance"
 set VFSN("UTBLCOMPLN")="zfUTBLCOM"
 set vPSL=1
 set KEYS(1)=fUTBLCOM.CPLAN
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLCOM),VDA1(.fUTBLCOM),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fUTBLCOM),VPR(.fUTBLCOM),VDA1(.fUTBLCOM)
 if %ProcessMode do VLOD(.fUTBLCOM) quit:$G(ER)  do VPR(.fUTBLCOM),VDA1(.fUTBLCOM)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLCOM)
	quit


VNEW(RecordUTBLCOMPLN fUTBLCOM) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLCOM)
 do VLOD(.fUTBLCOM)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordUTBLCOMPLN fUTBLCOM)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordUTBLCOMPLN fUTBLCOM) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLCOMPLN fUTBLCOM) // Display screen prompts
 set VO="31||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,7,17,0,0,0,0,0,0,0)_"01T Commission Plan:"
 set VO(2)=$C(2,11,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(4,26,23,2,0,0,0,0,0,0)_"01TCommission Calculations"
 set VO(4)=$C(5,1,23,0,0,0,0,0,0,0)_"01TCommission Calculation:"
 set VO(5)=$C(6,5,19,0,0,0,0,0,0,0)_"01TAccount Level Calc:"
 set VO(6)=$C(7,9,15,0,0,0,0,0,0,0)_"01T Function Call:"
 set VO(7)=$C(8,5,19,0,0,0,0,0,0,0)_"01T Assessment Method:"
 set VO(8)=$C(8,42,23,0,0,0,0,0,0,0)_"01TTransaction Code Group:"
 set VO(9)=$C(9,2,22,0,0,0,0,0,0,0)_"01TCalculation Frequency:"
 set VO(10)=$C(9,43,22,0,0,0,0,0,0,0)_"01TNext Calculation Date:"
 set VO(11)=$C(10,4,20,0,0,0,0,0,0,0)_"01TPosting Offset Days:"
 set VO(12)=$C(10,43,22,0,0,0,0,0,0,0)_"01TLast Calculation Date:"
 set VO(13)=$C(11,6,18,0,0,0,0,0,0,0)_"01TCollection Method:"
 set VO(14)=$C(11,44,21,0,0,0,0,0,0,0)_"01T Expense G/L Account:"
 set VO(15)=$C(12,14,10,0,0,0,0,0,0,0)_"01TPortfolio:"
 set VO(16)=$C(12,40,25,0,0,0,0,0,0,0)_"01TReset Review Rate Change:"
 set VO(17)=$C(13,2,22,0,0,0,0,0,0,0)_"01TRate Review Frequency:"
 set VO(18)=$C(13,40,25,0,0,0,0,0,0,0)_"01TCommission Refund Period:"
 set VO(19)=$C(14,10,14,0,0,0,0,0,0,0)_"01TInitial Query:"
 set VO(20)=$C(14,49,9,0,0,0,0,0,0,0)_"01TExecution"
 set VO(21)=$C(14,59,6,0,0,0,0,0,0,0)_"01TQuery:"
 set VO(22)=$C(15,10,14,0,0,0,0,0,0,0)_"01T Balance Type:"
 set VO(23)=$C(16,30,17,2,0,0,0,0,0,0)_"01TRates and Margins"
 set VO(24)=$C(18,6,18,0,0,0,0,0,0,0)_"01TCommission Amount:"
 set VO(25)=$C(18,51,14,0,0,0,0,0,0,0)_"01TCurrency Code:"
 set VO(26)=$C(19,8,10,0,0,0,0,0,0,0)_"01TCommission"
 set VO(27)=$C(19,19,5,0,0,0,0,0,0,0)_"01TRate:"
 set VO(28)=$C(19,48,17,0,0,0,0,0,0,0)_"01TCommission Index:"
 set VO(29)=$C(20,6,18,0,0,0,0,0,0,0)_"01TCommission Margin:"
 set VO(30)=$C(20,51,14,0,0,0,0,0,0,0)_"01TFixed Savings:"
 set VO(31)=$C(21,2,22,0,0,0,0,0,0,0)_"01TRate Comparison Index:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordUTBLCOMPLN fUTBLCOM)  // Display screen data
 new V
 //
 set VO="58|32|13|0"
 set VO(32)=$C(1,25,8,2,0,0,0,0,0,0)_"01T"_$E(fUTBLCOM.CPLAN,1,8)
 set VO(33)=$C(2,25,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.DESCR,1,40)
 set VO(34)=$C(5,25,56,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.COMCALC,1,80)
 set VO(35)=$C(6,25,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLCOM.ALC:"Y",1:"N")
 set VO(36)=$C(7,25,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.FCALL,1,40)
 set VO(37)=$C(8,25,1,2,0,0,0,0,0,0)_"00N"_fUTBLCOM.AMTH
 set VO(38)=$C(8,66,8,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.TRGRP,1,8)
 set VO(39)=$C(9,25,12,2,0,0,0,0,0,0)_"00F"_$E(fUTBLCOM.CALCFRE,1,12)
 set VO(40)=$C(9,66,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fUTBLCOM.NCALD)
 set VO(41)=$C(10,25,3,2,0,0,0,0,0,0)_"00N"_fUTBLCOM.POSTOFF
 set VO(42)=$C(10,66,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fUTBLCOM.LCALD)
 set VO(43)=$C(11,25,1,2,0,0,0,0,0,0)_"00N"_fUTBLCOM.CMTH
 set VO(44)=$C(11,66,12,2,0,0,0,0,0,0)_"00N"_fUTBLCOM.EXPGL
 set VO(45)=$C(12,25,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.PFT,1,12)
 set VO(46)=$C(12,66,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLCOM.RRP:"Y",1:"N")
 set VO(47)=$C(13,25,12,2,0,0,0,0,0,0)_"00F"_$E(fUTBLCOM.RRFRE,1,12)
 set VO(48)=$C(13,66,8,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.COMRP,1,8)
 set VO(49)=$C(14,25,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.INTQUERY,1,12)
 set VO(50)=$C(14,66,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.QUERY,1,12)
 set VO(51)=$C(15,25,1,2,0,0,0,0,0,0)_"00N"_fUTBLCOM.BALTYP
 set V=$S(fUTBLCOM.CAMT="":"",1:$J(fUTBLCOM.CAMT,0,2)) set VO(52)=$C(18,25,18,2,0,0,0,0,0,0)_"00$"_$S(fUTBLCOM.CAMT="":"",1:$J(fUTBLCOM.CAMT,0,2))
 set VO(53)=$C(18,66,3,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.CRCD,1,3)
 set V=$S(fUTBLCOM.RATE="":"",1:$J(fUTBLCOM.RATE,0,5)) set VO(54)=$C(19,25,8,2,0,0,0,0,0,0)_"00N"_$S(fUTBLCOM.RATE="":"",1:$J(fUTBLCOM.RATE,0,5))
 set VO(55)=$C(19,66,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.CINDEX,1,12)
 set V=$S(fUTBLCOM.CMARG="":"",1:$J(fUTBLCOM.CMARG,0,5)) set VO(56)=$C(20,25,8,2,0,0,0,0,0,0)_"00N"_$S(fUTBLCOM.CMARG="":"",1:$J(fUTBLCOM.CMARG,0,5))
 set VO(57)=$C(20,66,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLCOM.FSAV:"Y",1:"N")
 set VO(58)=$C(21,25,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.RCINDX,1,12)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordUTBLCOMPLN fUTBLCOM)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=27,VPT=1,VPB=21,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLCOMPLN"
 set OLNTB=21025
 
 set VFSN("UTBLCOMPLN")="zfUTBLCOM"
 //
 // 
	
	
 set %TAB(1)=$C(0,24,8)_"21T12401|1|[UTBLCOMPLN]CPLAN"
 set %TAB(2)=$C(1,24,40)_"01T12401|1|[UTBLCOMPLN]DESCR"
 set %TAB(3)=$C(4,24,56)_"00T12420|1|[UTBLCOMPLN]COMCALC|||||||||80"
 set %TAB(4)=$C(5,24,1)_"00L12409|1|[UTBLCOMPLN]ALC|||do VP1^V01S647(.fUTBLCOM)"
 set %TAB(5)=$C(6,24,40)_"00T12422|1|[UTBLCOMPLN]FCALL"
 set %TAB(6)=$C(7,24,1)_"01N12402|1|[UTBLCOMPLN]AMTH|[STBLCOMAMTH]||do VP2^V01S647(.fUTBLCOM)"
 set %TAB(7)=$C(7,65,8)_"00T12426|1|[UTBLCOMPLN]TRGRP|[UTBLTRNGRPT]TRNGRP:DISTINCT||do VP3^V01S647(.fUTBLCOM)"
 set %TAB(8)=$C(8,24,12)_"00F12403|1|[UTBLCOMPLN]CALCFRE|||do VP4^V01S647(.fUTBLCOM)"
 set %TAB(9)=$C(8,65,10)_"00D12414|1|[UTBLCOMPLN]NCALD"
 set %TAB(10)=$C(9,24,3)_"00N12405|1|[UTBLCOMPLN]POSTOFF"
 set %TAB(11)=$C(9,65,10)_"20D12413|1|[UTBLCOMPLN]LCALD"
 set %TAB(12)=$C(10,24,1)_"00N12428|1|[UTBLCOMPLN]CMTH|[STBLCMTH]||do VP5^V01S647(.fUTBLCOM)"
 set %TAB(13)=$C(10,65,12)_"01N12411|1|[UTBLCOMPLN]EXPGL|[GLAD]"
 set %TAB(14)=$C(11,24,12)_"00T12406|1|[UTBLCOMPLN]PFT|[UTBLCOMPFT]||do VP6^V01S647(.fUTBLCOM)"
 set %TAB(15)=$C(11,65,1)_"00L12425|1|[UTBLCOMPLN]RRP"
 set %TAB(16)=$C(12,24,12)_"00F12427|1|[UTBLCOMPLN]RRFRE"
 set %TAB(17)=$C(12,65,8)_"00T12424|1|[UTBLCOMPLN]COMRP|||do VP7^V01S647(.fUTBLCOM)"
 set %TAB(18)=$C(13,24,12)_"00T12433|1|[UTBLCOMPLN]INTQUERY|[DBTBL4]||do VP8^V01S647(.fUTBLCOM)"
 set %TAB(19)=$C(13,65,12)_"00T12421|1|[UTBLCOMPLN]QUERY|[DBTBL4]||do VP9^V01S647(.fUTBLCOM)"
 set %TAB(20)=$C(14,24,1)_"01N12419|1|[UTBLCOMPLN]BALTYP|[STBLCOMBALTP]||do VP10^V01S647(.fUTBLCOM)"
 set %TAB(21)=$C(17,24,18)_"00$12429|1|[UTBLCOMPLN]CAMT|||do VP11^V01S647(.fUTBLCOM)||||2"
 set %TAB(22)=$C(17,65,3)_"00T12432|1|[UTBLCOMPLN]CRCD|[CRCD]|||do VP12^V01S647(.fUTBLCOM)"
 set %TAB(23)=$C(18,24,8)_"00N12404|1|[UTBLCOMPLN]RATE|||||||5"
 set %TAB(24)=$C(18,65,12)_"00T12408|1|[UTBLCOMPLN]CINDEX|[UTBLCOMINDX]"
 set %TAB(25)=$C(19,24,8)_"00N12407|1|[UTBLCOMPLN]CMARG|||||||5"
 set %TAB(26)=$C(19,65,1)_"00L12435|1|[UTBLCOMPLN]FSAV"
 set %TAB(27)=$C(20,24,12)_"00T12434|1|[UTBLCOMPLN]RCINDX|[UTBLRCINDX]"
 do VTBL(.fUTBLCOM)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordUTBLCOMPLN fUTBLCOM) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordUTBLCOMPLN fUTBLCOM) //
 /* If no account level calculations, protect the query,rate comp. index 
    and the commission refund period. 
 */
 
 type public Boolean X

 if 'X do {
 	do DEFAULT^DBSMACRO("UTBLCOMPLN.AMTH","1")
	do PROTECT^DBSMACRO("UTBLCOMPLN.AMTH")
 	do PROTECT^DBSMACRO("UTBLCOMPLN.QUERY")
 	do PROTECT^DBSMACRO("UTBLCOMPLN.INTQUERY")
	do PROTECT^DBSMACRO("UTBLCOMPLN.COMRP")
	do PROTECT^DBSMACRO("UTBLCOMPLN.RCINDX")
 	do DELETE^DBSMACRO("UTBLCOMPLN.QUERY","1","0")
 	do DELETE^DBSMACRO("UTBLCOMPLN.INTQUERY","1","0")
 	do DELETE^DBSMACRO("UTBLCOMPLN.RCINDX","1","0")
 	do DELETE^DBSMACRO("UTBLCOMPLN.COMRP","1","0")
 }
 else  do {
 	do UNPROT^DBSMACRO("UTBLCOMPLN.QUERY")
 	do UNPROT^DBSMACRO("UTBLCOMPLN.INTQUERY")
 	do UNPROT^DBSMACRO("UTBLCOMPLN.COMRP")
	do UNPROT^DBSMACRO("UTBLCOMPLN.AMTH")
	do UNPROT^DBSMACRO("UTBLCOMPLN.RCINDX")
 }

 // If account level calculations, then protect the portfolio
 
 if X do {
 	do PROTECT^DBSMACRO("UTBLCOMPLN.PFT")
 	do DELETE^DBSMACRO("UTBLCOMPLN.PFT","1","0")
 }
 else  do {
	do UNPROT^DBSMACRO("UTBLCOMPLN.PFT")
	do PROTECT^DBSMACRO("UTBLCOMPLN.RCINDX")
	do DELETE^DBSMACRO("UTBLCOMPLN.RCINDX","1","0")
 }
VP2(RecordUTBLCOMPLN fUTBLCOM) //
 type public Number X 

 // If the assessment method is 1 - Frequency, then protect the TRGRP
 
 if X=1 do {
	 do PROTECT^DBSMACRO("UTBLCOMPLN.TRGRP")
	 do DELETE^DBSMACRO("UTBLCOMPLN.TRGRP","1","0")
 }
 else  do {
 	do UNPROT^DBSMACRO("UTBLCOMPLN.TRGRP")
 }
 
 //  If the assessment method is 2 - transaction, then protect CALCFRE
 
 if X=2 do {
	 do PROTECT^DBSMACRO("UTBLCOMPLN.CALCFRE")
	 do PROTECT^DBSMACRO("UTBLCOMPLN.GTBL")
	 do PROTECT^DBSMACRO("UTBLCOMPLN.NCALD")
	 do DELETE^DBSMACRO("UTBLCOMPLN.CALCFRE","1","0")
	 do DELETE^DBSMACRO("UTBLCOMPLN.GTBL","1","0")
	 do DELETE^DBSMACRO("UTBLCOMPLN.NCALD","1","0")
 }
 else  do {
	 do UNPROT^DBSMACRO("UTBLCOMPLN.CALCFRE")
 	 do UNPROT^DBSMACRO("UTBLCOMPLN.GTBL")
	 do UNPROT^DBSMACRO("UTBLCOMPLN.NCALD")
 }
VP3(RecordUTBLCOMPLN fUTBLCOM) //
 type public String X

 // If assessment method is 2, data is required

 if fUTBLCOM.amth=2,X="" do Runtime.setErrMSG("UTBLCOMPLN",741)
VP4(RecordUTBLCOMPLN fUTBLCOM) //
 type String FRE
 type Date JD,NJD
 type Public String RM,X
 type Public Boolean ER

 // If assessment method is 1, data is required
 // Data Required 
 if fUTBLCOM.amth=1,X="" do Runtime.setErrMSG("UTBLCOMPLN",741)
 
 // Call NJD^UFRE to get the next calculation date. 
 if fUTBLCOM.ncald'="" Q       ; Quit if already valued
 
 do DELETE^DBSMACRO("UTBLCOMPLN.NCALD")
 set JD=%SystemDate
 set FRE=X
 set NJD=$$NJD^UFRE(JD,FRE) quit:ER
 do DEFAULT^DBSMACRO("UTBLCOMPLN.NCALD",NJD)
VP5(RecordUTBLCOMPLN fUTBLCOM) //
 /* If the assessment method is 1 - frequency, then only a value of 0 is
  permitted.
 */

 type public Number X

 if X="" set X=0 quit
 
 if fUTBLCOM.amth=1 do {

 // Input is invalid.  Read documentation for detail.
   if X>0 do Runtime.setErrMSG("UTBLCOMPLN",1234)
 }
VP6(RecordUTBLCOMPLN fUTBLCOM) //
 type public String X

 // If account level calculations is 0, data is required
 if fUTBLCOM.alc=0,X="" do Runtime.setErrMSG("UTBLCOMPLN",741)
VP7(RecordUTBLCOMPLN fUTBLCOM) //
 type public String X
 type String ODT,TRM
 set ODT=%CurrentDate_","_%CurrentTime
 set TRM=X
 do ^UMDT
VP8(RecordUTBLCOMPLN fUTBLCOM) //
 type public String X

 // If account level calculations, data is required
 if fUTBLCOM.ALC =1,X="" do Runtime.setErrMSG("UTBLCOMPLN",741)
 if X.find("_") do Runtime.setErrMSG("UTBLCOMPLN",248)
VP9(RecordUTBLCOMPLN fUTBLCOM) //
 type public String X
  
 // If account level calculations, data is required

 if fUTBLCOM.alc=1,X="" do Runtime.setErrMSG("UTBLCOMPLN",741)

 // Alphanumeric format only

 if X.find("_") do Runtime.setErrMSG("UTBLCOMPLN",248)
VP10(RecordUTBLCOMPLN fUTBLCOM) //
 type public Number X

 /* If the assessemnt method is Frequency, then the balance type may not   
    be the Transaction Amount.
 */
 
 // Input is invalid.  Read documentation for detail.
 if X=9,fUTBLCOM.amth=1 do Runtime.setErrMSG("UTBLCOMPLN",1234)

VP11(RecordUTBLCOMPLN fUTBLCOM) //
 type public Number X

 if (X="")!(X=0) do {
 	do PROTECT^DBSMACRO("UTBLCOMPLN.CRCD")
 	do DELETE^DBSMACRO("UTBLCOMPLN.CRCD")
 }
 else  do {
 	do UNPROT^DBSMACRO("UTBLCOMPLN.CRCD")
 }
VP12(RecordUTBLCOMPLN fUTBLCOM) //
 if fUTBLCOM.camt do CHANGE^DBSMACRO("REQ")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLCOMPLN fUTBLCOM
 do VPR(.fUTBLCOM)
 do VDA1(.fUTBLCOM)
 do ^DBSPNT()
 quit

VW(RecordUTBLCOMPLN fUTBLCOM)
 do VDA1(.fUTBLCOM)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLCOMPLN fUTBLCOM)
 do VDA1(.fUTBLCOM)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLCOMPLN fUTBLCOM
 do VDA1(.fUTBLCOM)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLCOMPLN fUTBLCOM
 if sn="UTBLCOMPLN" do vSET1(.fUTBLCOM,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordUTBLCOMPLN fUTBLCOM,di,X)
 do fUTBLCOM.setAuditFlag(1)
 set fUTBLCOM.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordUTBLCOMPLN fUTBLCOM
 if fid="UTBLCOMPLN" quit $$vREAD1(.fUTBLCOM,di)
 quit ""
vREAD1(RecordUTBLCOMPLN fUTBLCOM,di)
 quit fUTBLCOM.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
