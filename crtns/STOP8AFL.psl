STOP8AFL(RecordSTOP8A stop8a, String vpar, Boolean vparNorm) // STOP8A - Document Stops - Territory Level Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:20 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (5)              11/22/2003
	// Trigger Definition (1)                      12/17/2004
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = stop8a.getMode()                      // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(stop8a,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(stop8a,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String DOCTYP = stop8a.doctyp
	type String DOCNUM = stop8a.docnum
	type String SEQ = stop8a.seq
	type String TER = stop8a.ter

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/TRIGBEF/" do VBI                            // Before insert triggers
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("DOCTYP").exists()!vx("DOCNUM").exists()!vx("SEQ").exists()!vx("TER").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("STOP8A",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("STOP8A","DOCTYP = :stop8a.doctyp and DOCNUM = :stop8a.docnum and SEQ = :stop8a.seq and TER = :stop8a.ter") // No record exists
		if vpar["/TRIGBEF/" do VBD                            // Before delete triggers
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String DOCTYP
	type public String DOCNUM
	type public String SEQ
	type public String TER

	type RecordSTOP8A stop8a = Db.getRecord("STOP8A","DOCTYP=:DOCTYP,DOCNUM=:DOCNUM,SEQ=:SEQ,TER=:TER")
	if (%ProcessMode = 2) do {
		do stop8a.setMode(2)

		do STOP8AFL(stop8a,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordSTOP8A stop8a

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("STOP8A","DOCTYP = :stop8a.doctyp and DOCNUM = :stop8a.docnum and SEQ = :stop8a.seq and TER = :stop8a.ter") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(stop8a)) S ^STOP(8,vobj(stop8a,-3),vobj(stop8a,-4),vobj(stop8a,-5),vobj(stop8a,-6))=vobj(stop8a)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordSTOP8A stop8a


	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^STOP(8,vobj(stop8a,-3),vobj(stop8a,-4),vobj(stop8a,-5),vobj(stop8a,-6))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordSTOP8A stop8a

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordSTOP8A stop8a

	if stop8a.doctyp.isNull() do vreqerr("DOCTYP") quit
	if stop8a.docnum.isNull() do vreqerr("DOCNUM") quit
	if stop8a.seq.isNull() do vreqerr("SEQ") quit
	if stop8a.ter.isNull() do vreqerr("TER") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("STOP8A","MSG",1767,"STOP8A."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VBD //
	type public Number ER = 0
	type public String vx(),RM
	do vbd1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VBI //
	type public Number ER = 0
	type public String vx(),RM
	do vbi1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vbi1 // Trigger BEFORE_ACTION - Before Insert/Delete

	do vbd1

	quit

vbd1 // Trigger BEFORE_ACTION - Before Insert/Delete

	type public RecordSTOP8A stop8a
	/*
	---------- Revision History ------------------------------------------
	01/10/00 - CHOK - 31126
		   Fix host variable

	09/20/99 - CARROLLJ - 31126
		   Convert to PSL.
	*/

	// Create STOPLOGT entry
	
	new LSEQ,ZKEY1,ZKEY2,ZPM,ZSEQ,ZTER,ZTJD
	set ZTJD=%SystemDate 
	set ZKEY1=stop8a.doctyp 
	set ZKEY2=stop8a.docnum 
	set ZSEQ=stop8a.seq
	
	// Get last log sequence number
	
	new rs 
	type ResultSet rs=Db.select("LSEQ","STOPLOGA","TJD=:ZTJD AND STPTYP=8 AND KEY1=:ZKEY1 AND KEY2=:ZKEY2 AND SEQ=:ZSEQ","LSEQ DESC") 
	if rs.isEmpty() set LSEQ=1
	else  set LSEQ=rs.next(),LSEQ=rs.getCol(1)+1
	
	// Insert new STOPLOGT entry
	
	set ZTER=stop8a.ter
	set ZPM=%ProcessMode
	do Db.insert("STOPLOGT","TJD,STPTYP,KEY1,KEY2,SEQ,LSEQ,ACTFLG,TER",":ZTJD,8,:ZKEY1,:ZKEY2,:ZSEQ,:LSEQ,:ZPM,:ZTER")
	quit 


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordSTOP8A stop8a

	set X = stop8a.doctyp if 'X.isNull(),'Db.isDefined("UTBLDOCTYP","X") set vRM = $$^MSG(1485,X) do vdderr("DOCTYP", vRM) quit
	if stop8a.docnum.length()>10 set vRM = $$^MSG(1076,10) do vdderr("DOCNUM", vRM) quit
	set X = stop8a.seq if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("SEQ", vRM) quit
	set X = stop8a.ter if 'X.isNull(),'Db.isDefined("UTBLTER","X") set vRM = $$^MSG(1485,X) do vdderr("TER", vRM) quit
	set X = stop8a.dtsend if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("DTSEND", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("STOP8A","MSG",979,"STOP8A."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordSTOP8A stop8a

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("DOCTYP").exists() set vux("DOCTYP") = vx("DOCTYP")
	if vx("DOCNUM").exists() set vux("DOCNUM") = vx("DOCNUM")
	if vx("SEQ").exists() set vux("SEQ") = vx("SEQ")
	if vx("TER").exists() set vux("TER") = vx("TER")
	do vkey(1) set voldkey = stop8a.doctyp_","_stop8a.docnum_","_stop8a.seq_","_stop8a.ter // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = stop8a.doctyp_","_stop8a.docnum_","_stop8a.seq_","_stop8a.ter // Copy new keys into object
	type RecordSTOP8A vnewrec = stop8a.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("STOP8A",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordSTOP8A stop8a

	if vux("DOCTYP").exists() set stop8a.doctyp = vux("DOCTYP").piece("|",i)
	if vux("DOCNUM").exists() set stop8a.docnum = vux("DOCNUM").piece("|",i)
	if vux("SEQ").exists() set stop8a.seq = vux("SEQ").piece("|",i)
	if vux("TER").exists() set stop8a.ter = vux("TER").piece("|",i)
	quit
