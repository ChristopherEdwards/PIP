R01S220	// DBSMDDLST - Master Data Dictionary Listing
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/14/2007 09:23 - chenardp

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number VERIFY
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="DBSMDDLST"
	set RN="Master Data Dictionary Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VERIFY")="|1|||||||L|Verification Report Only|||||"
	set %TAB("VIN3")="|255||[DBTBL1D]MDDFID|[DBTBL1D]MDDFID:DISTINCT:QU ""[DBTBL1D]%LIBS=""SYSDEV""""||D EXT^DBSQRY||T|MDD Name|||||"
	set %TAB("VIN4")="|255||[DBTBL1D]MDD|||D EXT^DBSQRY||T|Master Dictionary Reference|||||"

	set %READ="IO/REQ,VERIFY#0,VIN3#0,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number VERIFY
	type public String VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,MDDDEC,MDDDESC,MDDFDES,MDDLEN,MDDTYPE,RID,RN,VERCNT,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verify,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSMDDLST",RN="Master Data Dictionary Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","DBSMDDLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DBTBL1D]FID#3#25,[DBTBL1D]DI#30#20,[DBTBL1D]DES#51#40,[DBTBL1D]TYP#94#1,[DBTBL1D]LEN#98#4,[DBTBL1D]DEC#108#2"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DBTBL1D]%LIBS = ""SYSDEV""",SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DBTBL1D]MDDFID "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DBTBL1D]MDD "_VIN4,SEQ=SEQ+1
		set DQQRY(SEQ)="[DBTBL1D]MDDFID '= """"",SEQ=SEQ+1
		set DQQRY(SEQ)="[DBTBL1D]MDD '= """"",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DBTBL1D") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",3)="WC2|"_"MDD Name"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Master Dictionary Reference"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Master Data Dictionary Listing"
		set VBNRINFO("PGM")="R01S220"
		set VBNRINFO("RID")="DBSMDDLST"
		set VBNRINFO("TABLES")="DBTBL1D"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DBTBL1D]%LIBS"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DBTBL1D]""MDD"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DBTBL1D]MDDFID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DBTBL1D]MDD"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DBTBL1D]FID"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,DBTBL1D]DI"

		set VBNRINFO("DOC",1)="The DBSMDDLST report lists all data items linked to (or referencing) the data"
		set VBNRINFO("DOC",2)="items in the master data dictionary."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DBTBL1D.%LIBS,DBTBL1D.MDDFID,DBTBL1D.MDD,DBTBL1D.F"
	set VSELECT=VSELECT_"ID,DBTBL1D.DI,DBTBL1D.DES,DBTBL1D.TYP,DBTBL1D.LEN,"
	set VSELECT=VSELECT_"DBTBL1D.DEC"

	#ACCEPT DATE=09/14/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBTBL1D",VWHERE,"DBTBL1D.%LIBS,DBTBL1D.MDDFID,DBTBL1D.MDD,DBTBL1D.FID,DBTBL1D.DI","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
	set vc1=V.piece($C(9),1)			// DBTBL1D.%LIBS
	set vc2=V.piece($C(9),2)			// DBTBL1D.MDDFID
	set vc3=V.piece($C(9),3)			// DBTBL1D.MDD
	set vc4=V.piece($C(9),4)			// DBTBL1D.FID
	set vc5=V.piece($C(9),5)			// DBTBL1D.DI
	set vc6=V.piece($C(9),6)			// DBTBL1D.DES
	set vc7=V.piece($C(9),7)			// DBTBL1D.TYP
	set vc8=V.piece($C(9),8)			// DBTBL1D.LEN
	set vc9=V.piece($C(9),9)			// DBTBL1D.DEC
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type Public String VERCNT

	set VERCNT=0
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG5 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(vovc3'=vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(vovc4'=vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VHDG5	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,IOSL,MDDDEC,MDDDESC,MDDFDES,MDDLEN,MDDTYPE,RID,RN,V,VERCNT,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verify,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="      "_$E(vc3,1,12)
	do VP1 quit:VFMQ!verror.get()  set V=$E(MDDDESC,1,40)
	set VL=VL_$J("",50-VL.length())_V
	set VL=VL_$J("",93-VL.length())_$E(MDDTYPE,1,1)
	set VL=VL_$J("",97-VL.length())_$J(MDDLEN,4)
	set VL=VL_$J("",107-VL.length())_$J(MDDDEC,2)
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,IOSL,MDDDEC,MDDDESC,MDDFDES,MDDLEN,MDDTYPE,V,VD(),VERCNT,VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verify,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "_$E(vc4,1,25)
	set VL=VL_$J("",29-VL.length())_$E(vc5,1,20)
	set VL=VL_$J("",50-VL.length())_$E(vc6,1,40)
	set VL=VL_$J("",93-VL.length())_$E(vc7,1,1)
	set VL=VL_$J("",97-VL.length())_$J(vc8,4)
	set VL=VL_$J("",107-VL.length())_$J(vc9,2)
	do VP2 quit:VFMQ!verror.get()  set V=$E(verify,1,1)
	set VL=VL_$J("",114-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,MDDDEC,MDDDESC,MDDFDES,MDDLEN,MDDTYPE,RID,RN,VERCNT,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verify,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL=" "_"MDD Name:"
	set VL=VL_$J("",12-VL.length())_$E(vc2,1,12)
	do VP3 quit:VFMQ!verror.get()  set V=$E(MDDFDES,1,40)
	set VL=VL_$J("",27-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="      "_"MDD Reference"
	do VOM
	set VL="  "_"File Name                  Data Item            Description                             Type  Length    Dec     Error Flag"
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,MDDDEC,MDDDESC,MDDFDES,MDDLEN,MDDTYPE,VERCNT,VPN,verify,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                                                      "_"Total Verification Errors: "
	set VL=VL_$J("",114-VL.length())_$J(VERCNT,5)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: MDDDESC

	type public String vc3,vc2
	type public Number MDDDEC, MDDLEN
	type public String MDDDESC, MDDTYPE

	type String MDD, MDDFID

	set MDD = vc3
	set MDDFID = vc2

	type RecordDBTBL1D dbtbl1d = Db.getRecord("DBTBL1D", "%LIBS='SYSDEV',FID=:MDDFID,DI=:MDD", 1)

	set MDDDEC = dbtbl1d.dec
	set MDDDESC = dbtbl1d.des
	set MDDLEN = dbtbl1d.len
	set MDDTYPE = dbtbl1d.typ

	quit

VP2	// Column pre-processor - Variable: verify

	type public String vc6,vc8,vc7,vc9
	type public Boolean VERIFY
	type public Number MDDDEC, MDDLEN, VERCNT
	type public String MDDDESC, MDDTYPE, verify, VL

	set verify = "*"
	if MDDDESC = vc6, MDDLEN = vc8, MDDTYPE = vc7, MDDDEC = vc9 do {
		set verify = ""
		if VERIFY.get() set VL = ""	// Suppress print line
	}
	else  do {

		set verify = "*"
		set VERCNT = VERCNT + 1
	}

	quit 

VP3	// Column pre-processor - Variable: MDDFDES

	type public String vc2
	type public String MDDFDES

	type String MDDFID

	set MDDFID = vc2

	type RecordDBTBL1 dbtbl1 = Db.getRecord("DBTBL1", "%LIBS='SYSDEV',FID=:MDDFID", 1)

	set MDDFDES = dbtbl1.des

	quit
