R01S056	// IRATRAN - Retirement Account Transaction Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date BJD=%SystemDate-6
	type Number CIDB
	type Number CIDE
	type Date EJD=%SystemDate
	type Number OFF=0

	set RID="IRATRAN"
	set RN="Retirement Account Transaction Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("BJD")="|12|||||||D|Transaction from Sunday|||||"
	set %TAB("CIDB")="|12|||||||N|Account Begin|||||"
	set %TAB("CIDE")="|12|||||I (X<CIDB) S ER=1,RM=$$^MSG(898)||N|Account End|||||"
	set %TAB("EJD")="|12|||||||D|Transaction to Saturday|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("OFF")="|1|||||||L|Offline transactions only|||||"

	set %READ="IO/REQ,CIDB#0,CIDE#1,BJD#0,EJD#0,OFF#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date BJD,EJD
	type public Number CIDB,CIDE,OFF
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,AVAR,AVAR3,AVAR4,AVAR41,AVAR411,AVAR5,CONAM,ETCDESC,OL,RID,RN,TAMT,TSODESC,VL,VLOF,VRF(),VSTATS(),Z2,Z3,Z4,Z41,Z5,vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="IRATRAN",RN="Retirement Account Transaction Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","IRATRAN","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"((DEP.CID>:CIDB OR DEP.CID=(:CIDB))) AND ((DEP.CID"
		set VWHERE=VWHERE_"<:CIDE OR DEP.CID=(:CIDE))) AND DEP.IRA>0 AND HIST"
		set VWHERE=VWHERE_".TJD NOT <:BJD AND HIST.TJD NOT >:EJD AND HIST.ITC"
		set VWHERE=VWHERE_" IS NOT NULL AND HIST.ETC IS NOT NULL AND (HIST.IT"
		set VWHERE=VWHERE_"C10=0 OR (HIST.ITC10=:OFF AND HIST.ITC10=HIST.ITC1"
		set VWHERE=VWHERE_"0))"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Retirement Account Transaction Report"
		set VBNRINFO("PGM")="R01S056"
		set VBNRINFO("RID")="IRATRAN"
		set VBNRINFO("TABLES")="HIST,DEP"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,HIST]CID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,HIST]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("HIST.CID,HIST.TSEQ,DEP.TITLE1,HIST.TJD,DEP.BOO,HIST.UID,HIST.TRC,HIST.ETC,HIST.TAMT,HIST.ITC,HIST.TSO","HIST,DEP","((DEP.CID>:CIDB OR DEP.CID=(:CIDB))) AND ((DEP.CID<:CIDE OR DEP.CID=(:CIDE))) AND DEP.IRA>0 AND HIST.TJD NOT <:BJD AND HIST.TJD NOT >:EJD AND HIST.ITC IS NOT NULL AND HIST.ETC IS NOT NULL AND (HIST.ITC10=0 OR (HIST.ITC10=:OFF AND HIST.ITC10=HIST.ITC10))","HIST.CID,HIST.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece($C(9),1)			// HIST.CID
	set vc2=V.piece($C(9),2)			// HIST.TSEQ
	set vc3=V.piece($C(9),3)			// DEP.TITLE1
	set vc4=V.piece($C(9),4)			// HIST.TJD
	set vc5=V.piece($C(9),5)			// DEP.BOO
	set vc6=V.piece($C(9),6)			// HIST.UID
	set vc7=V.piece($C(9),7)			// HIST.TRC
	set vc8=V.piece($C(9),8)			// HIST.ETC
	set vc9=V.piece($C(9),9)			// HIST.TAMT
	set vc10=V.piece($C(9),10)			// HIST.ITC
	set vc11=V.piece($C(9),11)			// HIST.TSO
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG2 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VHDG2	// Group Header
	type public String %MSKD,%TIM,AVAR,AVAR3,AVAR4,AVAR41,AVAR411,AVAR5,CONAM,ER,ETCDESC,IOSL,OL,RID,RN,TAMT,TSODESC,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,Z2,Z3,Z4,Z41,Z5,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	quit:vh(2)  set vh(2)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="*** Account"
	set VL=VL_$J("",12-VL.length())_$J(vc1,12)
	set VL=VL_$J("",27-VL.length())_$E(vc3,1,40)
	do VOM
	set VL="" do VOM
	quit

VDTL2	// Detail
	type public String %TIM,AVAR,AVAR3,AVAR4,AVAR41,AVAR411,AVAR5,ETCDESC,IOSL,OL,TAMT,TSODESC,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),Z2,Z3,Z4,Z41,Z5,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL=$J($$DAT^%ZM(vc4),10)
	set VL=VL_$J("",11-VL.length())_$J(vc2,4)
	do VP1 quit:VFMQ!verror.get()  set V=$E(ETCDESC,1,20)
	set VL=VL_$J("",16-VL.length())_V
	set V=vc9,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),10)
	set VL=VL_$J("",39-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$E(TSODESC,1,40)
	set VL=VL_$J("",50-VL.length())_V
	set VL=VL_$J("",91-VL.length())_$J(vc5,4)
	set VL=VL_$J("",96-VL.length())_$E(vc6,1,16)
	set VL=VL_$J("",113-VL.length())_$J(vc7,15)
	do VP4 quit:VFMQ!verror.get()  set V=$E(OL,1,1)
	set VL=VL_$J("",130-VL.length())_V
	do VOM
	do VP5 quit:VFMQ!verror.get()  set V=$J($FN(AVAR,",",2),10) set VL="                                       "_V
	set VL=VL_$J("",65-VL.length())_"Principal         "
	do VP6 quit:VFMQ!verror.get()  set V=$E(Z2,1,1)
	set VL=VL_$J("",83-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                       "_$J($FN(AVAR3,",",2),10)
	set VL=VL_$J("",65-VL.length())_"Int/Div"
	do VP7 quit:VFMQ!verror.get()  set V=$E(Z3,1,1)
	set VL=VL_$J("",83-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                       "_$J($FN(AVAR4,",",2),10)
	set VL=VL_$J("",65-VL.length())_"Penalty           "
	do VP8 quit:VFMQ!verror.get()  set V=$E(Z4,1,1)
	set VL=VL_$J("",83-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                       "_$J($FN(AVAR41,",",2),10)
	set VL=VL_$J("",65-VL.length())_"TFR-  "
	set VL=VL_$J("",78-VL.length())_$E(AVAR411,1,20)
	do VP9 quit:VFMQ!verror.get()  set V=$E(Z41,1,1)
	set VL=VL_$J("",101-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                       "_$J($FN(AVAR5,",",2),10)
	set VL=VL_$J("",65-VL.length())_"B/Withholding     "
	do VP10 quit:VFMQ!verror.get()  set V=$E(Z5,1,1)
	set VL=VL_$J("",83-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AVAR,AVAR3,AVAR4,AVAR41,AVAR411,AVAR5,CONAM,ETCDESC,OL,RID,RN,TAMT,TSODESC,VL,Z2,Z3,Z4,Z41,Z5,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",98-VL.length())_"Run Date:"
	set VL=VL_$J("",108-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_" ("_RID_")"
	set VL=VL_$J("",100-VL.length())_"System:"
	set VL=VL_$J("",108-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Date      SEQ # Transaction                Amount Source                                 Branch  USER            SEQ            O/L"
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: ETCDESC

	type public String vc8
 type public String ETCDESC
 type String ZETC

 if vc8.isNull() set ETCDESC="" quit
 
 set ZETC=vc8
 type RecordTRN trn=Db.getRecord("TRN","ETC=:ZETC")
 set ETCDESC=trn.des
	quit

VP2	// Column pre-processor - Variable: TAMT

	type public String vc9
 type public Number TAMT

 set TAMT=+(vc9)
	quit

VP3	// Column pre-processor - Variable: TSODESC

	type public String vc10,vc11
 type public String TSODESC
 type String DC,UTSO()
 
 if vc10.extract() set DC="IRACON"
 else  set DC="IRADIS"
 
 set TSODESC=vc11
 
 if 'TSODESC.isNull() do {
	
	type Number Y
	
	kill UTSO set UTSO="" do OUT^UTSO(.UTSO,TSODESC)
	
	set Y=+(UTSO(DC.extract(1,4)).get())

	if DC="IRACON" do {
		if Db.isDefined("UTBLIRACON","KEY=:Y") do {
			type RecordUTBLIRACON iracon=Db.getRecord("UTBLIRACON","KEY=:Y")
			set TSODESC=iracon.desc
			}
		}
	else  do {
		if Db.isDefined("UTBLIRADIS","KEY=:Y") do {
			type RecordUTBLIRADIS iradis=Db.getRecord("UTBLIRADIS","KEY=:Y")
			set TSODESC=iradis.desc
			}
		}
	}
	quit

VP4	// Column pre-processor - Variable: OL

	type public String vc10
 type public String OL
 set OL=""
 if (vc10).extract(10) set OL="Y"
	quit

VP5	// Column pre-processor - Variable: AVAR

	type public String vc9
 type public Number AVAR,AVAR3,AVAR4,AVAR41,AVAR411,AVAR5
 type public Number Z2,Z3,Z4,Z41,Z5

 type Number PC
 type String A,histtamt
 type Boolean flag

 set Z2=0,Z3=0,Z4=0,Z41=0,Z5=0
 set (AVAR,AVAR3,AVAR4,AVAR41,AVAR411,AVAR5)=0

 set flag=0

 set histtamt=vc9

 for PC=2:1 do { quit:flag

	set A=histtamt.piece("#",PC)
	if +A=0 do { quit
		if ((histtamt.piece("#",PC+1,99)).isNull()) set flag=1 
		} 
	if PC=2 set AVAR=+A,Z2=1
	else  if PC=3 set AVAR3=+A,Z3=1
	else  if PC=4 set AVAR4=+A,Z4=1
	else  if A["-" set AVAR41=+A,AVAR411=A.piece("-",2,9),Z41=1
	else  if PC=5 set AVAR5=+A,Z5=1
	}
	quit

VP6	// Column pre-processor - Variable: Z2

 type public Number Z2
 type public String VL

 if Z2=0 set VL=""
 set Z2=""
	quit

VP7	// Column pre-processor - Variable: Z3

 type public Number Z3
 type public String VL
 
 if Z3=0 set VL=""
 set Z3=""
	quit

VP8	// Column pre-processor - Variable: Z4

 type public Number Z4
 type public String VL
 
 if Z4=0 set VL=""
 set Z4=""
	quit

VP9	// Column pre-processor - Variable: Z41

 type public Number Z41
 type public String VL

 if Z41=0 set VL=""
 set Z41=""
	quit

VP10	// Column pre-processor - Variable: Z5

 type public Number Z5
 type public String VL

 if Z5=0 set VL=""
 set Z5=""
	quit
