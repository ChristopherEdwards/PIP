IRSO99M		/*
	ORIG: Laura Hillanbrand
	DESC: IRS Processing - Form 1099-MISC Original
	I18N=QUIT: Excluded from I18N standards.

	---- Comments --------------------------------------------------------
	======================================================================
		*** THIS ROUTINE IS TO BE COMPILED WITH IRSTPMTR ***
		     *** DO NOT RUN THIS ROUTINE STANDALONE ***
	======================================================================
	
	---- Revision History ------------------------------------------------
	
	05/15/05 - TITOVE - CR 21132
		   Modified ARECBLD to correct misspelled description.

	05/08/06 - Mugilvannan - 21135
		   Modified section ARECBLD to set AMTIND="12345678ABC" 
		   instead of "47A" to display the same in Record "A".
		
	04/03/06 - SWARNALP - 20551
		   Modified BRECBLD section to modify the first while loop 
		   to pick up the distinct TAXID from M1099 table to avoid 
		   Unique Constraint Violation error in oracle.	

	09/26/05 - HAILEYM - CR17143
		   Converted to PSL.
		
	*/
	
	// Accept "Dead code" warning during runtime of @IRSTAPE.
	#ACCEPT Date=10/14/2005;PGM=Marie Hailey;CR=17143
	quit
	
	
MTRCNTRL	// Master control

	type public Boolean ER
	type public Number FAMT(),FCNT
	
	type Number I
	
	set FCNT=""
	for I=1:1:9,"A","B","C" set FAMT(I)=""

	do Db.fastDelete("B1099M")

	do ARECBLD quit:ER	// Build and write the "A" record
	do BRECBLD quit:ER	// Build and write the "B" records Debt Cancelled
	do CRECBLD quit:ER	// Build and write the "C" record
	do STORETOT		// Store the TTR report totals
	quit
	

ARECBLD	// "A" record builder

	type public String TAMT()
	
	type String AMTIND,FORMCODE
	
	set FORMCODE="A"		// IRS form code
	set AMTIND="12345678ABC"	// IRS amount type indicator
	
	set TAMT(1).piece("|",2)="Rents" 
        set TAMT(2).piece("|",2)="Royalties" 
        set TAMT(3).piece("|",2)="Other Income" 
        set TAMT(4).piece("|",2)="Federal Income Tax Withheld" 
        set TAMT(5).piece("|",2)="Fishing Boat Proceeds" 
        set TAMT(6).piece("|",2)="Medical and Health Care Payments" 
        set TAMT(7).piece("|",2)="Nonemployee Compensation" 
        set TAMT(8).piece("|",2)="Substitute Payments in lieu of Dividends or Interest" 
        set TAMT("A").piece("|",2)="Crop Insurance Proceeds" 
        set TAMT("B").piece("|",2)="Excess Golden Parachute Payments" 
        set TAMT("C").piece("|",2)="Gross proceeds paid to an attorney in connection with legal services"
        
	do ARECWRT	// Write the record to tape
	quit
	
	
BRECBLD	// "B" record builder
	// Cancellation of Debt Transactions

	type public Date BEGYR,ENDYR
	type public Number AMT(),CUTOFF,FAMT(),FCNT
	
	type Boolean BFLAG
	type Number AMT1,AMT2,AMT3,AMT4,AMT5,AMT6,AMT7,AMT8,AMTA,AMTB,AMTC
	type String ADDR,CID,CITY,CNTRY,CORRTN,DOCCODE,FORCNTY,FULLADDR,I,LNAME
	type String NAME,SPECIAL,STATE,TIN,TINTYPE,X,XTIN,ZIP
	
	type RecordB1099M b1099m
	type RecordM1099 m1099
	type ResultSet rs
	
	set DOCCODE="  "	// Document specific code
	set CORRTN=" "		// Corrected return indicator
	
	// Special date position 544-750
	//; Blank|544|662
	set SPECIAL="".justify(119)
	//; Special data entries|663|722
	set SPECIAL=SPECIAL_"".justify(60)
	//; State Income Tax Withheld|723|734
	set SPECIAL=SPECIAL_"".justify(12,,0)
	//; Local Income Tax Withheld|735|746
	set SPECIAL=SPECIAL_"".justify(12,,0)
	//; Combined Federal/State Code |747|748
	set SPECIAL=SPECIAL_"".justify(2)
	//; Blank|749|750
	set SPECIAL=SPECIAL_"".justify(2)
	
	set b1099m=Class.new("RecordB1099M")
	set b1099m.pdate=CUVAR.TJD
	
	set rs=Db.select("DISTINCT TAXID","M1099","FORMTYP=4")
	while rs.next() do {
		set TIN=rs.getCol(1)

		for I=1:1:9,"A","B","C" set AMT(I)=0
	
		set TINTYPE=$select(TIN?2N1"-"7N:1,TIN?3N1"-"2N1"-"4N:2,1:" ")
		set XTIN=TIN.piece("|",1).translate(" ","-")
		set CID=TIN
		
		set b1099m.btaxid=XTIN
		set b1099m.btintype=TINTYPE
		set b1099m.btin=XTIN
		
		type DbSet ds=Db.selectDbSet("M1099","TAXID=:TIN AND FORMTYP=4")
		while ds.next() do {
			set m1099=ds.getRecord("M1099")
			
			if m1099.td<BEGYR!(m1099.td>ENDYR) quit	// Wrong Year
			
			set AMT(1)=AMT(1)+(m1099.rent*100)		// Rent 
			set AMT(2)=AMT(2)+(m1099.royalty*100)		// Royalties
			set AMT(3)=AMT(3)+(m1099.othinc*100)		// Other Income
			set AMT(4)=AMT(4)+(m1099.intwh*100)		// Tax withheld
			set AMT(5)=AMT(5)+(m1099.fishboat*100)		// Fishin Boat Proceeds
			set AMT(6)=AMT(6)+(m1099.medpymnt*100)		// Medical & Health Care Payments
			set AMT(7)=AMT(7)+(m1099.int*100)		// Non Employee Compensation
			set AMT(8)=AMT(8)+(m1099.subpay*100)		// Substitute pymnts
			set AMT("A")=AMT("A")+(m1099.cropins*100)	// Crop Insurance
			set AMT("B")=AMT("B")+(m1099.goldpara*100)	// Excess Golden Parachute
			set AMT("C")=AMT("C")+(m1099.gppls*100)		// Gross Proceeds paid to Attorney
			
			set AMT1=AMT(1)/100
			set AMT2=AMT(2)/100
			set AMT3=AMT(3)/100
			set AMT4=AMT(4)/100
			set AMT5=AMT(5)/100
			set AMT6=AMT(6)/100
			set AMT7=AMT(7)/100
			set AMT8=AMT(8)/100
			set AMTA=AMT("A")/100
			set AMTB=AMT("B")/100
			set AMTC=AMT("C")/100
		
			// Inserting B records into B1099M File
			if TINTYPE=2 set X=m1099.lnam
			else  set X=m1099.nam
			do NAMCNTRL^IRSTPMTR set b1099m.bnamcon=X
			
			if b1099m.getMode() do b1099m.setMode(0)
			set b1099m.bseq=m1099.seq
			set b1099m.bamt1=AMT1
			set b1099m.bamt2=AMT2
			set b1099m.bamt3=AMT3
			set b1099m.bamt4=AMT4
			set b1099m.bamt5=AMT5
			set b1099m.bamt6=AMT6
			set b1099m.bamt7=AMT7
			set b1099m.bamt8=AMT8
			set b1099m.bamta=AMTA
			set b1099m.bamtb=AMTB
			set b1099m.bamtc=AMTC
			set b1099m.bname=m1099.nam
			set b1099m.baddr1=m1099.ad1
			set b1099m.baddr2=m1099.ad2
			set b1099m.baddr3=m1099.ad3
			set b1099m.bcity=m1099.city
			set b1099m.bstate=m1099.state
			set b1099m.bzip=m1099.mzip
			do b1099m.bypassSave()
			}
			
		if AMT(4)<CUTOFF quit
	
		set BFLAG=0
		set I="" for  set I=$O(AMT(I)) quit:I.isNull()!BFLAG  if AMT(I) set BFLAG=1
		if 'BFLAG quit
		
		// Use the demographic data from the last sequence.
		set NAME=m1099.nam
		set LNAME=m1099.lnam
		set FULLADDR=m1099.ad1_"|"_m1099.ad2_"|"_m1099.ad3_"|"_m1099.city_"|"_m1099.state_"|"_m1099.mzip
		set ADDR=m1099.ad1_" "_m1099.ad2_" "_m1099.ad3
		set CITY=m1099.city
		set STATE=m1099.state
		set ZIP=m1099.mzip.piece("-",1)_m1099.mzip.piece("-",2)
		set CNTRY=m1099.cntry
		set FORCNTY=$select(CNTRY="US":" ",1:1)	// Foreign country indicator
		do BRECWRT
		
		// Calculate number of records and tax form report totals.
		set FCNT=FCNT+1
		set FAMT(1)=FAMT(1)+AMT1	// Rent
		set FAMT(2)=FAMT(2)+AMT2	// Royalties
		set FAMT(3)=FAMT(3)+AMT3	// Other income
		set FAMT(4)=FAMT(4)+AMT4	// Tax Withheld
		set FAMT(5)=FAMT(5)+AMT5	// Fishing Boat Proceeds
		set FAMT(6)=FAMT(6)+AMT6	// Medical and Health Care Payments
		set FAMT(7)=FAMT(7)+AMT7	// Non Employee Compensation
		set FAMT(8)=FAMT(8)+AMT8	// Substitute Pymnts in lieu of Div or Int.
		set FAMT("A")=FAMT("A")+AMTA	// Crop insurance
		set FAMT("B")=FAMT("B")+AMTB	// Excess Golden Parachute
		set FAMT("C")=FAMT("C")+AMTC	// Gross Proceeds paid to an Attorney
		}
	quit
	
	
CRECBLD	// "C" record builder
	
	do CRECWRT	// Write the record to tape
	quit


%STOPLOD	// Stop %ZRTNLOD from this point on down

	quit
	
	
TRECWRT		// Dummy line reference for GT.M

	quit
	

ARECWRT		// Dummy line reference for GT.M

	quit
	
	
BRECWRT		// Dummy line reference for GT.M

	quit
	
	
CRECWRT		// Dummy line reference for GT.M

	quit
	
	
STORETOT	// Dummy line reference for GT.M

	quit

vSIG()	quit "60399^59192^Eugene Titov^7228"	// Signature - LTD^TIME^USER^SIZE
