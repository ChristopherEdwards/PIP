V00S244(%ProcessMode,RecordEFTPAY fEFTPAY,RecordDEP DEP)   // -  - SID= <INTSFPBR20> Standing Foreign Payment Screen 2
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:25 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="INTSFPBR20",VPGM=$T(+0),VSNAME="Standing Foreign Payment Screen 2"
 set VFSN("DEP")="zDEP",VFSN("EFTPAY")="zfEFTPAY"
 set vPSL=1
 set KEYS(1)=DEP.CID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fEFTPAY,.DEP),VDA1(.fEFTPAY,.DEP),^DBSPNT()

 if '%ProcessMode do VNEW(.fEFTPAY,.DEP),VPR(.fEFTPAY,.DEP),VDA1(.fEFTPAY,.DEP)
 if %ProcessMode do VLOD(.fEFTPAY,.DEP) quit:$G(ER)  do VPR(.fEFTPAY,.DEP),VDA1(.fEFTPAY,.DEP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEFTPAY,.DEP)
	quit


VNEW(RecordEFTPAY fEFTPAY,RecordDEP DEP) // Initialize arrays if %O=0
 
 do VDEF(.fEFTPAY,.DEP)
 do VLOD(.fEFTPAY,.DEP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordEFTPAY fEFTPAY,RecordDEP DEP)
 if fEFTPAY.DATECRE="" set fEFTPAY.DATECRE=TJD
 if fEFTPAY.TIMECRE="" set fEFTPAY.TIMECRE=$P($H,",",2)
 if fEFTPAY.UID="" set fEFTPAY.UID=%UID
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordEFTPAY fEFTPAY,RecordDEP DEP) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEFTPAY fEFTPAY,RecordDEP DEP) // Display screen prompts
 set VO="20||13|0"
 set VO(0)="|"
 set VO(1)=$C(3,8,16,0,0,0,0,0,0,0)_"01T Account Number:"
 set VO(2)=$C(3,51,10,0,0,0,0,0,0,0)_"01T Sequence:"
 set VO(3)=$C(4,11,13,0,0,0,0,0,0,0)_"01T Branch Code:"
 set VO(4)=$C(4,53,8,0,0,0,0,0,0,0)_"01T Status:"
 set VO(5)=$C(7,4,20,1,0,0,0,0,0,0)_"01T Customer Reference:"
 set VO(6)=$C(7,49,12,1,0,0,0,0,0,0)_"01TCost Center:"
 set VO(7)=$C(8,2,22,1,0,0,0,0,0,0)_"01T Fee Calc Method/Plan:"
 set VO(8)=$C(8,45,16,1,0,0,0,0,0,0)_"01T Conversion Fee:"
 set VO(9)=$C(9,6,18,1,0,0,0,0,0,0)_"01T Margin/Rate Code:"
 set VO(10)=$C(9,43,18,1,0,0,0,0,0,0)_"01T Payment Priority:"
 set VO(11)=$C(10,8,16,1,0,0,0,0,0,0)_"01T Payment Method:"
 set VO(12)=$C(10,42,19,1,0,0,0,0,0,0)_"01T Charge Detail(71):"
 set VO(13)=$C(12,6,18,1,0,0,0,0,0,0)_"01T Payment Currency:"
 set VO(14)=$C(12,37,24,0,0,0,0,0,0,0)_"01T Amount in Payment Curr:"
 set VO(15)=$C(13,4,20,0,0,0,0,0,0,0)_"01T Account's Currency:"
 set VO(16)=$C(13,37,24,0,0,0,0,0,0,0)_"01T Amount in Account Curr:"
 set VO(17)=$C(15,12,12,1,0,0,0,0,0,0)_"01T DS1 Symbol:"
 set VO(18)=$C(16,12,12,1,0,0,0,0,0,0)_"01T DS2 Symbol:"
 set VO(19)=$C(17,7,17,0,0,0,0,0,0,0)_"01T Constant Symbol:"
 set VO(20)=$C(19,3,21,0,0,0,0,0,0,0)_"01TBranch to HQ Message:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordEFTPAY fEFTPAY,RecordDEP DEP)  // Display screen data
 new V
 //
 set VO="43|21|13|0"
 set VO(21)=$C(1,1,80,3,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(22)=$C(3,25,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.CID
 set VO(23)=$C(3,62,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.SEQ
 set VO(24)=$C(4,25,6,2,0,0,0,0,0,0)_"01N"_fEFTPAY.BRCD
 set VO(25)=$C(4,62,3,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.STATUS,1,3)
 set VO(26)=$C(4,66,12,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.STATDSC,1,12)
 set VO(27)=$C(7,25,16,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.RELREFNO,1,16)
 set VO(28)=$C(7,62,6,2,0,0,0,0,0,0)_"00N"_fEFTPAY.CC
 set VO(29)=$C(8,25,12,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.FEETYPE,1,12)
 set VO(30)=$C(8,62,1,2,0,0,0,0,0,0)_"00L"_$S(fEFTPAY.FEECONV:"Y",1:"N")
 set VO(31)=$C(9,25,12,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CCODE,1,12)
 set VO(32)=$C(9,62,3,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.PRI2,1,3)
 set VO(33)=$C(10,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.MET,1,10)
 set VO(34)=$C(10,62,3,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.FEEPAYOR,1,3)
 set VO(35)=$C(12,25,3,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CRCD,1,3)
 set V=$S(fEFTPAY.AMOUNT="":"",1:$J(fEFTPAY.AMOUNT,0,2)) set VO(36)=$C(12,62,15,2,0,0,0,0,0,0)_"00$"_$S(fEFTPAY.AMOUNT="":"",1:$J(fEFTPAY.AMOUNT,0,2))
 set VO(37)=$C(13,25,3,2,0,0,0,0,0,0)_"01T"_$E(DEP.CRCD,1,3)
 set V=$S(fEFTPAY.ANTAMT="":"",1:$J(fEFTPAY.ANTAMT,0,2)) set VO(38)=$C(13,62,15,2,0,0,0,0,0,0)_"00$"_$S(fEFTPAY.ANTAMT="":"",1:$J(fEFTPAY.ANTAMT,0,2))
 set VO(39)=$C(15,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CONSNDPO,1,10)
 set VO(40)=$C(16,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.VARNDPO,1,10)
 set VO(41)=$C(17,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CONSTANT,1,10)
 set VO(42)=$C(19,25,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.BRHQMSG1,1,35)
 set VO(43)=$C(20,25,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.BRHQMSG2,1,35)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordEFTPAY fEFTPAY,RecordDEP DEP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=22,VPT=1,VPB=20,PGM=$T(+0),DLIB="SYSDEV",DFID="EFTPAY"
 set OLNTB=20025
 
 set VFSN("DEP")="zDEP",VFSN("EFTPAY")="zfEFTPAY"
 //
 // 
	
	
 set %TAB(1)=$C(2,24,12)_"21N12401|1|[EFTPAY]CID"
 set %TAB(2)=$C(2,61,12)_"21N12402|1|[EFTPAY]SEQ|[EFTPAY]"
 set %TAB(3)=$C(3,24,6)_"20N12425|1|[EFTPAY]BRCD|[UTBLBRCD]"
 set %TAB(4)=$C(3,61,3)_"21T12412|1|[EFTPAY]STATUS|[STBLESTAT]"
 set %TAB(5)=$C(3,65,12)_"21T12400|*STATDSC|[EFTPAY]STATDSC|||||||||15"
 set %TAB(6)=$C(6,24,16)_"01T12403|1|[EFTPAY]RELREFNO"
 set %TAB(7)=$C(6,61,6)_"01N12411|1|[EFTPAY]CC|[UTBLCCNTR]"
 set %TAB(8)=$C(7,24,12)_"01T12402|1|[EFTPAY]FEETYPE|[EFTFEE]"
 set %TAB(9)=$C(7,61,1)_"00L12429|1|[EFTPAY]FEECONV"
 set %TAB(10)=$C(8,24,12)_"01T12448|1|[EFTPAY]CCODE|[UTBLCC]||do VP1^V00S244(.fEFTPAY,.DEP)"
 set %TAB(11)=$C(8,61,3)_"01T12449|1|[EFTPAY]PRI2|[STBLPRIORITY]"
 set %TAB(12)=$C(9,24,10)_"01T12413|1|[EFTPAY]MET|[STBLPAYMET]"
 set %TAB(13)=$C(9,61,3)_"01T12416|1|[EFTPAY]FEEPAYOR|[STBLFEEPAYOR]"
 set %TAB(14)=$C(11,24,3)_"01T12404|1|[EFTPAY]CRCD|[CRCD]:QU ""[CRCD]CO=<<%CO>>""||do VP2^V00S244(.fEFTPAY,.DEP)"
 set %TAB(15)=$C(11,61,15)_"00$12403|1|[EFTPAY]AMOUNT|||do VP3^V00S244(.fEFTPAY,.DEP)||||2"
 set %TAB(16)=$C(12,24,3)_"20T12412|1|[DEP]CRCD"
 set %TAB(17)=$C(12,61,15)_"00$12410|1|[EFTPAY]ANTAMT|||do VP4^V00S244(.fEFTPAY,.DEP)||||2"
 set %TAB(18)=$C(14,24,10)_"01T12446|1|[EFTPAY]CONSNDPO|[UTBLFOREX]"
 set %TAB(19)=$C(15,24,10)_"01T12447|1|[EFTPAY]VARNDPO|[STBLCNTRY]"
 set %TAB(20)=$C(16,24,10)_"00T12406|1|[EFTPAY]CONSTANT|[UTBLECOACT]"
 set %TAB(21)=$C(18,24,35)_"00T12401|1|[EFTPAY]BRHQMSG1"
 set %TAB(22)=$C(19,24,35)_"00T12402|1|[EFTPAY]BRHQMSG2"
 do VTBL(.fEFTPAY,.DEP)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordEFTPAY fEFTPAY,RecordDEP DEP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 /*
  ---- Revision History--------------------------------------------------

	07/30/04 - KELLYP - CR 11405
		Converted to PSL.

  -----------------------------------------------------------------------
 */

 type Public String X

 if (X'=12) do PROTECT^DBSMACRO("[EFTPAY]ANTRATE")
 quit 
VP2(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 /*
  ---- Revision History--------------------------------------------------
 
        07/30/04 - KELLYP - CR 11405
                Converted to PSL.
 
  -----------------------------------------------------------------------
 */

 do GOTO^DBSMACRO("[EFTPAY]AMOUNT")

 quit 
VP3(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 /*
  ---- Revision History--------------------------------------------------
 
        07/30/04 - KELLYP - CR 11405
                Converted to PSL.
 
  -----------------------------------------------------------------------
 */

 type Public String ER,RM,X

 // Enter either payment amount or account amount
 if X'="",fEFTPAY.antamt'="" do Runtime.setErrMSG("EFTPAY",1883) quit

 if fEFTPAY.crcd'="",X'="" do GOTO^DBSMACRO("[EFTPAY]CONSNDPO") quit 

 // Payment amount must have a positive value 
 if X'="",X<0 do Runtime.setErrMSG("EFTPAY",1888) quit

 quit 

VP4(RecordEFTPAY fEFTPAY,RecordDEP DEP) //
 /*
  ---- Revision History--------------------------------------------------
 
        07/30/04 - KELLYP - CR 11405
                Converted to PSL.
 
  -----------------------------------------------------------------------
 */

 // Enter either payment amount or account amount
 if fEFTPAY.amount="",X="" do Runtime.setErrMSG("EFTPAY",1883) quit

 // Enter either payment amount or account amount
 if fEFTPAY.amount'="",X'="" do Runtime.setErrMSG("EFTPAY",1883) quit

 // Payment amount must have a positive value 
 if X'="",X<0 do Runtime.setErrMSG("EFTPAY",1888) quit

 do GOTO^DBSMACRO("[EFTPAY]CONSNDPO") 

 quit 

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEFTPAY fEFTPAY
 type Public RecordDEP DEP
 do VPR(.fEFTPAY,.DEP)
 do VDA1(.fEFTPAY,.DEP)
 do ^DBSPNT()
 quit

VW(RecordEFTPAY fEFTPAY,RecordDEP DEP)
 do VDA1(.fEFTPAY,.DEP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEFTPAY fEFTPAY,RecordDEP DEP)
 do VDA1(.fEFTPAY,.DEP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEFTPAY fEFTPAY
 type Public RecordDEP DEP
 do VDA1(.fEFTPAY,.DEP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordEFTPAY fEFTPAY
 if sn="EFTPAY" do vSET1(.fEFTPAY,di,X)
 type Public RecordDEP DEP
 if sn="DEP" do vSET2(.DEP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordEFTPAY fEFTPAY,di,X)
 do fEFTPAY.setAuditFlag(1)
 set fEFTPAY.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordDEP DEP,di,X)
 do DEP.setAuditFlag(1)
 set DEP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordEFTPAY fEFTPAY
 if fid="EFTPAY" quit $$vREAD1(.fEFTPAY,di)
 type Public RecordDEP DEP
 if fid="DEP" quit $$vREAD2(.DEP,di)
 quit ""
vREAD1(RecordEFTPAY fEFTPAY,di)
 quit fEFTPAY.@di
vREAD2(RecordDEP DEP,di)
 quit DEP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
