ZUCTXDD0		/*
	ORIG: Frans S.C. Witte
	DESC: test code for Code generation of methods with explicit cating of
		RecordACN to RecordLN.

	---- Revision History --------------------------------------------------
	01/18/07 - Frans S.C. Witte - CR 22843
		Derived from ZUCTXDDA
	*/
	#ACCEPT CR=22843; DATE=2006-08-29; PGM=Frans S.C. Witte;GROUP=XECUTE
	xecute "zprint"

	quit

	// #####################################################################
	// Additional test functions ACN:
	// - type casting to RecordLN
	// #####################################################################

	// ---------------------------------------------------------------------
public ACNo0( RecordACN rec, String values(), String before(), String after())
	/* ---------------------------------------------------------------------
	Test code for RecordACN.column.oldVal.
	- retrieve/assign key: (none, see test functions LN)
	- retrieve/assign non-key(s): BOO
	- special retrieval(s)/assignment(s): ANPTO through type casting
	*/
	do rec.setAuditFlag(1)
	set before("BOO") = rec.boo.oldVal, rec.boo = values("BOO")
	set after("BOO")  = rec.boo.oldVal

	if rec.cls = "L" do {
		type RecordLN lnCast = {RecordLN}rec
		set before("ANPTO") = lnCast.anpto.oldVal, lnCast.anpto = values("ANTPO")
		set after("ANPTO")  = lnCast.anpto.oldVal
	}
	quit

	// ---------------------------------------------------------------------
public ACNr0( RecordACN rec, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordACN, when object optimization OFF
	- retrieve key: (none, see test functions LN)
	- retrieve non-key(s): BOO
	- special retrieval(s): ANPTO through type casting
	*/
	set values("BOO") = rec.boo
	if rec.cls = "L" do {
		type RecordLN lnCast = {RecordLN}rec
		set values("ANPTO") = lnCast.anpto
	}

	type RecordACN cpy = rec.copy()
	set values("CLS") = cpy.cls
	quit

	// ---------------------------------------------------------------------
public ACNr1( String K1, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordACN, when object optimization ON
	- retrieve key: (none, see test functions LN)
	- retrieve non-key(s): BOO
	- special retrieval(s): ANPTO through type casting
	*/
	type RecordACN rec=Db.getRecord("ACN","CID=:K1")
	set values("BOO") = rec.boo
	if rec.cls = "L" do {
		type RecordLN lnCast = {RecordLN}rec
		set values("ANPTO") = lnCast.anpto
	}
	quit

	// ---------------------------------------------------------------------
public ACNu0( RecordACN rec, String values())
	/* ---------------------------------------------------------------------
	Test update code for RecordACN, when change audit is OFF
	- assing to key: (none, see test functions LN)
	- assing to non-key(s): BOO
	- special assignment(s): ANPTO through type casting
	*/
	set rec.boo = values("BOO").get()
	if rec.cls = "L" do {
		type RecordLN lnCast = {RecordLN}rec
		set lnCast.anpto = values("ANTPO")
	}
	do rec.bypassSave()
	quit

	// ---------------------------------------------------------------------
public ACNu1( RecordACN rec, String values())
	/* ---------------------------------------------------------------------
	Test update code for RecordACN, when change audit is ON
	- assing to key:
	- assing to non-key(s):
	- special assignment(s):
	*/
	do rec.setAuditFlag(1)
	set rec.boo = values("BOO").get()
	if rec.cls = "L" do {
		type RecordLN lnCast = {RecordLN}rec
		set lnCast.anpto = values("ANTPO")
	}
	do rec.save()
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60653^26928^Frans S.C. Witte^3432"	// Signature - LTD^TIME^USER^SIZE
