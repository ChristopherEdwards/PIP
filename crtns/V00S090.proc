V00S090(%ProcessMode,RecordCUVAR fCUVAR)   // -  - SID= <CUVARMCP> Foreign Currency
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:11 - kini
 // This screen allows the institution to establish multicurrency processing
 // parameters, customizing the system to fit the institution's requirements.
 // 
 // Refer to the Multicurrency Processing - General Reference Manual for further
 // information.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="CUVARMCP",VPGM=$T(+0),VSNAME="Foreign Currency"
 set VFSN("CUVAR")="zfCUVAR"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fCUVAR),VDA1(.fCUVAR),^DBSPNT()

 if '%ProcessMode do VNEW(.fCUVAR),VPR(.fCUVAR),VDA1(.fCUVAR)
 if %ProcessMode do VLOD(.fCUVAR) quit:$G(ER)  do VPR(.fCUVAR),VDA1(.fCUVAR)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCUVAR)
	quit


VNEW(RecordCUVAR fCUVAR) // Initialize arrays if %O=0
 
 do VDEF(.fCUVAR)
 do VLOD(.fCUVAR)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCUVAR fCUVAR)
 if fCUVAR.%ET="" set fCUVAR.%ET="ZE^UTLERR"
 if fCUVAR.%HELP="" set fCUVAR.%HELP=0
 if fCUVAR.%HELPCNT="" set fCUVAR.%HELPCNT=0
 if fCUVAR.ALCOUNT="" set fCUVAR.ALCOUNT=5
 if fCUVAR.BANNER="" set fCUVAR.BANNER=1
 if fCUVAR.BOBR="" set fCUVAR.BOBR=0
 if fCUVAR.DBSPH132="" set fCUVAR.DBSPH132="SCAU$HELP:OOE_SCA132.EXP"
 if fCUVAR.DBSPH80="" set fCUVAR.DBSPH80="SCAU$HELP:OOE_SCA80.EXP"
 if fCUVAR.EMURND="" set fCUVAR.EMURND=9
 if fCUVAR.IRAHIST="" set fCUVAR.IRAHIST=365
 if fCUVAR.LNCC="" set fCUVAR.LNCC=0
 if fCUVAR.LNCFP="" set fCUVAR.LNCFP=0
 if fCUVAR.LNCPI="" set fCUVAR.LNCPI=0
 if fCUVAR.LNCPP="" set fCUVAR.LNCPP=0
 if fCUVAR.MAXCIFL="" set fCUVAR.MAXCIFL=12
 if fCUVAR.MINCIFL="" set fCUVAR.MINCIFL=1
 if fCUVAR.ODP="" set fCUVAR.ODP=0
 if fCUVAR.ORCIFN="" set fCUVAR.ORCIFN=1
 if fCUVAR.SFEEOPT="" set fCUVAR.SFEEOPT=0
 if fCUVAR.TAXREQ="" set fCUVAR.TAXREQ=1
 if fCUVAR.USERNAME="" set fCUVAR.USERNAME=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCUVAR fCUVAR) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCUVAR fCUVAR) // Display screen prompts
 set VO="33||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,26,30,1,0,0,0,0,0,0)_"01T Foreign Currency Information "
 set VO(2)=$C(3,4,27,1,0,0,0,0,0,0)_"01T System Base Currency Code:"
 set VO(3)=$C(3,44,27,0,0,0,0,0,0,0)_"01TDefault Forward Value Days:"
 set VO(4)=$C(4,5,26,0,0,0,0,0,0,0)_"01TCurrency Exchange Routine:"
 set VO(5)=$C(4,48,23,0,0,0,0,0,0,0)_"01TMax Forward Value Days:"
 set VO(6)=$C(5,8,5,1,0,0,0,0,0,0)_"01T Dual"
 set VO(7)=$C(5,13,18,1,0,0,0,0,0,0)_"01T Currency Posting:"
 set VO(8)=$C(5,55,16,0,0,0,0,0,0,0)_"01TFX Rate Display:"
 set VO(9)=$C(6,1,30,1,0,0,0,0,0,0)_"01T Default Currency Environment:"
 set VO(10)=$C(6,48,23,0,0,0,0,0,0,0)_"01TFX Deal Retention Days:"
 set VO(11)=$C(7,4,27,0,0,0,0,0,0,0)_"01TFX Deal Rekey Verification:"
 set VO(12)=$C(7,40,31,0,0,0,0,0,0,0)_"01TNostro Transfer Retention Days:"
 set VO(13)=$C(9,25,31,1,0,0,0,0,0,0)_"01T Multicurrency Posting Options "
 set VO(14)=$C(10,2,29,0,0,0,0,0,0,0)_"01TCustomer Code Modify Enabled:"
 set VO(15)=$C(10,41,27,0,0,0,0,0,0,0)_"01TBase Amount Modify Enabled:"
 set VO(16)=$C(11,4,27,0,0,0,0,0,0,0)_"01TScreen Base Modify Enabled:"
 set VO(17)=$C(12,10,21,0,0,0,0,0,0,0)_"01TOTC Equivalence Rate:"
 set VO(18)=$C(12,48,20,0,0,0,0,0,0,0)_"01TFX Equivalence Rate:"
 set VO(19)=$C(13,12,19,0,0,0,0,0,0,0)_"01TOTC Profit Account:"
 set VO(20)=$C(13,50,18,0,0,0,0,0,0,0)_"01TFX Profit Account:"
 set VO(21)=$C(14,14,17,0,0,0,0,0,0,0)_"01TOTC Loss Account:"
 set VO(22)=$C(14,52,16,0,0,0,0,0,0,0)_"01TFX Loss Account:"
 set VO(23)=$C(15,13,18,0,0,0,0,0,0,0)_"01TCalculate OTC P&L:"
 set VO(24)=$C(15,51,17,0,0,0,0,0,0,0)_"01TCalculate FX P&L:"
 set VO(25)=$C(16,10,21,0,0,0,0,0,0,0)_"01TTFS Equivalence Rate:"
 set VO(26)=$C(16,51,17,0,0,0,0,0,0,0)_"01TTFS Loss Account:"
 set VO(27)=$C(17,12,19,0,0,0,0,0,0,0)_"01TTFS Profit Account:"
 set VO(28)=$C(17,50,18,0,0,0,0,0,0,0)_"01TCalculate TFS P&L:"
 set VO(29)=$C(19,27,28,1,0,0,0,0,0,0)_"01T Exchange Transaction Codes "
 set VO(30)=$C(21,30,6,2,0,0,0,0,0,0)_"01TDebit "
 set VO(31)=$C(21,44,7,2,0,0,0,0,0,0)_"01TCredit "
 set VO(32)=$C(22,11,18,0,0,0,0,0,0,0)_"01TCurrency Exchange:"
 set VO(33)=$C(23,11,18,0,0,0,0,0,0,0)_"01TTreasury Exchange:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCUVAR fCUVAR)  // Display screen data
 new V
 //
 set VO="62|34|13|"
 set VO(34)=$C(3,32,3,2,0,0,0,0,0,0)_"00T"_$E(fCUVAR.%CRCD,1,3)
 set VO(35)=$C(3,72,1,2,0,0,0,0,0,0)_"00N"_fCUVAR.VDT
 set VO(36)=$C(4,32,9,2,0,0,0,0,0,0)_"00T"_$E(fCUVAR.CERTN,1,9)
 set VO(37)=$C(4,72,2,2,0,0,0,0,0,0)_"00N"_fCUVAR.VDTFWD
 set VO(38)=$C(5,32,1,2,0,0,0,0,0,0)_"00L"_$S(fCUVAR.CURRENV:"Y",1:"N")
 set VO(39)=$C(5,72,1,2,0,0,0,0,0,0)_"00N"_fCUVAR.FXRATEDF
 set VO(40)=$C(6,32,1,2,0,0,0,0,0,0)_"00N"_fCUVAR.DFTENV
 set VO(41)=$C(6,72,4,2,0,0,0,0,0,0)_"00N"_fCUVAR.DEALPURG
 set VO(42)=$C(7,32,1,2,0,0,0,0,0,0)_"00L"_$S(fCUVAR.REKEY:"Y",1:"N")
 set VO(43)=$C(7,72,4,2,0,0,0,0,0,0)_"00N"_fCUVAR.NOSTPURG
 set VO(44)=$C(10,32,1,2,0,0,0,0,0,0)_"00L"_$S(fCUVAR.CCMOD:"Y",1:"N")
 set VO(45)=$C(10,69,1,2,0,0,0,0,0,0)_"00L"_$S(fCUVAR.BAMTMOD:"Y",1:"N")
 set VO(46)=$C(11,32,1,2,0,0,0,0,0,0)_"00L"_$S(fCUVAR.BSEMOD:"Y",1:"N")
 set VO(47)=$C(12,32,1,2,0,0,0,0,0,0)_"00N"_fCUVAR.FXPOSRT
 set VO(48)=$C(12,69,1,2,0,0,0,0,0,0)_"00N"_fCUVAR.ITSPOSPL
 set VO(49)=$C(13,32,12,2,0,0,0,0,0,0)_"00N"_fCUVAR.FXPOSPL
 set VO(50)=$C(13,69,12,2,0,0,0,0,0,0)_"00N"_fCUVAR.FXPROFIT
 set VO(51)=$C(14,32,12,2,0,0,0,0,0,0)_"00N"_fCUVAR.FXPOSL
 set VO(52)=$C(14,69,12,2,0,0,0,0,0,0)_"00N"_fCUVAR.FXLOSS
 set VO(53)=$C(15,32,1,2,0,0,0,0,0,0)_"00L"_$S(fCUVAR.OTC:"Y",1:"N")
 set VO(54)=$C(15,69,1,2,0,0,0,0,0,0)_"00L"_$S(fCUVAR.FX:"Y",1:"N")
 set VO(55)=$C(16,32,1,2,0,0,0,0,0,0)_"00N"_fCUVAR.TFSPOSPL
 set VO(56)=$C(16,69,12,2,0,0,0,0,0,0)_"00N"_fCUVAR.TFSL
 set VO(57)=$C(17,32,12,2,0,0,0,0,0,0)_"00N"_fCUVAR.TFSP
 set VO(58)=$C(17,69,1,2,0,0,0,0,0,0)_"00L"_$S(fCUVAR.TFS:"Y",1:"N")
 set VO(59)=$C(22,30,12,2,0,0,0,0,0,0)_"00T"_$E(fCUVAR.CEDR,1,12)
 set VO(60)=$C(22,44,12,2,0,0,0,0,0,0)_"00T"_$E(fCUVAR.CECR,1,12)
 set VO(61)=$C(23,30,12,2,0,0,0,0,0,0)_"00T"_$E(fCUVAR.TCEDR,1,12)
 set VO(62)=$C(23,44,12,2,0,0,0,0,0,0)_"00T"_$E(fCUVAR.TCECR,1,12)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCUVAR fCUVAR)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=29,VPT=1,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="CUVAR"
 set OLNTB=23044
 
 set VFSN("CUVAR")="zfCUVAR"
 //
 // 
	
	
 set %TAB(1)=$C(2,31,3)_"01T12401|1|[CUVAR]%CRCD|[CRCD]|||do VP1^V00S090(.fCUVAR)"
 set %TAB(2)=$C(2,71,1)_"00N12401|1|[CUVAR]VDT"
 set %TAB(3)=$C(3,31,9)_"00T12406|1|[CUVAR]CERTN|||do VP2^V00S090(.fCUVAR)"
 set %TAB(4)=$C(3,71,2)_"00N12402|1|[CUVAR]VDTFWD|||do VP3^V00S090(.fCUVAR)"
 set %TAB(5)=$C(4,31,1)_"00L12401|1|[CUVAR]CURRENV|||do VP4^V00S090(.fCUVAR)"
 set %TAB(6)=$C(4,71,1)_"00N12401|1|[CUVAR]FXRATEDF|[STBLFXRATEDF]"
 set %TAB(7)=$C(5,31,1)_"01N12401|1|[CUVAR]DFTENV|[STBLENVDFT]"
 set %TAB(8)=$C(5,71,4)_"00N12402|1|[CUVAR]DEALPURG"
 set %TAB(9)=$C(6,31,1)_"00L12401|1|[CUVAR]REKEY"
 set %TAB(10)=$C(6,71,4)_"00N12401|1|[CUVAR]NOSTPURG"
 set %TAB(11)=$C(9,31,1)_"00L12412|1|[CUVAR]CCMOD"
 set %TAB(12)=$C(9,68,1)_"00L12413|1|[CUVAR]BAMTMOD"
 set %TAB(13)=$C(10,31,1)_"00L12411|1|[CUVAR]BSEMOD"
 set %TAB(14)=$C(11,31,1)_"00N12414|1|[CUVAR]FXPOSRT|[STBLFXPOSRT]"
 set %TAB(15)=$C(11,68,1)_"00N12419|1|[CUVAR]ITSPOSPL|[STBLFXPOSRT]"
 set %TAB(16)=$C(12,31,12)_"00N12415|1|[CUVAR]FXPOSPL|[GLAD]"
 set %TAB(17)=$C(12,68,12)_"00N12417|1|[CUVAR]FXPROFIT|[GLAD]"
 set %TAB(18)=$C(13,31,12)_"00N12416|1|[CUVAR]FXPOSL|[GLAD]"
 set %TAB(19)=$C(13,68,12)_"00N12418|1|[CUVAR]FXLOSS|[GLAD]"
 set %TAB(20)=$C(14,31,1)_"00L12423|1|[CUVAR]OTC"
 set %TAB(21)=$C(14,68,1)_"00L12424|1|[CUVAR]FX"
 set %TAB(22)=$C(15,31,1)_"00N12420|1|[CUVAR]TFSPOSPL|[STBLFXPOSRT]"
 set %TAB(23)=$C(15,68,12)_"00N12422|1|[CUVAR]TFSL|[GLAD]"
 set %TAB(24)=$C(16,31,12)_"00N12421|1|[CUVAR]TFSP|[GLAD]"
 set %TAB(25)=$C(16,68,1)_"00L12425|1|[CUVAR]TFS"
 set %TAB(26)=$C(21,29,12)_"00T12402|1|[CUVAR]CEDR|[TRN]:QUERY ""[TRN]CLS=""""M""""""||do VP5^V00S090(.fCUVAR)"
 set %TAB(27)=$C(21,43,12)_"00T12403|1|[CUVAR]CECR|[TRN]:QUERY ""[TRN]CLS=""""M""""""||do VP6^V00S090(.fCUVAR)"
 set %TAB(28)=$C(22,29,12)_"00T12404|1|[CUVAR]TCEDR|[TRN]:QUERY ""[TRN]CLS=""""M""""""||do VP7^V00S090(.fCUVAR)"
 set %TAB(29)=$C(22,43,12)_"00T12405|1|[CUVAR]TCECR|[TRN]:QUERY ""[TRN]CLS=""""M""""""||do VP8^V00S090(.fCUVAR)"
 do VTBL(.fCUVAR)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCUVAR fCUVAR) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordCUVAR fCUVAR) //
 set %MCP=CUVAR.%mcp
 set CO=CUVAR.co

 #IF 'CUVAR.%MCP
 do PROTECT^DBSMACRO("CUVAR.CURRENV")
 do PROTECT^DBSMACRO("CUVAR.DFTENV")
 #ENDIF

 quit

VP2(RecordCUVAR fCUVAR) //
 #IF CUVAR.%MCP
 if X.isNull() set ER=1,RM=$$^MSG(2385) quit
 set ER=$$DQ^%ZRTNS(X)
 quit

 #ELSE
 // Multi-currency processing not enabled
 if 'X.isNull() set ER=1 set RM=$$^MSG(6033) 
 quit

 #ENDIF

VP3(RecordCUVAR fCUVAR) //
 
 #IF 'CUVAR.VDT.isNull()
 //Change maximum to default value
 if X.isNull() set X=+CUVAR.vdt quit    
 
 //Default forward value days may not exceed max
 if X<CUVAR.vdt set ER=1,RM=$$^MSG(8617)   
 #ENDIF

 quit

VP4(RecordCUVAR fCUVAR) //
 if X do UNPROT^DBSMACRO("CUVAR.DFTENV")
 if X quit 
 
 do DEFAULT^DBSMACRO("CUVAR.DFTENV",0,"1","0","0")

 do PROTECT^DBSMACRO("CUVAR.DFTENV")
 
 quit

VP5(RecordCUVAR fCUVAR) //
 /*
 
   ---- Revision History------------------------------------------------
 
        03/23/06 - RussellDS - CR16892
                   Move code from obsoleted DTYPE_DRTC post-processor
                   library in-line.
 
                   Remove old revision history.
   ---------------------------------------------------------------------
 */

 type public String X

 #IF CUVAR.%MCP
 if X.isNull() set ER=1,RM=$$^MSG(2385) quit

 type Number TRB
 type String X1
 
 // Lowercase transaction codes protected
 if X?.E1L.E do Runtime.setErrMSG("TRN", 1663) quit
 
 // Debit/credit indicator
 type RecordTRN trn = Db.getRecord("TRN", "ETC=:X", 1)
 set X1 = trn.itc
 
 // Invalid transaction code ~p1
 if X1.isNull() do Runtime.setErrMSG("TRN", 1498, X) quit
 set X1 = trn.itc.extract()
 
 // TRB indicator from account type
 set TRB = $$TRB^UTRB(CID.get())
 
 // If this is an increase, is no good
 if $$DC^UTRB(X1,TRB) do { quit:ER

       	//Transaction code for ~p1 must be a credit
       	if TRB do Runtime.setErrMSG("TRN", 2695, X) quit

       	// Transaction code for ~p1 must be a debit
       	else  do Runtime.setErrMSG("TRN", 2696, X) quit
 }
 
 #ELSE
 // Multi-currency processing not enabled
 if 'X.isNull() set ER=1,RM=$$^MSG(6033)

 #ENDIF

 quit


VP6(RecordCUVAR fCUVAR) //
 /*
 
   ---- Revision History------------------------------------------------
 
        03/23/06 - RussellDS - CR16892
                   Move code from obsoleted DTYPE_CRTC post-processor
                   library in-line.
 
                   Remove old revision history.
   ---------------------------------------------------------------------
 */
 
 type Public String X

 #IF CUVAR.%MCP
 if X.isNull() set ER=1,RM=$$^MSG(2385) quit

 type Number DC, TRB
 type String X1
 
 if X.isNull() quit
 
 if X?.E1L.E do Runtime.setErrMSG("TRN", 1663) quit
 type RecordTRN trn=Db.getRecord("TRN", "ETC=:X", 1)
 set X1 = trn.itc
 
 // Invalid transaction code ~p1
 if X1.isNull() do Runtime.setErrMSG("TRN", 1498, X) quit
 set X1 = trn.itc.extract()
 
 // TRB field from the acct. def
 set TRB = $$TRB^UTRB(CID.get())
 
 // Increase/decrease indicator
 set DC = $$DC^UTRB(X1, TRB)
 
 // If this is a DECREASE, is no good
 if 'DC do { quit:ER
 
        // Transaction code for ~p1 must be a debit
       	if TRB do Runtime.setErrMSG("TRN", 2696, X) quit
 
 	// Transaction code for ~p1 must be a credit
       	do Runtime.setErrMSG("TRN", 2695, X) quit
 }
 
 #ELSE
 // Multi-currency processing not enabled
 if 'X.isNull() set ER=1,RM=$$^MSG(6033)

 #ENDIF

 quit
VP7(RecordCUVAR fCUVAR) //
 /*
 
   ---- Revision History------------------------------------------------
 
        03/23/06 - RussellDS - CR16892
                   Move code from obsoleted DTYPE_DRTC post-processor
                   library in-line.
 
                   Remove old revision history.
   ---------------------------------------------------------------------
 */

 type public String X

 #IF CUVAR.%MCP
 if X.isNull() set ER=1,RM=$$^MSG(2385) quit
 
 type Number TRB
 type String X1
 
 // Lowercase transaction codes protected
 if X?.E1L.E do Runtime.setErrMSG("TRN", 1663) quit
 
 // Debit/credit indicator
 type RecordTRN trn = Db.getRecord("TRN", "ETC=:X", 1)
 set X1 = trn.itc
 
 // Invalid transaction code ~p1
 if X1.isNull() do Runtime.setErrMSG("TRN", 1498, X) quit
 set X1 = trn.itc.extract()
 
 // TRB indicator from account type
 set TRB = $$TRB^UTRB(CID.get())
 
 // If this is an increase, is no good
 if $$DC^UTRB(X1,TRB) do { quit:ER

 	//Transaction code for ~p1 must be a credit
        if TRB do Runtime.setErrMSG("TRN", 2695, X) quit

        // Transaction code for ~p1 must be a debit
        else  do Runtime.setErrMSG("TRN", 2696, X) quit
 }

 #ELSE
 // Multi-currency processing not enabled
 if 'X.isNull() set ER=1,RM=$$^MSG(6033)
 
 #ENDIF

 quit

VP8(RecordCUVAR fCUVAR) //
 /*
 
   ---- Revision History------------------------------------------------
 
        03/23/06 - RussellDS - CR16892
                   Move code from obsoleted DTYPE_CRTC post-processor
                   library in-line.
 
                   Remove old revision history.
   ---------------------------------------------------------------------
 */
 
 type Public String X

 #IF CUVAR.%MCP
 if X.isNull() set ER=1,RM=$$^MSG(2385) quit

 type Number DC, TRB
 type String X1
 
 if X.isNull() quit
 
 if X?.E1L.E do Runtime.setErrMSG("TRN", 1663) quit
 type RecordTRN trn=Db.getRecord("TRN", "ETC=:X", 1)
 set X1 = trn.itc
 
 // Invalid transaction code ~p1
 if X1.isNull() do Runtime.setErrMSG("TRN", 1498, X) quit
 set X1 = trn.itc.extract()
 
 // TRB field from the acct. def
 set TRB = $$TRB^UTRB(CID.get())
 
 // Increase/decrease indicator
 set DC = $$DC^UTRB(X1, TRB)
 
 // If this is a DECREASE, is no good
 if 'DC do { quit:ER
 
        // Transaction code for ~p1 must be a debit
       	if TRB do Runtime.setErrMSG("TRN", 2696, X) quit
 
 	// Transaction code for ~p1 must be a credit
       	do Runtime.setErrMSG("TRN", 2695, X) quit
 }

 #ELSE
 // Multi-currency processing not enabled
 if 'X.isNull() set ER=1,RM=$$^MSG(6033)

 #ENDIF

 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCUVAR fCUVAR
 do VPR(.fCUVAR)
 do VDA1(.fCUVAR)
 do ^DBSPNT()
 quit

VW(RecordCUVAR fCUVAR)
 do VDA1(.fCUVAR)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCUVAR fCUVAR)
 do VDA1(.fCUVAR)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCUVAR fCUVAR
 do VDA1(.fCUVAR)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCUVAR fCUVAR
 if sn="CUVAR" do vSET1(.fCUVAR,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCUVAR fCUVAR,di,X)
 do fCUVAR.setAuditFlag(1)
 set fCUVAR.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCUVAR fCUVAR
 if fid="CUVAR" quit $$vREAD1(.fCUVAR,di)
 quit ""
vREAD1(RecordCUVAR fCUVAR,di)
 quit fCUVAR.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
