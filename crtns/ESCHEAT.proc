public ESCHEAT(CID,RecordDEP dep)	// 12/19/2006 02:33 PM - 
	// Escheat query routine compiled by ESCHCOM from ESCHCOR

	// THIS IS A COMPILED ROUTINE.  Compiled by procedure COLLQRY

	quit   // Cannot access from top

public D1(RecordDEP dep)	// Query - IRADIST (Check if Age<59.5)

public ESCHCOR(CID,RecordDEP dep)	// This line will be modified by the compiler (ESCHCOM)
	// As will this line

	/*
	PROCEDURE:  ESCHCOR
	ORIG: Bill Greene - 12/17/1990
	DESC: Escheat run-time query template

	---- Comments --------------------------------------------------------

	This procedure is never run independently.  It is used as a template
	by ESCHCOM for the compilation of the escheat query run-time procedure.
	When compiled by ESCHCOM, the first line will be changed to ESCHEAT,
	and not ESCHCOR, but is left as is in the template to avoid compile
	errors.

	"CORE" procedure for escheat processing .  Code within this procedure
	is compiled to the actual escheat determination procedure and into
	routine "ESCHEAT".  Core code from ESCHCOR is combined with escheat 
	queries at DATA-QWIK level 4 (e.g., ESCHPA, ESCHNY) by procedure
	ESCHCOM and compiled to the final "ESCHEAT" routine.

	This routine is called by BCHDESTA (BCHDESTAT) for those accounts
	which have been identified as suspected of being newly in escheat.
	The account number is identified and passed to this routine.  This
	program identifies the branch code associated with the suspect account
	and applies the escheat queries applicable to the state in which the
	branch of ownership resides.
	
	The routine is called as an extrinsic function, returning 0 if the
	account is not escheatable, 1 if it is.  The default, in the event
	of an error is a value of 1.

 	ARGUMENTS:
		. CID		Account number	/TYP=N/REQ/MECH=VAL
		. dep		DEP object	/TYP=RecordDEP/REQ/MECH=REF:R

	RETURNS:
		. $$		Escheat flag	/TYP=L
				0 = not escheatable
				1 = escheatable (default on error)

		. ER		Error flag	/TYP=L

		. RM		Error message	/TYP=T


	EXAMPLE:
		set X=$$ESCHEAT(CID,.dep)
		
 	---- Revision History ------------------------------------------------
 	
 	05/15/06 - RussellDS - CR21296
		   Modify CHECK section to ise #IF.  Eliminate use of %CACHE,
		   which is reserved for PSL record objects, and replace with
		   use of cache array.
		   
		   Cleaned up PSL warning issues.
 	
 	08/17/05 - Mugilvannan - CR16619
 		   Modified the section CHECK to process the query defined 
	           for the state associated with the primary account owner's 
	           legal address and only if the primary account owner's 
	           country is US.

	01/02/04 - CARROLLJ - CR7658
		   Corrected undefined error in CHECK linetag.

	04/28/02 - Dan Russell
		   Rewrote from M to PSL.  Changed to extrinsic function.

		   Removed change history.
	*/


	// Structure in this manner to allow to create extrinsic function.
	// Error trap has to be set at next level.
	type public Number ESC
	type public Boolean ER
	set ER=0,ESC=1
	do CHECK(CID,.dep)
	quit ESC


CHECK(CID,RecordDEP dep)	//Private - Test to see if escheatable
	
	type public Boolean ER
	type public Number ESC
	type public String cache(,), QUERYID, RM
	
	type String STATE
	
	// Set up error trapping
	catch error {
		do ZE^UTLERR		// Log M error
		
		type public Number %ZTSEQ
		type public String ET
		
		// Error Log Sequence #~p1
		
		if '%ZTSEQ.get().isNull() set %ZTSEQ=$$^MSG("3389",%ZTSEQ)
		// Error in account, not processed
		set ET=$$^MSG("3511")
		do LOGERR
		set ESC=1
	}

	/* Default escheat processing - if customer variable escheat state
	   is defined, use that state, otherwise, determine state from
	   branch code.
	*/
	
	type RecordCIF cif = Db.getRecord("CIF", "ACN=:dep.acn")
	if (cif.pcntry '= "US") set ESC = 0 quit

	#IF 'CUVAR.ESCHEAT.isNull()
	
	// Institution default value
	set QUERYID = CUVAR.ESCHEAT
	
	#ELSE

	/* If not using institution default, identify the suspected account 
	   by the state associated with the primary account owners legal 
           address and get query for it.  Use cache array to reduce
           table look-ups against STBLCNTRY1
	*/
	
	set STATE = cif.pstate

	if STATE.isNull() do { quit
		
		// Invalid state
		set RM = $$^MSG(3569)
		do LOGERR
	}

	set QUERYID = "ESCH"_STATE
	
	// Set up cache if it doesn't exist
	if 'cache("ESCHCOR", STATE).exists() do {

		if 'Db.isDefined("STBLCNTRY1","CNTRY='US',STATE=:STATE") do {
			
			// Indicate invalid state for future
			set cache("ESCHCOR", STATE) = -1
		}
		// Indicate if invalid routine
		else  if '$$VALID^%ZRTNS(QUERYID) set cache("ESCHCOR", STATE) = -2
		
		// Otherwise, OK
		else  set cache("ESCHCOR", STATE) = 1
	}
	
	// Invalid state
	if (cache("ESCHCOR", STATE) < 0) do { quit
		
		// Invalid state
		if (cache("ESCHCOR", STATE) = -1) set RM = $$^MSG(3569)
		
		// No query for ~p1
		if (cache("ESCHCOR", STATE) = -2) set RM = $$^MSG(3571)
		
		do LOGERR
	}

	#ENDIF		

	// If ANY of the query conditions are NOT met, the account is NOT in escheat
	do @(QUERYID_"(.dep)")
	else  set ESC = 0

	quit


ESCHPA(RecordDEP dep)	// Default
	type RecordCIF xobj2=Db.getRecord("CIF","ACN=:dep.acn")
	if dep.mdt<TJD&(dep.mdt'="")
	else  quit
	if dep.ccld<((TJD-10))&(dep.ccld'="")
	else  quit
	if xobj2.cifclcd<((TJD-10))&(xobj2.cifclcd'="")
	else  quit
	quit

 #accept PGM=echeat compiler;date=1/6/2004
	quit


LOGERR	// Log error in exception file
	
	type public Boolean ER, TEST
	type public Number %ZTSEQ, CID
	type public String ET,RM
	
	set ER=1
	quit:$G(TEST)
	do LOG^UTLEXC($T(+0),"*",RM,$G(CID),$G(%ZTSEQ),$G(ET))
	quit


TEST	// Allow input of single account to test query logic

	new CID,ESCHSTAT,%EXT,HDR,OLNTB,%READ,STATMSG,%TAB,TEST,VFMQ,ZCLS
	
	type public Boolean ER
	set %TAB("CID")=".CID1/XPP=S %EXT=1,ZCLS=""D"" D ^UACN"
	set %READ="@@%FN,,,CID/REQ"
	do ^UTLREAD quit:VFMQ="Q"

	set TEST=1
	type RecordDEP dep=Db.getRecord("DEP","CID=:CID")
	set ESCHSTAT=$$^ESCHEAT(CID,.dep)

	if ER do {
		// Analysis not completed: 
		set HDR=$$^MSG(3567)
		set %READ="@HDR/INC,@RM"
	}

	else  do {
		// Analysis completed for account ~p1
		set HDR=$$^MSG(3566,CID)
		// The account selected is not in escheat
		if 'ESCHSTAT set STATMSG=$$^MSG(3574)
		// The account selected is in escheat
		else  set STATMSG=$$^MSG(3575)
		set %READ="@HDR,@STATMSG"
	}

	set OLNTB=15000
	do ^UTLREAD
	quit
