TTXHLD(RecordACN acn,RecordTTX ttx,RecordTRN trn)	//;IBS - CRT - V4.1 - Adjustment for check and float holds
	/*
	       ORIG:  CALIENDO -  8 MAY 1990
	       DESC:  Will adjust check/float hold records. Not valid for online
	              valid only for batch processing.
	ARGUMENTS:

	. acn	Account record			TYP/RecordACN/REQ

	. ttx	Transaction record	 	TYP/RecordTTX/REQ

	. ln	Loan Record			TYP/Record LN/REQ

	 ---- Revision History ------------------------------------------------

	   11/28/05 - NATRAJAH - 13734
		      General DBI3 cleanup.

	   01/06/05 - TITOVE - CR 13734
	   	Cleaned up logic as part of DBI2 project.

	   01/06/04 - CARROLLJ - CR7658
		Removed call to UHLDSCA1 and replace with UHLDSCA.

	   11/13/02 - SCOTTC - 43583
		Modify input parameters to make standard.

	   11/13/01 - SCOTTC - 43583 
		  Convert to PSL.  Remove history prior to 2000.
	
	   08/22/01 - TITOVE - 45924
	        Modified to accomplish the following:
	        . Update the HLD global for transaction's effective date
	        . Use IBS calendar for float holds and FED calendar for
	          check holds
	        . Handle updates to HLD global and correct calculation of
	          expiration date (taking into account non-business days)
	          for back-dated transactions

	*/

	type Public Number CRT
	type Public String RM,TTXHLD
	type Public Boolean ER
	type Number CID,DAYS,KEY,TAMT
	type Date EXPDAT,SAVTJD,TRDT
	type String CAL,XTSO
	
	// Not valid for on-line processing.  Use CH transaction code.
	if $G(CRT)=1 do { quit
		set ER=1
		set RM=$$^MSG(2051)
		}

	set CID=ttx.cid 
	set TAMT=ttx.tamt 
	
	do OUT^UTSO(.XTSO,ttx.tso)
	set KEY=$G(XTSO("KEY"))
	set DAYS=+$G(XTSO("DAYS")) 
	if DAYS<0 quit 
	
	// Invalid hold file key
	if '(KEY=7!(KEY=8)) do { quit
		set ER=1
		set RM=$$^MSG(1375)
		}
	
	// Update account file and hold file
	if KEY=7 do { quit:ER
		set acn.balcol=acn.balcol-TAMT
		do acn.bypassSave()
		}
		
	if KEY=8 do { quit:ER
		set acn.chkhld=acn.chkhld+TAMT
		do acn.bypassSave()
		}

	
	// Update HLD global with holds in current transaction


	
	// Use IBS calendar for float and FED calendar for check holds
	if KEY=7 set CAL="IBS"
	else  set CAL="FED"
	
	// Needed in UHLDSCA routine
	set SAVTJD=%SystemDate

	// Effective date of transaction
	set TRDT=%EffectiveDate
	if TRDT="" set TRDT=ttx.efd
	
	// Calculate expiration date, taking into account non-business days
	set DAYS=DAYS+1
	for EXPDAT=TRDT:1 do { if DAYS=0 quit
		if $$BD^UNBD(EXPDAT,CAL) set DAYS=DAYS-1 
		}

	// Create TTXHLD array of holds
	do HLDFILE^UHLDSCA(KEY,TRDT,EXPDAT,TAMT,.TTXHLD,ttx.tseq)

	quit
	

vSIG()	quit "60232^22490^Hari Natrajan^2400"	// Signature - LTD^TIME^USER^SIZE
