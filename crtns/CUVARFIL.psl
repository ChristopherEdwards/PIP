CUVARFIL(RecordCUVAR cuvar, String vpar, Boolean vparNorm) // CUVAR - Institution Variables Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 11/09/2007 15:13 - chenardp
	// Generated from DATA-QWIK schema in: /profile/v72framework_gtm  by: /v72framework_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (511)            05/28/2007
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type Public Number ER = 0
	type Public String RM

	type public String verrors()

	catch fERROR {
		if fERROR.type="%PSL-E-DBFILER" do {
			set ER = 1
			set RM = fERROR.description
		}
		else  throw fERROR
	}
	type String vx(), vxins()                              // audit column array
	type Number %O = cuvar.getMode()                       // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(cuvar,.vxins(),10,"|")
	if %O = 1 quit:'cuvar.isChanged()  do AUDIT^UCUTILN(cuvar,.vx(),10,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		do vinit                                              // Initialize column values
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
		do SET^UCLREGEN("CUVAR","*")                          // Literal references to CUVAR exist
	}

	if %O = 1 do { quit                                    // Update record control block
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("CUVAR",.vx)
		set %O = 1 do vexec
		do {                                                  // Check to see if updated columns involved in literal references
			type String vcol, vlitcols()

			type ResultSet rslits = Db.select("DISTINCT COLUMN", "SYSMAPLITDTA", "TABLE='CUVAR'")
			while rslits.next()  set vlitcols(rslits.getCol("COLUMN")) = ""

			set vcol = ""
			for  set vcol = vlitcols(vcol).order() quit:vcol.isNull()  if vx(vcol).exists() do SET^UCLREGEN("CUVAR",vcol)
		}
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("CUVAR","")                        // No record exists
		do vdelete(0)
		do SET^UCLREGEN("CUVAR","*")                          // Literal references to CUVAR exist
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)


	type RecordCUVAR cuvar = Db.getRecord("CUVAR","")
	if (%ProcessMode = 2) do {
		do cuvar.setMode(2)

		do CUVARFIL(cuvar,vpar)
	}

	quit

vLITCHK() quit 1 // Table has columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordCUVAR cuvar

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("CUVAR","") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		if %O = 0, vpar'["/NOLOG/" do ^DBSLOGIT(cuvar,%O,.vxins())
		if %O = 1, vpar'["/NOLOG/" do ^DBSLOGIT(cuvar,%O,.vx())

		type String n = -1
		type String x

		if %O = 0 for  set n = vobj(cuvar,n).order() quit:n.isNull()  do {
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
				S ^CUVAR(n)=vobj(cuvar,n)
			#ENDBYPASS
		}

		else  for  set n = vobj(cuvar,-100,n).order() quit:n.isNull()  do {
			quit:'$D(vobj(cuvar,n))
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
				S ^CUVAR(n)=vobj(cuvar,n)
			#ENDBYPASS
		}

	}

	quit

vload // Record Load - force loading of unloaded data

	type public RecordCUVAR cuvar
	type String n = ""

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	for  set n=$order(^CUVAR(n)) quit:n=""  if '$D(vobj(cuvar,n)),$D(^CUVAR(n))#2 set vobj(cuvar,n)=^(n)
	#ENDBYPASS
	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordCUVAR cuvar

	if 'vkeychg.get(),cuvar.isChanged() throw Class.new("Error","%PSL-E-DBFILER,Deleted object cannot be modified")

	if vpar'["/NOLOG/" do ^DBSLOGIT(cuvar,3)
	quit


vinit // Initialize default values

	type public RecordCUVAR cuvar

	if cuvar.%et.isNull() set cuvar.%et = "ZE^UTLERR"      // %et
	if cuvar.%help.isNull() set cuvar.%help = 0            // %help
	if cuvar.%helpcnt.isNull() set cuvar.%helpcnt = 0      // %helpcnt
	if cuvar.%keys.isNull() set cuvar.%keys = 0            // %keys
	if cuvar.%mcp.isNull() set cuvar.%mcp = 0              // %mcp
	if cuvar.alcount.isNull() set cuvar.alcount = 5        // alcount
	if cuvar.alphi.isNull() set cuvar.alphi = 0            // alphi
	if cuvar.bamtmod.isNull() set cuvar.bamtmod = 0        // bamtmod
	if cuvar.banner.isNull() set cuvar.banner = 1          // banner
	if cuvar.bindef.isNull() set cuvar.bindef = 0          // bindef
	if cuvar.bobr.isNull() set cuvar.bobr = 0              // bobr
	if cuvar.bsemod.isNull() set cuvar.bsemod = 0          // bsemod
	if cuvar.catsup.isNull() set cuvar.catsup = 0          // catsup
	if cuvar.ccmod.isNull() set cuvar.ccmod = 0            // ccmod
	if cuvar.chkimg.isNull() set cuvar.chkimg = 0          // chkimg
	if cuvar.cifalloc.isNull() set cuvar.cifalloc = 0      // cifalloc
	if cuvar.cifexti.isNull() set cuvar.cifexti = 0        // cifexti
	if cuvar.cmsacopt.isNull() set cuvar.cmsacopt = 0      // cmsacopt
	if cuvar.crtdsp.isNull() set cuvar.crtdsp = 0          // crtdsp
	if cuvar.ctof1098.isNull() set cuvar.ctof1098 = 0      // ctof1098
	if cuvar.ctof1099.isNull() set cuvar.ctof1099 = 0      // ctof1099
	if cuvar.currenv.isNull() set cuvar.currenv = 0        // currenv
	if cuvar.darcdflg.isNull() set cuvar.darcdflg = 0      // darcdflg
	if cuvar.dbsph132.isNull() set cuvar.dbsph132 = "SCAU$HELP:OOE_SCA132.EXP" // dbsph132
	if cuvar.dbsph80.isNull() set cuvar.dbsph80 = "SCAU$HELP:OOE_SCA80.EXP" // dbsph80
	if cuvar.debaut.isNull() set cuvar.debaut = 0          // debaut
	if cuvar.devptr.isNull() set cuvar.devptr = 0          // devptr
	if cuvar.dftthrc.isNull() set cuvar.dftthrc = 0        // dftthrc
	if cuvar.dftthrr.isNull() set cuvar.dftthrr = 0        // dftthrr
	if cuvar.duptin.isNull() set cuvar.duptin = 0          // duptin
	if cuvar.editmask.isNull() set cuvar.editmask = "US"   // editmask
	if cuvar.efd.isNull() set cuvar.efd = 0                // efd
	if cuvar.efdftflg.isNull() set cuvar.efdftflg = 0      // efdftflg
	if cuvar.eftmemo.isNull() set cuvar.eftmemo = 0        // eftmemo
	if cuvar.eftrefno.isNull() set cuvar.eftrefno = 0      // eftrefno
	if cuvar.eftrico.isNull() set cuvar.eftrico = 0        // eftrico
	if cuvar.emu.isNull() set cuvar.emu = 0                // emu
	if cuvar.emurnd.isNull() set cuvar.emurnd = 9          // emurnd
	if cuvar.errmdft.isNull() set cuvar.errmdft = 0        // errmdft
	if cuvar.eurinteg.isNull() set cuvar.eurinteg = 0      // eurinteg
	if cuvar.extrem.isNull() set cuvar.extrem = 0          // extrem
	if cuvar.extval.isNull() set cuvar.extval = 0          // extval
	if cuvar.failwait.isNull() set cuvar.failwait = 0      // failwait
	if cuvar.fcvmemo.isNull() set cuvar.fcvmemo = 0        // fcvmemo
	if cuvar.fepxall.isNull() set cuvar.fepxall = 0        // fepxall
	if cuvar.fldovf.isNull() set cuvar.fldovf = 0          // fldovf
	if cuvar.fncrate.isNull() set cuvar.fncrate = 0        // fncrate
	if cuvar.futbld.isNull() set cuvar.futbld = 0          // futbld
	if cuvar.fx.isNull() set cuvar.fx = 0                  // fx
	if cuvar.glefdbch.isNull() set cuvar.glefdbch = 0      // glefdbch
	if cuvar.iccff.isNull() set cuvar.iccff = 0            // iccff
	if cuvar.iccnf.isNull() set cuvar.iccnf = 0            // iccnf
	if cuvar.icdff.isNull() set cuvar.icdff = 0            // icdff
	if cuvar.icdnf.isNull() set cuvar.icdnf = 0            // icdnf
	if cuvar.icdrf.isNull() set cuvar.icdrf = 0            // icdrf
	if cuvar.icdtf.isNull() set cuvar.icdtf = 0            // icdtf
	if cuvar.iclff.isNull() set cuvar.iclff = 0            // iclff
	if cuvar.iclnf.isNull() set cuvar.iclnf = 0            // iclnf
	if cuvar.iclrf.isNull() set cuvar.iclrf = 0            // iclrf
	if cuvar.icltf.isNull() set cuvar.icltf = 0            // icltf
	if cuvar.image.isNull() set cuvar.image = 0            // image
	if cuvar.ipd.isNull() set cuvar.ipd = 0                // ipd
	if cuvar.irahist.isNull() set cuvar.irahist = 365      // irahist
	if cuvar.lccadr.isNull() set cuvar.lccadr = 0          // lccadr
	if cuvar.lccpu.isNull() set cuvar.lccpu = 0            // lccpu
	if cuvar.lcctit.isNull() set cuvar.lcctit = 0          // lcctit
	if cuvar.letfix.isNull() set cuvar.letfix = 0          // letfix
	if cuvar.limpro.isNull() set cuvar.limpro = 0          // limpro
	if cuvar.lncc.isNull() set cuvar.lncc = 0              // lncc
	if cuvar.lncfp.isNull() set cuvar.lncfp = 0            // lncfp
	if cuvar.lncpi.isNull() set cuvar.lncpi = 0            // lncpi
	if cuvar.lncpp.isNull() set cuvar.lncpp = 0            // lncpp
	if cuvar.lnrendel.isNull() set cuvar.lnrendel = 0      // lnrendel
	if cuvar.maxcifl.isNull() set cuvar.maxcifl = 12       // maxcifl
	if cuvar.mincifl.isNull() set cuvar.mincifl = 1        // mincifl
	if cuvar.mrpt.isNull() set cuvar.mrpt = 0              // mrpt
	if cuvar.multiitsid.isNull() set cuvar.multiitsid = 0  // multiitsid
	if cuvar.mxtrlm.isNull() set cuvar.mxtrlm = 0          // mxtrlm
	if cuvar.noregd.isNull() set cuvar.noregd = 0          // noregd
	if cuvar.nosegments.isNull() set cuvar.nosegments = 0  // nosegments
	if cuvar.notp.isNull() set cuvar.notp = 0              // notp
	if cuvar.obde.isNull() set cuvar.obde = 0              // obde
	if cuvar.odp.isNull() set cuvar.odp = 0                // odp
	if cuvar.odpe.isNull() set cuvar.odpe = 0              // odpe
	if cuvar.orcifn.isNull() set cuvar.orcifn = 1          // orcifn
	if cuvar.otc.isNull() set cuvar.otc = 0                // otc
	if cuvar.publish.isNull() set cuvar.publish = 0        // publish
	if cuvar.regccopt.isNull() set cuvar.regccopt = 0      // regccopt
	if cuvar.regflg.isNull() set cuvar.regflg = 0          // regflg
	if cuvar.rekey.isNull() set cuvar.rekey = 0            // rekey
	if cuvar.resproc.isNull() set cuvar.resproc = 0        // resproc
	if cuvar.restrict.isNull() set cuvar.restrict = 0      // restrict
	if cuvar.rpanet.isNull() set cuvar.rpanet = 0          // rpanet
	if cuvar.scaurel.isNull() set cuvar.scaurel = 0        // scaurel
	if cuvar.schrcc.isNull() set cuvar.schrcc = 0          // schrcc
	if cuvar.schrce.isNull() set cuvar.schrce = 0          // schrce
	if cuvar.schrcj.isNull() set cuvar.schrcj = 0          // schrcj
	if cuvar.schrck.isNull() set cuvar.schrck = 0          // schrck
	if cuvar.schrcl.isNull() set cuvar.schrcl = 0          // schrcl
	if cuvar.schrcn.isNull() set cuvar.schrcn = 0          // schrcn
	if cuvar.schri.isNull() set cuvar.schri = 0            // schri
	if cuvar.scovr.isNull() set cuvar.scovr = 0            // scovr
	if cuvar.sfeeopt.isNull() set cuvar.sfeeopt = 0        // sfeeopt
	if cuvar.splitday.isNull() set cuvar.splitday = 0      // splitday
	if cuvar.stmlcc.isNull() set cuvar.stmlcc = 0          // stmlcc
	if cuvar.stmtcdskip.isNull() set cuvar.stmtcdskip = 0  // stmtcdskip
	if cuvar.stmtcumul.isNull() set cuvar.stmtcumul = 0    // stmtcumul
	if cuvar.stmtintrtc.isNull() set cuvar.stmtintrtc = 0  // stmtintrtc
	if cuvar.stmtlnskip.isNull() set cuvar.stmtlnskip = 0  // stmtlnskip
	if cuvar.taxreq.isNull() set cuvar.taxreq = 1          // taxreq
	if cuvar.tfs.isNull() set cuvar.tfs = 0                // tfs
	if cuvar.tinco.isNull() set cuvar.tinco = 0            // tinco
	if cuvar.tref.isNull() set cuvar.tref = 0              // tref
	if cuvar.username.isNull() set cuvar.username = 0      // username
	if cuvar.usrestat.isNull() set cuvar.usrestat = 0      // usrestat
	quit


vreqn // Validate required data items

	type public RecordCUVAR cuvar

	if cuvar.%keys.isNull() do vreqerr("%KEYS") quit
	if cuvar.%mcp.isNull() do vreqerr("%MCP") quit
	if cuvar.alphi.isNull() do vreqerr("ALPHI") quit
	if cuvar.bamtmod.isNull() do vreqerr("BAMTMOD") quit
	if cuvar.banner.isNull() do vreqerr("BANNER") quit
	if cuvar.bindef.isNull() do vreqerr("BINDEF") quit
	if cuvar.bobr.isNull() do vreqerr("BOBR") quit
	if cuvar.bsemod.isNull() do vreqerr("BSEMOD") quit
	if cuvar.catsup.isNull() do vreqerr("CATSUP") quit
	if cuvar.ccmod.isNull() do vreqerr("CCMOD") quit
	if cuvar.chkimg.isNull() do vreqerr("CHKIMG") quit
	if cuvar.cifalloc.isNull() do vreqerr("CIFALLOC") quit
	if cuvar.cifexti.isNull() do vreqerr("CIFEXTI") quit
	if cuvar.cmsacopt.isNull() do vreqerr("CMSACOPT") quit
	if cuvar.crtdsp.isNull() do vreqerr("CRTDSP") quit
	if cuvar.ctof1098.isNull() do vreqerr("CTOF1098") quit
	if cuvar.ctof1099.isNull() do vreqerr("CTOF1099") quit
	if cuvar.currenv.isNull() do vreqerr("CURRENV") quit
	if cuvar.darcdflg.isNull() do vreqerr("DARCDFLG") quit
	if cuvar.debaut.isNull() do vreqerr("DEBAUT") quit
	if cuvar.devptr.isNull() do vreqerr("DEVPTR") quit
	if cuvar.dftthrc.isNull() do vreqerr("DFTTHRC") quit
	if cuvar.dftthrr.isNull() do vreqerr("DFTTHRR") quit
	if cuvar.duptin.isNull() do vreqerr("DUPTIN") quit
	if cuvar.efd.isNull() do vreqerr("EFD") quit
	if cuvar.efdftflg.isNull() do vreqerr("EFDFTFLG") quit
	if cuvar.eftmemo.isNull() do vreqerr("EFTMEMO") quit
	if cuvar.eftrefno.isNull() do vreqerr("EFTREFNO") quit
	if cuvar.eftrico.isNull() do vreqerr("EFTRICO") quit
	if cuvar.emu.isNull() do vreqerr("EMU") quit
	if cuvar.errmdft.isNull() do vreqerr("ERRMDFT") quit
	if cuvar.eurinteg.isNull() do vreqerr("EURINTEG") quit
	if cuvar.extrem.isNull() do vreqerr("EXTREM") quit
	if cuvar.extval.isNull() do vreqerr("EXTVAL") quit
	if cuvar.failwait.isNull() do vreqerr("FAILWAIT") quit
	if cuvar.fcvmemo.isNull() do vreqerr("FCVMEMO") quit
	if cuvar.fepxall.isNull() do vreqerr("FEPXALL") quit
	if cuvar.finye.isNull() do vreqerr("FINYE") quit
	if cuvar.fldovf.isNull() do vreqerr("FLDOVF") quit
	if cuvar.fncrate.isNull() do vreqerr("FNCRATE") quit
	if cuvar.futbld.isNull() do vreqerr("FUTBLD") quit
	if cuvar.fx.isNull() do vreqerr("FX") quit
	if cuvar.glefdbch.isNull() do vreqerr("GLEFDBCH") quit
	if cuvar.iccff.isNull() do vreqerr("ICCFF") quit
	if cuvar.iccnf.isNull() do vreqerr("ICCNF") quit
	if cuvar.icdff.isNull() do vreqerr("ICDFF") quit
	if cuvar.icdnf.isNull() do vreqerr("ICDNF") quit
	if cuvar.icdrf.isNull() do vreqerr("ICDRF") quit
	if cuvar.icdtf.isNull() do vreqerr("ICDTF") quit
	if cuvar.iclff.isNull() do vreqerr("ICLFF") quit
	if cuvar.iclnf.isNull() do vreqerr("ICLNF") quit
	if cuvar.iclrf.isNull() do vreqerr("ICLRF") quit
	if cuvar.icltf.isNull() do vreqerr("ICLTF") quit
	if cuvar.image.isNull() do vreqerr("IMAGE") quit
	if cuvar.ipd.isNull() do vreqerr("IPD") quit
	if cuvar.lccadr.isNull() do vreqerr("LCCADR") quit
	if cuvar.lccpu.isNull() do vreqerr("LCCPU") quit
	if cuvar.lcctit.isNull() do vreqerr("LCCTIT") quit
	if cuvar.letfix.isNull() do vreqerr("LETFIX") quit
	if cuvar.limpro.isNull() do vreqerr("LIMPRO") quit
	if cuvar.lnrendel.isNull() do vreqerr("LNRENDEL") quit
	if cuvar.mrpt.isNull() do vreqerr("MRPT") quit
	if cuvar.multiitsid.isNull() do vreqerr("MULTIITSID") quit
	if cuvar.mxtrlm.isNull() do vreqerr("MXTRLM") quit
	if cuvar.noregd.isNull() do vreqerr("NOREGD") quit
	if cuvar.nosegments.isNull() do vreqerr("NOSEGMENTS") quit
	if cuvar.notp.isNull() do vreqerr("NOTP") quit
	if cuvar.obde.isNull() do vreqerr("OBDE") quit
	if cuvar.odp.isNull() do vreqerr("ODP") quit
	if cuvar.odpe.isNull() do vreqerr("ODPE") quit
	if cuvar.orcifn.isNull() do vreqerr("ORCIFN") quit
	if cuvar.otc.isNull() do vreqerr("OTC") quit
	if cuvar.publish.isNull() do vreqerr("PUBLISH") quit
	if cuvar.regccopt.isNull() do vreqerr("REGCCOPT") quit
	if cuvar.regflg.isNull() do vreqerr("REGFLG") quit
	if cuvar.rekey.isNull() do vreqerr("REKEY") quit
	if cuvar.resproc.isNull() do vreqerr("RESPROC") quit
	if cuvar.restrict.isNull() do vreqerr("RESTRICT") quit
	if cuvar.rpanet.isNull() do vreqerr("RPANET") quit
	if cuvar.scaurel.isNull() do vreqerr("SCAUREL") quit
	if cuvar.schrcc.isNull() do vreqerr("SCHRCC") quit
	if cuvar.schrce.isNull() do vreqerr("SCHRCE") quit
	if cuvar.schrcj.isNull() do vreqerr("SCHRCJ") quit
	if cuvar.schrck.isNull() do vreqerr("SCHRCK") quit
	if cuvar.schrcl.isNull() do vreqerr("SCHRCL") quit
	if cuvar.schrcn.isNull() do vreqerr("SCHRCN") quit
	if cuvar.schri.isNull() do vreqerr("SCHRI") quit
	if cuvar.scovr.isNull() do vreqerr("SCOVR") quit
	if cuvar.sfeeopt.isNull() do vreqerr("SFEEOPT") quit
	if cuvar.splitday.isNull() do vreqerr("SPLITDAY") quit
	if cuvar.stmlcc.isNull() do vreqerr("STMLCC") quit
	if cuvar.stmtcdskip.isNull() do vreqerr("STMTCDSKIP") quit
	if cuvar.stmtcumul.isNull() do vreqerr("STMTCUMUL") quit
	if cuvar.stmtintrtc.isNull() do vreqerr("STMTINTRTC") quit
	if cuvar.stmtlnskip.isNull() do vreqerr("STMTLNSKIP") quit
	if cuvar.taxye.isNull() do vreqerr("TAXYE") quit
	if cuvar.tfs.isNull() do vreqerr("TFS") quit
	if cuvar.tinco.isNull() do vreqerr("TINCO") quit
	if cuvar.tref.isNull() do vreqerr("TREF") quit
	if cuvar.uacnl1f.isNull() do vreqerr("UACNL1F") quit
	if cuvar.usrestat.isNull() do vreqerr("USRESTAT") quit
	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordCUVAR cuvar


	if 'vobj(cuvar,-100,1099,"").order().isNull() do {
		if vx("CTOF1098").exists(),cuvar.ctof1098.isNull() do vreqerr("CTOF1098") quit
		if vx("CTOF1099").exists(),cuvar.ctof1099.isNull() do vreqerr("CTOF1099") quit
	}
	if 'vobj(cuvar,-100,"%BATCH","").order().isNull() do {
		if vx("FAILWAIT").exists(),cuvar.failwait.isNull() do vreqerr("FAILWAIT") quit
	}
	if 'vobj(cuvar,-100,"%CRCD","").order().isNull() do {
		if vx("BSEMOD").exists(),cuvar.bsemod.isNull() do vreqerr("BSEMOD") quit
		if vx("CCMOD").exists(),cuvar.ccmod.isNull() do vreqerr("CCMOD") quit
		if vx("BAMTMOD").exists(),cuvar.bamtmod.isNull() do vreqerr("BAMTMOD") quit
		if vx("OTC").exists(),cuvar.otc.isNull() do vreqerr("OTC") quit
		if vx("FX").exists(),cuvar.fx.isNull() do vreqerr("FX") quit
		if vx("TFS").exists(),cuvar.tfs.isNull() do vreqerr("TFS") quit
	}
	if 'vobj(cuvar,-100,"%ET","").order().isNull() do {
		if vx("ERRMDFT").exists(),cuvar.errmdft.isNull() do vreqerr("ERRMDFT") quit
	}
	if 'vobj(cuvar,-100,"%IO","").order().isNull() do {
		if vx("DEVPTR").exists(),cuvar.devptr.isNull() do vreqerr("DEVPTR") quit
	}
	if 'vobj(cuvar,-100,"%KEYS","").order().isNull() do {
		if vx("%KEYS").exists(),cuvar.%keys.isNull() do vreqerr("%KEYS") quit
	}
	if 'vobj(cuvar,-100,"%MCP","").order().isNull() do {
		if vx("%MCP").exists(),cuvar.%mcp.isNull() do vreqerr("%MCP") quit
	}
	if 'vobj(cuvar,-100,"ALP","").order().isNull() do {
		if vx("ALPHI").exists(),cuvar.alphi.isNull() do vreqerr("ALPHI") quit
	}
	if 'vobj(cuvar,-100,"BANNER","").order().isNull() do {
		if vx("BANNER").exists(),cuvar.banner.isNull() do vreqerr("BANNER") quit
	}
	if 'vobj(cuvar,-100,"BINDEF","").order().isNull() do {
		if vx("BINDEF").exists(),cuvar.bindef.isNull() do vreqerr("BINDEF") quit
	}
	if 'vobj(cuvar,-100,"BOBR","").order().isNull() do {
		if vx("BOBR").exists(),cuvar.bobr.isNull() do vreqerr("BOBR") quit
	}
	if 'vobj(cuvar,-100,"CHK","").order().isNull() do {
		if vx("CHKIMG").exists(),cuvar.chkimg.isNull() do vreqerr("CHKIMG") quit
	}
	if 'vobj(cuvar,-100,"CIF","").order().isNull() do {
		if vx("ORCIFN").exists(),cuvar.orcifn.isNull() do vreqerr("ORCIFN") quit
		if vx("CIFALLOC").exists(),cuvar.cifalloc.isNull() do vreqerr("CIFALLOC") quit
		if vx("LIMPRO").exists(),cuvar.limpro.isNull() do vreqerr("LIMPRO") quit
		if vx("DUPTIN").exists(),cuvar.duptin.isNull() do vreqerr("DUPTIN") quit
		if vx("TINCO").exists(),cuvar.tinco.isNull() do vreqerr("TINCO") quit
		if vx("EXTVAL").exists(),cuvar.extval.isNull() do vreqerr("EXTVAL") quit
	}
	if 'vobj(cuvar,-100,"CNTRY","").order().isNull() do {
		if vx("CATSUP").exists(),cuvar.catsup.isNull() do vreqerr("CATSUP") quit
	}
	if 'vobj(cuvar,-100,"CRT","").order().isNull() do {
		if vx("TREF").exists(),cuvar.tref.isNull() do vreqerr("TREF") quit
	}
	if 'vobj(cuvar,-100,"CRTDSP","").order().isNull() do {
		if vx("CRTDSP").exists(),cuvar.crtdsp.isNull() do vreqerr("CRTDSP") quit
	}
	if 'vobj(cuvar,-100,"CURRENV","").order().isNull() do {
		if vx("CURRENV").exists(),cuvar.currenv.isNull() do vreqerr("CURRENV") quit
	}
	if 'vobj(cuvar,-100,"DAYEND","").order().isNull() do {
		if vx("FINYE").exists(),cuvar.finye.isNull() do vreqerr("FINYE") quit
		if vx("TAXYE").exists(),cuvar.taxye.isNull() do vreqerr("TAXYE") quit
	}
	if 'vobj(cuvar,-100,"DBS","").order().isNull() do {
		if vx("FLDOVF").exists(),cuvar.fldovf.isNull() do vreqerr("FLDOVF") quit
		if vx("NOTP").exists(),cuvar.notp.isNull() do vreqerr("NOTP") quit
	}
	if 'vobj(cuvar,-100,"DEAL","").order().isNull() do {
		if vx("REKEY").exists(),cuvar.rekey.isNull() do vreqerr("REKEY") quit
	}
	if 'vobj(cuvar,-100,"DEP","").order().isNull() do {
		if vx("RPANET").exists(),cuvar.rpanet.isNull() do vreqerr("RPANET") quit
		if vx("CMSACOPT").exists(),cuvar.cmsacopt.isNull() do vreqerr("CMSACOPT") quit
	}
	if 'vobj(cuvar,-100,"DRMT","").order().isNull() do {
		if vx("STMLCC").exists(),cuvar.stmlcc.isNull() do vreqerr("STMLCC") quit
		if vx("LCCADR").exists(),cuvar.lccadr.isNull() do vreqerr("LCCADR") quit
		if vx("LCCTIT").exists(),cuvar.lcctit.isNull() do vreqerr("LCCTIT") quit
		if vx("LCCPU").exists(),cuvar.lccpu.isNull() do vreqerr("LCCPU") quit
	}
	if 'vobj(cuvar,-100,"EFD","").order().isNull() do {
		if vx("EFD").exists(),cuvar.efd.isNull() do vreqerr("EFD") quit
		if vx("EFDFTFLG").exists(),cuvar.efdftflg.isNull() do vreqerr("EFDFTFLG") quit
	}
	if 'vobj(cuvar,-100,"EFTPAY","").order().isNull() do {
		if vx("EFTRICO").exists(),cuvar.eftrico.isNull() do vreqerr("EFTRICO") quit
		if vx("EFTREFNO").exists(),cuvar.eftrefno.isNull() do vreqerr("EFTREFNO") quit
		if vx("DEBAUT").exists(),cuvar.debaut.isNull() do vreqerr("DEBAUT") quit
		if vx("FUTBLD").exists(),cuvar.futbld.isNull() do vreqerr("FUTBLD") quit
		if vx("EFTMEMO").exists(),cuvar.eftmemo.isNull() do vreqerr("EFTMEMO") quit
	}
	if 'vobj(cuvar,-100,"EUR","").order().isNull() do {
		if vx("EMU").exists(),cuvar.emu.isNull() do vreqerr("EMU") quit
		if vx("FNCRATE").exists(),cuvar.fncrate.isNull() do vreqerr("FNCRATE") quit
		if vx("DFTTHRC").exists(),cuvar.dftthrc.isNull() do vreqerr("DFTTHRC") quit
		if vx("DFTTHRR").exists(),cuvar.dftthrr.isNull() do vreqerr("DFTTHRR") quit
		if vx("SCOVR").exists(),cuvar.scovr.isNull() do vreqerr("SCOVR") quit
		if vx("EURINTEG").exists(),cuvar.eurinteg.isNull() do vreqerr("EURINTEG") quit
	}
	if 'vobj(cuvar,-100,"FCVMEMO","").order().isNull() do {
		if vx("FCVMEMO").exists(),cuvar.fcvmemo.isNull() do vreqerr("FCVMEMO") quit
	}
	if 'vobj(cuvar,-100,"FEPXALL","").order().isNull() do {
		if vx("FEPXALL").exists(),cuvar.fepxall.isNull() do vreqerr("FEPXALL") quit
	}
	if 'vobj(cuvar,-100,"GLEFD","").order().isNull() do {
		if vx("GLEFDBCH").exists(),cuvar.glefdbch.isNull() do vreqerr("GLEFDBCH") quit
	}
	if 'vobj(cuvar,-100,"IMAGE","").order().isNull() do {
		if vx("IMAGE").exists(),cuvar.image.isNull() do vreqerr("IMAGE") quit
	}
	if 'vobj(cuvar,-100,"INCK","").order().isNull() do {
		if vx("ICDTF").exists(),cuvar.icdtf.isNull() do vreqerr("ICDTF") quit
		if vx("ICDFF").exists(),cuvar.icdff.isNull() do vreqerr("ICDFF") quit
		if vx("ICDNF").exists(),cuvar.icdnf.isNull() do vreqerr("ICDNF") quit
		if vx("ICDRF").exists(),cuvar.icdrf.isNull() do vreqerr("ICDRF") quit
		if vx("ICLTF").exists(),cuvar.icltf.isNull() do vreqerr("ICLTF") quit
		if vx("ICLFF").exists(),cuvar.iclff.isNull() do vreqerr("ICLFF") quit
		if vx("ICLNF").exists(),cuvar.iclnf.isNull() do vreqerr("ICLNF") quit
		if vx("ICLRF").exists(),cuvar.iclrf.isNull() do vreqerr("ICLRF") quit
		if vx("ICCFF").exists(),cuvar.iccff.isNull() do vreqerr("ICCFF") quit
		if vx("ICCNF").exists(),cuvar.iccnf.isNull() do vreqerr("ICCNF") quit
	}
	if 'vobj(cuvar,-100,"IPD","").order().isNull() do {
		if vx("IPD").exists(),cuvar.ipd.isNull() do vreqerr("IPD") quit
	}
	if 'vobj(cuvar,-100,"LETTER","").order().isNull() do {
		if vx("LETFIX").exists(),cuvar.letfix.isNull() do vreqerr("LETFIX") quit
	}
	if 'vobj(cuvar,-100,"LN","").order().isNull() do {
		if vx("DARCDFLG").exists(),cuvar.darcdflg.isNull() do vreqerr("DARCDFLG") quit
		if vx("LNRENDEL").exists(),cuvar.lnrendel.isNull() do vreqerr("LNRENDEL") quit
		if vx("MRPT").exists(),cuvar.mrpt.isNull() do vreqerr("MRPT") quit
	}
	if 'vobj(cuvar,-100,"MFUND","").order().isNull() do {
		if vx("CIFEXTI").exists(),cuvar.cifexti.isNull() do vreqerr("CIFEXTI") quit
	}
	if 'vobj(cuvar,-100,"MULTIITSID","").order().isNull() do {
		if vx("MULTIITSID").exists(),cuvar.multiitsid.isNull() do vreqerr("MULTIITSID") quit
	}
	if 'vobj(cuvar,-100,"MXTRLM","").order().isNull() do {
		if vx("MXTRLM").exists(),cuvar.mxtrlm.isNull() do vreqerr("MXTRLM") quit
	}
	if 'vobj(cuvar,-100,"NOREGD","").order().isNull() do {
		if vx("NOREGD").exists(),cuvar.noregd.isNull() do vreqerr("NOREGD") quit
	}
	if 'vobj(cuvar,-100,"ODP","").order().isNull() do {
		if vx("ODP").exists(),cuvar.odp.isNull() do vreqerr("ODP") quit
		if vx("SFEEOPT").exists(),cuvar.sfeeopt.isNull() do vreqerr("SFEEOPT") quit
	}
	if 'vobj(cuvar,-100,"ODPE","").order().isNull() do {
		if vx("ODPE").exists(),cuvar.odpe.isNull() do vreqerr("ODPE") quit
	}
	if 'vobj(cuvar,-100,"OPTIMIZE","").order().isNull() do {
		if vx("NOSEGMENTS").exists(),cuvar.nosegments.isNull() do vreqerr("NOSEGMENTS") quit
	}
	if 'vobj(cuvar,-100,"PUBLISH","").order().isNull() do {
		if vx("PUBLISH").exists(),cuvar.publish.isNull() do vreqerr("PUBLISH") quit
	}
	if 'vobj(cuvar,-100,"REGCC","").order().isNull() do {
		if vx("REGCCOPT").exists(),cuvar.regccopt.isNull() do vreqerr("REGCCOPT") quit
		if vx("OBDE").exists(),cuvar.obde.isNull() do vreqerr("OBDE") quit
	}
	if 'vobj(cuvar,-100,"REGFLG","").order().isNull() do {
		if vx("REGFLG").exists(),cuvar.regflg.isNull() do vreqerr("REGFLG") quit
	}
	if 'vobj(cuvar,-100,"RESPROC","").order().isNull() do {
		if vx("RESPROC").exists(),cuvar.resproc.isNull() do vreqerr("RESPROC") quit
	}
	if 'vobj(cuvar,-100,"RESTRICT","").order().isNull() do {
		if vx("RESTRICT").exists(),cuvar.restrict.isNull() do vreqerr("RESTRICT") quit
	}
	if 'vobj(cuvar,-100,"SCAUREL","").order().isNull() do {
		if vx("SCAUREL").exists(),cuvar.scaurel.isNull() do vreqerr("SCAUREL") quit
	}
	if 'vobj(cuvar,-100,"SCHRC","").order().isNull() do {
		if vx("SCHRCC").exists(),cuvar.schrcc.isNull() do vreqerr("SCHRCC") quit
		if vx("SCHRCJ").exists(),cuvar.schrcj.isNull() do vreqerr("SCHRCJ") quit
		if vx("SCHRCK").exists(),cuvar.schrck.isNull() do vreqerr("SCHRCK") quit
		if vx("SCHRCL").exists(),cuvar.schrcl.isNull() do vreqerr("SCHRCL") quit
		if vx("SCHRCN").exists(),cuvar.schrcn.isNull() do vreqerr("SCHRCN") quit
		if vx("SCHRI").exists(),cuvar.schri.isNull() do vreqerr("SCHRI") quit
		if vx("SCHRCE").exists(),cuvar.schrce.isNull() do vreqerr("SCHRCE") quit
	}
	if 'vobj(cuvar,-100,"SPLITDAY","").order().isNull() do {
		if vx("SPLITDAY").exists(),cuvar.splitday.isNull() do vreqerr("SPLITDAY") quit
	}
	if 'vobj(cuvar,-100,"STMTSRT","").order().isNull() do {
		if vx("STMTCDSKIP").exists(),cuvar.stmtcdskip.isNull() do vreqerr("STMTCDSKIP") quit
		if vx("STMTINTRTC").exists(),cuvar.stmtintrtc.isNull() do vreqerr("STMTINTRTC") quit
		if vx("STMTLNSKIP").exists(),cuvar.stmtlnskip.isNull() do vreqerr("STMTLNSKIP") quit
		if vx("STMTCUMUL").exists(),cuvar.stmtcumul.isNull() do vreqerr("STMTCUMUL") quit
	}
	if 'vobj(cuvar,-100,"SWIFT","").order().isNull() do {
		if vx("EXTREM").exists(),cuvar.extrem.isNull() do vreqerr("EXTREM") quit
	}
	if 'vobj(cuvar,-100,"UACNL1F","").order().isNull() do {
		if vx("UACNL1F").exists(),cuvar.uacnl1f.isNull() do vreqerr("UACNL1F") quit
	}
	if 'vobj(cuvar,-100,"USRESTAT","").order().isNull() do {
		if vx("USRESTAT").exists(),cuvar.usrestat.isNull() do vreqerr("USRESTAT") quit
	}
		if vx("%KEYS").exists(),cuvar.%keys.isNull() do vreqerr("%KEYS") quit
		if vx("%MCP").exists(),cuvar.%mcp.isNull() do vreqerr("%MCP") quit
		if vx("ALPHI").exists(),cuvar.alphi.isNull() do vreqerr("ALPHI") quit
		if vx("BAMTMOD").exists(),cuvar.bamtmod.isNull() do vreqerr("BAMTMOD") quit
		if vx("BANNER").exists(),cuvar.banner.isNull() do vreqerr("BANNER") quit
		if vx("BINDEF").exists(),cuvar.bindef.isNull() do vreqerr("BINDEF") quit
		if vx("BOBR").exists(),cuvar.bobr.isNull() do vreqerr("BOBR") quit
		if vx("BSEMOD").exists(),cuvar.bsemod.isNull() do vreqerr("BSEMOD") quit
		if vx("CATSUP").exists(),cuvar.catsup.isNull() do vreqerr("CATSUP") quit
		if vx("CCMOD").exists(),cuvar.ccmod.isNull() do vreqerr("CCMOD") quit
		if vx("CHKIMG").exists(),cuvar.chkimg.isNull() do vreqerr("CHKIMG") quit
		if vx("CIFALLOC").exists(),cuvar.cifalloc.isNull() do vreqerr("CIFALLOC") quit
		if vx("CIFEXTI").exists(),cuvar.cifexti.isNull() do vreqerr("CIFEXTI") quit
		if vx("CMSACOPT").exists(),cuvar.cmsacopt.isNull() do vreqerr("CMSACOPT") quit
		if vx("CRTDSP").exists(),cuvar.crtdsp.isNull() do vreqerr("CRTDSP") quit
		if vx("CTOF1098").exists(),cuvar.ctof1098.isNull() do vreqerr("CTOF1098") quit
		if vx("CTOF1099").exists(),cuvar.ctof1099.isNull() do vreqerr("CTOF1099") quit
		if vx("CURRENV").exists(),cuvar.currenv.isNull() do vreqerr("CURRENV") quit
		if vx("DARCDFLG").exists(),cuvar.darcdflg.isNull() do vreqerr("DARCDFLG") quit
		if vx("DEBAUT").exists(),cuvar.debaut.isNull() do vreqerr("DEBAUT") quit
		if vx("DEVPTR").exists(),cuvar.devptr.isNull() do vreqerr("DEVPTR") quit
		if vx("DFTTHRC").exists(),cuvar.dftthrc.isNull() do vreqerr("DFTTHRC") quit
		if vx("DFTTHRR").exists(),cuvar.dftthrr.isNull() do vreqerr("DFTTHRR") quit
		if vx("DUPTIN").exists(),cuvar.duptin.isNull() do vreqerr("DUPTIN") quit
		if vx("EFD").exists(),cuvar.efd.isNull() do vreqerr("EFD") quit
		if vx("EFDFTFLG").exists(),cuvar.efdftflg.isNull() do vreqerr("EFDFTFLG") quit
		if vx("EFTMEMO").exists(),cuvar.eftmemo.isNull() do vreqerr("EFTMEMO") quit
		if vx("EFTREFNO").exists(),cuvar.eftrefno.isNull() do vreqerr("EFTREFNO") quit
		if vx("EFTRICO").exists(),cuvar.eftrico.isNull() do vreqerr("EFTRICO") quit
		if vx("EMU").exists(),cuvar.emu.isNull() do vreqerr("EMU") quit
		if vx("ERRMDFT").exists(),cuvar.errmdft.isNull() do vreqerr("ERRMDFT") quit
		if vx("EURINTEG").exists(),cuvar.eurinteg.isNull() do vreqerr("EURINTEG") quit
		if vx("EXTREM").exists(),cuvar.extrem.isNull() do vreqerr("EXTREM") quit
		if vx("EXTVAL").exists(),cuvar.extval.isNull() do vreqerr("EXTVAL") quit
		if vx("FAILWAIT").exists(),cuvar.failwait.isNull() do vreqerr("FAILWAIT") quit
		if vx("FCVMEMO").exists(),cuvar.fcvmemo.isNull() do vreqerr("FCVMEMO") quit
		if vx("FEPXALL").exists(),cuvar.fepxall.isNull() do vreqerr("FEPXALL") quit
		if vx("FINYE").exists(),cuvar.finye.isNull() do vreqerr("FINYE") quit
		if vx("FLDOVF").exists(),cuvar.fldovf.isNull() do vreqerr("FLDOVF") quit
		if vx("FNCRATE").exists(),cuvar.fncrate.isNull() do vreqerr("FNCRATE") quit
		if vx("FUTBLD").exists(),cuvar.futbld.isNull() do vreqerr("FUTBLD") quit
		if vx("FX").exists(),cuvar.fx.isNull() do vreqerr("FX") quit
		if vx("GLEFDBCH").exists(),cuvar.glefdbch.isNull() do vreqerr("GLEFDBCH") quit
		if vx("ICCFF").exists(),cuvar.iccff.isNull() do vreqerr("ICCFF") quit
		if vx("ICCNF").exists(),cuvar.iccnf.isNull() do vreqerr("ICCNF") quit
		if vx("ICDFF").exists(),cuvar.icdff.isNull() do vreqerr("ICDFF") quit
		if vx("ICDNF").exists(),cuvar.icdnf.isNull() do vreqerr("ICDNF") quit
		if vx("ICDRF").exists(),cuvar.icdrf.isNull() do vreqerr("ICDRF") quit
		if vx("ICDTF").exists(),cuvar.icdtf.isNull() do vreqerr("ICDTF") quit
		if vx("ICLFF").exists(),cuvar.iclff.isNull() do vreqerr("ICLFF") quit
		if vx("ICLNF").exists(),cuvar.iclnf.isNull() do vreqerr("ICLNF") quit
		if vx("ICLRF").exists(),cuvar.iclrf.isNull() do vreqerr("ICLRF") quit
		if vx("ICLTF").exists(),cuvar.icltf.isNull() do vreqerr("ICLTF") quit
		if vx("IMAGE").exists(),cuvar.image.isNull() do vreqerr("IMAGE") quit
		if vx("IPD").exists(),cuvar.ipd.isNull() do vreqerr("IPD") quit
		if vx("LCCADR").exists(),cuvar.lccadr.isNull() do vreqerr("LCCADR") quit
		if vx("LCCPU").exists(),cuvar.lccpu.isNull() do vreqerr("LCCPU") quit
		if vx("LCCTIT").exists(),cuvar.lcctit.isNull() do vreqerr("LCCTIT") quit
		if vx("LETFIX").exists(),cuvar.letfix.isNull() do vreqerr("LETFIX") quit
		if vx("LIMPRO").exists(),cuvar.limpro.isNull() do vreqerr("LIMPRO") quit
		if vx("LNRENDEL").exists(),cuvar.lnrendel.isNull() do vreqerr("LNRENDEL") quit
		if vx("MRPT").exists(),cuvar.mrpt.isNull() do vreqerr("MRPT") quit
		if vx("MULTIITSID").exists(),cuvar.multiitsid.isNull() do vreqerr("MULTIITSID") quit
		if vx("MXTRLM").exists(),cuvar.mxtrlm.isNull() do vreqerr("MXTRLM") quit
		if vx("NOREGD").exists(),cuvar.noregd.isNull() do vreqerr("NOREGD") quit
		if vx("NOSEGMENTS").exists(),cuvar.nosegments.isNull() do vreqerr("NOSEGMENTS") quit
		if vx("NOTP").exists(),cuvar.notp.isNull() do vreqerr("NOTP") quit
		if vx("OBDE").exists(),cuvar.obde.isNull() do vreqerr("OBDE") quit
		if vx("ODP").exists(),cuvar.odp.isNull() do vreqerr("ODP") quit
		if vx("ODPE").exists(),cuvar.odpe.isNull() do vreqerr("ODPE") quit
		if vx("ORCIFN").exists(),cuvar.orcifn.isNull() do vreqerr("ORCIFN") quit
		if vx("OTC").exists(),cuvar.otc.isNull() do vreqerr("OTC") quit
		if vx("PUBLISH").exists(),cuvar.publish.isNull() do vreqerr("PUBLISH") quit
		if vx("REGCCOPT").exists(),cuvar.regccopt.isNull() do vreqerr("REGCCOPT") quit
		if vx("REGFLG").exists(),cuvar.regflg.isNull() do vreqerr("REGFLG") quit
		if vx("REKEY").exists(),cuvar.rekey.isNull() do vreqerr("REKEY") quit
		if vx("RESPROC").exists(),cuvar.resproc.isNull() do vreqerr("RESPROC") quit
		if vx("RESTRICT").exists(),cuvar.restrict.isNull() do vreqerr("RESTRICT") quit
		if vx("RPANET").exists(),cuvar.rpanet.isNull() do vreqerr("RPANET") quit
		if vx("SCAUREL").exists(),cuvar.scaurel.isNull() do vreqerr("SCAUREL") quit
		if vx("SCHRCC").exists(),cuvar.schrcc.isNull() do vreqerr("SCHRCC") quit
		if vx("SCHRCE").exists(),cuvar.schrce.isNull() do vreqerr("SCHRCE") quit
		if vx("SCHRCJ").exists(),cuvar.schrcj.isNull() do vreqerr("SCHRCJ") quit
		if vx("SCHRCK").exists(),cuvar.schrck.isNull() do vreqerr("SCHRCK") quit
		if vx("SCHRCL").exists(),cuvar.schrcl.isNull() do vreqerr("SCHRCL") quit
		if vx("SCHRCN").exists(),cuvar.schrcn.isNull() do vreqerr("SCHRCN") quit
		if vx("SCHRI").exists(),cuvar.schri.isNull() do vreqerr("SCHRI") quit
		if vx("SCOVR").exists(),cuvar.scovr.isNull() do vreqerr("SCOVR") quit
		if vx("SFEEOPT").exists(),cuvar.sfeeopt.isNull() do vreqerr("SFEEOPT") quit
		if vx("SPLITDAY").exists(),cuvar.splitday.isNull() do vreqerr("SPLITDAY") quit
		if vx("STMLCC").exists(),cuvar.stmlcc.isNull() do vreqerr("STMLCC") quit
		if vx("STMTCDSKIP").exists(),cuvar.stmtcdskip.isNull() do vreqerr("STMTCDSKIP") quit
		if vx("STMTCUMUL").exists(),cuvar.stmtcumul.isNull() do vreqerr("STMTCUMUL") quit
		if vx("STMTINTRTC").exists(),cuvar.stmtintrtc.isNull() do vreqerr("STMTINTRTC") quit
		if vx("STMTLNSKIP").exists(),cuvar.stmtlnskip.isNull() do vreqerr("STMTLNSKIP") quit
		if vx("TAXYE").exists(),cuvar.taxye.isNull() do vreqerr("TAXYE") quit
		if vx("TFS").exists(),cuvar.tfs.isNull() do vreqerr("TFS") quit
		if vx("TINCO").exists(),cuvar.tinco.isNull() do vreqerr("TINCO") quit
		if vx("TREF").exists(),cuvar.tref.isNull() do vreqerr("TREF") quit
		if vx("UACNL1F").exists(),cuvar.uacnl1f.isNull() do vreqerr("UACNL1F") quit
		if vx("USRESTAT").exists(),cuvar.usrestat.isNull() do vreqerr("USRESTAT") quit
	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CUVAR","MSG",1767,"CUVAR."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordCUVAR cuvar

	if (%O = 2) do vload

	if vobj(cuvar,2).exists() do {

		set X = cuvar.tjd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("TJD", vRM) quit
	}

	if vobj(cuvar,1099).exists() do {

		set X = cuvar.cac if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("CAC", vRM) quit
		if cuvar.cemail.length()>50 set vRM = $$^MSG(1076,50) do vdderr("CEMAIL", vRM) quit
		if cuvar.contact.length()>20 set vRM = $$^MSG(1076,20) do vdderr("CONTACT", vRM) quit
		set X = cuvar.corpid if 'X.isNull(),X'?1.8N,X'?1"-"1.7N set vRM=$$^MSG(742,"N") do vdderr("CORPID", vRM) quit
		set X = cuvar.ctele if 'X.isNull(),X'?1.7N,X'?1"-"1.6N set vRM=$$^MSG(742,"N") do vdderr("CTELE", vRM) quit
		if '("01"[cuvar.CTOF1098) set vRM=$$^MSG(742,"L") do vdderr("CTOF1098", vRM) quit
		if '("01"[cuvar.CTOF1099) set vRM=$$^MSG(742,"L") do vdderr("CTOF1099", vRM) quit
		if cuvar.iad1.length()>30 set vRM = $$^MSG(1076,30) do vdderr("IAD1", vRM) quit
		if cuvar.iad2.length()>30 set vRM = $$^MSG(1076,30) do vdderr("IAD2", vRM) quit
		if cuvar.iad3.length()>30 set vRM = $$^MSG(1076,30) do vdderr("IAD3", vRM) quit
		if cuvar.icity.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ICITY", vRM) quit
		set X = cuvar.icntry if 'X.isNull(),'Db.isDefined("STBLCNTRY","X") set vRM = $$^MSG(1485,X) do vdderr("ICNTRY", vRM) quit
		if cuvar.iname.length()>30 set vRM = $$^MSG(1076,30) do vdderr("INAME", vRM) quit
		if cuvar.iname2.length()>30 set vRM = $$^MSG(1076,30) do vdderr("INAME2", vRM) quit
		set X = cuvar.istate if 'X.isNull(),'Db.isDefined("STBLCNTRY1","CNTRY=""US"",STATE=:X") set vRM = $$^MSG(1485,X) do vdderr("ISTATE", vRM) quit
		if cuvar.izip.length()>10 set vRM = $$^MSG(1076,10) do vdderr("IZIP", vRM) quit
		set X = cuvar.sbi if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("SBI", vRM) quit
	}

	if vobj(cuvar,"%ATM").exists() do {

		if cuvar.%atm.length()>12 set vRM = $$^MSG(1076,12) do vdderr("%ATM", vRM) quit
	}

	if vobj(cuvar,"%BATCH").exists() do {

		set X = cuvar.batrestart if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("BATRESTART", vRM) quit
		if '("01"[cuvar.FAILWAIT) set vRM=$$^MSG(742,"L") do vdderr("FAILWAIT", vRM) quit
	}

	if vobj(cuvar,"%BWPCT").exists() do {

		set X = cuvar.%bwpct if 'X.isNull() set vRM = $$VAL^DBSVER("N",9,0,,,,,5) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.%BWPCT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	}

	if vobj(cuvar,"%CC").exists() do {

		set X = cuvar.%cc if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.%CC"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	}

	if vobj(cuvar,"%CRCD").exists() do {

		if cuvar.%crcd.length()>3 set vRM = $$^MSG(1076,3) do vdderr("%CRCD", vRM) quit
		if '("01"[cuvar.BAMTMOD) set vRM=$$^MSG(742,"L") do vdderr("BAMTMOD", vRM) quit
		if '("01"[cuvar.BSEMOD) set vRM=$$^MSG(742,"L") do vdderr("BSEMOD", vRM) quit
		if '("01"[cuvar.CCMOD) set vRM=$$^MSG(742,"L") do vdderr("CCMOD", vRM) quit
		set X = cuvar.cecr if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("CECR", vRM) quit
		set X = cuvar.cedr if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("CEDR", vRM) quit
		if cuvar.certn.length()>9 set vRM = $$^MSG(1076,9) do vdderr("CERTN", vRM) quit
		if '("01"[cuvar.FX) set vRM=$$^MSG(742,"L") do vdderr("FX", vRM) quit
		set X = cuvar.fxloss if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("FXLOSS", vRM) quit
		set X = cuvar.fxposl if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("FXPOSL", vRM) quit
		set X = cuvar.fxpospl if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("FXPOSPL", vRM) quit
		set X = cuvar.fxposrt if 'X.isNull(),'Db.isDefined("STBLFXPOSRT","X") set vRM = $$^MSG(1485,X) do vdderr("FXPOSRT", vRM) quit
		set X = cuvar.fxprofit if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("FXPROFIT", vRM) quit
		set X = cuvar.itspospl if 'X.isNull(),'Db.isDefined("STBLFXPOSRT","X") set vRM = $$^MSG(1485,X) do vdderr("ITSPOSPL", vRM) quit
		if '("01"[cuvar.OTC) set vRM=$$^MSG(742,"L") do vdderr("OTC", vRM) quit
		set X = cuvar.tcecr if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("TCECR", vRM) quit
		set X = cuvar.tcedr if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("TCEDR", vRM) quit
		if '("01"[cuvar.TFS) set vRM=$$^MSG(742,"L") do vdderr("TFS", vRM) quit
		set X = cuvar.tfsl if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("TFSL", vRM) quit
		set X = cuvar.tfsp if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("TFSP", vRM) quit
		set X = cuvar.tfspospl if 'X.isNull(),'Db.isDefined("STBLFXPOSRT","X") set vRM = $$^MSG(1485,X) do vdderr("TFSPOSPL", vRM) quit
	}

	if vobj(cuvar,"%ET").exists() do {

		if cuvar.%et.length()>17 set vRM = $$^MSG(1076,17) do vdderr("%ET", vRM) quit
		if cuvar.errmail.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ERRMAIL", vRM) quit
		if '("01"[cuvar.ERRMDFT) set vRM=$$^MSG(742,"L") do vdderr("ERRMDFT", vRM) quit
	}

	if vobj(cuvar,"%HELP").exists() do {

		set X = cuvar.%help if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("%HELP", vRM) quit
		set X = cuvar.%helpcnt if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("%HELPCNT", vRM) quit
	}

	if vobj(cuvar,"%IO").exists() do {

		if cuvar.devio.length()>9 set vRM = $$^MSG(1076,9) do vdderr("DEVIO", vRM) quit
		if '("01"[cuvar.DEVPTR) set vRM=$$^MSG(742,"L") do vdderr("DEVPTR", vRM) quit
	}

	if vobj(cuvar,"%KEYS").exists() do {

		if '("01"[cuvar.%KEYS) set vRM=$$^MSG(742,"L") do vdderr("%KEYS", vRM) quit
	}

	if vobj(cuvar,"%LIBS").exists() do {

		if cuvar.%libs.length()>8 set vRM = $$^MSG(1076,8) do vdderr("%LIBS", vRM) quit
	}

	if vobj(cuvar,"%MCP").exists() do {

		if '("01"[cuvar.%MCP) set vRM=$$^MSG(742,"L") do vdderr("%MCP", vRM) quit
	}

	if vobj(cuvar,"%TBLS").exists() do {

		if cuvar.tbls.length()>500 set vRM = $$^MSG(1076,500) do vdderr("TBLS", vRM) quit
	}

	if vobj(cuvar,"%TO").exists() do {

		set X = cuvar.%to if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("%TO", vRM) quit
	}

	if vobj(cuvar,"%TOHALT").exists() do {

		set X = cuvar.%tohalt if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("%TOHALT", vRM) quit
	}

	if vobj(cuvar,"%VN").exists() do {

		set X = cuvar.%vn if 'X.isNull() set vRM = $$VAL^DBSVER("N",3,0,,,,,1) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.%VN"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	}

	if vobj(cuvar,"ACHORIG").exists() do {

		set X = cuvar.borig if 'X.isNull(),'Db.isDefined("UTBLACHRT","X") set vRM = $$^MSG(1485,X) do vdderr("BORIG", vRM) quit
		set X = cuvar.fdest if 'X.isNull(),'Db.isDefined("UTBLACHRT","X") set vRM = $$^MSG(1485,X) do vdderr("FDEST", vRM) quit
		set X = cuvar.forig if 'X.isNull(),'Db.isDefined("UTBLACHRT","X") set vRM = $$^MSG(1485,X) do vdderr("FORIG", vRM) quit
		set X = cuvar.lead if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("LEAD", vRM) quit
	}

	if vobj(cuvar,"ACNMRPC").exists() do {

		if cuvar.acnmrpc.length()>20 set vRM = $$^MSG(1076,20) do vdderr("ACNMRPC", vRM) quit
	}

	if vobj(cuvar,"ADDR").exists() do {

		if cuvar.cad1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("CAD1", vRM) quit
		if cuvar.cad2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("CAD2", vRM) quit
		if cuvar.cad3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("CAD3", vRM) quit
		if cuvar.ccity.length()>40 set vRM = $$^MSG(1076,40) do vdderr("CCITY", vRM) quit
		set X = cuvar.ccntry if 'X.isNull(),'Db.isDefined("STBLCNTRY","X") set vRM = $$^MSG(1485,X) do vdderr("CCNTRY", vRM) quit
		if cuvar.cname.length()>40 set vRM = $$^MSG(1076,40) do vdderr("CNAME", vRM) quit
		if cuvar.cstate.length()>2 set vRM = $$^MSG(1076,2) do vdderr("CSTATE", vRM) quit
		if cuvar.czip.length()>10 set vRM = $$^MSG(1076,10) do vdderr("CZIP", vRM) quit
		if cuvar.telephone.length()>15 set vRM = $$^MSG(1076,15) do vdderr("TELEPHONE", vRM) quit
	}

	if vobj(cuvar,"ADSCR").exists() do {

		if cuvar.adrscr.length()>12 set vRM = $$^MSG(1076,12) do vdderr("ADRSCR", vRM) quit
		if cuvar.adrscri.length()>12 set vRM = $$^MSG(1076,12) do vdderr("ADRSCRI", vRM) quit
		if cuvar.adrscrm.length()>12 set vRM = $$^MSG(1076,12) do vdderr("ADRSCRM", vRM) quit
	}

	if vobj(cuvar,"AGEMS").exists() do {

		set X = cuvar.age1 if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("AGE1", vRM) quit
		set X = cuvar.age2 if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("AGE2", vRM) quit
		set X = cuvar.age3 if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("AGE3", vRM) quit
		set X = cuvar.age4 if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("AGE4", vRM) quit
	}

	if vobj(cuvar,"ALCOUNT").exists() do {

		set X = cuvar.alcount if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("ALCOUNT", vRM) quit
	}

	if vobj(cuvar,"ALP").exists() do {

		if '("01"[cuvar.ALPHI) set vRM=$$^MSG(742,"L") do vdderr("ALPHI", vRM) quit
	}

	if vobj(cuvar,"ANAOFF").exists() do {

		set X = cuvar.anaoff if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("ANAOFF", vRM) quit
	}

	if vobj(cuvar,"AUTOAUTH").exists() do {

		set X = cuvar.autoauth if 'X.isNull(),'Db.isDefined("STBLAUTOAUTH","X") set vRM = $$^MSG(1485,X) do vdderr("AUTOAUTH", vRM) quit
	}

	if vobj(cuvar,"BANNER").exists() do {

		if '("01"[cuvar.BANNER) set vRM=$$^MSG(742,"L") do vdderr("BANNER", vRM) quit
	}

	if vobj(cuvar,"BINDEF").exists() do {

		if '("01"[cuvar.BINDEF) set vRM=$$^MSG(742,"L") do vdderr("BINDEF", vRM) quit
	}

	if vobj(cuvar,"BOBR").exists() do {

		set X = cuvar.bobr if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("BOBR", vRM) quit
	}

	if vobj(cuvar,"BSA").exists() do {

		set X = cuvar.bsa if 'X.isNull(),'Db.isDefined("STBLBSA","X") set vRM = $$^MSG(1485,X) do vdderr("BSA", vRM) quit
	}

	if vobj(cuvar,"BTTJOB").exists() do {

		set X = cuvar.bttjob if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("BTTJOB", vRM) quit
	}

	if vobj(cuvar,"BWAPGM").exists() do {

		if cuvar.bwapgm.length()>17 set vRM = $$^MSG(1076,17) do vdderr("BWAPGM", vRM) quit
	}

	if vobj(cuvar,"BWO").exists() do {

		set X = cuvar.bwo if 'X.isNull(),'Db.isDefined("STBLBWO","X") set vRM = $$^MSG(1485,X) do vdderr("BWO", vRM) quit
	}

	if vobj(cuvar,"CHK").exists() do {

		if '("01"[cuvar.CHKIMG) set vRM=$$^MSG(742,"L") do vdderr("CHKIMG", vRM) quit
	}

	if vobj(cuvar,"CHKHLDRTN").exists() do {

		if cuvar.chkhldrtn.length()>9 set vRM = $$^MSG(1076,9) do vdderr("CHKHLDRTN", vRM) quit
	}

	if vobj(cuvar,"CHKPNT").exists() do {

		if cuvar.chkpnt.length()>9 set vRM = $$^MSG(1076,9) do vdderr("CHKPNT", vRM) quit
	}

	if vobj(cuvar,"CIDBLK").exists() do {

		set X = cuvar.cidblk if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("CIDBLK", vRM) quit
	}

	if vobj(cuvar,"CIDLOWLM").exists() do {

		set X = cuvar.cidlowlm if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("CIDLOWLM", vRM) quit
	}

	if vobj(cuvar,"CIF").exists() do {

		if '("01"[cuvar.CIFALLOC) set vRM=$$^MSG(742,"L") do vdderr("CIFALLOC", vRM) quit
		set X = cuvar.cifprgd if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("CIFPRGD", vRM) quit
		if cuvar.defdrel.length()>2 set vRM = $$^MSG(1076,2) do vdderr("DEFDREL", vRM) quit
		if cuvar.deflrel.length()>2 set vRM = $$^MSG(1076,2) do vdderr("DEFLREL", vRM) quit
		if cuvar.disbrst.length()>6 set vRM = $$^MSG(1076,6) do vdderr("DISBRST", vRM) quit
		if cuvar.dodrst.length()>6 set vRM = $$^MSG(1076,6) do vdderr("DODRST", vRM) quit
		if '("01"[cuvar.DUPTIN) set vRM=$$^MSG(742,"L") do vdderr("DUPTIN", vRM) quit
		set X = cuvar.exprep if 'X.isNull(),'{List}"0,1".contains(X) set vRM = $$^MSG(1485,X) do vdderr("EXPREP", vRM) quit
		if '("01"[cuvar.EXTVAL) set vRM=$$^MSG(742,"L") do vdderr("EXTVAL", vRM) quit
		set X = cuvar.hbtype if 'X.isNull(),'Db.isDefined("STBLHBT","X") set vRM = $$^MSG(1485,X) do vdderr("HBTYPE", vRM) quit
		if '("01"[cuvar.LIMPRO) set vRM=$$^MSG(742,"L") do vdderr("LIMPRO", vRM) quit
		set X = cuvar.maxcifl if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("MAXCIFL", vRM) quit
		set X = cuvar.maxext if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("MAXEXT", vRM) quit
		set X = cuvar.mincifl if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("MINCIFL", vRM) quit
		if '("01"[cuvar.ORCIFN) set vRM=$$^MSG(742,"L") do vdderr("ORCIFN", vRM) quit
		set X = cuvar.pctcap if 'X.isNull() set vRM = $$VAL^DBSVER("N",5,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.PCTCAP"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.taxreq if 'X.isNull(),'Db.isDefined("STBLTAXREQ","X") set vRM = $$^MSG(1485,X) do vdderr("TAXREQ", vRM) quit
		if '("01"[cuvar.TINCO) set vRM=$$^MSG(742,"L") do vdderr("TINCO", vRM) quit
		set X = cuvar.totass if 'X.isNull() set vRM = $$VAL^DBSVER("$",15,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.TOTASS"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.totcap if 'X.isNull() set vRM = $$VAL^DBSVER("$",15,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.TOTCAP"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	}

	if vobj(cuvar,"CIFMRPC").exists() do {

		if cuvar.cifmrpc.length()>20 set vRM = $$^MSG(1076,20) do vdderr("CIFMRPC", vRM) quit
	}

	if vobj(cuvar,"CIFVER").exists() do {

		set X = cuvar.cifver if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("CIFVER", vRM) quit
	}

	if vobj(cuvar,"CNTRY").exists() do {

		if '("01"[cuvar.CATSUP) set vRM=$$^MSG(742,"L") do vdderr("CATSUP", vRM) quit
		set X = cuvar.cntry if 'X.isNull(),'Db.isDefined("STBLCNTRY","X") set vRM = $$^MSG(1485,X) do vdderr("CNTRY", vRM) quit
	}

	if vobj(cuvar,"CO").exists() do {

		if cuvar.co.length()>12 set vRM = $$^MSG(1076,12) do vdderr("CO", vRM) quit
	}

	if vobj(cuvar,"COM").exists() do {

		set X = cuvar.mincmamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.MINCMAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	}

	if vobj(cuvar,"CONAM").exists() do {

		if cuvar.conam.length()>40 set vRM = $$^MSG(1076,40) do vdderr("CONAM", vRM) quit
	}

	if vobj(cuvar,"COPY").exists() do {

		if cuvar.cprtln1.length()>80 set vRM = $$^MSG(1076,80) do vdderr("CPRTLN1", vRM) quit
		if cuvar.cprtln2.length()>80 set vRM = $$^MSG(1076,80) do vdderr("CPRTLN2", vRM) quit
		if cuvar.cprtln3.length()>80 set vRM = $$^MSG(1076,80) do vdderr("CPRTLN3", vRM) quit
		if cuvar.cprtln4.length()>80 set vRM = $$^MSG(1076,80) do vdderr("CPRTLN4", vRM) quit
	}

	if vobj(cuvar,"COURTMSG").exists() do {

		if cuvar.courtmsg.length()>50 set vRM = $$^MSG(1076,50) do vdderr("COURTMSG", vRM) quit
	}

	if vobj(cuvar,"CRCDTHR").exists() do {

		set X = cuvar.crcdthr if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.CRCDTHR"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	}

	if vobj(cuvar,"CRT").exists() do {

		if cuvar.dccrcd.length()>3 set vRM = $$^MSG(1076,3) do vdderr("DCCRCD", vRM) quit
		set X = cuvar.dftchtrn if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("DFTCHTRN", vRM) quit
		set X = cuvar.dftci if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("DFTCI", vRM) quit
		set X = cuvar.dftcktrn if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("DFTCKTRN", vRM) quit
		set X = cuvar.dftco if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("DFTCO", vRM) quit
		set X = cuvar.dftspvucls if 'X.isNull(),'Db.isDefined("SCAU0","X") set vRM = $$^MSG(1485,X) do vdderr("DFTSPVUCLS", vRM) quit
		set X = cuvar.dftstfucls if 'X.isNull(),'Db.isDefined("SCAU0","X") set vRM = $$^MSG(1485,X) do vdderr("DFTSTFUCLS", vRM) quit
		if '("01"[cuvar.TREF) set vRM=$$^MSG(742,"L") do vdderr("TREF", vRM) quit
	}

	if vobj(cuvar,"CRTDSP").exists() do {

		if '("01"[cuvar.CRTDSP) set vRM=$$^MSG(742,"L") do vdderr("CRTDSP", vRM) quit
	}

	if vobj(cuvar,"CRTMSGD").exists() do {

		if cuvar.crtmsgd.length()>12 set vRM = $$^MSG(1076,12) do vdderr("CRTMSGD", vRM) quit
	}

	if vobj(cuvar,"CRTMSGL").exists() do {

		if cuvar.crtmsgl.length()>12 set vRM = $$^MSG(1076,12) do vdderr("CRTMSGL", vRM) quit
	}

	if vobj(cuvar,"CRTRW").exists() do {

		if cuvar.crctrl.length()>5 set vRM = $$^MSG(1076,5) do vdderr("CRCTRL", vRM) quit
		set X = cuvar.crid if 'X.isNull(),X'?1.7N,X'?1"-"1.6N set vRM=$$^MSG(742,"N") do vdderr("CRID", vRM) quit
		set X = cuvar.crlrd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("CRLRD", vRM) quit
		set X = cuvar.crntap if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("CRNTAP", vRM) quit
		if cuvar.crrep.length()>12 set vRM = $$^MSG(1076,12) do vdderr("CRREP", vRM) quit
		if cuvar.crshrt.length()>2 set vRM = $$^MSG(1076,2) do vdderr("CRSHRT", vRM) quit
		set X = cuvar.crstud if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("CRSTUD", vRM) quit
	}

	if vobj(cuvar,"CSTFMTRTN").exists() do {

		if cuvar.cstfmtrtn.length()>12 set vRM = $$^MSG(1076,12) do vdderr("CSTFMTRTN", vRM) quit
	}

	if vobj(cuvar,"CURRENV").exists() do {

		if '("01"[cuvar.CURRENV) set vRM=$$^MSG(742,"L") do vdderr("CURRENV", vRM) quit
	}

	if vobj(cuvar,"CUSPGM").exists() do {

		if cuvar.lrncpgm.length()>15 set vRM = $$^MSG(1076,15) do vdderr("LRNCPGM", vRM) quit
	}

	if vobj(cuvar,"DAYEND").exists() do {

		set X = cuvar.aroff if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("AROFF", vRM) quit
		if cuvar.dayend2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DAYEND2", vRM) quit
		set X = cuvar.dayend4 if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("DAYEND4", vRM) quit
		set X = cuvar.dayend5 if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("DAYEND5", vRM) quit
		set X = cuvar.finye if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("FINYE", vRM) quit
		set X = cuvar.finyefreq if 'X.isNull() set vRM = "" do DBSEDT^UFRE("[CUVAR]FINYEFREQ",0) if 'vRM.get().isNull() do vdderr("FINYEFREQ", vRM) quit
		set X = cuvar.finyel if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("FINYEL", vRM) quit
		set X = cuvar.mdo if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("MDO", vRM) quit
		set X = cuvar.taxye if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("TAXYE", vRM) quit
		set X = cuvar.taxyeoff if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("TAXYEOFF", vRM) quit
		set X = cuvar.yeoff if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("YEOFF", vRM) quit
	}

	if vobj(cuvar,"DBS").exists() do {

		if cuvar.dbshdr.length()>12 set vRM = $$^MSG(1076,12) do vdderr("DBSHDR", vRM) quit
		set X = cuvar.dbslist if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("DBSLIST", vRM) quit
		if cuvar.dbsph132.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DBSPH132", vRM) quit
		if cuvar.dbsph80.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DBSPH80", vRM) quit
		set X = cuvar.editmask if 'X.isNull(),'Db.isDefined("DBCTLCRFMT","X") set vRM = $$^MSG(1485,X) do vdderr("EDITMASK", vRM) quit
		if '("01"[cuvar.FLDOVF) set vRM=$$^MSG(742,"L") do vdderr("FLDOVF", vRM) quit
		if '("01"[cuvar.NOTP) set vRM=$$^MSG(742,"L") do vdderr("NOTP", vRM) quit
	}

	if vobj(cuvar,"DBSLSTEXP").exists() do {

		set X = cuvar.dbslstexp if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("DBSLSTEXP", vRM) quit
	}

	if vobj(cuvar,"DEAL").exists() do {

		set X = cuvar.dealpurg if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("DEALPURG", vRM) quit
		if '("01"[cuvar.REKEY) set vRM=$$^MSG(742,"L") do vdderr("REKEY", vRM) quit
	}

	if vobj(cuvar,"DELDIS").exists() do {

		set X = cuvar.deldis if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("DELDIS", vRM) quit
	}

	if vobj(cuvar,"DELQ").exists() do {

		set X = cuvar.drc1 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC1"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc10 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC10"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc11 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC11"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc12 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC12"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc13 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC13"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc14 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC14"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc15 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC15"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc16 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC16"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc17 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC17"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc18 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC18"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc19 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC19"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc2 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC2"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc20 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC20"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc3 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC3"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc4 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC4"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc5 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC5"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc6 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC6"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc7 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC7"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc8 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC8"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.drc9 if 'X.isNull() set vRM = $$VAL^DBSVER("T",7,0,,"X?1N.N!(X?1N.N1""-""1N.N)",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DRC9"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.lndrby if 'X.isNull(),'Db.isDefined("STBLLNDELRBY","X") set vRM = $$^MSG(1485,X) do vdderr("LNDRBY", vRM) quit
		set X = cuvar.lndrm if 'X.isNull(),'Db.isDefined("STBLLNDELRM","X") set vRM = $$^MSG(1485,X) do vdderr("LNDRM", vRM) quit
		set X = cuvar.minamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.MINAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		if cuvar.rptnam.length()>12 set vRM = $$^MSG(1076,12) do vdderr("RPTNAM", vRM) quit
	}

	if vobj(cuvar,"DENFLG").exists() do {

		set X = cuvar.denflg if 'X.isNull(),'Db.isDefined("STBLDENFLG","X") set vRM = $$^MSG(1485,X) do vdderr("DENFLG", vRM) quit
	}

	if vobj(cuvar,"DEP").exists() do {

		set X = cuvar.atmopt if 'X.isNull(),'Db.isDefined("STBLATMOPT","X") set vRM = $$^MSG(1485,X) do vdderr("ATMOPT", vRM) quit
		set X = cuvar.balavlcode if 'X.isNull(),'Db.isDefined("STBLBALAVLCD","X") set vRM = $$^MSG(1485,X) do vdderr("BALAVLCODE", vRM) quit
		if cuvar.balavlpgm.length()>12 set vRM = $$^MSG(1076,12) do vdderr("BALAVLPGM", vRM) quit
		if cuvar.balcclc.length()>12 set vRM = $$^MSG(1076,12) do vdderr("BALCCLC", vRM) quit
		if cuvar.balclgc.length()>12 set vRM = $$^MSG(1076,12) do vdderr("BALCLGC", vRM) quit
		if '("01"[cuvar.CMSACOPT) set vRM=$$^MSG(742,"L") do vdderr("CMSACOPT", vRM) quit
		if cuvar.cmsavalr.length()>10 set vRM = $$^MSG(1076,10) do vdderr("CMSAVALR", vRM) quit
		set X = cuvar.invpctmin if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("INVPCTMIN", vRM) quit
		set X = cuvar.ipyadj if 'X.isNull(),'Db.isDefined("STBLIPYADJ","X") set vRM = $$^MSG(1485,X) do vdderr("IPYADJ", vRM) quit
		set X = cuvar.iraaut if 'X.isNull(),'Db.isDefined("UTBLIRADIS","X") set vRM = $$^MSG(1485,X) do vdderr("IRAAUT", vRM) quit
		set X = cuvar.iracon if 'X.isNull(),'Db.isDefined("UTBLIRACON","X") set vRM = $$^MSG(1485,X) do vdderr("IRACON", vRM) quit
		set X = cuvar.iradis if 'X.isNull(),'Db.isDefined("UTBLIRADIS","X") set vRM = $$^MSG(1485,X) do vdderr("IRADIS", vRM) quit
		set X = cuvar.iraint if 'X.isNull(),'Db.isDefined("UTBLIRACON","X") set vRM = $$^MSG(1485,X) do vdderr("IRAINT", vRM) quit
		set X = cuvar.iraipo if 'X.isNull(),'Db.isDefined("UTBLIRADIS","X") set vRM = $$^MSG(1485,X) do vdderr("IRAIPO", vRM) quit
		set X = cuvar.iraiwh if 'X.isNull(),'Db.isDefined("UTBLIRADIS","X") set vRM = $$^MSG(1485,X) do vdderr("IRAIWH", vRM) quit
		set X = cuvar.irapen if 'X.isNull(),'Db.isDefined("UTBLIRADIS","X") set vRM = $$^MSG(1485,X) do vdderr("IRAPEN", vRM) quit
		set X = cuvar.iraprgd if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("IRAPRGD", vRM) quit
		set X = cuvar.mpscert if 'X.isNull(),'Db.isDefined("STBLMPSCERT","X") set vRM = $$^MSG(1485,X) do vdderr("MPSCERT", vRM) quit
		set X = cuvar.pryrbkd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("PRYRBKD", vRM) quit
		set X = cuvar.retopt if 'X.isNull(),'Db.isDefined("STBLRETOPT","X") set vRM = $$^MSG(1485,X) do vdderr("RETOPT", vRM) quit
		set X = cuvar.rpafee if 'X.isNull(),'Db.isDefined("UTBLIRADIS","X") set vRM = $$^MSG(1485,X) do vdderr("RPAFEE", vRM) quit
		if '("01"[cuvar.RPANET) set vRM=$$^MSG(742,"L") do vdderr("RPANET", vRM) quit
		set X = cuvar.stpof if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("STPOF", vRM) quit
	}

	if vobj(cuvar,"DEPVER").exists() do {

		set X = cuvar.depver if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("DEPVER", vRM) quit
	}

	if vobj(cuvar,"DFTENV").exists() do {

		set X = cuvar.dftenv if 'X.isNull(),'Db.isDefined("STBLENVDFT","X") set vRM = $$^MSG(1485,X) do vdderr("DFTENV", vRM) quit
	}

	if vobj(cuvar,"DRMT").exists() do {

		set X = cuvar.din if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("DIN", vRM) quit
		set X = cuvar.drmt if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("DRMT", vRM) quit
		set X = cuvar.esch if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("ESCH", vRM) quit
		if '("01"[cuvar.LCCADR) set vRM=$$^MSG(742,"L") do vdderr("LCCADR", vRM) quit
		if '("01"[cuvar.LCCPU) set vRM=$$^MSG(742,"L") do vdderr("LCCPU", vRM) quit
		if '("01"[cuvar.LCCTIT) set vRM=$$^MSG(742,"L") do vdderr("LCCTIT", vRM) quit
		if '("01"[cuvar.STMLCC) set vRM=$$^MSG(742,"L") do vdderr("STMLCC", vRM) quit
	}

	if vobj(cuvar,"DRVMSG").exists() do {

		if cuvar.drvmsg.length()>78 set vRM = $$^MSG(1076,78) do vdderr("DRVMSG", vRM) quit
	}

	if vobj(cuvar,"ECOMM").exists() do {

		set X = cuvar.maxlogfails if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("MAXLOGFAILS", vRM) quit
	}

	if vobj(cuvar,"EFD").exists() do {

		if '("01"[cuvar.EFD) set vRM=$$^MSG(742,"L") do vdderr("EFD", vRM) quit
		if '("01"[cuvar.EFDFTFLG) set vRM=$$^MSG(742,"L") do vdderr("EFDFTFLG", vRM) quit
	}

	if vobj(cuvar,"EFTPAY").exists() do {

		if '("01"[cuvar.DEBAUT) set vRM=$$^MSG(742,"L") do vdderr("DEBAUT", vRM) quit
		if cuvar.eftarcdir.length()>40 set vRM = $$^MSG(1076,40) do vdderr("EFTARCDIR", vRM) quit
		if cuvar.eftccin.length()>40 set vRM = $$^MSG(1076,40) do vdderr("EFTCCIN", vRM) quit
		if cuvar.eftccout.length()>40 set vRM = $$^MSG(1076,40) do vdderr("EFTCCOUT", vRM) quit
		set X = cuvar.eftcom if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("EFTCOM", vRM) quit
		set X = cuvar.eftdel if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("EFTDEL", vRM) quit
		if '("01"[cuvar.EFTMEMO) set vRM=$$^MSG(742,"L") do vdderr("EFTMEMO", vRM) quit
		if '("01"[cuvar.EFTREFNO) set vRM=$$^MSG(742,"L") do vdderr("EFTREFNO", vRM) quit
		set X = cuvar.eftrej if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("EFTREJ", vRM) quit
		if '("01"[cuvar.EFTRICO) set vRM=$$^MSG(742,"L") do vdderr("EFTRICO", vRM) quit
		set X = cuvar.eftsup if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("EFTSUP", vRM) quit
		if '("01"[cuvar.FUTBLD) set vRM=$$^MSG(742,"L") do vdderr("FUTBLD", vRM) quit
		set X = cuvar.maxcol if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("MAXCOL", vRM) quit
		set X = cuvar.maxpay if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("MAXPAY", vRM) quit
		set X = cuvar.mincol if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("MINCOL", vRM) quit
		set X = cuvar.minpay if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("MINPAY", vRM) quit
		set X = cuvar.udrc if 'X.isNull(),'Db.isDefined("UTBLCC","X") set vRM = $$^MSG(1485,X) do vdderr("UDRC", vRM) quit
	}

	if vobj(cuvar,"EFTPRI").exists() do {

		set X = cuvar.penrevgl if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("PENREVGL", vRM) quit
	}

	if vobj(cuvar,"EIN").exists() do {

		if cuvar.ein.length()>20 set vRM = $$^MSG(1076,20) do vdderr("EIN", vRM) quit
	}

	if vobj(cuvar,"ERBRES").exists() do {

		if cuvar.erbres1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ERBRES1", vRM) quit
		if cuvar.erbres2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ERBRES2", vRM) quit
		if cuvar.erbres3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ERBRES3", vRM) quit
	}

	if vobj(cuvar,"ESCHEAT").exists() do {

		if cuvar.escheat.length()>12 set vRM = $$^MSG(1076,12) do vdderr("ESCHEAT", vRM) quit
	}

	if vobj(cuvar,"ESCROW").exists() do {

		if cuvar.eadhs.length()>8 set vRM = $$^MSG(1076,8) do vdderr("EADHS", vRM) quit
		if cuvar.eapps.length()>8 set vRM = $$^MSG(1076,8) do vdderr("EAPPS", vRM) quit
		if cuvar.eaps.length()>8 set vRM = $$^MSG(1076,8) do vdderr("EAPS", vRM) quit
		if cuvar.ehds.length()>8 set vRM = $$^MSG(1076,8) do vdderr("EHDS", vRM) quit
		if cuvar.ieds.length()>8 set vRM = $$^MSG(1076,8) do vdderr("IEDS", vRM) quit
	}

	if vobj(cuvar,"EUR").exists() do {

		if '("01"[cuvar.DFTTHRC) set vRM=$$^MSG(742,"L") do vdderr("DFTTHRC", vRM) quit
		if '("01"[cuvar.DFTTHRR) set vRM=$$^MSG(742,"L") do vdderr("DFTTHRR", vRM) quit
		if '("01"[cuvar.EMU) set vRM=$$^MSG(742,"L") do vdderr("EMU", vRM) quit
		if cuvar.emucrcd.length()>3 set vRM = $$^MSG(1076,3) do vdderr("EMUCRCD", vRM) quit
		set X = cuvar.emurnd if 'X.isNull(),'Db.isDefined("STBLEMURND","X") set vRM = $$^MSG(1485,X) do vdderr("EMURND", vRM) quit
		set X = cuvar.eurbal if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("EURBAL", vRM) quit
		set X = cuvar.eurcnvdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("EURCNVDT", vRM) quit
		if '("01"[cuvar.EURINTEG) set vRM=$$^MSG(742,"L") do vdderr("EURINTEG", vRM) quit
		set X = cuvar.eurrndcr if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("EURRNDCR", vRM) quit
		set X = cuvar.eurrnddr if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("EURRNDDR", vRM) quit
		if '("01"[cuvar.FNCRATE) set vRM=$$^MSG(742,"L") do vdderr("FNCRATE", vRM) quit
		if cuvar.origcrcd.length()>3 set vRM = $$^MSG(1076,3) do vdderr("ORIGCRCD", vRM) quit
		set X = cuvar.rfc if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("RFC", vRM) quit
		set X = cuvar.rfr if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("RFR", vRM) quit
		set X = cuvar.rmc if 'X.isNull(),'Db.isDefined("STBLEURRM","X") set vRM = $$^MSG(1485,X) do vdderr("RMC", vRM) quit
		set X = cuvar.rmr if 'X.isNull(),'Db.isDefined("STBLEURRM","X") set vRM = $$^MSG(1485,X) do vdderr("RMR", vRM) quit
		set X = cuvar.scdft if 'X.isNull(),'Db.isDefined("STBLEURSC","X") set vRM = $$^MSG(1485,X) do vdderr("SCDFT", vRM) quit
		if '("01"[cuvar.SCOVR) set vRM=$$^MSG(742,"L") do vdderr("SCOVR", vRM) quit
	}

	if vobj(cuvar,"EXTVAL").exists() do {

		set X = cuvar.extvalcc if 'X.isNull(),'Db.isDefined("UTBLCCNTR","X") set vRM = $$^MSG(1485,X) do vdderr("EXTVALCC", vRM) quit
		set X = cuvar.extvalcid if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("EXTVALCID", vRM) quit
		set X = cuvar.extvalcnt if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("EXTVALCNT", vRM) quit
		set X = cuvar.extvalfail if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("EXTVALFAIL", vRM) quit
		set X = cuvar.extvalmaxamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.EXTVALMAXAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.extvalmaxday if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("EXTVALMAXDAY", vRM) quit
		set X = cuvar.extvaltype if 'X.isNull(),'Db.isDefined("UTBLEXTYP","X") set vRM = $$^MSG(1485,X) do vdderr("EXTVALTYPE", vRM) quit
	}

	if vobj(cuvar,"FCVMEMO").exists() do {

		if '("01"[cuvar.FCVMEMO) set vRM=$$^MSG(742,"L") do vdderr("FCVMEMO", vRM) quit
	}

	if vobj(cuvar,"FEPXALL").exists() do {

		if '("01"[cuvar.FEPXALL) set vRM=$$^MSG(742,"L") do vdderr("FEPXALL", vRM) quit
	}

	if vobj(cuvar,"FTPTIME").exists() do {

		set X = cuvar.ftptime if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("FTPTIME", vRM) quit
		set X = cuvar.tcpver if 'X.isNull(),'Db.isDefined("STBLTCPVER","X") set vRM = $$^MSG(1485,X) do vdderr("TCPVER", vRM) quit
	}

	if vobj(cuvar,"FXRATEDF").exists() do {

		set X = cuvar.fxratedf if 'X.isNull(),'Db.isDefined("STBLFXRATEDF","X") set vRM = $$^MSG(1485,X) do vdderr("FXRATEDF", vRM) quit
	}

	if vobj(cuvar,"GLACN").exists() do {

		set X = cuvar.ipcid if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("IPCID", vRM) quit
		set X = cuvar.ipetc if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("IPETC", vRM) quit
		set X = cuvar.rlcid if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("RLCID", vRM) quit
		set X = cuvar.rletc if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("RLETC", vRM) quit
		set X = cuvar.sldgltc if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("SLDGLTC", vRM) quit
	}

	if vobj(cuvar,"GLCC").exists() do {

		set X = cuvar.glccro if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("GLCCRO", vRM) quit
	}

	if vobj(cuvar,"GLEFD").exists() do {

		if '("01"[cuvar.GLEFDBCH) set vRM=$$^MSG(742,"L") do vdderr("GLEFDBCH", vRM) quit
		set X = cuvar.glefdcr if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("GLEFDCR", vRM) quit
		set X = cuvar.glefddr if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("GLEFDDR", vRM) quit
	}

	if vobj(cuvar,"GLS").exists() do {

		if cuvar.gls.length()>12 set vRM = $$^MSG(1076,12) do vdderr("GLS", vRM) quit
	}

	if vobj(cuvar,"GLSBO").exists() do {

		set X = cuvar.glsbo if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("GLSBO", vRM) quit
	}

	if vobj(cuvar,"GLSETPGM").exists() do {

		if cuvar.glpgm.length()>9 set vRM = $$^MSG(1076,9) do vdderr("GLPGM", vRM) quit
	}

	if vobj(cuvar,"GLTS").exists() do {

		set X = cuvar.glts if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("GLTS", vRM) quit
	}

	if vobj(cuvar,"GLTSFP").exists() do {

		set X = cuvar.gltsfp if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("GLTSFP", vRM) quit
	}

	if vobj(cuvar,"GLTSTO").exists() do {

		set X = cuvar.gltsto if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("GLTSTO", vRM) quit
	}

	if vobj(cuvar,"GLTSTS").exists() do {

		set X = cuvar.gltsts if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("GLTSTS", vRM) quit
	}

	if vobj(cuvar,"GLXFR").exists() do {

		set X = cuvar.glxfr if 'X.isNull(),'Db.isDefined("STBLGLXFR","X") set vRM = $$^MSG(1485,X) do vdderr("GLXFR", vRM) quit
	}

	if vobj(cuvar,"GRACE").exists() do {

		set X = cuvar.grace if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("GRACE", vRM) quit
	}

	if vobj(cuvar,"HANG").exists() do {

		set X = cuvar.hang if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("HANG", vRM) quit
	}

	if vobj(cuvar,"HISTRPT").exists() do {

		if cuvar.histrpt.length()>15 set vRM = $$^MSG(1076,15) do vdderr("HISTRPT", vRM) quit
	}

	if vobj(cuvar,"HOTLIN").exists() do {

		if cuvar.hotlin.length()>12 set vRM = $$^MSG(1076,12) do vdderr("HOTLIN", vRM) quit
	}

	if vobj(cuvar,"IAMGESYMBL").exists() do {

		if cuvar.imagesymbl.length()>10 set vRM = $$^MSG(1076,10) do vdderr("IMAGESYMBL", vRM) quit
	}

	if vobj(cuvar,"IMAGE").exists() do {

		if '("01"[cuvar.IMAGE) set vRM=$$^MSG(742,"L") do vdderr("IMAGE", vRM) quit
	}

	if vobj(cuvar,"INCK").exists() do {

		if '("01"[cuvar.ICCFF) set vRM=$$^MSG(742,"L") do vdderr("ICCFF", vRM) quit
		set X = cuvar.iccfr if 'X.isNull() set vRM = "" do DBSEDT^UFRE("[CUVAR]ICCFR",0) if 'vRM.get().isNull() do vdderr("ICCFR", vRM) quit
		set X = cuvar.iccld if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("ICCLD", vRM) quit
		set X = cuvar.iccnd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("ICCND", vRM) quit
		if '("01"[cuvar.ICCNF) set vRM=$$^MSG(742,"L") do vdderr("ICCNF", vRM) quit
		if '("01"[cuvar.ICDFF) set vRM=$$^MSG(742,"L") do vdderr("ICDFF", vRM) quit
		set X = cuvar.icdfr if 'X.isNull() set vRM = "" do DBSEDT^UFRE("[CUVAR]ICDFR",0) if 'vRM.get().isNull() do vdderr("ICDFR", vRM) quit
		set X = cuvar.icdld if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("ICDLD", vRM) quit
		set X = cuvar.icdnd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("ICDND", vRM) quit
		if '("01"[cuvar.ICDNF) set vRM=$$^MSG(742,"L") do vdderr("ICDNF", vRM) quit
		if '("01"[cuvar.ICDRF) set vRM=$$^MSG(742,"L") do vdderr("ICDRF", vRM) quit
		if '("01"[cuvar.ICDTF) set vRM=$$^MSG(742,"L") do vdderr("ICDTF", vRM) quit
		if '("01"[cuvar.ICLFF) set vRM=$$^MSG(742,"L") do vdderr("ICLFF", vRM) quit
		set X = cuvar.iclfr if 'X.isNull() set vRM = "" do DBSEDT^UFRE("[CUVAR]ICLFR",0) if 'vRM.get().isNull() do vdderr("ICLFR", vRM) quit
		set X = cuvar.iclld if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("ICLLD", vRM) quit
		set X = cuvar.iclnd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("ICLND", vRM) quit
		if '("01"[cuvar.ICLNF) set vRM=$$^MSG(742,"L") do vdderr("ICLNF", vRM) quit
		if '("01"[cuvar.ICLRF) set vRM=$$^MSG(742,"L") do vdderr("ICLRF", vRM) quit
		if '("01"[cuvar.ICLTF) set vRM=$$^MSG(742,"L") do vdderr("ICLTF", vRM) quit
	}

	if vobj(cuvar,"INQBAL").exists() do {

		if cuvar.ddpacnd.length()>12 set vRM = $$^MSG(1076,12) do vdderr("DDPACND", vRM) quit
		if cuvar.ddpacnl.length()>12 set vRM = $$^MSG(1076,12) do vdderr("DDPACNL", vRM) quit
		if cuvar.inqbal.length()>12 set vRM = $$^MSG(1076,12) do vdderr("INQBAL", vRM) quit
	}

	if vobj(cuvar,"INS").exists() do {

		set X = cuvar.dbimbal if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DBIMBAL"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.dcl if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.DCL"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.lcl if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.LCL"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		if cuvar.ltcl.length()>8 set vRM = $$^MSG(1076,8) do vdderr("LTCL", vRM) quit
	}

	if vobj(cuvar,"INTPGM").exists() do {

		if cuvar.intpgm.length()>9 set vRM = $$^MSG(1076,9) do vdderr("INTPGM", vRM) quit
	}

	if vobj(cuvar,"INTPOS").exists() do {

		set X = cuvar.intpos if 'X.isNull(),'Db.isDefined("STBLPOSOPT","X") set vRM = $$^MSG(1485,X) do vdderr("INTPOS", vRM) quit
	}

	if vobj(cuvar,"INV").exists() do {

		set X = cuvar.brknbdc if 'X.isNull(),'Db.isDefined("UTBLNBD","X") set vRM = $$^MSG(1485,X) do vdderr("BRKNBDC", vRM) quit
	}

	if vobj(cuvar,"IPD").exists() do {

		if '("01"[cuvar.IPD) set vRM=$$^MSG(742,"L") do vdderr("IPD", vRM) quit
	}

	if vobj(cuvar,"IRAHIST").exists() do {

		set X = cuvar.irahist if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("IRAHIST", vRM) quit
	}

	if vobj(cuvar,"ISO").exists() do {

		set X = cuvar.iso if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("ISO", vRM) quit
	}

	if vobj(cuvar,"LCNBDC").exists() do {

		set X = cuvar.lcnbdc if 'X.isNull(),'Db.isDefined("UTBLNBD","X") set vRM = $$^MSG(1485,X) do vdderr("LCNBDC", vRM) quit
	}

	if vobj(cuvar,"LETTER").exists() do {

		set X = cuvar.letdel if 'X.isNull(),'Db.isDefined("DBCTLDELIM","X") set vRM = $$^MSG(1485,X) do vdderr("LETDEL", vRM) quit
		if '("01"[cuvar.LETFIX) set vRM=$$^MSG(742,"L") do vdderr("LETFIX", vRM) quit
	}

	if vobj(cuvar,"LN").exists() do {

		set X = cuvar.aaf if 'X.isNull() set vRM = "" do DBSEDT^UFRE("[CUVAR]AAF",0) if 'vRM.get().isNull() do vdderr("AAF", vRM) quit
		set X = cuvar.aald if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("AALD", vRM) quit
		set X = cuvar.aand if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("AAND", vRM) quit
		set X = cuvar.contra if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("CONTRA", vRM) quit
		set X = cuvar.darcdel if 'X.isNull(),'Db.isDefined("STBLDEL","X") set vRM = $$^MSG(1485,X) do vdderr("DARCDEL", vRM) quit
		if '("01"[cuvar.DARCDFLG) set vRM=$$^MSG(742,"L") do vdderr("DARCDFLG", vRM) quit
		set X = cuvar.darcfreq if 'X.isNull() set vRM = "" do DBSEDT^UFRE("[CUVAR]DARCFREQ",0) if 'vRM.get().isNull() do vdderr("DARCFREQ", vRM) quit
		set X = cuvar.darclpdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("DARCLPDT", vRM) quit
		set X = cuvar.darcnpdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("DARCNPDT", vRM) quit
		set X = cuvar.darcoff if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("DARCOFF", vRM) quit
		set X = cuvar.dccup if 'X.isNull(),'Db.isDefined("STBLDCCUP","X") set vRM = $$^MSG(1485,X) do vdderr("DCCUP", vRM) quit
		if cuvar.dlqnt.length()>12 set vRM = $$^MSG(1076,12) do vdderr("DLQNT", vRM) quit
		if cuvar.escchk.length()>6 set vRM = $$^MSG(1076,6) do vdderr("ESCCHK", vRM) quit
		set X = cuvar.escgl if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("ESCGL", vRM) quit
		set X = cuvar.feeicrtc if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("FEEICRTC", vRM) quit
		set X = cuvar.feeidrtc if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("FEEIDRTC", vRM) quit
		set X = cuvar.ibilff if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("IBILFF", vRM) quit
		set X = cuvar.iwuocc if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("IWUOCC", vRM) quit
		set X = cuvar.iwuodc if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("IWUODC", vRM) quit
		set X = cuvar.lncc if 'X.isNull(),'Db.isDefined("STBLMPA","X") set vRM = $$^MSG(1485,X) do vdderr("LNCC", vRM) quit
		set X = cuvar.lncfp if 'X.isNull(),'Db.isDefined("STBLMPA","X") set vRM = $$^MSG(1485,X) do vdderr("LNCFP", vRM) quit
		set X = cuvar.lncpi if 'X.isNull(),'Db.isDefined("STBLMPA","X") set vRM = $$^MSG(1485,X) do vdderr("LNCPI", vRM) quit
		set X = cuvar.lncpp if 'X.isNull(),'Db.isDefined("STBLMPA","X") set vRM = $$^MSG(1485,X) do vdderr("LNCPP", vRM) quit
		if cuvar.lnprojrep.length()>12 set vRM = $$^MSG(1076,12) do vdderr("LNPROJREP", vRM) quit
		if '("01"[cuvar.LNRENDEL) set vRM=$$^MSG(742,"L") do vdderr("LNRENDEL", vRM) quit
		set X = cuvar.lnsusext if 'X.isNull() set vRM = $$VAL^DBSVER("T",50,0,,"X?.E1""^"".E",,,0) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.LNSUSEXT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.lnsustp if 'X.isNull() set vRM = $$VAL^DBSVER("N",9,0,,,0,100,5) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.LNSUSTP"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		set X = cuvar.lpco if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("LPCO", vRM) quit
		set X = cuvar.lpfre if 'X.isNull() set vRM = "" do DBSEDT^UFRE("[CUVAR]LPFRE",0) if 'vRM.get().isNull() do vdderr("LPFRE", vRM) quit
		set X = cuvar.lpld if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("LPLD", vRM) quit
		set X = cuvar.lpnd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("LPND", vRM) quit
		if '("01"[cuvar.MRPT) set vRM=$$^MSG(742,"L") do vdderr("MRPT", vRM) quit
		set X = cuvar.provfreq if 'X.isNull() set vRM = "" do DBSEDT^UFRE("[CUVAR]PROVFREQ",0) if 'vRM.get().isNull() do vdderr("PROVFREQ", vRM) quit
		set X = cuvar.provlpdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("PROVLPDT", vRM) quit
		set X = cuvar.provnpdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("PROVNPDT", vRM) quit
		set X = cuvar.provoff if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("PROVOFF", vRM) quit
		set X = cuvar.provrcdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("PROVRCDT", vRM) quit
		set X = cuvar.provrpdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("PROVRPDT", vRM) quit
	}

	if vobj(cuvar,"LNCNV").exists() do {

		if cuvar.cvscr1.length()>12 set vRM = $$^MSG(1076,12) do vdderr("CVSCR1", vRM) quit
		if cuvar.cvscr2.length()>12 set vRM = $$^MSG(1076,12) do vdderr("CVSCR2", vRM) quit
	}

	if vobj(cuvar,"LNCON").exists() do {

		if cuvar.lncscbl.length()>12 set vRM = $$^MSG(1076,12) do vdderr("LNCSCBL", vRM) quit
		if cuvar.lncscom.length()>12 set vRM = $$^MSG(1076,12) do vdderr("LNCSCOM", vRM) quit
		if cuvar.lncsdm.length()>12 set vRM = $$^MSG(1076,12) do vdderr("LNCSDM", vRM) quit
		if cuvar.lncsln.length()>12 set vRM = $$^MSG(1076,12) do vdderr("LNCSLN", vRM) quit
		if cuvar.lncsmtg.length()>12 set vRM = $$^MSG(1076,12) do vdderr("LNCSMTG", vRM) quit
		if cuvar.lncsrc.length()>12 set vRM = $$^MSG(1076,12) do vdderr("LNCSRC", vRM) quit
	}

	if vobj(cuvar,"LOGINMSG").exists() do {

		if cuvar.loginmsg1.length()>60 set vRM = $$^MSG(1076,60) do vdderr("LOGINMSG1", vRM) quit
		if cuvar.loginmsg2.length()>60 set vRM = $$^MSG(1076,60) do vdderr("LOGINMSG2", vRM) quit
		if cuvar.loginmsg3.length()>60 set vRM = $$^MSG(1076,60) do vdderr("LOGINMSG3", vRM) quit
	}

	if vobj(cuvar,"LSP").exists() do {

		set X = cuvar.lsp if 'X.isNull(),'Db.isDefined("STBLLSP","X") set vRM = $$^MSG(1485,X) do vdderr("LSP", vRM) quit
	}

	if vobj(cuvar,"MAXPM").exists() do {

		set X = cuvar.maxpm if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("MAXPM", vRM) quit
	}

	if vobj(cuvar,"MFUND").exists() do {

		if '("01"[cuvar.CIFEXTI) set vRM=$$^MSG(742,"L") do vdderr("CIFEXTI", vRM) quit
	}

	if vobj(cuvar,"MICR").exists() do {

		set X = cuvar.micr if 'X.isNull(),X'?1.20N,X'?1"-"1.19N set vRM=$$^MSG(742,"N") do vdderr("MICR", vRM) quit
	}

	if vobj(cuvar,"MULTIITSID").exists() do {

		if '("01"[cuvar.MULTIITSID) set vRM=$$^MSG(742,"L") do vdderr("MULTIITSID", vRM) quit
	}

	if vobj(cuvar,"MXTRLM").exists() do {

		if '("01"[cuvar.MXTRLM) set vRM=$$^MSG(742,"L") do vdderr("MXTRLM", vRM) quit
	}

	if vobj(cuvar,"NOREGD").exists() do {

		if '("01"[cuvar.NOREGD) set vRM=$$^MSG(742,"L") do vdderr("NOREGD", vRM) quit
	}

	if vobj(cuvar,"NOSTPURG").exists() do {

		set X = cuvar.nostpurg if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("NOSTPURG", vRM) quit
	}

	if vobj(cuvar,"ODP").exists() do {

		if '("01"[cuvar.ODP) set vRM=$$^MSG(742,"L") do vdderr("ODP", vRM) quit
		if '("01"[cuvar.SFEEOPT) set vRM=$$^MSG(742,"L") do vdderr("SFEEOPT", vRM) quit
	}

	if vobj(cuvar,"ODPE").exists() do {

		if '("01"[cuvar.ODPE) set vRM=$$^MSG(742,"L") do vdderr("ODPE", vRM) quit
	}

	if vobj(cuvar,"OPTIMIZE").exists() do {

		if '("01"[cuvar.NOSEGMENTS) set vRM=$$^MSG(742,"L") do vdderr("NOSEGMENTS", vRM) quit
	}

	if vobj(cuvar,"PAYERNAM").exists() do {

		if cuvar.payernam.length()>4 set vRM = $$^MSG(1076,4) do vdderr("PAYERNAM", vRM) quit
	}

	if vobj(cuvar,"PBALRTN").exists() do {

		if cuvar.pbalrtn.length()>9 set vRM = $$^MSG(1076,9) do vdderr("PBALRTN", vRM) quit
	}

	if vobj(cuvar,"PBKIRN").exists() do {

		set X = cuvar.pbkirn if 'X.isNull() set vRM = $$VAL^DBSVER("N",8,0,,,,,4) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.PBKIRN"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	}

	if vobj(cuvar,"PLACN").exists() do {

		set X = cuvar.placn if 'X.isNull(),'Db.isDefined("CIF","X") set vRM = $$^MSG(1485,X) do vdderr("PLACN", vRM) quit
		set X = cuvar.plfee if 'X.isNull(),'Db.isDefined("LNFEEP","X") set vRM = $$^MSG(1485,X) do vdderr("PLFEE", vRM) quit
	}

	if vobj(cuvar,"POINST").exists() do {

		if cuvar.poinst.length()>34 set vRM = $$^MSG(1076,34) do vdderr("POINST", vRM) quit
	}

	if vobj(cuvar,"PRELID").exists() do {

		set X = cuvar.dprel if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("DPREL", vRM) quit
		if cuvar.prelid.length()>8 set vRM = $$^MSG(1076,8) do vdderr("PRELID", vRM) quit
		if cuvar.tlopre.length()>12 set vRM = $$^MSG(1076,12) do vdderr("TLOPRE", vRM) quit
		set X = cuvar.tprel if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"C") do vdderr("TPREL", vRM) quit
		if cuvar.userprel.length()>12 set vRM = $$^MSG(1076,12) do vdderr("USERPREL", vRM) quit
	}

	if vobj(cuvar,"PSWDH").exists() do {

		set X = cuvar.pswdh if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("PSWDH", vRM) quit
	}

	if vobj(cuvar,"PTMDIRID").exists() do {

		if cuvar.ptmdirid.length()>4 set vRM = $$^MSG(1076,4) do vdderr("PTMDIRID", vRM) quit
	}

	if vobj(cuvar,"PUBLISH").exists() do {

		if '("01"[cuvar.PUBLISH) set vRM=$$^MSG(742,"L") do vdderr("PUBLISH", vRM) quit
		if cuvar.ucsserv.length()>40 set vRM = $$^MSG(1076,40) do vdderr("UCSSERV", vRM) quit
	}

	if vobj(cuvar,"RECPT").exists() do {

		if cuvar.receipt.length()>12 set vRM = $$^MSG(1076,12) do vdderr("RECEIPT", vRM) quit
		if cuvar.recpt.length()>9 set vRM = $$^MSG(1076,9) do vdderr("RECPT", vRM) quit
	}

	if vobj(cuvar,"REGCC").exists() do {

		if '("01"[cuvar.OBDE) set vRM=$$^MSG(742,"L") do vdderr("OBDE", vRM) quit
		set X = cuvar.regcc1 if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("REGCC1", vRM) quit
		set X = cuvar.regcc2 if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("REGCC2", vRM) quit
		set X = cuvar.regcc3 if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("REGCC3", vRM) quit
		set X = cuvar.regcc4 if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("REGCC4", vRM) quit
		set X = cuvar.regcc5 if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("REGCC5", vRM) quit
		set X = cuvar.regcc6 if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("REGCC6", vRM) quit
		set X = cuvar.regcc7 if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("REGCC7", vRM) quit
		set X = cuvar.regccnam if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("REGCCNAM", vRM) quit
		if '("01"[cuvar.REGCCOPT) set vRM=$$^MSG(742,"L") do vdderr("REGCCOPT", vRM) quit
		set X = cuvar.regccro if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("REGCCRO", vRM) quit
	}

	if vobj(cuvar,"REGFLG").exists() do {

		if '("01"[cuvar.REGFLG) set vRM=$$^MSG(742,"L") do vdderr("REGFLG", vRM) quit
	}

	if vobj(cuvar,"RELID").exists() do {

		set X = cuvar.drel if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("DREL", vRM) quit
		if cuvar.relid.length()>8 set vRM = $$^MSG(1076,8) do vdderr("RELID", vRM) quit
		if cuvar.tlorel.length()>12 set vRM = $$^MSG(1076,12) do vdderr("TLOREL", vRM) quit
		set X = cuvar.trel if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"C") do vdderr("TREL", vRM) quit
		if cuvar.userrel.length()>12 set vRM = $$^MSG(1076,12) do vdderr("USERREL", vRM) quit
	}

	if vobj(cuvar,"REPLY").exists() do {

		if cuvar.reply.length()>50 set vRM = $$^MSG(1076,50) do vdderr("REPLY", vRM) quit
	}

	if vobj(cuvar,"RESPROC").exists() do {

		if '("01"[cuvar.RESPROC) set vRM=$$^MSG(742,"L") do vdderr("RESPROC", vRM) quit
	}

	if vobj(cuvar,"RESTRICT").exists() do {

		if '("01"[cuvar.RESTRICT) set vRM=$$^MSG(742,"L") do vdderr("RESTRICT", vRM) quit
	}

	if vobj(cuvar,"RSPPLID").exists() do {

		if cuvar.rspplid.length()>17 set vRM = $$^MSG(1076,17) do vdderr("RSPPLID", vRM) quit
	}

	if vobj(cuvar,"RT").exists() do {

		if cuvar.rt.length()>9 set vRM = $$^MSG(1076,9) do vdderr("RT", vRM) quit
	}

	if vobj(cuvar,"RTNFPGL").exists() do {

		set X = cuvar.rtnfpgl if 'X.isNull(),'Db.isDefined("GLAD","X") set vRM = $$^MSG(1485,X) do vdderr("RTNFPGL", vRM) quit
	}

	if vobj(cuvar,"SBINSTNO").exists() do {

		set X = cuvar.sbinstno if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("SBINSTNO", vRM) quit
	}

	if vobj(cuvar,"SBN").exists() do {

		set X = cuvar.sbacqto if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("SBACQTO", vRM) quit
		set X = cuvar.sbstdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("SBSTDT", vRM) quit
		set X = cuvar.tmsrsnd if 'X.isNull(),X'?1.10N,X'?1"-"1.9N set vRM=$$^MSG(742,"N") do vdderr("TMSRSND", vRM) quit
	}

	if vobj(cuvar,"SCA").exists() do {

		if cuvar.prownr.length()>80 set vRM = $$^MSG(1076,80) do vdderr("PROWNR", vRM) quit
	}

	if vobj(cuvar,"SCAUREL").exists() do {

		if '("01"[cuvar.SCAUREL) set vRM=$$^MSG(742,"L") do vdderr("SCAUREL", vRM) quit
	}

	if vobj(cuvar,"SCHRC").exists() do {

		if '("01"[cuvar.SCHRCC) set vRM=$$^MSG(742,"L") do vdderr("SCHRCC", vRM) quit
		if '("01"[cuvar.SCHRCE) set vRM=$$^MSG(742,"L") do vdderr("SCHRCE", vRM) quit
		if '("01"[cuvar.SCHRCJ) set vRM=$$^MSG(742,"L") do vdderr("SCHRCJ", vRM) quit
		if '("01"[cuvar.SCHRCK) set vRM=$$^MSG(742,"L") do vdderr("SCHRCK", vRM) quit
		if '("01"[cuvar.SCHRCL) set vRM=$$^MSG(742,"L") do vdderr("SCHRCL", vRM) quit
		if '("01"[cuvar.SCHRCN) set vRM=$$^MSG(742,"L") do vdderr("SCHRCN", vRM) quit
		if '("01"[cuvar.SCHRI) set vRM=$$^MSG(742,"L") do vdderr("SCHRI", vRM) quit
	}

	if vobj(cuvar,"SEC").exists() do {

		if cuvar.pswaut.length()>32 set vRM = $$^MSG(1076,32) do vdderr("PSWAUT", vRM) quit
	}

	if vobj(cuvar,"SPLDIR").exists() do {

		if cuvar.spldir.length()>40 set vRM = $$^MSG(1076,40) do vdderr("SPLDIR", vRM) quit
	}

	if vobj(cuvar,"SPLITDAY").exists() do {

		if '("01"[cuvar.SPLITDAY) set vRM=$$^MSG(742,"L") do vdderr("SPLITDAY", vRM) quit
	}

	if vobj(cuvar,"STFREJ").exists() do {

		set X = cuvar.stfrej if 'X.isNull(),'Db.isDefined("STBLBATREJ","X") set vRM = $$^MSG(1485,X) do vdderr("STFREJ", vRM) quit
	}

	if vobj(cuvar,"STMTSRT").exists() do {

		if '("01"[cuvar.STMTCDSKIP) set vRM=$$^MSG(742,"L") do vdderr("STMTCDSKIP", vRM) quit
		if '("01"[cuvar.STMTCUMUL) set vRM=$$^MSG(742,"L") do vdderr("STMTCUMUL", vRM) quit
		if '("01"[cuvar.STMTINTRTC) set vRM=$$^MSG(742,"L") do vdderr("STMTINTRTC", vRM) quit
		if '("01"[cuvar.STMTLNSKIP) set vRM=$$^MSG(742,"L") do vdderr("STMTLNSKIP", vRM) quit
		set X = cuvar.stmtsrtd if 'X.isNull(),'Db.isDefined("STBLSTMTSRT","X") set vRM = $$^MSG(1485,X) do vdderr("STMTSRTD", vRM) quit
		set X = cuvar.stmtsrtl if 'X.isNull(),'Db.isDefined("STBLSTMTSRT","X") set vRM = $$^MSG(1485,X) do vdderr("STMTSRTL", vRM) quit
	}

	if vobj(cuvar,"SWIFT").exists() do {

		set X = cuvar.cnfrmhis if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("CNFRMHIS", vRM) quit
		if '("01"[cuvar.EXTREM) set vRM=$$^MSG(742,"L") do vdderr("EXTREM", vRM) quit
		set X = cuvar.mt900int if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("MT900INT", vRM) quit
		set X = cuvar.mt910int if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("MT910INT", vRM) quit
		set X = cuvar.pmthis if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("PMTHIS", vRM) quit
	}

	if vobj(cuvar,"SWIFTADD").exists() do {

		if cuvar.swiftadd.length()>15 set vRM = $$^MSG(1076,15) do vdderr("SWIFTADD", vRM) quit
	}

	if vobj(cuvar,"SYSDRV").exists() do {

		if cuvar.distnam.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DISTNAM", vRM) quit
		if cuvar.sysabr.length()>3 set vRM = $$^MSG(1076,3) do vdderr("SYSABR", vRM) quit
	}

	if vobj(cuvar,"TAXCA").exists() do {

		set X = cuvar.nr4bramt if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.NR4BRAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		if cuvar.sdriftrn.length()>15 set vRM = $$^MSG(1076,15) do vdderr("SDRIFTRN", vRM) quit
		if cuvar.sdrsptrn.length()>15 set vRM = $$^MSG(1076,15) do vdderr("SDRSPTRN", vRM) quit
		if cuvar.t4riftrn.length()>15 set vRM = $$^MSG(1076,15) do vdderr("T4RIFTRN", vRM) quit
		if cuvar.t4rsptrn.length()>15 set vRM = $$^MSG(1076,15) do vdderr("T4RSPTRN", vRM) quit
		if cuvar.t5fid.length()>9 set vRM = $$^MSG(1076,9) do vdderr("T5FID", vRM) quit
		set X = cuvar.t5ramt if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.T5RAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
		if cuvar.t5trn.length()>15 set vRM = $$^MSG(1076,15) do vdderr("T5TRN", vRM) quit
	}

	if vobj(cuvar,"TCC").exists() do {

		if cuvar.iein.length()>11 set vRM = $$^MSG(1076,11) do vdderr("IEIN", vRM) quit
		set X = cuvar.magctry if 'X.isNull(),'Db.isDefined("STBLCNTRY","X") set vRM = $$^MSG(1485,X) do vdderr("MAGCTRY", vRM) quit
		if cuvar.tcc.length()>8 set vRM = $$^MSG(1076,8) do vdderr("TCC", vRM) quit
	}

	if vobj(cuvar,"UACND1F").exists() do {

		if cuvar.uacnd1f.length()>130 set vRM = $$^MSG(1076,130) do vdderr("UACND1F", vRM) quit
	}

	if vobj(cuvar,"UACNL1F").exists() do {

		if cuvar.uacnl1f.length()>130 set vRM = $$^MSG(1076,130) do vdderr("UACNL1F", vRM) quit
	}

	if vobj(cuvar,"UCID").exists() do {

		if cuvar.ucid.length()>9 set vRM = $$^MSG(1076,9) do vdderr("UCID", vRM) quit
	}

	if vobj(cuvar,"UCIF1F").exists() do {

		if cuvar.ucif1f.length()>130 set vRM = $$^MSG(1076,130) do vdderr("UCIF1F", vRM) quit
	}

	if vobj(cuvar,"USEGOPT").exists() do {

		set X = cuvar.usegopt if 'X.isNull(),'Db.isDefined("STBLUSEGOPT","X") set vRM = $$^MSG(1485,X) do vdderr("USEGOPT", vRM) quit
	}

	if vobj(cuvar,"USERNAME").exists() do {

		if cuvar.username.length()>7 set vRM = $$^MSG(1076,7) do vdderr("USERNAME", vRM) quit
	}

	if vobj(cuvar,"USRESTAT").exists() do {

		if '("01"[cuvar.USRESTAT) set vRM=$$^MSG(742,"L") do vdderr("USRESTAT", vRM) quit
	}

	if vobj(cuvar,"VAT").exists() do {

		set X = cuvar.vat if 'X.isNull() set vRM = $$VAL^DBSVER("N",9,0,,,,,5) if 'vRM.isNull() set vRM = $$^MSG(979,"CUVAR.VAT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	}

	if vobj(cuvar,"VDT").exists() do {

		set X = cuvar.vdt if 'X.isNull(),X'?1N set vRM=$$^MSG(742,"N") do vdderr("VDT", vRM) quit
		set X = cuvar.vdtfwd if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("VDTFWD", vRM) quit
	}

	if vobj(cuvar,"VNDR").exists() do {

		if cuvar.vaddr.length()>40 set vRM = $$^MSG(1076,40) do vdderr("VADDR", vRM) quit
		set X = cuvar.vccode if 'X.isNull(),X'?1.3N,X'?1"-"1.2N set vRM=$$^MSG(742,"N") do vdderr("VCCODE", vRM) quit
		if cuvar.vcity.length()>40 set vRM = $$^MSG(1076,40) do vdderr("VCITY", vRM) quit
		if cuvar.vcname.length()>40 set vRM = $$^MSG(1076,40) do vdderr("VCNAME", vRM) quit
		if cuvar.vemail.length()>35 set vRM = $$^MSG(1076,35) do vdderr("VEMAIL", vRM) quit
		if cuvar.vname.length()>40 set vRM = $$^MSG(1076,40) do vdderr("VNAME", vRM) quit
		set X = cuvar.vphone if 'X.isNull(),X'?1.7N,X'?1"-"1.6N set vRM=$$^MSG(742,"N") do vdderr("VPHONE", vRM) quit
		if cuvar.vstate.length()>2 set vRM = $$^MSG(1076,2) do vdderr("VSTATE", vRM) quit
		if cuvar.vzip.length()>9 set vRM = $$^MSG(1076,9) do vdderr("VZIP", vRM) quit
	}

	if vobj(cuvar,"XACN").exists() do {

		if cuvar.xacn.length()>12 set vRM = $$^MSG(1076,12) do vdderr("XACN", vRM) quit
	}
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CUVAR","MSG",979,"CUVAR."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordCUVAR cuvar

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	set vux = vx("")
	set voldkey = vux.piece("|",1),vobj(cuvar,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	do vload                                               // Make sure all data is loaded locally
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	set vnewkey = vux.piece("|",2),vobj(cuvar,-3) = vnewkey // Copy new keys into object
	type RecordCUVAR vnewrec = cuvar.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("CUVAR",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	set vobj(cuvar,-3) = vux.piece("|",1)                  // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit
