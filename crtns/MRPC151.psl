MRPC151(String RETURN, Number VERSN, String OLDETC, String NEWETC, String GRP)

	/*
	 Procedure Id: MRPC151
	 DESC: Copy Transaction Codes
	 ORIG: Aries Beltran
	 DATE: 06/06/2007

	 ARGUMENTS:
		. RETURN	Return value		/TYP=T/REQ/MECH=REFNAM:W
		. VERSN		Version number		/TYP=N/REQ/MECH=VAL
		. OLDETC	Old Transcation Code	/TYP=T/REQ/MECH=VAL
		. NEWETC	New Transaction Code	/TYP=T/REQ/MECH=VAL
		. GRP		Transaction Group	/TYP=T/MECH=VAL
		
	 RETURNS:

		. $$		Status			/TYP=L/REQ/MECH=VAL		
				New transaction code, otherwise error message
 
		. RETURN  	requested information	/TYP=N	


	 EXAMPLE:
		
		set X=$$^MRPC151(.RETURN,1,"CK","CKK","IBS")

	 ---- Comments --------------------------------------------------------

	 ---- Revision History ------------------------------------------------
	 
	06/06/2007 - BELTRANA - CR27522
		     Created New MRPC. Copies transaction code to 3 tables: TRN,
		     TRNAUT, and TRNSD.
	
	*/

	type public Boolean ER, ERV
	type public String ERRMSG, ET, RM

	set (ER,ERV)=0
	set (ERRMSG,RM)=""
	set RETURN=0

	// Process new product type create
	do PROC(VERSN.get(),OLDETC.get(),NEWETC.get(),GRP.get(),.RETURN)
	if ERV set ER=1,RM=ERRMSG

	quit:ER $$ERRMSG^PBSUTL(RM.get())

	// Build return value
	set RETURN=$$V2LV^MSG(.RETURN) 
	
	quit ""


public PROC(Number VERSN, String OLDETC, String NEWETC, String GRP, String RETURN)
	/*
	 Process copy product type

	 ARGUMENTS:
		. VERSN		Version number		/TYP=N/REQ/MECH=VAL
		. OLDETC	Old Transaction Code	/TYP=T/REQ/MECH=VAL
		. NEWETC	New Transaction Code	/TYP=T/REQ/MECH=VAL
		. GRP		Transaction Group	/TYP=T/REQ/MECH=VAL	

	 RETURNS
		. RETURN	Return value		/TYP=T/REQ/MECH=REFNAM:W
	*/

	type public Boolean ER, ERV
	type public String ERRMSG, ET, RM
	type String FROM

	catch error {
		set ET=error.type
		set RM=error.description
		set FROM=error.thrownAt
		if error.type["%GTM-" do ZE^UTLERR

		do Runtime.rollback()
		
		// Set error flag
		set ERV=1
		set ERRMSG=RM
	}

	// Version number of client message is not compatible with server
	if VERSN'=1 set RM=$$^MSG(2951) throw Class.new("Error",","_RM)

	// Missing parameter
	if OLDETC.isNull() throw Class.new("Error",","_$$^MSG(8607))

	// Missing parameter
	if NEWETC.isNull() throw Class.new("Error",","_$$^MSG(8607))

	// Missing parameter
	if GRP.isNull() throw Class.new("Error",","_$$^MSG(8607))

	// Verify copy from transaction code is valid
	type ResultSet rs = Db.select("ETC","TRN","ETC=:OLDETC")
	// Invalid transaction code ~p1
	if rs.isEmpty() throw Class.new("Error",","_$$^MSG(1498,OLDETC))

	// Verify copy to transaction code is valid
	type ResultSet rs1 = Db.select("ETC","TRN","ETC=:NEWETC")
	// ~p1 already exists
	if rs1.next() throw Class.new("Error",","_$$^MSG(3019,NEWETC))

	// Verify Group is valid
	type ResultSet rs2 = Db.select("NAME","STBLLIBS","NAME=:GRP")
	// Invalid transaction group
	if rs2.isEmpty() throw Class.new("Error",","_$$^MSG(1501))
	
	do FILEC^UTRN(OLDETC,NEWETC,GRP)
	if ER quit
	
	set RETURN=NEWETC
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60793^35989^Aries Beltran^2806"	// Signature - LTD^TIME^USER^SIZE
