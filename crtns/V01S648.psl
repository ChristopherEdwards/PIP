V01S648(Number %ProcessMode,RecordUTBLCOMPLN fUTBLCOM)   // -  - SID= <UTBLCOMPLN2> Commission Plan User Table Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:35 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fUTBLCOM.exists() set fUTBLCOM = Class.new("RecordUTBLCOMPLN")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLCOMPLN2",VPGM=$T(+0),VSNAME="Commission Plan User Table Maintenance"
 set VFSN("UTBLCOMPLN")="zfUTBLCOM"
 set vPSL=1
 set KEYS(1)=fUTBLCOM.CPLAN
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLCOM),VDA1(.fUTBLCOM),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fUTBLCOM),VPR(.fUTBLCOM),VDA1(.fUTBLCOM)
 if %ProcessMode do VLOD(.fUTBLCOM) quit:$G(ER)  do VPR(.fUTBLCOM),VDA1(.fUTBLCOM)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLCOM)
	quit


VNEW(RecordUTBLCOMPLN fUTBLCOM) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLCOM)
 do VLOD(.fUTBLCOM)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordUTBLCOMPLN fUTBLCOM)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordUTBLCOMPLN fUTBLCOM) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLCOMPLN fUTBLCOM) // Display screen prompts
 set VO="12||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,7,17,0,0,0,0,0,0,0)_"01T Commission Plan:"
 set VO(2)=$C(2,11,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(5,25,24,2,0,0,0,0,0,0)_"01TExtra Growth Commissions"
 set VO(4)=$C(7,11,13,0,0,0,0,0,0,0)_"01TGrowth Table:"
 set VO(5)=$C(7,41,24,0,0,0,0,0,0,0)_"01TGrowth Change Frequency:"
 set VO(6)=$C(8,7,17,0,0,0,0,0,0,0)_"01TNext Change Date:"
 set VO(7)=$C(10,24,30,2,0,0,0,0,0,0)_"01TDeferred Commissions/Penalties"
 set VO(8)=$C(12,3,21,0,0,0,0,0,0,0)_"01TDeferred Expense G/L:"
 set VO(9)=$C(12,42,23,0,0,0,0,0,0,0)_"01TAmortization Frequency:"
 set VO(10)=$C(13,8,16,0,0,0,0,0,0,0)_"01TNext Cycle Date:"
 set VO(11)=$C(13,49,16,0,0,0,0,0,0,0)_"01TLast Cycle Date:"
 set VO(12)=$C(14,7,17,0,0,0,0,0,0,0)_"01TNumber Of Cycles:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordUTBLCOMPLN fUTBLCOM)  // Display screen data
 new V
 //
 set VO="22|13|13|0"
 set VO(13)=$C(1,25,8,2,0,0,0,0,0,0)_"01T"_$E(fUTBLCOM.CPLAN,1,8)
 set VO(14)=$C(2,25,40,2,0,0,0,0,0,0)_"01T"_$E(fUTBLCOM.DESCR,1,40)
 set VO(15)=$C(7,25,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLCOM.GTBL,1,12)
 set VO(16)=$C(7,66,12,2,0,0,0,0,0,0)_"00F"_$E(fUTBLCOM.GRTHFRE,1,12)
 set VO(17)=$C(8,25,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fUTBLCOM.GRTHCHND)
 set VO(18)=$C(12,25,12,2,0,0,0,0,0,0)_"00N"_fUTBLCOM.DEFEREXPGL
 set VO(19)=$C(12,66,12,2,0,0,0,0,0,0)_"00F"_$E(fUTBLCOM.AMFRE,1,12)
 set VO(20)=$C(13,25,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fUTBLCOM.NCD)
 set VO(21)=$C(13,66,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fUTBLCOM.LCD)
 set VO(22)=$C(14,25,3,2,0,0,0,0,0,0)_"00N"_fUTBLCOM.NOC
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordUTBLCOMPLN fUTBLCOM)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=10,VPT=1,VPB=14,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLCOMPLN"
 set OLNTB=14025
 
 set VFSN("UTBLCOMPLN")="zfUTBLCOM"
 //
 // 
	
	
 set %TAB(1)=$C(0,24,8)_"21T12401|1|[UTBLCOMPLN]CPLAN"
 set %TAB(2)=$C(1,24,40)_"21T12401|1|[UTBLCOMPLN]DESCR"
 set %TAB(3)=$C(6,24,12)_"00T12423|1|[UTBLCOMPLN]GTBL|[UTBLEXPGRTHT]||do VP1^V01S648(.fUTBLCOM)"
 set %TAB(4)=$C(6,65,12)_"00F12430|1|[UTBLCOMPLN]GRTHFRE|||do VP2^V01S648(.fUTBLCOM)"
 set %TAB(5)=$C(7,24,10)_"00D12431|1|[UTBLCOMPLN]GRTHCHND|||do VP3^V01S648(.fUTBLCOM)"
 set %TAB(6)=$C(11,24,12)_"00N12418|1|[UTBLCOMPLN]DEFEREXPGL|[GLAD]||do VP4^V01S648(.fUTBLCOM)"
 set %TAB(7)=$C(11,65,12)_"00F12412|1|[UTBLCOMPLN]AMFRE|||do VP5^V01S648(.fUTBLCOM)"
 set %TAB(8)=$C(12,24,10)_"00D12415|1|[UTBLCOMPLN]NCD"
 set %TAB(9)=$C(12,65,10)_"20D12416|1|[UTBLCOMPLN]LCD"
 set %TAB(10)=$C(13,24,3)_"00N12417|1|[UTBLCOMPLN]NOC"
 do VTBL(.fUTBLCOM)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordUTBLCOMPLN fUTBLCOM) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordUTBLCOMPLN fUTBLCOM) //
 type public String X

 if X="" do {
 	do PROTECT^DBSMACRO("UTBLCOMPLN.GRTHFRE")
	do PROTECT^DBSMACRO("UTBLCOMPLN.GRTHCHND")
 	do DELETE^DBSMACRO("UTBLCOMPLN.GRTHFRE")
 	do DELETE^DBSMACRO("UTBLCOMPLN.GRTHCHND")
 }
 else  do {
	 do UNPROT^DBSMACRO("UTBLCOMPLN.GRTHFRE")
 	 do UNPROT^DBSMACRO("UTBLCOMPLN.GRTHCHND")
 }
VP2(RecordUTBLCOMPLN fUTBLCOM) //
 type public Boolean ER
 type public String X 
 type Date JD,NJD
 type String FRE

 // If growth table is defined, data is required
 if fUTBLCOM.gtbl'="",X="" do Runtime.setErrMSG("UTBLCOMPLN",741) quit
 
 // Call NEXT^UFRE to get the next calculation date.
 // Quit if already valued
 if fUTBLCOM.grthchnd'="" quit

 do DELETE^DBSMACRO("UTBLCOMPLN.GRTHCHND","1","0")

 if X="" quit
 set JD=%SystemDate
 set FRE=X
 set NJD=JD.nextFreqDate(FRE) quit:ER
 do DEFAULT^DBSMACRO("UTBLCOMPLN.GRTHCHND","NJD")
VP3(RecordUTBLCOMPLN fUTBLCOM) //
 type public Date X
 
 // If growth table is valued, data is required
 if fUTBLCOM.gtbl'="",X="" do Runtime.setErrMSG("UTBLCOMPLN",741)
VP4(RecordUTBLCOMPLN fUTBLCOM) //
 /* Protect the number of cycles,next calc date, and the amortization
    frequency if the g/l account is left blank
 */
 
 type public Number X

 if X="" do {
 	do PROTECT^DBSMACRO("UTBLCOMPLN.NOC")
	do PROTECT^DBSMACRO("UTBLCOMPLN.AMFRE")
	do PROTECT^DBSMACRO("UTBLCOMPLN.NCD")
	do DELETE^DBSMACRO("UTBLCOMPLN.NOC","1","0")
	do DELETE^DBSMACRO("UTBLCOMPLN.AMFRE","1","0")
        do DELETE^DBSMACRO("UTBLCOMPLN.NCD","1","0")
 }
 else  do {
 	do UNPROT^DBSMACRO("UTBLCOMPLN.NOC")
	do UNPROT^DBSMACRO("UTBLCOMPLN.AMFRE")
	do UNPROT^DBSMACRO("UTBLCOMPLN.NCD")
 }
VP5(RecordUTBLCOMPLN fUTBLCOM) //
 type public Boolean ER
 type public Date NJD
 type public String X
 type Date JD
 type String FRE

 // Call NEXT^UFRE to get the next cycle date.
 // Quit if already valued
 if fUTBLCOM.ncd'="" quit    
 
 do DELETE^DBSMACRO("UTBLCOMPLN.NCD","1","0")
 if X="" quit

 set JD=%SystemDate
 set FRE=X
 do NEXT^UFRE quit:ER
 do DEFAULT^DBSMACRO("UTBLCOMPLN.NCD","NJD")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLCOMPLN fUTBLCOM
 do VPR(.fUTBLCOM)
 do VDA1(.fUTBLCOM)
 do ^DBSPNT()
 quit

VW(RecordUTBLCOMPLN fUTBLCOM)
 do VDA1(.fUTBLCOM)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLCOMPLN fUTBLCOM)
 do VDA1(.fUTBLCOM)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLCOMPLN fUTBLCOM
 do VDA1(.fUTBLCOM)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLCOMPLN fUTBLCOM
 if sn="UTBLCOMPLN" do vSET1(.fUTBLCOM,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordUTBLCOMPLN fUTBLCOM,di,X)
 do fUTBLCOM.setAuditFlag(1)
 set fUTBLCOM.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordUTBLCOMPLN fUTBLCOM
 if fid="UTBLCOMPLN" quit $$vREAD1(.fUTBLCOM,di)
 quit ""
vREAD1(RecordUTBLCOMPLN fUTBLCOM,di)
 quit fUTBLCOM.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
