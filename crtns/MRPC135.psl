public MRPC135( String RETURN, Number VERSN, String APPID, String INPUT, String APPDTA, Number MODE)

	/*
	 Procedure Id: MRPC135
	 DESC: Application Management RPC
	 ORIG: Ed Sigda
	 DATE: 09/15/2005

	 ARGUMENTS:
		. RETURN	Return value		/TYP=T/REQ/MECH=REFNAM:W
		. VERSN		Version number		/TYP=N/REQ/MECH=VAL
		. APPID		Application id		/TYP=T/MECH=VAL
		. INPUT		Input string		/TYP=T/REQ/MECH=VAL
		. APPDTA	XML Application Data	/TYP=T/REQ/MECH=VAL
		. MODE		Create Mode		/TYP=N/REQ/MECH=VAL

	 EXAMPLE:
		set INPUT="APPMGMT.TAXID='134-86-1515',APPMGMT.PLNM='SMITH',APPMGMTCI1.TAXID='134-86-1515'"
		set APPDTA="<?xml version=""1.0"" encoding=""UTF-8""?><java version=""1.5.0_04"" class=""java.beans.XMLDecoder"">"
		set X=$$^MRPC135(.R,1,,INPUT,APPDTA,0)

	 ---- Comments --------------------------------------------------------

	 ---- Revision History ------------------------------------------------
	 
	 06/15/07 - VANITHAK - CR27525
	 	    Modified PROC section to use the overlay method to assign
	 	    the data for the corresponding columns of APPMGMT and 
	 	    APPMGTCI.This solves the problem of hard setting the 
	 	    values to the column and eliminates the problem of
	 	    modifying the code when a new column is added to the table.
	 	 
	 08/17/06 - CHHABRIS - CR22504
	 	    Retrofited new procedure from P01DEV1 view as per the below
	 	    mentioned CR.

		 03/27/06 - Ed Sigda - CR 20274
		            Create in Profile01 view

	 -----------------------------------------------------------------------
	*/

	type public Boolean ER
	type public String RM
	
	type Boolean ERV
	type String ERRMSG

	set (ER,ERV)=0
	set (ERRMSG,RM)=""
	set RETURN=""

	// Process application id
	do PROC(VERSN.get(),APPID.get(),INPUT.get(),APPDTA.get(),MODE.get(),.RETURN)
	if ERV set ER=1,RM=ERRMSG

	if ER quit $$ERRMSG^PBSUTL(RM)

	// Build return value
	set RETURN=$$V2LV^MSG(.RETURN) 

	quit ""


public PROC( Number VERSN, String APPID, String INPUT, String APPDTA, Number MODE, String RETURN)

	/*
	 Process Appplication Origination

	 ARGUMENTS:
		. VERSN		Version number		/TYP=N/REQ/MECH=VAL
		. APPID		Application Id		/TYP=T/REQ/MECH=VAL
		. INPUT		Input String		/TYP=T/REQ/MECH=VAL
		. APPDTA	XML Application Data	/TYP=T/REQ/MECH=VAL
		. MODE		Create Mode             /TYP=N/REQ/MECH=VAL

	 RETURNS
		. RETURN	Return value		/TYP=T/REQ/MECH=REFNAM:W
	*/

	type public String ERRMSG,ET,FROM,RM
	type public Boolean ER
	type String DATA(),TAXID, TMPDATA()
	type Boolean ERV,STOP
	type Number CNT,XSEQ

	catch error {
		set ET=error.type
		set RM=error.description
		set FROM=error.thrownAt
		if error.type["%GTM-" do ZE^UTLERR

		do Runtime.rollback()
		
		// Set error flag
		set ERV=1
		set ERRMSG=RM
	}

	type RecordAPPMGMT app
	type RecordAPPMGMTCI appci
	type RecordAPPMGMTDATA data

	// Version number of client message is not compatible with server
	if VERSN'=1 set RM=$$^MSG(2951) throw Class.new("Error",","_RM)

	// Missing ~p1
	if INPUT.isNull() set RM=$$^MSG(3113,"INPUT") throw Class.new("Error",","_RM)
	if APPDTA.isNull() set RM=$$^MSG(3113,"APPDTA") throw Class.new("Error",","_RM)
	if MODE.isNull() set RM=$$^MSG(3113,"MODE") throw Class.new("Error",","_RM)

	// Parse tax id data into an array
	do STR2ARR^UTLMRPC(INPUT,.DATA,",")

	// Verify application id if passed (update mode)
	// Application record ~p1 does not exist
	if '(APPID.isNull()),'Db.isDefined("APPMGMT","APPID") set RM=$$^MSG(5675,APPID) throw Class.new("Error",","_RM)

	// Generate application id (create mode)
	if APPID.isNull() do {
		type Number SEQ,TIM
		set SEQ=$$GET^NXTSEQ("MRPC135",5)
		set TIM=%CurrentTime
		set APPID=%CurrentDate_TIM.zero(5)_SEQ.zero(5)
	}
	
	// Create/Load application
	set app=Db.getRecord("APPMGMT",":APPID",1)

	do app.setAuditFlag(1)
	
	set app.appid=APPID
	
	// Populate app object with data passed in
	do app.overlay("DATA")
			
	// Save the APPMGMT data to the database
	do app.save("/NOFKCHK=1/VALDD/VALRI/VALREQ/KEEPVFKEY")
		
	if ER throw Class.new("Error",","_RM)

	if MODE=0 do {
		set data=Class.new("RecordAPPMGMTDATA")
		set data.appid=APPID
		set data.seq=Db.nextVal("APPMGMTDATA","APPID")
	}
	else  do {
		set XSEQ=Db.currVal("APPMGMTDATA","APPID")
		set data=Db.getRecord("APPMGMTDATA","APPID,XSEQ")
		do data.setAuditFlag(1)
	}

	set data.appdata=APPDTA

	// Save the APPMGMTDATA data to the database
        do data.save("/NOFKCHK=1/VALDD/VALRI/VALREQ/KEEPVFKEY")

        if ER throw Class.new("Error",","_RM)

	// Determine tax ids
	set STOP=0
	for CNT=1:1 do { quit:STOP
	
		if '$$EXIST^MRPC044("APPMGMTCI"_CNT) set STOP=1 quit
		
		/* 
		   Create the TMPDATA for moving the corresponding
		   column value from DATA array
		*/   
		do MOVEARR^UTLMRPC("APPMGMTCI"_CNT,"APPMGMTCI",.DATA,.TMPDATA)

		set TAXID=TMPDATA("APPMGMTCI.TAXID").get()
		if TAXID.isNull() set STOP=1 quit

		set appci=Db.getRecord("APPMGMTCI",":APPID,:TAXID",1)

		do app.setAuditFlag(1)

		set appci.appid=APPID
		
		// Populate appci object with data passed in
		do appci.overlay("TMPDATA")
			
		// Save the APPMGMT data to the database
		do appci.save()
		
		if ER throw Class.new("Error",","_RM)
	}
	
	// Verify foreign keys
	do vfkey^SQLBUF
	if ER throw Class.new("Error",","_RM)

	// Copy the previously built return string to the RETURN variable
	set RETURN=APPID

	quit


TEST( String %UserID)

	type public String APPDTA,FLD,%IPMODE,%LOGID,RM
	type public Boolean ER
	type String APPID,INPUT,MODE,PTR,RETURN,TLO,X

	// User ID required
	if %UserID.isNull() set ER=1 write !,$$^MSG(2849)

	// Initialization
	set TLO="_ELWOOD$NTA209:"
	do SYSVAR^SCADRV0()
	set %LOGID=$$LOGID^SCADRV
	set %IPMODE="NOINT"

	set ER=0
	set RM=""

	// Read input
	read !,"Application id: ",APPID
	read !,"Input string: ",INPUT
	read !,"XML Application Data: ",APPDTA
	read !,"Create mode: ",MODE

	// Execute RPC
	set X=$$^MRPC135(.RETURN,1,APPID,INPUT,APPDTA,MODE)
	if 'X.isNull() do {
		set PTR=$$LV2V^MSG(X,.FLD)
		set ER=1
		if RM.isNull() set RM=FLD(5)
	}

	// Display return values
	write !!,"Error Flag: ",ER.get(),"   ",RM.get()
	write !,"Return: ",RETURN.get()

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60796^41144^Vanitha Krishnasamy^5756"	// Signature - LTD^TIME^USER^SIZE
