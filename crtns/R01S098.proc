R01S098	// SCA027 - Monthly Plan Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date FROM
	type Date TO

	set RID="SCA027"
	set RN="Monthly Plan Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("FROM")="|10|||||||D|From Date|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("TO")="|10|||||||D|To Date|||||"

	set %READ="IO/REQ,FROM#0,TO#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date FROM,TO
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,BAL,CONAM,NAM,RID,RN,TYPCNT(),VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA027",RN="Monthly Plan Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA027","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[DEP]RPASEQ#20#3,[DEP]CID#28#12,[DEP]IRA#54#2"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"DEP.STAT NOT =4 AND DEP.IRA>0 AND HIST.ITC IS NOT "
		set VWHERE=VWHERE_"NULL AND (HIST.ITC6=0 OR HIST.ITC6 IS NULL) AND HI"
		set VWHERE=VWHERE_"ST.TSO IS NOT NULL AND HIST.ETC IS NOT NULL AND HI"
		set VWHERE=VWHERE_"ST.PRIN>0"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Monthly Plan Summary"
		set VBNRINFO("PGM")="R01S098"
		set VBNRINFO("RID")="SCA027"
		set VBNRINFO("TABLES")="HIST,DEP"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]ACN"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEP]RPASEQ"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,HIST]CID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,HIST]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DEP.ACN,DEP.RPASEQ,HIST.CID,HIST.TSEQ,DEP.CID,DEP.IRA,HIST.ENDBAL","HIST,DEP","DEP.STAT NOT =4 AND DEP.IRA>0 AND HIST.ITC IS NOT NULL AND (HIST.ITC6=0 OR HIST.ITC6 IS NULL) AND HIST.TSO IS NOT NULL AND HIST.ETC IS NOT NULL AND HIST.PRIN>0","DEP.ACN,DEP.RPASEQ,HIST.CID,HIST.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// DEP.ACN
	set vc2=V.piece($C(9),2)			// DEP.RPASEQ
	set vc3=V.piece($C(9),3)			// HIST.CID
	set vc4=V.piece($C(9),4)			// HIST.TSEQ
	set vc5=V.piece($C(9),5)			// DEP.CID
	set vc6=V.piece($C(9),6)			// DEP.IRA
	set vc7=V.piece($C(9),7)			// HIST.ENDBAL
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public String TYPCNT()
 type Number I

 // Initialize arrays for Report Summary totals.  Allows up to 15 IRA Types.
 for I=1:1:17 do {
	set TYPCNT(I,1)=""
	set TYPCNT(I,2)=0
	set TYPCNT(I,3)=0
	set TYPCNT(I,4)=0
	}

 type ResultSet rs=Db.select("IRA,MNEMONIC","STBLIRA")
 while rs.next() set TYPCNT(rs.getCol("IRA"),1)=rs.getCol("MNEMONIC")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),BAL
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+BAL			// @TOT(<<BAL>>)
	quit

VDTL1	// Detail
	type public String %TIM,BAL,IOSL,NAM,TYPCNT(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc1,12)
	do VP1 quit:VFMQ!verror.get()  set V=$E(NAM,1,40)
	set VL=VL_$J("",15-VL.length())_V
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,BAL,IOSL,NAM,TYPCNT(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                   "_$J(vc2,3)
	set V=vc5,VO=V set V=$J(V,16) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",23-VL.length())_V		// [SYSDEV,DEP]CID
	set V=vc6,VO=V set V=$J(V,15) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",40-VL.length())_V		// [SYSDEV,DEP]IRA
	set V=$J($FN(BAL,",",2),15) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,BAL,I,IOSL,NAM,TYPCNT(),V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                                                    "_"==="
	set VL=VL_$J("",59-VL.length())_"==============="
	do VOM
	set V=VT(4)					// @CNT(,N,3)
	set VL="                                                    "_$J(V,3)
	set V=VT(4,1,1)					// @TOT(<<BAL>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),15)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BAL,CONAM,NAM,RID,RN,TYPCNT(),VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,40)
	set VL=VL_$J("",49-VL.length())_"Run Date:"
	set VL=VL_$J("",59-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",51-VL.length())_"System:"
	set VL=VL_$J("",59-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="    "_"Customer   Name"
	do VOM
	set VL="      "_"Number   Customer Name    Account            Type            Balance"
	do VOM
	set VL="============================================================================"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,BAL,NAM,TYPCNT(),VPN,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+22>IOSL do VHDG0 quit:VFMQ

	set VL="                                  "_"SUMMARY"
	do VOM
	set VL="                                  "_"======="
	do VOM
	set VL="" do VOM
	set VL="                 "_"Total Customers  Total Accounts             Total Balance"
	do VOM
	set VL="                       "_"---------  --------------             -------------"
	do VOM
	do VP5 quit:VFMQ!verror.get()  set V=$E(TYPCNT(1,1),1,10) set VL="     "_V
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(1,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(1,3),3)
	set V=$J($FN(TYPCNT(1,4),",",2),15) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(2,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(2,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(2,3),3)
	set V=$J($FN(TYPCNT(2,4),",",2),15) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(3,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(3,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(3,3),3)
	set V=$J($FN(TYPCNT(3,4),",",2),15) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(4,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(4,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(4,3),3)
	set V=$J($FN(TYPCNT(4,4),",",2),15) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(5,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(5,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(5,3),3)
	set V=$J($FN(TYPCNT(5,4),",",2),15) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(6,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(6,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(6,3),3)
	set V=$J($FN(TYPCNT(6,4),",",2),15) do VP11 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(7,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(7,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(7,3),3)
	set V=$J($FN(TYPCNT(7,4),",",2),15) do VP12 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(8,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(8,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(8,3),3)
	set V=$J($FN(TYPCNT(8,4),",",2),15) do VP13 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(9,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(9,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(9,3),3)
	set V=$J($FN(TYPCNT(9,4),",",2),15) do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(10,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(10,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(10,3),3)
	set V=$J($FN(TYPCNT(10,4),",",2),15) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(11,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(11,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(11,3),3)
	set V=$J($FN(TYPCNT(11,4),",",2),15) do VP16 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(12,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(12,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(12,3),3)
	set V=$J($FN(TYPCNT(12,4),",",2),15) do VP17 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(13,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(13,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(13,3),3)
	set V=$J($FN(TYPCNT(13,4),",",2),15) do VP18 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(14,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(14,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(14,3),3)
	set V=$J($FN(TYPCNT(14,4),",",2),15) do VP19 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(15,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(15,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(15,3),3)
	set V=$J($FN(TYPCNT(15,4),",",2),15) do VP20 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_$E(TYPCNT(16,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(16,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(16,3),3)
	set V=$J($FN(TYPCNT(16,4),",",2),15) do VP21 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	do VOM
	set VL="     "_$E(TYPCNT(17,1),1,10)
	set VL=VL_$J("",29-VL.length())_$J(TYPCNT(17,2),3)
	set VL=VL_$J("",45-VL.length())_$J(TYPCNT(17,3),3)
	set V=$J($FN(TYPCNT(17,4),",",2),15) do VP22 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NAM

	type public String vc1
 type public String NAM
 type public Number ACN

 set ACN=vc1
 
 type RecordCIF cif=Db.getRecord("CIF","ACN",1) 

 set NAM=cif.nam
	quit

VP2	// Column post-processor - [SYSDEV,DEP]CID

	type public String vc6,vc7
 type public String TYPCNT()
 type public Number BAL,TYP

 set TYP=vc6
 set BAL=vc7

 if TYPCNT(TYP,3).isNull() set TYPCNT(TYP,3)=1
 else  set TYPCNT(TYP,3)=TYPCNT(TYP,3)+1

	quit

VP3	// Column post-processor - [SYSDEV,DEP]IRA

 type public Number ACN,CUSTCNT,TYP
 
 set CUSTCNT(ACN,TYP)=""
	quit

VP4	// Column post-processor - Variable: BAL

 type public String TYPCNT()
 type public Number TYP,BAL

 if TYPCNT(TYP,4).isNull() set TYPCNT(TYP,4)=BAL
 else  set TYPCNT(TYP,4)=TYPCNT(TYP,4)+BAL

	quit

VP5	// Column pre-processor - Variable: TYPCNT(1

 type public Number ACN,CUSTCNT(),TYP
 type public String TYPCNT()

 // Increment Customer counter for each type.
 set (ACN,TYP)=""
 for  set ACN=CUSTCNT(ACN).order() quit:ACN.isNull()  do {
	for  set TYP=CUSTCNT(ACN,TYP).order() quit:TYP.isNull()  do {
		set TYPCNT(TYP,2)=TYPCNT(TYP,2)+1
		}
	}
	quit

VP6	// Column post-processor - Variable: TYPCNT(1

 type public String TYPCNT(),V,VL
 if TYPCNT(1,1).isNull() set (V,VL)=""

	quit

VP7	// Column post-processor - Variable: TYPCNT(2

 type public String TYPCNT(),V,VL
 if TYPCNT(2,1).isNull() set (V,VL)=""

	quit

VP8	// Column post-processor - Variable: TYPCNT(3

 type public String TYPCNT(),V,VL
 if TYPCNT(3,1).isNull() set (V,VL)=""

	quit

VP9	// Column post-processor - Variable: TYPCNT(4

 type public String TYPCNT(),V,VL
 if TYPCNT(4,1).isNull() set (V,VL)=""

	quit

VP10	// Column post-processor - Variable: TYPCNT(5

 type public String TYPCNT(),V,VL
 if TYPCNT(5,1).isNull() set (V,VL)=""

	quit

VP11	// Column post-processor - Variable: TYPCNT(6

 type public String TYPCNT(),V,VL
 if TYPCNT(6,1).isNull() set (V,VL)=""

	quit

VP12	// Column post-processor - Variable: TYPCNT(7

 type public String TYPCNT(),V,VL
 if TYPCNT(7,1).isNull() set (V,VL)=""

	quit

VP13	// Column post-processor - Variable: TYPCNT(8

 type public String TYPCNT(),V,VL
 if TYPCNT(8,1).isNull() set (V,VL)=""

	quit

VP14	// Column post-processor - Variable: TYPCNT(9

 type public String TYPCNT(),V,VL
 if TYPCNT(9,1).isNull() set (V,VL)=""

	quit

VP15	// Column post-processor - Variable: TYPCNT(10

 type public String TYPCNT(),V,VL
 if TYPCNT(10,1).isNull() set (V,VL)=""
	quit

VP16	// Column post-processor - Variable: TYPCNT(11

 type public String TYPCNT(),V,VL
 if TYPCNT(11,1).isNull() set (V,VL)=""

	quit

VP17	// Column post-processor - Variable: TYPCNT(12

 type public String TYPCNT(),V,VL
 if TYPCNT(12,1).isNull() set (V,VL)=""

	quit

VP18	// Column post-processor - Variable: TYPCNT(13

 type public String TYPCNT(),V,VL
 if TYPCNT(13,1).isNull() set (V,VL)=""

	quit

VP19	// Column post-processor - Variable: TYPCNT(14

 type public String TYPCNT(),V,VL
 if TYPCNT(14,1).isNull() set (V,VL)=""
	quit

VP20	// Column post-processor - Variable: TYPCNT(15

 type public String TYPCNT(),V,VL
 if TYPCNT(15,1).isNull() set (V,VL)=""
	quit

VP21	// Column post-processor - Variable: TYPCNT(16

 type public String TYPCNT(),V,VL
 if TYPCNT(16,1).isNull() set (V,VL)=""

	quit

VP22	// Column post-processor - Variable: TYPCNT(17

 type public String TYPCNT(),V,VL
 if TYPCNT(17,1).isNull() set (V,VL)=""
	quit
