R01S234	// SCA191 - Manual Escrow Conv Verification Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA191"
	set RN="Manual Escrow Conv Verification Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[LNCONVES]CEFD|[LNCONVES]CEFD:DISTINCT:NOVAL||||D|Conversion Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CIDT,CONAM,GTCID,RID,RN,TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA191",RN="Manual Escrow Conv Verification Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA191","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNCONVES]TYP#85#6,[LNCONVES]REMND#93#10,[LNCONVES]REMPY#105#12,[LNCONVES]REMYTD#119#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Conversion Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE="LNCONVES.CEFD=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Manual Escrow Conv Verification Report"
		set VBNRINFO("PGM")="R01S234"
		set VBNRINFO("RID")="SCA191"
		set VBNRINFO("TABLES")="LNCONVES"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNCONVES]CEFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNCONVES]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNCONVES]ECID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNCONVES]TYP"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNCONVES.CEFD,LNCONVES.CID,LNCONVES.ECID,LNCONVES.TYP,LNCONVES.BAL,LNCONVES.ACR,LNCONVES.CPMT,LNCONVES.LPMT,LNCONVES.NPMT,LNCONVES.REMND,LNCONVES.REMPY,LNCONVES.REMYTD","LNCONVES","LNCONVES.CEFD=:VIN1","LNCONVES.CEFD,LNCONVES.CID,LNCONVES.ECID,LNCONVES.TYP","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12
	set vc1=V.piece($C(9),1)			// LNCONVES.CEFD
	set vc2=V.piece($C(9),2)			// LNCONVES.CID
	set vc3=V.piece($C(9),3)			// LNCONVES.ECID
	set vc4=V.piece($C(9),4)			// LNCONVES.TYP
	set vc5=V.piece($C(9),5)			// LNCONVES.BAL
	set vc6=V.piece($C(9),6)			// LNCONVES.ACR
	set vc7=V.piece($C(9),7)			// LNCONVES.CPMT
	set vc8=V.piece($C(9),8)			// LNCONVES.LPMT
	set vc9=V.piece($C(9),9)			// LNCONVES.NPMT
	set vc10=V.piece($C(9),10)			// LNCONVES.REMND
	set vc11=V.piece($C(9),11)			// LNCONVES.REMPY
	set vc12=V.piece($C(9),12)			// LNCONVES.REMYTD
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number CIDT,GTCID,TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID

 set GTCID=""
 set TBAL=""
 set TACR=""
 set TCPMT=""
 set TLPMT=""
 set TNPMT=""
 set TREMPY=""
 set TREMYTD=""
 set TCID=""
 set CIDT=""
 set TTCID=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		do VTRL0
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CIDT,CONAM,ER,GTCID,IOSL,RID,RN,TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID,V,VFMQ,VIN1,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"Loan Number:"
	set V=vc2,VO=V set V=$J(V,18) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",14-VL.length())_V		// [SYSDEV,LNCONVES]CID
	do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CIDT,CONAM,ER,GTCID,IOSL,RID,RN,TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID,V,VFMQ,VIN1,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="  "_$J(vc3,10)
	set V=vc5,VO=V set V=$J(V,13,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",13-VL.length())_V		// [SYSDEV,LNCONVES]BAL
	set V=vc6,VO=V set V=$J(V,13,2) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",27-VL.length())_V		// [SYSDEV,LNCONVES]ACR
	set V=vc7,VO=V set V=$J(V,13,2) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",41-VL.length())_V		// [SYSDEV,LNCONVES]CPMT
	set V=vc8,VO=V set V=$J(V,13,2) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",55-VL.length())_V		// [SYSDEV,LNCONVES]LPMT
	set V=vc9,VO=V set V=$J(V,13,2) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",69-VL.length())_V		// [SYSDEV,LNCONVES]NPMT
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,CIDT,GTCID,IOSL,TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID,V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                                    "_$E(vc4,1,6)
	set VL=VL_$J("",92-VL.length())_$J($$DAT^%ZM(vc10),10)
	set V=vc11,VO=V set V=$J(V,13,2) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",103-VL.length())_V		// [SYSDEV,LNCONVES]REMPY
	set V=vc12,VO=V set V=$J(V,13,2) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",117-VL.length())_V		// [SYSDEV,LNCONVES]REMYTD
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CIDT,CONAM,GTCID,RID,RN,TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID,VIN1,VL,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if VPN do VTRL0
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Conversion Date:"
	set VL=VL_$J("",17-VL.length())_$J($$DAT^%ZM(VIN1),10)
	do VOM
	set VL="" do VOM
	set VL="     "_"Escrow        Current       Accrual       Current       Lump Pmt     Next Pmt  Escrow  Remittance     Remitted     Remitted"
	do VOM
	set VL="     "_"Account       Balance       Balance       Payment      Next Bill      Amount    Type   Next Date     Prior Year  Year-To-Date"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VTRL0	// Page Trailer
	type Public Number IOSL,verror,vh,VFMQ,VLC,VT(),VX()
	type Public String %TIM,CIDT,GTCID,TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID,VIN1,VPN,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String VL

	set VL=""
	for I=VLC:1:IOSL-4 do VOM

	set VL="" do VOM
	set V="PAGE TOTALS" do VP9 quit:VFMQ!verror.get()  set VL=V
	do VOM
	set VL="Count:"
	set V=$E(TTCID,1,2) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",7-VL.length())_V
	set V=$E(TBAL,1,12) do VP11 quit:VFMQ!verror.get()
	set VL=VL_$J("",14-VL.length())_V
	set V=$E(TACR,1,12) do VP12 quit:VFMQ!verror.get()
	set VL=VL_$J("",28-VL.length())_V
	set V=$E(TCPMT,1,12) do VP13 quit:VFMQ!verror.get()
	set VL=VL_$J("",42-VL.length())_V
	set V=$E(TLPMT,1,12) do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",56-VL.length())_V
	set V=$E(TNPMT,1,12) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",70-VL.length())_V
	set V=$E(TREMPY,1,12) do VP16 quit:VFMQ!verror.get()
	set VL=VL_$J("",104-VL.length())_V
	set V=$E(TREMYTD,1,12) do VP17 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V
	do VOM
	quit

VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,CIDT,GTCID,TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID,VIN1,VPN,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	do VHDG0 quit:VFMQ				// <<#>>
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,LNCONVES]CID

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public String CIDT,TCID,TTCID,V,VL

 type Number CID
 set CID=vc2

 if CID=TCID do {
	set V=""
	set VL=""
	}

 if CID'=CIDT set TTCID=TTCID+1

 set CIDT=CID
 set TCID=CID
	quit

VP2	// Column post-processor - [SYSDEV,LNCONVES]BAL

	type public String vc5
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TBAL

 set TBAL=TBAL+vc5

	quit

VP3	// Column post-processor - [SYSDEV,LNCONVES]ACR

	type public String vc6
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TACR

 set TACR=TACR+vc6

	quit

VP4	// Column post-processor - [SYSDEV,LNCONVES]CPMT

	type public String vc7
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TCPMT

 set TCPMT=TCPMT+vc7
	quit

VP5	// Column post-processor - [SYSDEV,LNCONVES]LPMT

	type public String vc8
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TLPMT

 set TLPMT=TLPMT+vc8

	quit

VP6	// Column post-processor - [SYSDEV,LNCONVES]NPMT

	type public String vc9
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TNPMT

 set TNPMT=TNPMT+vc9

	quit

VP7	// Column post-processor - [SYSDEV,LNCONVES]REMPY

	type public String vc11
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TREMPY

 set TREMPY=TREMPY+vc11
	quit

VP8	// Column post-processor - [SYSDEV,LNCONVES]REMYTD

	type public String vc12
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TREMYTD

 set TREMYTD=TREMYTD+vc12
	quit

VP9	// Column post-processor - PAGE TOTALS

 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TTCID
 type Public String V,VL

 if 'TTCID.isNull() quit

 set V=""
 set VL=""
	quit

VP10	// Column post-processor - Variable: TTCID

 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number GTCID,TTCID

 if TTCID.isNull() quit

 set GTCID=GTCID+TTCID
 set TTCID=0
	quit

VP11	// Column post-processor - Variable: TBAL

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number V

 set V=$$^SCARND(V,12,vc2)
	quit

VP12	// Column post-processor - Variable: TACR

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number V
 
 set V=$$^SCARND(V,12,vc2)
	quit

VP13	// Column post-processor - Variable: TCPMT

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */
 
 type Public Number V
 
 set V=$$^SCARND(V,12,vc2)
	quit

VP14	// Column post-processor - Variable: TLPMT

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */
 
 type Public Number V
 
 set V=$$^SCARND(V,12,vc2)
	quit

VP15	// Column post-processor - Variable: TNPMT

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */
 
 type Public Number V
 
 set V=$$^SCARND(V,12,vc2)
	quit

VP16	// Column post-processor - Variable: TREMPY

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */
 
 type Public Number V
 
 set V=$$^SCARND(V,12,vc2)
	quit

VP17	// Column post-processor - Variable: TREMYTD

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */
 
 type Public Number TACR,TBAL,TCID,TCPMT,TLPMT,TNPMT,TREMPY,TREMYTD,TTCID,V,VL

 set V=$$^SCARND(V,12,vc2)

 set TCID=""
 set TBAL=0
 set TACR=0
 set TCPMT=0
 set TLPMT=0
 set TNPMT=0
 set TREMPY=0
 set TREMYTD=0

 if 'TTCID.isNull() quit

 set V=""
 set VL=""
	quit
