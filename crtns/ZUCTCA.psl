public ZUCTCA()	// PSL Test Set, class Cache, "all" methods
	/*
	ORIG: Frans S.C. Witte
	DESC: test code for Code generation of Cache.getRecord, the only method
		in the Cache class.

	---- Comments ----------------------------------------------------------
	This unit contains tests to validate the code generated for 
	Cache.getRecord() from the following tables:
	- ACN
	- CIF
	- CUVAR
	- DBTBL2
	- EFTPAY
	- LN
	- NOTES
	- STFHOST
	- STBLPCM
	- TRNAUT

	---- Revision History --------------------------------------------------
	2006-10-16 - Frans S.C. Witte - CR 22843
		Derived from ZUCTXDD*
	*/
	#ACCEPT CR=22843; DATE=2006-08-29; PGM=Frans S.C. Witte;GROUP=XECUTE
	xecute "zprint"

	quit

	// #####################################################################
	// Test Cache.getRecord( "ACN")
	// #####################################################################

	// ---------------------------------------------------------------------
public ACN0( Cache cache(), String K1, List colList, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordACN, with column indirection retrieval
	- retrieve key: (if and as supplied)
	- retrieve non-key(s): (if and as supplied)
	- special retrieval(s): (if and as supplied)
	*/
	type RecordACN rec = cache("ACN").getRecord("ACN","CID=:K1")
	type Number cnm	// column name
	type Number cnr	// column name iterator
	for cnr = 1:1:colList.count() do {
		set cnm = colList.elementAt(cnr)
		set values(cnm) = rec.@cnm
	}
	quit

	// ---------------------------------------------------------------------
public ACN1( Cache cache(), String K1, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordACN
	- retrieve key: (none, see test functions LN)
	- retrieve non-key(s): BOO
	- special retrieval(s): ANPTO through type casting
	*/
	type RecordACN rec = cache("ACN").getRecord("ACN","CID=:K1")
	set values("BOO") = rec.boo
	if rec.cls = "L" do {
		type RecordLN lnCast = {RecordLN}rec
		set values("ANPTO") = lnCast.anpto
	}
	quit

	// #####################################################################
	// Test Cache.getRecord( "CIF")
	// #####################################################################

	// ---------------------------------------------------------------------
public CIF1( Cache cache1(), String K1, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordCIF
	(PSLTable.recordType = 10, PSLTable.existsNode = 1)
	- retrieve key: ACN
	- special retrieval(s): XNAME (node=1), DOB (node=10)
	*/
	type RecordCIF rec = cache1("CIF").getRecord("CIF","ACN=:K1")
	set values("ACN")   = rec.acn
	set values("XNAME") = rec.xname
	set values("DOB")   = rec.dob
	quit

	// ---------------------------------------------------------------------
public CIF2( Cache cache2(), String K1, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordCIF (.recordType = 10, .existsNode = 1)
	when existsNode not accessed.
	- retrieve key: ACN
	- special retrieval(s): DOB (node=10)
	*/
	type RecordCIF rec = cache2("CIF").getRecord("CIF","ACN=:K1")
	set values("ACN")   = rec.acn
	set values("DOB")   = rec.dob
	quit

	// #####################################################################
	// Test Cache.getRecord( "CIFSIG")
	// #####################################################################

	// ---------------------------------------------------------------------
public CIFSIG1( Cache cache(), String K1, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordCIFSIG (.hasBlob=1)
	- retrieve key: ACN
	- retrieve non-key(s): TIME
	- special retrieval(s): CIFSIG
	*/
	type RecordCIFSIG rec = cache("CIFSIG").getRecord("CIFSIG","ACN=:K1")
	set values("ACN")  = rec.acn
	set values("TIME") = rec.time
	set values("SIG")  = rec.sig
	quit

	// #####################################################################
	// Test Cache.getRecord( "CUVAR")
	// #####################################################################

	// ---------------------------------------------------------------------
public CUVAR1( Cache cache(), String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordCUVAR (no primary key columns)
	- retrieve key:
	- retrieve non-key(s):
	- special retrieval(s):
	*/
	type RecordCUVAR rec = cache("CUVAR").getRecord("CUVAR","")
	set values("%CRCD") = rec.%crcd
	set values("CONAM") = rec.conam
	quit

	// #####################################################################
	// Test Cache.getRecord( "DBTBL2")
	// #####################################################################

	// ---------------------------------------------------------------------
public DTy21( Cache cache(), String K1, String K2, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordDBTBL2 (.hasNegativeNode=1)
	- retrieve key:
	- retrieve non-key(s): DESC
	- special retrieval(s): LNK9, YORIGIN
	*/
	type RecordDBTBL2 rec = cache("DBTBL2").getRecord("DBTBL2","LIBS=:K1,SID=:K2")
	set values("DESC")    = rec.desc
	set values("LNK9")    = rec.lnk9
	set values("YORIGIN") = rec.yorigin
	quit

	// ---------------------------------------------------------------------
public EFTPAY1( Cache cache1(), String K1, String K2, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordEFTPAY (.recordType=11), with columns from
	top node only.
	- retrieve key:
	- special retrieval(s): CRCD and EFD
	*/
	type RecordEFTPAY rec = cache1("EFTPAY").getRecord("EFTPAY","CID=:K1,SEQ=:K2")
	set values("CRCD")  = rec.crcd
	set values("EDF") = rec.recv1
	quit

	// ---------------------------------------------------------------------
public EFTPAY2( Cache cache2(), String K1, String K2, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordEFTPAY, with columns from top node and
	other nodes
	- retrieve key:
	- special retrieval(s): CRCD and RECV1
	*/
	type RecordEFTPAY rec = cache2("EFTPAY").getRecord("EFTPAY","CID=:K1,SEQ=:K2")
	set values("RECV1") = rec.recv1
	set values("CRCD")  = rec.crcd
	quit

	// ---------------------------------------------------------------------
public EFTPAY3( Cache cache3(), String K1, String K2, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordEFTPAY, with column from other nodes only
	- retrieve key:
	- special retrieval(s): RECV1, ACN
	*/
	type RecordEFTPAY rec = cache3("EFTPAY").getRecord("EFTPAY","CID=:K1,SEQ=:K2")
	set values("RECV1") = rec.recv1
	set values("ACN")   = rec.acn
	quit

	// #####################################################################
	// Test Cache.getRecord( "LN")
	// #####################################################################

	// ---------------------------------------------------------------------
public LN1( Cache cache(), String K1, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordLN, RDB incremental load shall bypass
	Cache
	- retrieve key: CID
	- retrieve non-key(s): BOO, ANTPO
	- special retrieval(s): STP, STP3, DISTPF, LRIAS
	*/
	type RecordLN rec = cache("LN").getRecord("LN","CID=:K1")
	set values("CID")    = rec.cid
	set values("BOO")    = rec.boo
	set values("ANTPO")  = rec.anpto
	set values("STP")    = rec.stp
	set values("STP3")   = rec.stp3
	set values("DISTPF") = rec.distpf
	set values("LRIAS")  = rec.lrias
	quit

	// #####################################################################
	// Test Cache.getRecord( "NOTES")
	// #####################################################################

	// ---------------------------------------------------------------------
public NOTES1( Cache cache(), String K1, String K2, String K3, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordNOTES (.hasMemo=1)
	- retrieve key: NUM
	- retrieve non-key(s): RBDATE
	- special retrieval(s): NOTES, ACN
	*/
	type RecordNOTES rec = cache("NOTES").getRecord("NOTES","FILE=:K1,CID=:K2,NUM=:K3")
	set values("NUM")    = rec.num
	set values("RBDATE") = rec.rbdate
	set values("NOTES")  = rec.notes
	set values("ACN")    = rec.acn
	quit

	// #####################################################################
	// Test Cache.getRecord( "STFHOST")
	// #####################################################################

	// ---------------------------------------------------------------------
public STFHOS1( Cache cache(), String K1, String K2, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordSTFHOST (with DBTBL1.QID1 IS NOT NULL)
	- retrieve key:
	- retrieve non-key(s):
	- special retrieval(s):
	*/
	type RecordSTFHOST rec = cache("STFHOST").getRecord("STFHOST","STFSEQ=:K1,TRSEQ=:K2")
	set values("CDT")     = rec.cdt
	set values("PRIMARY") = rec.primary
	set values("TRNET")   = rec.trnet
	quit

	// #####################################################################
	// Test Cache.getRecord( "STBLPCM")
	// #####################################################################

	// ---------------------------------------------------------------------
public STyPCM1( Cache cache(), String K1, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordSTBLPCM (with DBTBL1.QID1 IS NOT NULL)
	- retrieve/assign key: KEY
	- retrieve/assign non-key(s): PCMP
	- special retrieval(s)/assignment(s): (none)
	*/
	type RecordSTBLPCM rec = cache("STBLPCM").getRecord("STBLPCM","KEY=:K1")
	set values("KEY")  = rec.key
	set values("PCMP") = rec.pcmp
	quit

	// #####################################################################
	// Test Cache.getRecord( "TRNAUT")
	// #####################################################################

	// ---------------------------------------------------------------------
public TRNAUT1( Cache cache(), String K1, String K2, String values())
	/* ---------------------------------------------------------------------
	Test retrieval code for RecordTRNAUT, .recordType=1, .hasMasterfield=1
	- retrieve key: UCLS
	- retrieve non-key(s): (none)
	- special retrieval(s): BNR,  NOBOOK
	*/
	type RecordTRNAUT rec = cache("TRNAUT").getRecord("TRNAUT","ETC=:K1,UCLS=:K2")
	set values("UCLS")   = rec.ucls
	set values("BNR")    = rec.bnr
	set values("NOBOOK") = rec.nobook
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60555^28456^Frans S.C. Witte^10478"	// Signature - LTD^TIME^USER^SIZE
