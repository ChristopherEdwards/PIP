V01S280(%ProcessMode,RecordINDEX fINDEX)   //PBS -  - SID= <INDEX> Interest Index
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="INDEX",VPGM=$T(+0),VSNAME="Interest Index"
 set VFSN("INDEX")="zfINDEX"
 set vPSL=1
 set KEYS(1)=fINDEX.INDEX
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fINDEX),VDA1(.fINDEX),^DBSPNT()

 if '%ProcessMode do VNEW(.fINDEX),VPR(.fINDEX),VDA1(.fINDEX)
 if %ProcessMode do VLOD(.fINDEX) quit:$G(ER)  do VPR(.fINDEX),VDA1(.fINDEX)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fINDEX)
	quit


VNEW(RecordINDEX fINDEX) // Initialize arrays if %O=0
 
 do VDEF(.fINDEX)
 do VLOD(.fINDEX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordINDEX fINDEX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordINDEX fINDEX) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordINDEX fINDEX) // Display screen prompts
 set VO="14||13|"
 set VO(0)="|"
 set VO(1)=$C(1,1,80,1,0,0,0,0,0,0)_"01T                          Interest Index Definition                             "
 set VO(2)=$C(4,17,7,0,0,0,0,0,0,0)_"01T Index:"
 set VO(3)=$C(5,11,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(4)=$C(7,14,12,1,0,0,0,0,0,0)_"01T Index Type:"
 set VO(5)=$C(7,42,19,0,0,0,0,0,0,0)_"01TSch CMR Index Code:"
 set VO(6)=$C(8,8,18,0,0,0,0,0,0,0)_"01TTiered Index Type:"
 set VO(7)=$C(8,37,24,0,0,0,0,0,0,0)_"01TData Item Authorization:"
 set VO(8)=$C(9,4,22,1,0,0,0,0,0,0)_"01T Lagging Market Index:"
 set VO(9)=$C(10,2,24,0,0,0,0,0,0,0)_"01TRate Calculation Option:"
 set VO(10)=$C(10,30,31,0,0,0,0,0,0,0)_"01TNumber of Days to Average Rate:"
 set VO(11)=$C(11,8,18,0,0,0,0,0,0,0)_"01TDaily Rate Option:"
 set VO(12)=$C(13,6,67,2,0,0,0,0,0,0)_"01TThese Parameters Are Used by Comparative Rate Indexes Only (Type=2)"
 set VO(13)=$C(15,8,18,0,0,0,0,0,0,0)_"01TComparison Option:"
 set VO(14)=$C(16,6,20,0,0,0,0,0,0,0)_"01TOperator & Rounding:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordINDEX fINDEX)  // Display screen data
 new V
 //
 set VO="26|15|13|"
 set VO(15)=$C(4,25,6,2,0,0,0,0,0,0)_"01T"_$E(fINDEX.INDEX,1,6)
 set VO(16)=$C(5,25,40,2,0,0,0,0,0,0)_"00T"_$E(fINDEX.DES,1,40)
 set VO(17)=$C(7,27,1,2,0,0,0,0,0,0)_"00N"_fINDEX.BASREL
 set VO(18)=$C(7,62,3,2,0,0,0,0,0,0)_"00N"_fINDEX.CMRINDEX
 set VO(19)=$C(8,27,1,2,0,0,0,0,0,0)_"00T"_$E(fINDEX.INDTYP,1,1)
 set VO(20)=$C(8,62,1,2,0,0,0,0,0,0)_"00L"_$S(fINDEX.DIAUTH:"Y",1:"N")
 set VO(21)=$C(9,27,1,2,0,0,0,0,0,0)_"00L"_$S(fINDEX.LAG:"Y",1:"N")
 set VO(22)=$C(10,27,1,2,0,0,0,0,0,0)_"00N"_fINDEX.IRATO
 set VO(23)=$C(10,62,3,2,0,0,0,0,0,0)_"00N"_fINDEX.AVGDYS
 set VO(24)=$C(11,27,1,2,0,0,0,0,0,0)_"00L"_$S(fINDEX.DLYF:"Y",1:"N")
 set VO(25)=$C(15,27,1,2,0,0,0,0,0,0)_"00T"_$E(fINDEX.COMP,1,1)
 set VO(26)=$C(16,27,20,2,0,0,0,0,0,0)_"00T"_$E(fINDEX.EXTENSION,1,20)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordINDEX fINDEX)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=12,VPT=1,VPB=16,PGM=$T(+0),DLIB="SYSDEV",DFID="INDEX"
 set OLNTB=16027
 
 set VFSN("INDEX")="zfINDEX"
 //
 // 
	
	
 set %TAB(1)=$C(3,24,6)_"21T12401|1|[INDEX]INDEX|[INDEX]"
 set %TAB(2)=$C(4,24,40)_"01T12401|1|[INDEX]DES"
 set %TAB(3)=$C(6,26,1)_"01N12403|1|[INDEX]BASREL|[STBLINDEX0]||do VP1^V01S280(.fINDEX)"
 set %TAB(4)=$C(6,61,3)_"00N12413|1|[INDEX]CMRINDEX|[STBLCMRINDEX]"
 set %TAB(5)=$C(7,26,1)_"00T12402|1|[INDEX]INDTYP|[STBLINDTYP]||do VP2^V01S280(.fINDEX)"
 set %TAB(6)=$C(7,61,1)_"00L12414|1|[INDEX]DIAUTH|||do VP3^V01S280(.fINDEX)"
 set %TAB(7)=$C(8,26,1)_"00L12406|1|[INDEX]LAG"
 set %TAB(8)=$C(9,26,1)_"00N12409|1|[INDEX]IRATO|[STBLIRATO]||do VP4^V01S280(.fINDEX)"
 set %TAB(9)=$C(9,61,3)_"00N12410|1|[INDEX]AVGDYS|||do VP5^V01S280(.fINDEX)"
 set %TAB(10)=$C(10,26,1)_"00L12415|1|[INDEX]DLYF"
 set %TAB(11)=$C(14,26,1)_"00T12407|1|[INDEX]COMP|[STBLLCOM]||do VP6^V01S280(.fINDEX)"
 set %TAB(12)=$C(15,26,20)_"00T12412|1|[INDEX]EXTENSION"
 do VTBL(.fINDEX)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordINDEX fINDEX) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordINDEX fINDEX) //
 do BASREL^INDX0(.fINDEX)
 quit 

VP2(RecordINDEX fINDEX) //
 // Data required
  if fINDEX.basrel=1&(X="") set ER=1 set RM=$$^MSG(741) quit
  do INDTYP^INDX0(.fINDEX)
 
VP3(RecordINDEX fINDEX) //
 /* Adding post processor to check for loans on the index.  If found, do
    not allow the field DIAUTH to be modified.
 */

 if 'X quit 

 type ResultSet rs=Db.select("CID","LN","INDEX=:INDEX")
 if 'rs.isEmpty() set ER=1 set RM=$$^MSG(1619)       
 quit

VP4(RecordINDEX fINDEX) //
 do IRATO^INDX0(.fINDEX)
 quit
VP5(RecordINDEX fINDEX) //
 do AVGDYS^INDX0(.fINDEX)
 quit 

VP6(RecordINDEX fINDEX) //
 do COMP^INDX0(.fINDEX)
 quit 

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordINDEX fINDEX
 do VPR(.fINDEX)
 do VDA1(.fINDEX)
 do ^DBSPNT()
 quit

VW(RecordINDEX fINDEX)
 do VDA1(.fINDEX)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordINDEX fINDEX)
 do VDA1(.fINDEX)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordINDEX fINDEX
 do VDA1(.fINDEX)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordINDEX fINDEX
 if sn="INDEX" do vSET1(.fINDEX,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordINDEX fINDEX,di,X)
 do fINDEX.setAuditFlag(1)
 set fINDEX.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordINDEX fINDEX
 if fid="INDEX" quit $$vREAD1(.fINDEX,di)
 quit ""
vREAD1(RecordINDEX fINDEX,di)
 quit fINDEX.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
