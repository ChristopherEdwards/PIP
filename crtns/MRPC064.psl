MRPC064(return,versn,ACN,GRP)	//Public;MRPC call for Type Limit
	/*
	   ORIG: DOUGHERTYE - 09/18/97
	   DESC: MRPC call for Type Limit

	   KEYWORDS: RPC

	   ARGUMENTS:
	   . RETURN         Type Limit
	                    Information           	 /TYP=T/REQ/MECH=VAL

	   . VERSN  	    MRPC Version Number      	 /TYP=T/REQ/MECH=VAL

	   . ACN            Customer Number   		 /TYP=T/REQ/MECH=VAL


	   INPUTS:
	   . System

	   . Data [ddfile]di

	   . v1 desc of variable /TYP=T

	   RETURNS:
	   . XX desc of return  /TYP=T
	
	---- Revision History ------------------------------------------------

	02/05/03 - GRAY - 51349
		   Corrected undefined local variable, n9, error from
		   occurring.  $C(9) was typed as $C(n9) when reviewing piece
		   4 of the TMPTYPE array.

	01/03/03 - GRAY - 51349
		   Corrected %GTM-E-QUITARGREQD,PBSMRPC+88^PBSMRPC from
		   occurring. The process was set to quit if the result set 
		   is empty and should be continuing on to the end.

	04/16/02 - SRIVASTAVAN - 49794
	  	   Converted to PSL	
	   
	 */
	new AVC,AVO,CRLF,SAVACN,SAVGRP,STR,SYS,TAB,TYPETOT,TYPE,X,Y

	// Version number of client message is not compatible with server
	if $G(versn)'=1 quit $$ERRMSG^PBSUTL($$^MSG(2951))

	// Needs to call array from ^PROCLIM not an insert
	
	set %ProcessMode=0
	
	set SAVGRP=GRP
	set SAVACN=ACN
	set X=$$ACCUM^PROCLIM(ACN)
	set GRP=SAVGRP
	set ACN=SAVACN
	
	// Create formatted output string
	set TAB=$C(9)
	set CRLF=$C(13)_$C(10)

	// Get data associated with a particular group

	set Y=0
	
	type ResultSet rs=Db.select("SYS,TYPELIM","CIFTYPELIM","ACN=:ACN AND GRPLIM=:GRP","SYS,TYPELIM")
	if 'rs.isEmpty() while rs.next()  do {
        	set SYS=rs.getCol(1)
		set TYPE=rs.getCol(2)
		type RecordCIFTYPELIM ciftypelim=Db.getRecord("CIFTYPELIM","ACN,GRP,SYS,TYPE")	
		set TYPETOT=ciftypelim.typeamt
		if $G(TYPETOT)="" do {
			set AVC="" 
			set AVO=""
			}
		else  do {
			set AVC=TYPETOT-$P($G(LIMTYPE(SYS,TYPE)),"|",1)
			set AVO=TYPETOT-$P($G(LIMTYPE(SYS,TYPE)),"|",2)
			}

		set $P(TMPTYPE(Y),$C(9),1)=SYS
		set $P(TMPTYPE(Y),$C(9),2)=TYPE
		set $P(TMPTYPE(Y),$C(9),3)=$P($G(LIMTYPE(SYS,TYPE)),"|",1)
		if $P(TMPTYPE(Y),$C(9),3)="" set $P(TMPTYPE(Y),$C(9),3)=0
		set $P(TMPTYPE(Y),$C(9),4)=$P($G(LIMTYPE(SYS,TYPE)),"|",2)
		if $P(TMPTYPE(Y),$C(9),4)="" set $P(TMPTYPE(Y),$C(9),4)=0
		set $P(TMPTYPE(Y),$C(9),5)=TYPETOT
		set $P(TMPTYPE(Y),$C(9),6)=AVC
		set $P(TMPTYPE(Y),$C(9),7)=AVO
		set Y=Y+1
		}

	// Set up the string
	new Y
	set Y=""
	set STR=""
	for  set Y=$O(TMPTYPE(Y)) quit:Y=""  do {
		set STR=STR_TMPTYPE(Y)_CRLF
		}
	set return=$$V2LV^MSG(STR)
	quit ""
 #OPTION ResultClass ON
Public String vSIG()	quit "59886^43586^Sanchez SCM Administrator^2448"	// Signature - LTD^TIME^USER^SIZE
