SEGINIDT	  /*
ORIG: TITOVE - 05/17/2001
DESC: Custom procedure for segmented accounts

---- Comments --------------------------------------------------------

---- Revision History ---------------------------------------------------------
	
	12/08/03 - CARROLLJ - CR7239
		   Remove the use of %a and to/from array's.

	02/23/02 - SHVACHKINAD - 48124
		   Added two new functions CHKFRE and FRECALC to combine new
		   checks for DEP.INTFRE (Int/Div Check Frequency) column and  
		   already existing checks for DEP.IPF (Int/Div Posting
		   Frequency) column. 


 */

	quit                            //for DQ

Public	PROC(RecordDEP dep,RecordDEPSEG depseg,EFD,AMT,SEGNUM)  // External call

	/* Updates the Non-Accrual Balance if it is in the non-accru
	   period. Called from DEPPOSEG for deposits and withdrawals.

	INPUTS:
		. dep	- Deposit account object	/TYP=RecordDEP/REQ/MECH=REF

		. depseg- Segment object		/TYP=RecordDEPSEG/REQ/MECH=REF

		. EFD					/TYP=D/NOREQ/MECH=VAL
		  Transaction Effective Date
 		
		. AMT					/TYP=$/NOREQ/MECH=VAL
		  Transaction Amount
 		
		. SEGNUM				/TYP=N/NOREQ/MECH=VAL
		  Segment Number
 
	EXAMPLE:
 
		D PROC^DEPSEG(.dep,.depseg,EFD,AMT,SEGNUM)
 
        ------------------------------------------------------------------- */

	// Zero segments are not valid for this processing
	if SEGNUM=0 quit

	set depseg.segment=SEGNUM

	// Account parameters verification
	if '$$VER(.dep) quit

	do NOACR(EFD,AMT,.dep,.depseg)

	quit

Public	SEGUPD(AMT,RecordDEP dep,RecordDEPSEG depseg)
	/* Modify segment data before defaulting to new segment (should only be 
	   called from DEPSEGIN)
	*/

	new INTFRE,IPF,startdt
 
	// Account parameters verification
	if '$$VER(.dep) quit	
 
	set startdt=depseg.segstart

	if $$CHKDATE(startdt) do {
		// Calculate first business day of next month
		set startdt=$$NBDNM(startdt,dep.nbdc)
		// Set Segment End Date
		set depseg.segend=startdt+1
		// Set the value of NOACREXP to date prior to Next Business Date
		// of the following month
		set depseg.noacrexp=startdt-1
		// Set Non=Accrual Deposit Balance
		set depseg.noacrbal=AMT
		}

	set IPF=$$FRECALC(dep.ipf) if $G(ER) quit
	set INTFRE=$$FRECALC(dep.intfre) if $G(ER) quit
	
	set depseg.ipf=IPF
	set depseg.aiipf=IPF
	set depseg.intfre=INTFRE
	 
	// Calculate Segment Maturity Date
	new MDT,segterm
	set segterm=depseg.segterm
	set MDT=$$EXT^UMDT(segterm,startdt)
	set depseg.segmdt=MDT

	quit

NOACR(EFD,AMT,RecordDEP dep,RecordDEPSEG depseg)       
	// Update Non-Accrual Deposit Balance

	/* INPUTS:
		  . EFD                   /TYP=D/NOREQ/MECH=VAL
		    Transaction Effective Date (Default TJD)
 
		  . AMT                   /TYP=$/NOREQ/MECH=VAL
		    Transaction Amount
 
		  . dep			/TYP=O/NOREQ/MECH=REF
		    Account data object - DEP table

		  . depseg		/TYP=O/NOREQ/MECH=REF
		    Account data object - DEPSEG table

	EXAMPLE:
 
		D NOACR^DEPSEG(EFD,AMT,.dep,.depseg)
 
        ------------------------------------------------------------------- */

	// Transaction within Non-Accrual Period and NOACREXP is null
	if depseg.noacrexp="",$$CHKDATE(EFD) set depseg.noacrexp=$$NBDNM(EFD,dep.nbdc)-1

	// Check if transaction falls within non-accrual period
	if EFD>depseg.noacrexp quit
 
	// Non-Accrual Deposit Balance cannot be negative
	if 'depseg.noacrbal,AMT<0 quit
 
	set depseg.noacrbal=depseg.noacrbal+AMT
	if depseg.noacrbal<0 set depseg.noacrbal=0

	quit
 
CHKDATE(dt) // Extrinsic function to check if the date is either 29/30/31

	set dt=$$DAY^SCADAT(dt,1)
	if dt>28 quit 1
	quit 0

VER(RecordDEP dep)	// Verification of account parameters

	// Processing will only apply to accounts accruing at segment level
	if dep.segacr'=0 quit 0

	// Principal Maturity Option must be equal to 3 - Auto Renewal
	if dep.rencd'=3 quit 0
 
	// Segment Maturity Date Determination option must be set to 0
	if dep.segmdd'=0 quit 0

	// Segment Period must be 1D
	if dep.segper'="1D" quit 0
	
	// Interest Posting and Int/Div Check frequencies cannot be null
	if dep.ipf=""!(dep.intfre="") quit 0

	new FRE
	set FRE=dep.intfre
	if '$$CHKFRE(FRE) quit 0
	set FRE=dep.ipf
	if '$$CHKFRE(FRE) quit 0

	quit 1

Public	MVER(RecordDEP dep,dt)
	/* Extrinsic function (to be called from M routines only) to verify 
	   account parameters and check if the date is either 29/30/31.
	*/

	if '$$VER(.dep) quit 0
	if '$$CHKDATE(dt) quit 0

	quit 1

FRECALC(fre)	// This function recalculates Interest Frequencies
		                
	if $E(fre,2)?1N set fre=$E(fre,1,4)
	else  set fre=$E(fre,1,3)

	set fre=fre_$$DAY^SCADAT(startdt,1)
	
	// Validity check for Interest Posting and Interest Check Frequencies
	new X
	set X=fre
	do EDT^UFRE
	
	quit fre

CHKFRE(fqy)	// Daily and weekly frequencies are invalid for this processing
 
	if '"MQY"[$E(fqy,3),$E(fqy,2)?1N quit 0
	if '"MQY"[$E(fqy,2),$E(fqy,2)?1A quit 0
 
	quit 1
 	
Public	NBDNM(nbdt,nbdcal)	// Returns next month's first business date

	// Get value of Julian date of beginning of next month
	set nbdt=$$BOMJD^SCADAT(nbdt+3,1)
	// Calculate first business day of next month
	set nbdt=$$NBD^UNBD(nbdt,1,0,nbdcal)

	quit nbdt
 

vSIG()	quit "59886^43609^Sanchez SCM Administrator^4894"	// Signature - LTD^TIME^USER^SIZE
