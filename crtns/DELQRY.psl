DELQRY		/*
	PROCEDURE: DELQRY
	ORIG: JERUCHIMC - 09/07/99
	DESC: Rebuild delinquency queries for collection order stops

	---- Comments --------------------------------------------------------

	Compiles run-time routine DELQRY1.
 
	---- Revision History ------------------------------------------------

	06/06/07 - SENTHIL.J KUAMR - CR 27254
		   Modified the bldqry section to prevent the
		   GTM-E-FMLLSTMISSING error

	11/09/05 - Satyanas
	  	    Converted to PSL Standards.
		
	04/10/02 - Dan Russell -43583
		   Modified to generate PSL instead of M code.
  	          
	09/07/99 - JERUCHIMC - 34660:1
		   Created

	*/
	
	
	type public String CMPERR(),CODE(),ER,%MSKD,%MSKC,RM,TAB,%UID
	
	catch error {
		do ZE^UTLERR
		set ER=1
		}
	
	set ER=0
	set TAB=$CHAR(9)

	// I18N=OFF
	do addcode("DELQRY1"_TAB_"// Delinquency queries for collection order stops compiled program")
	do addcode(TAB_"// Last compiled:  "_%CurrentDate.toString($G(%MSKD))_" "_$$TIM^%ZM_" - "_$G(%UID))
	do addcode("")
	do addcode(TAB_"// THIS IS A COMPILED ROUTINE.  Compiled by procedure DELQRY")
	do addcode("")
	do addcode(TAB_"quit   // Cannot access from top")
	
	// Loop through collection order stops user table and find all
	// calculation methods that are defined.
	
	type ResultSet ecostprs
	set ecostprs=Db.select("DISTINCT DELQRY","UTBLECOSTOP","DELQRY IS NOT NULL")	

	if ecostprs.isEmpty()  quit

	while ecostprs.next() do bldqry(ecostprs.getCol(1))

	quit:ER

	// Build compiled routine
	do BUILDRTN^UCGM(.CODE,"DELQRY1",.CMPERR)
	if CMPERR.exists() do {
		type String N
		
		set N=""
		for  set N=CMPERR(N).order() quit:N.isNull()  do {
			if 'ER set ER=1,RM=CMPERR(N)
			write CMPERR(N),!
		}
	}
	
	//Completed at ~p1
	if 'ER set ER="W",RM=$$^MSG(591,$$TIM^%ZM(%CurrentTime,$G(%MSKC)))

	quit


bldqry( String QRYNAM)	// Build code to execute query

	type public Boolean ER
	type public String N,PSLOBJ(),PSLQRY(),TAB

	if 'Db.isDefined("DBTBL4","LIBS=""SYSDEV"",QID=:QRYNAM") do {

		do addcode("")
		do addcode(QRYNAM_"()"_TAB_"//")
		do addcode(TAB_"// Query is not a valid data-qwik query at time of compilation")
		do addcode(TAB_"quit 0")
		}
		
	else  do {
		
		type RecordDBTBL4 dbtbl4=Db.getRecord("DBTBL4","LIBS=""SYSDEV"",QID=:QRYNAM")

		do addcode("")
		do addcode(QRYNAM_"()"_TAB_"// "_dbtbl4.desc)

		// Convert query to PSL code
		do ^UCQRYBLD(QRYNAM,,,.PSLOBJ,.PSLQRY)
		quit:ER

		set N=""
		
		// Insert lines to instantiate new objects
		for  set N=PSLOBJ(N).order() quit:N.isNull()  do addcode(TAB_PSLOBJ(N,1))

		// Insert the query lines
		for  set N=PSLQRY(N).order() quit:N.isNull()  do {
			do addcode(TAB_"if "_PSLQRY(N))
			do addcode(TAB_"else  quit 0")
			}

		do addcode(TAB_"quit 1")
	}

	quit


addcode( String LINE)	// Add new line to CODE arry

	type public String CODE()
	
	set CODE(CODE("").order(-1)+1)=LINE
	quit

	
 #OPTION ResultClass ON
Public String vSIG()	quit "60787^7070^Senthilkumar Jeyaeasan^2719"	// Signature - LTD^TIME^USER^SIZE
