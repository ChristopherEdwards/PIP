R01S329	// SCA340 - Unmatched/Unbalanced G/L Account Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:56 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String GLACN,JD,OPT,OPT(),PID
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA340"
	set RN="Unmatched/Unbalanced G/L Account Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String GLACN,JD,OPT,OPT(),PID
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,BLANK,CONAM,RID,RN,SAVSEQ,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA340",RN="Unmatched/Unbalanced G/L Account Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA340","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[REP340]BRCD#1#6,[REP340]UID#8#12,[REP340]TSEQ#21#6,[TTX]TAMT#28#12,[REP340]RCRCD#41#3,[TTX]ETC#45#12,[TTX]CID#58#12,[TTX]TSO#71#12,[TTX]TLO#84#20,[TTX]TCMT#105#27"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="REP340.JOB=:PID"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Unmatched/Unbalanced G/L Account Report"
		set VBNRINFO("PGM")="R01S329"
		set VBNRINFO("RID")="SCA340"
		set VBNRINFO("TABLES")="REP340,TTX"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,REP340]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,REP340]CRCD"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,REP340]TJD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,REP340]BRCD"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,REP340]UID"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,REP340]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("REP340.JOB,REP340.CRCD,REP340.TJD,REP340.BRCD,REP340.UID,REP340.TSEQ,TTX.TAMT,REP340.RCRCD,TTX.ETC,TTX.CID,TTX.TSO,TTX.TLO,TTX.TCMT","REP340,TTX","REP340.JOB=:PID","REP340.JOB,REP340.CRCD,REP340.TJD,REP340.BRCD,REP340.UID,REP340.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13
	set vc1=V.piece($C(9),1)			// REP340.JOB
	set vc2=V.piece($C(9),2)			// REP340.CRCD
	set vc3=V.piece($C(9),3)			// REP340.TJD
	set vc4=V.piece($C(9),4)			// REP340.BRCD
	set vc5=V.piece($C(9),5)			// REP340.UID
	set vc6=V.piece($C(9),6)			// REP340.TSEQ
	set vc7=V.piece($C(9),7)			// TTX.TAMT
	set vc8=V.piece($C(9),8)			// REP340.RCRCD
	set vc9=V.piece($C(9),9)			// TTX.ETC
	set vc10=V.piece($C(9),10)			// TTX.CID
	set vc11=V.piece($C(9),11)			// TTX.TSO
	set vc12=V.piece($C(9),12)			// TTX.TLO
	set vc13=V.piece($C(9),13)			// TTX.TCMT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public Date JD
	type public Number GLACN, OPT, SAVSEQ

	set GLACN = GLACN.get()
	set JD = JD.get()
	set OPT = OPT.get()
	set SAVSEQ = 0
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=GLACN,JD,OPT,OPT(),PID
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VDTL5	// Detail
	type public String %TIM,BLANK,GLACN,IOSL,JD,OPT,OPT(),PID,SAVSEQ,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate

	quit:VD(5)  set VD(5)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL6	// Detail
	type public String %TIM,BLANK,GLACN,IOSL,JD,OPT,OPT(),PID,SAVSEQ,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$E(V,1,6) do VP1 quit:VFMQ!verror.get()  set VL=V
	set V=vc5,VO=V set V=$E(V,1,12) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",7-VL.length())_V		// [SYSDEV,REP340]UID
	set VL=VL_$J("",20-VL.length())_$J(vc6,6)
	set VL=VL_$J("",27-VL.length())_$J(vc7,12)
	set VL=VL_$J("",40-VL.length())_$E(vc8,1,3)
	set VL=VL_$J("",44-VL.length())_$E(vc9,1,12)
	set VL=VL_$J("",57-VL.length())_$J(vc10,12)
	set VL=VL_$J("",70-VL.length())_$E(vc11,1,12)
	set V=vc12,VO=V set V=$E(V,1,20) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",83-VL.length())_V		// [SYSDEV,TTX]TLO
	set VL=VL_$J("",104-VL.length())_$E(vc13,1,27)
	do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(BLANK,1,1) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BLANK,CONAM,GLACN,JD,OPT,OPT(),PID,RID,RN,SAVSEQ,VL,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$J($$DAT^%ZM(JD),10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	do VP5 quit:VFMQ!verror.get()  set V=$E($G(OPT(OPT)),1,28) set VL=V
	do VOM
	set VL="G/L Account "
	set VL=VL_$J("",12-VL.length())_$E(GLACN,1,12)
	do VOM
	set VL="" do VOM
	set VL="Brcd   Teller          Seq       Amount  CC Tran Code      Account #  Source       Reference            Comment"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,REP340]BRCD

	type public Number BRF, V, VO

	if (VO = BRF) set V = ""
	else  set BRF = VO
	quit

VP2	// Column post-processor - [SYSDEV,REP340]UID

	type public String UIDF, V, VO

	if (VO = UIDF) set V = ""
	else  set UIDF = VO
	quit

VP3	// Column post-processor - [SYSDEV,TTX]TLO

	type public String REFF, V, VO

	if (VO = REFF) set V = ""
	else  set REFF = VO
	quit

VP4	// Column pre-processor - Variable: BLANK

	type public String vc6
	// Keep line to double space if new transaction set, otherwise
	// suppress it

	type public Number SAVSEQ
	type public String BLANK

	if ((vc6 \ 1000) = (SAVSEQ \ 1000)) set BLANK = ""
	else  do {
		set BLANK = " "
		set SAVSEQ = vc6
	}
	quit

VP5	// Column pre-processor - Variable: $G(OPT(OPT))

	type public Number BRF, CRCDF, OPT, REFF, UIDF
	type public String OPT()

	if OPT = 2 set OPT(2) = OPT(2).extract(1, 22)_"      "

	set (CRCDF, REFF, UIDF) = 0
	set BRF = -1
	quit
