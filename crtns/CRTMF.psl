CRTMF	//Private; Teller System Comment Field Processor
	/*
	   ORIG: Frank R. Sanchez (2497)
	   DESC: Displays optional Dialogue box based on miscelleneous
	   comment definition in [TRN] or class specific query
	   passed misc fields in MFT(CLS
	
	---- Revision History ------------------------------------------------
	
	12/01/05 - RussellDS - CR18400
		   Eliminate call to ^CRTQRY.  Only functions are now valid
		   as queries in this context.

	07/07/04 - Erik Scheetz - 10782

		   Modified section MFT to correctly pull piece 9 for the 
		   account class rather than piece 6 from the resulset.
		   (SCHWARTZC)
		   
		   Modified MFT section to properly build MFT array for both
		   STBLTSD and UTBLZTSD. (SCHWARTZC)

		   Modified to improve performance by using DbSet methods.
		   (SCHWARTZC)
		   
		   Cleaned up the BLDSCR section so that it also works.
		   (SCHWARTZC)

		   Scopped variables and cleaned up compiler warnings throughout.
		   (SCHWARTZC)
		   		   
		   Obsoleted unused tags REQD, DSPMF, SHOWCMT, PAINT, UX, 
		   ETC and SETETC.  These tags were used for the display 
		   of the Profile misc. transaction data screen and are 
		   no longer necessary. (SCHWARTZC)
	
	12/02/03 - CARROLLJ - CR7239
		   Added #ACCEPT prior to xecute command to correct compile
		   errors.

	06/04/03 - ZWITKOWITSM - 51349
		   New'd CLS in CRTMFT to prevent re-defining of the CLS
		   variable for calling routines.  Removed ETC array and
		   isDefined method.

	03/26/03 - CARROLLJ - 51349
		   Modified section MFTCR8 to correct undefined error on
		   miscellaneous fields.

	08/12/02 - SCOTTC - 43583 - Make code modifications dictated by
		   code review.

	*/
	quit

Public CRTBLDSCR(mf,MRPC)	// Build the Screen

	type Public String %READ,%TAB(),sort(),UX()
	
	type Number i
	type String lvn,qry,tab,value,x,xpr
	type Boolean referd,req
	
	
	set xpr=""
	set lvn=$P(mf,"|",1) 
	set qry=$P(mf,"|",2)
	set req=$P(mf,"|",3) 
	set tab=$P(mf,"|",4)
	if tab["XPR" for i=1:1:$L(tab,"/") do {
		if $P(tab,"/",i)["XPR" do {
			set xpr=$P(tab,"/",i) 
			set xpr=$P(xpr,"=",2,99)
			}
		}
	set referd=0
	
	for i=1:1:$L(%READ,",") do { quit:referd 
		set x=$P(%READ,",",i) quit:x="" 
		set x=$P(x,"/",1) 
		if lvn'=x quit 
		set referd=1
		}

	quit:referd 
	
	if qry'="" do { if 'x quit 
		// Execute function call
		type String execstr
		set execstr="set x="_qry
		#ACCEPT DATE=06/15/04;PGM=Clayton Schwartz
		xecute execstr
	}
	
	/*
	Only pre-processer code can be executed, but it is done after
	the query in order to prevent setup which should not be done.
	*/
	
	type Public String @lvn
	
	#ACCEPT DATE=06/04/03;PGM=Matt Zwitkowits
	if xpr'="" xecute xpr
	if $G(MRPC),xpr'="" do {
		if xpr'[(lvn_"=") quit 
		set sort("Q",lvn)=@lvn
		}
	
	if %READ="" set %READ=lvn_$S(req:"/REQ",1:"")
	else  do {
		// Add unreq'd misc field to end of %READ
		if 'req set %READ=%READ_","_lvn quit 
	
		// Add req'd misc field before unreq'd misc fields
		for i=1:1:$L(%READ,",") do { quit:referd 
			set x=$P(%READ,",",i) 
			if x["/REQ" quit 
			if i=1 set %READ=lvn_"/REQ,"_%READ
			else  set $P(%READ,",",i)=lvn_"/REQ,"_x
			set referd=1
			}
		if 'referd set %READ=%READ_","_lvn_"/REQ"
		}
	
	set value=$G(@lvn)
	set %TAB(lvn)=tab
	if %ProcessMode=1,'UX(lvn).exists() set UX(lvn)="|"_value
	quit 


Public BLDSCR(mf,MRPC)	// Build the Screen

	type Public String %READ,%TAB(),sort(),UX()

	type String lvn,qry,sortlvn,tab,value,x,xpr
	type Number i,seq
	type Boolean qrytrnbs,referd,req
	
	set xpr="" 
	set lvn=$P(mf,"|",1) 
	set qry=$P(mf,"|",2)
	set sortlvn=lvn
	set req=$P(mf,"|",3) 
	set tab=$P(mf,"|",4)
	// Query transaction based
	set qrytrnbs=$P(mf,"|",7)
	set seq=$P(mf,"|",6)
	if tab["XPR" for i=1:1:$L(tab,"/") do {
		if $P(tab,"/",i)["XPR" do {
			set xpr=$P(tab,"/",i) 
			set xpr=$P(xpr,"=",2,99)
			}
		}
	set referd=0
	
	/*  
	Use the sequence number instead of acronymn, if its in the mf parameter.
	This reflects the STBLTSD and UTBLZTSD tables being used
	for account-based support data fields instead of STBLMFVARP.
	*/

	if $G(seq)'="" set lvn=seq
	for i=1:1:$L(%READ,",") do { quit:referd 
		set x=$P(%READ,",",i) quit:x="" 
		set x=$P(x,"/",1) 
		if lvn'=x quit 
		set referd=1
		}
	quit:referd 
	
	/*
	Support Data Field is System Generated....
	If query is transaction based,
	or if the query is not defined, do not prompt.
	*/	

	quit:(qrytrnbs=1)!(qry="") 
	
	if qry'="" do { if 'x quit 
		// Execute function call
		type String execstr
		set execstr="set x="_qry
		#ACCEPT DATE=06/15/04;PGM=Clayton Schwartz
		xecute execstr
	}
	
	/* 
	Only pre-processer code can be executed, but it is done after
	the query in order to prevent setup which should not be done.
	*/

	#ACCEPT DATE=06/04/03;PGM=Matt Zwitkowits
	if xpr'="" xecute xpr
	if xpr'="" do {
		type String tmplvn
		set tmplvn=sortlvn_"="
		if xpr'[tmplvn quit 
		set sort("Q",lvn)=@sortlvn
		}
	
	if %READ="" set %READ=lvn_$S(req:"/REQ",1:"")
	else  do {
		// Add unreq'd misc field to end of %READ
		if 'req set %READ=%READ_","_lvn quit 
	
		// Add req'd misc field before unreq'd misc fields
		for i=1:1:$L(%READ,",") do { quit:referd 
			set x=$P(%READ,",",i) 
			if x["/REQ" quit 
			if i=1 set %READ=lvn_"/REQ,"_%READ
			else  set $P(%READ,",",i)=lvn_"/REQ,"_x
			set referd=1
			}
		if 'referd set %READ=%READ_","_lvn_"/REQ"
		}
	
	set %TAB(lvn)=tab
	if %ProcessMode=1,'UX(lvn).exists() do {
		type String value
		type Public String @lvn

		set value=$G(@lvn)
		set UX(lvn)="|"_value
		}
	quit 

public MFT	// Initialzie miscellaneous field array

	/*
	
	   Set MFT array with the miscellaneous fields from:
	
	     1) System table MFVARP, which are MFs that are
		required based on a query executed for every
	
	     2) Level 3 of TRN, which are user defined.  If defined for same
		value as MFVARP, overlay

	
	*/

	type Public Boolean CRT
	type Public String MFT()

	type String CLS
	type Number DI,LI

	if $G(CRT)=1 do CRTMFT quit 

	kill MFT
	
	set DI=1 
	set LI=1

	type DbSet tsdds=Db.selectDbSet("STBLTSD")

	if 'tsdds.isEmpty() while tsdds.next() do {

		type String lvn,REC,tab
		type RecordSTBLTSD stbltsd=tsdds.getRecord()
	
		set tab="/DES="_stbltsd.des_"/TYP=T/LEN=28"

		//Assign default value to lvn
		set lvn=stbltsd.acronym
		if stbltsd.default'="" set @lvn=stbltsd.default

		if stbltsd.help'="" set tab=tab_"/HLP="_stbltsd.help
		if stbltsd.pre'="" set tab=tab_"/XPR="_stbltsd.pre

		set REC=stbltsd.acronym_"|"_stbltsd.funqry_"|"_stbltsd.reqd_"|"_tab_"|"_stbltsd.class_"|"_stbltsd.seq_"|"_stbltsd.qrytrnbs
			
		if stbltsd.class="D" set MFT("D",DI)=REC set DI=DI+1
		if stbltsd.class="L" set MFT("L",LI)=REC set LI=LI+1
		}

	type DbSet ztsdds=Db.selectDbSet("UTBLZTSD")

	if ztsdds.isEmpty() quit
	while ztsdds.next() do {

		type String lvn,REC,tab
		type RecordUTBLZTSD utblztsd=ztsdds.getRecord()

		set tab="/DES="_utblztsd.des_"/TYP=T/LEN=28"

		//Assign default value to lvn
		set lvn=utblztsd.acronym
		if utblztsd.default'="" set @lvn=utblztsd.default
		if utblztsd.help'="" set tab=tab_"/HLP="_utblztsd.help
		if utblztsd.pre'="" set tab=tab_"/XPR="_utblztsd.pre
	
		set REC=utblztsd.acronym_"|"_utblztsd.funqry_"|"_utblztsd.reqd_"|"_tab_"|"_utblztsd.class_"|"_utblztsd.seq_"|"_utblztsd.qrytrnbs
	
		if utblztsd.class="D" set MFT("D",DI)=REC set DI=DI+1
		if utblztsd.class="L" set MFT("L",LI)=REC set LI=LI+1
		}
	quit 

CRTMFT	//

	type Public String MFT()
	type String CLS	

	kill MFT

	set CLS="D" do MFTCR8(.MFT)
	set CLS="L" do MFTCR8(.MFT)

	quit

MFTCR8(MFT)  // Creates the MFT array

	type Public String CLS
	type Number KEY
	set KEY=1

	type DbSet mfvarpds=Db.selectDbSet("STBLMFVARP","CLS=:CLS")

	//type ResultSet rs=Db.select(
	//"MFVAR,MFDSC,MFREQ,MFDFT,MFTBL,MFPP,MFQRY,MFPRE,MFHLP,KEY","STBLMFVARP","CLS=:CLS")
	if mfvarpds.isEmpty() quit
	while mfvarpds.next() do {
		type String lvn,tab,xpp
		type RecordSTBLMFVARP stblmfvarp=mfvarpds.getRecord()

		set lvn=stblmfvarp.mfvar
		
		if lvn?1"TSO".E do {
			if stblmfvarp.mfpp="" set xpp="D TSO^CRTMF(X)" quit 
			set xpp="D TSO^CRTMF(X) I 'ER "_stblmfvarp.mfpp
			}
	
		set tab="/DES="_stblmfvarp.mfdsc_"/TYP=T/LEN=28"

		if stblmfvarp.mftbl="" set tab=tab_"/TBL="_stblmfvarp.mftbl

		//Assign default value to lvn
		if stblmfvarp.mfdft="" set @lvn=stblmfvarp.mfdft
		if $G(xpp)'="" set tab=tab_"/XPP="_stblmfvarp.mfpp
		if stblmfvarp.mfhlp'="" set tab=tab_"/HLP="_stblmfvarp.mfhlp
		if stblmfvarp.mfpre'="" set tab=tab_"/XPR="_stblmfvarp.mfpre
	
		set MFT(CLS,KEY)=lvn_"|"_stblmfvarp.mfqry_"|"_stblmfvarp.mfreq_"|"_tab
		set KEY=KEY+1

		}
	quit 
	
TSO(X)	//Private; Check input to TSO field to prevent entry of ~ or #
	/*
	
	   Called as post processor on TSO fields to ensure no entry of ~ or #
	
	   ARGUMENTS:
	   . X  DQ input
	
	   RETURNS:
	   . ER  Error flag /TYP=N/NOREQ
	
	   . RM  Error message /TYP=T/NOREQ
	
	   May not enter ~p1 characters
	*/

	type Public String ER,RM

	//May not enter ~p1 characters
	if X["~"!(X["#") do {
		set ER=1 
		set RM=$$^MSG(1700,"~ #")
		}
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60256^57181^Dan Russell^8564"	// Signature - LTD^TIME^USER^SIZE
