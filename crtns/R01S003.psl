R01S003	// SCA496 - EFT Payment History Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:59 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String PGM,TPGM,X
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number VIN1
	type String VIN10="ALL"
	type String VIN11="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA496"
	set RN="EFT Payment History Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|12||[PAYHIST]CID|[ACN]:NOVAL||D POSCID^@TPGM||N|Account Number|||||"
	set %TAB("VIN10")="|255||[EFTPAY]VARIABLE|||D EXT^DBSQRY||T|Variable Field|||||"
	set %TAB("VIN11")="|255||[EFTPAY]SPECIFIC|||D EXT^DBSQRY||T|Specific Field|||||"
	set %TAB("VIN2")="|255||[PAYHIST]SEQ|[EFTPAY]||D EXT^DBSQRY||T|Sequence|||||"
	set %TAB("VIN3")="|255||[EFTPAY]EFTTYPE|[CTBLEFTTYPE]:NOVAL||D EXT^DBSQRY||T|Electronic Payment Type|||||"
	set %TAB("VIN4")="|255||[EFTPAY]EFD|||D EXT^DBSQRY||T|Effective Date|||||"
	set %TAB("VIN5")="|255||[EFTPAY]RECINST|[UTBLEFTINST]:NOVAL||D EXT^DBSQRY||T|Recipient Institution|||||"
	set %TAB("VIN6")="|255||[EFTPAY]RECACCT|||D EXT^DBSQRY||T|Recipient Account|||||"
	set %TAB("VIN7")="|255||[EFTPAY]AMOUNT|||D EXT^DBSQRY||T|Amount|||||"
	set %TAB("VIN8")="|255||[EFTPAY]CRCD|[CRCD]:QU ""[CRCD]CO=<<%CO>>"":NOVAL||D EXT^DBSQRY||T|Currency|||||"
	set %TAB("VIN9")="|255||[EFTPAY]CONSTANT|[UTBLECOACT]:NOVAL||D EXT^DBSQRY||T|Constant Field|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,VIN10#0,VIN11#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String PGM,TPGM,X
	type public Number VIN1
	type public String VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9,VIN10,VIN11
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA496",RN="EFT Payment History Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA496","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[PAYHIST]TSEQ#5#6,[PAYHIST]TJD#13#10,[PAYHIST]CDT#26#10,[PAYHIST]TIME#38#10,[PAYHIST]TLO#49#5,[PAYHIST]UID#57#12,[PAYHIST]BRCD#72#6,[PAYHIST]TCMT#81#50"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[PAYHIST]CID = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[PAYHIST]SEQ "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[EFTPAY]EFTTYPE "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[EFTPAY]EFD "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[EFTPAY]RECINST "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[EFTPAY]RECACCT "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[EFTPAY]AMOUNT "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[EFTPAY]CRCD "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[EFTPAY]CONSTANT "_VIN9,SEQ=SEQ+1
		if VIN10.get()="" set VIN10="ALL"
		if VIN10'="ALL" set DQQRY(SEQ)="[EFTPAY]VARIABLE "_VIN10,SEQ=SEQ+1
		if VIN11.get()="" set VIN11="ALL"
		if VIN11'="ALL" set DQQRY(SEQ)="[EFTPAY]SPECIFIC "_VIN11,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("PAYHIST,EFTPAY") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Account Number"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Sequence"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Electronic Payment Type"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Effective Date"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Recipient Institution"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Recipient Account"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Amount"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Currency"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"Constant Field"_"|VIN9|"_VIN9.get()
		set VBNRINFO("PROMPTS",10)="WC2|"_"Variable Field"_"|VIN10|"_VIN10.get()
		set VBNRINFO("PROMPTS",11)="WC2|"_"Specific Field"_"|VIN11|"_VIN11.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="EFT Payment History Report"
		set VBNRINFO("PGM")="R01S003"
		set VBNRINFO("RID")="SCA496"
		set VBNRINFO("TABLES")="PAYHIST,EFTPAY"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,PAYHIST]CID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,PAYHIST]SEQ"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,PAYHIST]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"PAYHIST.CID,PAYHIST.SEQ,PAYHIST.TSEQ,EFTPAY.CID,EF"
	set VSELECT=VSELECT_"TPAY.AMTTYPDSC,EFTPAY.MET,EFTPAY.SPECIFIC,EFTPAY.S"
	set VSELECT=VSELECT_"EQ,EFTPAY.RECINST,EFTPAY.AMOUNT,EFTPAY.EFTTYPE,EFT"
	set VSELECT=VSELECT_"PAY.VARIABLE,EFTPAY.RECACCT,EFTPAY.CRCD,EFTPAY.EFD"
	set VSELECT=VSELECT_",EFTPAY.CONSTANT,PAYHIST.TJD,PAYHIST.CDT,PAYHIST.T"
	set VSELECT=VSELECT_"IME,PAYHIST.TLO,PAYHIST.UID,PAYHIST.BRCD,PAYHIST.T"
	set VSELECT=VSELECT_"CMT"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"PAYHIST,EFTPAY",VWHERE,"PAYHIST.CID,PAYHIST.SEQ,PAYHIST.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// PAYHIST.CID
	set vc2=V.piece($C(9),2)			// PAYHIST.SEQ
	set vc3=V.piece($C(9),3)			// PAYHIST.TSEQ
	set vc4=V.piece($C(9),4)			// EFTPAY.CID
	set vc5=V.piece($C(9),5)			// EFTPAY.AMTTYPDSC
	set vc6=V.piece($C(9),6)			// EFTPAY.MET
	set vc7=V.piece($C(9),7)			// EFTPAY.SPECIFIC
	set vc8=V.piece($C(9),8)			// EFTPAY.SEQ
	set vc9=V.piece($C(9),9)			// EFTPAY.RECINST
	set vc10=V.piece($C(9),10)			// EFTPAY.AMOUNT
	set vc11=V.piece($C(9),11)			// EFTPAY.EFTTYPE
	set vc12=V.piece($C(9),12)			// EFTPAY.VARIABLE
	set vc13=V.piece($C(9),13)			// EFTPAY.RECACCT
	set vc14=V.piece($C(9),14)			// EFTPAY.CRCD
	set vc15=V.piece($C(9),15)			// EFTPAY.EFD
	set vc16=V.piece($C(9),16)			// EFTPAY.CONSTANT
	set vc17=V.piece($C(9),17)			// PAYHIST.TJD
	set vc18=V.piece($C(9),18)			// PAYHIST.CDT
	set vc19=V.piece($C(9),19)			// PAYHIST.TIME
	set vc20=V.piece($C(9),20)			// PAYHIST.TLO
	set vc21=V.piece($C(9),21)			// PAYHIST.UID
	set vc22=V.piece($C(9),22)			// PAYHIST.BRCD
	set vc23=V.piece($C(9),23)			// PAYHIST.TCMT
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

	type public String PGM,TPGM

	do ^URID 
	set TPGM=PGM
	quit

POSCID
	type public Boolean ER
	type public Number X
	type public String RM
	
	quit:X=""  

	do:(X?.E1A.E) ^UACN quit:X=""  

	type ResultSet rs=Db.select("CID","PAYHIST","CID=:X")
	if 'rs.next() set ER=1, RM="Payment order not on file" quit:ER	
	
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,IOSL,PGM,RID,RM,RN,TPGM,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,X,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+8>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"Account Number:"
	set VL=VL_$J("",17-VL.length())_$J(vc4,12)
	set VL=VL_$J("",35-VL.length())_"Amount Type:"
	set VL=VL_$J("",48-VL.length())_$E(vc5,1,22)
	set VL=VL_$J("",72-VL.length())_"Payment Method:"
	set VL=VL_$J("",88-VL.length())_$E(vc6,1,10)
	set VL=VL_$J("",103-VL.length())_"Specific Field:"
	set VL=VL_$J("",119-VL.length())_$E(vc7,1,10)
	do VOM
	set VL="   "_"EFT Sequence:"
	set VL=VL_$J("",17-VL.length())_$J(vc8,12)
	do VOM
	set VL="   "_"Receive Inst:"
	set VL=VL_$J("",17-VL.length())_$E(vc9,1,12)
	set VL=VL_$J("",40-VL.length())_"Amount:"
	set VL=VL_$J("",48-VL.length())_$J($FN(vc10,",",2),18)
	set VL=VL_$J("",74-VL.length())_"Payment Type:"
	set VL=VL_$J("",88-VL.length())_$E(vc11,1,6)
	set VL=VL_$J("",103-VL.length())_"Variable Field:"
	set VL=VL_$J("",119-VL.length())_$E(vc12,1,10)
	do VOM
	set VL="Receive Account:"
	set VL=VL_$J("",17-VL.length())_$E(vc13,1,34)
	set VL=VL_$J("",54-VL.length())_"Currency:"
	set VL=VL_$J("",64-VL.length())_$E(vc14,1,3)
	set VL=VL_$J("",72-VL.length())_"Effective Date:"
	set VL=VL_$J("",88-VL.length())_$J($$DAT^%ZM(vc15),10)
	set VL=VL_$J("",103-VL.length())_"Constant Field:"
	set VL=VL_$J("",119-VL.length())_$E(vc16,1,10)
	do VOM
	set VL="" do VOM
	set VL="  "_"History   Transaction  Calendar               Term       User       Branch"
	do VOM
	set VL="  "_"Sequence   Date         Date        Time      Loc         ID         Code     Description"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	quit

VDTL3	// Detail
	type public String %TIM,ER,IOSL,PGM,RM,TPGM,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),X,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="    "_$J(vc3,6)
	set VL=VL_$J("",12-VL.length())_$J($$DAT^%ZM(vc17),10)
	set VL=VL_$J("",25-VL.length())_$J($$DAT^%ZM(vc18),10)
	set VL=VL_$J("",37-VL.length())_$J($$TIM^%ZM(vc19),10)
	set VL=VL_$J("",48-VL.length())_$E(vc20,1,5)
	set VL=VL_$J("",56-VL.length())_$E(vc21,1,12)
	set VL=VL_$J("",71-VL.length())_$J(vc22,6)
	set VL=VL_$J("",80-VL.length())_$E(vc23,1,50)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,PGM,RID,RM,RN,TPGM,VL,X,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+2,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
