V00S633(%ProcessMode,RecordUTBLSRC fUTBLSRC)   // -  - SID= <UTBLSRC> Inclearing/Source Tables
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:41 - kini
 // The UTBLSRC screen allows the institution to identify back-office posting
 // sources for various types of transactions.
 // 
 // The institution accesses this screen via the User Table Maintenance function
 // (UTBL001) for each of the sub-tables within the Sources user table (SRC).
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLSRC",VPGM=$T(+0),VSNAME="Inclearing/Source Tables"
 set VFSN("UTBLSRC")="zfUTBLSRC"
 set vPSL=1
 set KEYS(1)=fUTBLSRC.SRCTYP
 set KEYS(2)=fUTBLSRC.KEY
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLSRC),VDA1(.fUTBLSRC),^DBSPNT()

 set ER=0 do VSCRPRE(.fUTBLSRC) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLSRC),VPR(.fUTBLSRC),VDA1(.fUTBLSRC)
 if %ProcessMode do VLOD(.fUTBLSRC) quit:$G(ER)  do VPR(.fUTBLSRC),VDA1(.fUTBLSRC)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLSRC)
	quit


VNEW(RecordUTBLSRC fUTBLSRC) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLSRC)
 do VLOD(.fUTBLSRC)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLSRC fUTBLSRC)
 if fUTBLSRC.BRCD="" set fUTBLSRC.BRCD=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLSRC fUTBLSRC) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLSRC fUTBLSRC) // Display screen prompts
 set VO="10||13|"
 set VO(0)="8|0"
 set VO(1)=$C(8,11,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(2)=$C(9,11,13,1,0,0,0,0,0,0)_"01T Branch Code:"
 set VO(3)=$C(9,42,15,1,0,0,0,0,0,0)_"01T Teller Number:"
 set VO(4)=$C(11,19,40,2,0,0,0,0,0,0)_"01TFor Pre-Authorized Transfer System Only:"
 set VO(5)=$C(13,13,11,0,0,0,0,0,0,0)_"01T Frequency:"
 set VO(6)=$C(13,50,11,0,0,0,0,0,0,0)_"01T Next Date:"
 set VO(7)=$C(14,1,23,0,0,0,0,0,0,0)_"01T Process At End-of-Day:"
 set VO(8)=$C(14,50,11,0,0,0,0,0,0,0)_"01T Last Date:"
 set VO(9)=$C(16,6,18,0,0,0,0,0,0,0)_"01TInvoke Protection:"
 set VO(10)=$C(16,48,13,0,0,0,0,0,0,0)_"01TPAT Fee Flag:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLSRC fUTBLSRC)  // Display screen data
 new V
 //
 set VO="19|11|13|"
 set VO(11)=$C(8,25,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLSRC.DESC,1,40)
 set VO(12)=$C(9,25,6,2,0,0,0,0,0,0)_"00N"_fUTBLSRC.BRCD
 set VO(13)=$C(9,58,20,2,0,0,0,0,0,0)_"00T"_$E(fUTBLSRC.UID,1,20)
 set VO(14)=$C(13,25,12,2,0,0,0,0,0,0)_"00F"_$E(fUTBLSRC.FREQ,1,12)
 set VO(15)=$C(13,62,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fUTBLSRC.NPD)
 set VO(16)=$C(14,25,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLSRC.EODP:"Y",1:"N")
 set VO(17)=$C(14,62,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fUTBLSRC.LPD)
 set VO(18)=$C(16,25,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLSRC.ODP:"Y",1:"N")
 set VO(19)=$C(16,62,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLSRC.PATFEE:"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLSRC fUTBLSRC)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=9,VPT=8,VPB=16,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLSRC"
 set OLNTB=16062
 
 set VFSN("UTBLSRC")="zfUTBLSRC"
 //
 // 
	
	
 set %TAB(1)=$C(7,24,40)_"01T12401|1|[UTBLSRC]DESC"
 set %TAB(2)=$C(8,24,6)_"01N12402|1|[UTBLSRC]BRCD|[UTBLBRCD]"
 set %TAB(3)=$C(8,57,20)_"01T12403|1|[UTBLSRC]UID|[SCAU]||do VP1^V00S633(.fUTBLSRC)"
 set %TAB(4)=$C(12,24,12)_"00F12409|1|[UTBLSRC]FREQ|||do VP2^V00S633(.fUTBLSRC)"
 set %TAB(5)=$C(12,61,10)_"00D12411|1|[UTBLSRC]NPD"
 set %TAB(6)=$C(13,24,1)_"00L12412|1|[UTBLSRC]EODP"
 set %TAB(7)=$C(13,61,10)_"00D12410|1|[UTBLSRC]LPD"
 set %TAB(8)=$C(15,24,1)_"00L12407|1|[UTBLSRC]ODP"
 set %TAB(9)=$C(15,61,1)_"00L12406|1|[UTBLSRC]PATFEE"
 do VTBL(.fUTBLSRC)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLSRC fUTBLSRC) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLSRC fUTBLSRC) //
 type Public Number ER
 type Public String RM, X

 quit:fUTBLSRC.srctyp '= "FEE"
 quit:X.isNull()

 type ResultSet rs = Db.select("UID", "UTBLSRC", "UID = :X AND (SRCTYP <> :fUTBLSRC.srctyp OR KEY <> :fUTBLSRC.key)")

 while rs.next() do { quit
	set ER = 1
	// Teller ~p1 is in use by source ~p2
	set RM = $$^MSG(2622, X, rs.getCol("UID"))
 }
VP2(RecordUTBLSRC fUTBLSRC) //
        type public Boolean ER
        type public Date JD,NJD
        type public String FRE,X

        if (X.get()).isNull() quit

        set JD=fUTBLSRC.lpd
        set FRE=X

        if JD="" set JD=%SystemDate

        for  do ^UFRE quit:$G(ER)  quit:NJD<0!(NJD'<%SystemDate)  set JD=NJD
        if fUTBLSRC.npd=NJD quit

        do DEFAULT^DBSMACRO("UTBLSRC.NPD",NJD,"1","0","0")

        quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLSRC fUTBLSRC
 do VPR(.fUTBLSRC)
 do VDA1(.fUTBLSRC)
 do ^DBSPNT()
 quit

VW(RecordUTBLSRC fUTBLSRC)
 do VDA1(.fUTBLSRC)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLSRC fUTBLSRC)
 do VDA1(.fUTBLSRC)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLSRC fUTBLSRC
 do VDA1(.fUTBLSRC)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLSRC fUTBLSRC
 if sn="UTBLSRC" do vSET1(.fUTBLSRC,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLSRC fUTBLSRC,di,X)
 do fUTBLSRC.setAuditFlag(1)
 set fUTBLSRC.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLSRC fUTBLSRC
 if fid="UTBLSRC" quit $$vREAD1(.fUTBLSRC,di)
 quit ""
vREAD1(RecordUTBLSRC fUTBLSRC,di)
 quit fUTBLSRC.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLSRC fUTBLSRC)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type Public Number ER
 type Public String RM,SRCTYP
 quit:'SRCTYP.get().isNull() 
 set SRCTYP = fUTBLSRC.srctyp
 if SRCTYP.isNull() do {
	set ER=1
	// Invalid source type
	set RM=$$^MSG(1470)
 }
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
