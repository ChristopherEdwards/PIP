MPSCARDU	
  /*
	ORIG: CHOK - 07/18/2000
	DESC: MPS Card Assignment Utility

	---- Comments --------------------------------------------------------

	This procedure definition will assign MPS card number.

	---- Revision History ------------------------------------------------
	
	 12/12/05 -  SPR - 18555
	       	     Card Management - General DBI3 System Area Clean up.
	----------------------------------------------------------------------       	     
 */

	quit

	//-----------------------------------------------------------------
CRDNUM(CO,CRDTYP)	// Generate new card number
	//-----------------------------------------------------------------
	/*
	ARGUMENTS:
		.CO	Company Code	/TYP=T/REQ/MECH=VAL
		.CRDTYP	Card Type	/TYP=T/REQ/MECH=VAL
	
	RETURNS:
		.CRDNUM	Card Number
	
	This sub-routine calculates the next available MPS card number
	based on company code or affinity group and card type.  It uses
	the set up that is provided in the MPS_1 user table for the company
	code and card type.
	*/
	//-----------------------------------------------------------------
	
	type public Boolean ER
	type public String CRDNUM,OCRDNUM,RM
	type Boolean done,REISSUE
	type String CDM,CMSGEN,MOD,MPSCRD,MBINTLR,PGM,X,V,Y,Z 
	type Number BIN,CD,CRDSEQ,I,LSEQ,MCRDLEN,MCRDNUM,MSK,POS,SO,SP,WT

	if CO.isNull() set ER=1,RM=$$^MSG(3113,"CO") do EXC quit ""
	if CRDTYP.isNull() set ER=1,RM=$$^MSG(3113,"CRDTYP") do EXC quit ""
	
	type RecordUTBLMPS mps=Db.getRecord("UTBLMPS","CO=:CO,CARDTYP=:CRDTYP",1)
	if 'mps.getMode() set ER=1,RM=$$^MSG(1391,CO,CRDTYP) do EXC quit ""
		
	type RecordCRDTYP cmsgen=Db.getRecord("CRDTYP","CARDTYPE=:CRDTYP",1)
	if cmsgen.getMode() set CMSGEN=cmsgen.cmsgen
		
	if 'CMSGEN.isNull(),CMSGEN'="MPS" do { quit CRDNUM		// SPG 01/28/03
		set BIN=cmsgen.bin
		if BIN="" set BIN=111111
		/* If original card number exists, it is assumed that the
		   process is for reissue since it's only in REPLACE^MPSRECU
		   that OCRDNUM is set.
		*/ 
		if OCRDNUM.get() set REISSUE=1
		else  set REISSUE=0
		set X="do "_CMSGEN_"^CRDNUMGN(BIN,.CRDNUM)"
		#ACCEPT DATE=12/12/03;PGM=John Carroll
		xecute X
		if ER set ER=0 quit
		if CRDNUM.isNull() quit
			
		type ResultSet rsmpsseq=Db.select("CRDSEQ","MPSSEQ","CO=:CO AND CARDTYP=:CRDTYP","CRDSEQ DESC")
		if rsmpsseq.next() set CRDSEQ=rsmpsseq.getCol("CRDSEQ")+1
		else  set CRDSEQ=1
		 
		do MSEQUP
	}
		
	set MPSCRD=mps.mpscrd
	set MCRDNUM=mps.mpscrdnum
	set MBINTLR=mps.mpsbintlr
	set MCRDLEN=mps.mpscrdlen
	set CDM=mps.cdm

	type RecordUTBLCDM cdm=Db.getRecord("UTBLCDM","KEY=:CDM",1)
	set MOD=cdm.mod
	set PGM=cdm.pgm
	set POS=cdm.pos
	set SO=cdm.so
	set SP=cdm.sp
	set MSK=cdm.msk
	set WT=cdm.wt

	if 'WT set WT=371371371371
	if 'MOD set MOD=10
	if 'POS set POS=1
 	if 'SP set SP=1

	if 'MCRDNUM.isNull() set MSK=$$ZERO1(MCRDNUM_MBINTLR,MCRDLEN-1)

	if MBINTLR.isNull()!(MBINTLR="000") set LSEQ=$$NINE("",MCRDLEN-1-$L(MCRDNUM))
	else  set LSEQ=$$NINE("",MCRDLEN-1-$L(MCRDNUM)-3)

	type ResultSet rsmpsseq=Db.select("CRDSEQ","MPSSEQ","CO=:CO AND CARDTYP=:CRDTYP","CRDSEQ DESC")
	if rsmpsseq.next() set CRDSEQ=rsmpsseq.getCol("CRDSEQ")+1
	else  set CRDSEQ=1

	// Running out of Card Numbers
	if CRDSEQ'<LSEQ set RM=$$^MSG(2919,CRDSEQ) do EXC quit ""
	while 'done do {
	
		if CRDSEQ="" set CRDSEQ=1
		else  set CRDSEQ=CRDSEQ+1

		// Pad left w/zeros
		set CRDSEQ=$$ZEROS(CRDSEQ,$L(LSEQ))

		// Add account mask prior to calculation
		set V=MSK+$E(CRDSEQ,SP,99)

		// Truncate weighting factor
		set WT=$E(WT,$L(WT)-$L(V)+1,$L(WT))
		set Z=0 for I=$L(V):-1:1 set Y=$E(V,I)*$E(WT,I) do:SO SO set Z=Z+Y
		//set CD=MOD-(Z#MOD)+1 if CD>9 set CD=CD-10
		set CD=MOD-(Z#MOD) if CD=MOD set CD=0
		//set CRDNUM=+$E(CRDSEQ,1,$L(CRDSEQ)-POS+1)_CD_$E(CRDSEQ,$L(CRDSEQ)-POS+2,99)
		set CRDNUM=(MSK+CRDSEQ)_CD

		set CRDNUM=+CRDNUM
		
		type ResultSet rs=Db.select("CRDNUM","CRD","CRDNUM=:CRDNUM")
		if rs.isEmpty() set done=1
		
		}

	do MSEQUP

	quit CRDNUM


SO	// Summation option
	type public String Y 
	for  set Y=Y.extract()+Y.extract(2)  quit:Y<10
	quit


MSEQUP
	// Table MPSSEQ to keep track of card type sequence number
	type public Number CRDSEQ
	type public String CO,CRDTYP

	type RecordMPSSEQ mpsseq=Db.getRecord("MPSSEQ","CO=:CO,CARDTYP=:CRDTYP",1)
	set mpsseq.crdseq=+CRDSEQ
	do mpsseq.bypassSave()
	quit


ZEROS(VAL,N)
 
	// Pad on left with zeroes
	
	quit $$RJ^%ZTEXT(VAL,N,0,1)


ZERO1(VAL,N)

	// Pad on right with zeroes
	
	quit $$LJ^%ZTEXT(VAL,N,0,1)

	
NINE(VAL,N)

	// Pad on right with nines
	
	quit $$LJ^%ZTEXT(VAL,N,9,1)

	
EXC	// Log error to DAYEND
	
	type public Number CID
	type public String RM,%ZTSEQ
	type String DESC
	
	type RecordDBTBL25 dbtbl25=Db.getRecord("DBTBL25","%LIBS='SYSDEV',PROCID='MPSCARDU'",1)
	if dbtbl25.getMode() set DESC=dbtbl25.des
		
	do LOG^UTLEXC(%RoutineName,"*",DESC,CID,%ZTSEQ.get(),RM.get())

	quit

vSIG()	quit "60284^44943^Renga SP^4617"	// Signature - LTD^TIME^USER^SIZE
