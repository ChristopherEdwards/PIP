ITFCV(Number %ProcessMode)	
		 
	/*
	Foreign Currrency Voucher Maintenance
	
	This program allows for the creation/maintenance/inquiry/deletion of
	Foreign Currency vouchers.  A voucher is a balanced set of IBS postings
	which have the same posting date and the same currency.  They are
	associated by the DEALID, which is a 10 character alpha-numeric
	descriptor (not necessarily unique, however).
	
	NOTE:  ITFXV and ITFCV are very similar.  Changes made to one should
	       be considered in the other as well.
		    
	---- Revision History -------------------------------------------------
	01/24/06 - RussellDS - CR19164
		   Converted to PSL.
		   
		   Combines old routines ITFCVC, ITFCVM, ITFCVI, and ITFCVD.
		   
		   NOTE the BATCHIN section in ITFCVC has not been converted
		   since no uses of it could be found.

	-----------------------------------------------------------------------
	*/

	type public Boolean ER
	type public String RM
	
	// Note that many of these variables are used by the screen ITFCV
	type Date EFD, LPDATE, PDATE, TPD
	type Number %ODP, %PAGE, %PG, BRCD, I, OLNTB, SEQ, TSEQ
	type String %READ, %TAB(), ACCTTL, ACNGL(), ACNPST()
	type String CNTRY(), DEALID, DRCR(), ITSCODE, STAT(), UID, VFMQ
	
	set ITSCODE = "FCV"
		
	type RecordSCAU scau = Db.getRecord("SCAU", "UID=:%UserID")
	
	set ER = 0
	set TPD = %SystemDate
	set BRCD = scau.brcd
	set EFD = %SystemDate
	set UID = %UserID
	set %ODP = scau.odp
	
	if (%ProcessMode = 0) do {
		
		set %TAB("EFD") = ".EFD1/XPP=D EFDPP^ITUTIL"
		set %TAB("BRCD") = ".BRCD1/TBL=[UTBLBRCD]"
		
		set %READ = "@@%FN,,,EFD/REQ,BRCD/REQ"
	}
	else  if (%ProcessMode = 2) do {
		
		set %TAB("DEALID") = ".DEALID1/TBL=[ITOPID]DEALID:DISTINCT:QU ""[ITOPID]ITSCODE=<<ITSCODE>>"""
		set %TAB("LPDATE") = ".LPDATE1/TBL=[ITOPID]EFD:DISTINCT:QU ""[ITOPID]ITSCODE=<<ITSCODE>> AND [ITOPID]DEALID=<<DEALID>>"""
		set %TAB("BRCD") = ".BRCD1/TBL=[ITOPID]BRCD:DISTINCT:QU ""[ITOPID]ITSCODE=<<ITSCODE>> AND [ITOPID]DEALID=<<DEALID>> AND [ITOPID]EFD=<<LPDATE>>"""
		set %TAB("UID") = ".UID1/TBL=[ITOPID]UID:DISTINCT:QU ""[ITOPID]ITSCODE=<<ITSCODE>> AND [ITOPID]DEALID=<<DEALID>> AND [ITOPID]EFD=<<LPDATE>> AND [ITOPID]BRCD=<<BRCD>>""/XPP=D UIDPP^ITUTIL"
		set %TAB("SEQ") = ".TSEQ5/TBL=TARRAY(/XPP=D SEQPP^ITUTIL"

		set %READ = "@@%FN,,,DEALID/REQ,LPDATE/REQ,BRCD/REQ,UID/REQ,SEQ/REQ"
	}
	else  do {		// %ProcessMode = 2 or 3

		set %TAB("BRCD") = ".BRCD1/TBL=[ITOPID]BRCD:DISTINCT:QU ""[ITOPID]ITSCODE=<<ITSCODE>> AND [ITOPID]UID=<<UID>>"""
		set %TAB("DEALID")  = ".DEALID1/TBL=[ITOPID]DEALID:DISTINCT:QU ""[ITOPID]ITSCODE=<<ITSCODE>> AND [ITOPID]UID=<<UID>> AND [ITOPID]BRCD=<<BRCD>>"""
		set %TAB("LPDATE") = ".LPDATE1/TBL=[ITOPID]EFD:DISTINCT:QU ""[ITOPID]ITSCODE=<<ITSCODE>> AND [ITOPID]DEALID=<<DEALID>> AND [ITOPID]UID=<<UID>> AND [ITOPID]BRCD=<<BRCD>>""/XPP=D LPDATEPP^ITUTIL"
		set %TAB("SEQ") = ".TSEQ5/TBL=TARRAY(/XPP=D SEQPP^ITUTIL"

		set %READ = "@@%FN,,,BRCD/REQ,DEALID/REQ,LPDATE/REQ,SEQ/REQ"
	}

	do ^UTLREAD quit:(VFMQ = "Q")
	
	if (%ProcessMode = 0) do {
	
		if (EFD < %SystemDate) set PDATE = %SystemDate
		else  set PDATE = EFD
		
		set (%PAGE, %PG) = 1
	
		type RecordTTX fT = Class.new("RecordTTX")
	
		set fT.vdt = EFD
	
		do DRV^USID(0, "ITFCV", .fT) quit:(VFMQ '= "F")
		
		do Runtime.start("CS", "", "SAVEPTR")
	
		do ADDFCV(.fT, EFD, TPD, PDATE, BRCD)
		
		if ER do Runtime.rollback("SAVEPTR")
			
		if 'ER do Runtime.commit()
	}
	else  do {
		
		type Boolean X
		type Number COUNT, PFLAG
		type String ITOPID(,,,,,)
		
		type RecordTTX ttx()
		type RecordTTX fT
		
		set TSEQ = SEQ
		set EFD = LPDATE
		
		if (%ProcessMode <> 2) do { quit:ER
		
			set ITOPID(ITSCODE, DEALID, EFD, BRCD, UID, SEQ) = ""
			lock +ITOPID(ITSCODE, DEALID, EFD, BRCD, UID, SEQ):2
		
			else  do {
			
				set ER = 1
				// File locked by another user
				set RM = $$^MSG(1081)
			}
		}
		
		if (%ProcessMode = 2) set PDATE = LPDATE
		else  do {
		
			if (LPDATE < %SystemDate) set PDATE = %SystemDate
			else  set PDATE = LPDATE
		}
		
		type RecordITOPID itopid = Db.getRecord("ITOPID", "ITSCODE=:ITSCODE,DEALID=:DEALID,EFD=:LPDATE,BRCD=:BRCD,UID=:%UserID,TSEQ=:TSEQ", 1)
		
		// Load data
		set COUNT = $$LOAD^ITUTIL(itopid, LPDATE, BRCD, UID, .ttx())
		
		if (COUNT = 0) do { quit
			
			set ER = 1
			// Error reading data
			set RM = $$^MSG(994)
		}
		
		if ttx(1).exists(), (ttx(1).efd '= EFD) set EFD = ttx(1).efd
		
		type RecordTTX fT
		
		set X = $$SCREEN(.ttx(), COUNT, .fT)
		
		if 'X do { quit
		
			set ER = 1
			// Error generating screen data
			set RM = $$^MSG(981)
		}
		
		// Display screen
		set (%PAGE, %PG) = 1
		set OLNTB = 0
		
		do DRV^USID(%ProcessMode, "ITFCV", .fT) quit:(VFMQ = "Q")
		
		quit:(%ProcessMode = 2)
		
		// Set flag for how to delete entry (see DELETE^ITUTIL)
		if (%SystemDate > LPDATE) set PFLAG = 2
		else  if (%SystemDate = LPDATE) set PFLAG = 1
		else  set PFLAG = 0
		
		if (%ProcessMode = 1) do {
			
			// Delete the old entry, create the new one
			
			do Runtime.start("CS", "", "SAVEPTR")
			
			if '$$DELETE^ITUTIL(ITSCODE, .ttx(), itopid, COUNT, PFLAG, TPD, BRCD, EFD, LPDATE) do {

				set ER = 1
				// Could not delete transactions.  Modification stopped.
				set RM = $$^MSG(629)
			}
			
			if 'ER do ADDFCV(.fT, EFD, TPD, PDATE, BRCD)
			
			if ER do Runtime.rollback("SAVEPTR")
			
			if 'ER do Runtime.commit()
			
		}
		
		if (%ProcessMode = 3) do {
			
			type Boolean YN
		
			// Are you SURE you want to DELETE this voucher?
			set YN = $$YN^DBSMBAR("", $$^MSG(306), 0) quit:'YN
			
			do Runtime.start("CS", "", "SAVEPTR")
			
			if '$$DELETE^ITUTIL(ITSCODE, .ttx(), itopid, COUNT, PFLAG, TPD, BRCD, EFD, LPDATE) do {

				set ER = 1
				// Could not delete transactions.  Deletion stopped.
				set RM = $$^MSG(628)
			}
			
			if ER do Runtime.rollback("SAVEPTR")
			
			if 'ER do Runtime.commit()
		}
		
		lock -ITOPID(ITSCODE, DEALID, EFD, BRCD, UID, SEQ)
	}
	
	quit

	
ADDFCV(RecordTTX fT,	// Base transaction information
       Date EFD,	// Effective date of deal
       Date TPD,	// Teller posting date
       Date PDATE,	// Deal posting date (today or future)
       Number BRCD)	// Branch code

	/*
	Files screen data and calls TRNDRV to post

	INPUTS:
		. DEALID 	Deal id for the FCV
		. ACNPST 	Array containing the lower postings
				  (The base currency postings)
		. DRCR   	Array containing the character representation
				  of the Debit/Credit flag for the lower postings.
		. ACNGL  	Array containing the ACNGL indicators for the
				  base currency postings.
		. STAT   	Array containing the Statistical codes for the
				  base currency postings (lower half of FCV screen)
		. CNTRY  	Array containing the country codes for the
				  base currency postings (lower half of FCV screen)
	*/
	
	type public Boolean ER
	type public Number %ODP
	type public String ACNGL(), ACNPST(), CNTRY(), DEALID, DRCR()
	type public String ITSCODE, RM, STAT()
	
	type Number CNT, I, N
	type String ITC, OM(), REJ()
	
	set ER = 0
	
	set ITC = " "
	
	// Build transaction set
	type RecordTTX ttx()
	
	set CNT = 0
	set N = ""
	for  set N = ACNPST(N).order() quit:N.isNull()  do {
		
		type Number CID
		type String TSO, TSOARRAY()
		
		set CID = ACNPST(N).piece("|", 1)
		quit:CID.isNull()
		
		quit:ACNPST(N).piece("|", 4).isNull()	// Transaction amount
		quit:DRCR(N).isNull()			// DR/CR indicator
		
		set CNT = CNT + 1

		set ttx(CNT) = Class.new("RecordTTX")
		
		set ttx(CNT).cid = CID
		set ttx(CNT).tamt = ACNPST(N).piece("|", 4)
		
		if (DRCR(N) = "CR") set ttx(CNT).itc = $$ITC^TTXEXT(ITC,1,1)
		else  set ttx(CNT).itc = $$ITC^TTXEXT(ITC,1,0)
			
		set ttx(CNT).etc = $$DTC^ITUTIL(ACNGL(N), ACNPST(N).piece("|", 1), DRCR(N))
		set ttx(CNT).efd = EFD
		
		set TSOARRAY("DEALID") = DEALID
		set TSOARRAY("ITSCODE") = ITSCODE
		set TSOARRAY("ACNGL") = ACNGL(N)
		set TSOARRAY("ZSTAT") = STAT(N)		// Stat Code (for BHI)
		set TSOARRAY("ZARES") = CNTRY(N)	// Country Code (for BHI)
			
		do IN^UTSO(.TSOARRAY(),.TSO)
			
		set ttx(CNT).tso = TSO
		set ttx(CNT).crcd = fT.crcd
		set ttx(CNT).vdt = fT.vdt
		set ttx(CNT).cc = fT.cc
		set ttx(CNT).bcrcd = fT.crcd
		set ttx(CNT).tcmt = ACNPST(N).piece("|", 8)
	}
	
	if (CNT < 2) do { quit			// Need at least two transactions
		
		set ER = 1
		// No account information entered
		set RM = $$^MSG(1885)
	}
	
	do TRNSET^TRNDRV(.ttx(), TPD, BRCD, 1, , .REJ(), , , .OM())
	
	if REJ.data() do {
	
		set ER = 1
		if 'RM.exists() do {
		
			if REJ(1).exists() set RM = REJ(1).piece("|", 2)
			// Transaction rejected by transaction handler
			if RM.get().isNull() set RM = $$^MSG(2737)
		}
	}
	
	quit:ER
	
	// Update support tables for primary transactions
	do SUPTTBLS^ITUTIL(ITSCODE, DEALID, EFD, PDATE, BRCD, .ttx(), .OM())

	quit
	

SCREEN(RecordTTX ttx(),		// Loaded transactions
       Number CNT,		// Number of elements in ttx() array
       RecordTTX fT)		// First transaction record		MECH=REF:W
       
	/*
	Set up variables to paint screen

	This function takes information that is stored in a transaction array
	and formats it in a method in necessary to display the information
	on screen.

	RETURNS:
		. $$		Error indicator			/TYP=L
		. ACNPST	Array containing the lower postings
				(The base currency postings)
		. DRCR		Array containing the character representation
				of the Debit/Credit flag for the lower postings.
		. ACNGL		Array containing the ACNGL indicators for the
				base currency postings.
		. STAT		Array containing the Statistical codes for the
				base currency postings (lower half of FCV screen)
		. CNTRY		Array containing the country codes for the
				base currency postings (lower half of FCV screen)
	*/
	
	type public Date EFD
	type public String ACCTTL, ACNGL(), ACNPST(), CNTRY(), DEALID, DRCR(), STAT()
	
	type Number I
	type String TSO
	
	if 'ttx(1).exists() quit 0
	
	set fT = ttx(1).copy()
	
	set TSO = fT.tso
	
	// Now read in the detail items
	for I = 1:1:CNT do {
		
		type String X
		
		set X = ""
		
		set X.piece("|", 1) = ttx(I).cid
		set X.piece("|", 2) = ttx(I).itc
		set X.piece("|", 4) = ttx(I).tamt
		set X.piece("|", 8) = ttx(I).tcmt
		
		set ACNPST(I) = X
		
		set TSO = ttx(I).tso
		set ACNGL(I) = $$FIELD^UTSO(TSO, "ACNGL")
		set STAT(I) = $$FIELD^UTSO(TSO, "STAT")
		set CNTRY(I) = $$FIELD^UTSO(TSO, "CNTRY")
		
		if (ttx(I).itc.extract(1) = 1) set DRCR(I) = "CR"
		else  set DRCR(I) = "DR"
	}
		
	quit 1

vSIG()	quit "60302^36271^Dan Russell^9935"	// Signature - LTD^TIME^USER^SIZE
