R01S696	// UBAL06A - Account Balance Verification Utility
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:55 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String EFD,TYPE
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="UBAL06A"
	set RN="Account Balance Verification Utility"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String EFD,TYPE
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,RID,RN,SKIP,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc19,vovc2,vovc20,vovc21,vovc22,vovc23,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="UBAL06A",RN="Account Balance Verification Utility"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","UBAL06A","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DTJ]TJD#1#10,[ACN]CLS#22#1,[ACN]GRP#39#12,[ACN]TYPE#62#6,[DTJ]GLSC#74#4,[DTJ]CC#81#6,[DTJ]CID#98#12,[DTJ]TSEQ#126#6"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="DTJ.TJD NOT <:EFD AND DTJ.TYPE=:TYPE"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Account Balance Verification Utility"
		set VBNRINFO("PGM")="R01S696"
		set VBNRINFO("RID")="UBAL06A"
		set VBNRINFO("TABLES")="DTJ,ACN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DTJ]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DTJ]DATETIME"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DTJ]CID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DTJ]TSEQ"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,ACN]CLS"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,ACN]GRP"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,ACN]TYPE"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DTJ.CID,DTJ.TSEQ,DTJ.ITC,DTJ.ETC,DTJ.TAMT,DTJ.EFD,DTJ.TLO,DTJ.TSO,DTJ.TCMT,DTJ.CDT,DTJ.TIME,DTJ.BRCD,DTJ.TRC,DTJ.UID,DTJ.SPR,DTJ.TSB,DTJ.XHS16,DTJ.CRCD,DTJ.TJD,DTJ.DATETIME,ACN.CLS,ACN.GRP,ACN.TYPE,DTJ.GLSC,DTJ.CC","DTJ,ACN","DTJ.TJD NOT <:EFD AND DTJ.TYPE=:TYPE","DTJ.TJD,DTJ.DATETIME,DTJ.CID,DTJ.TSEQ,ACN.CLS,ACN.GRP,ACN.TYPE","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc19,vovc20,vovc1,vovc2,vovc21,vovc22,vovc23
	set vovc19="",vovc20="",vovc1="",vovc2="",vovc21="",vovc22="",vovc23=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc19,vc19,vovc20,vc20,vovc1,vc1,vovc2,vc2,vovc21,vc21,vovc22,vc22,vovc23,vc23
	set vovc19=vc19,vovc20=vc20,vovc1=vc1,vovc2=vc2,vovc21=vc21,vovc22=vc22,vovc23=vc23
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25
	set vc1=V.piece($C(9),1)			// DTJ.CID
	set vc2=V.piece($C(9),2)			// DTJ.TSEQ
	set vc3=V.piece($C(9),3)			// DTJ.ITC
	set vc4=V.piece($C(9),4)			// DTJ.ETC
	set vc5=V.piece($C(9),5)			// DTJ.TAMT
	set vc6=V.piece($C(9),6)			// DTJ.EFD
	set vc7=V.piece($C(9),7)			// DTJ.TLO
	set vc8=V.piece($C(9),8)			// DTJ.TSO
	set vc9=V.piece($C(9),9)			// DTJ.TCMT
	set vc10=V.piece($C(9),10)			// DTJ.CDT
	set vc11=V.piece($C(9),11)			// DTJ.TIME
	set vc12=V.piece($C(9),12)			// DTJ.BRCD
	set vc13=V.piece($C(9),13)			// DTJ.TRC
	set vc14=V.piece($C(9),14)			// DTJ.UID
	set vc15=V.piece($C(9),15)			// DTJ.SPR
	set vc16=V.piece($C(9),16)			// DTJ.TSB
	set vc17=V.piece($C(9),17)			// DTJ.XHS16
	set vc18=V.piece($C(9),18)			// DTJ.CRCD
	set vc19=V.piece($C(9),19)			// DTJ.TJD
	set vc20=V.piece($C(9),20)			// DTJ.DATETIME
	set vc21=V.piece($C(9),21)			// ACN.CLS
	set vc22=V.piece($C(9),22)			// ACN.GRP
	set vc23=V.piece($C(9),23)			// ACN.TYPE
	set vc24=V.piece($C(9),24)			// DTJ.GLSC
	set vc25=V.piece($C(9),25)			// DTJ.CC
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18
	// If this TSEQ is in HIST and matches, then skip

	type Public Number SKIP

	type Number CID,TSEQ

	set SKIP=1

	set CID=vc1
	set TSEQ=vc2
	type RecordHIST hist=Db.getRecord("HIST","CID=:CID,TSEQ=:TSEQ",1)

	if 'hist.getMode() set SKIP=0 		// No history record

	else  if hist.itc'=vc3 set SKIP=0
	else  if hist.etc'=vc4 set SKIP=0
	else  if hist.tamt'=vc5 set SKIP=0
	else  if hist.efd'=vc6 set SKIP=0
	else  if hist.tlo'=vc7 set SKIP=0
	else  if hist.tso'=vc8 set SKIP=0
	else  if hist.tcmt'=vc9 set SKIP=0
	else  if hist.cdt'=vc10 set SKIP=0
	else  if hist.time'=vc11 set SKIP=0
	else  if hist.brcd'=vc12 set SKIP=0
	else  if hist.trc'=vc13 set SKIP=0
	else  if hist.uid'=vc14 set SKIP=0
	else  if hist.spr'=vc15 set SKIP=0
	else  if hist.tsb'=vc16 set SKIP=0
	else  if hist.xhs16'=vc17 set SKIP=0
	else  if hist.crcd'=vc18 set SKIP=0

	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=EFD,TYPE
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc19,vovc19,vc20,vovc20,vc1,vovc1,vc2,vovc2,vc21,vovc21,vc22,vovc22,vc23,vovc23
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(vovc19'=vc19) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1
	if vb2!(+vovc20'=+vc20) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1
	if vb3!(+vovc1'=+vc1) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1
	if vb4!(+vovc2'=+vc2) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1
	if vb5!(vovc21'=vc21) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1
	if vb6!(vovc22'=vc22) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(7)=VT(7)+1
	quit

VDTL4	// Detail
	type public String %TIM,EFD,IOSL,SKIP,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc19,vovc2,vovc20,vovc21,vovc22,vovc23,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J($$DAT^%ZM(vc19),10)
	set VL=VL_$J("",21-VL.length())_$E(vc21,1,1)
	set VL=VL_$J("",38-VL.length())_$E(vc22,1,12)
	set VL=VL_$J("",51-VL.length())_$J(vc23,16)
	set VL=VL_$J("",73-VL.length())_$E(vc24,1,4)
	set VL=VL_$J("",78-VL.length())_"/"
	set VL=VL_$J("",80-VL.length())_$J(vc25,6)
	set VL=VL_$J("",87-VL.length())_$J(vc1,22)
	set V=vc2,VO=V set V=$J(V,21) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",110-VL.length())_V		// [SYSDEV,DTJ]TSEQ
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,EFD,RID,RN,SKIP,TYPE,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc19,vovc2,vovc20,vovc21,vovc22,vovc23,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"System            Product          Product               Product                                   Account           Transaction"
	do VOM
	set VL="Processing Date      Class            Group                    Type      GLSC / CC                     Number            Sequence #"
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,DTJ]TSEQ

	/*  Revision history

	06/03/06 - SmithCD - CR 21450
		   Added V to list to null out so this field itself does 
		   not show on the report.

	*/

	type public Number SKIP
	type public String V,VL

	if SKIP set (V,VL)=""
	quit
