R01S125	// SCA054 - Currency Transaction Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:42 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number TCSHIN
	type Number TCSHOUT
	type Date VIN3

	set RID="SCA054"
	set RN="Currency Transaction Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("TCSHIN")="|12|||||||$|Total Cash-In Threshold||||2|"
	set %TAB("TCSHOUT")="|12|||||||$|OR Total Cash-Out Threshold||||2|"
	set %TAB("VIN3")="|10||[DAYENDCSH]TJD|[DAYENDCSH]TJD:DISTINCT:NOVAL||S RNDT=X||D|Transaction Date is equal to|||||"

	set %READ="IO/REQ,TCSHIN#0,TCSHOUT#0,VIN3#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=31
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN3
	type public Number TCSHIN,TCSHOUT
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA054",RN="Currency Transaction Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA054","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",3)="WC1|"_"Transaction Date is equal to"_"|VIN3|"_$$DAT^%ZM(VIN3.get(),%MSKD)

		set VWHERE="DAYENDCSH.TJD=:VIN3"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Currency Transaction Report"
		set VBNRINFO("PGM")="R01S125"
		set VBNRINFO("RID")="SCA054"
		set VBNRINFO("TABLES")="DAYENDCSH,ACN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DAYENDCSH]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DAYENDCSH]""CSH"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DAYENDCSH]ACN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DAYENDCSH]SEQ"

		set VBNRINFO("DOC",1)="In order to report to the government currency transactions, which meet or"
		set VBNRINFO("DOC",2)="exceed threshold this report tracks customer records and accounts associated"
		set VBNRINFO("DOC",3)="with the transactions."
		set VBNRINFO("DOC",4)="The report searches Daily Miscellanies Journal on a particular date and for"
		set VBNRINFO("DOC",5)="each cash transaction it builds global entry ^DAYEND (TJD,""CSH"",ACN,SEQ) for"
		set VBNRINFO("DOC",6)="each customer and his account transactions associated with this cash"
		set VBNRINFO("DOC",7)="transaction."
		set VBNRINFO("DOC",8)="Besides, there is a temporary file TMPFILE ($J, ACN, SEQ) that keeps"
		set VBNRINFO("DOC",9)="information about cash transaction associated with each customer and aggregated"
		set VBNRINFO("DOC",10)="amount for cash-in and cash-out transactions."
		set VBNRINFO("DOC",11)=" "
		set VBNRINFO("DOC",12)="For each cash transaction section GETSEQ determine if this transaction was"
		set VBNRINFO("DOC",13)="posted along with another cash transactions on a teller-posting screen. If it"
		set VBNRINFO("DOC",14)="was (flag TRNSTAT), CSHAMT array keeps accumulated values for cash-in and"
		set VBNRINFO("DOC",15)="cash-out transactions on that teller-posting screen in order to associate both"
		set VBNRINFO("DOC",16)="values with each account transaction. Besides, the processing defines new"
		set VBNRINFO("DOC",17)="variable MULTI (TJD, DATETIME, MSEQ) where MSEQ is a teller-posting screens"
		set VBNRINFO("DOC",18)="number (for example 3000). It is used in FINDDMJ section to skip next cash"
		set VBNRINFO("DOC",19)="transaction if this transaction belongs to the same teller screen because it"
		set VBNRINFO("DOC",20)="should not be processed second time."
		set VBNRINFO("DOC",21)="The process loops through all transactions for the teller posting screen and"
		set VBNRINFO("DOC",22)="for each account transaction calls GETCIF section to find the customer and"
		set VBNRINFO("DOC",23)="account number associated with this transaction. If the account has secondary"
		set VBNRINFO("DOC",24)="CIF linked to it, for this secondary owner will be created the entry in ^DAYEND"
		set VBNRINFO("DOC",25)="as well. Section SETCIF is called for each customer record to build ^DAYEND"
		set VBNRINFO("DOC",26)="entry. The SETCIF section also builds entry for TMPFILE. "
		set VBNRINFO("DOC",27)="The following is example of TMPFILE:"
		set VBNRINFO("DOC",28)="TMPFILE (541752473,1682)=""|19440"""
		set VBNRINFO("DOC",29)="TMPFILE (541752473,1682,1)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",30)="TMPFILE (541752473,1682,2)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",31)="TMPFILE (541752473,55555)=""232|29440"""
		set VBNRINFO("DOC",32)="TMPFILE (541752473,55555,1)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",33)="TMPFILE (541752473,55555,2)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",34)="TMPFILE (541752473,55555,3)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",35)="TMPFILE (541752473,55555,4)=""200.00|CI|||2000"""
		set VBNRINFO("DOC",36)="TMPFILE (541752473,55555,5)=""||32|10000|3000"""
		set VBNRINFO("DOC",37)="TMPFILE (541752473,55555,6)=""||32|10000|3000"""
		set VBNRINFO("DOC",38)="TMPFILE (541752473,55555,7)=""||32|10000|3000"""
		set VBNRINFO("DOC",39)="If the cash transaction was posted along with other cash transactions on one"
		set VBNRINFO("DOC",40)="teller-posting screen (flag MULTIFLAG) the cash-in amount of the transaction"
		set VBNRINFO("DOC",41)="will be written to piece 3 and cash-out amount - in piece 4.   "
		set VBNRINFO("DOC",42)=" 	TMPFILE (541752473,55555,5)=""||32|10000|3000"""
		set VBNRINFO("DOC",43)="	($32.00 cash-in and $10,000.00 cash-out on the teller screen 3000"
		set VBNRINFO("DOC",44)="associated with 5th transaction of customer 55555)"
		set VBNRINFO("DOC",45)="	"
		set VBNRINFO("DOC",46)="If there was a single transaction the cash-in amount of the transaction will be"
		set VBNRINFO("DOC",47)="written to piece 1 and transaction code in piece 2."
		set VBNRINFO("DOC",48)="	TMPFILE (541752473,55555,1)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",49)="	($19.00 cash-out on the teller screen 1000 associated with 1st"
		set VBNRINFO("DOC",50)="transaction of customer 55555)"
		set VBNRINFO("DOC",51)="Piece 5 defines the teller-posting screen number (MSEQ from MULTI (TJD,"
		set VBNRINFO("DOC",52)="DATETIME, MSEQ)). "
		set VBNRINFO("DOC",53)="TMPFILE (541752473,55555)=""|19440"""
		set VBNRINFO("DOC",54)="TMPFILE (541752473,55555,1)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",55)="TMPFILE (541752473,55555,2)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",56)="TMPFILE (541752473,55555,3)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",57)="The example above means that on one teller-posting screen were posted three"
		set VBNRINFO("DOC",58)="account transactions, which belongs to customer number 55555."
		set VBNRINFO("DOC",59)="For each entry in TMPFILE there is an entry in ^DAYEND"
		set VBNRINFO("DOC",60)=" "
		set VBNRINFO("DOC",61)="TMPFILE (541752473,55555,1)=""19440.00|CO|||1000"""
		set VBNRINFO("DOC",62)="^DAYEND(59000,""CSH"",55555,1)=10646|11|DD|1000.00||ANTONOVS\0|||58490|35754|0|1001|1682||||USD|1||19440.00|||58157.09|1|1000.00|||||||USD||||"
		set VBNRINFO("DOC",63)="To report the customer, total cash-in or cash-out amount should meet or exceed"
		set VBNRINFO("DOC",64)="threshold amount that is defined by user on the report prompt. If both amounts"
		set VBNRINFO("DOC",65)="meet or exceed the threshold then all transactions reported for the customer."
		set VBNRINFO("DOC",66)="If only one (cash-out) threshold was exceeded - only cash-out transactions and"
		set VBNRINFO("DOC",67)="transactions that were posted with another cash transactions on teller-posting"
		set VBNRINFO("DOC",68)="screen are reported."
		set VBNRINFO("DOC",69)="Total cash-in and cash-out amounts printed in a Customer Number Subtotals"
		set VBNRINFO("DOC",70)="section of the report includes only transactions that were printed."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DAYENDCSH.TJD,DAYENDCSH.ACN,DAYENDCSH.SEQ,DAYENDCSH.BRCDE,DAYENDCSH.TAMT,DAYENDCSH.CID,DAYENDCSH.UIDT,DAYENDCSH.ETC,ACN.GRP,DAYENDCSH.TRC,ACN.TYPE,DAYENDCSH.ITC","DAYENDCSH,ACN","DAYENDCSH.TJD=:VIN3","DAYENDCSH.TJD,DAYENDCSH.ACN,DAYENDCSH.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12
	set vc1=V.piece($C(9),1)			// DAYENDCSH.TJD
	set vc2=V.piece($C(9),2)			// DAYENDCSH.ACN
	set vc3=V.piece($C(9),3)			// DAYENDCSH.SEQ
	set vc4=V.piece($C(9),4)			// DAYENDCSH.BRCDE
	set vc5=V.piece($C(9),5)			// DAYENDCSH.TAMT
	set vc6=V.piece($C(9),6)			// DAYENDCSH.CID
	set vc7=V.piece($C(9),7)			// DAYENDCSH.UIDT
	set vc8=V.piece($C(9),8)			// DAYENDCSH.ETC
	set vc9=V.piece($C(9),9)			// ACN.GRP
	set vc10=V.piece($C(9),10)			// DAYENDCSH.TRC
	set vc11=V.piece($C(9),11)			// ACN.TYPE
	set vc12=V.piece($C(9),12)			// DAYENDCSH.ITC
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

 type public Date RNDT
 type public Number NUM, NUL, PT, VFMQ
 type public String TMPFILE(,,)
 
 set (NUM,NUL,PT) = 0
 
 do Db.fastDelete("DAYENDCSH", "TJD = :RNDT")

 do FINDDMJ

 if 'TMPFILE.data() set VFMQ = 1
 
 quit


FINDDMJ	// Define account number for each transaction, set DAYENDCSH entries

 type public Date RNDT
 
 type Date TPD
 type Number ACN, BRCD, CID, DATETIME, MSEQ, MULTI(,,), TRC, TSEQ
 type String CLS, UID
 
 type DbSet ds = Db.selectDbSet("DMJ", "TJD = :RNDT")
 while ds.next() do {
 	
	type RecordDMJ dmj = ds.getRecord("DMJ")
	
	do CONVDMJ(.dmj)
 
	if $$CASH^TTXEXT(dmj.etc) = "" quit	// Not a cash transaction

	set CID = dmj.cid
	set DATETIME = dmj.datetime
	set TSEQ = dmj.tseq
	set TRC = dmj.trc
	set TPD = RNDT
	set MSEQ = ((TRC \ 1000) * 1000)
	set BRCD = dmj.brcd	
	set UID = dmj.uid
	
	if 'MULTI(RNDT,DATETIME,MSEQ).get().isNull() quit
	
	type RecordTPCTRL tpctrl = Db.getRecord("TPCTRL", "BRCD = :BRCD, UID = :UID, TPD = :RNDT", 1)

	if dmj.itc8,'tpctrl.pmdate.isNull(),(TRC > tpctrl.lsttrn) set TPD = tpctrl.pmdate

	do GETSEQ(.dmj)
 	}
 
 quit
 
 
GETSEQ(RecordDMJ dmj)
 
 // Loop through all teller screen that include this transaction

 type public Cache %CACHE()
 type public Date RNDT
 type public Number BRCD, DATETIME, MSEQ, MULTI(,,), TRC
 type public String UID

 type Boolean CSHFLAG, MULTIFLAG, TRNSTAT
 type Number CSHAMT(), END, I

 set (CSHFLAG,TRNSTAT,MULTIFLAG) = 0
 
 set END = (((TRC \ 1000) + 1) * 1000)
 
 for I = 0,1 set CSHAMT(I) = 0	// Used to store cash amounts for multiple trans

 type DbSet ds = Db.selectDbSet("TTX", "TJD=:TPD AND BRCD=:BRCD AND UID=:UID AND TSEQ>:MSEQ AND TSEQ<:END")
 while ds.next() do {
 	
 	type RecordTTX ttx = ds.getRecord("TTX")

	do CONVTTX(.ttx)

	if $$CASH^TTXEXT(ttx.etc) '= "" do {	// Process cash transaction
 
		// There are multiple CO/CI transactions on one teller screen
		if CSHFLAG set TRNSTAT = 1
		
		set CSHFLAG = 1
		
		if ttx.etc = "CI" set CSHAMT(0) = CSHAMT(0) + ttx.tamt
		if ttx.etc = "CO" set CSHAMT(1) = CSHAMT(1) + ttx.tamt
 		}
 	}
	
 type DbSet ds1 = Db.selectDbSet("TTX", "TJD=:TPD AND BRCD=:BRCD AND UID=:UID AND TSEQ>:MSEQ AND TSEQ<:END")
 while ds1.next() do {
 	
 	type RecordTTX ttx = ds1.getRecord("TTX")

	do CONVTTX(.ttx)

 	if ttx.brcde.isNull() set ttx.brcde = BRCD
	if ttx.uidt.isNull() set ttx.uidt = UID
	
	if $$CASH^TTXEXT(ttx.etc) '= "" quit	// Skip cash transaction 

	type RecordTRN trn = %CACHE("TRN").getRecord("TRN", "ETC=:ttx.etc")
	
	if trn.trntyp > 0 quit		// CI, CO, CH or CK tran code
	
	if ttx.itc6 + ttx.itc12 quit	// Reversal or error correction
	
	if (trn.cls '= "D"),(trn.cls '= "L") quit
	
	if TRNSTAT do {
		
		if MULTI(RNDT,DATETIME,MSEQ).get().isNull() set MULTI(RNDT,DATETIME,MSEQ) = 1
		set MULTIFLAG = 1
		}
		
	do GETCIF(.dmj,.ttx)
 	}
 
 quit


GETCIF(RecordDMJ dmj,RecordTTX ttx)

 // Find all customer records associated with cash transaction

 type RecordACN acn = Db.getRecord("ACN", "CID = :ttx.cid", 1)
 
 if ('acn.getMode() ! (acn.cls = "*")) quit
 
 if acn.cls = "D" do {
 	
	type String CNUM = $$XDEP08^DEPCDI(acn.cid)
	if 'CNUM.piece("|",1).isNull() do SETCIF(.dmj,.ttx,CNUM.piece("|",1))
	if 'CNUM.piece("|",2).isNull() do SETCIF(.dmj,.ttx,CNUM.piece("|",2))
	if 'CNUM.piece("|",3).isNull() do SETCIF(.dmj,.ttx,CNUM.piece("|",3))
 	}
 	
 if acn.cls = "L" do {
 	
	type String CNUM = $$XLN14^LNCDI(acn.cid)
	if 'CNUM.piece("|",1).isNull() do SETCIF(.dmj,.ttx,CNUM.piece("|",1))
	if 'CNUM.piece("|",2).isNull() do SETCIF(.dmj,.ttx,CNUM.piece("|",2))
	if 'CNUM.piece("|",3).isNull() do SETCIF(.dmj,.ttx,CNUM.piece("|",3))
 	}
 
 do SETCIF(.dmj,.ttx,acn.acn)
 
 quit
 

SETCIF(RecordDMJ dmj,RecordTTX ttx,Number ACN)

 type public Boolean MULTIFLAG
 type public Date RNDT
 type public Number MSEQ, CSHAMT()
 type public String TMPFILE(,,)

 type Boolean ACCUMTOT = $$FINDCASH(ACN)
 type Number NSEQ
	
 set NSEQ = Db.nextVal("DAYENDCSH","RNDT,ACN")
 
 type RecordDAYENDCSH csh = Db.getRecord("DAYENDCSH", "TJD = :RNDT, ACN = :ACN, SEQ = :NSEQ", 1)
 
 set csh.cid = ttx.cid
 set csh.itc = ttx.itc
 set csh.etc = ttx.etc
 set csh.tamt = ttx.tamt
 set csh.efd = ttx.efd
 set csh.tlo = ttx.tlo
 set csh.tso = ttx.tso
 set csh.tcmt = ttx.tcmt
 set csh.cdt = ttx.cdt
 set csh.tim = ttx.tim
 set csh.brcde = ttx.brcde
 set csh.trc = ttx.trc
 set csh.uidt = ttx.uidt
 set csh.spr = ttx.spr
 set csh.lnerc = ttx.lnerc
 set csh.vdt = ttx.vdt
 
 if MULTIFLAG do {
 	
 	if ttx.itc1 set csh.csin = ttx.tamt
	if 'ttx.itc1 set csh.csout = ttx.tamt
	} 	
 else  do {
 	
	if dmj.etc = "CI" set csh.csin = dmj.tamt
	if dmj.etc = "CO" set csh.csout = dmj.tamt
 	}

 do csh.bypassSave()
 
 if 'TMPFILE(%ProcessID,ACN).data() set TMPFILE(%ProcessID,ACN) = ""
  
 if MULTIFLAG do { quit
 
	if ACCUMTOT do {

		set TMPFILE(%ProcessID,ACN).piece("|",1) = TMPFILE(%ProcessID,ACN).piece("|",1) + CSHAMT(0)

		set TMPFILE(%ProcessID,ACN).piece("|",2) = TMPFILE(%ProcessID,ACN).piece("|",2) + CSHAMT(1)
		}

	set TMPFILE(%ProcessID,ACN,NSEQ).piece("|",1) = ""
	set TMPFILE(%ProcessID,ACN,NSEQ).piece("|",2) = ""
	if ttx.itc1 set TMPFILE(%ProcessID,ACN,NSEQ).piece("|",3) = ttx.tamt
	if 'ttx.itc1 set TMPFILE(%ProcessID,ACN,NSEQ).piece("|",4) = ttx.tamt
	set TMPFILE(%ProcessID,ACN,NSEQ).piece("|",5) = MSEQ
 	}

 if ACCUMTOT do {
 	
	if dmj.etc = "CI" set TMPFILE(%ProcessID,ACN).piece("|",1) = TMPFILE(%ProcessID,ACN).piece("|",1) + dmj.tamt
	
	// Accumulate trn's total amount
	if dmj.etc = "CO" set TMPFILE(%ProcessID,ACN).piece("|",2) = TMPFILE(%ProcessID,ACN).piece("|",2) + dmj.tamt
 	}

 set TMPFILE(%ProcessID,ACN,NSEQ).piece("|",1) = dmj.tamt
 set TMPFILE(%ProcessID,ACN,NSEQ).piece("|",2) = dmj.etc
 set TMPFILE(%ProcessID,ACN,NSEQ).piece("|",5) = MSEQ
 
 quit


CONVDMJ(RecordDMJ dmj)

 if (dmj.crcd.isNull() ! (dmj.crcd = %SystemCurrency))&(dmj.bcrcd.isNull() ! (dmj.bcrcd = %SystemCurrency)) quit
 
 if (dmj.crcd '= %SystemCurrency),'dmj.crcd.isNull() set dmj.tamt = $$CONV^CRCDUTL(dmj.tamt,%SystemCurrency,dmj.crcd)

 if (dmj.crcd.isNull() ! (dmj.crcd = %SystemCurrency))&('dmj.bcrcd.isNull() ! (dmj.bcrcd '= %SystemCurrency)) set dmj.tamt = $$CONV^CRCDUTL(dmj.bseamt,%SystemCurrency,dmj.bcrcd)

 if (dmj.crcd '= %SystemCurrency) set dmj.bcrcd = %SystemCurrency

 if (dmj.tamt < dmj.sysbase) set dmj.tamt = dmj.sysbase
 
 quit


CONVTTX(RecordTTX ttx)

 if (ttx.crcd.isNull() ! (ttx.crcd = %SystemCurrency))&(ttx.bcrcd.isNull() ! (ttx.bcrcd = %SystemCurrency)) quit
 
 if (ttx.crcd '= %SystemCurrency),'ttx.crcd.isNull() set ttx.tamt = $$CONV^CRCDUTL(ttx.tamt,%SystemCurrency,ttx.crcd)

 if (ttx.crcd.isNull() ! (ttx.crcd = %SystemCurrency))&('ttx.bcrcd.isNull() ! (ttx.bcrcd '= %SystemCurrency)) set ttx.tamt = $$CONV^CRCDUTL(ttx.bseamt,%SystemCurrency,ttx.bcrcd)

 if (ttx.crcd '= %SystemCurrency) set ttx.bcrcd = %SystemCurrency

 if (ttx.tamt < ttx.sysbase) set ttx.tamt = ttx.sysbase
 
 quit
 

FINDCASH(Number ACN)	// If cash amount was accumulated - return 0

 type public Date RNDT
 type public Number BRCD, MSEQ
 type public String TMPFILE(,,)

 type String SS = ""
 type Number FL = 0

 for  set SS = TMPFILE(%ProcessID,ACN,SS).order() quit:SS.isNull()  do {
 	
 	type RecordDAYENDCSH dcsh = Db.getRecord("DAYENDCSH", "TJD = :RNDT, ACN = :ACN, SEQ = :SS", 1)
 
	if (TMPFILE(%ProcessID,ACN,SS).piece("|",5) = MSEQ),(dcsh.brcde = BRCD) set FL = 1
 	}

 quit 'FL
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),CSHIN,CSHOUT
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+CSHIN			// @TOT(<<CSHIN>>)
	set VT(4,2,1)=VT(4,2,1)+CSHOUT			// @TOT(<<CSHOUT>>)
	quit

VDTL4	// Detail
	type public String IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh()

	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set V=vc2,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,12) set VL=V
	do VP2 quit:VFMQ!verror.get()  set V=$E(NAM,1,40)
	set VL=VL_$J("",15-VL.length())_V
	set V=$E(TAXID,1,11) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",58-VL.length())_V
	set VL=VL_$J("",70-VL.length())_$J(vc4,7)
	set VL=VL_$J("",78-VL.length())_$J(vc5,16)
	do VP4 quit:VFMQ!verror.get()  set V=$E(DC,1,2)
	set VL=VL_$J("",95-VL.length())_V
	set VL=VL_$J("",101-VL.length())_$J(CSHIN,12,2)
	set V=vc6,VO=V set V=$J(V,17) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",114-VL.length())_V		// [SYSDEV,DAYENDCSH]CID
	if 'VL.translate(" ").isNull() do VOM
	set V=$E(ADDR(1),1,40) do VP6 quit:VFMQ!verror.get()  set VL="               "_V
	set VL=VL_$J("",61-VL.length())_$J(vc7,16)
	set VL=VL_$J("",78-VL.length())_$J(vc8,16)
	set VL=VL_$J("",101-VL.length())_$J(CSHOUT,12,2)
	set V=vc9,VO=V set V=$J(V,4) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",127-VL.length())_V		// [SYSDEV,ACN]GRP
	if 'VL.translate(" ").isNull() do VOM
	set V=$E(ADDR(2),1,40) do VP8 quit:VFMQ!verror.get()  set VL="               "_V
	set VL=VL_$J("",56-VL.length())_$J(vc10,21)
	set V=vc11,VO=V set V=$J(V,53) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",78-VL.length())_V		// [SYSDEV,ACN]TYPE
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM4	// Summary
	type public String I,IOSL,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh()

	if 'VT(4) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	do VP10 quit:VFMQ!verror.get()  set V=$E(TOTLINE,1,14) set VL="                                                                                                    "_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                  "_"Total Cash-in:"
	set V=VT(4,1,1)					// @TOT(<<CSHIN>>,)
	set V=$J(V,12,2) do VP11 quit:VFMQ!verror.get()
	set VL=VL_$J("",101-VL.length())_V		// @TOT(<<CSHIN>>,)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                 "_"Total Cash-out:"
	set V=VT(4,2,1)					// @TOT(<<CSHOUT>>,)
	set V=$J(V,12,2) do VP12 quit:VFMQ!verror.get()
	set VL=VL_$J("",101-VL.length())_V		// @TOT(<<CSHOUT>>,)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,VL,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA054)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$J($$DAT^%ZM(RNDT),10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	do VP13 quit:VFMQ!verror.get()  set V="CIF #   Customer Name" set VL="       "_V
	set VL=VL_$J("",58-VL.length())_"TIN/SIN      Branch      Tran Amount            Cash-in           Account"
	do VOM
	set VL="               "_"Customer Address                                        Teller        Tran Code           Cash-out             Group"
	do VOM
	set VL="               "_"City State ZIP                                           Seq #                                                  Type"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,DAYENDCSH]ACN

	type public String vc2,vc3
 /*
  ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                  Converted into PSL.
 
 */

 type public Boolean NODSP, SKIPIN, SKIPOUT
 type public Number NUL, NUM, PT, TCSHIN, TCSHOUT
 type public String ADDR(), TMPFILE(,,), V

 if (NUM = V),(PT '= 1) set NUL = 1

 set NUM = vc2

 // Create address entries in ADDR()
 do ^UTLADDR(,"ADDR",2,"","CIF",NUM)

 set (SKIPIN,SKIPOUT) = 0

 if (TMPFILE(%ProcessID,NUM).piece("|",1) < TCSHIN) set SKIPIN = 1
 if (TMPFILE(%ProcessID,NUM).piece("|",2) < TCSHOUT) set SKIPOUT = 1

 set (CSHIN,CSHOUT) = 0

 if SKIPIN,SKIPOUT quit		// Display nothing at all

 if 'SKIPIN do {
 
 	if TMPFILE(%ProcessID,vc2,vc3).piece("|",2) = "CI" set CSHIN = TMPFILE(%ProcessID,vc2,vc3).piece("|",1)
 
 	if TMPFILE(%ProcessID,vc2,vc3).piece("|",2).isNull() set CSHIN =TMPFILE(%ProcessID,vc2,vc3).piece("|",3)
	}
 
 if 'SKIPOUT do {
 
 	if TMPFILE(%ProcessID,vc2,vc3).piece("|",2) = "CO" set CSHOUT = TMPFILE(%ProcessID,vc2,vc3).piece("|",1)
 
 	if TMPFILE(%ProcessID,vc2,vc3).piece("|",2).isNull() set CSHOUT = TMPFILE(%ProcessID,vc2,vc3).piece("|",4)
	}

 // Ensure that customer name and address are only displayed once
 if 'NODSP,(CSHIN ! CSHOUT) set NUL = 0,NODSP = 1
 
	quit

VP2	// Column pre-processor - Variable: NAM

	type public String vc2
 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public String NAM, TAXID

 type Number ACN = vc2

 type RecordCIF cif = Db.getRecord("CIF", "ACN = :ACN", 1)

 set NAM = cif.nam

 set TAXID = cif.taxid
	quit

VP3	// Column post-processor - Variable: TAXID

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Number NUL
 type public String V, VL

 if NUL set (V,VL) = "" quit

	quit

VP4	// Column pre-processor - Variable: DC

	type public String vc12
 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public String DC

 set DC = $S(vc12.extract():"CR",1:"DR")
	quit

VP5	// Column post-processor - [SYSDEV,DAYENDCSH]CID

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */
 
 type public Boolean SKIPIN, SKIPOUT
 type public Number CSHIN, CSHOUT
 type public String V, VL
 
 if SKIPIN,SKIPOUT set (V,VL) = "" quit
 if 'CSHOUT,SKIPIN set (V,VL) = "" quit
 if 'CSHIN,SKIPOUT set (V,VL) = "" quit
	quit

VP6	// Column post-processor - Variable: ADDR(1)

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Number NUL
 type public String V, VL

 if NUL set (V,VL) = "" quit

	quit

VP7	// Column post-processor - [SYSDEV,ACN]GRP

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Boolean SKIPIN, SKIPOUT
 type public Number CSHIN, CSHOUT
 type public String V, VL
 
 if SKIPIN,SKIPOUT set (V,VL) = "" quit
 if 'CSHOUT,SKIPIN set (V,VL) = "" quit
 if 'CSHIN,SKIPOUT set (V,VL) = "" quit
	quit

VP8	// Column post-processor - Variable: ADDR(2)

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Number NUL, PT
 type public String V, VL

 if NUL set (V,VL) = ""

 set (NUL,PT) = 0

	quit

VP9	// Column post-processor - [SYSDEV,ACN]TYPE

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Boolean SKIPIN, SKIPOUT
 type public Number CSHIN, CSHOUT
 type public String V, VL
 
 if SKIPIN,SKIPOUT set (V,VL) = "" quit
 if 'CSHOUT,SKIPIN set (V,VL) = "" quit
 if 'CSHIN,SKIPOUT set (V,VL) = "" quit

	quit

VP10	// Column pre-processor - Variable: TOTLINE

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Boolean SKIPIN, SKIPOUT
 type public Number NUM, CSHIN, CSHOUT
 type public String TMPFILE(,,), TOTLINE, V, VL

 set TOTLINE = ""

 if SKIPIN,SKIPOUT set (V,VL) = "" quit
 if 'TMPFILE(%ProcessID,NUM).piece("|",2),SKIPIN set (V,VL) = "" quit
 if 'TMPFILE(%ProcessID,NUM).piece("|",1),SKIPOUT set (V,VL) = "" quit

 set TOTLINE = "--------------"
	quit

VP11	// Column post-processor - @TOT(<<CSHIN>>,,$,12)


 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Boolean SKIPIN, SKIPOUT
 type public Number NUM, CSHIN, CSHOUT
 type public String TMPFILE(,,), V, VL
 
 if SKIPIN,SKIPOUT set (V,VL) = "" quit
 if 'TMPFILE(%ProcessID,NUM).piece("|",2),SKIPIN set (V,VL) = "" quit
 if 'TMPFILE(%ProcessID,NUM).piece("|",1),SKIPOUT set (V,VL) = "" quit
	quit

VP12	// Column post-processor - @TOT(<<CSHOUT>>,,$,12)

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Boolean NODSP, SKIPIN, SKIPOUT
 type public Number NUM, CSHIN, CSHOUT
 type public String TMPFILE(,,), V, VL
 
 set NODSP = 0

 if SKIPIN,SKIPOUT set (V,VL) = "" quit
 if 'TMPFILE(%ProcessID,NUM).piece("|",2),SKIPIN set (V,VL) = "" quit
 if 'TMPFILE(%ProcessID,NUM).piece("|",1),SKIPOUT set (V,VL) = "" quit
	quit

VP13	// Column pre-processor - CIF #   Customer Name

 /*
  ---- Revision History ------------------------------------------------
 
        05/15/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Boolean NODSP = 0
 type public Number PT = 1

	quit
