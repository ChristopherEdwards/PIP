private DUPLCIF1(String CIFDATA, String XACN() , Number ACN)	// Duplicate CIF Checking Compiled Program
	// Last compiled:  08/22/2006 64917 - 

	// THIS IS A COMPILED ROUTINE.  Compiled by procedure DUPLCIF

	// See COMPILE^DUPLCIF for argument definitions

	type String LNAME, NACN, PERS, XNAME,VAR6,VAR2,VAR7,VAR1,VAR5,VAR4,VAR3

	set LNAME = ""
	set PERS = 0
	if CIFDATA.isNull() do {
		type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
		set LNAME = cif.lnm
		set PERS = cif.pers
		set VAR6=cif.brreg
		set VAR2=cif.dob
		set VAR7=cif.extcif
		set VAR1=cif.nam
		set VAR5=cif.pad1
		set VAR4=cif.pzip
		set VAR3=cif.sex
	}
	else  do {
		set VAR6=CIFDATA.piece($C(9),1)	// CIF.BRREG
		set VAR2=CIFDATA.piece($C(9),2)	// CIF.DOB
		set VAR7=CIFDATA.piece($C(9),3)	// CIF.EXTCIF
		set VAR1=CIFDATA.piece($C(9),4)	// CIF.NAM
		set VAR5=CIFDATA.piece($C(9),5)	// CIF.PAD1
		set VAR4=CIFDATA.piece($C(9),6)	// CIF.PZIP
		set VAR3=CIFDATA.piece($C(9),7)	// CIF.SEX
		if LNAME.isNull() do {
			if (PERS > 0) set LNAME = VAR1
			else  set LNAME = VAR1.piece(" ",2).upperCase()
		}
	}

	set XNAME = $$XNAME^XALPHA(VAR1, LNAME)
	type ResultSet cifrs=Db.select("ACN,NAM","CIF","XNAME=:XNAME AND (((UPPER(CIF.NAM)=(UPPER(:VAR1)) AND CIF.DOB=:VAR2 AND UPPER(CIF.SEX)=(UPPER(:VAR3)) AND CIF.PZIP=:VAR4 AND UPPER(CIF.PAD1)=(UPPER(:VAR5)) AND CIF.BRREG=(:VAR6)) OR (CIF.EXTCIF IS NOT NULL AND CIF.EXTCIF=(:VAR7))))")
	if cifrs.isEmpty() quit
	while cifrs.next() do {
		set NACN=cifrs.getCol("ACN")
		if NACN'=ACN.get() set XACN(NACN)=NACN_$C(9)_cifrs.getCol("NAM").upperCase()
	}

	quit
