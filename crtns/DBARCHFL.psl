DBARCHFL(RecordDBUTARCHIVE dbutarchive, String vpar, Boolean vparNorm) // DBUTARCHIVE - Archived Enabled Journals Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 11/09/2007 15:13 - chenardp
	// Generated from DATA-QWIK schema in: /profile/v72framework_gtm  by: /v72framework_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (3)              04/30/2007
	// Trigger Definition (5)                      04/16/2007
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type Public Number ER = 0
	type Public String RM

	type public String verrors()

	catch fERROR {
		if fERROR.type="%PSL-E-DBFILER" do {
			set ER = 1
			set RM = fERROR.description
		}
		else  throw fERROR
	}
	type String vx(), vxins()                              // audit column array
	type Number %O = dbutarchive.getMode()                 // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(dbutarchive,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(dbutarchive,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String ARCHTBL = dbutarchive.archtbl

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/TRIGBEF/" do VBI                            // Before insert triggers
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("ARCHTBL").exists() do vkchged quit             // Primary key changed
		if vpar["/TRIGBEF/" do VBU                            // Before update triggers
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("DBUTARCHIVE",.vx)
		set %O = 1 do vexec
		if vpar["/TRIGAFT/" do VAU                            // After update triggers
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("DBUTARCHIVE","ARCHTBL = :dbutarchive.archtbl") // No record exists
		if vpar["/TRIGBEF/" do VBD                            // Before delete triggers
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String ARCHTBL

	type RecordDBUTARCHIVE dbutarchive = Db.getRecord("DBUTARCHIVE","ARCHTBL=:ARCHTBL")
	if (%ProcessMode = 2) do {
		do dbutarchive.setMode(2)

		do DBARCHFL(dbutarchive,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordDBUTARCHIVE dbutarchive

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("DBUTARCHIVE","ARCHTBL = :dbutarchive.archtbl") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		if %O = 0, vpar'["/NOLOG/" do ^DBSLOGIT(dbutarchive,%O,.vxins())
		if %O = 1, vpar'["/NOLOG/" do ^DBSLOGIT(dbutarchive,%O,.vx())

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(dbutarchive)) S ^UTBL("DBARCHIVE",vobj(dbutarchive,-3))=vobj(dbutarchive)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordDBUTARCHIVE dbutarchive

	if vpar'["/NOLOG/" do ^DBSLOGIT(dbutarchive,3)

	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^UTBL("DBARCHIVE",vobj(dbutarchive,-3))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordDBUTARCHIVE dbutarchive

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordDBUTARCHIVE dbutarchive

	if dbutarchive.archtbl.isNull() do vreqerr("ARCHTBL") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DBUTARCHIVE","MSG",1767,"DBUTARCHIVE."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VAI //
	type public Number ER = 0
	type public String vx(),RM
	do vai1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VAU //
	type public Number ER = 0
	type public String vx(),RM
	if vx("").order().isNull() quit
	if vx("ARCHTBL").exists()!vx("INCLUDED").exists() do vau1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VBD //
	type public Number ER = 0
	type public String vx(),RM
	do vbd1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VBI //
	type public Number ER = 0
	type public String vx(),RM
	do vbi1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VBU //
	type public Number ER = 0
	type public String vx(),RM
	type public RecordDBUTARCHIVE dbutarchive
	if vx("").order().isNull() do AUDIT^UCUTILN(dbutarchive,.vx(),1,"|") quit
	if vx("ARCHWITH").exists() do vbu1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	do AUDIT^UCUTILN(dbutarchive,.vx(),1,"|")
	quit


vai1 // Trigger AFTER_INSERT - After Insert Trigger

	type public RecordDBUTARCHIVE dbutarchive
	// DBUTARCHIVE After Insert Trigger
	
	/*
	Rebuild filers for archive and included tables, and rebuild DBARCHIVE.
	
	---- Revision History -------------------------------------------------
	04/15/07 - RussellDS - CR26386
		   Created.

	-----------------------------------------------------------------------
	*/
	
	type Number i
	type String tbl
	
	do COMPILE^DBSFILB(dbutarchive.archtbl)
	
	for i = 1:1 set tbl = dbutarchive.included.piece(",", i) quit:tbl.isNull()  do COMPILE^DBSFILB(tbl)
	
	do COMPILE^DBSPROC("DBARCHIVE")

	quit

vau1 // Trigger AU_TBLS - After Update ARCHTBL or INCLUDED

	type public RecordDBUTARCHIVE dbutarchive
	// DBUTARCHIVE After Update Trigger on ARCHTBL and INCLUDED
	
	/*
	Rebuild filers for archive and included tables, and rebuild DBARCHIVE
	if archive or included tables have changed.
	
	---- Revision History -------------------------------------------------
	04/15/07 - RussellDS - CR26386
		   Created.

	-----------------------------------------------------------------------
	*/

	type Boolean wasChange = false
	type List newTbls, oldTbls
	type Number i
	
	if dbutarchive.archtbl '= dbutarchive.archtbl.oldVal do {
	
		do COMPILE^DBSFILB(dbutarchive.archtbl)
		set wasChange = true
	}
	
	set newTbls = {List}(dbutarchive.included)
	set oldTbls = {List}(dbutarchive.included.oldVal)
		
	for i = 1:1:newTbls.count() do {
			
		type String TBL
			
		set TBL = newTbls.elementAt(i)
			
		if 'oldTbls.contains(TBL) do {
		
			do COMPILE^DBSFILB(TBL)
			set wasChange = true
		}
	}
	
	if wasChange do COMPILE^DBSPROC("DBARCHIVE")

	quit

vbd1 // Trigger BEFORE_DELETE - Before Delete

	type public RecordDBUTARCHIVE dbutarchive
	// Before Delete trigger

	/* This trigger will  prevent an entry from being deleted if data has
	   already been archived, based on entries in the archive index.

	---- Revision History -------------------------------------------------
	03/01/07 - RussellDS - CR26386
		   Created.

	-----------------------------------------------------------------------
	*/

	type public Boolean ER
	type public String RM
	
	type String ARCHTBL = dbutarchive.archtbl
	
	#ACCEPT Date=03/08/07; Pgm=RussellDS; CR=25675; Group=BYPASS
	#BYPASS
	if $D(^DBARCHX(ARCHTBL)) set ER=1
	#ENDBYPASS
	
	// Cannot delete ~p1 - already has archived data
	if ER set RM = $$^MSG(6899, ARCHTBL)

	quit

vbi1 // Trigger BEFORE_INSERT - Before Insert Trigger

	type public RecordDBUTARCHIVE dbutarchive
	// DBUTARCHIVE Before Insert Trigger
	
	/*
	---- Revision History -------------------------------------------------
	03/01/07 - RussellDS - CR26386
		   Created.

	-----------------------------------------------------------------------
	*/

	type public Boolean ER
	type public String RM
	
	set RM = $$ARCHTBLCHK^DBARCHIVE(dbutarchive.archtbl)
	
	if RM.isNull(), 'dbutarchive.included.isNull() set RM = $$INCLUDEDCHK^DBARCHIVE(dbutarchive.archtbl, dbutarchive.included)
	
	if 'RM.isNull() set ER = 1
	
	quit

vbu1 // Trigger BU_INCLUDED - Before Update on INCLUDED

	type public RecordDBUTARCHIVE dbutarchive
	do dbutarchive.setAuditFlag(1)
	// Before Update Trigger on INCLUDED
	
	/*
	Validate that for any table name entered in the Include With column it
	is a related table, i.e., that it uses a different global, the key
	structure of both tables match exactly (datatype and length), and it
	has a filer, and it doesn't appear in DBUTARCHIVE as either a primary
	or included table for any other entries.
	
	Also, prevent a table from being removed from the included list if it
	already has archived data.
	
	---- Revision History -------------------------------------------------
	03/01/07 - RussellDS - CR26386
		   Created.

	-----------------------------------------------------------------------
	*/

	type public Boolean ER
	type public String RM
	
	if 'dbutarchive.included.isNull() set RM = $$INCLUDEDCHK^DBARCHIVE(dbutarchive.archtbl, dbutarchive.included)
	
	if 'RM.isNull() set ER = 1

	// Check any deleted tables
	if 'ER do {
	
		type List newTbls, oldTbls
		type Number i
		
		set newTbls = {List}(dbutarchive.included)
		set oldTbls = {List}(dbutarchive.included)
		
		for i = 1:1:oldTbls.count() do { quit:'RM.isNull()
			
			type String TBL
			
			set TBL = oldTbls.elementAt(i)
			
			if 'newTbls.contains(TBL) do {
			
				#ACCEPT Date=03/08/07; Pgm=RussellDS; CR=25675; Group=BYPASS
				#BYPASS
				if $D(^DBARCHX(TBL)) set ER=1
				#ENDBYPASS
				
				// Cannot delete ~p1 - already has archived data
				if ER set RM = $$^MSG(6899, TBL)
			}
		}
	}
	
	quit


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordDBUTARCHIVE dbutarchive

	if dbutarchive.archtbl.length()>256 set vRM = $$^MSG(1076,256) do vdderr("ARCHTBL", vRM) quit
	if dbutarchive.included.length()>256 set vRM = $$^MSG(1076,256) do vdderr("INCLUDED", vRM) quit
	if dbutarchive.srlcol.length()>20 set vRM = $$^MSG(1076,20) do vdderr("SRLCOL", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DBUTARCHIVE","MSG",979,"DBUTARCHIVE."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordDBUTARCHIVE dbutarchive

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux
	type String voldpar = vpar.get()                       // Save filer switches

	set vux = vx("ARCHTBL")
	set voldkey = vux.piece("|",1),vobj(dbutarchive,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/TRIGBEF/" do VBU
	if vpar["/VALDD/" do vddver
	do vexec

	set vnewkey = vux.piece("|",2),vobj(dbutarchive,-3) = vnewkey // Copy new keys into object
	type RecordDBUTARCHIVE vnewrec = dbutarchive.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("DBUTARCHIVE",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update
	set vpar = voldpar
	if vpar["/TRIGAFT/" do VAU

	set vobj(dbutarchive,-3) = vux.piece("|",1)            // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit
