MRPC097(return,versn,more,reqopt,PARS,INTRFACE)	

	/* Copyright(c)1999 Sanchez Computer Associates, Inc.  All rights reserved
	   Procedure ID: MRPC097 
	   DESC:
		 Generic Customer Login. In this procedure, customer input will
		 be validated, e.g., CIFAUTH.USERID1 and CIFAUTH.PASSWORD. When successful
		 the logon information will be updated and return the customer
		 record information.
	
		Use caution with the following characters:  |  '  ,  "
 
   		That's pipe, single quote, comma and double quote.
 
   		The pipe character is used throughout the M environment to separate data in the
   		database and should never be contained in data. 
 
   	
	   ORIG: MOTENJ	2/28/2000 - 37245
		 Introduced the XML formatting for output of the records
		 requested by client that have Web capable interfaces.
	
	   KEYWORDS: RPC
	
	   ARGUMENTS:
		. return  desc   Status update, with customer record
				 on successful logon.  			/TYP=T/REQ/MECH=REFNAM:W
	
		. versn   version number    				/TYP=N/REQ/MECH=VAL
	     		  current version=1

		. more	  Indicator that the 31K byte returned   	/TYP=N/REQ/MECH=VAL
			  data has been reached and the remaining
			  record information will be returned in equal
			  and similiar blocks
			  
		. reqopt  bitmap of requested  				/TYP=T/REQ/MECH=VAL
  			options
 
			byte 1 - code to indicate building of DTD and data
				0 - build DTD only
				1 - build data
				2 - build DTD and data
			byte 2  - table CIF return data indicator
			byte 3  - table CIFAUTH return data indicator
			byte 4  - table  DEP return data indicator
			byte 5  - table  LN return data indicator
			byte 6  - table  CIFEXT return data indicator
			byte 7  - table  CIFSERV return data indicator
			byte 8  - table  MEMOBILLPAY return data indicator
			byte 9  - table  MEMOBROKER return data indicator
			byte 10 - table  MEMOCC return data indicator
			byte 11 - table  MEMOECOM return data indicator
			byte 12 - table  MEMOPYMTS return data indicator
			
		. PARS	Customer validation				/TYP=N/REQ/MECH=VAL
			CIF.ACN			- Customer Number
			CIF.TAXID		- Tax Identification
			CIF.CO			- Company Code
			   Used with TAXID when using Affinity groups
			CIFAUTH.ACN		- Customer Number
			CIFAUTH.USERID1		- User ID
			CIFAUTH.PASSWORD	- Primary Encrypted Password
			CIFAUTH.PWD2		- Second encrypted password
			CIFAUTH.PWD3		- Third encrypted password

		. INTRFACE Calling Interface				/TYPE=T/NOREQ/MECH=VAL

			Acknowledges different type of application requesting
			data.
		
	   RETURNS:
		 . $$     <STATUS>0</STATUS>      /No error

		 . return  Login status and customer record		/TYPE=N

			   STATUS=0 - Login Accepted
			   STATUS=1 - Customer not on file
			   STATUS=2 - Login Failure
			   STATUS=3 - Login Failure - exceeded max attempts
			   STATUS=5 - Blocked by bank
			   STATUS=6 - Login failed,not enrolled
					
	   RELATED:
		 . $$^PBSMRPC - MRPC Service Class Driver
	
	   EXAMPLE:

		S RM=$$^MRPC097(.return,versn,more,reqopt,PARS,INTRFACE)	
		S reply=$$SPODBC^MRPC097(1,,1,"CIFAUTH.USERID1=BDDJM,CIFAUTH.PASSWORD=JIM,CIFAUTH.ACN=1000000019")
	
		reply:

		<MRPC097>
		<ERROR>
		<CODE>MSG_2951</CODE>
		<DESCRIPTION>Version number of client message is not compatible with server</DESCRIPTION>
		</ERROR>
		</MRPC097>
	
	Customer Logon:

	This RPC is used to log an existing customer into PROFILE/Anyware
	The login criteria is a userid and an encrypted password. The UserID
	is a index of the customer account. So,very simply, on finding the 
	customer, the password sent into this procedure is compared with what 
	is stored in the database.

	Return status' include the following:
	0	- Successful login
	1	- Customer unknown
	2	- Login failed
	3	- Login failed, exceeded maximum tries
	5	- Login failed, blocked by bank
	6	- Login failed,not enrolled

	Only a success status will contain additional information
	about the customer and the services that customer is signed
	up for.


  	 -----------------------  Revision History  -------------------------
	
	
	  12/11/00 - GALEONET - 42810
		     Added code in section getdata to extract
		     ENCMTHD (encryption method) from External Interface
		     table.  Modified call to CIFVAL2^ECOMMERC to include 
		     encryption method parameter.

	  06/26/00 - SIGDAE - 40730
		     Modified Documentation at top of routine.

	  04/27/00 - MOTENJ - 37245
		     Modified MRPC097 to verify client access for requested
		     account information through UserId and Password.	      
		     Introduced the XML formatting for output of the records
		     requested by clients that have Web capable interfaces.
	 ----------------------------------------------------------------------	 		    
	*/

	#if $$VALID^%ZRTNS("ZMRPC097")
	do getdata^ZMRPC097
	#else
	do getdata
	#endif

	//LV Format is Wrapped
	set return=$$V2LV^MSG(return) 
	quit ""

getdata
	
	type HTML xx=Class.new("HTML")
	set return=""

	/*
	  if more indicator, then retrieve data stored in temporary
	  location.  
	*/
	

	//Version number of client message is not compatible with server
	if $G(versn)'=1 set return=$$ERRXML^ECOMMERC(2951,$E(reqopt,1),"MRPC097") quit

	if $G(more)!(+$E($G(reqopt))=0) do { quit	// if more=1 or reqopt=DTD
		#if $$VALID^%ZRTNS("ZMRPC096")
		do getdata^ZMRPC096(1,"MRPC097")
		#else
		do getdata^MRPC096(1,"MRPC097")
		#endif
		}
	
	if $G(PARS)="" set return=$$ERRXML^ECOMMERC(1768,$E(reqopt,1),"MRPC097") quit
	new ACN,ENCMTHD,status

	// Extract encryption method 
	if $G(INTRFACE)'="" set ENCMTHD=Db.getOneRow("ENCMTHD","UTBLEXTINT","INTRFACE") 
	else  set ENCMTHD=""

	set ACN=""
	set status=$$CIFVAL2^ECOMMERC(PARS,.ACN,ENCMTHD)	// Authenticate customer
	if status=1 do STATUS(status) quit
		
	do CIFAUTH(.status,.ACN)			//Update CIFAUTH

	if status'=0 do STATUS(status) quit
	
	// Return consolidated account summary information from MRPC096 or its custom program

	#if $$VALID^%ZRTNS("ZMRPC096")
	do getdata^ZMRPC096(1,"MRPC097")
	#else
	do getdata^MRPC096(1,"MRPC097")
	#endif

	/*
	  There is more data to be retrieved, do not send the status indicator
	  or the close for the data
	*/

	if $G(MORE) quit


	// Status is succesful
	set return=xx.addProp("STATUS",status)
	set return=xx.addString("MRPC097",1)
	quit



STATUS(status)

	/*
	  Add status for return of error situations found
	  in the data for the account.
	*/

	type HTML xx=Class.new("HTML")

	if $E(reqopt,1)=2 do {
		type HTML xx=Class.new("HTML")
		set return=xx.addTitle("MRPC097")
		set return=xx.addElement("MRPC097","STATUS")
		set return=xx.addAttrib("MRPC097","STATUS=")
		}

	set return=xx.addString("MRPC097",0)	//STATUS
	set return=xx.addProp("STATUS",status)
	set return=xx.addString("MRPC097",1)
	quit



CIFAUTH(stat,ACN)

	/*
	 Check if account is blocked and update CIFAUTH audit information
	 based on stat value.
	*/

	new blocked,data,STATUS

	set data=Db.getOneRow("STATUS,BLKRSN,LSTFAILDT","CIFAUTH","ACN")
	set STATUS=+$P(data,$C(9),1)

	if STATUS=0  set stat=6 quit	//Login failed,not enrolled
	if stat=0,STATUS=1 do LOGRESET^ECOMMERC(ACN) quit	//Success,reset login info

	/*
	 Check to see if the record is blocked.
	 If blocked by a prior days failures reset.
	*/

	set blocked=0
	if STATUS=2  do {
		
		if $P(data,$C(9),2)>1 set blocked=5  quit 	// Blocked by Bank
		// Due to max fails, continue processing
		set blocked=3
		quit:%CurrentDate'>$P(data,$C(9),3)  		// Last failure occurred today			
		set blocked=0
		do LOGRESET^ECOMMERC(ACN)			// Reset for a new day
		}
	
	// Authenticated and not blocked
	if stat=0,blocked=0 quit

	// Blocked by max fails or bank
	if (blocked=3)!(blocked=5) set stat=blocked
	if stat=5 quit

	// Update log failure count
	do LOGFAIL^ECOMMERC(ACN,.xcdmax)
	if xcdmax=1 set stat=3
	quit


SPODBC(versn,more,reqopt,PARS,INTRFACE) // Stored Procedure/ODBC entry point
 
	/*
	  This function is intended to provide a capability to invoke a
	  true MRPC from the EXECUTE procedure facility within the PROFILE
	  ODBC driver.  This is needed in order to get the normal response
	  argument that is part of the MRPC structure returned to the calling
	  ODBC client.
 
	  The parameters passed to this label are the same as those passed through
	  the top of the routine.

	*/
	set return=""
 
	#if $$VALID^%ZRTNS("ZMRPC097")
	do getdata^ZMRPC097
	#else
	do getdata
	#endif

	quit return
 #OPTION ResultClass ON
Public String vSIG()	quit "59948^54917^Laura Hillanbrand^7966"	// Signature - LTD^TIME^USER^SIZE
