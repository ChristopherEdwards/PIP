R01S249	// SCA233 - Customer/Account Notes Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String RPGM
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA233"
	set RN="Customer/Account Notes Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[NOTES]ACN|||D CIDP^@RPGM D EXT^DBSQRY||T|Customer Number|||||"
	set %TAB("VIN2")="|255||[NOTES]NUM|[NOTES]NUM:DISTINCT:NOVAL||D EXT^DBSQRY||T|Note Number|||||"
	set %TAB("VIN3")="|255||[NOTES]EXP|||D EXT^DBSQRY||T|Expiration Date|||||"
	set %TAB("VIN4")="|255||[NOTES]NTYPE|[UTBLNTYPE]:NOVAL||D EXT^DBSQRY||T|Notes Type|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String RPGM
	type public String VIN1,VIN2,VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CID,CONAM,NAM,RID,RN,VL,VLOF,VRF(),VSTATS(),X,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA233",RN="Customer/Account Notes Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA233","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[NOTES]ACN#5#12,[NOTES]CID#21#12,[NOTES]NUM#34#4,[NOTES]NTYPE#41#6,[NOTES]LUPD#94#10,[NOTES]EXP#107#10,[NOTES]FILE#121#4\[NOTES]NOTES#21#100"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[NOTES]ACN "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[NOTES]NUM "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[NOTES]EXP "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[NOTES]NTYPE "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("NOTES") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Customer Number"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Note Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Expiration Date"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Notes Type"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Customer/Account Notes Report"
		set VBNRINFO("PGM")="R01S249"
		set VBNRINFO("RID")="SCA233"
		set VBNRINFO("TABLES")="NOTES"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,NOTES]ACN"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,NOTES]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,NOTES]FILE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,NOTES]NUM"

		set VBNRINFO("DOC",1)="The Customer/Account Notes Report (SCA233) displays a chronological history"
		set VBNRINFO("DOC",2)="of notes on a customer record, an account, or customer records and the"
		set VBNRINFO("DOC",3)="associated accounts. The report links a customer record with any associated"
		set VBNRINFO("DOC",4)="accounts on one report and provides a listing of all note activity and the"
		set VBNRINFO("DOC",5)="actual note text.  The user accesses this report using the Customer/Account"
		set VBNRINFO("DOC",6)="Notes Report function (NOT002)."
		set VBNRINFO("DOC",7)=""
		set VBNRINFO("DOC",8)="Refer to the Notes Reference Manual for further information."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"NOTES.ACN,NOTES.CID,NOTES.FILE,NOTES.NUM,NOTES.NTY"
	set VSELECT=VSELECT_"PE,NOTES.LUPD,NOTES.EXP,NOTES.NOTES"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"NOTES",VWHERE,"NOTES.ACN,NOTES.CID,NOTES.FILE,NOTES.NUM","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8
	set vc1=V.piece($C(9),1)			// NOTES.ACN
	set vc2=V.piece($C(9),2)			// NOTES.CID
	set vc3=V.piece($C(9),3)			// NOTES.FILE
	set vc4=V.piece($C(9),4)			// NOTES.NUM
	set vc5=V.piece($C(9),5)			// NOTES.NTYPE
	set vc6=V.piece($C(9),6)			// NOTES.LUPD
	set vc7=V.piece($C(9),7)			// NOTES.EXP
	set vc8=V.piece($C(9),8)			// NOTES.NOTES
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	quit

CIDP	// post processor for customer/account number prompt

	type Public Number CID
	type Public String ER,RM,X
	
	if X?1A.A,X'="ALL" do {
		type Number %EXT=1

		do ^UCIF
		if 'ER do EXT^DBSQRY
		}
	quit

VPREBQ	// Pre-processor (before query)

	type Public String RPGM

	set RPGM=%RoutineName
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

MEMO(String MEMO,Number LINE,Number SIZE)	// Print all lines of memo, except last - return it in V

	type Public Number IOSL,VFMQ,VLC
	type Public String VL
	type Number I,TAB,VLLEN
	type String X

	set TAB=(LINE#1000)-1				// Location
	set MEMO=MEMO.trim()

	if MEMO.length()'>SIZE quit MEMO

		set VLLEN = VL.length()
	for  do { quit:VFMQ!(MEMO="")
		set X=MEMO.extract(1,SIZE)
		if X[" " do {
			for I=SIZE:-1:1 quit:X.extract(I)=" "
			set X=X.extract(1,I-1)
		}
		set MEMO=MEMO.extract(X.length()+1,MEMO.length())
		set X=X.trim()
		set MEMO=MEMO.trim() quit:MEMO.isNull()
		// Print this portion
		if VLC+1>IOSL do VHDG0 if VFMQ set VFMQ=1 quit
		set VL=VL_$J("",TAB-VL.length())_X do VOM
		set VL=$J("",TAB)
	}
	set VL=$J("",VLLEN)
	quit X

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %TIM,CID,ER,IOSL,NAM,RM,RPGM,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),X,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="    "_$J(vc1,12)
	set V=vc2,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,15)
	set VL=VL_$J("",17-VL.length())_V		// [SYSDEV,NOTES]CID
	set VL=VL_$J("",33-VL.length())_$J(vc4,4)
	set VL=VL_$J("",40-VL.length())_$E(vc5,1,6)
	do VP2 quit:VFMQ!verror.get()  set V=$E(NAM,1,40)
	set VL=VL_$J("",51-VL.length())_V
	set VL=VL_$J("",93-VL.length())_$J($$DAT^%ZM(vc6),10)
	set VL=VL_$J("",106-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",120-VL.length())_$E(vc3,1,4)
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="                    "_$$MEMO(vc8,3021,100)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CID,CONAM,NAM,RID,RM,RN,RPGM,VL,X,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL=" "_"Customer Number  Account Number Note # Note Type  Customer Name                            Last Update      Expires"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,NOTES]CID

	type public String vc3
	type Public String V

	if vc3="CIF" set V=""
	quit

VP2	// Column pre-processor - Variable: NAM

	type public String vc3,vc2
 type public String NAM
 type Number ACN,CID
 type String FILE

 set FILE=vc3
 set CID=vc2

 if FILE="CIF" set ACN=CID
 else  do {
	type RecordACN acn=Db.getRecord("ACN","CID=:CID")
	set ACN=acn.acn
	}

 type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
 set NAM=cif.nam
	quit
