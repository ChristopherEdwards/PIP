SIGNON	 /* 
    ORIG: GRAY - 02/03/2000
    DESC: Teller Signon and Signoff
    
    ---- Comments --------------------------------------------------------
   
    ---- Revision History ------------------------------------------------

	07/07/04 - Erik Scheetz - 10782
		   Removed the following lines of code from the end of TPD
		   section.  This warning is no longer needed with the removal
		   of native teller and was causing misleading error messages
		   when ER=1 later in TSSP processing.

			// Teller balancing is on ~p1
			set ER="W",RM=$$^MSG(2616,$$DAT^%ZM(X))	
			
		   Cleaned up all PSL warnings and replaced all new commands
		   with type commands.	   	
			
	12/29/03 - CARROLLJ - CR7658
		   Corrected parameter mismatch error in FILEOFF linetag.

	12/12/02 - Erik Scheetz - 51349
		   Modified code to verify a teller is closed only when
		   the teller posting file exists.  If the file does not 
		   exist, then the file is not closed.
 
	05/17/02 - GRAY - 43583
		   Removed unlocking of ^TTX.  A call was previously being
		   made into ^TTXLOK.  ^TTXLOK will automatically unlock 
		   the file.
	
	2/2/2000 - GRAY - 32507
		   Removed code no longer needed due to the Elimination
		   of Teller/Branch Character Interface and placed remaining
		   code into PSL'd procedure definition.
	
 */
	
	quit
	
	
	
Public DBRCD	// Get default branch code and teller posting date
	
	type Public Date TPD
	type Public Number BRCD
	type Public String TLO
	type String X
	
	if Db.isDefined("SIGNON","UID=:%UserID") do { quit
		type RecordSIGNON signon=Db.getRecord("SIGNON","UID=:%UserID")
		set TPD=signon.tpd
		set BRCD=signon.brcd
		}
	
	set TPD=%SystemDate
	set BRCD=$$DBRCD^UBRCD(TLO) 
	if BRCD="" quit
	
	if Db.isDefined("TPCTRL","BRCD=:BRCD,UID=:%UserID,TPD=:%SystemDate") do {
		type RecordTPCTRL tpctrl=Db.getRecord("TPCTRL","BRCD=:BRCD,UID=:%UserID,TPD=:%SystemDate")
		set X=tpctrl.pmdate
		if X set TPD=X
		}
	quit
	
Public TPD	// Post processor for transaction julian date
	
	type Public Date TPD
	type Public Number ER
	type Public String RM,X
	
	quit:X=""
	
	type Date PM,SJD
	type Number I,MAX,MAXPM,MIN,N,USERID,Y,Z
	
	// PM transactions not allowed
	if X>%SystemDate do { quit:ER
		if 'Db.isDefined("SCAU","%UserID") set ER=1,RM=$$^MSG(2202) quit
		type RecordSCAU scau=Db.getRecord("SCAU","%UserID")
		if 'scau.tpm set ER=1,RM=$$^MSG(2202) quit
		}

	set Y=""
	if Db.isDefined("SIGNON","UID=:%UserID") do {
		type RecordSIGNON signon=Db.getRecord("SIGNON","UID=:%UserID")
		set Y=signon.tpd
		}
	
	// User ID ~p1 is currently signed on to posting date ~p2
	if Y'="",X'=Y set ER=1,RM=$$^MSG(2851,%UID,$$DAT^%ZM(TPD)) quit
	
	// Check valid business date for PMing
	set PM=""
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set MAXPM=cuvar.maxpm
	if 'MAXPM set MAXPM=1
	
	set N=0 for MAX=%SystemDate:1 if $$BD^UNBD(MAX) set N=N+1 quit:N=MAXPM
	set N=0 for MIN=%SystemDate:-1 if $$BD^UNBD(MIN) set N=N+1 quit:N=MAXPM
	
	set SJD=%SystemDate
	set USERID=%UserID
	type ResultSet rs=Db.select("PMDATE","TPCTRL","BRCD=:BRCD and UID=:USERID and TPD>=:SJD and TPD<=:MIN and PMDATE>:SJD","TPD DESC")
	if 'rs.isEmpty(),rs.next() set PM=rs.getCol(1)

	// Forward balancing date ~p1 already assigned
	if PM,X'=PM set ER=1,RM=$$^MSG(1123,$$DAT^%ZM(Z)) quit
	
	// Must be within ~p1 business days of today
	if X>MAX set ER=1,RM=$$^MSG(1824,MAXPM) quit
	
	// Must be current or within ~p1 business days
	if X<%SystemDate set ER=1,RM=$$^MSG(1806,MAXPM) quit
	
	// System has already balanced on ~p1
	type RecordTTLPA ttlpa=Db.getRecord("TTLPA","PA=""PA""")
	if X'>ttlpa.cdate set ER=1,RM=$$^MSG(2573,$$DAT^%ZM(ttlpa.cdate)) quit
	
	// Posting file closed for ~p1
	type RecordTTXTJD ttxtjd=Db.getRecord("TTXTJD","X",1)
	if ttxtjd.tfstat="*" set ER=1,RM=$$^MSG(2208,$$DAT^%ZM(X)) quit
	
	// Invalid business date
	if '$$BD^UNBD(X) set ER=1,RM=$$^MSG(1275) quit
	
	// Teller posting file is closed for ~p1
	if ER set RM=$$^MSG(2618,$$DAT^%ZM(X)) quit
	
	quit
	
Public FILE	; File the teller sign-on
	
	type Public Date TPD
	type Public Number BRCD,ENV,ER,KEY,TSEQ
	type Public String ETC,RM,TCMT
	
	type Number USERID
	do ^TTXLOK

	if $$UNPOSTD(TPD,BRCD,%UserID) do { quit
		// Unable to sign on.  Unposted transactions exist.
		set ER=1,RM=$$^MSG(2807)
		}
	
	type RecordSIGNON signon=Class.new("RecordSIGNON")
	
	set signon.uid=%UserID
	set signon.tpd=TPD
	set signon.brcd=BRCD
	set signon.key=KEY
	set signon.env=ENV
	
	do signon.bypassSave()
	

	set USERID=%UserID
	type ResultSet rs=Db.select("TSEQ","TTX","TJD=:TPD AND BRCD=:BRCD AND UID=:USERID")
	if rs.isEmpty() do {
		type RecordTTXUID ttxuid=Class.new("RecordTTXUID")
		set ttxuid.tjd=TPD
		set ttxuid.brcd=BRCD
		set ttxuid.uid=%UserID
		set ttxuid.lpseq=0
		do ttxuid.bypassSave()
		}
	else  do {
		type RecordTTXUID ttxuid=Db.getRecord("TTXUID","TJD=:TPD,BRCD=:BRCD,UID=:%UserID")
		set TSEQ=ttxuid.lpseq
		}
	
	type Number X = ""
	set X=Db.nextKey("TTXUID","TPD,X")
	if X="" do {
		type Date ttxtjd
		type RecordTTXTJD ttxtjd=Class.new("RecordTTXTJD")
		set ttxtjd.tpd=TPD
		set ttxtjd.tfstat=""
		do ttxtjd.bypassSave()
		}
	
	do SETPRF^TTXLOK
	
	// Sign-on ~p1  
	S ETC="@SGNON",TCMT=$$^MSG(6813,$$DAT^%ZM(TPD))
	
	/*
	Replaced call into TTXTRN^TTXEXT with setting and filing of the
	signon directly into TTX.  			SPG 05/29/02
	*/
	
	type RecordTTX ttx=Class.new("RecordTTX")
	set ttx.tjd=TPD
	set ttx.brcd=BRCD
	set ttx.UID=%UserID
	set ttx.tseq=Db.nextVal("TTX","TPD,BRCD,%UserID")
	set ttx.etc=ETC
	set ttx.tcmt=TCMT
	set ttx.tlo=%UserStation
	set ttx.cdt=%CurrentDate
	set ttx.tim=%CurrentTime
	do ttx.bypassSave()
	
	// User ID ~p1 is signed on to branch ~p2 on ~p3
	set ER="W",RM=$$^MSG(2855,%UID,BRCD,$$DAT^%ZM(TPD))
	
	quit
	
UNPOSTD(TPD,BRCD,%UID)	//
	
	/* 
	Verfiy that this teller isn't trying to sign-on when unposted
	transactions exist.
	*/
	
	type Number TRC
	
	if Db.isDefined("TTXUID","TJD=:TPD,BRCD=:BRCD,UID=:%UserID") do {
		type RecordTTXUID ttxuid=Db.getRecord("TTXUID","TJD=:TPD,BRCD=:BRCD,UID=:%UserID")
		set TRC=(ttxuid.lpseq+1)*1000
		}
	else  set TRC=0
	if Db.nextKey("TTX","TPD,BRCD,%UserID,TRC") quit 1
	
	quit 0
	
Public FILEOFF	// File sign-off into ^TTX
	
	type Public Date A(),TPD
	type Public Number BRCD,ER,UID
	type Public String ETC,RM,TCMT
	
	do ^TTXLOK
	
	if $$UNPOSTD(TPD,BRCD,UID) do { quit
		// Unable to sign off.  Unposted transactions exist.
		set ER=1,RM=$$^MSG(2806)
		}
	
	do Db.delete("SIGNON","UID=:UID")
	
	set A(1)=%SystemDate do ACCUM^TTXSUM
	
	// Sign-off ~p1
	set TCMT=$$^MSG(6812,$$DAT^%ZM(TPD))
	set ETC="@SGNOFF"

	type RecordTTX ttx=Class.new("RecordTTX")
	do TTXTRN^TTXEXT(.ttx,TPD,BRCD,%UserID,ETC,TCMT)
	
	// User ID ~p1 sign-off complete
	set ER="W",RM=$$^MSG(2856,UID)
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "59886^43610^Sanchez SCM Administrator^6455"	// Signature - LTD^TIME^USER^SIZE
