R01S130	// SCA061 - Payments to Delinquent Accounts Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:39 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"

	set RID="SCA061"
	set RN="Payments to Delinquent Accounts Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNDELP]EFD|[LNDELP]EFD:DISTINCT:NOVAL||D EXT^DBSQRY||T|Effective Date|||||"
	set %TAB("VIN2")="|255||[LN]COLOFF|[UTBLOFF]:NOVAL||D EXT^DBSQRY||T|Collection Officer|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,EFD,NAME,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA061",RN="Payments to Delinquent Accounts Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA061","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNDELP]CID#1#12,[HIST]BRCD#14#6,[HIST]UID#21#6,[HIST]ETC#28#8,[HIST]TOT#36#10,[HIST]INT#47#8,[LNDELP]BTLD#56#10,[LNDELP]BDIST1LD#76#10,[LNDELP]BPPA#87#7,[LNDELP]BLCHG#95#7,[LNDELP]BTDUE#103#9,[LNDELP]BBAL#113#11,[LNDELP]BTEB#125#8\[LN]NAM#1#27,[LNDELP]TSEQ#29#4,[HIST]PRIN#36#10,[HIST]MISC#47#8,[LNDELP]BLPTD#56#10,[LNDELP]ADIST1ND#76#10,[LNDELP]APPA#87#7,[LNDELP]ALCHG#95#7,[LNDELP]ATDUE#103#9,[LNDELP]ABAL#113#11"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNDELP]EFD "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]COLOFF "_VIN2,SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNDELP,LN,HIST") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Effective Date"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Collection Officer"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Payments to Delinquent Accounts Report"
		set VBNRINFO("PGM")="R01S130"
		set VBNRINFO("RID")="SCA061"
		set VBNRINFO("TABLES")="LNDELP,LN,HIST"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNDELP]EFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNDELP]""DELP"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LN]COLOFF"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNDELP]TYPE"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNDELP]CID"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LNDELP]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNDELP.EFD,LN.COLOFF,LNDELP.TYPE,LNDELP.CID,LNDELP"
	set VSELECT=VSELECT_".TSEQ,HIST.BRCD,HIST.UID,HIST.ETC,HIST.TOT,HIST.IN"
	set VSELECT=VSELECT_"T,LNDELP.BTLD,LNDELP.BDIST1LD,LNDELP.BPPA,LNDELP.B"
	set VSELECT=VSELECT_"LCHG,LNDELP.BTDUE,LNDELP.BBAL,LNDELP.BTEB,LN.NAM,H"
	set VSELECT=VSELECT_"IST.PRIN,HIST.MISC,LNDELP.BLPTD,LNDELP.ADIST1ND,LN"
	set VSELECT=VSELECT_"DELP.APPA,LNDELP.ALCHG,LNDELP.ATDUE,LNDELP.ABAL,LN"
	set VSELECT=VSELECT_"DELP.ATEB,LN.TYPE"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNDELP,LN,HIST",VWHERE,"LNDELP.EFD,LN.COLOFF,LNDELP.TYPE,LNDELP.CID,LNDELP.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28
	set vc1=V.piece($C(9),1)			// LNDELP.EFD
	set vc2=V.piece($C(9),2)			// LN.COLOFF
	set vc3=V.piece($C(9),3)			// LNDELP.TYPE
	set vc4=V.piece($C(9),4)			// LNDELP.CID
	set vc5=V.piece($C(9),5)			// LNDELP.TSEQ
	set vc6=V.piece($C(9),6)			// HIST.BRCD
	set vc7=V.piece($C(9),7)			// HIST.UID
	set vc8=V.piece($C(9),8)			// HIST.ETC
	set vc9=V.piece($C(9),9)			// HIST.TOT
	set vc10=V.piece($C(9),10)			// HIST.INT
	set vc11=V.piece($C(9),11)			// LNDELP.BTLD
	set vc12=V.piece($C(9),12)			// LNDELP.BDIST1LD
	set vc13=V.piece($C(9),13)			// LNDELP.BPPA
	set vc14=V.piece($C(9),14)			// LNDELP.BLCHG
	set vc15=V.piece($C(9),15)			// LNDELP.BTDUE
	set vc16=V.piece($C(9),16)			// LNDELP.BBAL
	set vc17=V.piece($C(9),17)			// LNDELP.BTEB
	set vc18=V.piece($C(9),18)			// LN.NAM
	set vc19=V.piece($C(9),19)			// HIST.PRIN
	set vc20=V.piece($C(9),20)			// HIST.MISC
	set vc21=V.piece($C(9),21)			// LNDELP.BLPTD
	set vc22=V.piece($C(9),22)			// LNDELP.ADIST1ND
	set vc23=V.piece($C(9),23)			// LNDELP.APPA
	set vc24=V.piece($C(9),24)			// LNDELP.ALCHG
	set vc25=V.piece($C(9),25)			// LNDELP.ATDUE
	set vc26=V.piece($C(9),26)			// LNDELP.ABAL
	set vc27=V.piece($C(9),27)			// LNDELP.ATEB
	set vc28=V.piece($C(9),28)			// LN.TYPE
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(+vovc4'=+vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CONAM,EFD,ER,IOSL,NAME,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL="OFFICER:"
	set VL=VL_$J("",9-VL.length())_$J(vc2,4)
	do VP1 quit:VFMQ!verror.get()  set V=" [ "_NAME_" ] "
	set VL=VL_$J("",15-VL.length())_V
	set VL=VL_$J("",22-VL.length())_"PRODUCT:"
	set VL=VL_$J("",31-VL.length())_$J(vc28,3)
	do VOM
	set VL="" do VOM
	set VL="                                                         "_"PRIOR"
	do VOM
	set VL="ACCOUNT        BRCD TELL   TRAN     TRAN AMT  INTEREST  LAST ACT"
	do VOM
	set VL="                                "_"    PRINCIPAL  CHARGES  LAST PMT            PD THRU   PARTIAL PENALTY  PMTS DUE     BALANCE  ESCROW"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,EFD,IOSL,NAME,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc4,12)
	set VL=VL_$J("",13-VL.length())_$J(vc6,6)
	set VL=VL_$J("",20-VL.length())_$E(vc7,1,6)
	set VL=VL_$J("",27-VL.length())_$E(vc8,1,8)
	set VL=VL_$J("",35-VL.length())_$S(vc9="":"",1:$J(vc9,0,2))
	set VL=VL_$J("",46-VL.length())_$S(vc10="":"",1:$J(vc10,0,2))
	set VL=VL_$J("",55-VL.length())_$J($$DAT^%ZM(vc11),10)
	set VL=VL_$J("",67-VL.length())_"BEFORE:"
	set VL=VL_$J("",75-VL.length())_$J($$DAT^%ZM(vc12),10)
	set VL=VL_$J("",86-VL.length())_$S(vc13="":"",1:$J(vc13,0,2))
	set VL=VL_$J("",94-VL.length())_$S(vc14="":"",1:$J(vc14,0,2))
	set VL=VL_$J("",102-VL.length())_$S(vc15="":"",1:$J(vc15,0,2))
	set VL=VL_$J("",112-VL.length())_$S(vc16="":"",1:$J(vc16,0,2))
	set VL=VL_$J("",124-VL.length())_$S(vc17="":"",1:$J(vc17,0,2))
	do VOM
	set VL=$E(vc18,1,27)
	set VL=VL_$J("",28-VL.length())_$J(vc5,4)
	set VL=VL_$J("",35-VL.length())_$S(vc19="":"",1:$J(vc19,0,2))
	set VL=VL_$J("",46-VL.length())_$S(vc20="":"",1:$J(vc20,0,2))
	set VL=VL_$J("",55-VL.length())_$J($$DAT^%ZM(vc21),10)
	set VL=VL_$J("",68-VL.length())_"AFTER:"
	set VL=VL_$J("",75-VL.length())_$J($$DAT^%ZM(vc22),10)
	set VL=VL_$J("",86-VL.length())_$S(vc23="":"",1:$J(vc23,0,2))
	set VL=VL_$J("",94-VL.length())_$S(vc24="":"",1:$J(vc24,0,2))
	set VL=VL_$J("",102-VL.length())_$S(vc25="":"",1:$J(vc25,0,2))
	set VL=VL_$J("",112-VL.length())_$S(vc26="":"",1:$J(vc26,0,2))
	set VL=VL_$J("",124-VL.length())_$S(vc27="":"",1:$J(vc27,0,2))
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,EFD,NAME,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA061)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="EFFECTIVE DATE: "
	set VL=VL_$J("",16-VL.length())_$J($$DAT^%ZM(vc1),10)
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor -  [ <<NAME>> ]

	type public String vc2
	
	type String COLOFF
	type Public String NAME

	set COLOFF=vc2 
	
	if COLOFF="" set NAME="" quit
	
	type ResultSet rs=Db.select("DESC","UTBLOFF","OFF=:COLOFF") 
	
	set NAME=rs.getCol("DESC") 
	
	
	quit
