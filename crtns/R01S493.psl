R01S493	// SCA549 - MAD Analysis Anticipated Plan Shortages
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:59 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String EOY
	type String YR
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA549"
	set RN="MAD Analysis Anticipated Plan Shortages"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[IRATYPE]IRATYP|[STBLIRA]:NOVAL||D EXT^DBSQRY||T|Retirement/Savings Plan Type|||||"
	set %TAB("VIN2")="|255||[IRA]ACN|[CIF]:NOVAL||D EXT^DBSQRY||T|Customer Number|||||"
	set %TAB("VIN3")="|255||[IRA]RPASEQ|[IRA]RPASEQ:DISTINCT:NOVAL||D EXT^DBSQRY||T|Retirement Plan Sequence|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=31
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String EOY
	type public String YR
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,DIFF,EOYPD,FRE,JD,NJD,REM,RID,RN,VL,VLOF,VRF(),VSKIPREC,VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA549",RN="MAD Analysis Anticipated Plan Shortages"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA549","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[IRATYPE]ACN#1#12,[CIF]NAM#15#20,[IRATYPE]RPASEQ#36#2,[CIF]DOB#40#10,[IRATYPE]AUTFRE#51#12,[IRATYPE]AUTAMT#64#10,[IRA]MADCY#81#10,[IRA]D46#107#12\[IRA]MADAMT#1#10"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[IRATYPE]IRATYP "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[IRA]ACN "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[IRA]RPASEQ "_VIN3,SEQ=SEQ+1
		set DQQRY(SEQ)="[IRATYPE]AUTFRE'=""""",SEQ=SEQ+1
		set DQQRY(SEQ)="[IRA]MADAMT'=""""",SEQ=SEQ+1
		set DQQRY(SEQ)="[IRA]TAXYR=<<YR>>",SEQ=SEQ+1
		set DQQRY(SEQ)="([IRATYPE]AUTDND > <<EOY>> AND ([IRA]MADCY + [IRA]D46 - [IRA]MADAMT) > 0) OR ([IRATYPE]AUTDND < <<EOY>> AND ([IRATYPE]AUTAMT + [IRA]MADCY + [IRA]D46 - [IRA]MADAMT) > 0)",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("IRA,IRATYPE,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Retirement/Savings Plan Type"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Customer Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Retirement Plan Sequence"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="MAD Analysis Anticipated Plan Shortages"
		set VBNRINFO("PGM")="R01S493"
		set VBNRINFO("RID")="SCA549"
		set VBNRINFO("TABLES")="IRA,IRATYPE,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,IRATYPE]IRATYP"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,IRA]ACN"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,IRA]RPASEQ"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,IRA]TAXYR"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"IRATYPE.AUTDND,IRATYPE.AUTFRE,IRATYPE.AUTAMT,IRA.M"
	set VSELECT=VSELECT_"ADCY,IRA.D46,IRA.MADAMT,IRATYPE.IRATYP,IRA.ACN,IRA"
	set VSELECT=VSELECT_".RPASEQ,IRA.TAXYR,IRATYPE.ACN,CIF.NAM,IRATYPE.RPAS"
	set VSELECT=VSELECT_"EQ,CIF.DOB"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"IRA,IRATYPE,CIF",VWHERE,"IRATYPE.IRATYP,IRA.ACN,IRA.RPASEQ,IRA.TAXYR","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc7,vovc8,vovc9,vovc10
	set vovc7="",vovc8="",vovc9="",vovc10=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc7,vc7,vovc8,vc8,vovc9,vc9,vovc10,vc10
	set vovc7=vc7,vovc8=vc8,vovc9=vc9,vovc10=vc10
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// IRATYPE.AUTDND
	set vc2=V.piece($C(9),2)			// IRATYPE.AUTFRE
	set vc3=V.piece($C(9),3)			// IRATYPE.AUTAMT
	set vc4=V.piece($C(9),4)			// IRA.MADCY
	set vc5=V.piece($C(9),5)			// IRA.D46
	set vc6=V.piece($C(9),6)			// IRA.MADAMT
	set vc7=V.piece($C(9),7)			// IRATYPE.IRATYP
	set vc8=V.piece($C(9),8)			// IRA.ACN
	set vc9=V.piece($C(9),9)			// IRA.RPASEQ
	set vc10=V.piece($C(9),10)			// IRA.TAXYR
	set vc11=V.piece($C(9),11)			// IRATYPE.ACN
	set vc12=V.piece($C(9),12)			// CIF.NAM
	set vc13=V.piece($C(9),13)			// IRATYPE.RPASEQ
	set vc14=V.piece($C(9),14)			// CIF.DOB
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6
 type public Date EOY,JD,NJD
 type public Number DIFF,EOYPD,ER,FRE,REM
 type public Boolean VSKIPREC

 // Calculate remaining distributions starting from the next date
 set JD=vc1
 set FRE=vc2

 if JD>EOY set REM=0
 else  set REM=1
 for  set NJD=JD.nextFreqDate(FRE) quit:(ER)!(NJD>EOY)  set JD=NJD,REM=REM+1

 set EOYPD=(vc3*REM)+vc4
 set DIFF=EOYPD+vc5-vc6

 if 'DIFF set VSKIPREC=1

	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=EOY

 type public Date EOY
 type public Number YR

 set YR=$$YEAR^SCADAT(%SystemDate)
 set EOY=$$EOYJD^SCADAT(%SystemDate)
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc7,vovc7,vc8,vovc8,vc9,vovc9,vc10,vovc10
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc7'=+vc7) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc8'=+vc8) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc9'=+vc9) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL3	// Detail
	type public String %TIM,DIFF,EOY,EOYPD,ER,FRE,IOSL,JD,NJD,REM,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VSKIPREC,VT(),YR,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc11,12)
	set VL=VL_$J("",14-VL.length())_$E(vc12,1,20)
	set VL=VL_$J("",35-VL.length())_$J(vc13,2)
	set VL=VL_$J("",39-VL.length())_$J($$DAT^%ZM(vc14),10)
	set VL=VL_$J("",50-VL.length())_$E(vc2,1,12)
	set VL=VL_$J("",63-VL.length())_$J($FN(vc3,",",2),10)
	set VL=VL_$J("",74-VL.length())_$J(REM,3)
	set VL=VL_$J("",80-VL.length())_$J($FN(vc4,",",2),10)
	set VL=VL_$J("",94-VL.length())_$J($FN(EOYPD,",",2),10)
	set VL=VL_$J("",106-VL.length())_$J($FN(vc5,",",2),12)
	do VOM
	set VL=$J($FN(vc6,",",2),10)
	set VL=VL_$J("",15-VL.length())_$J($FN(DIFF,"P"_",",2),12)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DIFF,EOY,EOYPD,FRE,JD,NJD,REM,RID,RN,VL,VSKIPREC,YR,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc10,vovc7,vovc8,vovc9,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Plan Type: "
	set VL=VL_$J("",11-VL.length())_$J(vc7,2)
	do VOM
	set VL="" do VOM
	set VL="  "_"Customer #  Name                Seq   Cust DOB  Auto Freq   Auto Amt * Rem +  Paid YTD =  Ant EOY Pd +  Inclusion MAD -"
	do VOM
	set VL="Current MAD =      +/-Diff"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
