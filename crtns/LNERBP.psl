LNERBP

	/*
	Post Escrow Remittance Part & Full
	
	---- Revision History ------------------------------------------------
	  
	03/28/06 - SmithCD - CR 20315
	  	   Modified to pass dep objects to sections to prevent an 
	  	   eventual undefined error in INIT^LNPTS16. Also cleaned up 
	  	   code and modified to call TRNSINGL instead of TRNSET tag of 
	  	   ^TRNDRV.
	  
	02/23/06 - SWARNALP - 19663
	   	   Corrected FILE section to call section 3 before quitting 
	   	   and section TRN to post entries in ERBX table only if the 
	   	   ACN record is locked as it was not posting the transactions 
	   	   properly.  Defined the variable ET as public wherever it 
	   	   is applicable to resolve undefined variable ET while 
	   	   running the function LNR003.
	   	      
	09/01/06 - srinivar - 16890
	   	   Modified the ER,ET with Runtime.setErrSTBLER() calls.	
	           Modified the code to conform PSL standards.
	   	   Code for the screen driver procedure has been 
	           restructured to include the code present in 
	           the VPG and VPG0 section to be in 
	           the INIT section .Section VPG and VPG0 has been 
	           removed.	   	   	       	

	----------------------------------------------------------------------
	*/
	
	type public Boolean ER
	type public String ET, RM

	type Number %PAGE = 1, %PG = 0, BN = "", OLNTB
	type String VFMQ = ""

	catch error {
		// Log all errors
		if error.type = "%PSL-E-DBFILER" do {
			type String ET = error.type
                        
			// Error in account, not processed
			if ET.isNull() set ET = $$^MSG(3511)

			do ^UTLERR
			}
		else  do ZE^UTLERR
		}

	set %ProcessMode = 0
	
        do VPG00(.BN)
        if "DFQ".isLike("%"_VFMQ_"%") ! (ER) do VER(BN.get()) quit

        set %PG = %PG + 1
        do VER(BN)

	quit


VPG00(Number BN)		// Batch number				/REF:W

	// Set up
	
	type public String ERB0(), ET, VFMQ

	type String %READ, %TAB()
	
	set %TAB("BN") = ".BN1/HLP=[ERB]BATCH/TBL=[ERB0]"
	set %READ = "@@%FN,,,BN/REQ"

	do ^UTLREAD
	if VFMQ = "Q" quit

	// Escrow Remittance Posting file in use
	lock +ERB0(BN):2 else  do Runtime.setErrSTBLER("ERB0", "EPFIU") quit

	quit


VER(Number BN)
	
	type public String VFMQ

	if VFMQ '= "Q" do FILE(BN)

	do END 

	quit


FILE(Number BN)		// Batch number

	// File data

	type public Number BRCD
	type public Boolean ER, %REPOST = %REPOST.get()
	type public Date TPD
	type public String ET
	
	type RecordERB0 erb0 = Db.getRecord("ERB0", "BATCH=:BN")

	// Batch already posted
	if erb0.post = 3 do Runtime.setErrSTBLER("ERB0", "BTCHPOS") quit

	set ER = ""

	if %EffectiveDate.get().isNull() set %EffectiveDate = %SystemDate

	if %REPOST do REMBATCH(.erb0, BN) quit
	
	do SOURCE^BCHSOURC("ESCR", "ALL", .%UserID, .BRCD, .%UserClass) quit:ER

        type RecordTPCTRL tpctrl = Db.getRecord("TPCTRL", "BRCD=:BRCD,UID=:%UserID,TPD=:%SystemDate", 1)
	set TPD = tpctrl.pmdate 

	if TPD.isNull() set TPD = %SystemDate

	do REMBATCH(.erb0, BN)
	
	quit
	

REMBATCH(RecordERB0 erb0,	// Escrow remit batch - header		/REF:RW
	 Number BN)		// Batch number

	// Process escrow remittance batch

	type public Boolean ER
	
	type String PAYID
	
	type ResultSet rs = Db.select("CID", "ERB", "BATCH=:BN")
	while rs.next() do PROCECID(BN, rs.getCol("CID"), erb0.trtype)
	
	// Update Escrow Remit Batch - Header

	set erb0.post = 3

	// ~p1 Posted
	set erb0.desc = $$^MSG(4091, erb0.desc)

	do erb0.bypassSave()

	// Bump dates in Escrow Payees table
	set rs = Db.select("PAYID", "ERBP", "BATCH=:BN")
	while rs.next() do { quit:ER
		set PAYID = rs.getCol("PAYID")
		type RecordLNTRS1 lntrs1 = Db.getRecord("LNTRS1", "TRTYPE=:erb0.trtype,PAYID=:PAYID")

		// No Final Remittance amount or Remittance Factor <> 1
		if 'erb0.finr ! (erb0.remfact '= 1) quit
		
		do lntrs1.setAuditFlag(1)
		
		set lntrs1.remld = lntrs1.remnd
		set lntrs1.remnd = lntrs1.remnd.nextFreqDate(lntrs1.remfre) quit:ER

		do lntrs1.save()
		}

	quit


PROCECID(Number BN, 		// Batch number
	 Number ECID,		// Escrow account number
	 String TRTYPE)		// Transfer type

	// Process all remittances for escrow account

	type public Boolean ER
	type public String ET, RM
	type public Number TAMT
	
	type Number LCID, WCID
	type String TYP
	
	type DbSet ds = Db.selectDbSet("ERB", "BATCH=:BN AND CID=:ECID")
	while ds.next() do {
		type RecordERB erb = ds.getRecord("ERB")
		
		set LCID = erb.aref
		set TYP = erb.typ

		do Runtime.start("BA")

		catch error {
			do Runtime.rollback()
			
	                // Log all errors
	                if error.type = "%PSL-E-DBFILER" do {
	                        type String ET = error.type
                        
				// Error in account, not processed
				if ET.isNull() set ET = $$^MSG(3511)

	                        do ^UTLERR
	                        }
	                else  do ZE^UTLERR

			do ERBX(LCID, TYP)
			}

		// Generate transactions	
		do TRN(.erb, LCID, ECID, TRTYPE)
		if ER do { quit				
			do Runtime.rollback()
			do ERBX(LCID, TYP)
			}
		
		do Runtime.commit()
 		}

	quit


TRN(RecordERB erb,   		// Escrow remittance batch	/REF:R
    Number LCID,		// Loan account number
    Number ECID,		// Escrow account number
    String TRTYPE)		// Transfer type
    
	// Build transactions

	type public Cache %CACHE()
	type public Boolean ER, %REPOST
	type public Number BN, BRCD
	type public String ACN(), ET
	
	type RecordTTX ttx()
	type String LETC, TCMT, TSO, WETC
	type Number WCID

	type RecordLN ln = Db.getRecord("LN", "CID=:LCID")

	// Account closed
	if ln.stat = 4 do Runtime.setErrMSG("LN", 8449) quit

	type RecordLNTRS1 lntrs1 set lntrs1=Db.getRecord("LNTRS1", "TRTYPE=:TRTYPE,PAYID=:erb.payee")

	set WCID = lntrs1.cid

	// Wash account does not exist
	if WCID.isNull() do { quit			
		do Runtime.setErrSTBLER("DEP", "IWANSU")
		set ER = 1
		}
			
	// Wash account does not exist
	if 'Db.isDefined("DEP", "CID=:WCID") do { quit
		do Runtime.setErrSTBLER("DEP", "IWANSU")
		set ER = 1
		}

	// Restriction 010 on account
	if Db.isDefined("RFLG", "CID=:LCID,RFLG='010'") do Runtime.setErrMSG("RFLG", 4090) quit

	type RecordDEP dep = Db.getRecord("DEP", "CID=:ECID")

	// Closed escrow account ~p1
	if dep.stat = 4 do Runtime.setErrMSG("RFLG", 4090, ECID) quit

	if %REPOST quit
	
	// Debit escrow account via loan account
	
	type RecordPRODCTL prodctl = %CACHE("PRODCTL").getRecord("PRODCTL", "TYPE=:ln.type")

	// DR Final Remittance Tran Code
	set LETC = prodctl.drtrfr
	
	set TCMT = erb.remdt.toString()_"-"_lntrs1.paydes
	set TSO = "ESC#"_dep.esc_":"_erb.typ

	do BUILDTRN(.ln, .dep, LETC, TCMT, TSO, erb.tamt) quit:ER

	// Credit wash account

	set prodctl = %CACHE("PRODCTL").getRecord("PRODCTL", "TYPE=:dep.type")

	// CR General Purpose Tran Code
	set WETC = prodctl.crtrgp

	type RecordCIF cif = Db.getRecord("CIF", "ACN=:ln.acn")

	set TCMT = ln.cid_" "_cif.nam_"|"_cif.xname
	set TSO = "ERB#"

	type RecordDEP depwash = Db.getRecord("DEP", "CID=:WCID")
	
	do BUILDTRN(.depwash, , WETC, TCMT, TSO, erb.tamt) quit:ER

	quit


BUILDTRN(RecordACN acn,		// Account				/REF:RW
	 RecordDEP dep,		// Escrow deposit account		/REF:RW/NOREQ
	 String ETC,		// External transaction code
	 String TCMT,		// Teller comment
	 String TSO,		// Teller source
	 Number TAMT)		// Transaction amount
	 
	type public Cache %CACHE()
	type public Number BRCD
	type public Date TPD
	type public Boolean ER

	// Build transaction

	if ETC.isNull() ! ('Db.isDefined("TRN", "ETC=:ETC")) do { quit
		// Transaction code not defined
		do Runtime.setErrSTBLER("TRN", "NTD")
		set ER = 1
		}

	type RecordTRN trn = %CACHE("TRN").getRecord("TRN", "ETC=:ETC")

	type RecordTTX ttx = Class.new("RecordTTX")

	set ttx.tjd = %SystemDate
	set ttx.brcd = BRCD
	set ttx.uid = %UserID
	set ttx.cid = acn.cid
	set ttx.itc = trn.itc
	set ttx.etc = ETC
	set ttx.tamt = TAMT
	set ttx.tlo = %UserStation
	set ttx.tso = TSO
	set ttx.tcmt = TCMT
	set ttx.brcde = BRCD
	set ttx.uidt = %UserID
	set ttx.crcd = acn.crcd

	// Post system-generated transaction
	do TRNSINGL^TRNDRV(.ttx, .acn, TPD, BRCD, 4)
	
	quit


END	// Wrap up
	
	type public String RM, VFMQ
	type public Boolean ER
	type public Number BN
	
	lock

	if ER quit

	set BN = BN.get()

	// Remittance not posted
	if VFMQ = "Q" do Runtime.setErrMSG("ERBX", 2358)

	// Remittance posted
	if VFMQ '= "Q" do Runtime.setErrMSG("ERBX", 2359)

	// Not actually error messages in this section - FYIs / warnings
	set ER = "W"
		
	if BN.isNull() quit

	type ResultSet rs = Db.select("BATCH", "ERBX", "BATCH=:BN")

	// ~p1, run error report
	if 'rs.isEmpty() do Runtime.setErrMSG("ERBX", 3104, RM) set ER = "W"
	
	quit
	
	
ERBX(Number LCID,		// Loan account
     String TYP)		// Escrow transfer type

	// Escrow remittance posting error

	type public Number BN
	type public String ET, RM
	type public Boolean ER

	type RecordERBX erbx = Class.new("RecordERBX", "BATCH=:BN,CID=:LCID,TYP=:TYP")

	set erbx.desc = $select('RM.isNull():RM.get(), 1:ET)
	
	do erbx.bypassSave()
	
	set ER = 0
	set (ET, RM) = ""

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60354^62807^Chad Smith^8591"	// Signature - LTD^TIME^USER^SIZE
