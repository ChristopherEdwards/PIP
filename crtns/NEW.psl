NEW
 /* 
    ORIG: GRAY - 01/26/2000
    DESC: New Account Utility
    
    ---- Comments --------------------------------------------------------
    
    ---- Revision History ------------------------------------------------
	
	07/31/06 - KELLYP - CR 22048
		   Modified EXT section to eliminate PRECEDENCE warning.
	
	02/09/06 - KELLYP - CR 19452
		   Removed references to TFSCIFID which has been obsoleted.
	
	12/16/03 - CARROLLJ - CR7239
		   Added #ACCEPT prior to xecute command to correct compile
		   errors.

	02/20/03 - GRAY - 51349
		   Removed global reference from lock command.  Replaced
		   getOneRow methods and reworked code relying on toArray
		   and fromArray methods.  This is NOT done yet.

	06/01/00 - TANY - 38093
		   Expand use of #IF in compiled code

	12/09/99 - GRAY - 32507
		   Removed code no longer needed due to the Elimination
		   of Teller/Branch Character Interface and placed remaining
		   code into PSL'd procedure definition.
 */
	
	quit
	
public EXT	// External account create (requires: BOO,CLS,GRP,TYP,REL,VFMQ'="Q")
	
	// Account number set-up is optional.  Called by ^LNICNV.
	set ER=0 if 'REL.exists() set ER=1 quit 
	
	if '$D(CID) set CID=$$CID() quit:ER
	set REL(100)=$G(CID),%EXT=1
	
	do VER
	
	quit

	
VER	//

	if VFMQ="Q" quit
	
	set TIT=""
	type RecordUTBLBRCD utblbrcd

	if '$G(LNMDLR) do {
		set CID=REL(100)
		set %DUP("CID")=CID
		new RELSIG,SIGI,LENSIG
		set (ACN,TIT,N)="",CT=0,SIGI=0
		do REL if 'ACN set $P(REL(1),"|",4)=1,ACN=$P(REL(1),"|",5)
		set SIGI=$L(TIT,"|")
		set LENSIG=$L(RELSIG(SIGI))-1
		if ($E(TIT,$L(TIT)-LENSIG,$L(TIT)))=RELSIG(SIGI) set TIT=$E(TIT,1,$L(TIT)-LENSIG-1)
		if '$G(%NOLOCK) do {  if ER do ERR quit
			lock +CIF(ACN):2 else  set ER=1,ET="RECLOC" quit
			}
		if Db.isDefined("ACN","CID") set ET="RECOF" do ERR quit
	
		type RecordCIF cif=Db.getRecord("CIF","ACN")
		
		new TAXID,LNM,MCITY,PCITY,DOB,SIC,HPH,BOO,DAO,ATM,AUD1,QAOD
		new EMPCITY,MAREM,ATN,TYPE,DARCOVR,VOSFREQ,CMSFLG,PLAN
		new SWIFTADD,PIN1STAT,PIN2STAT,NRCNTRY,MT900
		
		// loading of nodes 2,3,5,6,10-20,50,51,66,67,75,80,90-92,410,438

		set TAXID=cif.taxid,LNM=cif.lnm,MCITY=cif.mcity,PCITY=cif.pcity
		set DOB=cif.dob,SIC=cif.sic,HPH=cif.hph,BOO=cif.boo,DAO=cif.dao
		set ATM=cif.atm,AUD1=cif.aud1,QAOD=cif.qaod,EMPCITY=cif.empcity
		set MAREM=cif.marem,ATN=cif.atn,TYPE=cif.type,DARCOVR=cif.darcovr
		set VOSFREQ=cif.vosfreq,CMSFLG=cif.cmsflg,PLAN=cif.plan
		set SWIFTADD=cif.swiftadd,PIN1STAT=cif.pin1stat
		set PIN2STAT=cif.pin2stat,NRCNTRY=cif.nrcntry,MT900=cif.mt900

		do cif.toArray("CIF(")
	
		set CODE=$G(CODE)		
		set LVL=$G(LVL)
		do DFT(TYPE)			// Set up DEP or LN array
		#if CUVAR.%MCP do CRCDDFT(CRCD)

		set SLN=LNM
		set PERS=cif.pers
		if 'PERS if $L(SLN)<18,($P(CIF(1)," ",2)'="") set SLN=$E(SLN_", "_$P(CIF(1)," ",1),1,20)
	
		if CLS="D" set X=DEP(50)
		else  set X=LN(50)
	
		set utblbrcd=Db.getRecord("UTBLBRCD","BRCD=:BOO")
	
		set $P(X,"|",5)=cif.ccode	// CCODE
		set $P(X,"|",6)=SLN 		// LNM
		set $P(X,"|",7)=utblbrcd.ccdef	// CC
		set $P(X,"|",8)=cif.pers
		}
	
	else  do {
		set utblbrcd=Db.getRecord("UTBLBRCD","BRCD=:BOO")
		do DFT(TYPE)			// Set up DEP or LN array
		set X=LN(50)
		set $P(X,"|",7)=utblbrcd.ccdef	// CC
		set ACN=0
		// Loan Modeler
		for I=1,3 set CIF(I)=$$^MSG("4327")
		for I=2,4,10,13,15,50 set CIF(I)=""
		}
	
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	
	if CLS="D" do {
		set DEP(1)=TIT,DEP(50)=X,$P(DEP(52),"|",1)=BOO,DEP(99)=ACN_"||"_REL
		}
	
	else  do {
		set LN(1)=TIT,LN(50)=X,$P(LN(52),"|",1)=BOO,LN(99)=ACN_"||"_REL
		}
	
	do RELCIF
	quit

	
REL	//

	for  set N=$O(REL(N)) quit:N=""  do {
		if $P(REL(N),"|",5)="" quit
		set RELSIG(N)="~"		// No match pattern
		if +$P(REL(N),"|",15) set RELSIG(N)=$P(REL(N),"|",3)
		if $P(REL(N),"|",4) set ACN=$P(REL(N),"|",5)
		set CT=CT+1 if CT<5 set $P(TIT,"|",CT)=$E($P(REL(N),"|",6)_" "_$P(REL(N),"|",3),1,40)
		set RELSIG(CT)=RELSIG(N)
		}
	quit

	
RELCIF	// CIF-ACN Relationship - Created for filer
	
	new ACN,FSID,N,ROLE
	
	set N=""
	for  set N=$O(REL(N)) quit:N=""  do {
		set REL=REL(N)
		set ACN=$P(REL(N),"|",5) quit:ACN=""
		set ROLE=$P(REL(N),"|",9)
		set FSID=$P(REL(N),"|",11)
		set bRELCIF(ACN)="|"_ROLE_"|"_FSID_"|1|1|0"
		}
	quit

	
ONLINE(logid,net)	//  Check %NET and %LOGID
	
	if logid>1 quit 0
	quit net

	
Public CID()	// Generate 'next' CID number
	
	if '$$ONLINE($G(%LOGID),%NET),'$$STFENABL^UFETCH("ACN") set ER=1,RM=$$^MSG(1193) quit ""
	
	new PGM,X
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set PGM=cuvar.ucid
	#ACCEPT DATE=12/16/03;PGM=John Carroll
	if PGM'="" set X="do "_PGM X X quit $G(CID)
	
	if '$G(%NOLOCK) set CID=$$ACN^UFETCH(BOO,.ER,.RM)
	
	quit $G(CID)

	
Public DFT(TYPE)	// Account skeleton default 
	
	// Called by NEW post processers and LNICNV
	
	set LODCHK=$G(LODCHK)
	
	if CLS="D" do { set $P(DEP(50),"|",1)=TYPE
		new dep
		type RecordDEP dep=Class.new("RecordDEP")
		do dep.default("TYPE")
		do dep.toArray("DEP(")
		}
	
	if CLS="L" do { set $P(LN(50),"|",1)=TYPE 
		new ln
		type RecordLN ln=Class.new("RecordLN")
		do ln.default("TYPE")
		do ln.toArray("LN(")
		}
		
	if CLS="*" do { set $P(CIF(50),"|",1)=TYPE
		new cif
		type RecordCIF cif=Class.new("RecordCIF")
		do cif.default("TYPE")
		do cif.toArray("CIF(")
		}
	quit

		
Public LOADLN(LN,TYPE,LODCHK)	//
	
	new CLS
	set CLS="L" 
	do DFT^NEW(TYPE) 
	quit

	
Public LOADDEP(DEP,TYPE,LODCHK)	// 
	
	new CLS 
	set CLS="D" 
	do DFT^NEW(TYPE) 
	quit

	
Public LOADCIF(CIF,TYPE,LODCHK)	// 
	
	new CLS 
	set CLS="*" 
	do DFT^NEW(TYPE) 
	quit

	
CRCDDFT(CRCD)	//	
	
	if CRCD="" quit
	if CLS="D" set $P(DEP(50),"|",12)=CRCD
	if CLS="L" set $P(LN(50),"|",12)=CRCD
	quit

	
Public AVL(TYPE)	// Product availability (start/expiration dates)

	/*
	INPUTS:
		. TYPE		Product Type			/TYP=N
	
		. BOO		Branch of ownership		/TYP=N
	
	RETURNS:
		. ER		Error indicator			/TYP=N
	
		. RM		Return message (if error)	/TYP=T
	*/
	
	new DATA,DES,DTBEG,ENDATE
	
	type RecordSCAU scau=Db.getRecord("SCAU","UID=:%UserID")
	set DBRCD=scau.brcd
	set:$G(%EXT) DBRCD=""
	
	// User ~p1 restricted to branch ~p2
	if DBRCD'="",DBRCD'=BOO set ER=1,RM=$$^MSG(2876,%UID,DBRCD) quit  
	
	type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE")
	set DES=prodctl.des
	set DTBEG=prodctl.dtbeg
	set ENDATE=prodctl.endate
	
	// Type ~p1 restricted 
	if DES="*" set ER=1,RM=$$^MSG(2773,TYPE) quit
	
	// Not available prior to ~p1
	if DTBEG>%SystemDate set ER=1,RM=$$^MSG(2036,TYPE,$$DAT^%ZM(DTBEG)) quit
	
	// Not available after ~p1
	if ENDATE,%SystemDate>ENDATE set ER=1,RM=$$^MSG(2033,TYPE,$$DAT^%ZM(ENDATE)) quit
	quit

 
ERR	//

	set ER=1 do DSPBP^UTLERR
	set VFMQ="Q"
	quit
	
 #OPTION ResultClass ON
Public String vSIG()	quit "60477^65456^Pat Kelly^6332"	// Signature - LTD^TIME^USER^SIZE
