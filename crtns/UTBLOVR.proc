UTBLOVR	// "OVR" and "RFLG" UTBL maintenance post processors
	/*
	

	-------------- Revision History --------------------------------------
	   12/15/04 - JERUCHIMC - 13051
	              Update for DBI standards
	 
	   07/17/02 - CHHABRIAS - 49794
		      Converted to PSL

	----------------------------------------------------------------------
	
	*/
	
	type public String ER
	type public String RM
	type public String TR
	type public String SAVTR
	type public String TX
	type public String X
	
	
	type String Z
	
	if X="" quit
	set TX=X
	do CHK if ER quit

	// Debit transaction code ~p1 and DR* conflict
	set Z=""

	if $D(TR("DR*")) for  set Z=$O(TR(Z)) quit:Z=""!$G(ER)  do {

		// Debit tran code ~p1 and DR* conflict.
		if Z'["*",TR(Z)=0 do {
			set ER=1 
			set RM=$$^MSG(771,Z) 
			do CLNUP
			}
		}

	if ER quit

	// Credit transaction code ~p1 and CR* conflict
	set Z=""
	if $D(TR("CR*")) for  set Z=$O(TR(Z)) quit:Z=""  do {

		// Credit tran code ~p1 and CR* conflict.
		if Z'["*",TR(Z)=1 do {
			set ER=1
			set RM=$$^MSG(651,Z)
			do CLNUP
			}
		}

	set Z=""
	for  set Z=$O(TR(Z)) quit:Z=""  set SAVTR(Z)=TR(Z)
	quit

CLNUP	//
	// Clean up SAVTR array
	
	type public String SAVTR
	type public String TR
	type public String Y
	type public String Z
	
	set Y=$S('$D(SAVTR(Z)):"TR(Z)",TR(Z)=1:"TR(""CR*"")",1:"TR(""DR*"")")
	#ACCEPT DATE=12/01/04;PGM=Claude Jeruchim
	kill @Y
	quit

CHK	//

 	type public String ER
 	type public String SAVTR
 	type public String RM
 	type public String TR

	type String I
	type String Z
	
	set ER=0
	set I=0
	kill TR
	set Z=""
	for  set Z=$O(SAVTR(Z)) quit:Z=""  set TR(Z)=SAVTR(Z)

CHKLP	//
	
	 
	type public String GRP
	type public String KEYL
	type public String TX
	
	type String T
	
	for I=1:1 set T=$P(TX,",",I) quit:I>$L(TX,",")!(ER)  do {

		// Use commas to separate transaction codes only
		if T']]"" set ER=1 set RM=$$^MSG(2825) quit

		// Enter each transaction code only once (~p1)
		if $D(TR(T)) set ER=1 set RM=$$^MSG(940,T) quit
	
		if T="CR*" set TR(T)="" quit
	
		if T="DR*" set TR(T)="" quit

		if T["*" do { quit
			do WILDCARD(T,.TR,GRP) 
			if ER set ER=0 quit
			set TR(T)=""
			}

		// Invalid transaction code - ~p1
		if 'Db.isDefined("TRN","ETC=:T") set ER=1,RM=$$^MSG(1498,T) quit
	
		type RecordTRN trn=Db.getRecord("TRN","ETC=:T")

		// Transaction code ~p1 is invalid for account group ~p2
		if GRP'="CIF",trn.grp'=GRP set ER=1 set RM=$$^MSG(2705,T,KEYL(2)) quit

		// DR or CR
		set TR(T)=+$E(trn.itc)
		}
	
	quit


ALL	//
	/*
	Post processing for bottom level key (userclass)
	"*" means all userclasses and tran codes and no single userclasses
	should exist; or enter single userclasses and associated tran codes
	*/

	type public String DELP
	type public String ER
	type public String GRP
	type public String KEYL
	type public String RM
	type public String X
	
	if X="*" quit 

	// Enter valid userclass or '*' for all users
	if 'Db.isDefined("SCAU0","UCLS=:X") set ER=1,RM=$$^MSG(962) quit 

	// All userclasses assigned.  Delete userclass '*' to enter single userclasses.
	if Db.isDefined("UTBLRFL1","GRP=:GRP,RFLG=:KEYL(3),UCLS='*'") set ER=1 set RM=$$^MSG(246) quit 
	
	if 'Db.isDefined("UTBLRFL1","GRP=:GRP,RFLG=:KEYL(3),UCLS=:X") quit
	set DELP=1
	
	quit

GRP	//

	/*
	Called as a post processor in user table RETRY for
	second level creation.
	*/
	type public String CL
	type public String ER
	type public String I
	type public String RM
	type public String TMP
	type public String X
	
	kill TMP

	if X="*" set I(3)="" quit
	
	type ResultSet rs=Db.select("CLS","TRN","GRP=:X")

	if rs.isEmpty() do {  quit
		set CL=""
		set ER=1
		set RM=$$^MSG(1368)
		}
	
	while rs.next() do {
		set CL=rs.getCol(1) 
		}	
	
	quit


WILDCARD(item,tr,grp)	//  Check for wildcard trans
	// returns ER="W", RM=Num of trans

	type String cnt
	type String etc
	type String i
	type String x
	
	type public String ER
	type public String RM
	
	set cnt=0 set x=$$TRN^UTLASTK(item)

	// No tran codes selected for ~p1
	if $TR(x,",")="" set ER=1 set RM=$$^MSG(8491,item) quit

	for i=1:1:$L(x,",") quit:cnt>0  do {
		set etc=$P(x,",",i) 
		if etc="" quit
		type RecordTRN trn=Db.getRecord("TRN","ETC=:etc")
		if trn.grp'=grp quit
		set cnt=cnt+1
		}

	// ~p1 tran codes selected for ~p2
	if 'cnt set ER="W" set RM=$$^MSG(8492,0,item) quit

	// ~p1 trans codes selected for ~p2
	set ER="W" set RM=$$^MSG(8492,$L(x,","),item)
	quit

vSIG()	quit "59892^37444^Laura Hillanbrand^4109"	// Signature - LTD^TIME^USER^SIZE
