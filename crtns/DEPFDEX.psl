DEPFDEX		/*
 	ORIG: ANTONOVS - 07/23/2002
 	DESC: Deposit FDIC Reports Data Extract

 	---- Comments --------------------------------------------------------

	---- Revision History ------------------------------------------------
		
	10/06/2005 - SWARNALATHAP - 16708
		.   The second cell of all RCE array is changed from value 
		    to text in section INIT and RCE so that the column RECN 
		    from tables DEPFDE and DEPFDE1 store the string values like 
		    "B549", "B550" etc. also avoiding "Unique Constraint 
		    Violation" error in oracle.
		Modified FILE section to make a dummy entry in depfde1 table 
		whenever the record in depfde table does not correspond to 
		any account in the depfde1 table.  This dummy record was 
		inserted so that the report SCA827 reports all the categories 
		though the amount is not applicable for that category.
 	*/

	new CID,CTJD,DRCE,SCHRCE

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set SCHRCE=cuvar.schrce
	set CTJD=cuvar.tjd

	// If Schedule RC-E flag is not set in CUVAR - quit

	if 'SCHRCE quit
	else  do {

		do INIT
		
		type ResultSet rs=Db.select("CID","DEP")
		if rs.isEmpty() quit
		while rs.next() do {
			
			set CID=rs.getCol(1)
			type RecordDEP dep=Db.getRecord("DEP","CID")
			if 'dep.bal quit	// Nothing to report
			do RCE(dep)

			}
		
		do FILE

	} // end of SCHRCE
	
	quit

INIT	// RCE array initialization

	set DRCE=0	// Skip Details

	/*

	Lines 10-60 of RCE array have multiple (2) cells per line. The
	first cell corresponds to transaction accounts and the second cell
	corresponds to non-transaction accounts. Determination of how to report
	these values is done in a Report Pre-Processor (after QUERY) of the
	SCA827 - FDIC Schedule RC-E report.

	*/

	set RCE(10,"B549")=0  // Individuals, partnerships, and corporations - Transaction Accts
	set RCE(10,"B550")=0  // Individuals, partnerships, and corporations - Non-Transaction Accts
	set RCE(20,"2202")=0    // U.S. Government - Transaction Accts
	set RCE(20,"2520")=0    // U.S. Government - Non-Transaction Accts
	set RCE(30,"2203")=0    // States and political subdivisions in the U.S. - Transaction Accts
	set RCE(30,"2530")=0    // States and political subdivisions in the U.S. - Non-Transaction Accts
	set RCE(40,"B551")=0  // Commercial banks and other depository institutions in the U.S. - Transaction Accts
	set RCE(40,"B552")=0  // Commercial banks and other depository institutions in the U.S. - Non-Transaction Accts
	set RCE(50,"2213")=0    // Banks in foreign countries - Transaction Accts	
	set RCE(50,"2236")=0    // Banks in foreign countries - Non-Transaction Accts
	set RCE(60,"2216")=0    // Foreign Governments and Official Institutions (including foreign central banks) - Transaction Accts
	set RCE(60,"2377")=0    // Foreign Governments & Official Institutions (including foreign central banks)- Non-Transaction Acct
	set RCE(70,"2215")=0    // Total of items 1 through 6 - Transaction Accts
	set RCE(70,"2385")=0    // Total of items 1 through 6 - Non-Transaction Accts
	set RCE(80,"2210")=0    // Total Demand Deposits
	set RCE(90,"6835")=0    // Total Individual Retirement Accounts (IRAs) and Keogh Plan accounts
	set RCE(100,"6810")=0   // Money Market Deposit Accounts
	set RCE(110,"352")=0    // Other savings deposits
	set RCE(120,"6648")=0   // Total time deposits of less than $100,"000
	set RCE(130,"2604")=0   // Total time deposits of $100,000 or more
	set RCE(140,"A579")=0 // Time Deposits of less than $100,000 w/remaining maturity or next re-pricing date: 3m or less
	set RCE(150,"A580")=0 // Time Deposits of less than $100,000 w/remaining maturity or next re-pricing date: 3m throug 12
	set RCE(160,"A581")=0 // Time Deposits of less than $100,000 w/remaining maturity or next re-pricing date: 1y - 3y
	set RCE(170,"A582")=0 // Time Deposits of less than $100,000 w/remaining maturity or next re-pricing date: Over 3y
	set RCE(180,"A241")=0 // Time Deposits of less than $100,000 with a remaining maturity of: 1 year or less.
	set RCE(190,"A584")=0 // Time Deposits of $100,000 or more w/remaining maturity or next re-pricing date: 3 m or less
	set RCE(200,"A585")=0 // Time Deposits of $100,000 or more w/remaining maturity or next re-pricing date: 3 m through 12
	set RCE(210,"A586")=0 // Time Deposits of $100,000 or more w/remaining maturity or next re-pricing date: 1y through 3y
	set RCE(220,"A587")=0 // Time Deposits of $100,000 or more w/remaining maturity or next re-pricing date: Over 3y
	set RCE(230,"A242")=0 // Time Deposits of $100,000 or more with a remaining maturity of: One year or less.
	
	quit

RCE(RecordDEP dep)	// Process a single account
	
	if 'dep.regd quit	// No Regulation Category
	
	if (dep.stat=4),(dep.dtc<CTJD) quit  // Account is closed

	new LG,RMD,SM,TD,TR
	set TD=0	// Time Deposits
	set RMD=0	// Remaining maturity
	set LG=0	// Large deposits >100,000.00
	set SM=0	// Small Deposits <100,000.00

	if dep.regd<4 set TR=1  // Transaction account
	if dep.regd>3 set TR=0	// Non-Transaction account
	 
	// Transaction and Time deposit account
	if (dep.regd=6),(dep.mdt'=""),(dep.mdt<CTJD),((dep.rencd=0)!(dep.rencd=5)) set TD=1

	if TR!TD do {

		if dep.rce do {
			set RCE(70,"2215")=RCE(70,"2215")+dep.bal
			if DRCE set RCE(70,"2215",CID)=dep.bal
			}

		if dep.rce=1 do { quit
			set RCE(10,"B549")=RCE(10,"B549")+dep.bal
			if DRCE set RCE(10,"B549",CID)=dep.bal
			}

		if dep.rce=2 do { quit
			set RCE(20,"2202")=RCE(20,"2202")+dep.bal
			if DRCE set RCE(20,"2202",CID)=dep.bal
			}

		if dep.rce=3 do { quit
			set RCE(30,"2203")=RCE(30,"2203")+dep.bal
			if DRCE set RCE(30,"2203",CID)=dep.bal
			}

		if dep.rce=4 do { quit
			set RCE(40,"B551")=RCE(40,"B551")+dep.bal
			if DRCE set RCE(40,"B551",CID)=dep.bal
			}		
		
		if dep.rce=6 do { quit
			set RCE(50,"2213")=RCE(50,"2213")+dep.bal
			if DRCE set RCE(50,"2213",CID)=dep.bal
			}
	
		if dep.rce=7 do { 
			set RCE(60,"2216")=RCE(60,"2216")+dep.bal
			if DRCE set RCE(60,"2216",CID)=dep.bal
			}			

		} // (TR!TD)
			
	if ('TR),('TD) do {

		if dep.rce do {
			set RCE(70,"2385")=RCE(70,"2385")+dep.bal
			if DRCE set RCE(70,"2385",CID)=dep.bal
			}

		if dep.rce=1 do { quit
			set RCE(10,"B550")=RCE(10,"B550")+dep.bal
			if DRCE set RCE(10,"B550",CID)=dep.bal
			}

		if dep.rce=2 do { quit
			set RCE(20,"2520")=RCE(20,"2520")+dep.bal
			if DRCE set RCE(20,"2520",CID)=dep.bal
			}

		if dep.rce=3 do { quit
			set RCE(30,"2530")=RCE(30,"2530")+dep.bal
			if DRCE set RCE(30,"2530",CID)=dep.bal
			}

		if dep.rce=4 do { quit
			set RCE(40,"B552")=RCE(40,"B552")+dep.bal
			if DRCE set RCE(40,"B552",CID)=dep.bal
			}

		if dep.rce=6 do { quit
			set RCE(50,"2236")=RCE(50,"2236")+dep.bal
			if DRCE set RCE(50,"2236",CID)=dep.bal
			}

		if dep.rce=7 do {
			set RCE(60,"2377")=RCE(60,"2377")+dep.bal
			if DRCE set RCE(60,"2377",CID)=dep.bal
			}

		}  //  ('TR),('TD)

	if (dep.regd=3)!TD do {
		set RCE(80,"2210")=RCE(80,"2210")+dep.bal
		if DRCE set RCE(80,"2210",CID)=dep.bal
		}

	if dep.ira>0 do {
		set RCE(90,"6835")=RCE(90,"6835")+dep.bal
		if DRCE set RCE(90,"6835",CID)=dep.bal
		}

	if dep.regd=5 do {
		set RCE(100,"6810")=RCE(100,"6810")+dep.bal
		if DRCE set RCE(100,"6810",CID)=dep.bal
		}

	if dep.regd=4 do {
		set RCE(110,"352")=RCE(110,"352")+dep.bal
		if DRCE set RCE(110,"352",CID)=dep.bal
		}

	if (dep.regd'=6) quit	// Remaining cells are for Time Deposits only
	if TD quit      	// Exclude time deposits that have matured
	
	if (dep.bal<100000) set SM=1
	else  set LG=1
	
	do RCT(dep,.RMD)  // Determine remaining maturity

	if SM do {

		set RCE(120,"6648")=RCE(120,"6648")+dep.bal
		if DRCE set RCE(120,"6648",CID)=dep.bal
		
		if RMD<3 do {
			set RCE(180,"A241")=RCE(180,"A241")+dep.bal
			if DRCE set RCE(180,"A241",CID)=dep.bal
			}

		if RMD=1 do { quit
			set RCE(140,"A579")=RCE(140,"A579")+dep.bal
			if DRCE set RCE(140,"A579",CID)=dep.bal
 			}

		if RMD=2 do { quit
			set RCE(150,"A580")=RCE(150,"A580")+dep.bal
			if DRCE set RCE(150,"A580",CID)=dep.bal
			}
 
		if RMD=3 do { quit
			set RCE(160,"A581")=RCE(160,"A581")+dep.bal
			if DRCE set RCE(160,"A581",CID)=dep.bal
			}
 
		if RMD=4 do {
			set RCE(170,"A582")=RCE(170,"A582")+dep.bal
			if DRCE set RCE(170,"A582",CID)=dep.bal
			}
 
		}  // SM

	if LG do {

		set RCE(130,"2604")=RCE(130,"2604")+dep.bal
		if DRCE set RCE(130,"2604",CID)=dep.bal

		if RMD<3 do {
			set RCE(230,"A242")=RCE(230,"A242")+dep.bal
			if DRCE set RCE(230,"A242",CID)=dep.bal
			}
	
		if RMD=1 do { quit
			set RCE(190,"A584")=RCE(190,"A584")+dep.bal
			if DRCE set RCE(190,"A584",CID)=dep.bal
			}
	
		if RMD=2 do { quit
			set RCE(200,"A585")=RCE(200,"A585")+dep.bal
			if DRCE set RCE(200,"A585",CID)=dep.bal
			}

		if RMD=3 do { quit
			set RCE(210,"A586")=RCE(210,"A586")+dep.bal
			if DRCE set RCE(210,"A586",CID)=dep.bal
			}

		if RMD=4 do {
			set RCE(220,"A587")=RCE(220,"A587")+dep.bal
			if DRCE set RCE(220,"A587",CID)=dep.bal
			}

		}  // LG

	quit

RCT(RecordDEP dep,RMD)	// Determine remaining maturity
	
	/*
	
	RMD - remaining maturity. The following values will be returned: 
		1 - 3 months or Less
		2 - Over 3 months through 12 months	
		3 - Over 1 year through 3 years
		4 - Over 3 years
	*/

	new DD,DIFF

	if dep.ichnd="" set DD=dep.mdt-CTJD 
	if dep.ichnd'="" set DD=dep.ichnd-CTJD

	set DIFF=$J(DD/30.4166,0,1)

	if DIFF'>3 set RMD=1 quit
	if DIFF'>12 set RMD=2 quit
	if DIFF'>36 set RMD=3 quit
	set RMD=4

	quit

FILE	// File RCE array to tables DEPFDE and DEPFDE1

	new ACCT,CELL
	set ACCT=""
	set CELL=""

	// Delete existing entries for Processing Date

	do Db.fastDelete("DEPFDE","CTJD")
	do Db.fastDelete("DEPFDE1","CTJD")	

	for I=10:10:230 do {

		for  set CELL=$O(RCE(I,CELL)) quit:CELL=""  do {

			type RecordDEPFDE depfde
			set depfde=Class.new("RecordDEPFDE")
 
			set depfde.redt=CTJD
			set depfde.rcel=I
			set depfde.recn=CELL
			set depfde.retot=RCE(I,CELL)

			do depfde.bypassSave()

			for  set ACCT=$O(RCE(I,CELL,ACCT)) quit:ACCT=""  do {
			
				type RecordDEPFDE1 depfde1
				set depfde1=Class.new("RecordDEPFDE1")
 
				set depfde1.redt=CTJD
				set depfde1.rcel=I
				set depfde1.recn=CELL
				set depfde1.cid=ACCT
				set depfde1.rebal=RCE(I,CELL,ACCT)
 
				do depfde1.bypassSave()

			}
			/*
		 	 Dummy Record Insert in Account level details.  This will be 
		 	 used while generating FDIC Schedule RC-E report when the 
		 	 account details are not applicable for the record details 
		 	 in DEPFDE.
			*/
		
			if 'Db.isDefined("DEPFDE1","REDT=:CTJD,RCEL=:I,RECN=:CELL,CID=0") do {
				type RecordDEPFDE1 depfde1=Class.new("RecordDEPFDE1")
 
				set depfde1.redt=CTJD
				set depfde1.rcel=I
				set depfde1.recn=CELL
				set depfde1.cid=0
			
				do depfde1.bypassSave()
			}
		}
		
	}

	quit

AUDIT	// External entry point for function DEPFDAU
	
	/*
	
	This external entry point is called by the DEPFDAU Deposit Audit Reports
	Extract function. It allows user to specify a particular account or set
	of accounts to be processed. The extract file will be created for
	specified accounts only, not going through all accounts in the system.
   
	*/

	new CTJD,SCHRCE

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set SCHRCE=cuvar.schrce
	set CTJD=cuvar.tjd
 
	// If Schedule RC-E flag is not set in CUVAR - quit
	
	if 'SCHRCE quit
	else  do {
 
		new CID,DRCE,LAST,X

		// Configure account selection screen

		set %TAB("ACCOUNTS")=".ACCOUNTS1/XPP=D PP^DEPFDEX"
		set %TAB("STATUS")=".STATUS1"
		set %READ="@@%FN,,,STATUS,,ACCOUNTS*15"
		
		do ^UTLREAD if VFMQ="Q" quit
	
		do INIT
		
		set DRCE=STATUS
		set LAST=0
	
		/*

		Determine first and last account numbers specified by user. 
		Valid entries are: a specific account number, a range (99-999)
		of account numbers, or "A"ll account numbers. 
		
		*/
 
		for I=1:1:15 S X=ACCOUNTS(I) if X'="" do {

			if X?1"A".E!(X?1"a".E) set CID=0,LAST=999999999999999
			else  do {
				set CID=X-1
				if X'["-" set LAST=X+1 quit
				set LAST=$P(X,"-",2)+1
				}
			
			// Select all accounts that were entered on the screen

			type ResultSet rs=Db.select("CID","DEP","CID>:CID AND CID<:LAST")
			if rs.isEmpty() quit
			while rs.next() do {

				set CID=rs.getCol(1)
				type RecordDEP dep=Db.getRecord("DEP","CID")
				if 'dep.bal quit	// Nothing to report 
				do RCE(dep)	// Process a single account

				}
			}

		do FILE

		}	

	quit

PP	// Post-processor for AUDIT
       
	if X="" quit
	if X?1"A".E quit
	if X?1N.N1"-"1N.N quit

	if 'Db.isDefined("DEP","X") set ER=1,RM=$$^MSG(7774)

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60226^39716^P.R. Swarnalatha^12004"	// Signature - LTD^TIME^USER^SIZE
