R01S462	// SCA510 - Initial Escrow Disclosure Statement
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:50 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CUSHA,ESC,INIDEP
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA510"
	set RN="Initial Escrow Disclosure Statement"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CUSHA,ESC,INIDEP
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CID,CO(),CONAM,COURTMSG,NM(),RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA510",RN="Initial Escrow Disclosure Statement"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA510","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[ESCINT]JD#3#10,[ESCINT]PMT#15#12,[ESCINT]REMIT#30#12,[ESCINT]BAL#44#12,[ESCINT]DESC#61#15"

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("ESCINT.CID,ESCINT.JD,LN.PMT,LN.PMTPI,LN.PMTTRS,ESCINT.PMT,ESCINT.REMIT,ESCINT.BAL,ESCINT.DESC","ESCINT,LN","","ESCINT.CID,ESCINT.JD","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
	set vc1=V.piece($C(9),1)			// ESCINT.CID
	set vc2=V.piece($C(9),2)			// ESCINT.JD
	set vc3=V.piece($C(9),3)			// LN.PMT
	set vc4=V.piece($C(9),4)			// LN.PMTPI
	set vc5=V.piece($C(9),5)			// LN.PMTTRS
	set vc6=V.piece($C(9),6)			// ESCINT.PMT
	set vc7=V.piece($C(9),7)			// ESCINT.REMIT
	set vc8=V.piece($C(9),8)			// ESCINT.BAL
	set vc9=V.piece($C(9),9)			// ESCINT.DESC
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 // Converted to PSL by CNV70RW
 type public Number CID,CUSHA,ESC,INIDEP
 type public String CO(),NM()

 type Number I

 set ESC=ESC.get()
 set CUSHA=CUSHA.get()
 set INIDEP=INIDEP.get()

 do ADDRESS^DEPDBS
 for I=1:1:6 set NM(I)=""
 if CID.get() do {
	set NM="NM"
	do ^UTLADDR(,.NM,5,2,"ACN",CID)
	}
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=CUSHA,ESC,INIDEP
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VDTL2	// Detail
	type public String CID,CO(),COURTMSG,CUSHA,ESC,INIDEP,IOSL,NM(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "_$J($$DAT^%ZM(vc2),10)
	set V=vc6,VO=V set V=$J(V,13,2) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",13-VL.length())_V		// [SYSDEV,ESCINT]PMT
	set V=vc7,VO=V set V=$J(V,14,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",27-VL.length())_V		// [SYSDEV,ESCINT]REMIT
	set VL=VL_$J("",42-VL.length())_$J(vc8,13,2)
	set VL=VL_$J("",60-VL.length())_$E(vc9,1,15)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CID,CO(),CONAM,COURTMSG,CUSHA,ESC,INIDEP,NM(),RID,RN,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+42,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                                                                   "_"PAGE:"
	set VL=VL_$J("",73-VL.length())_$E($J(VPN,3),1,5)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                     "_"INITIAL ESCROW DISCLOSURE STATEMENT"
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="     "_$E(CO(1),1,40)
	do VOM
	set VL="     "_$E(CO(2),1,60)
	do VOM
	set VL="     "_$E(CO(3),1,60)
	do VOM
	set VL="     "_$E(CO(4),1,60)
	do VOM
	set VL="     "_$E(CO(5),1,60)
	do VOM
	set VL="     "_$E(CO(6),1,60)
	do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$E(COURTMSG,1,50) set VL="     "_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="     "_$E(NM(1),1,40)
	set VL=VL_$J("",53-VL.length())_"LOAN ACCOUNT:"
	set VL=VL_$J("",67-VL.length())_$J(vc1,12)
	do VOM
	set VL="     "_$E(NM(3),1,40)
	set VL=VL_$J("",51-VL.length())_"ESCROW ACCOUNT:"
	set VL=VL_$J("",69-VL.length())_$E(ESC,1,5)
	do VOM
	set VL="     "_$E(NM(4),1,40)
	do VOM
	set VL="     "_$E(NM(5),1,40)
	do VOM
	set VL="     "_$E(NM(6),1,40)
	do VOM
	set VL="" do VOM
	set VL="                    "_"Mortgage Payment for Coming Year: $"
	set VL=VL_$J("",56-VL.length())_$J(vc3,9,2)
	do VOM
	set VL="   "_"Amount of Payment Allocated to Principal/Interest: $"
	set VL=VL_$J("",56-VL.length())_$J(vc4,9,2)
	do VOM
	set VL="               "_"Amount of Payment Allocated to Escrow: $"
	set VL=VL_$J("",56-VL.length())_$J(vc5,9,2)
	do VOM
	set VL="" do VOM
	set VL="                                      "_"Cushion Amount: $"
	set VL=VL_$J("",56-VL.length())_$J(CUSHA,9,2)
	set VL=VL_$J("",66-VL.length())_"*"
	do VOM
	set VL="" do VOM
	set VL="   "_"The following represents an estimate of activity in your escrow account "
	do VOM
	set VL="   "_"for the coming year, based upon anticipated payments made from your account."
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"Starting Balance: $"
	set VL=VL_$J("",23-VL.length())_$J(INIDEP,10,2)
	do VOM
	set VL="" do VOM
	set VL="                   "_"Escrow                       Ending       Remittance"
	do VOM
	set VL="     "_"Date         Payment      Remittance      Balance      Description"
	do VOM
	set VL="  "_"======================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String CID,CO(),COURTMSG,CUSHA,ESC,INIDEP,NM(),vovc1,vovc2
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"* Cushion represents a fraction of your total annual disbursements allowed"
	do VOM
	set VL="     "_"to be held according to RESPA laws."
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,ESCINT]PMT

	type public String vc6
 type Public String V

 if vc6="" set V="           "
	quit

VP2	// Column post-processor - [SYSDEV,ESCINT]REMIT

	type public String vc7
 type Public String V

 if vc7="" set V="            "
	quit

VP3	// Column pre-processor - Variable: COURTMSG

 type public String COURTMSG

 set COURTMSG=CUVAR.courtmsg

	quit
