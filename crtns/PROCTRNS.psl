PROCTRNS(RecordUTBLTRNSET utbltset)
	/*
	  ----------------------------------------------------------------------d
	   Revision History

	   11/24/05 - SPR - 18268
	
		   Transaction Support Data/Transaction Sets -General DBI3
		   system area cleanup. Deprecated functions removed.
		   
	  ----------------------------------------------------------------------
	*/
	
	type public Boolean ER
	type Date DATE
	type Number DIG1,DIG2,DIG3,DIG4,DIGITS,FIELDCNT,i,MON1,MON2,MON3,SEQ,VAL1,VAL2,VAL3,YR1,YR2,YR3,YR4
	type String ALPHABET,CHARSET,DI,FID,LIBS,REFTRAN,TABLECOL,TSO,TSO1,TSO2
	
	/*
   	Edit Check for UTBLTRNSET.SEQ
   	Sequence must be greater than 1
	*/
	if utbltset.seq<2 do Runtime.setErrMSG("UTBLTRNSET",3609) quit:ER
	
	//Use EXTCRP for transaction sets
	if (utbltset.trnfield="ETC"),(utbltset.fixedval="EXTCR") do Runtime.setErrMSG("UTBLTRNSET",3623) quit:ER 	

	//Use EXTDRP for transaction sets
	if (utbltset.trnfield="ETC"),(utbltset.fixedval="EXTDR") do Runtime.setErrMSG("UTBLTRNSET",3624) quit:ER 	

	//TSO entry must have a transaction reference number
	if (utbltset.tso'=""),(utbltset.reftran="") do Runtime.setErrMSG("UTBLTRNSET",3625) quit:ER      
	
	// Verify that TSO entry is from STBLTSO/UTBLTZSO
	set TSO=utbltset.tso
	if TSO'="" do {  quit:ER
		
		type RecordSTBLTSO stbltso=Db.getRecord("STBLTSO","KEY=:TSO",1)
		if stbltso.getMode() set TSO1=stbltso.key
		
		type RecordUTBLZTSO utblztso=Db.getRecord("UTBLZTSO","KEY=:TSO",1)
		if utblztso.getMode() set TSO2=utblztso.key	

		//TSO entry must be an entry from STBLTSO/UTBLZTSO		
		if (TSO'=TSO1),(TSO'=TSO2) do Runtime.setErrMSG("UTBLTRNSET",3638) quit:ER  
		
		}
	
	// Edit Check for UTBLTRNSET.TRNFIELD
	set LIBS="SYSDEV"
	set FID="TTX"
	set DI=utbltset.trnfield
	set REFTRAN=utbltset.reftran
	set SEQ=utbltset.seq
	
	type RecordDBTBL1D VAL1=Db.getRecord("DBTBL1D","%LIBS='SYSDEV',FID=:FID,DI=:DI",1)
	type RecordSTBLTSO VAL2=Db.getRecord("STBLTSO","KEY=:DI",1)
	type RecordUTBLZTSO VAL3=Db.getRecord("UTBLZTSO","KEY=:DI",1)

	set FID="STBLTSO"

	// Transaction field must be a column from TTX or entry from STBLTSO/UTBLZTSO
	if 'VAL1.getMode(),'VAL2.getMode(),'VAL3.getMode() do Runtime.setErrMSG("UTBLTRNSET",3610) quit:ER

	// Ref. Trans # must be 1 and the current sequence.
	if (REFTRAN'=""),((REFTRAN<1)!(REFTRAN>SEQ)) do Runtime.setErrMSG("UTBLTRNSET",3612) quit:ER

	/*
	   Edit Check - no more than 1 (one) of the following fields should be
	   populated: UTBLTRNSET.FIXEDVAL , UTBLTRNSET.TSO , UTBLTRNSET.TABLECOL,
	   UTBLTRNSET.FUNCTION
	*/ 
	set FIELDCNT=0
	if utbltset.dte'="" set FIELDCNT=FIELDCNT+1
	if utbltset.fixedval'="" set FIELDCNT=FIELDCNT+1
	if utbltset.tso'="" set FIELDCNT=FIELDCNT+1
	if utbltset.tablecol'="" set FIELDCNT=FIELDCNT+1
	if utbltset.function'="" set FIELDCNT=FIELDCNT+1
	// Choose either table.column, TSO entry, function call, fixed value, or date
	if FIELDCNT'=1 do Runtime.setErrMSG("UTBLTRNSET",3613) quit:ER

	// Edit Check for UTBLTRNSET.DTE
	set DATE=utbltset.dte

	// define numerics and alphabet for this country
	set CHARSET=Runtime.charset()
	set (ALPHABET,DIGITS)=""
	for i=1:1:$l(CHARSET) do {
		new X
		set X=CHARSET.extract(i)
		if X?.N set DIGITS=DIGITS_X
		if X?.A set ALPHABET=ALPHABET_X
		}

	// Is the date entered as T or T+1 or T-1 ? - If so, validate this format.
	if DATE.extract()="T",(DATE'="") do {  quit:ER
		//Date must be in DDMMMYYYY or T+- format
		if DATE.length()>6 do Runtime.setErrMSG("UTBLTRNSET",3614) quit:ER   
		if ($E(DATE,2)'="+"),($E(DATE,2)'="-"),($L(DATE)>1) do Runtime.setErrMSG("UTBLTRNSET",3614) quit:ER	 
		set DIG1=DATE.extract(3) 
		set DIG2=DATE.extract(4) 
		set DIG3=DATE.extract(5) 
		set DIG4=DATE.extract(6)
		if '(DIGITS[DIG1)!'(DIGITS[DIG2)!'(DIGITS[DIG3)!'(DIGITS[DIG4) do Runtime.setErrMSG("UTBLTRNSET",3614) quit:ER      
		}

	// If the date does not begin with "T", check against DDMMMYYYY format.
	if DATE.extract()'="T"&(DATE'="") do {  quit:ER
		if DATE.length()'=9 do Runtime.setErrMSG("UTBLTRNSET",3614) quit:ER
		set DIG1=DATE.extract(1)
		set DIG2=DATE.extract(2) 
		set MON1=DATE.extract(3) 
		set MON2=DATE.extract(4) 
		set MON3=DATE.extract(5) 
		set YR1=DATE.extract(6) 
		set YR2=DATE.extract(7) 
		set YR3=DATE.extract(8) 
		set YR4=DATE.extract(9)
		if '(DIGITS[DIG1)!'(DIGITS[DIG2) do Runtime.setErrMSG("UTBLTRNSET",3614) quit:ER    
		if '(ALPHABET[MON1)!'(ALPHABET[MON2)!'(ALPHABET[MON3) do Runtime.setErrMSG("UTBLTRNSET",3614) quit:ER       
		if '(DIGITS[YR1)!'(DIGITS[YR2)!'(DIGITS[YR3)!'(DIGITS[YR4) do Runtime.setErrMSG("UTBLTRNSET",3614) quit:ER  
		}

	/*
	   Edit Check for UTBLTRNSET.TABLECOL
	   First verify there is only one period.
	*/
	set TABLECOL=utbltset.tablecol
	if TABLECOL'="" do {  quit:ER
		// TABLE.COLUMN must be a valid table.column.
		if TABLECOL.piece(".",3)'="" do Runtime.setErrMSG("UTBLTRNSET",3615) quit:ER   
		if TABLECOL.piece(".",2)="" do Runtime.setErrMSG("UTBLTRNSET",3615) quit:ER    
		set FID=TABLECOL.piece(".",1)	    // name of table
		//Table.column entries for transaction sets must use DEP,LN,CIF or TTX
		if (FID'="TTX"),(FID'="LN"),(FID'="DEP"),(FID'="CIF") do Runtime.setErrMSG("UTBLTRNSET",3766) quit:ER       
		set DI=TABLECOL.piece(".",2)
		// TABLE.COLUMN must be a valid table.column
		type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS='SYSDEV',FID=:FID,DI=:DI",1)
		if 'dbtbl1d.getMode() do Runtime.setErrMSG("UTBLTRNSET",3615) quit:ER   
		//Table.column must have transaction reference number
		if (utbltset.reftran="") do Runtime.setErrMSG("UTBLTRNSET",3754) quit:ER  
		}
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60233^30806^Renga SP^5376"	// Signature - LTD^TIME^USER^SIZE
