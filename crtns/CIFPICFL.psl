CIFPICFL(RecordCIFPIC cifpic, String vpar, Boolean vparNorm) // CIFPIC - Customer Picture Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:13 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (4)              11/22/2003
	// Trigger Definition (1)                      12/17/2004
	// Journal File Definition (2)                 12/17/2004
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = cifpic.getMode()                      // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(cifpic,.vxins(),10,"|")
	if %O = 1 quit:'cifpic.isChanged()  do AUDIT^UCUTILN(cifpic,.vx(),10,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String ACN = cifpic.acn

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/TRIGBEF/" do VBI                            // Before insert triggers
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("ACN").exists() do vkchged quit                 // Primary key changed
		if vpar["/TRIGBEF/" do VBU                            // Before update triggers
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("CIFPIC",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("CIFPIC","ACN = :cifpic.acn")      // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String ACN

	type RecordCIFPIC cifpic = Db.getRecord("CIFPIC","ACN=:ACN")
	if (%ProcessMode = 2) do {
		do cifpic.setMode(2)

		do CIFPICFL(cifpic,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordCIFPIC cifpic

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("CIFPIC","ACN = :cifpic.acn") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		set cifpic.DATE = %SystemDate
		set cifpic.TIME = %CurrentTime
		type String n = -1
		type String x

		if %O = 0 for  set n = vobj(cifpic,n).order() quit:n.isNull()  do {
			if n = 3 do { quit
				// Allow global reference and M source code
				#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
				#BYPASS
					K ^CIFPIC(vobj(cifpic,-3),3) N vS1,vS2 S vS1=0 F vS2=1:450:$L(vobj(cifpic,3,1)) S vS1=vS1+1,^CIFPIC(vobj(cifpic,-3),3,vS1)=$E(vobj(cifpic,3,1),vS2,vS2+449)
				#ENDBYPASS
			}
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
				S ^CIFPIC(vobj(cifpic,-3),n)=vobj(cifpic,n)
			#ENDBYPASS
		}

		else  for  set n = vobj(cifpic,-100,n).order() quit:n.isNull()  do {
			if n = "3,1" do { quit
				// Allow global reference and M source code
				#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
				#BYPASS
					K ^CIFPIC(vobj(cifpic,-3),3) N vS1,vS2 S vS1=0 F vS2=1:450:$L(vobj(cifpic,3,1)) S vS1=vS1+1,^CIFPIC(vobj(cifpic,-3),3,vS1)=$E(vobj(cifpic,3,1),vS2,vS2+449)
				#ENDBYPASS
			}
			quit:'$D(vobj(cifpic,n))
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
				S ^CIFPIC(vobj(cifpic,-3),n)=vobj(cifpic,n)
			#ENDBYPASS
		}


		if vpar["/JOURNAL/" do VJOURNAL(.cifpic)              // Create journal files
	}

	quit

vload // Record Load - force loading of unloaded data

	type public RecordCIFPIC cifpic
	type String n = ""

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	for  set n=$order(^CIFPIC(vobj(cifpic,-3),n)) quit:n=""  if '$D(vobj(cifpic,n)),$D(^CIFPIC(vobj(cifpic,-3),n))#2 set vobj(cifpic,n)=^(n)
	#ENDBYPASS
	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordCIFPIC cifpic

	if 'vkeychg.get(),cifpic.isChanged() throw Class.new("Error","%PSL-E-DBFILER,Deleted object cannot be modified")

	if vpar["/JOURNAL/" do VJOURNAL(.cifpic)               // Create journal entries

	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^CIFPIC(vobj(cifpic,-3))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordCIFPIC cifpic

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordCIFPIC cifpic

	if cifpic.acn.isNull() do vreqerr("ACN") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CIFPIC","MSG",1767,"CIFPIC."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordCIFPIC cifpic
	if 'cifpic.acn.isNull() set vfkey("^CIF("_""""_cifpic.acn_""""_","_1_")")="CIFPIC(ACN) -> CIF"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordCIFPIC cifpic
	type public Number %O
	type String vERRMSG

	if 'Db.isDefined("CIF",":cifpic.acn") set vERRMSG = $$^MSG(8563,"CIFPIC(ACN) -> CIF") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit


VBI //
	type public Number ER = 0
	type public String vx(),RM
	do vbi1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VBU //
	type public Number ER = 0
	type public String vx(),RM
	type public RecordCIFPIC cifpic
	do vbu1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	do AUDIT^UCUTILN(cifpic,.vx(),10,"|")
	quit


vbi1 // Trigger UPDATE_COUNTER - Update Access Counter

	do vbu1

	quit

vbu1 // Trigger UPDATE_COUNTER - Update Access Counter

	type public RecordCIFPIC cifpic
	do cifpic.setAuditFlag(1)
	/*
	-----Revision History--------------------------------------------------
	09/07/99 - CARROLLJ - 33890
		   Convert to PSL.
	*/


	// Update access counter
	
	set cifpic.counter.journal=0,cifpic.counter=cifpic.counter+1
	quit 
	


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordCIFPIC cifpic

	if (%O = 2) do vload

	if vobj(cifpic,1).exists() do {

		set X = cifpic.date if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("DATE", vRM) quit
	}

	if vobj(cifpic,2).exists() do {

		set X = cifpic.time if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"C") do vdderr("TIME", vRM) quit
	}

	if vobj(cifpic,4).exists() do {

		set X = cifpic.counter if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("COUNTER", vRM) quit
	}
	set X = cifpic.acn if 'X.isNull(),'Db.isDefined("CIF","X") set vRM = $$^MSG(1485,X) do vdderr("ACN", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CIFPIC","MSG",979,"CIFPIC."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VJOURNAL(RecordCIFPIC cifpic)	//CIFPIC Journal file entries

	type Public Date %EffectiveDate
	type Public String %TSRC,vpar,vx()
	type String TSRC,vdi,vdx()

	if %TSRC.get().isNull() set TSRC="O"
	else  set TSRC=%TSRC

	if %ProcessMode=0 do {
		if TSRC="O" do {
			if 'EFD.get() do {
				do vj1(.cifpic)	// Mode=I Tran=O EFD=N Seq=1 JRNID=CIFH_I
				}
			}
		}
	else  if %ProcessMode=1 do {
		if TSRC="O" do {
			if 'EFD.get() do {
				do vj2(.cifpic)	// Mode=U Tran=O EFD=N Seq=1 JRNID=CIFH_U
				}
			}
		}

	quit


vj1(RecordCIFPIC cifpic)	// CIFH_I  Table CIFH  History File

	type Public String %IDENT,%UID,TJD
	type String v1,vlastkey
	set v1=cifpic.acn
	set vlastkey=Db.nextVal("CIFH","ACN=:v1")
	type RecordCIFH cifh=Db.getRecord("CIFH","ACN=:v1,SEQ=:vlastkey",1)
	set cifh.hdate=+$H
	set cifh.htime=$P($H,",",2)
	set cifh.ident=%IDENT
	set cifh.tcmt=$$^MSG(2037)
	set cifh.tjd=TJD
	set cifh.uid=%UID

	do cifh.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj2(RecordCIFPIC cifpic)	// CIFH_U  Table CIFH  History Maintenance

	type Public String vx()
	type String vdi

	set vdi="" for  set vdi=vx(vdi).order() quit:vdi=""  do { quit
		type Public String %IDENT,%UID,TJD
		type String v1,vlastkey
		set v1=cifpic.acn
		set vlastkey=Db.nextVal("CIFH","ACN=:v1")
		type RecordCIFH cifh=Db.getRecord("CIFH","ACN=:v1,SEQ=:vlastkey",1)
		set cifh.hdate=+$H
		set cifh.htime=$P($H,",",2)
		set cifh.ident=%IDENT
		set cifh.tcmt=$$^MSG(2040)
		set cifh.tjd=TJD
		set cifh.uid=%UID

		do cifh.save("/NOVALFK/NOVALDD/NOVALRI")
		}

	quit



vkchged // Access key changed

	type public RecordCIFPIC cifpic

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	set vux = vx("ACN")
	set voldkey = vux.piece("|",1),vobj(cifpic,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	do vload                                               // Make sure all data is loaded locally
	if vpar["/VALREQ/" do vrequ
	if vpar["/TRIGBEF/" do VBU
	if vpar["/VALDD/" do vddver
	do vexec

	set vnewkey = vux.piece("|",2),vobj(cifpic,-3) = vnewkey // Copy new keys into object
	type RecordCIFPIC vnewrec = cifpic.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("CIFPIC",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	set vobj(cifpic,-3) = vux.piece("|",1)                 // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit
