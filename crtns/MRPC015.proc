MRPC015(return,versn,CID,%EffectiveDate,ACT)	//Public; Loan Accrual Support Status
	/*
	   ORIG: Steve Canfield - 6/04/96

	   This extrinsic function returns the results of the Loan Accounting
	   Accrual Support Status report, or the Loan Payoff Accrual Support
	   Status report, based on the setting of ACT.

	   [SCATBL5]RPCID=15

	   KEYWORDS: Client/Server, Loans, Accrual, Reports, RPC

	   ARGUMENTS:
	       . return fLNACR    /TYP=T/REQ
	    		Based on Accrual Calculation /MECH=REFNAM:W
	           	method, matches either [LNACR0A],
	    		[LNACR1A], or [LNACR3A]

	       . versn ^MRPC015 version number  /TYP=N/REQ
	    		Current version = 1  /MECH=VAL

	       . CID Account number   /TYP=N/REQ
	        	/MECH=VAL

	       . EFD  Effective Date   /TYP=D/REQ
	        	/MECH=VAL

	       . ACT     Accounting Accrual Flag  /TYP=L/NOREQ
	    		"" = Payoff Accrual  /MECH=VAL
	    		1  = Accounting Accrual

	   RETURNS:
	       . $$ Error message   /TYP=T
	    		Null = No error

	   RELATED:
	       . $$^PBSMRPC - MRPC Service Class Driver

	   EXAMPLES:

	   S RM=$$^MRPC015(.val,1,CID,EFD)

	  ---- Revision History ------------------------------------------------
	
	   30/11/05 - Radhika P CR 18279
		.Check piece 2 of PCM before adding additional pieces
		 to return string (retrofit of p01dev1).
		.Add piece 2 of PCM to return string.This is needed for front
		 end to determine how to parse data (retrofit of p01dev1).
	        .Passed %ACM to pass by reference in ACRCLC^LNACRS call.  
		    		
	   11/16/04 - TITOVE - CR 13197
	   	Modified by restoring the old fLNACR logic and added two new
	   	arguments to ACRCLC^LNACRS call.

	   12/18/03 - CARROLLJ - CR7239
		Modified calls to LNACRS.

	   04/10/02 - TELIV - 49794
		Converted to PSL.

	*/

	// Version number of client message is not compatible with server
	if versn.get() <> 1 quit $$ERRMSG^PBSUTL($$^MSG(2951))

	// Invalid account ~p1
	if 'Db.isDefined("ACN", "CID = :CID") quit $$ERRMSG^PBSUTL($$^MSG(1259))

	type public Boolean ER
	type Boolean %PLDF
	type Number %ACM
	type String ET, fLNACR,PCM, RM, tab

	set return = ""
	set ET = ""
	set RM = ""
	set tab = $C(9)

	// Since ^LNACRS decides which accrual status to run based on whether
	// ACT is defined, kill it if a null value, or zero, is passed in.
	if 'ACT.get() kill ACT

        /*
        ACRCLC^LNACRS will call into one of 3 routines to calculate the
        accrual information for a loan at payoff.  The value of %ACM
        represents the value of LN.PAYACM, the Payoff - Int Accrual Calc Method.
        The possible values for this method are:
 
                0  Loan Current Accrual Balance - No Adjustment
                1  Amortized Loan - Allocate Current Period Interest
                2  Amortized Loan - Simple Interest in Final Period -
                                                 Payoff Method Only
                3  Add-on/Discount Loans - Compare Scheduled With Actual
                                                                Earnings
                4  FNMA: 30/360 Each Delq Pmt (Cur Bal) + Odd Days at 31/365
                                                          (Payoff Met Only)
 
        When %ACM is equal to 0, the routine ^LNACR0 calculates the accrual
        amount and stores the needed information in the %LNACR string.
 
        When %ACM is equal to a value of 1, 2 or 4, the routine ^LNACR1
        calculates the accrual and stores the information in the %LNACR string.
 
        When %ACM is equal to a value of 3, the routine ^LNACR3 calcuates
        the accrual and stores the information in the %LNACR string.
        
        The accrual support data will be returned in the form of fLNACR string
        that would be formatted and returned to the calling program.
 
        Since ^LNACRS will need to retrieve account data from the loan
        account, the ln object will be needed to be passed in.
 
        This utility will now load the value of %ACM in order to determine
        which object needs to be updated before calling into ACRCLC^LNACRS. 
        */

        type RecordLN ln = Db.getRecord("LN", "CID = :CID")
        
        set %ACM = +ln.payacm
 
        do ACRCLC^LNACRS(.ln, .fLNACR, .%ACM)
        
	if ER quit $$ERRMSG^PBSUTL(RM, ET)

       if PCM.extract(2),((%ACM=1)!(%ACM=2)!(%ACM=4)) do {

		// Make sure to avoid Division By Zero error
		if +fLNACR.piece("|",4) = 0 set fLNACR = fLNACR_tab quit
		
		// Calculate Subtotal, and include at end of string if Payoff
		// Accrual Method = 1
		type Number subtotal
		set subtotal = (fLNACR.piece("|",3)/fLNACR.piece("|",4)*fLNACR.piece("|",1))
		set fLNACR = fLNACR_tab_$$^SCARND(subtotal, 0, CID)
	}
 
	if PCM.extract(2),(%ACM = 3) set fLNACR.piece("|",12) = fLNACR.piece("|",8) + fLNACR.piece("|",9)
 
        set fLNACR = fLNACR.translate("|", tab)    // Replace "|" with tab
 
        set return = %ACM_PCM.extract(2)_tab_%PLDF_tab_fLNACR_$C(13,10)
 
        set return = $$V2LV^MSG(return)
        
        quit ""
        

vSIG()	quit "60235^22376^Radhika Panchanathan^4793"	// Signature - LTD^TIME^USER^SIZE
