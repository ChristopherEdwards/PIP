R01S434	// SCA477 - Foreign Exch Daily Curr Position Detail
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:50 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA477"
	set RN="Foreign Exch Daily Curr Position Detail "
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DEAL1]EDT|||D EXT^DBSQRY||T|Date Entered|||||"
	set %TAB("VIN2")="|255||[DEAL1]CRCDB|[CRCD]:QU ""[CRCD]CO=<<CO>>"":NOVAL||D EXT^DBSQRY||T|Currency (Buy)|||||"
	set %TAB("VIN3")="|255||[DEAL1]NOINT|[DEAL1]NOINT:DISTINCT:NOVAL||D EXT^DBSQRY||T|Contract Number|||||"
	set %TAB("VIN4")="|255||[DEAL1]STATUS|[STBLDSTAT]:NOVAL||D EXT^DBSQRY||T|Status|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,FPOS,LS,NAMT,OCRCDBS,OEDT,RID,RN,SAVG,SPOS,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA477",RN="Foreign Exch Daily Curr Position Detail "
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA477","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[DEAL1]AMTB#9#19"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DEAL1]EDT "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DEAL1]CRCDB "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEAL1]NOINT "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DEAL1]STATUS "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DEAL1") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Date Entered"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Currency (Buy)"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Contract Number"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Status"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Foreign Exch Daily Curr Position Detail "
		set VBNRINFO("PGM")="R01S434"
		set VBNRINFO("RID")="SCA477"
		set VBNRINFO("TABLES")="DEAL1"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEAL1]EDT"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEAL1]CRCDB"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEAL1]NOINT"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DEAL1.EDT,DEAL1.CRCDB,DEAL1.NOINT,DEAL1.AMTB,DEAL1"
	set VSELECT=VSELECT_".VDT,DEAL1.CRCDS,DEAL1.AMTS,DEAL1.TDT,DEAL1.RATE,D"
	set VSELECT=VSELECT_"EAL1.BRTEQ,DEAL1.SRTEQ"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DEAL1",VWHERE,"DEAL1.EDT,DEAL1.CRCDB,DEAL1.NOINT","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece($C(9),1)			// DEAL1.EDT
	set vc2=V.piece($C(9),2)			// DEAL1.CRCDB
	set vc3=V.piece($C(9),3)			// DEAL1.NOINT
	set vc4=V.piece($C(9),4)			// DEAL1.AMTB
	set vc5=V.piece($C(9),5)			// DEAL1.VDT
	set vc6=V.piece($C(9),6)			// DEAL1.CRCDS
	set vc7=V.piece($C(9),7)			// DEAL1.AMTS
	set vc8=V.piece($C(9),8)			// DEAL1.TDT
	set vc9=V.piece($C(9),9)			// DEAL1.RATE
	set vc10=V.piece($C(9),10)			// DEAL1.BRTEQ
	set vc11=V.piece($C(9),11)			// DEAL1.SRTEQ
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 // Initialize currency to recognize changes in collating - this to
 // avoid user-defined code in collating for CRCD (post-processor).
 
 type public Date OEDT
 type public String OCRCDBS
 type String CO,SPTDYS(),VAL
 
 set (OCRCDBS,OEDT)=""

 //  THIS IS A GLOBAL REFERENCE, BUT THE LEAST ONEROUS I COULD DEVISE
 set VAL="",CO=CUVAR.co
 
 type ResultSet rs=Db.select("CRCD,SPTDYS","CRCD","CO=:CO")
 while rs.next() do {
	set VAL=rs.getCol("CRCD")
	set SPTDYS(VAL)= rs.getCol("SPTDYS")
	}

 quit
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL3	// Detail
	type public String %TIM,FPOS,IOSL,LS,NAMT,OCRCDBS,OEDT,SAVG,SPOS,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),19) do VP2 quit:VFMQ!verror.get()  set VL="        "_V
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,FPOS,I,IOSL,LS,NAMT,OCRCDBS,OEDT,SAVG,SPOS,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL=" "_$E(vc2,1,3)
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN($S(SPOS<0:SPOS-500,1:SPOS+500)\1000,",",0),15)
	set VL=VL_$J("",6-VL.length())_V
	set VL=VL_$J("",21-VL.length())_$E(LS,1,1)
	do VP4 quit:VFMQ!verror.get()  set V=$J(SAVG,12,8)
	set VL=VL_$J("",25-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V=$J($FN($S(FPOS<0:FPOS-500,1:FPOS+500)\1000,",",0),14)
	set VL=VL_$J("",43-VL.length())_V
	set VL=VL_$J("",57-VL.length())_$E(LS,1,1)
	do VP6 quit:VFMQ!verror.get()  set V=$J($FN($S(NAMT<0:NAMT-500,1:NAMT+500)\1000,",",0),14)
	set VL=VL_$J("",62-VL.length())_V
	set VL=VL_$J("",76-VL.length())_$E(LS,1,1)
	do VOM
	set VL="" do VOM
	set VL=" "_"Cash Flow"
	do VOM
	set VL=" "_$J($$DAT^%ZM(DT(1)),10)
	set VL=VL_$J("",12-VL.length())_$J($$DAT^%ZM(DT(2)),10)
	set VL=VL_$J("",23-VL.length())_$J($$DAT^%ZM(DT(3)),10)
	set VL=VL_$J("",34-VL.length())_$J($$DAT^%ZM(DT(4)),10)
	set VL=VL_$J("",45-VL.length())_$J($$DAT^%ZM(DT(5)),10)
	set VL=VL_$J("",56-VL.length())_$J($$DAT^%ZM(DT(6)),10)
	set VL=VL_$J("",67-VL.length())_$J($$DAT^%ZM(DT(7)),10)
	do VOM
	do VP7 quit:VFMQ!verror.get()  set V=$J($FN($S(CF(1)<0:CF(1)-500,1:CF(1)+500)\1000,",",0),10) set VL=" "_V
	set VL=VL_$J("",11-VL.length())_$E(LS,1,1)
	do VP8 quit:VFMQ!verror.get()  set V=$J($FN($S(CF(2)<0:CF(2)-500,1:CF(2)+500)\1000,",",0),10)
	set VL=VL_$J("",12-VL.length())_V
	set VL=VL_$J("",22-VL.length())_$E(LS,1,1)
	do VP9 quit:VFMQ!verror.get()  set V=$J($FN($S(CF(3)<0:CF(3)-500,1:CF(3)+500)\1000,",",0),10)
	set VL=VL_$J("",23-VL.length())_V
	set VL=VL_$J("",33-VL.length())_$E(LS,1,1)
	do VP10 quit:VFMQ!verror.get()  set V=$J($FN($S(CF(4)<0:CF(4)-500,1:CF(4)+500)\1000,",",0),10)
	set VL=VL_$J("",34-VL.length())_V
	set VL=VL_$J("",44-VL.length())_$E(LS,1,1)
	do VP11 quit:VFMQ!verror.get()  set V=$J($FN($S(CF(5)<0:CF(5)-500,1:CF(5)+500)\1000,",",0),10)
	set VL=VL_$J("",45-VL.length())_V
	set VL=VL_$J("",55-VL.length())_$E(LS,1,1)
	do VP12 quit:VFMQ!verror.get()  set V=$J($FN($S(CF(6)<0:CF(6)-500,1:CF(6)+500)\1000,",",0),10)
	set VL=VL_$J("",56-VL.length())_V
	set VL=VL_$J("",66-VL.length())_$E(LS,1,1)
	do VP13 quit:VFMQ!verror.get()  set V=$J($FN($S(CF(7)<0:CF(7)-500,1:CF(7)+500)\1000,",",0),10)
	set VL=VL_$J("",67-VL.length())_V
	set VL=VL_$J("",77-VL.length())_$E(LS,1,1)
	do VOM
	set VL=" "_"------------------------------------------------------------------------------"
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,FPOS,LS,NAMT,OCRCDBS,OEDT,RID,RN,SAVG,SPOS,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,40)
	set VL=VL_$J("",49-VL.length())_"Run Date:"
	set VL=VL_$J("",59-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",51-VL.length())_"System:"
	set VL=VL_$J("",59-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL=" "_"Entry Date:"
	set VL=VL_$J("",13-VL.length())_$J($$DAT^%ZM(vc1),10)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="Curr     Today's Spot    Spot Avg Rate        Today's Fwd            Net Pos"
	do VOM
	set VL="================================================================================"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,DEAL1]AMTB

	type public String vc2,vc1
 type public Date OEDT,SPOTDT,SPTDYS()
 type public Number FAMT,FPOS,FRTAMT,SAMT,SPOS,SRTAMT
 type public String OCRCDBS,VAL
 type Date EDT
 type Number I
 type String CRCDBS


 set CRCDBS=vc2
 set EDT=vc1

 if OCRCDBS=CRCDBS quit

 set (FAMT,FRTAMT,SRTAMT,SAMT,SPOS,FPOS)=0,OCRCDBS=CRCDBS
 set SPOTDT=$$NBD^UNBD(EDT+1,SPTDYS(CRCDBS).get(),0,"IBS")

 // If trade date has changed, initialize counters and dates
 for I=1:1:7 set VAL="DT("_I_")",@VAL=(EDT+I-1),VAL="CF("_I_")",@VAL=0
 if OEDT'=EDT do { quit
	// LOOP FORWARD TILL FIND 2 BUS DAYS
	// Leave at 2 days, collate may have CRCD at null
	set SPOTDT=$$NBD^UNBD(EDT+1,2,0,"IBS")
	set OEDT=EDT
	}
 quit
	quit

VP2	// Column post-processor - [SYSDEV,DEAL1]AMTB

	type public String vc5,vc2,vc4,vc6,vc7,vc8,vc9,vc10,vc11
 type public Date SPOTDT
 type public Number CF(),FPOS,SPOS
 type public String %CRCD,CRCDBS,OCRCDBS
 type Number AMT,FAMT,FRTAMT,OFF,RATE,SAMT,SRTAMT
 type String BS,SPTFWD,V,VL 

 // ALWAYS BLANK OUT THE LINE
 set (V,VL)=""
 /* Here accumulate amounts based on spot or fwd trade
   If straight deal then one currency will be base (%CRCD)
   and the amount involved will be the CRCDB or CRCDS corresponding
   to the non-base currency and its AMTB or AMTS.  Otherwise, it's
   a cross deal and all values will be calculated.
 */
 // Is this spot or forward trade
	set SPTFWD="S"

 // SPOTDT is that date beyond which value date indicates that
 // the deal is forward - it's defined in report pre-processor.

 if vc5>SPOTDT set SPTFWD="F"

 // Bought/Sold and amount independent of cross or straight deal

 if OCRCDBS=vc2 do { quit
	set AMT=vc4
	set BS="B"
	}

 if CRCDBS=vc6 do { quit
	set AMT=vc7
	set BS="S"
	} 

 // Rate determination sensitive to cross or straight deal
 if vc2'=%CRCD&(vc6'=%CRCD) do CROSS(.RATE,BS) if 1
 else  do STRAIGHT(.RATE,BS,%CRCD,CRCDBS)

 if SPTFWD="S" do { quit
	// either add or subtract to position based on buy or sell
	set SPOS=SPOS+($S(BS="S":-AMT,1:AMT))
	// Accumulate to Value date
	// See if Value date to Trade date offset is in 6 day reporting window
	set OFF=vc5-vc8
	if OFF<7 do { quit
		if OFF<1 set CF(1)=CF(1)+$S(BS="S":-AMT,1:AMT) quit
		set CF(OFF+1)=CF(OFF+1)+$S(BS="S":-AMT,1:AMT)
		// Accumulate for weighted rate based on total amounts
		set SAMT=SAMT+AMT
		set SRTAMT=SRTAMT+(AMT*RATE)
		}
	}

 if SPTFWD="F" do { quit

	// Either add or subtract to position based on buy or sell
	set FPOS=FPOS+($S(BS="S":-AMT,1:AMT))
	// Accumulate to Value date
	// See if Value date to Trade date offset is in 6 day reporting window
	set OFF=vc5-vc8
	if OFF<7 do { quit
		if OFF<1 S CF(1)=CF(1)+$S(BS="S":-AMT,1:AMT) quit
		set CF(OFF+1)=CF(OFF+1)+$S(BS="S":-AMT,1:AMT)
		// Accumulate for weighted rate based on total amounts
		set FAMT=FAMT+AMT
		set FRTAMT=FRTAMT+(AMT*RATE)
		}
	}

 quit


STRAIGHT(Number RATE,		// Exchange Rate
         String BS,		// Buy or Sell flag
         String CRCD,		// Currency Code
         String CRCDBS)		// Buy or Sell Currency Code

 // One currency is base (%CRCD), so accumulate other

 if CRCDBS=CRCD set RATE=1 quit

 if BS="B" set RATE=vc9

 // If currency is sold, use inverse of rate
 if BS="S" set RATE=1/vc9

 quit


CROSS(Number RATE,		// Exchange Rate
      String BS)		// Buy or Sell flag

 // If cross deal, then determine rate against base currency

 if BS="B" set RATE=vc10
 
 if BS="S" set RATE=vc11

 quit
	quit

VP3	// Column pre-processor - Variable: SPOS

 type public Number FPOS,NAMT,SPOS
 type public String LS 
 
 // Net out SPOT and FWD positions
 set NAMT=SPOS+FPOS
 set LS="L"
 
 // If negative position, invert and call it short.
 if SPOS<0 set SPOS=-SPOS,LS="S" quit
 quit
	quit

VP4	// Column pre-processor - Variable: SAVG

 type public Number SAMT,SAVG,SRTAMT
 
 set SAVG=""
 if SAMT set SAVG=SRTAMT/SAMT
 quit
	quit

VP5	// Column pre-processor - Variable: FPOS

 type public Number FPOS
 type public String LS

 set LS="L"
 if FPOS<0 set FPOS=-FPOS,LS="S"
 quit
	quit

VP6	// Column pre-processor - Variable: NAMT

 type public Number NAMT
 type public String LS

 set LS="L"
 if NAMT<0 set NAMT=-NAMT,LS="S"
 quit
	quit

VP7	// Column pre-processor - Variable: CF(1)

 type public Number CF()
 type public String LS
 
 set LS="L"
 if CF(1)<0 set CF(1)=-CF(1),LS="S"
 quit
	quit

VP8	// Column pre-processor - Variable: CF(2)

 type public Number CF()
 type public String LS 

 set LS="L"
 if CF(2)<0 set CF(2)=-CF(2),LS="S"
 quit
	quit

VP9	// Column pre-processor - Variable: CF(3)

 type public Number CF()
 type public String LS

 set LS="L"
 if CF(3)<0 set CF(3)=-CF(3),LS="S"
 quit
	quit

VP10	// Column pre-processor - Variable: CF(4)

 type public Number CF()
 type public String LS

 set LS="L"
 if CF(4)<0 set CF(4)=-CF(4),LS="S"
 quit
	quit

VP11	// Column pre-processor - Variable: CF(5)

 type public Number CF()
 type public String LS

 set LS="L"
 if CF(5)<0 set CF(5)=-CF(5),LS="S"
 quit
	quit

VP12	// Column pre-processor - Variable: CF(6)

 type public Number CF()
 type public String LS

 set LS="L"
 if CF(6)<0 set CF(6)=-CF(6),LS="S"
 quit
	quit

VP13	// Column pre-processor - Variable: CF(7)

 type public Number CF()
 type public String LS

 set LS="L"
 if CF(7)<0 set CF(7)=-CF(7),LS="S"
 quit
	quit
