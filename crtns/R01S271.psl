R01S271	// SCA261 - Net Deferred Fee Amortization Detail Rpt
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:55 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"

	set RID="SCA261"
	set RN="Net Deferred Fee Amortization Detail Rpt"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNNFAMD]EFD|[LNNFAMD]EFD:DISTINCT:NOVAL||D EXT^DBSQRY||T|Deferred Fee Posting Date|||||"
	set %TAB("VIN2")="|255||[LNNFAMD]PLAN|[AOAMO]PLAN,PDES:QU ""[AOAMO]TYP=<<""""PTS"""">>&[AOAMO]PAYEE=1""||D EXT^DBSQRY||T|Plan|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BT,CONAM,DAYS,EFD,PLAN,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA261",RN="Net Deferred Fee Amortization Detail Rpt"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA261","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNNFAMD]CID#1#12,[LNNFAMD]AMT#14#10,[LNNFAMD]NDD#25#10,[LNNFAMD]NPDA#36#9,[LNNFAMD]DTF#46#10,[LNNFAMD]NINV#61#10,[LNNFAMD]IRR#72#8,[LNNFAMD]NINT#81#9,[LNNFAMD]BAL#91#11,[LNNFAMD]BIRN#104#8,[LNNFAMD]BINT#113#9"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNNFAMD]EFD "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LNNFAMD]PLAN "_VIN2,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNNFAMD,LNNFAMHDR") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Deferred Fee Posting Date"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Plan"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Net Deferred Fee Amortization Detail Rpt"
		set VBNRINFO("PGM")="R01S271"
		set VBNRINFO("RID")="SCA261"
		set VBNRINFO("TABLES")="LNNFAMD,LNNFAMHDR"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNNFAMD]EFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNNFAMD]""LNNFAMD"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNNFAMD]PLAN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNNFAMD]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:5 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNNFAMD.EFD,LNNFAMD.PLAN,LNNFAMD.CID,LNNFAMHDR.DTT"
	set VSELECT=VSELECT_",LNNFAMD.AMT,LNNFAMD.NDD,LNNFAMD.NPDA,LNNFAMD.DTF,"
	set VSELECT=VSELECT_"LNNFAMD.NINV,LNNFAMD.IRR,LNNFAMD.NINT,LNNFAMD.BAL,"
	set VSELECT=VSELECT_"LNNFAMD.BIRN,LNNFAMD.BINT,LNNFAMHDR.BTYP"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNNFAMD,LNNFAMHDR",VWHERE,"LNNFAMD.EFD,LNNFAMD.PLAN,LNNFAMD.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15
	set vc1=V.piece($C(9),1)			// LNNFAMD.EFD
	set vc2=V.piece($C(9),2)			// LNNFAMD.PLAN
	set vc3=V.piece($C(9),3)			// LNNFAMD.CID
	set vc4=V.piece($C(9),4)			// LNNFAMHDR.DTT
	set vc5=V.piece($C(9),5)			// LNNFAMD.AMT
	set vc6=V.piece($C(9),6)			// LNNFAMD.NDD
	set vc7=V.piece($C(9),7)			// LNNFAMD.NPDA
	set vc8=V.piece($C(9),8)			// LNNFAMD.DTF
	set vc9=V.piece($C(9),9)			// LNNFAMD.NINV
	set vc10=V.piece($C(9),10)			// LNNFAMD.IRR
	set vc11=V.piece($C(9),11)			// LNNFAMD.NINT
	set vc12=V.piece($C(9),12)			// LNNFAMD.BAL
	set vc13=V.piece($C(9),13)			// LNNFAMD.BIRN
	set vc14=V.piece($C(9),14)			// LNNFAMD.BINT
	set vc15=V.piece($C(9),15)			// LNNFAMHDR.BTYP
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG2 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc5,vc12,vc14,vc11,vc9
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc5			// @TOT([LNNFAMD]AMT)
	set VT(4,2,1)=VT(4,2,1)+vc12			// @TOT([LNNFAMD]BAL)
	set VT(4,3,1)=VT(4,3,1)+vc14			// @TOT([LNNFAMD]BINT)
	set VT(4,4,1)=VT(4,4,1)+vc11			// @TOT([LNNFAMD]NINT)
	set VT(4,5,1)=VT(4,5,1)+vc9			// @TOT([LNNFAMD]NINV)
	quit

VHDG2	// Group Header
	type public String %MSKD,%TIM,BT,CONAM,DAYS,EFD,ER,IOSL,PLAN,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:vh(2)  set vh(2)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="                "_"Amount               Prior     Calc     #  <------ Net Investment ------>  <------- Current Loan ------->    Net of"
	do VOM
	set VL="Loan Account  Amortized  Next Due  Non-Perf    From    Dys    Balance      Rate  Interest"
	do VP1 quit:VFMQ!verror.get()  set V=$E(BT,1,4)
	set VL=VL_$J("",93-VL.length())_V
	set VL=VL_$J("",98-VL.length())_"Bal      Rate  Interest   Interest"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,BT,DAYS,EFD,I,IOSL,PLAN,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+14>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="Totals For Date: "
	set VL=VL_$J("",17-VL.length())_$J($$DAT^%ZM(vc1),10)
	do VOM
	set VL="" do VOM
	set V=VT(3)					// @CNT(,N,12)
	set VL=$J(V,12)
	set V=VT(3,1,1)					// @TOT(AMT,)
	set VL=VL_$J("",14-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(3,5,1)					// @TOT(NINV,)
	set VL=VL_$J("",58-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(3,4,1)					// @TOT(NINT,)
	set VL=VL_$J("",77-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(3,2,1)					// @TOT(BAL,)
	set VL=VL_$J("",91-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(3,3,1)					// @TOT(BINT,)
	set VL=VL_$J("",107-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(3,4,1)-VT(3,3,1)			// @TOT(NINT)-@TOT(BINT)
	set VL=VL_$J("",120-VL.length())_$S(V="":"",1:$J(V,0,2))
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,BT,DAYS,EFD,IOSL,PLAN,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc3,12)
	set VL=VL_$J("",13-VL.length())_$S(vc5="":"",1:$J(vc5,0,2))
	set VL=VL_$J("",24-VL.length())_$J($$DAT^%ZM(vc6),10)
	set VL=VL_$J("",35-VL.length())_$S(vc7="":"",1:$J(vc7,0,2))
	set VL=VL_$J("",45-VL.length())_$J($$DAT^%ZM(vc8),10)
	do VP2 quit:VFMQ!verror.get()  set V=$J(DAYS,3)
	set VL=VL_$J("",56-VL.length())_V
	set VL=VL_$J("",60-VL.length())_$S(vc9="":"",1:$J(vc9,0,2))
	set VL=VL_$J("",71-VL.length())_$S(vc10="":"",1:$J(vc10,0,2))
	set VL=VL_$J("",80-VL.length())_$S(vc11="":"",1:$J(vc11,0,2))
	set VL=VL_$J("",90-VL.length())_$S(vc12="":"",1:$J(vc12,0,2))
	set VL=VL_$J("",103-VL.length())_$S(vc13="":"",1:$J(vc13,0,2))
	set VL=VL_$J("",112-VL.length())_$S(vc14="":"",1:$J(vc14,0,2))
	set VL=VL_$J("",122-VL.length())_$S(vc11-vc14="":"",1:$J(vc11-vc14,0,2))
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,BT,DAYS,EFD,I,IOSL,PLAN,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+11>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set V="Totals For Plan:" do VP3 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,6)
	do VOM
	set VL="" do VOM
	set V=VT(4)					// @CNT(,N,10)
	set VL=$J(V,10)
	set V=VT(4,1,1)					// @TOT(AMT,)
	set VL=VL_$J("",13-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(4,5,1)					// @TOT(NINV,)
	set VL=VL_$J("",58-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(4,4,1)					// @TOT(NINT,)
	set VL=VL_$J("",77-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(4,2,1)					// @TOT(BAL,)
	set VL=VL_$J("",91-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(4,3,1)					// @TOT(BINT,)
	set VL=VL_$J("",107-VL.length())_$S(V="":"",1:$J(V,0,2))
	set V=VT(4,4,1)-VT(4,3,1)			// @TOT(NINT)-@TOT(BINT)
	set VL=VL_$J("",120-VL.length())_$S(V="":"",1:$J(V,0,2))
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BT,CONAM,DAYS,EFD,PLAN,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set V="Posting Date: " do VP4 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",14-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",27-VL.length())_"Plan: "
	set VL=VL_$J("",33-VL.length())_$E(vc2,1,6)
	set VL=VL_$J("",42-VL.length())_"Ending Date For Calculations:"
	set VL=VL_$J("",72-VL.length())_$J($$DAT^%ZM(vc4),10)
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: BT

	type public String vc15
 ;S I18N=OFF
 S BT=" Sched"
 I vc15=1 S BT="Loan"
 ;S I18N=ON
	quit

VP2	// Column pre-processor - Variable: DAYS

	type public String vc4,vc8
 S DAYS=vc4-vc8
	quit

VP3	// Column post-processor - Totals For Plan:

 S LNNFAMD("PLAN")=$G(LNNFAMD("PLAN"))
	quit

VP4	// Column post-processor - Posting Date:

 S LNNFAMD("PLAN")=$G(LNNFAMD("PLAN"))
 S PLAN=$G(PLAN)
 S DTT=$G(DTT)
	quit
