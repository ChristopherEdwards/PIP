BCHESCCH //Batch BCHESCPMTCHG - Roll Analysis Data into account At APCND
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHESCPMTCHG Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHESCPMTCHG")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHESCPMTCHG") quit
 do JOBMGR^BCHUTL(%FN,"BCHESCPMTCHG",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHESCPMTCHG")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(CID) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHESCPMTCHG","*","",CID.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHESCPMTCHG",CID.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHESCPMTCHG",CID.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,CID)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHESCPMTCHG","*","",CID.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHESCPMTCHG",CID.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,CID) //
	do EXTERN
	
	quit

public EXTERN	//	External entry from non-batch programs

	new BL,LN,BAL
	new APCND,ANOFF,HSEQ,PMT,PMTTRS,PMTPI,JD,NJD,FRE,EACIP,APCLD,L,H,NTRS

	type RecordLN ln=Db.getRecord("LN","CID=:CID")
	set BAL=ln.bal
	if ln.stat=4 quit
	if 'ln.bal,'ln.stat set ET="LNEABP2" do LOGERR quit
	
	set PMT=ln.pmt
 	set PMTTRS=ln.pmttrs
  	set PMTPI=ln.pmtpi
	
	// If APCND is not today, then this loan must have been an off-cycle
	// analysis.  Skip the date roll.

 	set APCND=ln.apcnd
	if APCND'=%SystemDate do BIL(.ln) quit
	
	set ANOFF=ln.anoff
	set EACIP=ln.eacip
	set FRE=ln.anfre if FRE="" do ESET(.ln) set ET="LNEABP3" do LOGERR quit
	set APCLD=ln.apcld
	
	set ER=0
	set JD=APCND do ^UFRE if ER!(NJD<0) do ESET(.ln) set ET="LNEABP3" do LOGERR quit
	
	set TCMT=CID_"[LN]APCND:"_APCND_":"_NJD
	do HISTFILE(TCMT)
	set ln.apcnd=NJD
	
	// Update the Next Analysis Calculation Date
	set ln.anoffdt=NJD-ANOFF
	
	set TCMT=CID_"[LN]APCLD:"_APCLD_":"_APCND
	do HISTFILE(TCMT)
	set ln.apcld=APCND
	
	// If EACIP is not set note error, but bump dates.
	if 'EACIP set ET="LNEABP1" do LOGERR do C2(.ln) quit
	
	// If account status=1 bump dates only
	if ln.stat do C2(.ln) quit
	
	do BIL(.ln)
	
	quit

BIL(RecordLN ln)	// Adjust loan bill

	new J,BLX,LBLX  
	set BL=Db.getOneRow("PE01,PE02,PE03,PE04,PE05,PE06,PE07,PE08,PE09,PE10,PE11,PE12,PE13,PE14,PE15,PE16,PE17,PE18,PE19,PE20","LNBIL0","CID","124")	// DJH 12/13/01

        set BLX=$TR(BL,$C(9),"|")
        set LBLX=$L(BLX)
        for J=LBLX:-1:1 if $E(BLX,J)="|",$E(BLX,(J-1))="|" set BLX=$E(BLX,1,(J-1))
        if $E(BLX,$L(BLX))="|" S BLX=$E(BLX,1,($L(BLX)-1))
        S BL=BLX
	
	new L,I,ECID
	set L=$L(BL,"|"),NTRS=0
	for I=1:1:L set B=$P(BL,"|",I) do {	// DJH 12/13/01
		set ECID=$P(B,"#",2)
		// Only escrow accounts have piece 2 set
		if 'ECID quit
		
		// Is the escrow account closed?
		type RecordDEP dep=Db.getRecord("DEP","CID=:ECID")
		if dep.stat=4 do { quit
			set dep.curramt=""	// Null current payment
			set $P(B,"#",5)=""	// Null lump payment
			set dep.recamt=""	// Null next payment
			set $P(BL,"|",I)=B
			}
		
		set dep.curramt=dep.recamt	// Move RECAMT to CURRAMT
		set dep.recamt=""
 		do dep.bypassSave()
		set NTRS=NTRS+dep.curramt
		}
	set TCMT=CID_"[LN]PMT:"_PMT_":"_(PMTPI+NTRS)
	do HISTFILE(TCMT)
	set ln.pmt=PMTPI+NTRS
	
	set TCMT=CID_"[LN]PMTTRS:"_PMTTRS_":"_NTRS
	do HISTFILE(TCMT)
	set ln.pmttrs=NTRS
	
	type RecordLNBIL0 lnbil0=Db.getRecord("LNBIL0","CID")	

	// Modified the following  DJH 12/13/01
	if $P(BL,"|",1)'="" set lnbil0.pe01=$P(BL,"|",1)
	if $P(BL,"|",2)'="" set lnbil0.pe02=$P(BL,"|",2)
	if $P(BL,"|",3)'="" set lnbil0.pe03=$P(BL,"|",3)
	if $P(BL,"|",4)'="" set lnbil0.pe04=$P(BL,"|",4)
	if $P(BL,"|",5)'="" set lnbil0.pe05=$P(BL,"|",5)
	if $P(BL,"|",6)'="" set lnbil0.pe06=$P(BL,"|",6)
	if $P(BL,"|",7)'="" set lnbil0.pe07=$P(BL,"|",7)
	if $P(BL,"|",8)'="" set lnbil0.pe08=$P(BL,"|",8)
	if $P(BL,"|",9)'="" set lnbil0.pe09=$P(BL,"|",9)
	if $P(BL,"|",10)'="" set lnbil0.pe10=$P(BL,"|",10)
	if $P(BL,"|",11)'="" set lnbil0.pe11=$P(BL,"|",11)
	if $P(BL,"|",12)'="" set lnbil0.pe12=$P(BL,"|",12)
	if $P(BL,"|",13)'="" set lnbil0.pe13=$P(BL,"|",13)
	if $P(BL,"|",14)'="" set lnbil0.pe14=$P(BL,"|",14)
	if $P(BL,"|",15)'="" set lnbil0.pe15=$P(BL,"|",15)
	if $P(BL,"|",16)'="" set lnbil0.pe16=$P(BL,"|",16)
	if $P(BL,"|",17)'="" set lnbil0.pe17=$P(BL,"|",17)
	if $P(BL,"|",18)'="" set lnbil0.pe18=$P(BL,"|",18)
	if $P(BL,"|",19)'="" set lnbil0.pe19=$P(BL,"|",19)
	if $P(BL,"|",20)'="" set lnbil0.pe20=$P(BL,"|",20)

	do lnbil0.bypassSave()

	do C2(.ln)
	quit
	
C2(RecordLN ln)	//
	set ln.eacip=0
        // Clean up Off-cycle analysis flag and date
        set ln.ocaf=0
        set ln.ocadt=""
	do ln.bypassSave()
	quit


HISTFILE(TCMT) //

	type RecordHIST hist=Class.new("RecordHIST")
	set hist.cid=CID
	set hist.tjd=%SystemDate
	set hist.tlo=%UserStation
	set hist.tcmt=TCMT
	set hist.tseq=Db.nextVal("HIST","CID")
	do hist.bypassSave()
	quit	

ESET(RecordLN ln)	// Set EACIP to zero if error condition

	set ln.eacip=0 
	do ln.bypassSave()
	quit
	

LOGERR	// Log error in exception file

	type public Number BAL,CID,%ZTSEQ
	type public String ET,RM

	type String DESC
	
	// Escrow Analysis Change Date Processing 
	set DESC=$$^MSG(7116)_"|1"
	
	if ET.get().isNull() set ET=RM.get()
	
	do LOG^UTLEXC($T(+0),"*",DESC,$G(CID),$G(%ZTSEQ),$G(ET),+$G(BAL)) 
	kill ET,%ZTSEQ 
	quit

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,CID
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set CID=vRECORD.piece($C(9),1)
 do vPROC(CID)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,CID
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32767 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+13>32767 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
	type public Boolean ER
	type public Number BRCD,TSDR,TSCR

	// Set up UID and other var's for Auto Escrow Change batch
	do SOURCE^BCHSOURC("BOFF","AEU",.%UserID,.BRCD,.%UserClass,.TSDR,.TSCR)
	
	if ER do LOGERR set %BatchExit=1 quit

 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("CID","LN","LN.APCND=:TJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
