V01S604(Number %ProcessMode,RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)   //PBS - U - SID= <UEXTRMAP> Data Map Definition
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:35 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fEXTRACT(1).exists() set fEXTRACT(1) = Class.new("RecordEXTRACT")
  if 'fEXTRDSC.exists() set fEXTRDSC = Class.new("RecordEXTRACTDESC")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UEXTRMAP",VPGM=$T(+0),VSNAME="Data Map Definition"
 set VFSN("EXTRACT")="zfEXTRACT",VFSN("EXTRACTDESC")="zfEXTRDSC"
 set vPSL=1
 set KEYS(1)=fEXTRDSC.MAP
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=15 do VPR(.fEXTRACT(),.fEXTRDSC),VDA1(.fEXTRACT(),.fEXTRDSC),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fEXTRACT(),.fEXTRDSC) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fEXTRACT(),.fEXTRDSC),VPR(.fEXTRACT(),.fEXTRDSC),VDA1(.fEXTRACT(),.fEXTRDSC)
 if %ProcessMode do VLOD(.fEXTRACT(),.fEXTRDSC) quit:$G(ER)  do VPR(.fEXTRACT(),.fEXTRDSC),VDA1(.fEXTRACT(),.fEXTRDSC)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEXTRACT(),.fEXTRDSC)
 type Number ptr
 set ptr=""
 for  set ptr = fEXTRACT(ptr).order() quit:ptr.isNull()  do {
     if fEXTRACT(ptr).SRCDI="" kill fEXTRACT(ptr)
     }
	quit


VNEW(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC) // Initialize arrays if %O=0
 
 do VDEF(.fEXTRACT(),.fEXTRDSC)
 do VLOD(.fEXTRACT(),.fEXTRDSC)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=15
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC) // Display screen prompts
 set VO="10||13|"
 set VO(0)="|"
 set VO(1)=$C(3,1,14,0,0,0,0,0,0,0)_"01TData Map Name:"
 set VO(2)=$C(3,30,12,0,0,0,0,0,0,0)_"01TLast Change:"
 set VO(3)=$C(3,55,10,0,0,0,0,0,0,0)_"01TUser Name:"
 set VO(4)=$C(4,3,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(5)=$C(6,1,16,2,0,0,0,0,0,0)_"01TSource Data Item"
 set VO(6)=$C(6,28,18,2,0,0,0,0,0,0)_"01TArchive Data Item "
 set VO(7)=$C(6,55,13,2,0,0,0,0,0,0)_"01TLook-up Table"
 set VO(8)=$C(7,1,25,2,0,0,0,0,0,0)_"11Tooooooooooooooooooooooooo"
 set VO(9)=$C(7,28,25,2,0,0,0,0,0,0)_"11Tooooooooooooooooooooooooo"
 set VO(10)=$C(7,55,22,2,52,0,0,0,0,0)_"11Toooooooooooooooooooooo"
 if '%MODS.exists() set %MODS=1
 set DY=8 for I=%MODS:1:%REPEAT+%MODS-1 do VRPR(.fEXTRACT(),.fEXTRDSC)
 set VO=(+VO)_"|"_(VO+1)_"|13" quit  // BOD pointer
 
VRPR(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)  // Display prompts %REPEAT times
 
 set VO(VO+1)=$C(DY,40,1,0,52,0,0,0,0,0)_"01T."
 set VO=VO+1,DY=DY+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)  // Display screen data
 new V
 //
 set VX=$P(VO,"|",2)
 set VO(VX+0)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(VX+1)=$C(3,16,12,2,0,0,0,0,0,0)_"01T"_$E(fEXTRDSC.MAP,1,12)
 set VO(VX+2)=$C(3,43,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fEXTRDSC.LCD)
 set VO(VX+3)=$C(3,66,15,2,0,0,0,0,0,0)_"01T"_$E(fEXTRDSC.UID,1,15)
 set VO(VX+4)=$C(4,16,40,2,0,0,0,0,0,0)_"01T"_$E(fEXTRDSC.DES,1,40)
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+4,DY=8 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fEXTRACT(),.fEXTRDSC)
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)  // Display data %REPEAT times
 //instantiate new object if necessary
  #ACCEPT;DATE=08/08/06; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEPRECATED
  if 'fEXTRACT(I).getPointer() do {
     set fEXTRACT(I)=Class.new("RecordEXTRACT","$G(KEYS(1))")
     }
 if %ProcessMode=5 new ARCFID
 if  set (ARCFID)=""
 else  set (ARCFID,ARCFID)=$G(ARCFID)
 
 set VO(VX+1)=$C(DY,1,25,2,0,0,0,0,0,0)_"01T"_$E(fEXTRACT(I).SRCDI,1,25)
 set VO(VX+2)=$C(DY,28,12,2,0,0,0,0,0,0)_"01T"_$J(ARCFID,12)
 set VO(VX+3)=$C(DY,41,12,2,0,0,0,0,0,0)_"00U"_$E(fEXTRACT(I).ARCDI,1,12)
 set VO(VX+4)=$C(DY,55,1,2,0,0,0,0,0,0)_"00L"_$S(fEXTRACT(I).TBLFLG:"Y",1:"N")
 set VO(VX+5)=$C(DY,57,20,2,0,0,0,0,0,0)_"01T"_$E(fEXTRACT(I).TBL,1,20)
 set DY=DY+1,VX=VX+5
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=4,%MOD=4,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=7+%REPEAT,BLKSIZ=(58*%REPEAT)+77,PGM=$T(+0),DLIB="SYSDEV",DFID="EXTRACT,EXTRACTDESC"
 set OLNTB=VPB*1000
 
 set VFSN("EXTRACT")="zfEXTRACT",VFSN("EXTRACTDESC")="zfEXTRDSC"
 //
 for I=9:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,15,12)_"20T12401|1|[EXTRACTDESC]MAP"
 set %TAB(2)=$C(2,42,10)_"20D12402||[EXTRACTDESC]LCD"
 set %TAB(3)=$C(2,65,15)_"20T12403||[EXTRACTDESC]UID|||||||||20"
 set %TAB(4)=$C(3,15,40)_"20T12401||[EXTRACTDESC]DES"
 set %TAB(5)=$C(7,0,25)_"20T12402|1|[EXTRACT]SRCDI|||do VP1^V01S604(.fEXTRACT,.fEXTRDSC)"
 set %TAB(6)=$C(7,40,12)_"00U12401|1|[EXTRACT]ARCDI|||do VP2^V01S604(.fEXTRACT,.fEXTRDSC)"
 set %TAB(7)=$C(7,54,1)_"00L12402|1|[EXTRACT]TBLFLG|||do VP3^V01S604(.fEXTRACT,.fEXTRDSC)"
 set %TAB(8)=$C(7,56,20)_"20T12403|1|[EXTRACT]TBL|||||||||40"
 do VTBL(.fEXTRACT(),.fEXTRDSC)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC) //
	// Convert bracket to dot syntax
	if X["[" set X=X.piece("]",1).piece("[",2)_X.piece("]",2)

	if X=V,NOVAL.get() quit

	if X="",V="" do { quit
		do DELETE^DBSMACRO("EXTRACT.TBL")
		do DELETE^DBSMACRO("EXTRACT.TBLFLG")
		do DELETE^DBSMACRO("EXTRACT.ARCDI")
		}

	quit:X=""

	if V'="",X'="" do { quit
		do DEFAULT^DBSMACRO("EXTRACT.TBL","",1,0,1)
		do DEFAULT^DBSMACRO("EXTRACT.TBLFLG",0,1,0,1)
		do DEFAULT^DBSMACRO("EXTRACT.ARCDI","",1,0,1)
		}

	if X.piece(".",1)=""!(X.piece(".",2)="") do { quit
		set ER=1
		// Incomplete data reference
		set RM=$$^MSG(3861)
		}

	if X'=V,$$DI^DBSDD(X)="" do { quit
		set ER=1
		// Invalid data item ~p1
		set RM=$$^MSG(1298)
		}

	if ","_SRCFID_","'[(","_X.piece(".",1)_",") do { quit
		set ER=1
		// File not in source file list
		set RM=$$^MSG(3862)
		}

	type Number N
	set N=""
	for  set N=$O(fEXTRACT(N)) quit:N=""!ER  do {
		if fEXTRACT(N).srcdi=X,N'=z1 do {
			set ER=1
			// Data item already mapped
			set RM=$$^MSG(3874)
			}
		}

	quit:ER

	do DEFAULT^DBSMACRO("EXTRACT.TBL",$P($$DI^DBSDD(X),"|",5),1,0,1)
VP2(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC) //
	if X=V,NOVAL.get() quit

	if X'="",X'=V do { quit:ER
		if X?1AN.AN1"."1AN.AN do { quit
			set ER=1
			// Do not specify file name
			set RM=$$^MSG(3898)
			}
		if $$DI^DBSDD(ARCFID_"."_X)="" do {
			set ER=1
			// Invalid data item ~p1
			set RM=$$^MSG(1298)
			}
		}

	if X="" do { quit
		if fEXTRACT(I(1)).srcdi'="" do {
			set ER=1
			// Data item name required
			set RM=$$^MSG(731)
			}
		}


	type Number N
	set N=""
	for  set N=$O(fEXTRACT(N)) quit:N=""!ER  do {
		if fEXTRACT(N).arcdi=X,N'=z1 do {
			set ER=1
			// Data item already mapped
			set RM=$$^MSG(3874)
			}
		}
VP3(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC) //
	do { quit:ER
		if X=V,NOVAL.get() quit
		quit:X'=1

		if fEXTRACT(I(1)).tbl="" do {
			set ER=1
			// No lookup table defined for the source data item
			set RM=$$^MSG(3885)
			}
		else  if fEXTRACT(I(1)).tbl?1"[".E1"]"1.E do {
			set ER=1
			// [FID]DI(I(1)). table lookup syntax not supported
			set RM=$$^MSG(3886)
			}
		}

	if fEXTRACT(I(1)).srcdi="" do { quit
		if fEXTRACT(I(1)).arcdi'="" do { quit
			set ER=1
			// Source data item required
			set RM=$$^MSG(3902)
			}
		}
	if fEXTRACT(I(1)).arcdi="" do { quit
		set ER=1
		// Archive data item required
		set RM=$$^MSG(3903)
		}

	if fEXTRACT(I(1)).tblflg do {
		type String ARC,SRC

		set ARC=$$DI^DBSDD(ARCFID_"."_fEXTRACT(I(1)).arcdi)
		set SRC=$$DI^DBSDD(fEXTRACT(I(1)).srcdi)
		if SRC.piece("|",2)'=ARC.piece("|",2) do {
			set ER="W"
			// Archive and source data items have different lengths
			set RM=$$^MSG(3888)
			}
		else  if SRC.piece("|",9)'=ARC.piece("|",9) do {
			set ER="W"
			// Archive and source data items have different types
			set RM=$$^MSG(3889)
			}
		}
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEXTRACT fEXTRACT()
 type Public RecordEXTRACTDESC fEXTRDSC
 do VPR(.fEXTRACT(),.fEXTRDSC)
 do VDA1(.fEXTRACT(),.fEXTRDSC)
 do ^DBSPNT()
 quit

VW(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)
 do VDA1(.fEXTRACT(),.fEXTRDSC)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)
 do VDA1(.fEXTRACT(),.fEXTRDSC)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEXTRACT fEXTRACT()
 type Public RecordEXTRACTDESC fEXTRDSC
 do VDA1(.fEXTRACT(),.fEXTRDSC)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordEXTRACT fEXTRACT()
 if sn="EXTRACT" do vSET1(fEXTRACT(I(1)),di,X)
 type Public RecordEXTRACTDESC fEXTRDSC
 if sn="EXTRACTDESC" do vSET2(.fEXTRDSC,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordEXTRACT fEXTRACT,di,X)
 do fEXTRACT.setAuditFlag(1)
 set fEXTRACT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordEXTRACTDESC fEXTRDSC,di,X)
 do fEXTRDSC.setAuditFlag(1)
 set fEXTRDSC.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordEXTRACT fEXTRACT()
 if fid="EXTRACT" quit $$vREAD1(fEXTRACT(I(1)),di)
 type Public RecordEXTRACTDESC fEXTRDSC
 if fid="EXTRACTDESC" quit $$vREAD2(.fEXTRDSC,di)
 quit ""
vREAD1(RecordEXTRACT fEXTRACT,di)
 quit fEXTRACT.@di
vREAD2(RecordEXTRACTDESC fEXTRDSC,di)
 quit fEXTRDSC.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 //
VSCRPRE(RecordEXTRACT fEXTRACT(),RecordEXTRACTDESC fEXTRDSC)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
	set ARCFID=fEXTRDSC.arcfid
	set SRCFID=fEXTRDSC.srcfid
 #ACCEPT date=11/05/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
