R01S101	// SCA030 - Daily Excessive Transaction Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:38 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA030"
	set RN="Daily Excessive Transaction Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DAYENDERA]TJD|[DAYENDERA]TJD:DISTINCT:NOVAL||D EXT^DBSQRY||T|Effective Date|||||"
	set %TAB("VIN2")="|255||[DAYENDERA]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN3")="|255||[DTJ]ETC|[TRN]:NOVAL||D EXT^DBSQRY||T|External Transaction Code|||||"
	set %TAB("VIN4")="|255||[DTJ]TOT|||D EXT^DBSQRY||T|Transaction Amount|||||"
	set %TAB("VIN5")="|255||[DTJ]UID|||D EXT^DBSQRY||T|User ID|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %CACHE(),%TIM,CONAM,OVR,PIECE(),PIECEDES(),POU,PRITYPE,PRODTYPE,RID,RN,TYPETOT(),VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc23,vovc24,vovc25,vovc26,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA030",RN="Daily Excessive Transaction Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA030","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DAYENDERA]TJD "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DAYENDERA]CID "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DTJ]ETC "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DTJ]TOT "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DTJ]UID "_VIN5,SEQ=SEQ+1
		set DQQRY(SEQ)="([ACN]PCIDSTAT=0)!([ACN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DAYENDERA,DTJ,ACN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Effective Date"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Account Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"External Transaction Code"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Transaction Amount"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"User ID"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Daily Excessive Transaction Report"
		set VBNRINFO("PGM")="R01S101"
		set VBNRINFO("RID")="SCA030"
		set VBNRINFO("TABLES")="DAYENDERA,DTJ,ACN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DAYENDERA]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DAYENDERA]""ERA"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ACN]TYPE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DAYENDERA]CID"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DAYENDERA]TSEQ"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,DAYENDERA]DATETIME"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:3 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DTJ.TAMT,ACN.TYPE,ACN.CLS,DTJ.ITC2,DTJ.ITC8,DTJ.IT"
	set VSELECT=VSELECT_"C10,DTJ.ITC11,DTJ.PENALTY,DTJ.WHLD,DTJ.MISC,DTJ.TF"
	set VSELECT=VSELECT_"R,DTJ.UNC,DTJ.UNAPL,DTJ.COA,DTJ.REC,DTJ.NEGP,DTJ.N"
	set VSELECT=VSELECT_"EGPU,DTJ.NEGPB,DTJ.SWHLD,DTJ.TTAMT2,DTJ.VATLCHG,DT"
	set VSELECT=VSELECT_"J.UNCINT,DAYENDERA.TJD,DAYENDERA.CID,DAYENDERA.TSE"
	set VSELECT=VSELECT_"Q,DAYENDERA.DATETIME,ACN.GRP,DTJ.TOT,DTJ.PRIN,DTJ."
	set VSELECT=VSELECT_"INT,DTJ.CID,DTJ.TSEQ,DTJ.CC,DTJ.ETC,DTJ.UID,DTJ.EF"
	set VSELECT=VSELECT_"D"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DAYENDERA,DTJ,ACN",VWHERE,"DAYENDERA.TJD,ACN.TYPE,DAYENDERA.CID,DAYENDERA.TSEQ,DAYENDERA.DATETIME","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc23,vovc2,vovc24,vovc25,vovc26
	set vovc23="",vovc2="",vovc24="",vovc25="",vovc26=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc23,vc23,vovc2,vc2,vovc24,vc24,vovc25,vc25,vovc26,vc26
	set vovc23=vc23,vovc2=vc2,vovc24=vc24,vovc25=vc25,vovc26=vc26
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36
	set vc1=V.piece($C(9),1)			// DTJ.TAMT
	set vc2=V.piece($C(9),2)			// ACN.TYPE
	set vc3=V.piece($C(9),3)			// ACN.CLS
	set vc4=V.piece($C(9),4)			// DTJ.ITC2
	set vc5=V.piece($C(9),5)			// DTJ.ITC8
	set vc6=V.piece($C(9),6)			// DTJ.ITC10
	set vc7=V.piece($C(9),7)			// DTJ.ITC11
	set vc8=V.piece($C(9),8)			// DTJ.PENALTY
	set vc9=V.piece($C(9),9)			// DTJ.WHLD
	set vc10=V.piece($C(9),10)			// DTJ.MISC
	set vc11=V.piece($C(9),11)			// DTJ.TFR
	set vc12=V.piece($C(9),12)			// DTJ.UNC
	set vc13=V.piece($C(9),13)			// DTJ.UNAPL
	set vc14=V.piece($C(9),14)			// DTJ.COA
	set vc15=V.piece($C(9),15)			// DTJ.REC
	set vc16=V.piece($C(9),16)			// DTJ.NEGP
	set vc17=V.piece($C(9),17)			// DTJ.NEGPU
	set vc18=V.piece($C(9),18)			// DTJ.NEGPB
	set vc19=V.piece($C(9),19)			// DTJ.SWHLD
	set vc20=V.piece($C(9),20)			// DTJ.TTAMT2
	set vc21=V.piece($C(9),21)			// DTJ.VATLCHG
	set vc22=V.piece($C(9),22)			// DTJ.UNCINT
	set vc23=V.piece($C(9),23)			// DAYENDERA.TJD
	set vc24=V.piece($C(9),24)			// DAYENDERA.CID
	set vc25=V.piece($C(9),25)			// DAYENDERA.TSEQ
	set vc26=V.piece($C(9),26)			// DAYENDERA.DATETIME
	set vc27=V.piece($C(9),27)			// ACN.GRP
	set vc28=V.piece($C(9),28)			// DTJ.TOT
	set vc29=V.piece($C(9),29)			// DTJ.PRIN
	set vc30=V.piece($C(9),30)			// DTJ.INT
	set vc31=V.piece($C(9),31)			// DTJ.CID
	set vc32=V.piece($C(9),32)			// DTJ.TSEQ
	set vc33=V.piece($C(9),33)			// DTJ.CC
	set vc34=V.piece($C(9),34)			// DTJ.ETC
	set vc35=V.piece($C(9),35)			// DTJ.UID
	set vc36=V.piece($C(9),36)			// DTJ.EFD
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22
 /*
  ---- Revision History ---------------------------------------------------
	06/08/2007 - LAN - CR 27488
		     Modified to display right Short Description and 
		     to support additional TAMT components.
 */
	type public Number PIECE(), TYPETOT()
	type public String PIECEDES(), POU
	type public Boolean OVR
	type public Cache %CACHE()
	type public Number PRITYPE, PRODTYPE

	type RecordSTBLGLDESCD gldescd
	type RecordSTBLGLDESCL gldescl
	type Number CNT = 0, I
	type String TAMT = vc1

	// If current product type different from prior, re-initialize type 
	// totals array
	if (vc2 '= PRODTYPE) for I = 1:1:15 set TYPETOT(I) = 0

	// Initialize transaction piece and piece description arrays
	for I = 1:1:15 set (PIECE(I), PIECEDES(I)) = ""

	// Populate piece and piece description arrays
	for I = 4:1:18 do {
		if TAMT.piece("#", I) do {
			set CNT = CNT + 1
			set PIECE(CNT) = TAMT.piece("#", I)
			if vc3 = "D" do {
				// Pieces 16 and 17 not present for deposits
				if (I > 15)&(I < 18) quit

				set gldescd = %CACHE("GLDESCD").getRecord("STBLGLDESCD", "KEY=:I")
				set PIECEDES(CNT) = gldescd.sdesc
				}
			else  do {
				// Piece 18 not present for loans
				if I > 17 set PIECEDES(CNT) = "" quit

				set gldescl = %CACHE("GLDESCL").getRecord("STBLGLDESCL", "KEY=:I")
				set PIECEDES(CNT) = gldescl.sdesc
	                        }
	                }
		}

	set OVR = vc4

	if vc5 set POU = "P"
	else  set POU = " "
	if vc6 set POU = POU_"O"
	else  set POU = POU_" "
	if vc7 set POU = POU_"U"
	else  set POU = POU_" "

	// Accumulate product type totals
	set TYPETOT(1) = TYPETOT(1) + vc8
	set TYPETOT(2) = TYPETOT(2) + vc9
	set TYPETOT(3) = TYPETOT(3) + vc10
	set TYPETOT(4) = TYPETOT(4) + vc11
	set TYPETOT(5) = TYPETOT(5) + vc12
	set TYPETOT(6) = TYPETOT(6) + vc13
	set TYPETOT(7) = TYPETOT(7) + vc14
	set TYPETOT(8) = TYPETOT(8) + vc15
	set TYPETOT(9) = TYPETOT(9) + vc16
	set TYPETOT(10) = TYPETOT(10) + vc17
	set TYPETOT(11) = TYPETOT(11) + vc18
	set TYPETOT(12) = TYPETOT(12) + vc19
	set TYPETOT(13) = TYPETOT(13) + vc20
	set TYPETOT(14) = TYPETOT(14) + vc21
	set TYPETOT(15) = TYPETOT(15) + vc22

	// Save prior product type
	set PRITYPE = PRODTYPE
	set PRODTYPE = vc2

	quit

VPREAQ	// Pre-processor (after query)

	type public Number PRITYPE, PRODTYPE

	set (PRITYPE, PRODTYPE) = ""

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG5 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc23,vovc23,vc2,vovc2,vc24,vovc24,vc25,vovc25,vc26,vovc26
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc23'=vc23) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc24'=+vc24) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(+vovc25'=+vc25) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc30,vc29,vc28
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+vc30			// @TOT([DTJ]INT)
	set VT(6,2,1)=VT(6,2,1)+vc29			// @TOT([DTJ]PRIN)
	set VT(6,3,1)=VT(6,3,1)+vc28			// @TOT([DTJ]TOT)
	quit

VSUM4	// Summary
	type public String %CACHE(),%TIM,I,IOSL,OVR,PIECE(),PIECEDES(),POU,PRITYPE,PRODTYPE,TYPETOT(),V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc23,vovc24,vovc25,vovc26,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+16>IOSL do VHDG0 quit:VFMQ

	set VL="                                                         "_"---------------- ----------------"
	set VL=VL_$J("",91-VL.length())_"--------------"
	set VL=VL_$J("",106-VL.length())_"-------------- "
	do VOM
	set VL="                                       "_"Type "
	set VL=VL_$J("",44-VL.length())_$J(PRITYPE,4)
	set VL=VL_$J("",49-VL.length())_"Total:"
	set V=VT(4,3,1)					// @TOT([DTJ]TOT,)
	set V=$J($FN(V,",",2),16) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",57-VL.length())_V		// @TOT([DTJ]TOT,)
	set V=VT(4,2,1)					// @TOT([DTJ]PRIN,)
	set VL=VL_$J("",74-VL.length())_$J($FN(V,",",2),16)
	set V=VT(4,1,1)					// @TOT([DTJ]INT,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",106-VL.length())_$J($FN(TYPETOT(1),",",2),14)
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(1),1,11)
	do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(2)=0:$J("",14),1:$J($FN(TYPETOT(2),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(2),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(3)=0:$J("",14),1:$J($FN(TYPETOT(3),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(3),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(4)=0:$J("",14),1:$J($FN(TYPETOT(4),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(4),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(5)=0:$J("",14),1:$J($FN(TYPETOT(5),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(5),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(6)=0:$J("",14),1:$J($FN(TYPETOT(6),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(6),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(7)=0:$J("",14),1:$J($FN(TYPETOT(7),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(7),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(8)=0:$J("",14),1:$J($FN(TYPETOT(8),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(8),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(9)=0:$J("",14),1:$J($FN(TYPETOT(9),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(9),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(10)=0:$J("",14),1:$J($FN(TYPETOT(10),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(10),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(11)=0:$J("",14),1:$J($FN(TYPETOT(11),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(11),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(12)=0:$J("",14),1:$J($FN(TYPETOT(12),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(12),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(13)=0:$J("",14),1:$J($FN(TYPETOT(13),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(13),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(14)=0:$J("",14),1:$J($FN(TYPETOT(14),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(14),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+TYPETOT(15)=0:$J("",14),1:$J($FN(TYPETOT(15),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(TYPEPD(15),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit

VHDG5	// Group Header
	type public String %CACHE(),%MSKD,%TIM,CONAM,ER,IOSL,OVR,PIECE(),PIECEDES(),POU,PRITYPE,PRODTYPE,RID,RN,TYPETOT(),V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc2,vovc23,vovc24,vovc25,vovc26,vrundate,vsysdate

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="Effective Date:"
	set VL=VL_$J("",16-VL.length())_$J($$DAT^%ZM(vc23),10)
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %CACHE(),%TIM,IOSL,OVR,PIECE(),PIECEDES(),POU,PRITYPE,PRODTYPE,TYPETOT(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc2,vovc23,vovc24,vovc25,vovc26,vrundate,vsysdate

	if VLC+15>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc31,12)
	set VL=VL_$J("",13-VL.length())_$J(vc32,5)
	set VL=VL_$J("",19-VL.length())_$J(vc33,6)
	set VL=VL_$J("",26-VL.length())_$S(OVR:"Y",1:"N")
	set VL=VL_$J("",28-VL.length())_$E(vc34,1,8)
	set VL=VL_$J("",37-VL.length())_$E(POU,1,3)
	set VL=VL_$J("",41-VL.length())_$E(vc35,1,6)
	set VL=VL_$J("",48-VL.length())_$J($$DAT^%ZM(vc36),10)
	set VL=VL_$J("",59-VL.length())_$J($FN(vc28,",",2),14)
	set VL=VL_$J("",74-VL.length())_$J($FN(vc29,",",2),16)
	set VL=VL_$J("",91-VL.length())_$J($FN(vc30,",",2),14)
	set VL=VL_$J("",106-VL.length())_$J($FN(PIECE(1),",",2),14)
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(1),1,11)
	do VOM
	set VL="                                                                                                          "_$S(+PIECE(2)=0:$J("",14),1:$J($FN(PIECE(2),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(2),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(3)=0:$J("",14),1:$J($FN(PIECE(3),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(3),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(4)=0:$J("",14),1:$J($FN(PIECE(4),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(4),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(5)=0:$J("",14),1:$J($FN(PIECE(5),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(5),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(6)=0:$J("",14),1:$J($FN(PIECE(6),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(6),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(7)=0:$J("",14),1:$J($FN(PIECE(7),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(7),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(8)=0:$J("",14),1:$J($FN(PIECE(8),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(8),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(9)=0:$J("",14),1:$J($FN(PIECE(9),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(9),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(10)=0:$J("",14),1:$J($FN(PIECE(10),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(10),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(11)=0:$J("",14),1:$J($FN(PIECE(11),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(11),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(12)=0:$J("",14),1:$J($FN(PIECE(12),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(12),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(13)=0:$J("",14),1:$J($FN(PIECE(13),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(13),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(14)=0:$J("",14),1:$J($FN(PIECE(14),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(14),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+PIECE(15)=0:$J("",14),1:$J($FN(PIECE(15),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PIECEDES(15),1,11)
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %CACHE(),%MSKD,%TIM,CONAM,OVR,PIECE(),PIECEDES(),POU,PRITYPE,PRODTYPE,RID,RN,TYPETOT(),VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc4,vc5,vc6,vc7,vc8,vc9,vovc2,vovc23,vovc24,vovc25,vovc26,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA030)"
	set VL=VL_$J("",102-VL.length())_"SYSTEM:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Account   Seq  CC    OR Code    POU Teller  Effective    Transaction        Principal        Int/Div            Other"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="Class "
	set VL=VL_$J("",6-VL.length())_$E(vc3,1,1)
	set VL=VL_$J("",9-VL.length())_"Group "
	set VL=VL_$J("",15-VL.length())_$E(vc27,1,4)
	set VL=VL_$J("",21-VL.length())_"Type "
	set VL=VL_$J("",26-VL.length())_$J(vc2,4)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - @TOT([DTJ]TOT,,E,16)

	type public String vc3
 /*
  ---- Revision History --------------------------------
	06/08/2007 - LAN - CR 27488
		     Modified to display right Short Description and
		     to support additional TAMT components.
 */
	type public Number TYPETOT()
	type public String TYPEPD()
	type public Cache %CACHE()

	type RecordSTBLGLDESCD gldescd
	type RecordSTBLGLDESCL gldescl
	type Number I, J

 	for I = 1:1:15 do {
		if vc3 = "D" do {
			//Pieces 16 and 17 not present for deposits
			if (I > 12)&(I < 15) set TYPEPD(I) = "" quit

			set gldescd = %CACHE("GLDESCD").getRecord("STBLGLDESCD", "KEY=:(I+3)")
			set TYPEPD(I) = gldescd.sdesc
			}
		else  do {
			// Piece 18 not present for loans
			if I > 14 set TYPEPD(I) = "" quit

			set gldescl = %CACHE("GLDESCL").getRecord("STBLGLDESCL", "KEY=:(I+3)")
			set TYPEPD(I) = gldescl.sdesc
			}
		}

 	for I = 15:-1:2 if 'TYPETOT(I - 1) for J = I-1:1:14 do {
		set TYPETOT(J) = TYPETOT(J + 1)
		set TYPETOT(J + 1) = ""
		set TYPEPD(J) = TYPEPD(J + 1)
		set TYPEPD(J + 1) = ""
		}

	quit
