R01S510	// SCA588 - Country Sovereign Limits Exception Rpt
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:51 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA588"
	set RN="Country Sovereign Limits Exception Rpt "
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA588",RN="Country Sovereign Limits Exception Rpt "
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA588","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"(EXPCNSOV.TOTCOMEXP>UTBLCNTRYLIM.GOVTAMT) OR (EXPC"
		set VWHERE=VWHERE_"NSOV.TOTOUTEXP>UTBLCNTRYLIM.GOVTAMT)"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Country Sovereign Limits Exception Rpt "
		set VBNRINFO("PGM")="R01S510"
		set VBNRINFO("RID")="SCA588"
		set VBNRINFO("TABLES")="EXPCNSOV,UTBLCNTRYLIM,STBLCNTRY"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,EXPCNSOV]CNTRY"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:1 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:4 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("EXPCNSOV.CNTRY,EXPCNSOV.TOTCOMEXP,EXPCNSOV.AVLVSCOM,EXPCNSOV.TOTOUTEXP,EXPCNSOV.AVLVSOUT,STBLCNTRY.DESC,UTBLCNTRYLIM.GOVTAMT","EXPCNSOV,UTBLCNTRYLIM,STBLCNTRY","(EXPCNSOV.TOTCOMEXP>UTBLCNTRYLIM.GOVTAMT) OR (EXPCNSOV.TOTOUTEXP>UTBLCNTRYLIM.GOVTAMT)","EXPCNSOV.CNTRY","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1
	set vovc1=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1
	set vovc1=vc1
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// EXPCNSOV.CNTRY
	set vc2=V.piece($C(9),2)			// EXPCNSOV.TOTCOMEXP
	set vc3=V.piece($C(9),3)			// EXPCNSOV.AVLVSCOM
	set vc4=V.piece($C(9),4)			// EXPCNSOV.TOTOUTEXP
	set vc5=V.piece($C(9),5)			// EXPCNSOV.AVLVSOUT
	set vc6=V.piece($C(9),6)			// STBLCNTRY.DESC
	set vc7=V.piece($C(9),7)			// UTBLCNTRYLIM.GOVTAMT
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1		// Skip detail
	do VBREAK

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(1)
	type Public String vc1,vovc1
	type Number vb1
	set (vb1)=0
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc3,vc5,vc2,vc4
	type Public String VSTATS

	set VT(1)=VT(1)+1
	set VT(1,1,1)=VT(1,1,1)+vc3			// @TOT([EXPCNSOV]AVLVSCOM)
	set VT(1,2,1)=VT(1,2,1)+vc5			// @TOT([EXPCNSOV]AVLVSOUT)
	set VT(1,3,1)=VT(1,3,1)+vc2			// @TOT([EXPCNSOV]TOTCOMEXP)
	set VT(1,4,1)=VT(1,4,1)+vc4			// @TOT([EXPCNSOV]TOTOUTEXP)
	quit

VDTL1	// Detail
	type public String %TIM,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vrundate,vsysdate

	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                  "_"Committed"
	set VL=VL_$J("",84-VL.length())_"Available "
	set VL=VL_$J("",99-VL.length())_"Outstanding"
	set VL=VL_$J("",120-VL.length())_"Available"
	do VOM
	set VL="Country"
	set VL=VL_$J("",10-VL.length())_"Description"
	set VL=VL_$J("",46-VL.length())_"Limit Amount"
	set VL=VL_$J("",67-VL.length())_"Exposure"
	set VL=VL_$J("",80-VL.length())_"vs. Committed"
	set VL=VL_$J("",102-VL.length())_"Exposure"
	set VL=VL_$J("",114-VL.length())_"vs."
	set VL=VL_$J("",118-VL.length())_"Outstanding"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	set VL="   "_$E(vc1,1,2)
	set VL=VL_$J("",10-VL.length())_$E(vc6,1,30)
	set VL=VL_$J("",41-VL.length())_$J($FN(vc7,",",2),17)
	set VL=VL_$J("",59-VL.length())_$J($FN(vc2,",",2),16)
	set VL=VL_$J("",76-VL.length())_$J($FN(vc3,",",2),17)
	set VL=VL_$J("",94-VL.length())_$J($FN(vc4,",",2),16)
	set VL=VL_$J("",111-VL.length())_$J($FN(vc5,",",2),18)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,VPN,vovc1,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="REPORT TOTALS: "
	set V=0						// @TOT([EXPCNSOV]TOTCOMEXP,0)
	for I=0:1:1 set V=V+VT(I,3,1)
	set VL=VL_$J("",60-VL.length())_$J($FN(V,",",2),15)
	set V=0						// @TOT([EXPCNSOV]AVLVSCOM,0)
	for I=0:1:1 set V=V+VT(I,1,1)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),15)
	set V=0						// @TOT([EXPCNSOV]TOTOUTEXP,0)
	for I=0:1:1 set V=V+VT(I,4,1)
	set VL=VL_$J("",95-VL.length())_$J($FN(V,",",2),15)
	set V=0						// @TOT([EXPCNSOV]AVLVSOUT,0)
	for I=0:1:1 set V=V+VT(I,2,1)
	set VL=VL_$J("",114-VL.length())_$J($FN(V,",",2),15)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
