V01S703(%ProcessMode,RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)   // -  - SID= <UTBLRFLG2> Function Access Restriction Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:56 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,MPG,FUNCTION",VSID="UTBLRFLG2",VPGM=$T(+0),VSNAME="Function Access Restriction Maintenance"
 set VFSN("UTBLRFLG")="zfUTRFLG"
 set vPSL=1
 set KEYS(1)=fUTRFLG.GRP
 set KEYS(2)=fUTRFLG.RFLG
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=10 do VPR(.fUTBLRFL,.fUTRFLG),VDA1(.fUTBLRFL,.fUTRFLG),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fUTBLRFL,.fUTRFLG),VPR(.fUTBLRFL,.fUTRFLG),VDA1(.fUTBLRFL,.fUTRFLG)
 if %ProcessMode do VLOD(.fUTBLRFL,.fUTRFLG) quit:$G(ER)  do VPR(.fUTBLRFL,.fUTRFLG),VDA1(.fUTBLRFL,.fUTRFLG)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLRFL,.fUTRFLG)
	quit


VNEW(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLRFL,.fUTRFLG)
 do VLOD(.fUTBLRFL,.fUTRFLG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=10
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) // Display screen prompts
 set VO="11||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,19,41,1,0,0,0,0,0,0)_"01T Function Access Restriction Maintenance "
 set VO(2)=$C(3,7,14,0,0,0,0,0,0,0)_"01TRestrict Flag:"
 set VO(3)=$C(3,46,14,0,0,0,0,0,0,0)_"01TAccount Group:"
 set VO(4)=$C(4,12,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(5)=$C(6,41,19,0,0,0,0,0,0,0)_"01TDisplay More Pages:"
 set VO(6)=$C(8,7,57,0,0,0,0,0,0,0)_"01TEnter below the function names of the functions that will"
 set VO(7)=$C(9,7,58,0,0,0,0,0,0,0)_"01TNOT require an override if an account has the restriction."
 set VO(8)=$C(11,4,8,2,0,0,0,0,0,0)_"01TFunction"
 set VO(9)=$C(11,23,8,2,0,0,0,0,0,0)_"01TFunction"
 set VO(10)=$C(11,42,8,2,0,0,0,0,0,0)_"01TFunction"
 set VO(11)=$C(11,61,8,2,0,0,0,0,0,0)_"01TFunction"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)  // Display screen data
 new V
 s FUNCTION=$G(FUNCTION)
 s GRP=$G(GRP)
 s MPG=$G(MPG)
 s RFLG=$G(RFLG)
 //
 set VO="15|12|13|"
 set VO(12)=$C(3,22,4,2,0,0,0,0,0,0)_"01T"_$G(RFLG)
 set VO(13)=$C(3,61,4,2,0,0,0,0,0,0)_"01T"_$G(GRP)
 set VO(14)=$C(4,25,40,2,0,0,0,0,0,0)_"00T"_$E(fUTRFLG.DESC,1,40)
 set VO(15)=$C(6,61,1,2,0,0,0,0,0,0)_"00L"_$S($G(MPG):"Y",1:"N")
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+3,DY=13 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLRFL,.fUTRFLG)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,FUNCTION(I))=$G(FUNCTION(I))
 
 set VO(VX+1)=$C(DY,4,12,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,23,12,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,42,12,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",3)
 set VO(VX+4)=$C(DY,61,12,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",4)
 set DY=DY+1,VX=VX+4
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=4,%MOD=4,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=12+%REPEAT,BLKSIZ=(48*%REPEAT)+49,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLRFLG2,UTBLRFLG"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLRFLG")="zfUTRFLG"
 //
 for I=9:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,21,4)_"20T|*RFLG|[*]@RFLG"
 set %TAB(2)=$C(2,60,4)_"20T|*GRP|[*]@GRP"
 set %TAB(3)=$C(3,24,40)_"00T12401||[UTBLRFLG]DESC"
 set %TAB(4)=$C(5,60,1)_"00L|*MPG|[*]@MPG|||do VP1^V01S703(.fUTBLRFL,.fUTRFLG)"
 set %TAB(5)=$C(12,3,12)_"00T12401|*FUNCTION(1)|[*]@FUNC1|[SCATBL]||do VP2^V01S703(.fUTBLRFL,.fUTRFLG)"
 set %TAB(6)=$C(12,22,12)_"00T12402|*FUNCTION(1)|[*]@FUNC2|[SCATBL]||do VP3^V01S703(.fUTBLRFL,.fUTRFLG)"
 set %TAB(7)=$C(12,41,12)_"00T12403|*FUNCTION(1)|[*]@FUNC3|[SCATBL]||do VP4^V01S703(.fUTBLRFL,.fUTRFLG)"
 set %TAB(8)=$C(12,60,12)_"00T12404|*FUNCTION(1)|[*]@FUNC4|[SCATBL]||do VP5^V01S703(.fUTBLRFL,.fUTRFLG)"
 do VTBL(.fUTBLRFL,.fUTRFLG)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) //
 if X,(%PG=%PAGE) set %PAGE=%PG+1
VP2(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) //
 do VPO1(.fUTBLRFL,.fUTRFLG)
VPO1(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)  // user library RFLG_FCN
	// post processor for functions to ignore
	// called from screens UTBLRFLG2 and UTBLRFLG3.
	quit:((X=V)!('X.length()))
	set ER=""
	// Invalid function
	if 'Db.isDefined("SCATBL","FN=:X") set ER=1,RM=$$^MSG(1361,X) quit
	// check for duplicates
	type Number I,J
	type String SUB=""
	for I=1:1 set SUB=$O(FUNCTION(SUB)) quit:SUB=""  do { quit:ER
		for J=1:1:4 set FNIG=FUNCTION(SUB).piece("|",J) if FNIG.length() do { quit:ER
			// No Duplicates Allowed
			if X=FNIG set ER=1,RM=$$^MSG(7177)
			}
		}
	quit
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP3(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) //
 do VPO1(.fUTBLRFL,.fUTRFLG)
VP4(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) //
 do VPO1(.fUTBLRFL,.fUTRFLG)
VP5(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG) //
 do VPO1(.fUTBLRFL,.fUTRFLG)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLRFLG2 fUTBLRFL
 type Public RecordUTBLRFLG fUTRFLG
 do VPR(.fUTBLRFL,.fUTRFLG)
 do VDA1(.fUTBLRFL,.fUTRFLG)
 do ^DBSPNT()
 quit

VW(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)
 do VDA1(.fUTBLRFL,.fUTRFLG)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLRFLG2 fUTBLRFL,RecordUTBLRFLG fUTRFLG)
 do VDA1(.fUTBLRFL,.fUTRFLG)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLRFLG2 fUTBLRFL
 type Public RecordUTBLRFLG fUTRFLG
 do VDA1(.fUTBLRFL,.fUTRFLG)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLRFLG2 fUTBLRFL
 if sn="UTBLRFLG2" do vSET1(.fUTBLRFL,di,X)
 type Public RecordUTBLRFLG fUTRFLG
 if sn="UTBLRFLG" do vSET2(.fUTRFLG,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLRFLG2 fUTBLRFL,di,X)
 do fUTBLRFL.setAuditFlag(1)
 set fUTBLRFL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLRFLG fUTRFLG,di,X)
 do fUTRFLG.setAuditFlag(1)
 set fUTRFLG.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLRFLG2 fUTBLRFL
 if fid="UTBLRFLG2" quit $$vREAD1(.fUTBLRFL,di)
 type Public RecordUTBLRFLG fUTRFLG
 if fid="UTBLRFLG" quit $$vREAD2(.fUTRFLG,di)
 quit ""
vREAD1(RecordUTBLRFLG2 fUTBLRFL,di)
 quit fUTBLRFL.@di
vREAD2(RecordUTBLRFLG fUTRFLG,di)
 quit fUTRFLG.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
