PROCRCD		/*
	  ---- Revision History ------------------------------------------------
	
	   03/24/06 - KinI - 20108
	   	Modified to restore XREFBLD section as UTBLCRCDNO and UTBLCRCDX
	   	tables have been restored as well (table type was modified to be
	   	Domain File instead of Index).
	
	   03/09/06 - KinI - 20004
	   	Modified OURNOS section to use crcd.crcd instead of CRCDS 
	   	variable to avoid undefined when setting default nosto account
	   	during CRCD maintenance.
	
	   12/05/05 - KinI - 18478
	   	Removed XREFBLD section as UTBLCRCDNO and UTBLCRCDX index 
	   	tables are obsoleted. Modified POST section because of the same 
	   	reason. Removed old revision history and cleaned-up to comply 
	   	with DBI standards.
	   	Also removed NOSSPP section combining its content with OURNOS.
	
  	   03/24/03 - SRIVASTAVAN - 49451
		In version 6.3 and 6.4,this code was created under the procedure 
		name of CRCD and it should have been called PROCRCD.The compiled
		routine for the incorrectly named procedure originally had a compiled 
		routine name of PROCRCD.Procedure PROCRCD was created in V7.0,still 
		using a compiled routine name of PROCRCD.Procedure CRCD was re-created 
		in V7.0 as a result of converting the original M routine called CRCD to PSL.

	*/

	quit


public	POST(Number MODE,	// Processing mode
     	     RecordCRCD crcd)	// CRCD record	

	type public Boolean ER
	type Number XXCRCD=""

	// Post-Processor for CRCD.CRCDNO
	if (MODE=0)!(crcd.crcdno'=crcd.crcdno.oldVal) do { quit:ER 
	
		// Data required in Data Item
		if crcd.crcdno.isNull() do Runtime.setErrMSG("CRCD",7531,"CRCD.CRCDNO") quit:ER 

		type ResultSet rs=Db.select("CRCD","CRCD","CO=:CUVAR.CO AND CRCDNO=:crcd.crcdno")
		if rs.next() set XXCRCD=rs.getCol("CRCD")	
	
		// Currency number A is assigned to currency code B
		if ('XXCRCD.isNull()),(XXCRCD'=crcd.crcd) do Runtime.setErrMSG("CRCD",677,crcd.crcdno) quit:ER 
		}
	
	// Post-Processor for CRCD.MAXRATE
	// Maximum Rate Allowed may not be less than Minimum Rate Allowed
	if crcd.maxrate<crcd.minrate do Runtime.setErrMSG("CRCD",8471) quit:ER 

	quit 

	
public	OURNOS(Number X,	// Account Number
       	       RecordCRCD crcd) // CRCD Record
	
	// Post-Processor for CRCD.OURPREF and CRCD.NOSTROFX

	if X.isNull() quit 

	type public Boolean ER
	
	// Nostro Sold Post-proc to verify that the nostro account X is the 
	// same currency as the deal currency (CRCDS) and that it isn't closed.
	
	type RecordACN acn=Db.getRecord("ACN","CID=:X",1)
	
	// Invalid account
	if 'acn.getMode() do Runtime.setErrMSG("CRCD",1259,"X") quit:ER
	
	// Account ~p1 is closed
	if acn.stat=4 do Runtime.setErrMSG("CRCD",6050,"X") quit:ER 
	
	// Check currency match
	if 'acn.crcd.isNull() do { 
			
		if acn.crcd=crcd.crcd quit
		
		type String CRCD = acn.crcd
		 	
		// Account ~p1 defined as a ~p2 account
		else  do Runtime.setErrMSG("CRCD",7560,"X~CRCD") quit:ER
		}

	// Currency not defined for this account
	if acn.crcd.isNull() do Runtime.setErrMSG("CRCD",7561) quit:ER 

	quit 

	
public	RATE(Number XRATE,  	// Rate Value
             String XCRCD,  	// Currency Code	
             Number MINRATE,	// Minimum Rate Allowed
             Number MAXRATE)	// Maximum Rate Allowed
     
	// Post-Processor for CRCD.MIDRATE

	type public Boolean ER
	
	// Cannot have midrates with base currency
	if XCRCD=%SystemCurrency do Runtime.setErrMSG("CRCD",8638) quit 1
	
	if XRATE.isNull() quit 0
	
	// Invalid rate. The valid range is between and
	if XRATE<MINRATE!(XRATE>MAXRATE) do Runtime.setErrMSG("CRCD",7641,"MINRATE~MAXRATE") quit 1

	quit 0


public	XREFBLD	// Rebuild UTBLCRCDNO and UTBLCRCDX tables from CRCD

	type public String CO

	type String XCO, XCRCDNO, XCRCD, XDESC
	type Boolean XRETAIL
	
	if 'CO.exists() set XCO=%CompanyName
	else  set XCO=CO
 
	type ResultSet rs=Db.select("DESC,CRCDNO,RETAIL,CRCD","CRCD","CO=:XCO")

	while rs.next()  do {
		set XDESC=rs.getCol("DESC")
		set XCRCDNO=rs.getCol("CRCDNO")
		set XRETAIL=rs.getCol("RETAIL")
		set XCRCD=rs.getCol("CRCD")

		if XCRCDNO'="" do {
			type RecordUTBLCRCDNO crcdno=Db.getRecord("UTBLCRCDNO","CRCDNO=:XCRCDNO",1)
			set crcdno.crcd=XCRCD
			do crcdno.bypassSave()
			
			}
			
		if 'XRETAIL quit 

		type RecordUTBLCRCDX crcdx=Db.getRecord("UTBLCRCDX","CRCD=:XCRCD",1)
		set crcdx.desc=XDESC
		do crcdx.bypassSave()
		
		}
	quit	
	
	

vSIG()	quit "60348^65946^Irina Kin^4197"	// Signature - LTD^TIME^USER^SIZE
