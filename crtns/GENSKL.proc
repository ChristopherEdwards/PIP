GENSKL // General Input Source-Specific Code
  /*
	ORIG: kumarb - 12/21/2005
	DESC: General Input Source-Specific Code

	 CALLED BY:  
	    CALLS:  
	     DESC:  
	
	 GLOBALS -
	     READ:  
	      SET:  
	
	    INPUT:  
	   OUTPUT:  
	
	 EXT ENTRY:  
	
	  This routine stores code specific general input files read from tape.
	
	  This code provides a template routine which includes the subroutines
	  called by the General Purpose Inclearing driving routine ^GENINI.
	  This routine should be copied to a "Z" routine name and formatting
	  and filing code specific to the Inclearing Source (SRC) introduced to
	  the custom routine.
	
	  The "Z" routine name should then be filed in ^CTBL("GENINC",SRC) in
	  the application routine name field ([CTBLGENINC]APPRTN).
	
	  Specific, required line tags resident in ^GENSKL are called by
	  various processing routines, are requied in the final routine, and
	  should not be removed.
	
	---- Revision History ------------------------------------------------
	
	12/21/05 - KUMARB - CR 17423
        	Converted to PSL.
	
	----------------------------------------------------------------------
	*/

	quit

INI1	//  Re-set variable TFMT to SRC tape parameters
	//  Initialize specific variables

	quit
	
ALLREC	//  ALLREC - All record subroutine
	/*  This section is called by all records, regardless of
	    of the rectype code.  Typical use of this section
	    includes checking the file header record.
	*/

	quit
	
RECALL	// RECCALL - Record type subroutine caller
	/*         This section is used to execute the above custom subroutines
	           in a menu style. For example:
	
	                RECCALL ;
	                        I RECTYPE=1 D REC1 Q
	                        I RECTYPE=5 D REC5 Q
	                        I RECTYPE=8 D REC8 Q
	                        I RECTYPE=9 D REC9 Q
	                        S ERRMSG="INVALID RECORD TYPE CODE"
	                        S SUBCAT="EXC"
	                        D ^TPINERR,EXCFILE
	                        Q
	*/

	quit
	
GLOFIL	//  GLOFIL - File record to appropriate global - this as an option
	//           should filing not be used in preceeding subroutines.
	
	quit
	
TOT1	//  TOTALS - File accumulated totals to top level of global

	quit
	
	//--------------------- Check for duplicate batch -----------------
		
DUPBCH	//  Verify by comparing batch totals (RECCNT and PREMTOT) to other
	//  first and second pieces from preceeding batches.
	
	/*  If duplicate found, set error messages and rely on ^GENINI to report
	  duplicates and allow action.  Assumes first piece of top level of
	  global equals total records on tape and second piece is total dollar
	  value of records.
	*/

	type public Date TAPDT
	type public Number PREMTOT,RECCNT,TAPENUM
	type public String DMSG(),SRC

	type Date TD
	type Number DM,TS
	type String CURRTOT

	kill DMSG

	set DM=0

	type RecordGENINCINS0 geninc=Db.getRecord("GENINCINS0","SRC=:SRC,TPDT=:TAPDT,TPSEQ=:TAPENUM",1)

	set CURRTOT=geninc.trec_"|"_geninc.tamt

	type ResultSet rs=Db.select("TPDT,TPSEQ,TREC,TAMT","GENINCINS0","SRC=:SRC")
	while rs.next() do {
		set TD=rs.getCol("TPDT")
		set TS=rs.getCol("TPSEQ")
		if (rs.getCol("TREC")_"|"_rs.getCol("TAMT"))=CURRTOT do {
			// Don't flag current entry
			if (TAPDT=TD),(TAPENUM=TS) quit
			set DM=DM+1
			// A duplicate file (~p1  records and $
			set DMSG(DM)=$$^MSG("3656",RECCNT)
			// ~p1~p2) was input on ~p3  - SEQ #~p4
			set DMSG(DM)=$$^MSG("3657",DMSG(DM),PREMTOT,TD.toString("MMDDYY"),TS)
			}
		}

	quit

	// **************** General Purpose Reformatting Options ****************
	
STRIP(String NAME,String VALUE,String LT) // Strip leading/trailing spaces from data items

	/*
	  Parameters:  NAME  - Name of variable to be returned
			   VALUE - Raw data value to be stripped
			   LT    - Strip L(eading) or T(railing) spaces
	*/

	set @NAME=""
	if LT="L" do LEAD quit
	if LT="T" do TRAIL

	quit
	
LEAD	// Strip leading spaces
	
	type public String NAME,VALUE
	
	type Number I
	
	for I=1:0 quit:$A(VALUE.extract())'=32  set VALUE=VALUE.extract(I+1,999)
	set @NAME=VALUE
	
	quit
	
TRAIL	// Strip trailing spaces
	
	type public String NAME,VALUE
	
	set VALUE=$$RTB^%ZFUNC(VALUE)
	set @NAME=VALUE
	
	quit
	
MMDD(String X) // Change MMDDYY to Julian
	
	type public String %DS
	type public Number TRANDATE
	
	set %DS=X.extract(1,2)_"/"_X.extract(3,4)_"/"_X.extract(5,6)
	set TRANDATE=%DS.toDate()
	
	quit
	
YYMM(String X) // Change YYMMDD to Julian
	
	type public String %DS
	type public Number TRANDATE
	
	set %DS=X.extract(5,6)_"/"_X.extract(1,2)_"/"_X.extract(3,4) 
	set TRANDATE=%DS.toDate()
	
	quit

vSIG()	quit "60255^26963^Balasubramonian Sankar^4393"	// Signature - LTD^TIME^USER^SIZE
