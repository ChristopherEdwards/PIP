CUSTATTF(RecordCUSTATTINFO custattinfo, String vpar, Boolean vparNorm) // CUSTATTINFO - Customers Attorney Information Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:14 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (14)             03/02/2007
	// Trigger Definition (2)                      03/05/2007
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = custattinfo.getMode()                 // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(custattinfo,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(custattinfo,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String ACN = custattinfo.acn

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("ACN").exists() do vkchged quit                 // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("CUSTATTINFO",.vx)
		set %O = 1 do vexec
		if vpar["/TRIGAFT/" do VAU                            // After update triggers
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("CUSTATTINFO","ACN = :custattinfo.acn") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String ACN

	type RecordCUSTATTINFO custattinfo = Db.getRecord("CUSTATTINFO","ACN=:ACN")
	if (%ProcessMode = 2) do {
		do custattinfo.setMode(2)

		do CUSTATTF(custattinfo,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordCUSTATTINFO custattinfo

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("CUSTATTINFO","ACN = :custattinfo.acn") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(custattinfo)) S ^CUSTATT(vobj(custattinfo,-3))=vobj(custattinfo)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordCUSTATTINFO custattinfo


	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^CUSTATT(vobj(custattinfo,-3))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordCUSTATTINFO custattinfo

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordCUSTATTINFO custattinfo

	if custattinfo.acn.isNull() do vreqerr("ACN") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CUSTATTINFO","MSG",1767,"CUSTATTINFO."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordCUSTATTINFO custattinfo
	if 'custattinfo.acn.isNull() set vfkey("^CIF("_""""_custattinfo.acn_""""_","_1_")")="CUSTATTINFO(ACN) -> CIF"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordCUSTATTINFO custattinfo
	type public Number %O
	type String vERRMSG

	if 'Db.isDefined("CIF",":custattinfo.acn") set vERRMSG = $$^MSG(8563,"CUSTATTINFO(ACN) -> CIF") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit


VAI //
	type public Number ER = 0
	type public String vx(),RM
	do vai1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VAU //
	type public Number ER = 0
	type public String vx(),RM
	if vx("").order().isNull() quit
	if vx("ATZIP").exists()!vx("ATCNTRY").exists()!vx("ATSTATE").exists() do vau1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vai1 // Trigger AFTER_INSERT - After Insert

	type public RecordCUSTATTINFO custattinfo
	/*
		Revision History
	------------------------------------------------------------------
	02/24/07 - MBUIM - CR 25106               
		   Created trigger to validate postal zip code.

	------------------------------------------------------------------
	*/
	
	type public Boolean ER
	type public String RM

	// Validate Postal/zip code
	do ZIP^PROCZIP(custattinfo.atcntry,custattinfo.atstate,custattinfo.atzip)
	if ER.get() do Runtime.setErrMSG("CUSTATTINFO",3333,RM) quit:ER
	
	quit
	

vau1 // Trigger AU_ATZIP - After Update of ATZIP

	type public RecordCUSTATTINFO custattinfo
	/*
		Revision History
	------------------------------------------------------------------
	02/24/07 - MbuiM - CR 25106
		   Created trigger to validate postal zip code.
	
	------------------------------------------------------------------	
	*/
	
	type public Boolean ER
	type public String RM

	// Validate Postal/zip code
	do ZIP^PROCZIP(custattinfo.atcntry,custattinfo.atstate,custattinfo.atzip)
	if ER.get() do Runtime.setErrMSG("CUSTATTINFO",3333,RM) quit:ER
	
	quit


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordCUSTATTINFO custattinfo

	set X = custattinfo.acn if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("ACN", vRM) quit
	if custattinfo.atad1.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ATAD1", vRM) quit
	if custattinfo.atad2.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ATAD2", vRM) quit
	if custattinfo.atad3.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ATAD3", vRM) quit
	if custattinfo.atcity.length()>40 set vRM = $$^MSG(1076,40) do vdderr("ATCITY", vRM) quit
	set X = custattinfo.atcntry if 'X.isNull(),'Db.isDefined("STBLCNTRY","X") set vRM = $$^MSG(1485,X) do vdderr("ATCNTRY", vRM) quit
	if custattinfo.atcounty.length()>20 set vRM = $$^MSG(1076,20) do vdderr("ATCOUNTY", vRM) quit
	if custattinfo.atfname.length()>20 set vRM = $$^MSG(1076,20) do vdderr("ATFNAME", vRM) quit
	if custattinfo.atlname.length()>20 set vRM = $$^MSG(1076,20) do vdderr("ATLNAME", vRM) quit
	if custattinfo.atmname.length()>20 set vRM = $$^MSG(1076,20) do vdderr("ATMNAME", vRM) quit
	if custattinfo.atphone.length()>12 set vRM = $$^MSG(1076,12) do vdderr("ATPHONE", vRM) quit
	if custattinfo.atstate.length()>2 set vRM = $$^MSG(1076,2) do vdderr("ATSTATE", vRM) quit
	if custattinfo.attitle.length()>5 set vRM = $$^MSG(1076,5) do vdderr("ATTITLE", vRM) quit
	if custattinfo.atzip.length()>10 set vRM = $$^MSG(1076,10) do vdderr("ATZIP", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CUSTATTINFO","MSG",979,"CUSTATTINFO."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordCUSTATTINFO custattinfo

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux
	type String voldpar = vpar.get()                       // Save filer switches

	set vux = vx("ACN")
	set voldkey = vux.piece("|",1),vobj(custattinfo,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	set vnewkey = vux.piece("|",2),vobj(custattinfo,-3) = vnewkey // Copy new keys into object
	type RecordCUSTATTINFO vnewrec = custattinfo.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("CUSTATTINFO",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update
	set vpar = voldpar
	if vpar["/TRIGAFT/" do VAU

	set vobj(custattinfo,-3) = vux.piece("|",1)            // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit
