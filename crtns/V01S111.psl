V01S111(Number %ProcessMode,RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD)   //PBS -  - SID= <BRLIMC> Branch Denomination Limits Copy Screen
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:25 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fBRDNLIM.exists() set fBRDNLIM = Class.new("RecordUTBLDENLIMBR")
  if 'fUTBLDEN.exists() set fUTBLDEN = Class.new("RecordUTBLDENOM")
  if 'fUTBRCD.exists() set fUTBRCD = Class.new("RecordUTBLBRCD")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,BRCD",VSID="BRLIMC",VPGM=$T(+0),VSNAME="Branch Denomination Limits Copy Screen"
 set VFSN("UTBLBRCD")="zfUTBRCD",VFSN("UTBLDENLIMBR")="zfBRDNLIM",VFSN("UTBLDENOM")="zfUTBLDEN"
 set vPSL=1
 set KEYS(1)=fUTBRCD.BRCD
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=17 do VPR(.fBRDNLIM,.fUTBLDEN,.fUTBRCD),VDA1(.fBRDNLIM,.fUTBLDEN,.fUTBRCD),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fBRDNLIM,.fUTBLDEN,.fUTBRCD),VPR(.fBRDNLIM,.fUTBLDEN,.fUTBRCD),VDA1(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 if %ProcessMode do VLOD(.fBRDNLIM,.fUTBLDEN,.fUTBRCD) quit:$G(ER)  do VPR(.fBRDNLIM,.fUTBLDEN,.fUTBRCD),VDA1(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
	quit


VNEW(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) // Initialize arrays if %O=0
 
 do VDEF(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 do VLOD(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=17
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) // Display screen prompts
 set VO="3||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,25,31,0,0,0,0,0,0,0)_"01TBranch Denomination Limits Copy"
 set VO(2)=$C(3,4,12,0,0,0,0,0,0,0)_"01TFrom Branch:"
 set VO(3)=$C(4,2,14,0,0,0,0,0,0,0)_"01TCurrency Code:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD)  // Display screen data
 new V
 s BRCD=$G(BRCD)
 //
 set VO="5|4|13|0"
 set VO(4)=$C(3,17,6,2,0,0,0,0,0,0)_"01N"_fBRDNLIM.BRCD
 set VO(5)=$C(4,17,3,2,0,0,0,0,0,0)_"01T"_$E(fBRDNLIM.CRCD,1,3)
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+1,DY=6 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,BRCD(I))=$G(BRCD(I))
 
 set VO(VX+1)=$C(DY,7,6,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,17,6,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,27,6,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",3)
 set VO(VX+4)=$C(DY,37,6,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",4)
 set VO(VX+5)=$C(DY,47,6,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",5)
 set VO(VX+6)=$C(DY,57,6,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",6)
 set VO(VX+7)=$C(DY,67,6,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",7)
 set DY=DY+1,VX=VX+7
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=2,%MOD=7,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=5+%REPEAT,BLKSIZ=(42*%REPEAT)+9,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLDENLIMBR,UTBLDENOM,UTBLBRCD"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLBRCD")="zfUTBRCD",VFSN("UTBLDENLIMBR")="zfBRDNLIM",VFSN("UTBLDENOM")="zfUTBLDEN"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,16,6)_"21N12401|1|[UTBLDENLIMBR]BRCD|[UTBLBRCD]"
 set %TAB(2)=$C(3,16,3)_"21T12402|1|[UTBLDENLIMBR]CRCD|[CRCD]"
 set %TAB(3)=$C(5,6,6)_"00N12401|*BRCD(1)|[*]@BRCD|[UTBLBRCD]||do VP1^V01S111(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)"
 set %TAB(4)=$C(5,16,6)_"00N12402|*BRCD(1)|[*]@BRCD|[UTBLBRCD]||do VP2^V01S111(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)"
 set %TAB(5)=$C(5,26,6)_"00N12403|*BRCD(1)|[*]@BRCD|[UTBLBRCD]||do VP3^V01S111(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)"
 set %TAB(6)=$C(5,36,6)_"00N12404|*BRCD(1)|[*]@BRCD|[UTBLBRCD]||do VP4^V01S111(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)"
 set %TAB(7)=$C(5,46,6)_"00N12405|*BRCD(1)|[*]@BRCD|[UTBLBRCD]||do VP5^V01S111(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)"
 set %TAB(8)=$C(5,56,6)_"00N12406|*BRCD(1)|[*]@BRCD|[UTBLBRCD]||do VP6^V01S111(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)"
 set %TAB(9)=$C(5,66,6)_"00N12407|*BRCD(1)|[*]@BRCD|[UTBLBRCD]||do VP7^V01S111(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)"
 do VTBL(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) //
 /*
 ---- Revision History ------------------------------------------------
 
        05/05/05 - TITOVE - CR 14192
                   Converted into PSL.
 
 */

 type public Number BRCD, X

 quit:X.isNull()

 // Selected branch cannot be ~p1
 if X = BRCD do Runtime.setErrMSG("UTBLDENLIMBR",8678,BRCD) quit

 quit
VP2(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) //
 /*
 ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */
 
 type public Number BRCD, X
 
 quit:X.isNull()
 
 // Selected branch cannot be ~p1
 if X = BRCD do Runtime.setErrMSG("UTBLDENLIMBR",8678,BRCD) quit
 
 quit
VP3(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) //
 /*
 ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */
 
 type public Number BRCD, X
 
 quit:X.isNull()
 
 // Selected branch cannot be ~p1
 if X = BRCD do Runtime.setErrMSG("UTBLDENLIMBR",8678,BRCD) quit
 
 quit
VP4(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) //
 /*
 ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */
 
 type public Number BRCD, X
 
 quit:X.isNull()
 
 // Selected branch cannot be ~p1
 if X = BRCD do Runtime.setErrMSG("UTBLDENLIMBR",8678,BRCD) quit
 
 quit
VP5(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) //
 /*
 ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */
 
 type public Number BRCD, X
 
 quit:X.isNull()
 
 // Selected branch cannot be ~p1
 if X = BRCD do Runtime.setErrMSG("UTBLDENLIMBR",8678,BRCD) quit
 
 quit
VP6(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) //
 /*
 ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */
 
 type public Number BRCD, X
 
 quit:X.isNull()
 
 // Selected branch cannot be ~p1
 if X = BRCD do Runtime.setErrMSG("UTBLDENLIMBR",8678,BRCD) quit
 
 quit
VP7(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD) //
 /*
 ---- Revision History ------------------------------------------------
 
	05/05/05 - TITOVE - CR 14192
		  Converted into PSL.
 
 */
 
 type public Number BRCD, X
 
 quit:X.isNull()
 
 // Selected branch cannot be ~p1
 if X = BRCD do Runtime.setErrMSG("UTBLDENLIMBR",8678,BRCD) quit
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLDENLIMBR fBRDNLIM
 type Public RecordUTBLDENOM fUTBLDEN
 type Public RecordUTBLBRCD fUTBRCD
 do VPR(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 do VDA1(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 do ^DBSPNT()
 quit

VW(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD)
 do VDA1(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLDENLIMBR fBRDNLIM,RecordUTBLDENOM fUTBLDEN,RecordUTBLBRCD fUTBRCD)
 do VDA1(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLDENLIMBR fBRDNLIM
 type Public RecordUTBLDENOM fUTBLDEN
 type Public RecordUTBLBRCD fUTBRCD
 do VDA1(.fBRDNLIM,.fUTBLDEN,.fUTBRCD)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLDENLIMBR fBRDNLIM
 if sn="UTBLDENLIMBR" do vSET1(.fBRDNLIM,di,X)
 type Public RecordUTBLDENOM fUTBLDEN
 if sn="UTBLDENOM" do vSET2(.fUTBLDEN,di,X)
 type Public RecordUTBLBRCD fUTBRCD
 if sn="UTBLBRCD" do vSET3(.fUTBRCD,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordUTBLDENLIMBR fBRDNLIM,di,X)
 do fBRDNLIM.setAuditFlag(1)
 set fBRDNLIM.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordUTBLDENOM fUTBLDEN,di,X)
 do fUTBLDEN.setAuditFlag(1)
 set fUTBLDEN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET3(RecordUTBLBRCD fUTBRCD,di,X)
 do fUTBRCD.setAuditFlag(1)
 set fUTBRCD.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordUTBLDENLIMBR fBRDNLIM
 if fid="UTBLDENLIMBR" quit $$vREAD1(.fBRDNLIM,di)
 type Public RecordUTBLDENOM fUTBLDEN
 if fid="UTBLDENOM" quit $$vREAD2(.fUTBLDEN,di)
 type Public RecordUTBLBRCD fUTBRCD
 if fid="UTBLBRCD" quit $$vREAD3(.fUTBRCD,di)
 quit ""
vREAD1(RecordUTBLDENLIMBR fBRDNLIM,di)
 quit fBRDNLIM.@di
vREAD2(RecordUTBLDENOM fUTBLDEN,di)
 quit fUTBLDEN.@di
vREAD3(RecordUTBLBRCD fUTBRCD,di)
 quit fUTBRCD.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
