V00S425(%ProcessMode,RecordCIF CIF)   // -  - SID= <OVRINTCIF> CIF Integrity Error
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:57 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,UID,PWD,ERRORS",VSID="OVRINTCIF",VPGM=$T(+0),VSNAME="CIF Integrity Error"
 set VFSN("CIF")="zCIF"
 set vPSL=1
 set KEYS(1)=CIF.ACN
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=13 do VPR(.CIF),VDA1(.CIF),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.CIF),VPR(.CIF),VDA1(.CIF)
 if %ProcessMode do VLOD(.CIF) quit:$G(ER)  do VPR(.CIF),VDA1(.CIF)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.CIF)
	quit


VNEW(RecordCIF CIF) // Initialize arrays if %O=0
 
 do VDEF(.CIF)
 do VLOD(.CIF)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCIF CIF)
 if CIF.CLS="" set CIF.CLS="*"
 if CIF.CRCD="" set CIF.CRCD=%CRCD
 if CIF.DAO="" set CIF.DAO=TJD
 if CIF.GRP="" set CIF.GRP="CIF"
 if CIF.ISDADT="" set CIF.ISDADT=TJD
 if CIF.STATUSDT="" set CIF.STATUSDT=TJD
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCIF CIF) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=13
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCIF CIF) // Display screen prompts
 set VO="10||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,5,17,0,0,0,0,0,0,0)_"01T Customer Number:"
 set VO(2)=$C(1,49,14,0,0,0,0,0,0,0)_"01T Account Type:"
 set VO(3)=$C(2,7,15,0,0,0,0,0,0,0)_"01T Customer Name:"
 set VO(4)=$C(4,23,30,1,0,0,0,0,0,0)_"01T CIF Integrity Error Override "
 set VO(5)=$C(6,1,11,2,0,0,0,0,0,0)_"01TDescription"
 set VO(6)=$C(6,61,4,2,0,0,0,0,0,0)_"01TUser"
 set VO(7)=$C(6,68,8,2,0,0,0,0,0,0)_"01TPassword"
 set VO(8)=$C(8,1,32,0,0,0,0,0,0,0)_"01TUser ID and password to override"
 set VO(9)=$C(8,34,3,2,0,0,0,0,0,0)_"01Tall"
 set VO(10)=$C(8,38,7,0,0,0,0,0,0,0)_"01Terrors."
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCIF CIF)  // Display screen data
 new V
 s ERRORS=$G(ERRORS)
 s PWD=$G(PWD)
 s UID=$G(UID)
 //
 set VO="15|11|13|"
 set VO(11)=$C(1,23,12,2,0,0,0,0,0,0)_"01N"_CIF.ACN
 set VO(12)=$C(1,64,4,2,0,0,0,0,0,0)_"01N"_CIF.TYPE
 set VO(13)=$C(2,23,40,2,0,0,0,0,0,0)_"01T"_$E(CIF.NAM,1,40)
 set VO(14)=$C(8,61,6,2,0,0,0,0,0,0)_"00T"_$G(UID)
 set V="" set VO(15)=$C(8,68,12,2,0,0,0,0,0,0)_"00T"_""
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+4,DY=10 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.CIF)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordCIF CIF)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,ERRORS(I))=$G(ERRORS(I))
 
 set VO(VX+1)=$C(DY,1,58,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",2)
 set VO(VX+2)=$C(DY,61,6,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",3)
 set V="" set VO(VX+3)=$C(DY,68,12,2,0,0,0,0,0,0)_"00T"_""
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCIF CIF)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=5,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=9+%REPEAT,BLKSIZ=(76*%REPEAT)+74,PGM=$T(+0),DLIB="SYSDEV",DFID="CIF",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("CIF")="zCIF"
 //
 for I=9:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,22,12)_"20N12401|1|[CIF]ACN"
 set %TAB(2)=$C(0,63,4)_"20N12401|50|[CIF]TYPE"
 set %TAB(3)=$C(1,22,40)_"20T12401|1|[CIF]NAM"
 set %TAB(4)=$C(7,60,6)_"01T|*UID|[*]@ZUID"
 set %TAB(5)=$C(7,67,12)_"10T|*PWD|[*]@PWD|||do VP1^V00S425(.CIF)"
 set %TAB(6)=$C(9,0,58)_"21T12402|*ERRORS(1)|[*]@DESC"
 set %TAB(7)=$C(9,60,6)_"01T12403|*ERRORS(1)|[*]@UID|||do VP2^V00S425(.CIF)"
 set %TAB(8)=$C(9,67,12)_"11T12404|*ERRORS(1)|[*]@PSWD|||do VP3^V00S425(.CIF)"
 do VTBL(.CIF),VDEPRE(.CIF) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCIF CIF) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordCIF CIF
 do VSPP1(.CIF)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordCIF CIF)
 /*
 ---- Revision History ------------------------------------------------
 
        01/29/05 - TITOVE - CR 13728
                   Converted into PSL.
 
 */
 kill RM
 
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VDEPRE(RecordCIF CIF)  // Data Entry Pre-processor
 
 /*
 ---- Revision History ------------------------------------------------
 
        01/29/05 - TITOVE - CR 13728
                   Converted into PSL.
 
 */
 set RETRIES=0
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordCIF CIF) //
 /*
 ---- Revision History ------------------------------------------------
 
        01/29/05 - TITOVE - CR 13728
                   Converted into PSL.
 
 */

 type public Number %REPEAT, ER
 type public String ERRORS(), UID, X
 
 type Boolean FATAL
 type Number AUT, INDX
 type String ET, UCLS
 
 type RecordSCAU scau=Db.getRecord("SCAU", "UID = :UID",1)
 
 // Invalid user ID
 if 'scau.getMode() do Runtime.setErrMSG("SCAU",1504) quit:ER
 
 // Invalid password
 if '$$VALIDATE^SCADRV1(X,UID) do Runtime.setErrMSG("SCAU",1419) quit:ER
 
 set X = "____________"

 set UCLS = scau.%ucls
 set AUT = 1
 set FATAL = 0
 
 for INDX = 1:1:%REPEAT do FATAL quit:FATAL  do CHECK quit:'AUT
 
 // Fatal error - ~p1 cannot be overridden
 if FATAL do Runtime.setErrMSG("SCAU",1062,ET) quit:ER
 
 // Userclass ~p1 not authorized to override error type ~p2
 if 'AUT do { quit:ER
        type String PARAM
        set ER = "W"
        set PARAM = UCLS_"~"_ET
        do Runtime.setErrMSG("SCAU",2901,PARAM) quit:ER
        }
 
 do GOTO^DBSMACRO("END")
 
 quit

FATAL   // Check for Fatal Errors
 
 type public Boolean FATAL
 type public Number INDX
 type public String ERRORS(), ET
 
 set ET = ERRORS(INDX).piece("|",1)
 
 if ET.isNull() quit

 type RecordSTBLXBAD xbad = Db.getRecord("STBLXBAD", "KEY = :ET",1)
 
 if 'xbad.getMode() quit
 
 if xbad.flag set FATAL = 1
 
 quit
 
 
CHECK   // Integrity Error Override Action

 type public Number AUT, INDX
 type public String ERRORS(), ET, UCLS, UID
 
 if ET.isNull() quit
 
 if UCLS.isNull() quit
 
 if 'Db.isDefined("UTBLINT", "ET,UCLS") set AUT = 0

 set ERRORS(INDX).piece("|",3) = UID
 
 quit
VP2(RecordCIF CIF) //
 /*
 ---- Revision History ------------------------------------------------
 
        01/29/05 - TITOVE - CR 13728
                   Converted into PSL.
 
 */

 set USERID=X

 quit

VP3(RecordCIF CIF) //
 /*
 ---- Revision History ------------------------------------------------
 
        01/29/05 - TITOVE - CR 13728
                   Converted into PSL.
 
 */

 type public Number ER, z1
 type public String ERRORS(), USERID, X
 
 type Boolean FATAL
 type String ET, UCLS
 
 type RecordSCAU scau=Db.getRecord("SCAU", "UID = :USERID",1)
 
 // Invalid user ID
 if 'scau.getMode() do Runtime.setErrMSG("SCAU",1504) quit:ER
 
 // Invalid password
 if '$$VALIDATE^SCADRV1(X,USERID) do Runtime.setErrMSG("SCAU",1419) quit:ER
 
 set ET = ERRORS(z1).piece("|",1)
 set FATAL = ERRORS(z1).piece("|",5)
 
 // Fatal error - ~p1 cannot be overridden
 if FATAL do Runtime.setErrMSG("SCAU",1062,ET) quit:ER
 
 set UCLS = scau.%ucls

 // Userclass ~p1 not authorized to override error type ~p2
 if 'Db.isDefined("UTBLINT", "ET,UCLS") do { quit:ER
        type String PARAM
        set PARAM = UCLS_"~"_ET
        do Runtime.setErrMSG("SCAU",2901,PARAM) quit:ER
        }
 
 set X = "____________"
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCIF CIF
 do VPR(.CIF)
 do VDA1(.CIF)
 do ^DBSPNT()
 quit

VW(RecordCIF CIF)
 do VDA1(.CIF)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCIF CIF)
 do VDA1(.CIF)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCIF CIF
 do VDA1(.CIF)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCIF CIF
 if sn="CIF" do vSET1(.CIF,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCIF CIF,di,X)
 do CIF.setAuditFlag(1)
 set CIF.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCIF CIF
 if fid="CIF" quit $$vREAD1(.CIF,di)
 quit ""
vREAD1(RecordCIF CIF,di)
 quit CIF.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
