INCOUT		/*
	   ---- Revision History ----------------------------------------------
	    12/29/05 - PRAKASHJ - 17423
		       Removed depricated warnings and scoped variables. 

	    08/07/99 - DOUGANM - 33890
		       Converted M code into PSL

	    02/21/99 - GEISSP
	               Replaced XRET with RET for reject reasons.
	
	    02/11/99 - GEISSP - 31874
	               Change call ^%ZD to DAT^%ZM.
	   --------------------------------------------------------------------
	*/
	
	do INIT

	quit
INIT	
	/* 
	   Initialize Format Variables
	   	Called from RETOUT to initialize RECSIZ variable
	*/
	
	type public Number RECSIZ

	set RECSIZ=500
	quit 

	
HEADER()	
	/* 
	   Format Return Header
	   Called from RETOUT -
	   XKEY = Source key from CTBLINC.  This variable is
	          initialized in RETOUT
	*/

	type public Number RECSIZ
	type public String XKEY
	type Date ZSYSDT
	type String OUTREC
	
	set ZSYSDT=%SystemDate
	set OUTREC="01"_ZSYSDT.toString("MMDDYEAR")
	// I18N=OFF
	set OUTREC=OUTREC_$$BLKFIL(XKEY,3)_" Return File"_+%CurrentDate_%CurrentTime.toString("24:60:SS")
	// I18N=ON
	set OUTREC=OUTREC_$$BLKFIL("",RECSIZ-OUTREC.length())

	quit OUTREC

	
DETAIL()	
	/* 
	   Format Return Detail Records
	   Called from RETOUT which passes in the following variables
	      
	   REC = Exception file record keyed on Date, and User ID.
	   VAL("CID") = Account number
	   VAL("ITC") = Internal transaction code
	   VAL("ETC") = External transaction code
	   VAL("TAMT")= Transaction amount
	   VAL("EFD") = Effective date
	   VAL("TSO") = Source of funds
	   VAL("TCMT")= Teller comment
	   VAL("CRCD")= Currency code
	   UTSO() = This array contains customer specific values parsed
	     into the TSO field of the exception file when
	     the Inclearing file was originally loaded.
	   RET() = This array contains the reject reasons.	
	*/
	
	type public Number RECSIZ
	type public Date DATE
	type public String REC,RET(),VAL(),XCID,XTELLER
	type Number XENDBAL,XTAMT,XTSEQ
	type Date XDATE
	type String ETLO,OUTREC,XBEN,XBRCD,XBRCDE,XBSEAMT,XCDT,XCHKTYP,XCID1
	type String XCRCD,XCUSTCD,XDIR,XDISC,XEFD,XETC,XITC,XLNERC,XMULT,XOTCMT
	type String XOTSO,XRATE,XRTY,XSPR,XTCMT,XTELLER1,XTIM,XTLO,XTRC,XTRESREF
	type String XTSB,XTSO,XUIDT
	
	set XTELLER1=$$ZEROFIL(XTELLER.get(),12)
	set XCID1=$$ZEROFIL(XCID.get(),12)
	set XDATE=$$ZEROFIL(DATE,10)
	set XBRCD=$$BLKFIL(REC.piece($C(9),2),6)
	set XTSEQ=$$ZEROFIL(REC.piece($C(9),1),6)
	set XITC=$$BLKFIL(VAL("ITC").get(),5)
	set XETC=$$BLKFIL(VAL("ETC").get(),12)
	set XTAMT=$$ZEROFIL(VAL("TAMT").get()*100,12)
	set XEFD=$$BLKFIL(VAL("EFD").get(),10)
	set XTLO=$$BLKFIL(REC.piece($C(9),8),20)
	set XTSO=$$BLKFIL(REC.piece($C(9),9),12)
	set XTCMT=$$BLKFIL(VAL("TCMT").get(),40)
	set XCDT=$$BLKFIL(REC.piece($C(9),11),10)
	set XTIM=$$BLKFIL(REC.piece($C(9),12),11)
	set XBRCDE=$$BLKFIL(REC.piece($C(9),13),6)
	set XTRC=$$ZEROFIL(REC.piece($C(9),14),15)
	set XUIDT=$$BLKFIL(REC.piece($C(9),15),12)
	set XSPR=$$ZEROFIL(REC.piece($C(9),16),12)
	set XTSB=$$ZEROFIL(REC.piece($C(9),17),12)
	set XLNERC=$$BLKFIL(REC.piece($C(9),18),20)
	set XCRCD=$$BLKFIL(VAL("CRCD").get(),3)
	set XRATE=$$ZEROFIL(REC.piece($C(9),20),8)
	set XDISC=$$BLKFIL(REC.piece($C(9),21),40)
	set XBEN=$$ZEROFIL(REC.piece($C(9),22),12)
	set XDIR=$$ZEROFIL(REC.piece($C(9),23),12)
	set XCHKTYP=$$BLKFIL(REC.piece($C(9),24),1)
	set XENDBAL=$$ZEROFIL(REC.piece($C(9),26),12)
	set XMULT=$$BLKFIL(REC.piece($C(9),27),1)
	set XBSEAMT=$$ZEROFIL(REC.piece($C(9),28),12)
	set XCUSTCD=$$BLKFIL(REC.piece($C(9),29),3)
	set XTRESREF=$$ZEROFIL(REC.piece($C(9),30),10)
	set XOTCMT=$$BLKFIL(REC.piece($C(9),31),40)
	set XOTSO=$$BLKFIL(REC.piece($C(9),32),12)
	set XRTY=0
	set OUTREC="02"_XDATE_XBRCD_XTELLER1_XTSEQ_XCID1_XITC_XETC_XTAMT_XEFD
	set OUTREC=OUTREC_XTLO_XTSO_XTCMT_XCDT_XTIM_XBRCDE_XTRC_XUIDT_XSPR
	set OUTREC=OUTREC_XTSB_XLNERC_XCRCD_XRATE_XDISC_XBEN_XDIR_XCHKTYP
	set OUTREC=OUTREC_XENDBAL_XMULT_XBSEAMT_XCUSTCD_XTRESREF_XRTY_XOTCMT_XOTSO
	set OUTREC=OUTREC_$$BLKFIL(RET(1).get(),6)_$$BLKFIL(RET(2).get(),6)
	set OUTREC=OUTREC_$$BLKFIL(RET(3).get(),6)_$$BLKFIL(RET(4).get(),6)
	set OUTREC=OUTREC_$$BLKFIL(RET(5).get(),6)
	set OUTREC=OUTREC_$$BLKFIL("",RECSIZ-OUTREC.length())

	quit OUTREC

	
TRAILER()	// Format Return Trailer Record

	type public Number RECSIZ
	type public String FILCNT,OUTREC

	set OUTREC="09"_$$ZEROFIL(FILCNT.get(),10)
	set OUTREC=OUTREC_$$BLKFIL("",RECSIZ-OUTREC.length())

	quit OUTREC

	
LOGIT	//       Process Log
	
	type public String FILCR,FILCNT,FILDR,IO
	type String M()
	type Number i

	type ResultSet rs=Db.select("MESSAGE","STBLMSG","MSGID in (5118,5119,5120)")
	set i=0
	while rs.next() do {
	     set i=i+1
	     set M(i)=rs.getCol("MESSAGE")
	     }
	use IO write M(1),FILCR.get(),!
	write M(2),FILDR.get(),!
	write M(3),FILCNT.get(),!
	
	quit 
	
BLKFIL(String VAL,Number N)	// fill the field with blank space
	
	if VAL.length()>N quit VAL.extract(1,N)
	quit VAL_" ".justify(N).extract(1,N-VAL.length())
	
ZEROFIL(String VAL,Number N,String DEC)	// fill the field with leading zeros
	
	type String D,I,L
	type public String X
	
	set VAL=VAL.get()
	if N.get().isNull() set N=VAL.length()
	if VAL.length()>N quit VAL.extract(1,N)
	set DEC=+DEC.get()
	for I=1:1:DEC set X=X.get()_0
	set D=VAL.piece(".",2) set L=D.length()
	if L<DEC  do {
		if VAL'["." set VAL=VAL_"."  
		set VAL=VAL_X.extract(1,DEC-L)
		}
	if L>DEC set VAL=(VAL.toNumber()).roundDec(DEC) // round down
	set X=""
	for I=1:1:N set X=X.get()_0

	quit X.extract(1,N-VAL.length())_VAL
	
 #OPTION ResultClass ON
Public String vSIG()	quit "60298^23965^Jaimano Prakash^5317"	// Signature - LTD^TIME^USER^SIZE
