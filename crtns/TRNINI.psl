TRNINI
	/*
	Release Transaction Code Table
	
	   ORIG: ZENGF - 02/23/95

	   KEYWORDS: Transaction Code

	   Examples:
	         D BUILD^TRNINI(opt)     to copy the transaction codes in this
	                                 routine into the global ^TRN

	---- Revision History -------------------------------------------------
	
	04/09/07 - SmithCD - CR 24945
		   Corrected documenatation per re-arrangement of tran codes.

	01/05/07 - KUMARB - CR24680
	   	   Modifed section BUILD1 to correct the comments based on
	   	   the transaction codes in TRNINI* files. 
	*/

	// I18N=QUIT

	quit


public BUILD(Number case)

	/*
	Entry point to build TRN table
	
	   ARGUMENT:
	         . case          case of the tran codes to be build
	                         		/TYP=N/MECH=VAL/NOREQ/DFT="0"
	                 0               lower case
	                 1               upper case and lower case

		Creates the transaction table (TRN) by calling 
		other procedures TRNINI0, TRNINI1, TRNINI1A, TRNINI2, 
		TRNINI2A, TRNINI3, TRNINI4 and TRNINI5.

		The transaction codes are converted to lower case
		to avoid possible conflict with the existing customary
		transaction codes, if parameter 'case' is not present or the
		parameter value is 0. If the parameter passed is non-zero
		then the converted codes are in upper case AND lower case.
	*/
	
	set case=+case.get()

	do BUILD1
	do BUILD2

	quit


BUILD1	// Entry point to build global ^TRN from the codes in text

	// The initial of trancode is equal to "@" to "CBPSP"
	do BUILD1^TRNINI0

	// The initial of trancode is equal to "CBPSB" to "CCPUI"
	do BUILD1^TRNINI1

	// The initial of trancode is equal to "CEC" to "CWRCF".
	do BUILD1^TRNINI1A

	// The initial of trancode is equal to "DAAIC" to "DLPL"
	do BUILD1^TRNINI2

	// The initial of trancode is equal to "DLPLO" to "FM"
	do BUILD1^TRNINI2A

	// The initial of trancode is equal to "I" to "L"
	do BUILD1^TRNINI3

	// The initial of trancode is equal to "MCHP" to "RDE"
	do BUILD1^TRNINI4

	// The initial of trancode is equal to "RDEB" to "W"
	do BUILD1^TRNINI5

	quit


BUILD2	// Covert old PCF column to corresponding PCFD/PCFL culumns 

	type Number POS
	type String VAL,COL
	type DbSet ds=Db.selectDbSet("TRN")

	if ds.isEmpty() quit
	while ds.next() do {

		type RecordTRN trn=ds.getRecord()
		
		for POS=1:1:trn.pcf.length() do {
			set VAL=trn.pcf.extract(POS)
			if trn.cls="D" do { quit
				set COL="PCFD"_POS
				set trn.@COL=VAL
				}

			if trn.cls="L" do {
				set COL="PCFL"_POS
				set trn.@COL=VAL
				}
			}

		do trn.bypassSave()
		}
	quit
	
	
public FILE(RecordTRN trn)	// Delete old TRN record then add the new one

	/*
	   ARGUMENT:
	         . trn          Transaction code to be recreated
	         		/TYP=RecordTRN/MECH=REF/REQ

		This section recreates the TRN table record for the
		transaction code object passed in by saving any associated
		TRNAUT and TRNSD records, deleting the old transaction code,
		recreating the transaction code from the object passed in, 
		then rebuilding the associated TRNAUT and TRNSD records.

		In a GT.m environment, TRNAUT and TRNSD records will be lost
		when the TRN record is deleted because TRNAUT and TRNSD records
		are saved on sub-nodes of nodes "2" and "3" which TRN uses
		to store other information.  As a result, when nodes 2 and 3 are 
		killed for the primary TRN record deletion, the TRNAUT and TRNSD
		records are also deleted.  It is therefore necessary to cache
		the transaction code's associated TRNAUT and TRNSD records prior
		to the TRN record deletion, and then to restore these records
		after the transaction code has been recreated.
	*/

	type RecordTRNAUT trna()	// Array used to cache TRNAUT records
	type RecordTRNSD trns()		// Array used to cache TRNSD records
	type Number bound,ctr

	set ctr=0

	// Save off any TRNAUT records
	type DbSet trnaut=Db.selectDbSet("TRNAUT","ETC=:trn.etc")
	while trnaut.next() set ctr=ctr+1,trna(ctr)=trnaut.getRecord()
	
	set ctr=0
	
	// Save off any TRNSD records
	type DbSet trnsd=Db.selectDbSet("TRNSD","ETC=:trn.etc")
	while trnsd.next() set ctr=ctr+1,trns(ctr)=trnsd.getRecord()

	// Delete the old TRN record
	if Db.isDefined("TRN","ETC=:trn.etc") do Db.delete("TRN","ETC=:trn.etc")

	// Add the new TRN record
	do trn.setMode(0)
	do trn.bypassSave()

	set bound=trna("").order(-1)

	// Restore the TRNAUT records
	if bound>0 for ctr=1:1:bound do {
		if 'Db.isDefined("TRNAUT","ETC=:trna(ctr).etc,UCLS=:trna(ctr).ucls") do trna(ctr).setMode(0)
		do trna(ctr).bypassSave()
		}
	
	set bound=trns("").order(-1)
	
	// Restore the TRNSD records
	if bound>0 for ctr=1:1:bound do {
		if 'Db.isDefined("TRNSD","ETC=:trns(ctr).etc,SEQ=:trns(ctr).seq") do trns(ctr).setMode(0)
		do trns(ctr).bypassSave()
		}
	
	quit
	
 #OPTION ResultClass ON
Public String vSIG()	quit "60729^60809^Chad Smith^4571"	// Signature - LTD^TIME^USER^SIZE
