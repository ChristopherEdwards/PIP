R01S562	// SCA643 - PIN Activation Pending Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:00 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA643"
	set RN="PIN Activation Pending Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|255||[CIF]ACN|[CIF]ACN:DISTINCT:NOVAL||D EXT^DBSQRY||T|Customer Number|||||"
	set %TAB("VIN3")="|255||[CRD]CRDNUM|[CRD]CRDNUM:DISTINCT:NOVAL||D EXT^DBSQRY||T|Card Number|||||"

	set %READ="IO/REQ,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BOO1,BOO2,CONAM,CRDBOO,CRDNUMBR,CRDUID,HPINCRD,PINTYPE,PINTYPE1,PINTYPE2,RID,RN,TPINCRD,USERID1,USERID2,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA643",RN="PIN Activation Pending Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA643","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[CRD]PINSTAT=2 ! [CIF]PIN1STAT=2 ! [CIF]PIN2STAT=2",SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[CIF]ACN "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[CRD]CRDNUM "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("CRD,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC2|"_"Customer Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Card Number"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="PIN Activation Pending Report"
		set VBNRINFO("PGM")="R01S562"
		set VBNRINFO("RID")="SCA643"
		set VBNRINFO("TABLES")="CRD,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,CIF]ACN"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,CRD]CRDTYP"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,CRD]CRDNUM"

		set VBNRINFO("DOC",1)="This report will display basic customer information associated with each PIN,"
		set VBNRINFO("DOC",2)="TPIN, or HPIN that needs to be activated."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"CIF.ACN,CRD.CRDTYP,CRD.CRDNUM,CIF.NAM,CIF.PIN1STAT"
	set VSELECT=VSELECT_",CIF.BOO,CIF.PIN1UID,CIF.PIN2STAT,CIF.PIN2UID,CRD."
	set VSELECT=VSELECT_"PINSTAT,CRD.PINUID"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"CRD,CIF",VWHERE,"CIF.ACN,CRD.CRDTYP,CRD.CRDNUM","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece($C(9),1)			// CIF.ACN
	set vc2=V.piece($C(9),2)			// CRD.CRDTYP
	set vc3=V.piece($C(9),3)			// CRD.CRDNUM
	set vc4=V.piece($C(9),4)			// CIF.NAM
	set vc5=V.piece($C(9),5)			// CIF.PIN1STAT
	set vc6=V.piece($C(9),6)			// CIF.BOO
	set vc7=V.piece($C(9),7)			// CIF.PIN1UID
	set vc8=V.piece($C(9),8)			// CIF.PIN2STAT
	set vc9=V.piece($C(9),9)			// CIF.PIN2UID
	set vc10=V.piece($C(9),10)			// CRD.PINSTAT
	set vc11=V.piece($C(9),11)			// CRD.PINUID
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL1	// Detail
	type public String %TIM,BOO1,BOO2,CRDBOO,CRDNUMBR,CRDUID,HPINCRD,IOSL,PINTYPE,PINTYPE1,PINTYPE2,TPINCRD,USERID1,USERID2,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+8>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"Customer Name:"
	set VL=VL_$J("",17-VL.length())_$E(vc4,1,40)
	do VOM
	set VL=" "_"Customer ID:"
	set VL=VL_$J("",17-VL.length())_$J(vc1,12)
	do VOM
	set VL="" do VOM
	set VL="                            "_"PIN"
	set VL=VL_$J("",43-VL.length())_"Branch"
	do VOM
	set VL=" "_"Card Number"
	set VL=VL_$J("",27-VL.length())_" Type"
	set VL=VL_$J("",44-VL.length())_"Code"
	set VL=VL_$J("",58-VL.length())_"User ID"
	do VOM
	set VL="=============================================================================="
	do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(TPINCRD,1,20) set VL=" "_V
	do VP2 quit:VFMQ!verror.get()  set V=$E(PINTYPE1,1,4)
	set VL=VL_$J("",28-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$J(BOO1,6)
	set VL=VL_$J("",42-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J(USERID1,12)
	set VL=VL_$J("",53-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	do VP5 quit:VFMQ!verror.get()  set V=$E(HPINCRD,1,20) set VL=" "_V
	do VP6 quit:VFMQ!verror.get()  set V=$E(PINTYPE2,1,4)
	set VL=VL_$J("",28-VL.length())_V
	do VP7 quit:VFMQ!verror.get()  set V=$J(BOO2,6)
	set VL=VL_$J("",42-VL.length())_V
	do VP8 quit:VFMQ!verror.get()  set V=$J(USERID2,12)
	set VL=VL_$J("",53-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL3	// Detail
	type public String %TIM,BOO1,BOO2,CRDBOO,CRDNUMBR,CRDUID,HPINCRD,IOSL,PINTYPE,PINTYPE1,PINTYPE2,TPINCRD,USERID1,USERID2,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP9 quit:VFMQ!verror.get()  set V=$E(CRDNUMBR,1,20) set VL=" "_V
	do VP10 quit:VFMQ!verror.get()  set V=$E(PINTYPE,1,4)
	set VL=VL_$J("",28-VL.length())_V
	do VP11 quit:VFMQ!verror.get()  set V=$J(CRDBOO,6)
	set VL=VL_$J("",42-VL.length())_V
	do VP12 quit:VFMQ!verror.get()  set V=$J(CRDUID,12)
	set VL=VL_$J("",53-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BOO1,BOO2,CONAM,CRDBOO,CRDNUMBR,CRDUID,HPINCRD,PINTYPE,PINTYPE1,PINTYPE2,RID,RN,TPINCRD,USERID1,USERID2,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,40)
	set VL=VL_$J("",49-VL.length())_"Run Date:"
	set VL=VL_$J("",59-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",51-VL.length())_"System:"
	set VL=VL_$J("",59-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: TPINCRD

	type public String vc5,vc3
	// Converted to PSL by CNV70RW
	type Public String CIF,CRD,CRDNUM,PIN1STAT,TPINCRD

	if vc5=2 set TPINCRD=vc3
	else  set TPINCRD=""
	quit

VP2	// Column pre-processor - Variable: PINTYPE1

	type public String vc5
	type Public String CIF,PIN1STAT,PINTYPE1

	if vc5=2 set PINTYPE1="TPIN"
	else  set PINTYPE1=""
	quit

VP3	// Column pre-processor - Variable: BOO1

	type public String vc5,vc6
	type Public String BOO,BOO1,CIF,PIN1STAT

	if vc5=2 set BOO1=vc6
	else  set BOO1=""
	quit

VP4	// Column pre-processor - Variable: USERID1

	type public String vc5,vc7
	type Public String CIF,PIN1STAT,PIN1UID,USERID1

	if vc5=2 set USERID1=vc7
	else  set USERID1=""
	quit

VP5	// Column pre-processor - Variable: HPINCRD

	type public String vc8,vc3
	type Public String CIF,CRD,CRDNUM,HPINCRD,PIN2STAT

	if vc8=2 set HPINCRD=vc3
	else  set HPINCRD=""
	quit

VP6	// Column pre-processor - Variable: PINTYPE2

	type public String vc8
	type Public String CIF,PIN2STAT,PINTYPE2

	if vc8=2 set PINTYPE2="HPIN"
	else  set PINTYPE2=""
	quit

VP7	// Column pre-processor - Variable: BOO2

	type public String vc8,vc6
	type Public String BOO,BOO2,CIF,PIN2STAT

	if vc8=2 set BOO2=vc6
	else  set BOO2=""
	quit

VP8	// Column pre-processor - Variable: USERID2

	type public String vc8,vc9
	type Public String CIF,PIN2STAT,PIN2UID,USERID2

	if vc8=2 set USERID2=vc9
	else  set USERID2=""
	quit

VP9	// Column pre-processor - Variable: CRDNUMBR

	type public String vc10,vc3
	type Public String CRD,CRDNUM,CRDNUMBR,PINSTAT

	if vc10=2 set CRDNUMBR=vc3
	else  set CRDNUMBR=""
	quit

VP10	// Column pre-processor - Variable: PINTYPE

	type public String vc10
	type Public String CRD,PINSTAT,PINTYPE

	if vc10=2 set PINTYPE="PIN"
	else  set PINTYPE=""
	quit

VP11	// Column pre-processor - Variable: CRDBOO

	type public String vc10,vc6
	type Public String BOO,CIF,CRD,CRDBOO,PINSTAT

	if vc10=2 set CRDBOO=vc6
	else  set CRDBOO=""
	quit

VP12	// Column pre-processor - Variable: CRDUID

	type public String vc10,vc11
	type Public String CRD,CRDUID,PINSTAT,PINUID

	if vc10=2 set CRDUID=vc11
	else  set CRDUID=""
	quit
