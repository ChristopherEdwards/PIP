R01S602	// SCA681A - Builder Loan Status Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:02 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number COMMNBR

	set RID="SCA681A"
	set RN="Builder Loan Status Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("COMMNBR")="|12|||[LN]CCL:DISTINCT||||N|Commitment Number|||||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,COMMNBR#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number COMMNBR
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ADDR1,ADDR2,ADDR3,ADDR4,ADDR5,CONAM,DES1,DES2,DES3,DES4,RID,RN,VL,VLOF,VRF(),VSTATS(),lot1,lot2,lot3,lot4,lot5,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA681A",RN="Builder Loan Status Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA681A","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[SCA681A]CID#4#12,[SCA681A]OFF#22#4,[SCA681A]COMMAMT#28#18,[SCA681A]PRBAL#48#18,[SCA681A]IRAMTO#71#18,[SCA681A]LADT#100#10,[SCA681A]REVORG#112#18\[SCA681A]IRN#18#8,[SCA681A]AVLBAL#48#18,[SCA681A]IRAMTR#71#18,[SCA681A]LADTAMT#92#18,[SCA681A]REVBAL#112#18"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Builder Loan Status Report"
		set VBNRINFO("PGM")="R01S602"
		set VBNRINFO("RID")="SCA681A"
		set VBNRINFO("TABLES")="SCA681A"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,SCA681A]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SCA681A]CID"

		set VBNRINFO("DOC",1)="This report (SCA681A) is the first section of the Builder Loan Status Report"
		set VBNRINFO("DOC",2)="and contains a current overview of each builder record.  It includes"
		set VBNRINFO("DOC",3)="information on loan balances and provides construction information including"
		set VBNRINFO("DOC",4)="number of units sold, contingent units, units settled, number of speculation"
		set VBNRINFO("DOC",5)="units and budget/draw information. The SCA681 procedure populates the SCA681A,"
		set VBNRINFO("DOC",6)="SCA681B, and SCA681C temporary tables with information for both section of the "
		set VBNRINFO("DOC",7)="Builder Loan Status Report (SCA681A and SCA681B). The @REP681 function can be "
		set VBNRINFO("DOC",8)="used to call both reports in succession. "

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("SCA681A.PID,SCA681A.CID,SCA681A.OFF,SCA681A.COMMAMT,SCA681A.PRBAL,SCA681A.IRAMTO,SCA681A.LADT,SCA681A.REVORG,SCA681A.IRN,SCA681A.AVLBAL,SCA681A.IRAMTR,SCA681A.LADTAMT,SCA681A.REVBAL","SCA681A","","SCA681A.PID,SCA681A.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13
	set vc1=V.piece($C(9),1)			// SCA681A.PID
	set vc2=V.piece($C(9),2)			// SCA681A.CID
	set vc3=V.piece($C(9),3)			// SCA681A.OFF
	set vc4=V.piece($C(9),4)			// SCA681A.COMMAMT
	set vc5=V.piece($C(9),5)			// SCA681A.PRBAL
	set vc6=V.piece($C(9),6)			// SCA681A.IRAMTO
	set vc7=V.piece($C(9),7)			// SCA681A.LADT
	set vc8=V.piece($C(9),8)			// SCA681A.REVORG
	set vc9=V.piece($C(9),9)			// SCA681A.IRN
	set vc10=V.piece($C(9),10)			// SCA681A.AVLBAL
	set vc11=V.piece($C(9),11)			// SCA681A.IRAMTR
	set vc12=V.piece($C(9),12)			// SCA681A.LADTAMT
	set vc13=V.piece($C(9),13)			// SCA681A.REVBAL
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	// Converted to PSL by CNV70RW
	type public Number COMMNBR

	do PROC^SCA681(COMMNBR)                // Populate SCA681A,SCA681B, & SCA681C globals
	//
	quit 

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VDTL2	// Detail
	type public String %TIM,ADDR1,ADDR2,ADDR3,ADDR4,ADDR5,COMMNBR,DES1,DES2,DES3,DES4,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),lot1,lot2,lot3,lot4,lot5,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="   "_$J(vc2,12)
	set VL=VL_$J("",21-VL.length())_$E(vc3,1,4)
	set VL=VL_$J("",27-VL.length())_$J($FN(vc4,",",2),18)
	set VL=VL_$J("",47-VL.length())_$J($FN(vc5,",",2),18)
	set VL=VL_$J("",70-VL.length())_$J($FN(vc6,",",2),18)
	set VL=VL_$J("",99-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",111-VL.length())_$J($FN(vc8,",",2),18)
	do VOM
	set VL="                 "_$J(vc9,8,5)
	set VL=VL_$J("",47-VL.length())_$J($FN(vc10,",",2),18)
	set VL=VL_$J("",70-VL.length())_$J($FN(vc11,",",2),18)
	set VL=VL_$J("",91-VL.length())_$J($FN(vc12,",",2),18)
	set VL=VL_$J("",111-VL.length())_$J($FN(vc13,",",2),18)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ADDR1,ADDR2,ADDR3,ADDR4,ADDR5,COMMNBR,CONAM,DES1,DES2,DES3,DES4,RID,RN,VL,lot1,lot2,lot3,lot4,lot5,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+18,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="  "_"Commitment Number: "
	do VP1 quit:VFMQ!verror.get()  set V=$J(COMMNBR,12)
	set VL=VL_$J("",21-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="  "_"Customer Name & Address                      Description                                    Lot Summary"
	do VOM
	set VL="" do VOM
	set VL="  "_$E(ADDR1,1,40)
	set VL=VL_$J("",47-VL.length())_$E(DES1,1,40)
	set VL=VL_$J("",94-VL.length())_"Number of Units"
	set VL=VL_$J("",116-VL.length())_$J(lot1,4)
	do VOM
	set VL="  "_$E(ADDR2,1,40)
	set VL=VL_$J("",47-VL.length())_$E(DES2,1,40)
	set VL=VL_$J("",94-VL.length())_"Contingent Units"
	set VL=VL_$J("",116-VL.length())_$J(lot2,4)
	do VOM
	set VL="  "_$E(ADDR3,1,40)
	set VL=VL_$J("",47-VL.length())_$E(DES3,1,40)
	set VL=VL_$J("",94-VL.length())_"Non-Contingent Units  "
	set VL=VL_$J("",116-VL.length())_$J(lot3,4)
	do VOM
	set VL="  "_$E(ADDR4,1,40)
	set VL=VL_$J("",47-VL.length())_$E(DES4,1,40)
	set VL=VL_$J("",94-VL.length())_"Units Sold"
	set VL=VL_$J("",116-VL.length())_$J(lot4,4)
	do VOM
	set VL="  "_$E(ADDR5,1,40)
	set VL=VL_$J("",94-VL.length())_"Units Settled"
	set VL=VL_$J("",116-VL.length())_$J(lot5,4)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="    "_"Account Nbr      Offr   Commitment Amount       Principal Bal   Int Reserve Original    Last Advance Date   Revolver Orig Amt"
	do VOM
	set VL="                 "_"Int Rate                        Available Credit  Int Reserve Remaining  Last Advance Amount    Revolver Balance"
	do VOM
	set VL=" "_"=================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: COMMNBR

 type Public Number COMMNBR
 type Public String ADDR1,ADDR2,ADDR3,ADDR4,ADDR5,DES1,DES2,DES3,DES4,lot1,lot2,lot3,lot4,lot5
 type Number XACN
 
 type RecordACN acn=Db.getRecord("ACN","CID=:COMMNBR",1)
 set XACN=acn.acn
 
 // Commitment Description Information
 set DES1=acn.title1
 set DES2=acn.title2
 set DES3=acn.title3
 set DES4=acn.title4
 
 // Customer Address Information
 type RecordCIF cif=Db.getRecord("CIF","ACN=:XACN",1)
 set ADDR1=cif.nam	// Customer Name
 set ADDR2=cif.pad1	// Address Line 1
 set ADDR3=cif.pad2	// Address Line 2
 set ADDR4=cif.pad3	// Address Line 3
 set ADDR5=cif.pcity_", "_cif.pstate_" "_cif.pzip
 
 // Lot Summary Information
 set (lot1,lot2,lot3,lot4,lot5)=0
 type public Number CCL
 type Number CID
 set CCL=COMMNBR
 set CID=""
 
 type DbSet ds=Db.selectDbSet("LN","CCL=:CCL")
 while ds.next() do {
	type RecordLN ln=ds.getRecord("LN")
	if ln.cpf do {
		type DbSet ds1=Db.selectDbSet("LN","CCL=:ln.cid")
		while ds1.next() do {
			type Boolean CONCODE
			type Date CONDT,DTSOLD
			type Number COLL
			
			type RecordLN ln1=ds1.getRecord("LN")
			set COLL=ln1.coll
			// lot1 is total number of collateralized loans (LN.COLL'="")
			if COLL'="" set lot1=lot1+1
			else  quit
			type RecordCOL col=Db.getRecord("COL","COLL=:COLL",1)
			set CONCODE=col.contract
			// lot2 is total number of contingent units (COL.CONTRACT=1)
			if CONCODE=1 set lot2=lot2+1
			// lot3 is total number of noncontingent units (COL.CONTRACT=0)
			else  set lot3=lot3+1
			set CONDT=col.cdt			
			// lot4 is total number of units sold (COL.CDT'="")
			if CONDT'="" set lot4=lot4+1
			set DTSOLD=col.solddt
			// lot 5 is total number of units settled (COL.SOLDDT'="")
			if DTSOLD'="" set lot5=lot5+1
		}
	}
 }
 quit

	quit
