R01S040	// DBSSPLST - Stored Procedure Definition
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:37 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"

	set RID="DBSSPLST"
	set RN="Stored Procedure Definition"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DBTBLSP]PID|[DBTBLSP]PID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Stored Procedure Name|||||"
	set %TAB("VIN2")="|255||[DBTBLSP]SPTYPE|||D EXT^DBSQRY||T|Stored Procedure Type|||||"
	set %TAB("VIN3")="|255||[DBTBLSP]HVARS|||D EXT^DBSQRY||T|Host Variable List|||||"
	set %TAB("VIN4")="|255||[DBTBLSP]PARS|||D EXT^DBSQRY||T|Parameters|||||"
	set %TAB("VIN5")="|255||[DBTBLSP]LTD|||D EXT^DBSQRY||T|Date Created|||||"
	set %TAB("VIN6")="|255||[DBTBLSP]TIME|||D EXT^DBSQRY||T|Time Created|||||"
	set %TAB("VIN7")="|255||[DBTBLSP]SQLSTMT|||D EXT^DBSQRY||T|SQL Statement|||||"
	set %TAB("VIN8")="|255||[DBTBLSP]HASHKEY|||D EXT^DBSQRY||T|Hash Key|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSSPLST",RN="Stored Procedure Definition"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","DBSSPLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DBTBLSP]PID "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DBTBLSP]SPTYPE "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DBTBLSP]HVARS "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DBTBLSP]PARS "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DBTBLSP]LTD "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[DBTBLSP]TIME "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[DBTBLSP]SQLSTMT "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[DBTBLSP]HASHKEY "_VIN8,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DBTBLSP") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Stored Procedure Name"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Stored Procedure Type"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Host Variable List"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Parameters"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Date Created"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Time Created"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"SQL Statement"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Hash Key"_"|VIN8|"_VIN8.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Stored Procedure Definition"
		set VBNRINFO("PGM")="R01S040"
		set VBNRINFO("RID")="DBSSPLST"
		set VBNRINFO("TABLES")="DBTBLSP"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DBTBLSP]PID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:1 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DBTBLSP.PID,DBTBLSP.PGM,DBTBLSP.PARS,DBTBLSP.USER,"
	set VSELECT=VSELECT_"DBTBLSP.HASHKEY,DBTBLSP.HVARS,DBTBLSP.LTD,DBTBLSP."
	set VSELECT=VSELECT_"TIME,DBTBLSP.SPTYPE,DBTBLSP.SQL1,DBTBLSP.SQL2,DBTB"
	set VSELECT=VSELECT_"LSP.SQL3,DBTBLSP.SQL4,DBTBLSP.SQL5,DBTBLSP.SQL6,DB"
	set VSELECT=VSELECT_"TBLSP.SQL7,DBTBLSP.SQL8,DBTBLSP.SQL9,DBTBLSP.SQL10"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBTBLSP",VWHERE,"DBTBLSP.PID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1
	set vovc1=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1
	set vovc1=vc1
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19
	set vc1=V.piece($C(9),1)			// DBTBLSP.PID
	set vc2=V.piece($C(9),2)			// DBTBLSP.PGM
	set vc3=V.piece($C(9),3)			// DBTBLSP.PARS
	set vc4=V.piece($C(9),4)			// DBTBLSP.USER
	set vc5=V.piece($C(9),5)			// DBTBLSP.HASHKEY
	set vc6=V.piece($C(9),6)			// DBTBLSP.HVARS
	set vc7=V.piece($C(9),7)			// DBTBLSP.LTD
	set vc8=V.piece($C(9),8)			// DBTBLSP.TIME
	set vc9=V.piece($C(9),9)			// DBTBLSP.SPTYPE
	set vc10=V.piece($C(9),10)			// DBTBLSP.SQL1
	set vc11=V.piece($C(9),11)			// DBTBLSP.SQL2
	set vc12=V.piece($C(9),12)			// DBTBLSP.SQL3
	set vc13=V.piece($C(9),13)			// DBTBLSP.SQL4
	set vc14=V.piece($C(9),14)			// DBTBLSP.SQL5
	set vc15=V.piece($C(9),15)			// DBTBLSP.SQL6
	set vc16=V.piece($C(9),16)			// DBTBLSP.SQL7
	set vc17=V.piece($C(9),17)			// DBTBLSP.SQL8
	set vc18=V.piece($C(9),18)			// DBTBLSP.SQL9
	set vc19=V.piece($C(9),19)			// DBTBLSP.SQL10
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1		// Skip detail
	do VBREAK

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(1)
	type Public String vc1,vovc1
	set VH0=1					// Page break
	type Number vb1
	set (vb1)=0
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(1)=VT(1)+1
	quit

VDTL1	// Detail
	type public String %TIM,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vrundate,vsysdate

	if VLC+13>IOSL do VHDG0 quit:VFMQ

	set VL="                   "_"---------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL=$E(vc1,1,20)
	set VL=VL_$J("",21-VL.length())_$E(vc2,1,8)
	set VL=VL_$J("",30-VL.length())_$E(vc3,1,25)
	set VL=VL_$J("",56-VL.length())_$E(vc4,1,13)
	set VL=VL_$J("",71-VL.length())_$E(vc5,1,18)
	set VL=VL_$J("",90-VL.length())_$E(vc6,1,20)
	set VL=VL_$J("",111-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",122-VL.length())_$J($$TIM^%ZM(vc8),8)
	do VOM
	set VL="" do VOM
	set VL="                   "_$E(vc9,1,6)
	set VL=VL_$J("",26-VL.length())_$E(vc10,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc11,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc12,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc13,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc14,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc15,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc16,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc17,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc18,1,255)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                          "_$E(vc19,1,255)
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="                                                                                                                "_"Date      Time"
	do VOM
	set VL=" "_"Procedure ID        Routine  Parameters                User           Hash Key           Host Variables        Created/Modified"
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,VPN,vovc1,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                          "_"---------------------------------"
	do VOM
	set VL="                          "_"Total Stored Procedures: "
	set V=(VT(0)+VT(1))				// @CNT(0,N,8)
	set VL=VL_$J("",51-VL.length())_$J(V,8)
	do VOM
	set VL="                          "_"---------------------------------"
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
