SYSBL1FL(RecordSYSBAL1 sysbal1, String vpar, Boolean vparNorm) // SYSBAL1 - Teller Activity Summary by CRCD & ETC Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:20 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (9)              11/22/2003
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = sysbal1.getMode()                     // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(sysbal1,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(sysbal1,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("TDATE").exists()!vx("CRCD").exists()!vx("ETC").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("SYSBAL1",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("SYSBAL1","TDATE = :sysbal1.tdate and CRCD = :sysbal1.crcd and ETC = :sysbal1.etc") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String TDATE
	type public String CRCD
	type public String ETC

	type RecordSYSBAL1 sysbal1 = Db.getRecord("SYSBAL1","TDATE=:TDATE,CRCD=:CRCD,ETC=:ETC")
	if (%ProcessMode = 2) do {
		do sysbal1.setMode(2)

		do SYSBL1FL(sysbal1,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordSYSBAL1 sysbal1

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("SYSBAL1","TDATE = :sysbal1.tdate and CRCD = :sysbal1.crcd and ETC = :sysbal1.etc") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(sysbal1)) S ^SYSBAL(vobj(sysbal1,-3),1,vobj(sysbal1,-4),vobj(sysbal1,-5))=vobj(sysbal1)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordSYSBAL1 sysbal1


	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^SYSBAL(vobj(sysbal1,-3),1,vobj(sysbal1,-4),vobj(sysbal1,-5))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordSYSBAL1 sysbal1

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordSYSBAL1 sysbal1

	if sysbal1.tdate.isNull() do vreqerr("TDATE") quit
	if sysbal1.crcd.isNull() do vreqerr("CRCD") quit
	if sysbal1.etc.isNull() do vreqerr("ETC") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("SYSBAL1","MSG",1767,"SYSBAL1."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordSYSBAL1 sysbal1

	set X = sysbal1.tdate if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("TDATE", vRM) quit
	if sysbal1.crcd.length()>3 set vRM = $$^MSG(1076,3) do vdderr("CRCD", vRM) quit
	set X = sysbal1.etc if 'X.isNull(),'Db.isDefined("TRN","X") set vRM = $$^MSG(1485,X) do vdderr("ETC", vRM) quit
	set X = sysbal1.ppmamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SYSBAL1.PPMAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = sysbal1.ppmcount if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("PPMCOUNT", vRM) quit
	set X = sysbal1.tamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SYSBAL1.TAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = sysbal1.tcount if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("TCOUNT", vRM) quit
	set X = sysbal1.tpmamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SYSBAL1.TPMAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = sysbal1.tpmcount if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("TPMCOUNT", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("SYSBAL1","MSG",979,"SYSBAL1."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordSYSBAL1 sysbal1

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("TDATE").exists() set vux("TDATE") = vx("TDATE")
	if vx("CRCD").exists() set vux("CRCD") = vx("CRCD")
	if vx("ETC").exists() set vux("ETC") = vx("ETC")
	do vkey(1) set voldkey = sysbal1.tdate_","_sysbal1.crcd_","_sysbal1.etc // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = sysbal1.tdate_","_sysbal1.crcd_","_sysbal1.etc // Copy new keys into object
	type RecordSYSBAL1 vnewrec = sysbal1.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("SYSBAL1",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordSYSBAL1 sysbal1

	if vux("TDATE").exists() set sysbal1.tdate = vux("TDATE").piece("|",i)
	if vux("CRCD").exists() set sysbal1.crcd = vux("CRCD").piece("|",i)
	if vux("ETC").exists() set sysbal1.etc = vux("ETC").piece("|",i)
	quit
