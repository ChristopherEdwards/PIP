R01S046	// FIXIRA - Report to Check and Fix Bad RSP Accounts
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:37 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number ANT=1
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="FIXIRA"
	set RN="Report to Check and Fix Bad RSP Accounts"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("ANT")="|1|||||||L|Anticipated|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[IRA]ACN|[CIF]:NOVAL||D EXT^DBSQRY||T|Customer Number|||||"
	set %TAB("VIN2")="|255||[IRA]RPASEQ|[IRA]RPASEQ:DISTINCT:NOVAL||D EXT^DBSQRY||T|Plan Sequence Number|||||"
	set %TAB("VIN3")="|255||[IRA]TAXYR|[IRA]TAXYR:DISTINCT:NOVAL||D EXT^DBSQRY||T|Tax Year|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,ANT#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number ANT
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ACN,BEG,CALC1,CONAM,CURR1,END,GRP,PIECE1,RID,RN,RPASEQ,TOTERR,TYP,TYPE1(),U(),V1,V2,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138,vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167
	type String vc168,vc169,vc17,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76
	type String vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="FIXIRA",RN="Report to Check and Fix Bad RSP Accounts"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","FIXIRA","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[IRA]ACN "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[IRA]RPASEQ "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[IRA]TAXYR "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("IRA") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Customer Number"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Plan Sequence Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Tax Year"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Report to Check and Fix Bad RSP Accounts"
		set VBNRINFO("PGM")="R01S046"
		set VBNRINFO("RID")="FIXIRA"
		set VBNRINFO("TABLES")="IRA"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,IRA]ACN"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,IRA]RPASEQ"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,IRA]TAXYR"

		set VBNRINFO("DOC",1)="The Report to Check and Fix Bad RSP Accounts locates and corrects all "
		set VBNRINFO("DOC",2)="erroneous Retirement/Savings account (RSP) records. The report "
		set VBNRINFO("DOC",3)="rebuilds the yearly transactions for each account in the RSP Tax Year "
		set VBNRINFO("DOC",4)="Information table (IRA) by checking them against the Transaction History table "
		set VBNRINFO("DOC",5)="(HIST). "
		set VBNRINFO("DOC",6)=""
		set VBNRINFO("DOC",7)="This report calculates the correct RSP account contribution, deduction, and "
		set VBNRINFO("DOC",8)="withdrawal values. It then compares the calculated value in the history with "
		set VBNRINFO("DOC",9)="the current value. If discrepancies exist, the report displays the current "
		set VBNRINFO("DOC",10)="value and the calculated (i.e., correct) value."
		set VBNRINFO("DOC",11)=""
		set VBNRINFO("DOC",12)="For each account, the report lists the customer number, Plan sequence "
		set VBNRINFO("DOC",13)="number, tax year, RSP transaction type (i.e., contribution, deduction, or "
		set VBNRINFO("DOC",14)="withdrawal), as well as the current value and the calculated value of each "
		set VBNRINFO("DOC",15)="transaction. This report also indicates the total differences found."
		set VBNRINFO("DOC",16)=""
		set VBNRINFO("DOC",17)="If you set the Anticipated flag in the Report Criteria to N, the report "
		set VBNRINFO("DOC",18)="automatically updates the RSP Tax Year Information table (IRA) with the "
		set VBNRINFO("DOC",19)="correct values. "

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vc100)=""
	set (vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138,vc139,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc200)=""
	set (vc201)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"IRA.TAXYR,IRA.ACN,IRA.RPASEQ,IRA.D1,IRA.D2,IRA.D3,"
	set VSELECT=VSELECT_"IRA.D4,IRA.D5,IRA.D6,IRA.D7,IRA.D8,IRA.D10,IRA.D11"
	set VSELECT=VSELECT_",IRA.D12,IRA.D13,IRA.D14,IRA.D15,IRA.D16,IRA.D17,I"
	set VSELECT=VSELECT_"RA.D18,IRA.D19,IRA.D20,IRA.D21,IRA.D22,IRA.D23,IRA"
	set VSELECT=VSELECT_".D24,IRA.D25,IRA.D26,IRA.D27,IRA.D28,IRA.D29,IRA.P"
	set VSELECT=VSELECT_"VMAD,IRA.MAXLIF,IRA.MADAMT,IRA.MADCY,IRA.D34,IRA.D"
	set VSELECT=VSELECT_"35,IRA.D36,IRA.D37,IRA.D38,IRA.D39,IRA.NEILDTE,IRA"
	set VSELECT=VSELECT_".RNEI,IRA.UNEI,IRA.D43,IRA.D44,IRA.D45,IRA.D46,IRA"
	set VSELECT=VSELECT_".D47,IRA.D48,IRA.D49,IRA.D50,IRA.D51,IRA.D52,IRA.D"
	set VSELECT=VSELECT_"53,IRA.D54,IRA.D55,IRA.D56,IRA.D57,IRA.D58,IRA.D59"
	set VSELECT=VSELECT_",IRA.D60,IRA.D61,IRA.D62,IRA.D63,IRA.D64,IRA.D65,I"
	set VSELECT=VSELECT_"RA.D66,IRA.D67,IRA.D68,IRA.D69,IRA.D70,IRA.D71,IRA"
	set VSELECT=VSELECT_".D72,IRA.D73,IRA.D74,IRA.D75,IRA.D76,IRA.D77,IRA.D"
	set VSELECT=VSELECT_"78,IRA.D79,IRA.D80,IRA.D81,IRA.D82,IRA.D83,IRA.D84"
	set VSELECT=VSELECT_",IRA.D85,IRA.D86,IRA.D87,IRA.D88,IRA.D89,IRA.D94,I"
	set VSELECT=VSELECT_"RA.D95,IRA.D96,IRA.D97,IRA.D98,IRA.D99,IRA.C1,IRA."
	set VSELECT=VSELECT_"C2,IRA.C3,IRA.C4,IRA.C5,IRA.C6,IRA.C7,IRA.C8,IRA.C"
	set VSELECT=VSELECT_"9,IRA.C10,IRA.C11,IRA.C12,IRA.C13,IRA.C14,IRA.C15,"
	set VSELECT=VSELECT_"IRA.C16,IRA.C17,IRA.W1,IRA.W2,IRA.W3,IRA.W4,IRA.W5"
	set VSELECT=VSELECT_",IRA.W6,IRA.W7,IRA.W8,IRA.W9,IRA.W10,IRA.W11,IRA.W"
	set VSELECT=VSELECT_"12,IRA.W13,IRA.W14,IRA.W15,IRA.W16,IRA.W17,IRA.W18"
	set VSELECT=VSELECT_",IRA.W19,IRA.W20,IRA.W21,IRA.W22,IRA.W23,IRA.W24,I"
	set VSELECT=VSELECT_"RA.W25,IRA.W26,IRA.W27,IRA.W28,IRA.W29,IRA.W34,IRA"
	set VSELECT=VSELECT_".W35,IRA.W36,IRA.W37,IRA.W38,IRA.W39,IRA.W43,IRA.W"
	set VSELECT=VSELECT_"44,IRA.W45,IRA.W47,IRA.W48,IRA.W49,IRA.W50,IRA.W51"
	set VSELECT=VSELECT_",IRA.W52,IRA.W53,IRA.W54,IRA.W55,IRA.W56,IRA.W57,I"
	set VSELECT=VSELECT_"RA.W58,IRA.W59,IRA.W60,IRA.W61,IRA.W62,IRA.W63,IRA"
	set VSELECT=VSELECT_".W64,IRA.W65,IRA.W66,IRA.W67,IRA.W68,IRA.W69,IRA.W"
	set VSELECT=VSELECT_"70,IRA.W71,IRA.W72,IRA.W73,IRA.W74,IRA.W75,IRA.W76"
	set VSELECT=VSELECT_",IRA.W77,IRA.W78,IRA.W79,IRA.W80,IRA.W81,IRA.W82,I"
	set VSELECT=VSELECT_"RA.W83,IRA.W84,IRA.W85,IRA.W86,IRA.W87,IRA.W88,IRA"
	set VSELECT=VSELECT_".W89,IRA.W94,IRA.W95,IRA.W96,IRA.W97,IRA.W98,IRA.W"
	set VSELECT=VSELECT_"99"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"IRA",VWHERE,"IRA.ACN,IRA.RPASEQ,IRA.TAXYR","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc3,vovc1
	set vovc2="",vovc3="",vovc1=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc3,vc3,vovc1,vc1
	set vovc2=vc2,vovc3=vc3,vovc1=vc1
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vc100
	type Public String vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138,vc139,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc200
	type Public String vc201
	set vc1=V.piece($C(9),1)			// IRA.TAXYR
	set vc2=V.piece($C(9),2)			// IRA.ACN
	set vc3=V.piece($C(9),3)			// IRA.RPASEQ
	set vc4=V.piece($C(9),4)			// IRA.D1
	set vc5=V.piece($C(9),5)			// IRA.D2
	set vc6=V.piece($C(9),6)			// IRA.D3
	set vc7=V.piece($C(9),7)			// IRA.D4
	set vc8=V.piece($C(9),8)			// IRA.D5
	set vc9=V.piece($C(9),9)			// IRA.D6
	set vc10=V.piece($C(9),10)			// IRA.D7
	set vc11=V.piece($C(9),11)			// IRA.D8
	set vc12=V.piece($C(9),12)			// IRA.D10
	set vc13=V.piece($C(9),13)			// IRA.D11
	set vc14=V.piece($C(9),14)			// IRA.D12
	set vc15=V.piece($C(9),15)			// IRA.D13
	set vc16=V.piece($C(9),16)			// IRA.D14
	set vc17=V.piece($C(9),17)			// IRA.D15
	set vc18=V.piece($C(9),18)			// IRA.D16
	set vc19=V.piece($C(9),19)			// IRA.D17
	set vc20=V.piece($C(9),20)			// IRA.D18
	set vc21=V.piece($C(9),21)			// IRA.D19
	set vc22=V.piece($C(9),22)			// IRA.D20
	set vc23=V.piece($C(9),23)			// IRA.D21
	set vc24=V.piece($C(9),24)			// IRA.D22
	set vc25=V.piece($C(9),25)			// IRA.D23
	set vc26=V.piece($C(9),26)			// IRA.D24
	set vc27=V.piece($C(9),27)			// IRA.D25
	set vc28=V.piece($C(9),28)			// IRA.D26
	set vc29=V.piece($C(9),29)			// IRA.D27
	set vc30=V.piece($C(9),30)			// IRA.D28
	set vc31=V.piece($C(9),31)			// IRA.D29
	set vc32=V.piece($C(9),32)			// IRA.PVMAD
	set vc33=V.piece($C(9),33)			// IRA.MAXLIF
	set vc34=V.piece($C(9),34)			// IRA.MADAMT
	set vc35=V.piece($C(9),35)			// IRA.MADCY
	set vc36=V.piece($C(9),36)			// IRA.D34
	set vc37=V.piece($C(9),37)			// IRA.D35
	set vc38=V.piece($C(9),38)			// IRA.D36
	set vc39=V.piece($C(9),39)			// IRA.D37
	set vc40=V.piece($C(9),40)			// IRA.D38
	set vc41=V.piece($C(9),41)			// IRA.D39
	set vc42=V.piece($C(9),42)			// IRA.NEILDTE
	set vc43=V.piece($C(9),43)			// IRA.RNEI
	set vc44=V.piece($C(9),44)			// IRA.UNEI
	set vc45=V.piece($C(9),45)			// IRA.D43
	set vc46=V.piece($C(9),46)			// IRA.D44
	set vc47=V.piece($C(9),47)			// IRA.D45
	set vc48=V.piece($C(9),48)			// IRA.D46
	set vc49=V.piece($C(9),49)			// IRA.D47
	set vc50=V.piece($C(9),50)			// IRA.D48
	set vc51=V.piece($C(9),51)			// IRA.D49
	set vc52=V.piece($C(9),52)			// IRA.D50
	set vc53=V.piece($C(9),53)			// IRA.D51
	set vc54=V.piece($C(9),54)			// IRA.D52
	set vc55=V.piece($C(9),55)			// IRA.D53
	set vc56=V.piece($C(9),56)			// IRA.D54
	set vc57=V.piece($C(9),57)			// IRA.D55
	set vc58=V.piece($C(9),58)			// IRA.D56
	set vc59=V.piece($C(9),59)			// IRA.D57
	set vc60=V.piece($C(9),60)			// IRA.D58
	set vc61=V.piece($C(9),61)			// IRA.D59
	set vc62=V.piece($C(9),62)			// IRA.D60
	set vc63=V.piece($C(9),63)			// IRA.D61
	set vc64=V.piece($C(9),64)			// IRA.D62
	set vc65=V.piece($C(9),65)			// IRA.D63
	set vc66=V.piece($C(9),66)			// IRA.D64
	set vc67=V.piece($C(9),67)			// IRA.D65
	set vc68=V.piece($C(9),68)			// IRA.D66
	set vc69=V.piece($C(9),69)			// IRA.D67
	set vc70=V.piece($C(9),70)			// IRA.D68
	set vc71=V.piece($C(9),71)			// IRA.D69
	set vc72=V.piece($C(9),72)			// IRA.D70
	set vc73=V.piece($C(9),73)			// IRA.D71
	set vc74=V.piece($C(9),74)			// IRA.D72
	set vc75=V.piece($C(9),75)			// IRA.D73
	set vc76=V.piece($C(9),76)			// IRA.D74
	set vc77=V.piece($C(9),77)			// IRA.D75
	set vc78=V.piece($C(9),78)			// IRA.D76
	set vc79=V.piece($C(9),79)			// IRA.D77
	set vc80=V.piece($C(9),80)			// IRA.D78
	set vc81=V.piece($C(9),81)			// IRA.D79
	set vc82=V.piece($C(9),82)			// IRA.D80
	set vc83=V.piece($C(9),83)			// IRA.D81
	set vc84=V.piece($C(9),84)			// IRA.D82
	set vc85=V.piece($C(9),85)			// IRA.D83
	set vc86=V.piece($C(9),86)			// IRA.D84
	set vc87=V.piece($C(9),87)			// IRA.D85
	set vc88=V.piece($C(9),88)			// IRA.D86
	set vc89=V.piece($C(9),89)			// IRA.D87
	set vc90=V.piece($C(9),90)			// IRA.D88
	set vc91=V.piece($C(9),91)			// IRA.D89
	set vc92=V.piece($C(9),92)			// IRA.D94
	set vc93=V.piece($C(9),93)			// IRA.D95
	set vc94=V.piece($C(9),94)			// IRA.D96
	set vc95=V.piece($C(9),95)			// IRA.D97
	set vc96=V.piece($C(9),96)			// IRA.D98
	set vc97=V.piece($C(9),97)			// IRA.D99
	set vc98=V.piece($C(9),98)			// IRA.C1
	set vc99=V.piece($C(9),99)			// IRA.C2
	set vc100=V.piece($C(9),100)			// IRA.C3
	set vc101=V.piece($C(9),101)			// IRA.C4
	set vc102=V.piece($C(9),102)			// IRA.C5
	set vc103=V.piece($C(9),103)			// IRA.C6
	set vc104=V.piece($C(9),104)			// IRA.C7
	set vc105=V.piece($C(9),105)			// IRA.C8
	set vc106=V.piece($C(9),106)			// IRA.C9
	set vc107=V.piece($C(9),107)			// IRA.C10
	set vc108=V.piece($C(9),108)			// IRA.C11
	set vc109=V.piece($C(9),109)			// IRA.C12
	set vc110=V.piece($C(9),110)			// IRA.C13
	set vc111=V.piece($C(9),111)			// IRA.C14
	set vc112=V.piece($C(9),112)			// IRA.C15
	set vc113=V.piece($C(9),113)			// IRA.C16
	set vc114=V.piece($C(9),114)			// IRA.C17
	set vc115=V.piece($C(9),115)			// IRA.W1
	set vc116=V.piece($C(9),116)			// IRA.W2
	set vc117=V.piece($C(9),117)			// IRA.W3
	set vc118=V.piece($C(9),118)			// IRA.W4
	set vc119=V.piece($C(9),119)			// IRA.W5
	set vc120=V.piece($C(9),120)			// IRA.W6
	set vc121=V.piece($C(9),121)			// IRA.W7
	set vc122=V.piece($C(9),122)			// IRA.W8
	set vc123=V.piece($C(9),123)			// IRA.W9
	set vc124=V.piece($C(9),124)			// IRA.W10
	set vc125=V.piece($C(9),125)			// IRA.W11
	set vc126=V.piece($C(9),126)			// IRA.W12
	set vc127=V.piece($C(9),127)			// IRA.W13
	set vc128=V.piece($C(9),128)			// IRA.W14
	set vc129=V.piece($C(9),129)			// IRA.W15
	set vc130=V.piece($C(9),130)			// IRA.W16
	set vc131=V.piece($C(9),131)			// IRA.W17
	set vc132=V.piece($C(9),132)			// IRA.W18
	set vc133=V.piece($C(9),133)			// IRA.W19
	set vc134=V.piece($C(9),134)			// IRA.W20
	set vc135=V.piece($C(9),135)			// IRA.W21
	set vc136=V.piece($C(9),136)			// IRA.W22
	set vc137=V.piece($C(9),137)			// IRA.W23
	set vc138=V.piece($C(9),138)			// IRA.W24
	set vc139=V.piece($C(9),139)			// IRA.W25
	set vc140=V.piece($C(9),140)			// IRA.W26
	set vc141=V.piece($C(9),141)			// IRA.W27
	set vc142=V.piece($C(9),142)			// IRA.W28
	set vc143=V.piece($C(9),143)			// IRA.W29
	set vc144=V.piece($C(9),144)			// IRA.W34
	set vc145=V.piece($C(9),145)			// IRA.W35
	set vc146=V.piece($C(9),146)			// IRA.W36
	set vc147=V.piece($C(9),147)			// IRA.W37
	set vc148=V.piece($C(9),148)			// IRA.W38
	set vc149=V.piece($C(9),149)			// IRA.W39
	set vc150=V.piece($C(9),150)			// IRA.W43
	set vc151=V.piece($C(9),151)			// IRA.W44
	set vc152=V.piece($C(9),152)			// IRA.W45
	set vc153=V.piece($C(9),153)			// IRA.W47
	set vc154=V.piece($C(9),154)			// IRA.W48
	set vc155=V.piece($C(9),155)			// IRA.W49
	set vc156=V.piece($C(9),156)			// IRA.W50
	set vc157=V.piece($C(9),157)			// IRA.W51
	set vc158=V.piece($C(9),158)			// IRA.W52
	set vc159=V.piece($C(9),159)			// IRA.W53
	set vc160=V.piece($C(9),160)			// IRA.W54
	set vc161=V.piece($C(9),161)			// IRA.W55
	set vc162=V.piece($C(9),162)			// IRA.W56
	set vc163=V.piece($C(9),163)			// IRA.W57
	set vc164=V.piece($C(9),164)			// IRA.W58
	set vc165=V.piece($C(9),165)			// IRA.W59
	set vc166=V.piece($C(9),166)			// IRA.W60
	set vc167=V.piece($C(9),167)			// IRA.W61
	set vc168=V.piece($C(9),168)			// IRA.W62
	set vc169=V.piece($C(9),169)			// IRA.W63
	set vc170=V.piece($C(9),170)			// IRA.W64
	set vc171=V.piece($C(9),171)			// IRA.W65
	set vc172=V.piece($C(9),172)			// IRA.W66
	set vc173=V.piece($C(9),173)			// IRA.W67
	set vc174=V.piece($C(9),174)			// IRA.W68
	set vc175=V.piece($C(9),175)			// IRA.W69
	set vc176=V.piece($C(9),176)			// IRA.W70
	set vc177=V.piece($C(9),177)			// IRA.W71
	set vc178=V.piece($C(9),178)			// IRA.W72
	set vc179=V.piece($C(9),179)			// IRA.W73
	set vc180=V.piece($C(9),180)			// IRA.W74
	set vc181=V.piece($C(9),181)			// IRA.W75
	set vc182=V.piece($C(9),182)			// IRA.W76
	set vc183=V.piece($C(9),183)			// IRA.W77
	set vc184=V.piece($C(9),184)			// IRA.W78
	set vc185=V.piece($C(9),185)			// IRA.W79
	set vc186=V.piece($C(9),186)			// IRA.W80
	set vc187=V.piece($C(9),187)			// IRA.W81
	set vc188=V.piece($C(9),188)			// IRA.W82
	set vc189=V.piece($C(9),189)			// IRA.W83
	set vc190=V.piece($C(9),190)			// IRA.W84
	set vc191=V.piece($C(9),191)			// IRA.W85
	set vc192=V.piece($C(9),192)			// IRA.W86
	set vc193=V.piece($C(9),193)			// IRA.W87
	set vc194=V.piece($C(9),194)			// IRA.W88
	set vc195=V.piece($C(9),195)			// IRA.W89
	set vc196=V.piece($C(9),196)			// IRA.W94
	set vc197=V.piece($C(9),197)			// IRA.W95
	set vc198=V.piece($C(9),198)			// IRA.W96
	set vc199=V.piece($C(9),199)			// IRA.W97
	set vc200=V.piece($C(9),200)			// IRA.W98
	set vc201=V.piece($C(9),201)			// IRA.W99
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138,vc139,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc200,vc201
 // Now loop through the CIF file and check all accounts

 type public Number ACN,ANT,CALC1,CURR1,PIECE1,RPASEQ,TOTERR,TYP,U(),V1,V2
 type public Date BEG,END
 type public String GRP,RID,TYPE1()

 type String ACT(),CIRA(),LOAD(),VAR1()
 type Date BOTYR,EOTYR
 type Number CID,I,IRATYP,NOW,TAXYR,X

 set TAXYR=vc1
 
 // Set up BEG and END dates to loop through history
 set BOTYR=$$BOTY^SCADAT(%SystemDate,1) 
 set EOTYR=$$EOTY^SCADAT(%SystemDate,1)

 set BEG=(((BOTYR.toString("MM/DD/"))_(TAXYR-1)).toDate())-1
 set END=(((EOTYR.toString("MM/DD/"))_TAXYR).toDate())+1

 for I=1:1:30 set (TYPE1(I),PIECE1(I),CURR1(I),CALC1(I))=""
 for I=0,1,2  set LOAD(TAXYR,I)=""

 set ACN=vc2
 set RPASEQ=vc3

 type ResultSet rs=Db.select("CID","RELCIF","ACN=:ACN")
 
 if rs.isEmpty() set ACT(1)=$$^MSG(6396) quit

 while rs.next()  do {

	type RecordIRATYPE iratype=Db.getRecord("IRATYPE","ACN=:ACN,RPASEQ=:RPASEQ")
	set IRATYP=iratype.IRATYP
	set CID=rs.getCol("CID")
	type RecordDEP dep=Db.getRecord("DEP","CID=:CID",1)
	if ('dep.getMode())!(dep.ACN'=ACN)!(dep.IRA'=IRATYP)!(dep.RPASEQ'=RPASEQ) quit

	set GRP=dep.grp
	set TYP=dep.type
	set ACT(CID)=$J("",14-CID.length())_CID_"  "_$J("",10-GRP.length())_GRP_" "_$J("",10-TYP.length())_TYP

	type ResultSet rs1=Db.select("TJD,EFD,TAMT,ITC1,TSO,ETC,ITC6,ITC12","HIST","CID=:CID AND ((TJD>:BEG AND TJD<:END) OR (EFD>:BEG AND EFD<:END))","TJD")

	if rs1.isEmpty() set ACT(CID)=ACT(CID)_"|"_$$^MSG(6398,TAXYR) quit

	set ACT(CID)=ACT(CID)_" "_BEG

	while rs1.next() do {

		type Date HISTDATE
		type Number AMT,ETC,ITC,K,ZD
		type String TAMT,TSO,UTSO()

		set HISTDATE=rs1.getCol("TJD")
		if '(rs1.getCol("EFD").isNull()) set HISTDATE=rs1.getCol("EFD")
		if (HISTDATE<BEG) ! (HISTDATE>END) quit

		set TAMT=rs1.getCol("TAMT")
		if TAMT["#" set AMT=TAMT.piece("#",2)+TAMT.piece("#",3)-TAMT.piece("#",4)
		else  set AMT=+TAMT

		set ITC=rs1.getCol("ITC1")
		set TSO=rs1.getCol("TSO")
		set ETC=rs1.getCol("ETC")
		
		do OUT^UTSO(.UTSO,.TSO)

        	if ITC=0 set TSO=$G(UTSO("IRAD"))
		if ITC=1 set TSO=$G(UTSO("IRAC"))
		if (TSO.isNull()) !('AMT) ! ('(AMT-TAMT.piece("#",3))) ! ('(U(ITC,TSO).exists())) ! (rs1.getCol("ITC6")) ! (rs1.getCol("ITC12")) quit

		set K=U(ITC,TSO)
		set ZD=HISTDATE.toString("YEAR")

		if (LOAD(ZD,"").order().isNull()) for I=0,1,2  set LOAD(ZD,I)=""

		set LOAD(ZD,ITC).piece("|",K)=LOAD(ZD,ITC).piece("|",K)+AMT
		set AMT=TAMT.piece("#",3)
		if AMT set X=CUVAR.iraint,K=U(1,X),LOAD(ZD,1).piece("|",K)=LOAD(ZD,1).piece("|",K)+AMT
		set AMT=TAMT.piece("#",4)
		if AMT set X=CUVAR.irapen,K=U(0,X),LOAD(ZD,0).piece("|",K)=LOAD(ZD,0).piece("|",K)+AMT
		set AMT=TAMT.piece("#",5)
		if AMT set K=U(ITC,TSO),LOAD(ZD,2).piece("|",K)=LOAD(ZD,2).piece("|",K)+AMT
		}
	}
	
 // VERIFY THAT CALCULATED VALUES MATCH with IRA table data.
        
 set NOW=1

 // IF NO LOAD ARRAY IS ENCOUNTERED
 if (LOAD(TAXYR,"").order().isNull()) set ACT(1)=$$^MSG(6396,TAXYR) quit

 if LOAD(TAXYR,0).exists() do {

	set CIRA(TAXYR,0)=vc4_"|"_vc5
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc6_"|"_vc7
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc8_"|"_vc9
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc10_"|"_vc11
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_"|"_vc12
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc13_"|"_vc14
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc15_"|"_vc16
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc17_"|"_vc18
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc19_"|"_vc20
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc21_"|"_vc22
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc23_"|"_vc24
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc25_"|"_vc26
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc27_"|"_vc28
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc29_"|"_vc30
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc31_"|"_vc32
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc33_"|"_vc34
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc35_"|"_vc36
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc37_"|"_vc38
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc39_"|"_vc40
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc41_"|"_vc42
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc43_"|"_vc44
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc45_"|"_vc46
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc47_"|"_vc48
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc49_"|"_vc50
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc51_"|"_vc52
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc53_"|"_vc54
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc55_"|"_vc56
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc57_"|"_vc58
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc59_"|"_vc60
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc61_"|"_vc62
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc63_"|"_vc64
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc65_"|"_vc66
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc67_"|"_vc68
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc69_"|"_vc70
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc71_"|"_vc72
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc73_"|"_vc74
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc75_"|"_vc76
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc77_"|"_vc78
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc79_"|"_vc80
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc81_"|"_vc82
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc83_"|"_vc84
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc85_"|"_vc86
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc87_"|"_vc88
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc89_"|"_vc90
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc91_"|"_"|"_"|"_"|"_"|"_vc92
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc93_"|"_vc94
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc95_"|"_vc96
	set CIRA(TAXYR,0)=CIRA(TAXYR,0)_"|"_vc97

	// VERIFY CONTENTS OF ARRAY
	 for I=1:1:29,34:1:39,43:1:89,94:1:99 do {

		set V2=+(LOAD(TAXYR,0).piece("|",I))
		set V1=+(CIRA(TAXYR,0).piece("|",I))
		if V1'=V2 set VAR1(NOW)="D|"_I_"|"_V1_"|"_V2,NOW=NOW+1
		}
	}

 if LOAD(TAXYR,1).exists() do {

	set CIRA(TAXYR,1)=vc98_"|"_vc99
	set CIRA(TAXYR,1)=CIRA(TAXYR,1)_"|"_vc100_"|"_vc101
	set CIRA(TAXYR,1)=CIRA(TAXYR,1)_"|"_vc102_"|"_vc103
	set CIRA(TAXYR,1)=CIRA(TAXYR,1)_"|"_vc104_"|"_vc105
	set CIRA(TAXYR,1)=CIRA(TAXYR,1)_"|"_vc106_"|"_vc107
	set CIRA(TAXYR,1)=CIRA(TAXYR,1)_"|"_vc108_"|"_vc109
	set CIRA(TAXYR,1)=CIRA(TAXYR,1)_"|"_vc110_"|"_vc111
	set CIRA(TAXYR,1)=CIRA(TAXYR,1)_"|"_vc112_"|"_vc113
	set CIRA(TAXYR,1)=CIRA(TAXYR,1)_"|"_vc114

	// VERIFY CONTENTS OF ARRAY
	for I=1:1:16 do {
		set V2=+(LOAD(TAXYR,1).piece("|",I))
		set V1=+(CIRA(TAXYR,1).piece("|",I))
		if V1'=V2 set VAR1(NOW)="C|"_I_"|"_V1_"|"_V2,NOW=NOW+1
		}
	}

 if LOAD(TAXYR,2).exists() do {

	set CIRA(TAXYR,2)=vc115_"|"_vc116
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc117_"|"_vc118
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc119_"|"_vc120
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc121_"|"_vc122
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc123_"|"_vc124
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc125_"|"_vc126
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc127_"|"_vc128
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc129_"|"_vc130
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc131_"|"_vc132
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc133_"|"_vc134
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc135_"|"_vc136
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc137_"|"_vc138
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc139_"|"_vc140
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc141_"|"_vc142
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc143_"|"_"|"_"|"_"|"_"|"_vc144
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc145_"|"_vc146
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc147_"|"_vc148
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc149_"|"_"|"_"|"
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc150_"|"_vc151
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc152_"|"
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc153_"|"_vc154
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc155_"|"_vc156
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc157_"|"_vc158
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc159_"|"_vc160
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc161_"|"_vc162
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc163_"|"_vc164
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc165_"|"_vc166
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc167_"|"_vc168
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc169_"|"_vc170
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc171_"|"_vc172
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc173_"|"_vc174
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc175_"|"_vc176
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc177_"|"_vc178
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc179_"|"_vc180
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc181_"|"_vc182
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc183_"|"_vc184
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc185_"|"_vc186
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc187_"|"_vc188
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc189_"|"_vc190
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc191_"|"_vc192
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc193_"|"_vc194
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc195_"|"_"|"_"|"_"|"_"|"_vc196
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc197_"|"_vc198
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc199_"|"_vc200
	set CIRA(TAXYR,2)=CIRA(TAXYR,2)_"|"_vc201

	// VERIFY CONTENTS OF ARRAY
	 for I=1:1:29,34:1:39,43:1:89,94:1:99 do {
		set V2=+(LOAD(TAXYR,2).piece("|",I))
		set V1=+(CIRA(TAXYR,2).piece("|",I))
		if V1'=V2 set VAR1(NOW)="W|"_I_"|"_V1_"|"_V2,NOW=NOW+1
		}
	}

 if (VAR1("").order().isNull()) quit
 else  do {
	
	type Number NUM

	// SET VAR1 TO PRINT VARIED RESULTS THE VARIED RESULTS
	for NUM=1:1:NOW-1 do {

		// set up screen variables
		set TYPE1(NUM)=VAR1(NUM).piece("|",1)
		set PIECE1(NUM)=VAR1(NUM).piece("|",2)
		set CURR1(NUM)=VAR1(NUM).piece("|",3)
		set CALC1(NUM)=VAR1(NUM).piece("|",4)
		set TOTERR=TOTERR+1

		// If anticipated mode is 0, then reset the IRA file
		if ANT=0 do {

			type RecordIRA ira=Db.getRecord("IRA","ACN=:ACN,RPASEQ=:RPASEQ,TAXYR=:TAXYR")
			type Number OPT
			if TYPE1(NUM)="D" do {

				set OPT=0
				if PIECE1(NUM)=1 set ira.d1=CALC1(NUM)
				if PIECE1(NUM)=2 set ira.d2=CALC1(NUM)
				if PIECE1(NUM)=3 set ira.d3=CALC1(NUM)
				if PIECE1(NUM)=4 set ira.d4=CALC1(NUM)
				if PIECE1(NUM)=5 set ira.d5=CALC1(NUM)
				if PIECE1(NUM)=6 set ira.d6=CALC1(NUM)
				if PIECE1(NUM)=7 set ira.d7=CALC1(NUM)
				if PIECE1(NUM)=8 set ira.d8=CALC1(NUM)
				if PIECE1(NUM)=10 set ira.d10=CALC1(NUM)
			
				if PIECE1(NUM)=11 set ira.d11=CALC1(NUM)
				if PIECE1(NUM)=12 set ira.d12=CALC1(NUM)
				if PIECE1(NUM)=13 set ira.d13=CALC1(NUM)
				if PIECE1(NUM)=14 set ira.d14=CALC1(NUM)
				if PIECE1(NUM)=15 set ira.d15=CALC1(NUM)
				if PIECE1(NUM)=16 set ira.d16=CALC1(NUM)
				if PIECE1(NUM)=17 set ira.d17=CALC1(NUM)
				if PIECE1(NUM)=18 set ira.d18=CALC1(NUM)
				if PIECE1(NUM)=19 set ira.d19=CALC1(NUM)
				if PIECE1(NUM)=20 set ira.d20=CALC1(NUM)
			
				if PIECE1(NUM)=21 set ira.d21=CALC1(NUM)
				if PIECE1(NUM)=22 set ira.d22=CALC1(NUM)
				if PIECE1(NUM)=23 set ira.d23=CALC1(NUM)
				if PIECE1(NUM)=24 set ira.d24=CALC1(NUM)
				if PIECE1(NUM)=25 set ira.d25=CALC1(NUM)
				if PIECE1(NUM)=26 set ira.d26=CALC1(NUM)
				if PIECE1(NUM)=27 set ira.d27=CALC1(NUM)
				if PIECE1(NUM)=28 set ira.d28=CALC1(NUM)
				if PIECE1(NUM)=29 set ira.d29=CALC1(NUM)
			
				if PIECE1(NUM)=30 set ira.pvmad=CALC1(NUM)
				if PIECE1(NUM)=31 set ira.maxlif=CALC1(NUM)
				if PIECE1(NUM)=32 set ira.madamt=CALC1(NUM)
				if PIECE1(NUM)=33 set ira.madcy=CALC1(NUM)
				if PIECE1(NUM)=34 set ira.d34=CALC1(NUM)
				if PIECE1(NUM)=35 set ira.d35=CALC1(NUM)
				if PIECE1(NUM)=36 set ira.d36=CALC1(NUM)
				if PIECE1(NUM)=37 set ira.d37=CALC1(NUM)
				if PIECE1(NUM)=38 set ira.d38=CALC1(NUM)
				if PIECE1(NUM)=39 set ira.d39=CALC1(NUM)
			
				if PIECE1(NUM)=40 set ira.neildte=CALC1(NUM)
				if PIECE1(NUM)=41 set ira.rnei=CALC1(NUM)
				if PIECE1(NUM)=42 set ira.unei=CALC1(NUM)
				if PIECE1(NUM)=43 set ira.d43=CALC1(NUM)
				if PIECE1(NUM)=44 set ira.d44=CALC1(NUM)
				if PIECE1(NUM)=45 set ira.d45=CALC1(NUM)
				if PIECE1(NUM)=46 set ira.d46=CALC1(NUM)
				if PIECE1(NUM)=47 set ira.d47=CALC1(NUM)
				if PIECE1(NUM)=48 set ira.d48=CALC1(NUM)
				if PIECE1(NUM)=49 set ira.d49=CALC1(NUM)
			
				if PIECE1(NUM)=50 set ira.d50=CALC1(NUM)
				if PIECE1(NUM)=51 set ira.d51=CALC1(NUM)
				if PIECE1(NUM)=52 set ira.d52=CALC1(NUM)
				if PIECE1(NUM)=53 set ira.d53=CALC1(NUM)
				if PIECE1(NUM)=54 set ira.d54=CALC1(NUM)
				if PIECE1(NUM)=55 set ira.d55=CALC1(NUM)
				if PIECE1(NUM)=56 set ira.d56=CALC1(NUM)
				if PIECE1(NUM)=57 set ira.d57=CALC1(NUM)
				if PIECE1(NUM)=58 set ira.d58=CALC1(NUM)
				if PIECE1(NUM)=59 set ira.d59=CALC1(NUM)
			
				if PIECE1(NUM)=60 set ira.d60=CALC1(NUM)
				if PIECE1(NUM)=61 set ira.d61=CALC1(NUM)
				if PIECE1(NUM)=62 set ira.d62=CALC1(NUM)
				if PIECE1(NUM)=63 set ira.d63=CALC1(NUM)
				if PIECE1(NUM)=64 set ira.d64=CALC1(NUM)
				if PIECE1(NUM)=65 set ira.d65=CALC1(NUM)
				if PIECE1(NUM)=66 set ira.d66=CALC1(NUM)
				if PIECE1(NUM)=67 set ira.d67=CALC1(NUM)
				if PIECE1(NUM)=68 set ira.d68=CALC1(NUM)
				if PIECE1(NUM)=69 set ira.d69=CALC1(NUM)
			
				if PIECE1(NUM)=70 set ira.d70=CALC1(NUM)
				if PIECE1(NUM)=71 set ira.d71=CALC1(NUM)
				if PIECE1(NUM)=72 set ira.d72=CALC1(NUM)
				if PIECE1(NUM)=73 set ira.d73=CALC1(NUM)
				if PIECE1(NUM)=74 set ira.d74=CALC1(NUM)
				if PIECE1(NUM)=75 set ira.d75=CALC1(NUM)
				if PIECE1(NUM)=76 set ira.d76=CALC1(NUM)
				if PIECE1(NUM)=77 set ira.d77=CALC1(NUM)
				if PIECE1(NUM)=78 set ira.d78=CALC1(NUM)
				if PIECE1(NUM)=79 set ira.d79=CALC1(NUM)
			
				if PIECE1(NUM)=80 set ira.d80=CALC1(NUM)
				if PIECE1(NUM)=81 set ira.d81=CALC1(NUM)
				if PIECE1(NUM)=82 set ira.d82=CALC1(NUM)
				if PIECE1(NUM)=83 set ira.d83=CALC1(NUM)
				if PIECE1(NUM)=84 set ira.d84=CALC1(NUM)
				if PIECE1(NUM)=85 set ira.d85=CALC1(NUM)
				if PIECE1(NUM)=86 set ira.d86=CALC1(NUM)
				if PIECE1(NUM)=87 set ira.d87=CALC1(NUM)
				if PIECE1(NUM)=88 set ira.d88=CALC1(NUM)
				if PIECE1(NUM)=89 set ira.d89=CALC1(NUM)
			
				if PIECE1(NUM)=94 set ira.d94=CALC1(NUM)
				if PIECE1(NUM)=95 set ira.d95=CALC1(NUM)
				if PIECE1(NUM)=96 set ira.d96=CALC1(NUM)
				if PIECE1(NUM)=97 set ira.d97=CALC1(NUM)
				if PIECE1(NUM)=98 set ira.d98=CALC1(NUM)
				if PIECE1(NUM)=99 set ira.d99=CALC1(NUM)
				}

			if TYPE1(NUM)="C" do {

				set OPT=1
				if PIECE1(NUM)=1 set ira.c1=CALC1(NUM)
				if PIECE1(NUM)=2 set ira.c2=CALC1(NUM)
				if PIECE1(NUM)=3 set ira.c3=CALC1(NUM)
				if PIECE1(NUM)=4 set ira.c4=CALC1(NUM)
				if PIECE1(NUM)=5 set ira.c5=CALC1(NUM)
				if PIECE1(NUM)=6 set ira.c6=CALC1(NUM)
				if PIECE1(NUM)=7 set ira.c7=CALC1(NUM)
				if PIECE1(NUM)=8 set ira.c8=CALC1(NUM)
				if PIECE1(NUM)=9 set ira.c9=CALC1(NUM)
				if PIECE1(NUM)=10 set ira.c10=CALC1(NUM)
				if PIECE1(NUM)=11 set ira.c11=CALC1(NUM)
				if PIECE1(NUM)=12 set ira.c12=CALC1(NUM)
				if PIECE1(NUM)=13 set ira.c13=CALC1(NUM)
				if PIECE1(NUM)=14 set ira.c14=CALC1(NUM)
				if PIECE1(NUM)=15 set ira.c15=CALC1(NUM)
				if PIECE1(NUM)=16 set ira.c16=CALC1(NUM)
				if PIECE1(NUM)=17 set ira.c17=CALC1(NUM)
				}

			if TYPE1(NUM)="W" do {

				set OPT=2
				if PIECE1(NUM)=1 set ira.w1=CALC1(NUM)
				if PIECE1(NUM)=2 set ira.w2=CALC1(NUM)
				if PIECE1(NUM)=3 set ira.w3=CALC1(NUM)
				if PIECE1(NUM)=4 set ira.w4=CALC1(NUM)
				if PIECE1(NUM)=5 set ira.w5=CALC1(NUM)
				if PIECE1(NUM)=6 set ira.w6=CALC1(NUM)
				if PIECE1(NUM)=7 set ira.w7=CALC1(NUM)
				if PIECE1(NUM)=8 set ira.w8=CALC1(NUM)
				if PIECE1(NUM)=9 set ira.w9=CALC1(NUM)
				if PIECE1(NUM)=10 set ira.w10=CALC1(NUM)
			
				if PIECE1(NUM)=11 set ira.w11=CALC1(NUM)
				if PIECE1(NUM)=12 set ira.w12=CALC1(NUM)
				if PIECE1(NUM)=13 set ira.w13=CALC1(NUM)
				if PIECE1(NUM)=14 set ira.w14=CALC1(NUM)
				if PIECE1(NUM)=15 set ira.w15=CALC1(NUM)
				if PIECE1(NUM)=16 set ira.w16=CALC1(NUM)
				if PIECE1(NUM)=17 set ira.w17=CALC1(NUM)
				if PIECE1(NUM)=18 set ira.w18=CALC1(NUM)
				if PIECE1(NUM)=19 set ira.w19=CALC1(NUM)
				if PIECE1(NUM)=20 set ira.w20=CALC1(NUM)
			
				if PIECE1(NUM)=21 set ira.w21=CALC1(NUM)
				if PIECE1(NUM)=22 set ira.w22=CALC1(NUM)
				if PIECE1(NUM)=23 set ira.w23=CALC1(NUM)
				if PIECE1(NUM)=24 set ira.w24=CALC1(NUM)
				if PIECE1(NUM)=25 set ira.w25=CALC1(NUM)
				if PIECE1(NUM)=26 set ira.w26=CALC1(NUM)
				if PIECE1(NUM)=27 set ira.w27=CALC1(NUM)
				if PIECE1(NUM)=28 set ira.w28=CALC1(NUM)
				if PIECE1(NUM)=29 set ira.w29=CALC1(NUM)
			
				if PIECE1(NUM)=34 set ira.w34=CALC1(NUM)
				if PIECE1(NUM)=35 set ira.w35=CALC1(NUM)
				if PIECE1(NUM)=36 set ira.w36=CALC1(NUM)
				if PIECE1(NUM)=37 set ira.w37=CALC1(NUM)
				if PIECE1(NUM)=38 set ira.w38=CALC1(NUM)
				if PIECE1(NUM)=39 set ira.w39=CALC1(NUM)
			
				if PIECE1(NUM)=43 set ira.w43=CALC1(NUM)
				if PIECE1(NUM)=44 set ira.w44=CALC1(NUM)
				if PIECE1(NUM)=45 set ira.w45=CALC1(NUM)
				if PIECE1(NUM)=47 set ira.w47=CALC1(NUM)
				if PIECE1(NUM)=48 set ira.w48=CALC1(NUM)
				if PIECE1(NUM)=49 set ira.w49=CALC1(NUM)
			
				if PIECE1(NUM)=50 set ira.w50=CALC1(NUM)
				if PIECE1(NUM)=51 set ira.w51=CALC1(NUM)
				if PIECE1(NUM)=52 set ira.w52=CALC1(NUM)
				if PIECE1(NUM)=53 set ira.w53=CALC1(NUM)
				if PIECE1(NUM)=54 set ira.w54=CALC1(NUM)
				if PIECE1(NUM)=55 set ira.w55=CALC1(NUM)
				if PIECE1(NUM)=56 set ira.w56=CALC1(NUM)
				if PIECE1(NUM)=57 set ira.w57=CALC1(NUM)
				if PIECE1(NUM)=58 set ira.w58=CALC1(NUM)
				if PIECE1(NUM)=59 set ira.w59=CALC1(NUM)
			
				if PIECE1(NUM)=60 set ira.w60=CALC1(NUM)
				if PIECE1(NUM)=61 set ira.w61=CALC1(NUM)
				if PIECE1(NUM)=62 set ira.w62=CALC1(NUM)
				if PIECE1(NUM)=63 set ira.w63=CALC1(NUM)
				if PIECE1(NUM)=64 set ira.w64=CALC1(NUM)
				if PIECE1(NUM)=65 set ira.w65=CALC1(NUM)
				if PIECE1(NUM)=66 set ira.w66=CALC1(NUM)
				if PIECE1(NUM)=67 set ira.w67=CALC1(NUM)
				if PIECE1(NUM)=68 set ira.w68=CALC1(NUM)
				if PIECE1(NUM)=69 set ira.w69=CALC1(NUM)
			
				if PIECE1(NUM)=70 set ira.w70=CALC1(NUM)
				if PIECE1(NUM)=71 set ira.w71=CALC1(NUM)
				if PIECE1(NUM)=72 set ira.w72=CALC1(NUM)
				if PIECE1(NUM)=73 set ira.w73=CALC1(NUM)
				if PIECE1(NUM)=74 set ira.w74=CALC1(NUM)
				if PIECE1(NUM)=75 set ira.w75=CALC1(NUM)
				if PIECE1(NUM)=76 set ira.w76=CALC1(NUM)
				if PIECE1(NUM)=77 set ira.w77=CALC1(NUM)
				if PIECE1(NUM)=78 set ira.w78=CALC1(NUM)
				if PIECE1(NUM)=79 set ira.w79=CALC1(NUM)
			
				if PIECE1(NUM)=80 set ira.w80=CALC1(NUM)
				if PIECE1(NUM)=81 set ira.w81=CALC1(NUM)
				if PIECE1(NUM)=82 set ira.w82=CALC1(NUM)
				if PIECE1(NUM)=83 set ira.w83=CALC1(NUM)
				if PIECE1(NUM)=84 set ira.w84=CALC1(NUM)
				if PIECE1(NUM)=85 set ira.w85=CALC1(NUM)
				if PIECE1(NUM)=86 set ira.w86=CALC1(NUM)
				if PIECE1(NUM)=87 set ira.w87=CALC1(NUM)
				if PIECE1(NUM)=88 set ira.w88=CALC1(NUM)
				if PIECE1(NUM)=89 set ira.w89=CALC1(NUM)
			
				if PIECE1(NUM)=94 set ira.w94=CALC1(NUM)
				if PIECE1(NUM)=95 set ira.w95=CALC1(NUM)
				if PIECE1(NUM)=96 set ira.w96=CALC1(NUM)
				if PIECE1(NUM)=97 set ira.w97=CALC1(NUM)
				if PIECE1(NUM)=98 set ira.w98=CALC1(NUM)
				if PIECE1(NUM)=99 set ira.w99=CALC1(NUM)
				}
				do ira.bypassSave()
			}
		}
	}

	quit

VPREAQ	// Pre-processor (after query)

 type public Number TOTERR,U()

 set TOTERR=0

 type ResultSet rs=Db.select("KEY,RSN","UTBLIRACON")
 while rs.next() set U(1,rs.getCol("KEY"))=rs.getCol("RSN")

 type ResultSet rs1=Db.select("KEY,RSN","UTBLIRADIS")
 while rs1.next() set U(0,rs1.getCol("KEY"))=rs1.getCol("RSN")

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc2,vovc2,vc3,vovc3,vc1,vovc1
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc2'=+vc2) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(+vovc3'=+vc3) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL3	// Detail
	type public String %TIM,ACN,ANT,BEG,CALC1,CURR1,END,GRP,IOSL,PIECE1,RID,RPASEQ,TOTERR,TYP,TYPE1(),U(),V,V1,V2,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138,vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163
	type public String vc164,vc165,vc166,vc167,vc168,vc169,vc17,vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72
	type public String vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+15>IOSL do VHDG0 quit:VFMQ

	set V=vc2,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,12) set VL="    "_V
	set V=vc3,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,6)
	set VL=VL_$J("",22-VL.length())_V		// [SYSDEV,IRA]RPASEQ
	set V=vc1,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,4)
	set VL=VL_$J("",34-VL.length())_V		// [SYSDEV,IRA]TAXYR
	set VL=VL_$J("",47-VL.length())_$E(TYPE1(1),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(1),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(1),1,10)
	do VP4 quit:VFMQ!verror.get()  set V=$E(CALC1(1),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(2),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(2),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(2),1,10)
	do VP5 quit:VFMQ!verror.get()  set V=$E(CALC1(2),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(3),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(3),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(3),1,10)
	do VP6 quit:VFMQ!verror.get()  set V=$E(CALC1(3),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(4),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(4),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(4),1,10)
	do VP7 quit:VFMQ!verror.get()  set V=$E(CALC1(4),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(5),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(5),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(5),1,10)
	do VP8 quit:VFMQ!verror.get()  set V=$E(CALC1(5),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(6),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(6),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(6),1,10)
	do VP9 quit:VFMQ!verror.get()  set V=$E(CALC1(6),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(7),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(7),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(7),1,10)
	do VP10 quit:VFMQ!verror.get()  set V=$E(CALC1(7),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(8),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(8),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(8),1,10)
	do VP11 quit:VFMQ!verror.get()  set V=$E(CALC1(8),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(9),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(9),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(9),1,10)
	do VP12 quit:VFMQ!verror.get()  set V=$E(CALC1(9),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(10),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(10),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(10),1,10)
	do VP13 quit:VFMQ!verror.get()  set V=$E(CALC1(10),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(11),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(11),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(11),1,10)
	do VP14 quit:VFMQ!verror.get()  set V=$E(CALC1(11),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(12),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(12),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(12),1,10)
	do VP15 quit:VFMQ!verror.get()  set V=$E(CALC1(12),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(13),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(13),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(13),1,10)
	do VP16 quit:VFMQ!verror.get()  set V=$E(CALC1(13),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(14),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(14),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(14),1,10)
	do VP17 quit:VFMQ!verror.get()  set V=$E(CALC1(14),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                               "_$E(TYPE1(15),1,1)
	set VL=VL_$J("",55-VL.length())_$E(PIECE1(15),1,2)
	set VL=VL_$J("",67-VL.length())_$E(CURR1(15),1,10)
	do VP18 quit:VFMQ!verror.get()  set V=$E(CALC1(15),1,10)
	set VL=VL_$J("",86-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ACN,ANT,BEG,CALC1,CONAM,CURR1,END,GRP,PIECE1,RID,RN,RPASEQ,TOTERR,TYP,TYPE1(),U(),V1,V2,VL,vc1,vc10,vc100,vc101,vc102,vc103,vc104,vc105,vc106,vc107,vc108,vc109,vc11,vc110,vc111,vc112,vc113,vc114,vc115,vc116,vc117,vc118,vc119,vc12,vc120,vc121,vc122,vc123,vc124,vc125,vc126,vc127,vc128,vc129,vc13,vc130,vc131,vc132,vc133,vc134,vc135,vc136,vc137,vc138,vc139,vc14,vc140,vc141,vc142,vc143,vc144,vc145,vc146,vc147,vc148,vc149,vc15,vc150,vc151,vc152,vc153,vc154,vc155,vc156,vc157,vc158,vc159,vc16,vc160,vc161,vc162,vc163,vc164,vc165,vc166,vc167,vc168,vc169,vc17
	type public String vc170,vc171,vc172,vc173,vc174,vc175,vc176,vc177,vc178,vc179,vc18,vc180,vc181,vc182,vc183,vc184,vc185,vc186,vc187,vc188,vc189,vc19,vc190,vc191,vc192,vc193,vc194,vc195,vc196,vc197,vc198,vc199,vc2,vc20,vc200,vc201,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79
	type public String vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,40)
	set VL=VL_$J("",49-VL.length())_"Run Date:"
	set VL=VL_$J("",59-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",51-VL.length())_"System:"
	set VL=VL_$J("",59-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="    "_"Customer           RSP         Tax                        Differences"
	do VOM
	set VL="     "_"Number            SEQ        Year       Type    Piece       Current Value      Calculated Value"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,ACN,ANT,BEG,CALC1,CURR1,END,GRP,PIECE1,RID,RPASEQ,TOTERR,TYP,TYPE1(),U(),V1,V2,VPN,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="       "_$E(TOTERR,1,10)
	set VL=VL_$J("",21-VL.length())_": TOTAL DIFFERENCES FOUND"
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,IRA]ACN

 type public String TYPE1(),V,VL

 if TYPE1(1).isNull() set V="" set VL=""
	quit

VP2	// Column pre-processor - [SYSDEV,IRA]RPASEQ

 type public String TYPE1(),V,VL

 if TYPE1(1).isNull() set V="" set VL=""

	quit

VP3	// Column pre-processor - [SYSDEV,IRA]TAXYR

 type public String TYPE1(),V,VL
 if TYPE1(1).isNull() set V="" set VL=""

	quit

VP4	// Column pre-processor - Variable: CALC1(1)

 type public String TYPE1(),V,VL

 if TYPE1(1).isNull() set V="" set VL=""

	quit

VP5	// Column pre-processor - Variable: CALC1(2)

 type public String TYPE1(),V,VL
 if TYPE1(2).isNull() set V="" set VL=""

	quit

VP6	// Column pre-processor - Variable: CALC1(3)

 type public String TYPE1(),V,VL

 if TYPE1(3).isNull() set V="" set VL=""

	quit

VP7	// Column pre-processor - Variable: CALC1(4)

 type public String TYPE1(),V,VL
 if TYPE1(4).isNull() set V="" set VL=""

	quit

VP8	// Column pre-processor - Variable: CALC1(5)

 type public String TYPE1(),V,VL

 if TYPE1(5).isNull() set V="" set VL=""

	quit

VP9	// Column pre-processor - Variable: CALC1(6)

 type public String TYPE1(),V,VL

 if TYPE1(6).isNull() set V="" set VL=""

	quit

VP10	// Column pre-processor - Variable: CALC1(7)

 type public String TYPE1(),V,VL
 if TYPE1(7).isNull() set V="" set VL=""

	quit

VP11	// Column pre-processor - Variable: CALC1(8)

 type public String TYPE1(),V,VL
 if TYPE1(8).isNull() set V="" set VL=""
	quit

VP12	// Column pre-processor - Variable: CALC1(9)

 type public String TYPE1(),V,VL
 if TYPE1(9).isNull() set V="" set VL=""

	quit

VP13	// Column pre-processor - Variable: CALC1(10)

 type public String TYPE1(),V,VL

 if TYPE1(10).isNull() set V="" set VL=""

	quit

VP14	// Column pre-processor - Variable: CALC1(11)

 type public String TYPE1(),V,VL

 if TYPE1(11).isNull() set V="" set VL=""

	quit

VP15	// Column pre-processor - Variable: CALC1(12)

 type public String TYPE1(),V,VL

 if TYPE1(12).isNull() set V="" set VL=""

	quit

VP16	// Column pre-processor - Variable: CALC1(13)

 type public String TYPE1(),V,VL

 if TYPE1(13).isNull() set V="" set VL=""

	quit

VP17	// Column pre-processor - Variable: CALC1(14)

 type public String TYPE1(),V,VL

 if TYPE1(14).isNull() set V="" set VL=""

	quit

VP18	// Column pre-processor - Variable: CALC1(15)

 type public String TYPE1(),V,VL

 if TYPE1(15).isNull() set V="" set VL=""

	quit
