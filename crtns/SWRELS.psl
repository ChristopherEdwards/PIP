SWRELS	//	SWIFT Message Release
	/*
		
	       ORIG:  TSAI - 3 MAY 1994
	  CALLED BY:  DATA-QWIK Function (SWREV)
	      CALLS:  ^UTLERR,^UTLREAD,^@PGM

	   PROJ #'S:  SWIFT Message Repair
	       DESC:  This routine is used for the SWIFT message reports
	        SWIFT100, SWIFT202, SWIFT210, and SWIFT300.
	        It is used for message release.  It is called from an
	        IBS function (SWRELS) to display SWIFT messages.  It
	        prompts for the sequence (repair queue) number, the lookup
	        table will only show those records which are repaired by
	        other users. After user review the message, it will prompt
	        user to enter option from a submenu. Based on the option
	        user chosed, it will move the message from the review queue
	        (REV) into either repair queue (REP) or ready to transmit
	        queue (RTT), or it will either delete the message or leave
	        the message in the review queue.
	        Program flow:
	    	1.Build a temperary lookup table from repair queue (REP)
	      	which is keyed by sequence number, and not allow the
	      	person to review the same message he repaired.
	    	2.Set up %TAB array to prompt for sequence number.
	    	3.Figure out the keys (TRREFNO,TYPE) from the lookup
	      	table, set up %BLK array and bring up the right report
	      	(SWIFT*) by calling @PGM.
	    	4.After the Data-Qwick report returned, display submenu
	      	to allow user enter options.
	    	5.If asking for "Release" then move msg into RTT queue.
	      	If asking for "Repair" then move msg into REP queue.
	      	If asking for "Delete" then set the status to 5 (deleted).
	      	If "Quit" then keep the msg in the REV queue.
	    	6.Display message on the bottom of screen describe the
	      	current status after reviewing the message.

	 	 ARGUMENTS:  None.

	   	GLOBALS -
	       	READ:  ^SWIFT
	       	SET:  ^SWIFT

	      	INPUT:
	     	OUTPUT:


	  ---- Revision History -------------------------------------------------
	   02/03/06 - ratht - CR - 18292
	              Modified Section FILESEQ- Included parameter to REQUE
	              Modified Section REQUE- Changed the getRecord from SWIFTSEQ to SWIFT
	                   
	   08/16/02 - SRIVASTAVAN - 49451
	   	      Converted to PSL.         
	 
	  ----------------------------------------------------------------------
	*/

REV 	//

	do INIT(2) 
	quit


INIT(%ProcessMode) //

	new VFMQ,OLNTB

	set %PG=0 
	set %PAGE=1

	type RecordSWIFT fSWIFT

        do VPG(.fSWIFT)
        quit


VPG(RecordSWIFT fSWIFT)	//Page control

	new FINISH

        set FINISH=0
        for  do { quit:FINISH
                if %PG=0 do VPG00 if ER set FINISH=1 quit
                if %PG>0 do VPG01(.fSWIFT)
                if "DFQ"[VFMQ do VER(.fSWIFT) set FINISH=1 quit
                set %PG=%PG+1
                }
	quit


VPG00	//Set up

	new %TAB,DONE

	//Prompts
	do BULDTBL^SWREPR

	set OLNTB=45
	set %TAB("QUESEQ")=".QUESEQ/TBL=""[REPTBL]TRREF,[REPTBL]TYPE,[REPTBL]SWFTDT,[REPTBL]RESPDT/REQ"""
	set %READ="@@%FN,,,QUESEQ/REQ" 
	set %NOPRMT="C"

	do ^UTLREAD 

	if VFMQ="Q" set ER=1
	quit


VPG01(RecordSWIFT fSWIFT) // SWIFT messages

	type RecordREPTBL reptbl=Db.getRecord("REPTBL","REPSEQ=:QUESEQ")

	set (TRREFNO,trrefno)=reptbl.trref 
	set (MSG,msg)=reptbl.type 
	set SWDIRECT="OUT"
	set RID="SWIFT"_MSG

	do ^URID 

	// Record locked by another user
	lock +SWIFT("OUT",TRREFNO,MSG):2 else  set VFMQ="Q" set ER=1 set RM=$$^MSG(2333) quit
	do SYSVAR

	set TRREFNO=trrefno 
	set SWDIRECT="OUT" 
	set MSG=msg

	if 'ER set VFMQ="Q"
	quit


SYSVAR	//Pre-define system variables.

	set %BLK="/"_$C(1)
	set %BLK=%BLK_$I_$C(1)_"ALL"_$C(1)_$G(trrefno)
	quit


VER(RecordSWIFT fSWIFT) //

	if VFMQ="Q" do END(.fSWIFT) quit

	do FILE(.fSWIFT)

	do END(.fSWIFT) 

	quit


FILE(RecordSWIFT fSWIFT) //File data

	set fSWIFT=Db.getRecord("SWIFT","SWDIRECT='OUT',TRREFNO=:TRREFNO,MSG=:MSG")
	set fSWIFT.status=6

	do fSWIFT.save()
	
	quit


END(RecordSWIFT fSWIFT)	//

	//sub-menu for asking to review
	if $D(TRREFNO)&$D(MSG) do {
		set %OSAVE=$$^DBSMBAR(1006)
		if %OSAVE=1 do RELEASE(.fSWIFT) quit

		if %OSAVE=2 do REPAIR(.fSWIFT) quit

		if %OSAVE=3 do DELETE(.fSWIFT) quit

		if %OSAVE=4 quit
		}

	if $D(SWDIRECT)&$D(TRREFNO)&$D(MSG) lock -SWIFT(SWDIRECT,TRREFNO,MSG)
	
	do Db.fastDelete("REPTBL")

	kill %TAB
	if $G(ER) quit
	set ER="W"

	// SWIFT message ~p1 ~p2 of ~p3 is ready to transmit.
	if %OSAVE=1 set RM=$$^MSG(7377,"MT",MSG,TRREFNO)
	
	// SWIFT message ~p1 ~p2 of ~p3 is in repair.
	else  if %OSAVE=2 set RM=$$^MSG(7375,"MT",MSG,TRREFNO)
	
	// SWIFT message ~p1 ~p2 of ~p3 is deleted.
	else  if %OSAVE=3 set RM=$$^MSG(7374,"MT",MSG,TRREFNO)
	
	// SWIFT message ~p1~p2 of ~p3 is in review.
	else  set RM=$$^MSG(7376,"MT",MSG,TRREFNO)
	quit


REQUE(RecordSWIFT fSWIFT)	//To requeue the message

	/* 
	Lock from queue and to queue
	Date for complete queue
	*/

	if toque="RTT" set quedt=fSWIFT.swftdt

	// Record locked by another user
	lock +SWIFTQ(fromque):2 else  set VFMQ="Q" set ER=1,RM=$$^MSG(2333) quit

	// Record locked by another user
	if toque'="RTT" lock +SWIFTQ(toque):2 else  set VFMQ="Q",ER=1 set RM=$$^MSG(2333) quit

	// Record locked by another user
	else  lock +SWIFTQ(toque,quedt):2 else  set VFMQ="Q",ER=1 set RM=$$^MSG(2333) quit

	
	//move into the "to queue"

	type RecordSWQCNT swqcnt
	type RecordSWQCNTD swqcntd

 	//Load "toque" record
	if toque'="RTT" do {
		set swqcnt=Db.getRecord("SWQCNT","QUE=:toque")
		set qinfo=swqcnt.nseq_"|"_swqcnt.tot_"|"_swqcnt.ptoday
		}
	else  do {
		set swqcntd=Db.getRecord("SWQCNTD","QUE=:toque,DT=:quedt")
		set qinfo=swqcntd.nseq_"|"_swqcntd.tot_"|"_swqcntd.ptoday
		}

	//update total in "toque"
	set $P(qinfo,"|",3)=$P(qinfo,"|",3)+1
	set $P(qinfo,"|",2)=$P(qinfo,"|",2)+1
	set toseq=$P(qinfo,"|",1)+1 
	if toseq>9999 set toseq=1

	//sequence number
	set $P(qinfo,"|",1)=toseq

	//clear the old record in from queue
	do Db.delete("SWIFTQ2","QUE=:fromque AND SEQ=:QUESEQ AND TRREFNO=:TRREFNO AND TYPE=:MSG")
	if toque'="RTT" do {
		do Db.delete("SWIFTQ2","QUE=:toque AND SEQ=:toseq AND TRREFNO=:TRREFNO AND TYPE=:MSG")

		type RecordSWIFTQ2 swiftq2=Db.getRecord("SWIFTQ2","QUE=:toque,SEQ=:toseq,TRREFNO=:TRREFNO,TYPE=:MSG",1)
		
		do swiftq2.bypassSave()
		
		set swqcnt.nseq=$P(qinfo,"|",1)
		set swqcnt.tot=$P(qinfo,"|",2)
		set swqcnt.ptoday=$P(qinfo,"|",3)
		
		do swqcnt.bypassSave()
		
		}
	else  do {
		do Db.delete("SWIFTQ1","QUE=:toque AND DT=:quedt AND SEQ=:toseq AND TRREFNO=:TRREFNO AND TYPE=:MSG")
		
		type RecordSWIFTQ1 swiftq1=Db.getRecord("SWIFTQ1","QUE=:toque,DT=:quedt,SEQ=:toseq,TRREFNO=:TRREFNO,TYPE=:MSG",1)

		do swiftq1.bypassSave()

		set swqcntd.nseq=$P(qinfo,"|",1)
                set swqcntd.tot=$P(qinfo,"|",2)
                set swqcntd.ptoday=$P(qinfo,"|",3)

		do swqcntd.bypassSave()

		}
	
	set swqcnt=Db.getRecord("SWQCNT","QUE=:fromque")
	set qinfo=swqcnt.nseq_"|"_swqcnt.tot_"|"_swqcnt.ptoday	

	//load "fromque" record update total in "fromque"
	set $P(qinfo,"|",2)=$P(qinfo,"|",2)-1
	if $P(qinfo,"|",2)<0 set $P(qinfo,"|",2)=0

        set swqcnt.nseq=$P(qinfo,"|",1)
        set swqcnt.tot=$P(qinfo,"|",2)
        set swqcnt.ptoday=$P(qinfo,"|",3)

	do swqcnt.bypassSave()

	//Unlock records
	lock -SWIFTQ(fromque)
	if toque'="RTT" lock -SWIFTQ(toque)
	else  lock -SWIFTQ(toque,quedt)
	quit


QUESTAT(toque)	//Return the queue's status.

	quit $S(toque="RTT":0,toque="PND":1,toque="REP":2,toque="CMP":3,toque="PRC":4,toque="REV":6,1:"")


FILEQUE(RecordSWIFT fSWIFT)	//To requeue the message and file the new status into SWIFT global.

	//Requeue the message
	do REQUE(.fSWIFT)
	
	do fSWIFT.setAuditFlag(1)

	set tostat=$$QUESTAT(toque)	
	set fSWIFT.status=tostat  
	
	set %ProcessMode=1

	//Update the SWIFT global

	do fSWIFT.save()

	quit


DELETE(RecordSWIFT fSWIFT)	//Delete the msg from review queue.

	// Record locked by another user
	lock +SWIFTQ("REV",TRREFNO,MSG):2 else  set VFMQ="Q" set ER=1 set RM=$$^MSG(2333) quit

	// Record locked by another user
	lock +SWIFTQ("REV"):2 else  set VFMQ="Q",ER=1,RM=$$^MSG(2333) quit

	do Db.delete("SWIFTQ2","QUE='REV' AND SEQ=:QUESEQ AND TRREFNO=:TRREFNO AND TYPE=:MSG")

	//update the total in review queue
	type RecordSWQCNT swqcnt=Db.getRecord("SWQCNT","QUE='REV'")
	set delrec=swqcnt.nseq_"|"_swqcnt.tot_"|"_swqcnt.ptoday
 
	set $P(delrec,"|",2)=$P(delrec,"|",2)-1 
        set swqcnt.nseq=$P(delrec,"|",1)
        set swqcnt.tot=$P(delrec,"|",2)
        set swqcnt.ptoday=$P(delrec,"|",3)

	do swqcnt.bypassSave()

	lock -SWIFTQ("REV",TRREFNO,MSG)
	lock -SWIFTQ("REV")
	
	do fSWIFT.setAuditFlag(1)
	set fSWIFT.status=5       

	do fSWIFT.save()

	quit


RELEASE(RecordSWIFT fSWIFT) //Move the msg from review queue to ready to transmit que.

	set fromque="REV" 
	set toque="RTT"
	
	do FILEQUE(.fSWIFT) 
	
	quit


REPAIR(RecordSWIFT fSWIFT) //Move the msg from review queue to repair queue.

	set fromque="REV" 
	set toque="REP"

	do FILEQUE(.fSWIFT)

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60299^36788^Pat Kelly^8567"	// Signature - LTD^TIME^USER^SIZE
