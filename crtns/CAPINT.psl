CAPINT
	/*
	Capitalize interest
	
	DESC:	This procedure is required since EXEC,TRANAMT,SDIRND 
		sections of BCHLNCAP, BCHLNDIC batches are removed 
		from their respective batches and these sections are
		replicated in this procedure with same functionality.
		BCHLNCAP, BCHLNDIC will now call into EXEC section of 
		CAPINT. If LN.ICAP=1 then Capitalize interest Due,else
		deferred interest capitalization.
		
	EXAMPLE:
	    Entry is normally made via the EXEC linetag.
            Arguments passed through EXEC include SystemDatye and ln object.

	    do EXEC^CAPINT(%SystemDate,.ln)

	---- Revision History ------------------------------------------------
	
	08/21/07 - Chhabris - CR 28684
		   Modified EXEC section to add CTL as the 3rd parameter. Based
		   on the value in CTL, VATINT^PROCLNB1 will post a system
		   generated offset (CTL=0) or accumulate the offsets (CTL=1).
		   Modified the TRANAMT section to add a call to VATINT^PROCLNB1
		   section to calculate VAT on the capitalized interest amount.
		   Also added quit:ER after the call to POSTTTX section as a
		   "Not all funds applied" error occurs because prodctl.caintcr
		   was incorrectly set as 'CCPLO' and the system was hiding the
		   error and continued instead of quitting. Added "L" as a
		   parameter to the call to $$SEGUSE^BTTOPTMZ.
	
	08/05/07 - KumarB / SmithCD - CR 27856
		   Modified POSTTTX section to set ttx.tso=TSO, so "EXACTACR" 
		   will be used when the posting routine is reducing ln.acr. 
		   Fixes a problem with accrual amounts for segmented accounts 
		   not being reduced to 5 decimal places. Also added the 
		   setting of ttx.efd so it appears correctly in history on 
		   backdated transactions.
	 
	07/15/07 - SVS Kiran / SmithCD - CR 26754
		   Created Procedure.
	 	 	
	*/
	
	quit

	
public EXEC(Date %SystemDate,   // System Date
	    RecordLN ln,	// Loan account			/REF:R
	    String CTL)		// Control 
	/*
	CTL :
	    Possition 1:
	    0  Post system generated offset
            1  Accumulate offsets in VATOFF(,,,,)
	*/

	// Execute interest capitalization
			
	do TRANAMT(.ln, CTL.get())

	if ln.iropt=2 do SDIRND(.ln)
	
	quit
	
	
TRANAMT(RecordLN ln, Number CTL)		// Loan account			/REF:R

	// Calculate transaction amount and file transactions
	
	type public Boolean ER
	type Boolean TGTOK=false
	type Number TAMT,UNRNDAMT,VATAMT
	type String LNERC,TSO

	set (LNERC,TSO)=""
	
	if 'ln.icap do {
		// Deferred interest capitalization
 		if ln.acr>ln.diu do {
			set LNERC.piece("#",2)=ln.acr		
			
			// Update Deferred Interest - Uncapitalized and 
			// Deferred Int - Annual Accumulation
			set ln.diu=ln.diu+(ln.acr-ln.diu).roundCur(ln.crcd)	
			set ln.diaa=ln.diaa+(ln.acr-ln.diu).roundCur(ln.crcd)
				
			do ln.bypassSave()
			
			set TAMT=ln.diu
			}
		}
	else  do {
		// Capitalize interest due
		#IF (('CUVAR.NOSEGMENTS!(CUVAR.NOSEGMENTS=3))!($$SEGUSE^BTTOPTMZ("L")))
			if ln.segments do { 
				set TAMT=ln.acr-ln.cpacr
				set TSO=$$FIELDIN^UTSO(TSO,"EXACTACR",TAMT)
				set UNRNDAMT=TAMT
				}
			else  set TAMT=+ln.duin2
		#ELSE
			set TAMT=+ln.duin2
		#ENDIF
		}
		
	set TAMT=TAMT.roundCur(ln.crcd)

	/*
	Apply Neg Amort - Maximum Principal Balance... if not defined or the 
	computed balance will not be exceeded by transaction amount, use 
	transaction amount; otherwise use the difference of the computed 
	balance and the maximum principal balance.
	*/
	set TAMT=$select(ln.namxb.isNull():TAMT,(ln.balcmp+TAMT)<ln.namxb:TAMT,1:ln.namxb-ln.balcmp)
	
        if TAMT'>0,UNRNDAMT.get()'>0 quit

	// VAT on Interest Calculation Option
	if ln.vatintopt do { quit:ER

		type RecordTTX ttx = Class.new("RecordTTX")
		type RecordLNBIL1 lnbil1 = Class.new("RecordLNBIL1")

		// Calculate and post the VAT on interest due and accumulate
		// offsets
		do VATINT^PROCLNB1(.ln,.lnbil1,TAMT,CTL,%UserClass,%UserID,ln.boo,.VATAMT,.ttx)
		}

	// Target account specified (capitalize interest only)
	if ln.icap,ln.ditgacn do { quit:ER
		type RecordACN acn=Db.getRecord("ACN","CID=:ln.ditgacn",1)
		if 'acn.getMode() quit

		// Post debit transaction to target account, not the loan
		do POSTTTX(.acn,TAMT,ln.icap,ln.crcd,0) quit:ER
		
		set TGTOK=true
		}

	// Invalid target account or no target account specified
	// Post debit transaction to the loan account
	if 'TGTOK do POSTTTX(.ln,TAMT,ln.icap,ln.crcd,0) quit:ER

	// Post credit transaction to the loan
	do POSTTTX(.ln,TAMT,ln.icap,ln.crcd,1) quit:ER

	// Bill Capitalized Interest as Principal applies to Deferred interest 
	// capitalization only
	if 'ln.icap,ln.bcapint do BCAPINT(ln.cid,TAMT)
 
	quit 	


POSTTTX(RecordACN acn,		// Account record		/REF:RW
	Number TAMT,		// Transaction amount
	Boolean ICAP,		// Interest capitalization
	String CRCD,		// Currency Code
	Number DRCR) 		// debit/credit indicator
	
	//Create and post transaction

	type public Cache %CACHE()
	type public Number BRCD
	type public String LNERC, TSO
	
	type String ETC
	
	type RecordPRODCTL prodctl=%CACHE("PRODCTL").getRecord("PRODCTL","TYPE=:acn.type")

	// DR Negative Amortization Tran Code
	if DRCR set ETC=prodctl.drtrna
	else  do {
		// Capitalize Interest Due Credit
		if ICAP set ETC=prodctl.caintcr
		// CR Negative Amortization Tran Code
		else  set ETC=prodctl.crtrna
		}		
	
	type RecordTRN trn=%CACHE("TRN").getRecord("TRN","ETC=:ETC")
	
	type RecordTTX ttx=Class.new("RecordTTX")
	
	set ttx.tjd=%SystemDate
	set ttx.brcd=BRCD
	set ttx.uid=%UserID
	set ttx.cid=acn.cid
	set ttx.itc=trn.itc
	set ttx.etc=ETC
	set ttx.tamt=TAMT
	set ttx.tso=TSO
	set ttx.efd=%EffectiveDate.get()

	// Cap Int Due
	if ICAP set ttx.tcmt=$$^MSG(6197)
	// Def Int Cap
	else  set ttx.tcmt=$$^MSG(4955)

	set ttx.crcd=CRCD
	set ttx.lnerc=LNERC
	set ttx.tlo=%UserStation

	do TRNSINGL^TRNDRV(.ttx,.acn,,BRCD,4)
	
	quit


SDIRND(RecordLN ln)		// Loan account			/REF:RW

	// Calculate next resolution date - set new Dayend and account file

	type public Boolean ER
	
	set ln.dirnd=%SystemDate.nextFreqDate(ln.dirfre) quit:ER
	set ln.dirld=%SystemDate

	type RecordDAYENDNEGAM negam=Db.getRecord("DAYENDNEGAM","TJD=:ln.dirnd,CID=:ln.cid",1)
	do negam.bypassSave()
	
	do ln.bypassSave()
	
	quit


BCAPINT(Number CID,		// Account Number
	Number TAMT)       	// Transaction Amount

	// Bill Capitalized Interest as Principal

 	type String pmt
 	
	type RecordLNBIL0 lnbil0=Db.getRecord("LNBIL0","CID=:CID")

	if lnbil0.pe01="P" set pmt=lnbil0.pe01,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe01=pmt
        if lnbil0.pe02="P" set pmt=lnbil0.pe02,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe02=pmt
        if lnbil0.pe03="P" set pmt=lnbil0.pe03,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe03=pmt        
	if lnbil0.pe04="P" set pmt=lnbil0.pe04,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe04=pmt
        if lnbil0.pe05="P" set pmt=lnbil0.pe05,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe05=pmt
        if lnbil0.pe06="P" set pmt=lnbil0.pe06,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe06=pmt
        if lnbil0.pe07="P" set pmt=lnbil0.pe07,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe07=pmt
        if lnbil0.pe08="P" set pmt=lnbil0.pe08,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe08=pmt
        if lnbil0.pe09="P" set pmt=lnbil0.pe09,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe09=pmt
        if lnbil0.pe10="P" set pmt=lnbil0.pe10,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe10=pmt
	if lnbil0.pe11="P" set pmt=lnbil0.pe11,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe11=pmt
        if lnbil0.pe12="P" set pmt=lnbil0.pe12,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe12=pmt
	if lnbil0.pe13="P" set pmt=lnbil0.pe13,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe13=pmt
	if lnbil0.pe14="P" set pmt=lnbil0.pe14,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe14=pmt
	if lnbil0.pe15="P" set pmt=lnbil0.pe15,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe15=pmt
	if lnbil0.pe16="P" set pmt=lnbil0.pe16,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe16=pmt
	if lnbil0.pe17="P" set pmt=lnbil0.pe17,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe17=pmt
	if lnbil0.pe18="P" set pmt=lnbil0.pe18,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe18=pmt
	if lnbil0.pe19="P" set pmt=lnbil0.pe19,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe19=pmt
	if lnbil0.pe20="P" set pmt=lnbil0.pe20,pmt.piece("#",5)=pmt.piece("#",5)+TAMT,lnbil0.pe20=pmt
	
	do lnbil0.bypassSave()
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60865^50166^Sanjay Chhabria^8100"	// Signature - LTD^TIME^USER^SIZE
