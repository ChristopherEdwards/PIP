R01S505	// SCA583 - Industry Limits Detail
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:00 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String SICT
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1

	set RID="SCA583"
	set RN="Industry Limits Detail"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|4||[UTBLSIC]SIC|[UTBLSIC]||set SICT=X||T|SIC Code Number is equal to|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String SICT
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,DESC,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA583",RN="Industry Limits Detail"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA583","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[SCA583]CID#23#12,[SCA583]TYPE#40#4,[SCA583]COMEXP#47#15,[SCA583]OUTEXP#64#15,[SCA583]MDT#82#10,[SCA583]TOTCOL#95#15,[SCA583]MCOL#117#1"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"SIC Code Number is equal to"_"|VIN1|"_VIN1.get()

		set VWHERE="UTBLSIC.SIC=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Industry Limits Detail"
		set VBNRINFO("PGM")="R01S505"
		set VBNRINFO("RID")="SCA583"
		set VBNRINFO("TABLES")="SCA583,CIF,UTBLSIC"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,SCA583]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SCA583]ACN"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,SCA583]TYPE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,SCA583]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("SCA583.JOB,SCA583.ACN,SCA583.TYPE,SCA583.CID,SCA583.COMEXP,SCA583.OUTEXP,CIF.NAM,SCA583.MDT,SCA583.TOTCOL,SCA583.MCOL","SCA583,CIF,UTBLSIC","UTBLSIC.SIC=:VIN1","SCA583.JOB,SCA583.ACN,SCA583.TYPE,SCA583.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10
	set vc1=V.piece($C(9),1)			// SCA583.JOB
	set vc2=V.piece($C(9),2)			// SCA583.ACN
	set vc3=V.piece($C(9),3)			// SCA583.TYPE
	set vc4=V.piece($C(9),4)			// SCA583.CID
	set vc5=V.piece($C(9),5)			// SCA583.COMEXP
	set vc6=V.piece($C(9),6)			// SCA583.OUTEXP
	set vc7=V.piece($C(9),7)			// CIF.NAM
	set vc8=V.piece($C(9),8)			// SCA583.MDT
	set vc9=V.piece($C(9),9)			// SCA583.TOTCOL
	set vc10=V.piece($C(9),10)			// SCA583.MCOL
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type Public String SICT

	do Db.delete("SCA583","JOB=:%ProcessID")

	type ResultSet rs=Db.select("ACN","CIF","SIC=:SICT")
	while rs.next() do {

		do IBS(rs.getCol("ACN"),SICT)
		do NONIBS(rs.getCol("ACN"),SICT)
		}

	quit


IBS(Number ACN,
    String SICT)

	type Number CID,TOT
	type String XLN16

	type ResultSet rscid=Db.select("CID","RELCIF","ACN=:ACN")
	while rscid.next() do {

		set CID=rscid.getCol("CID")

		type RecordSCA583 sca583=Class.new("RecordSCA583")

		set sca583.job=%ProcessID
		set sca583.acn=ACN
		set sca583.cid=CID

		type RecordACN acn=Db.getRecord("ACN","CID=:CID",1)
		set sca583.type=acn.type
		
		if acn.cls="D" set TOT=$$DEPOSIT^PROCLIM(CID,0)
		else  set TOT=$$LOAN^PROCLIM(CID,0)

		if acn.cls="L" do {

			set sca583.mdt=acn.mdt

			set XLN16=$$XLN16^LNCDI(CID)
			set sca583.totcol=XLN16.piece("|",3)
			set sca583.mcol=$$MCOL^LNCDI(CID)
			}

		set sca583.comexp=TOT.piece("|",1)
		set sca583.outexp=TOT.piece("|",2)
		set sca583.sic=SICT

		do sca583.bypassSave()
		}
	quit


NONIBS(Number ACN,
       String SICT)

	type Number TOT
	type String INTPROD,RECID,SYS

	type ResultSet rsexpos=Db.select("SYS,INTPROD,RECID","EXPOS","ACN=:ACN")
	while rsexpos.next() do {

		set SYS=rsexpos.getCol("SYS")
		set INTPROD=rsexpos.getCol("INTPROD")
		set RECID=rsexpos.getCol("RECID")

		type RecordSCA583 sca583=Class.new("RecordSCA583")

		set sca583.job=%ProcessID
		set sca583.acn=ACN
		set sca583.type=INTPROD
		set sca583.cid=RECID
		set sca583.sic=SICT

		set TOT=$$EXPREC^PROCLIM(ACN,SYS,INTPROD,RECID)
		set sca583.comexp=TOT.piece("|",1)
		set sca583.outexp=TOT.piece("|",2)

		type RecordEXPOS expos=Db.getRecord("EXPOS","ACN=:ACN,SYS=:SYS,INTPROD=:INTPROD,RECID=:RECID",1)
		set sca583.mdt=expos.mdt

		do sca583.bypassSave()
		}
	quit
 

VPREBQ	// Pre-processor (before query)

	//Incoming=SICT
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc5,vc6
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc5			// @TOT([SCA583]COMEXP)
	set VT(4,2,1)=VT(4,2,1)+vc6			// @TOT([SCA583]OUTEXP)
	quit

VDTL2	// Detail
	type public String %TIM,DESC,IOSL,SICT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "_$J(vc2,12)
	set VL=VL_$J("",18-VL.length())_$E(vc7,1,40)
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,DESC,IOSL,SICT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                      "_$J(vc4,12)
	set VL=VL_$J("",39-VL.length())_$J(vc3,4)
	set VL=VL_$J("",46-VL.length())_$J($FN(vc5,",",2),15)
	set VL=VL_$J("",63-VL.length())_$J($FN(vc6,",",2),15)
	set VL=VL_$J("",81-VL.length())_$J($$DAT^%ZM(vc8),10)
	set VL=VL_$J("",94-VL.length())_$J($FN(vc9,",",2),15)
	set VL=VL_$J("",116-VL.length())_$S(vc10:"Y",1:"N")
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DESC,RID,RN,SICT,VL,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL=" "_"Industry: "
	set VL=VL_$J("",11-VL.length())_$J(SICT,4)
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC,1,40)
	set VL=VL_$J("",17-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL=" "_"Customer Number  Customer Name                          ---Exposure---            Maturity                       Multiple"
	do VOM
	set VL="                      "_"Account Number   Type        Committed       Outstanding         Date  Collateral Value   Collateral"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,DESC,SICT,VPN,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                    "_"Total Industry Exposure:"
	set V=0						// @TOT([SCA583]COMEXP,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	set VL=VL_$J("",46-VL.length())_$J($FN(V,",",2),15)
	set V=0						// @TOT([SCA583]OUTEXP,0)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VL=VL_$J("",63-VL.length())_$J($FN(V,",",2),15)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC

	type Public String DESC,SICT

	type RecordUTBLSIC utblsic=Db.getRecord("UTBLSIC","SIC=:SICT",1)
	set DESC=utblsic.desc

	quit
