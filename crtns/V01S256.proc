V01S256(%ProcessMode,RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)   // -  - SID= <EFTRICO> Review Incoming Collection Order
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="EFTRICO",VPGM=$T(+0),VSNAME="Review Incoming Collection Order"
 set VFSN("EFTPAY")="zfEFTPAY"
 set vPSL=1
 set KEYS(1)=CIF.ACN
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fEFTPAY,.CIF,.DEP),VDA1(.fEFTPAY,.CIF,.DEP),^DBSPNT()

 set ER=0 do VSCRPRE(.fEFTPAY,.CIF,.DEP) if ER quit  // Screen Pre-Processor
 
 // Display Pre-Processor
 //
 if '%ProcessMode do VNEW(.fEFTPAY,.CIF,.DEP),VDSPPRE(.fEFTPAY,.CIF,.DEP) quit:$G(ER)  do VPR(.fEFTPAY,.CIF,.DEP),VDA1(.fEFTPAY,.CIF,.DEP)
 if %ProcessMode do VLOD(.fEFTPAY,.CIF,.DEP) quit:$G(ER)  do VDSPPRE(.fEFTPAY,.CIF,.DEP) quit:$G(ER)  do VPR(.fEFTPAY,.CIF,.DEP),VDA1(.fEFTPAY,.CIF,.DEP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEFTPAY,.CIF,.DEP)
	quit


VNEW(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) // Initialize arrays if %O=0
 
 do VDEF(.fEFTPAY,.CIF,.DEP)
 do VLOD(.fEFTPAY,.CIF,.DEP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)
 if fEFTPAY.DATECRE="" set fEFTPAY.DATECRE=TJD
 if fEFTPAY.TIMECRE="" set fEFTPAY.TIMECRE=$P($H,",",2)
 if fEFTPAY.UID="" set fEFTPAY.UID=%UID
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) // Display screen prompts
 set VO="27||13|0"
 set VO(0)="|0"
 set VO(1)=$C(3,8,13,0,0,0,0,0,0,0)_"01TProcess Date:"
 set VO(2)=$C(3,36,22,0,0,0,0,0,0,0)_"01TRecipient Institution:"
 set VO(3)=$C(4,3,18,0,0,0,0,0,0,0)_"01TRecipient Account:"
 set VO(4)=$C(5,9,12,0,0,0,0,0,0,0)_"01TBranch Code:"
 set VO(5)=$C(5,41,17,0,0,0,0,0,0,0)_"01TBeneficiary Name:"
 set VO(6)=$C(6,3,18,0,0,0,0,0,0,0)_"01TSubmitted Account:"
 set VO(7)=$C(6,40,18,0,0,0,0,0,0,0)_"01T Original Message:"
 set VO(8)=$C(7,6,15,0,0,0,0,0,0,0)_"01TSubmitted Name:"
 set VO(9)=$C(8,7,14,0,0,0,0,0,0,0)_"01TReject Reason:"
 set VO(10)=$C(9,4,17,0,0,0,0,0,0,0)_"01TCustomer Account:"
 set VO(11)=$C(9,41,17,0,0,0,0,0,0,0)_"01T Sequence Number:"
 set VO(12)=$C(10,5,16,0,0,0,0,0,0,0)_"01TCorrect Account:"
 set VO(13)=$C(10,51,7,0,0,0,0,0,0,0)_"01TAmount:"
 set VO(14)=$C(11,5,16,0,0,0,0,0,0,0)_"01TCorrect G/L Acc:"
 set VO(15)=$C(11,44,14,0,0,0,0,0,0,0)_"01TAvailable Bal:"
 set VO(16)=$C(12,3,18,0,0,0,0,0,0,0)_"01TCustomer Name/Add:"
 set VO(17)=$C(13,6,15,0,0,0,0,0,0,0)_"01TMessage Detail:"
 set VO(18)=$C(16,4,17,0,0,0,0,0,0,0)_"01TLast Part Pmt Dt:"
 set VO(19)=$C(16,39,19,0,0,0,0,0,0,0)_"01TTotal Paid to Date:"
 set VO(20)=$C(17,4,17,0,0,0,0,0,0,0)_"01TDays Outstanding:"
 set VO(21)=$C(17,41,17,0,0,0,0,0,0,0)_"01TRemaining to Pay:"
 set VO(22)=$C(19,6,15,0,0,0,0,0,0,0)_"01TPartial Amount:"
 set VO(23)=$C(19,38,20,0,0,0,0,0,0,0)_"01TPmts Awaiting Retry:"
 set VO(24)=$C(20,14,7,0,0,0,0,0,0,0)_"01TReject:"
 set VO(25)=$C(20,50,8,0,0,0,0,0,0,0)_"01TRe-Post:"
 set VO(26)=$C(21,9,12,0,0,0,0,0,0,0)_"01TReturn Code:"
 set VO(27)=$C(21,51,7,0,0,0,0,0,0,0)_"01TStatus:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)  // Display screen data
 new V
 s AVAILBAL=$G(AVAILBAL)
 s CUSTNAME=$G(CUSTNAME)
 s RRDESC=$G(RRDESC)
 //
 set VO="58|28|13|0"
 set VO(28)=$C(1,1,80,3,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(29)=$C(3,22,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fEFTPAY.PROCDT)
 set VO(30)=$C(3,59,12,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.RECINST,1,12)
 set VO(31)=$C(4,22,34,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.RECACCT,1,34)
 set VO(32)=$C(5,22,6,2,0,0,0,0,0,0)_"01N"_fEFTPAY.BRCD
 set VO(33)=$C(5,59,20,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.BENNAME,1,20)
 set VO(34)=$C(6,22,16,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.SUBCID,1,16)
 set VO(35)=$C(6,59,12,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.ORIGMTYP,1,12)
 set VO(36)=$C(7,22,32,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.SUBNAM,1,32)
 set VO(37)=$C(8,22,3,2,0,0,0,0,0,0)_"01N"_fEFTPAY.REJREAS
 set VO(38)=$C(8,26,35,2,0,0,0,0,0,0)_"01T"_$G(RRDESC)
 set VO(39)=$C(9,22,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.CID
 set VO(40)=$C(9,59,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.SEQ
 set VO(41)=$C(10,22,20,2,0,0,0,0,0,0)_"00N"_fEFTPAY.CRCTACCT
 set V=$S(fEFTPAY.AMOUNT="":"",1:$J(fEFTPAY.AMOUNT,0,2)) set VO(42)=$C(10,59,15,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.AMOUNT="":"",1:$J(fEFTPAY.AMOUNT,0,2))
 set VO(43)=$C(11,22,20,2,0,0,0,0,0,0)_"00N"_fEFTPAY.CRCTGL
 set VO(44)=$C(11,62,12,2,0,0,0,0,0,0)_"01$"_$S($G(AVAILBAL)="":"",1:$J($G(AVAILBAL),0,2))
 set VO(45)=$C(12,22,35,2,0,0,0,0,0,0)_"01T"_$G(CUSTNAME)
 set VO(46)=$C(13,22,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.MSG1,1,35)
 set VO(47)=$C(14,22,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.MSG2,1,35)
 set VO(48)=$C(15,22,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.MSG3,1,35)
 set VO(49)=$C(16,22,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fEFTPAY.LPPDATE)
 set V=$S(fEFTPAY.TOTPAID="":"",1:$J(fEFTPAY.TOTPAID,0,2)) set VO(50)=$C(16,59,12,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.TOTPAID="":"",1:$J(fEFTPAY.TOTPAID,0,2))
 set VO(51)=$C(17,22,3,2,0,0,0,0,0,0)_"01N"_fEFTPAY.DAYSOUTSTNDG
 set V=$S(fEFTPAY.REMPAY="":"",1:$J(fEFTPAY.REMPAY,0,2)) set VO(52)=$C(17,59,12,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.REMPAY="":"",1:$J(fEFTPAY.REMPAY,0,2))
 set V=$S(fEFTPAY.PARTAMT="":"",1:$J(fEFTPAY.PARTAMT,0,2)) set VO(53)=$C(19,22,12,2,0,0,0,0,0,0)_"00$"_$S(fEFTPAY.PARTAMT="":"",1:$J(fEFTPAY.PARTAMT,0,2))
 set V=$S(fEFTPAY.TPAAWCMP="":"",1:$J(fEFTPAY.TPAAWCMP,0,2)) set VO(54)=$C(19,59,12,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.TPAAWCMP="":"",1:$J(fEFTPAY.TPAAWCMP,0,2))
 set VO(55)=$C(20,22,1,2,0,0,0,0,0,0)_"00L"_$S(fEFTPAY.REJECT:"Y",1:"N")
 set VO(56)=$C(20,59,1,2,0,0,0,0,0,0)_"00L"_$S(fEFTPAY.REPOST:"Y",1:"N")
 set VO(57)=$C(21,22,3,2,0,0,0,0,0,0)_"00N"_fEFTPAY.RETCODE
 set VO(58)=$C(21,59,3,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.STATUS,1,3)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=30,VPT=1,VPB=21,PGM=$T(+0),DLIB="SYSDEV",DFID="EFTPAY,CIF,DEP"
 set OLNTB=21059
 
 set VFSN("EFTPAY")="zfEFTPAY"
 //
 // 
	
	
 set %TAB(1)=$C(2,21,10)_"20D12417|1|[EFTPAY]PROCDT"
 set %TAB(2)=$C(2,58,12)_"20T12402|1|[EFTPAY]RECINST|[UTBLEFTINST]||||||||15"
 set %TAB(3)=$C(3,21,34)_"20T12401|1|[EFTPAY]RECACCT"
 set %TAB(4)=$C(4,21,6)_"20N12425|1|[EFTPAY]BRCD|[UTBLBRCD]"
 set %TAB(5)=$C(4,58,20)_"20T12446|1|[EFTPAY]BENNAME|||||||||32"
 set %TAB(6)=$C(5,21,16)_"20T12459|1|[EFTPAY]SUBCID"
 set %TAB(7)=$C(5,58,12)_"20T12416|1|[EFTPAY]ORIGMTYP"
 set %TAB(8)=$C(6,21,32)_"20T12460|1|[EFTPAY]SUBNAM"
 set %TAB(9)=$C(7,21,3)_"20N12455|1|[EFTPAY]REJREAS|[UTBLCCRJ]"
 set %TAB(10)=$C(7,25,35)_"20T|*RRDESC|[*]@RRDESC"
 set %TAB(11)=$C(8,21,12)_"21N12401|1|[EFTPAY]CID"
 set %TAB(12)=$C(8,58,12)_"20N12402|1|[EFTPAY]SEQ|[EFTPAY]"
 set %TAB(13)=$C(9,21,20)_"00N12467|1|[EFTPAY]CRCTACCT|||do VP1^V01S256(.fEFTPAY,.CIF,.DEP)"
 set %TAB(14)=$C(9,58,15)_"20$12403|1|[EFTPAY]AMOUNT|||||||2"
 set %TAB(15)=$C(10,21,20)_"00N12468|1|[EFTPAY]CRCTGL|||do VP2^V01S256(.fEFTPAY,.CIF,.DEP)|do VP3^V01S256(.fEFTPAY,.CIF,.DEP)"
 set %TAB(16)=$C(10,61,12)_"20$|*AVAILBAL|[*]@AVAILBAL|||||||2"
 set %TAB(17)=$C(11,21,35)_"20T|*CUSTNAME|[*]@CUSTNAME"
 set %TAB(18)=$C(12,21,35)_"00T12401|1|[EFTPAY]MSG1"
 set %TAB(19)=$C(13,21,35)_"00T12402|1|[EFTPAY]MSG2"
 set %TAB(20)=$C(14,21,35)_"00T12403|1|[EFTPAY]MSG3"
 set %TAB(21)=$C(15,21,10)_"20D12447|1|[EFTPAY]LPPDATE"
 set %TAB(22)=$C(15,58,12)_"20$12448|1|[EFTPAY]TOTPAID|||||||2"
 set %TAB(23)=$C(16,21,3)_"20N12449|1|[EFTPAY]DAYSOUTSTNDG"
 set %TAB(24)=$C(16,58,12)_"20$12450|1|[EFTPAY]REMPAY|||||||2"
 set %TAB(25)=$C(18,21,12)_"00$12451|1|[EFTPAY]PARTAMT|||do VP4^V01S256(.fEFTPAY,.CIF,.DEP)||||2"
 set %TAB(26)=$C(18,58,12)_"20$12457|1|[EFTPAY]TPAAWCMP|||||||2"
 set %TAB(27)=$C(19,21,1)_"00L12452|1|[EFTPAY]REJECT|||do VP5^V01S256(.fEFTPAY,.CIF,.DEP)"
 set %TAB(28)=$C(19,58,1)_"00L12453|1|[EFTPAY]REPOST|||do VP6^V01S256(.fEFTPAY,.CIF,.DEP)"
 set %TAB(29)=$C(20,21,3)_"00N12454|1|[EFTPAY]RETCODE|[UTBLRETCODE]"
 set %TAB(30)=$C(20,58,3)_"20T12412|1|[EFTPAY]STATUS|[STBLESTAT]"
 do VTBL(.fEFTPAY,.CIF,.DEP),VDEPRE(.fEFTPAY,.CIF,.DEP) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDEPRE(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)  // Data Entry Pre-processor
 
 /*------------------------------------------------------------------ 
   07/24/06 - Vanitha Krishnasamy - 22163
	      Converted to PSL. 

            - Claude Jeruchim 25337.
	      Normally, PartAmt is not protected.
   ------------------------------------------------------------------ 
 */

 type public Boolean FLAGPRO, PARTPRO
 type public String SRC

 set PARTPRO=0,FLAGPRO=0

 // Check Auto retry rejects flag and partial payments flag
 type RecordCTBLEFTTYPE ctbleft = Db.getRecord("CTBLEFTTYPE","KEY=:SRC")

 if ctbleft.prtpmt = 0 do {
	 do PROTECT^DBSMACRO("fEFTPAY.PARTAMT")
	 set PARTPRO = 1
	}

 if ctbleft.retrej = 1 do { 
	 do PROTECT^DBSMACRO("fEFTPAY.PARTAMT")
	
	/*	
	  This shows that [EFTPAY]PARTAMT should normally be 
	  protected.
	*/
	 set PARTPRO = 1
	 set FLAGPRO = 1
  	 do DEFAULT^DBSMACRO("fEFTPAY.REPOST",0,"1","0","0")
  	 do DEFAULT^DBSMACRO("fEFTPAY.REJECT",1,"1","0","0")
  	 do DISPLAY^DBSMACRO("fEFTPAY.REPOST","","0")
	 do DISPLAY^DBSMACRO("fEFTPAY.REJECT","","0")
	 do PROTECT^DBSMACRO("fEFTPAY.REPOST")
	 do PROTECT^DBSMACRO("fEFTPAY.REJECT")
	 do PROTECT^DBSMACRO("@CRCTACCT")
	 }

  if fEFTPAY.STATUS = "PP" do PROTECT^DBSMACRO("@CRCTACCT")
 
  
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) //
  /*----------------Revision History-------------------------------------
    08/17/2006 - VANITHAK - CR 22163
		 Converted to PSL.
   ----------------------------------------------------------------------
  */

  type public Boolean ER, FLAGPRO, PARTPRO
  type public Number AVAILBAL, ORIGBAL, X
  type public String CUSTNAME

  type Number %EXT
    
  set %EXT = 1
  do CID^UACN1 quit:ER
 
  // Correct account cannot be same as customer account.
    if (X = fEFTPAY.cid) & (fEFTPAY.ttype < 2) do Runtime.setErrMSG("EFTPAY",2392) quit
  
  if 'X.isNull() do {
	
	// Recalculate customer name, and balance.
       	type RecordDEP dep = Db.getRecord("DEP","CID=:X")
	if 'dep.getMode() set AVAILBAL = ""
	else  set AVAILBAL = dep.balavl

       	if dep.acn.isNull() set CUSTNAME = ""
	else  do {
		type RecordCIF cif = Db.getRecord("CIF", "ACN = :dep.acn", 1)
		set CUSTNAME = cif.nam
		}
     	do DISPLAY^DBSMACRO("@AVAILBAL")
	do DISPLAY^DBSMACRO("@CUSTNAME")
	
	/*
  	   Protect the partial amount field if the account is changing, 
	   and force a re-post.
	*/
  	 do PROTECT^DBSMACRO("fEFTPAY.PARTAMT")
  	 do DEFAULT^DBSMACRO("fEFTPAY.REPOST",1)
  	 do DISPLAY^DBSMACRO("fEFTPAY.REPOST")
 	 do PROTECT^DBSMACRO("fEFTPAY.REPOST")
	 do DEFAULT^DBSMACRO("fEFTPAY.REJECT",0)
	 do DISPLAY^DBSMACRO("fEFTPAY.REJECT")
	 do PROTECT^DBSMACRO("fEFTPAY.REJECT")
	 do DEFAULT^DBSMACRO("fEFTPAY.CRCTGL","")
 	 do DISPLAY^DBSMACRO("fEFTPAY.CRCTGL")
	 do GOTO^DBSMACRO("fEFTPAY.MSG1")
	}
   else  if X.isNull(),fEFTPAY.crctgl.isNull() do {

	 /*
	    If this field is blank, be sure to replace the balance and 
	    customer name with the original values, and unprotect fields 
	    that need to be available.
	 */
	set AVAILBAL = ORIGBAL
  	do DISPLAY^DBSMACRO("@AVAILBAL")
  	set CUSTNAME = ORIGCUST
  	do DISPLAY^DBSMACRO("@CUSTNAME")
	if PARTPRO.get() '= 1 do UNPROT^DBSMACRO("fEFTPAY.PARTAMT")
	if FLAGPRO.get() '= 1 do UNPROT^DBSMACRO("fEFTPAY.REPOST")
   	if FLAGPRO.get() '= 1 do UNPROT^DBSMACRO("fEFTPAY.REJECT")
	}
VP2(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) //
 /*----Revision History--------------------------------------------------
  07/24/06  Vanitha Krishnasamy - CR 22163 
	    Converted to PSL.
  -----------------------------------------------------------------------
 */
 
 type public Boolean ER, FLAGPRO, PARTPRO 
 type public Number AVAILBAL, ORIGBAL, X 
 type public String CUSTNAME, ORIGCUST
 
 // lookup table varaible
 do CHANGE^DBSMACRO("TBL","CH(")

 // Not permitted to enter both a customer and G/L number.
 if 'X.isNull(),'fEFTPAY.crctacct.isNull() do Runtime.setErrMSG("EFTPAY",2045) quit

 // Correct G/L account is the same as originating G/L account
 if (fEFTPAY.ttype > 1),(X = fEFTPAY.cid) do Runtime.setErrMSG("EFTPAY",2487) quit

 if 'X.isNull() do {

    	// Recalculate customer name, and balance.
    	set AVAILBAL=""
    	set CUSTNAME=""
    	do DISPLAY^DBSMACRO("@AVAILBAL")
     	}

 // lookup table varaible
 do CHANGE^DBSMACRO("TBL","CH(") 

 // Not permitted to enter both a customer and G/L number.
 if 'X.isNull(),'fEFTPAY.crctacct.isNull() do Runtime.setErrMSG("EFTPAY",2045) quit  

 // Correct G/L account is the same as originating G/L account
 if (fEFTPAY.ttype > 1),(X = fEFTPAY.cid) do Runtime.setErrMSG("EFTPAY",2487) quit

 if 'X.isNull() do { 

  	// Recalculate customer name, and balance.
	set AVAILBAL=""
  	set CUSTNAME=""
	do DISPLAY^DBSMACRO("@AVAILBAL")
	do DISPLAY^DBSMACRO("@CUSTNAME")

  	/*
	    Protect the partial amount field if the account is changing, 
	    and force a re-post.
	*/
	do PROTECT^DBSMACRO("fEFTPAY.PARTAMT")
	do DEFAULT^DBSMACRO("fEFTPAY.REPOST",1)
	do DISPLAY^DBSMACRO("fEFTPAY.REPOST")
	do PROTECT^DBSMACRO("fEFTPAY.REPOST")
	do DEFAULT^DBSMACRO("fEFTPAY.REJECT",0)
	do DISPLAY^DBSMACRO("fEFTPAY.REJECT")
	do PROTECT^DBSMACRO("fEFTPAY.REJECT")
 	}
 if X.isNull() & fEFTPAY.crctacct.isNull() do {

	/*
	    If this field is blank, be sure to replace the balance and 
	    customer name with the original values, and unprotect fields 
	    that need to be available.
	*/
	set AVAILBAL=ORIGBAL
	do DISPLAY^DBSMACRO("@AVAILBAL")
	set CUSTNAME=ORIGCUST
	do DISPLAY^DBSMACRO("@CUSTNAME")
	if PARTPRO.get() '= 1 do UNPROT^DBSMACRO("fEFTPAY.PARTAMT")
	if FLAGPRO.get() '= 1 do UNPROT^DBSMACRO("fEFTPAY.REPOST")
	if FLAGPRO.get() '= 1 do UNPROT^DBSMACRO("fEFTPAY.REJECT")
	}
	

VP3(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) //
  /*--Revision History---------------------------------------------------
    07/24/06  Vanitha Krishnasamy - CR 22163
	      Converted to PSL
    01/08/98  Claude Jeruchim 
              Loop through GLAD global to build lookup table for GLs. 
   --------------------------------------------------------------------- 	
  */

  type Number NUM
  type String CH(), VAL

  set NUM = 1
  set VAL = ""
  type ResultSet rs=Db.select("DESC1","GLAD")
  while rs.next() do {
    set CH(VAL)=rs.getCol("DESC1")
    set NUM=NUM+1
  }
  do CHANGE^DBSMACRO("TBL", "CH(")
VP4(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) //
  type public Boolean ER
  type public Number X

  set ^ZCAJ(1) = fEFTPAY.amount - fEFTPAY.totpaid - fEFTPAY.tpaawcmp
  
  // Partial payment exceeds allowable amount
  if (fEFTPAY.amount - fEFTPAY.totpaid - fEFTPAY.tpaawcmp) < X do { quit:ER
	do Runtime.setErrMSG("EFTPAY",2504) quit
	}  
VP5(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) //
 type public Boolean X
 
 if X = 1 do DEFAULT^DBSMACRO("fEFTPAY.REPOST",0) 
 do DISPLAY^DBSMACRO("fEFTPAY.REPOST") quit
VP6(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP) //
  type public Boolean X
  type public RecordEFTPAY fEFTPAY
	 
  if X = 1 do DEFAULT^DBSMACRO("fEFTPAY.REJECT",0)
  do DISPLAY^DBSMACRO("fEFTPAY.REJECT")
  if X = 1 do {
  	do DEFAULT^DBSMACRO("fEFTPAY.RETCODE","")
	do DISPLAY^DBSMACRO("fEFTPAY.RETCODE")
	do PROTECT^DBSMACRO("fEFTPAY.RETCODE")
	}
  if X = 0 do UNPROT^DBSMACRO("fEFTPAY.RETCODE")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEFTPAY fEFTPAY
 type Public RecordCIF CIF
 type Public RecordDEP DEP
 do VPR(.fEFTPAY,.CIF,.DEP)
 do VDA1(.fEFTPAY,.CIF,.DEP)
 do ^DBSPNT()
 quit

VW(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)
 do VDA1(.fEFTPAY,.CIF,.DEP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)
 do VDA1(.fEFTPAY,.CIF,.DEP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEFTPAY fEFTPAY
 type Public RecordCIF CIF
 type Public RecordDEP DEP
 do VDA1(.fEFTPAY,.CIF,.DEP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordEFTPAY fEFTPAY
 if sn="EFTPAY" do vSET1(.fEFTPAY,di,X)
 type Public RecordCIF CIF
 if sn="CIF" do vSET2(.CIF,di,X)
 type Public RecordDEP DEP
 if sn="DEP" do vSET3(.DEP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordEFTPAY fEFTPAY,di,X)
 do fEFTPAY.setAuditFlag(1)
 set fEFTPAY.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordCIF CIF,di,X)
 do CIF.setAuditFlag(1)
 set CIF.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET3(RecordDEP DEP,di,X)
 do DEP.setAuditFlag(1)
 set DEP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordEFTPAY fEFTPAY
 if fid="EFTPAY" quit $$vREAD1(.fEFTPAY,di)
 type Public RecordCIF CIF
 if fid="CIF" quit $$vREAD2(.CIF,di)
 type Public RecordDEP DEP
 if fid="DEP" quit $$vREAD3(.DEP,di)
 quit ""
vREAD1(RecordEFTPAY fEFTPAY,di)
 quit fEFTPAY.@di
vREAD2(RecordCIF CIF,di)
 quit CIF.@di
vREAD3(RecordDEP DEP,di)
 quit DEP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 /*---- Revision History ----------------------------------------------

  07/24/06 - Vanitha Krihnasamy - 22163
	     Converted to PSL.

  08/12/99 - Matt Lessig/SCHWARTZC - 34459
             Added CID to where clause of the select for the reject
 	     reason. 
 ----------------------------------------------------------------------
 */

 type public String RRDESC

 type Number RJRES
 
 set RJRES = fEFTPAY.rejreas

 if RJRES '= "" do { quit
 type RecordUTBLCCRJ utblccrj = Db.getRecord("UTBLCCRJ","RJCODE=:RJRES")
 set RRDESC = utblccrj.rjdesc
 }


 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
 //
VDSPPRE(RecordEFTPAY fEFTPAY,RecordCIF CIF,RecordDEP DEP)  // Display Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 /*----------Revision History-----------------------------------------------
   07/24/06 - Vanitha Krishnasamy - 22163
	      Converted to PSL.

   	    - Created By Claude Jeruchim - 25336
	      Set AVAILBAL to correct balance.
	      Set CUSTNMAE to customer name.
	      Set ORIGBAL and ORIGCUST to hold original values, in case 
	      they are changed when the account number has changed.
 --------------------------------------------------------------------------
 */
 
 type public Boolean gl
 type public Number AVAILBAL, CID, ORIGBAL
 type public String CUSTNAME, ORIGCUST
 
 if gl set ORIGCUST = "",ORIGBAL = "",CUSTNAME = "" quit

 // Set AVAILBAL to correct balance.
 type RecordDEP dep = Db.getRecord("DEP","CID=:CID")
 set AVAILBAL = dep.balavl
 set ORIGBAL = AVAILBAL

 // Set CUSTNAME to customer name
 type RecordCIF cif=Db.getRecord("CIF","ACN=:dep.acn")
 set CUSTNAME = cif.nam
 set ORIGCUST = CUSTNAME
 
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
