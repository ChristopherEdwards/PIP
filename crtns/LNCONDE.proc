public LNCONDE(RecordLN ln)	// Loan Conversion DAYEND
	/*
	       ORIG:  Kathy Bradley (4646) - 5/10/88
	       DESC:

          ARGUMENTS:
                . ln    Loan Account Object     TYP=RecordLN/REQ/MECH=REF

	  --- Revision History --------------------------------------------------

	   05/17/05 - KELLYP - CR 15268
	   	      Modified ARND section to remove references to the
	   	      DAYENDARFX table which has been obsoleted.  Changes to
	   	      tiklacn.arnd will update the index so the extra code for
	   	      building the DAYENDARFX entries was unnecessary.

	   03/03/05 - KELLYP - CR 14452
	   	      Modified procedure to conform to current PSL standards and
	   	      removed pre-2003 revision history.

	   01/21/04 - Spier 7985
	   	      Correct compiling error by removing code dealing with 
	   	      DAYENDBNDT and DAYENDPTS which were removed
	   	      
	   01/07/04 - Spier 7501
	   	      Removed build of table DAYENDPOLO. The column used for
	   	      this table is a part of an index for the same global location
	   	      so it would always be setup by the index.
		      Removed the build of table DAYENDRAOFF by updating the column
		      RANDOFF which is indexed.

	   12/09/03 - CARROLLJ - CR7239
		      Added #ACCEPT prior to xecure command to correct compile
		      errors.
	*/

	catch vError {
		type String ET,RM
		set ET=vError.type
		if ET["%GTM-" do { quit
			do ZE^UTLERR
			do LOGERR
			}
		set ET=ET_"-"_vError.thrownAt
		set RM=vError.description
		do LOGERR
		}

	type Number CID
	type String CLS
	
	set CID=ln.cid
	set CLS="L"
	do ARND(.ln)

	quit


ARND(RecordLN ln)	// Next Account Review
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type public Boolean ER
	type public Number CID
	
	type Date JD
	
	type DbSet tiklds=Db.selectDbSet("TIKLACN","CID=:CID")
	while tiklds.next() do { quit:ER
		
		type RecordTIKLACN tiklacn=tiklds.getRecord("TIKLACN")

		// Next Occurrence Date
		set JD=tiklacn.arnd
		
		if 'JD quit

		if 'tiklacn.arf.isNull(),tiklacn.arnd<%SystemDate do { quit:ER
			for  set JD=JD.nextFreqDate(tiklacn.arf) quit:ER  if JD>%SystemDate set tiklacn.arnd=JD quit
			do tiklacn.bypassSave()
			}
		}

	do CPN(.ln)

	quit


CPN(RecordLN ln)	// Coupon production date/Coupon production xref
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Boolean ER
	type Public Number CID
	
	type Date JD
	
	// Coupon Book Production Next Date
	set JD=ln.cbpnd
	
	/*
	  Coupon Book Production Methods:
		0 = Do Not Produce
		1 = Produce Based on Original Number of Payments
	  	2 = Produce Based on Payment/Analysis Change Frequencies
		3 = Base Production on Production Frequency
	*/
	if 'JD!(ln.cbmet=0) do APCND(.ln) quit

	if JD<%SystemDate do { quit:ER
		// Coupon Book Production Frequency
		if ln.cbfre.isNull() quit
		for  set JD=$$NJD^UFRE(JD,ln.cbfre) quit:ER  if JD>%SystemDate set ln.cbpnd=JD quit
		do ln.bypassSave()
		}

	/*
	  Valid values for LNCPN.PMET (Production Type):
	  	1 = Mass Issue, Based on Production Frequency
		2 = Mass Issue, Based on Analysis/Payment Changes
		3 = New Account
		4 = Reissue
	*/

	// Manual Coupon Order - Next Date
	if ln.cbond do {
		// Create Coupon Production DAYEND entry
		type RecordLNCPN lncpn=Class.new("RecordLNCPN")
		set lncpn.pnd=ln.cbond
		if ln.cbond=ln.odt set lncpn.pmet=3
		else  set lncpn.pmet=4
		set lncpn.cid=CID
		do lncpn.bypassSave()
		}
	
	if ln.cbmet=2!(ln.cbmet=3) do {
		// Create Coupon Production DAYEND entry
		type RecordLNCPN lncpn=Class.new("RecordLNCPN")
		set lncpn.pnd=JD
		if ln.cbmet=2 set lncpn.pmet=2
		else  set lncpn.pmet=1
		set lncpn.cid=CID
		do lncpn.bypassSave()
		}

	do APCND(.ln) 
	quit


APCND(RecordLN ln)	// Escrow analysis/offset
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Boolean ER
	
	type Date JD
	
	// Escrow Analysis Pmt Change Next Date
	set JD=ln.apcnd
	if JD,JD<%SystemDate do { quit:ER
		// Analysis Frequency
		if ln.anfre.isNull() quit
		for  set JD=$$NJD^UFRE(JD,ln.anfre) quit:ER  if JD>%SystemDate set ln.apcnd=JD quit
		do ln.bypassSave()
		}

	do ICHND(.ln)
	quit	


ICHND(RecordLN ln)	// Interest change/offset
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Boolean ER
	
	type Date JD
	type Number INTOFF
	type String FRE
	
	new FRE,JD,INTOFF
	set JD=ln.ichnd 
	if 'JD do LCHG(.ln) quit
	
	// Int/Div Check Frequency
	set FRE=ln.intfre

	if JD<%SystemDate do { quit:ER
		for  set JD=$$NJD^UFRE(JD,FRE) quit:ER  if JD>%SystemDate set ln.ichnd=JD quit
		do ln.bypassSave()
		}

	// Int/Div Review Offset
	set INTOFF=ln.intoff 
	if 'INTOFF do LCHG(.ln) quit

	S JD=$$NXDT^BCHVRCHG(%SystemDate,JD,FRE,INTOFF)
	set ln.intoffdt=JD

	do LCHG(.ln)
	quit


LCHG(RecordLN ln)	// Late Charge Due
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Date XTJD
	type Public Number CID
	
	type Date JD
	
	set JD=ln.lcad
	if 'JD do PCHND(.ln) quit
	
	/* 
	 Set up late charge dayend file during manual loan conversions so that
	 late charges will be assessed as of the first day of the conversion.
	*/
	
	if XTJD.get().isNull() set XTJD=%SystemDate

	type RecordDAYENDLCHG dayendlchg=Class.new("RecordDAYENDLCHG")
	set dayendlchg.tjd=XTJD
	set dayendlchg.cid=CID
	do dayendlchg.bypassSave()

	do PCHND(.ln)

	quit


PCHND(RecordLN ln)	// Payment change/offset
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Boolean ER
	
	type Date JD
	type Number PCOFF
	type String FRE
	
	// Payment Change Next Date
	set JD=ln.pchnd
	if 'JD do RAND(.ln) quit

	// Payment Change Frequency
	set FRE=ln.pcfre

	if JD<%SystemDate do { quit:ER
		for  set JD=$$NJD^UFRE(JD,FRE) quit:ER  if JD>%SystemDate set ln.pchnd=JD quit
		}	


	// Payment Change Date Offset
	set PCOFF=ln.pcoff if 'PCOFF do RAND(.ln) do ln.bypassSave() quit

	set JD=$$NXDT^BCHVRCHG(%SystemDate,JD,FRE,PCOFF)

	do RAND(.ln)
	do ln.bypassSave()
	
	quit


RAND(RecordLN ln)	// Re-amortization/offset
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Boolean ER
	type Public Number CID,PCOFF
	
	type Date JD
	
	// Re-amortization - Next Date
	set JD=ln.rand
	if 'JD do PTS(.ln) quit

	if JD<%SystemDate do { quit:ER
		for  set JD=$$NJD^UFRE(JD,ln.rafre) quit:ER  if JD>%SystemDate set ln.rand=JD quit
		}		

	// Create Re-amortization DAYEND entry, if necessary
	if 'Db.isDefined("DAYENDRAND","RAND=:JD,CID=:CID") do {
		type RecordDAYENDRAND dayendrand=Class.new("RecordDAYENDRAND")
		set dayendrand.rand=JD
		set dayendrand.cid=CID
		do dayendrand.bypassSave()
		}
	
	set JD=JD-PCOFF.get()
	set ln.randoff=JD

	do PTS(.ln)
	do ln.bypassSave()
	
	quit	


PTS(RecordLN ln)	// Next Points Cycling Flag
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Boolean ER
	type Public Number CID
	
	// Capitalized Points Flag
	if 'ln.ptsp do DLD(.ln) quit
	
	type Date JD
	type String TYP
	
	set TYP="PTS"
	type RecordLNCYCPTS lncycpts=Db.getRecord("LNCYCPTS","CID=:CID,TYP=:TYP")
	set JD=lncycpts.nxadt
	if 'JD do DLD(.ln) quit
	if JD<%SystemDate do { quit:ER
		for  set JD=$$NJD^UFRE(JD,lncycpts.freq) quit:ER  if JD>%SystemDate set lncycpts.nxadt=JD quit
		do lncycpts.bypassSave()
		}

	do DLD(.ln)
	
	quit


DLD(RecordLN ln)	// Next Dealer Cycling Flag
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Boolean ER
	type Public Number CID
	
	// Dealer Discount Flag
	if 'ln.dlrp do MSC(.ln) quit
	
	type Date JD
	type String PAYEE,PLAN,TYP
	
	set TYP="DLD"

	type RecordLNCYCDLD lncycdld=Db.getRecord("LNCYCDLD","CID=:CID,TYP=:TYP")
	set JD=lncycdld.nxadt
	if 'JD do MSC(.ln) quit

	if JD<%SystemDate do { quit:ER
		for  set JD=$$NJD^UFRE(JD,lncycdld.freq) quit:ER  if JD>%SystemDate set lncycdld.nxadt=JD quit
		do lncycdld.bypassSave()
		}

	// Payee Code
	set PAYEE=lncycdld.payee
	set PLAN=+lncycdld.plan

	do AOAMO
	do MSC(.ln)
	
	quit

MSC(RecordLN ln)	// Next Miscellaneous Cycling Flag
	/*

	ARGUMENTS:
		. ln	Loan Account Object	TYP=RecordLN/REQ/MECH=REF
	*/
	
	type Public Boolean ER
	type Public Number CID

	// Misc Add-on Flag
	if 'ln.mscp quit
	
	type Date JD
	type String PAYEE,PLAN,TYP
	
	set TYP="MSC"
	type RecordLNCYCMSC lncycmsc=Db.getRecord("LNCYCMSC","CID=:CID,TYP=:TYP")
	set JD=lncycmsc.nxadt 
	if 'JD quit
	if JD<%SystemDate do { quit:ER
		for  set JD=$$NJD^UFRE(JD,lncycmsc.freq) quit:ER  if JD>%SystemDate set lncycmsc.nxadt=JD quit
		do lncycmsc.bypassSave()
		}

	set PAYEE=lncycmsc.payee
	set PLAN=+lncycmsc.plan

	do AOAMO

        quit


AOAMO	// Create DAYEND Loan Add-on/ Net Deferred Fees entry, if necessary
	
	type Public Date JD
	type Public Number CID
	type Public String PAYEE,PLAN,TYP
	
	type RecordDAYENDAOAMO dayendao=Db.getRecord("DAYENDAOAMO","NXADT=:JD,TYP=:TYP,PAYEE=:PAYEE,PLAN=:PLAN,CID=:CID",1)
	if 'dayendao.getMode() do dayendao.bypassSave()

	quit


LOGERR	// Log error in exception file
 
 	type Public Number CID,%ZTSEQ
 	type Public String ET
 
	// Manual Loan Conversion	
	do LOG^UTLEXC($T(+0),"*",$$^MSG(3946),CID.get(),%ZTSEQ.get(),ET.get(),"")
	kill ET,%ZTSEQ
	
	quit

vSIG()	quit "60037^59689^Pat Kelly^8702"	// Signature - LTD^TIME^USER^SIZE
