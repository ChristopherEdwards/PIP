V01S533(%ProcessMode,RecordSCATBL fSCATBL)   //SCA - U - SID= <SCATBL> System Function Table
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:52 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="SCATBL",VPGM=$T(+0),VSNAME="System Function Table"
 set VFSN("SCATBL")="zfSCATBL"
 set vPSL=1
 set KEYS(1)=fSCATBL.FN
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fSCATBL),VDA1(.fSCATBL),^DBSPNT()

 if '%ProcessMode do VNEW(.fSCATBL),VPR(.fSCATBL),VDA1(.fSCATBL)
 if %ProcessMode do VLOD(.fSCATBL) quit:$G(ER)  do VPR(.fSCATBL),VDA1(.fSCATBL)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fSCATBL)
	quit


VNEW(RecordSCATBL fSCATBL) // Initialize arrays if %O=0
 
 do VDEF(.fSCATBL)
 do VLOD(.fSCATBL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordSCATBL fSCATBL)
 if fSCATBL.%SN="" set fSCATBL.%SN="PBS"
 if fSCATBL.BPSFLG="" set fSCATBL.BPSFLG=0
 if fSCATBL.BREAK="" set fSCATBL.BREAK=0
 if fSCATBL.DDP="" set fSCATBL.DDP=0
 if fSCATBL.NOHOST="" set fSCATBL.NOHOST=0
 if fSCATBL.NOREPOST="" set fSCATBL.NOREPOST=0
 if fSCATBL.QUEUE="" set fSCATBL.QUEUE=0
 if fSCATBL.RESTORE="" set fSCATBL.RESTORE=0
 if fSCATBL.SALON="" set fSCATBL.SALON=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordSCATBL fSCATBL) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordSCATBL fSCATBL) // Display screen prompts
 set VO="15||13|"
 set VO(0)="|"
 set VO(1)=$C(3,4,15,0,0,0,0,0,0,0)_"01T Function Name:"
 set VO(2)=$C(3,51,13,1,0,0,0,0,0,0)_"01T System Name:"
 set VO(3)=$C(5,6,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(4)=$C(6,6,13,1,0,0,0,0,0,0)_"01T Program (^):"
 set VO(5)=$C(8,5,14,0,0,0,0,0,0,0)_"01TPre Processor:"
 set VO(6)=$C(9,4,15,0,0,0,0,0,0,0)_"01TPost Processor:"
 set VO(7)=$C(11,2,17,0,0,0,0,0,0,0)_"01TRestrict Restore:"
 set VO(8)=$C(11,44,20,0,0,0,0,0,0,0)_"01TRestrict Interrupts:"
 set VO(9)=$C(12,4,15,0,0,0,0,0,0,0)_"01TValid to Queue:"
 set VO(10)=$C(12,44,20,0,0,0,0,0,0,0)_"01TExclude from Repost:"
 set VO(11)=$C(14,4,70,1,0,0,0,0,0,0)_"01T Answer these prompts if distributed data processing (DDP) is enabled "
 set VO(12)=$C(16,14,20,0,0,0,0,0,0,0)_"01T Valid DDP Function:"
 set VO(13)=$C(17,7,27,0,0,0,0,0,0,0)_"01T Standalone DDP Capability:"
 set VO(14)=$C(18,16,18,0,0,0,0,0,0,0)_"01TNot Valid on Host:"
 set VO(15)=$C(20,15,19,0,0,0,0,0,0,0)_"01TBlock Mode Enabled:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordSCATBL fSCATBL)  // Display screen data
 new V
 //
 set VO="30|16|13|"
 set VO(16)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(17)=$C(3,20,12,2,0,0,0,0,0,0)_"01T"_$E(fSCATBL.FN,1,12)
 set VO(18)=$C(3,65,12,2,0,0,0,0,0,0)_"00T"_$E(fSCATBL.%SN,1,12)
 set VO(19)=$C(5,20,50,2,0,0,0,0,0,0)_"00T"_$E(fSCATBL.DESC,1,50)
 set VO(20)=$C(6,20,61,2,0,0,0,0,0,0)_"00T"_$E(fSCATBL.PGM,1,200)
 set VO(21)=$C(8,20,61,2,0,0,0,0,0,0)_"00T"_$E(fSCATBL.PRP,1,255)
 set VO(22)=$C(9,20,61,2,0,0,0,0,0,0)_"00T"_$E(fSCATBL.POP,1,255)
 set VO(23)=$C(11,20,1,2,0,0,0,0,0,0)_"00L"_$S(fSCATBL.RESTORE:"Y",1:"N")
 set VO(24)=$C(11,65,1,2,0,0,0,0,0,0)_"00L"_$S(fSCATBL.BREAK:"Y",1:"N")
 set VO(25)=$C(12,20,1,2,0,0,0,0,0,0)_"00L"_$S(fSCATBL.QUEUE:"Y",1:"N")
 set VO(26)=$C(12,65,1,2,0,0,0,0,0,0)_"00L"_$S(fSCATBL.NOREPOST:"Y",1:"N")
 set VO(27)=$C(16,35,1,2,0,0,0,0,0,0)_"00L"_$S(fSCATBL.DDP:"Y",1:"N")
 set VO(28)=$C(17,35,1,2,0,0,0,0,0,0)_"00L"_$S(fSCATBL.SALON:"Y",1:"N")
 set VO(29)=$C(18,35,1,2,0,0,0,0,0,0)_"00L"_$S(fSCATBL.NOHOST:"Y",1:"N")
 set VO(30)=$C(20,35,1,2,0,0,0,0,0,0)_"00L"_$S(fSCATBL.BPSFLG:"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordSCATBL fSCATBL)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=14,VPT=1,VPB=20,PGM=$T(+0),DLIB="SYSDEV",DFID="SCATBL"
 set OLNTB=20035
 
 set VFSN("SCATBL")="zfSCATBL"
 //
 // 
	
	
 set %TAB(1)=$C(2,19,12)_"21T12401|1|[SCATBL]FN|^SCATBL(1,"
 set %TAB(2)=$C(2,64,12)_"01T12411|1|[SCATBL]%SN|[SCASYS]"
 set %TAB(3)=$C(4,19,50)_"01T12401|1|[SCATBL]DESC"
 set %TAB(4)=$C(5,19,61)_"01T12404|1|[SCATBL]PGM|||do VP1^V01S533(.fSCATBL)||||||200"
 set %TAB(5)=$C(7,19,61)_"00T12402|1|[SCATBL]PRP|||||||||255"
 set %TAB(6)=$C(8,19,61)_"00T12403|1|[SCATBL]POP|||||||||255"
 set %TAB(7)=$C(10,19,1)_"00L12414|1|[SCATBL]RESTORE"
 set %TAB(8)=$C(10,64,1)_"00L12415|1|[SCATBL]BREAK"
 set %TAB(9)=$C(11,19,1)_"00L12418|1|[SCATBL]QUEUE"
 set %TAB(10)=$C(11,64,1)_"00L12419|1|[SCATBL]NOREPOST"
 set %TAB(11)=$C(15,34,1)_"00L12405|1|[SCATBL]DDP"
 set %TAB(12)=$C(16,34,1)_"00L12406|1|[SCATBL]SALON"
 set %TAB(13)=$C(17,34,1)_"00L12416|1|[SCATBL]NOHOST"
 set %TAB(14)=$C(19,34,1)_"00L12417|1|[SCATBL]BPSFLG"
 do VTBL(.fSCATBL)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordSCATBL fSCATBL) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordSCATBL fSCATBL) //
 do PROG^SCADRV4
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordSCATBL fSCATBL
 do VPR(.fSCATBL)
 do VDA1(.fSCATBL)
 do ^DBSPNT()
 quit

VW(RecordSCATBL fSCATBL)
 do VDA1(.fSCATBL)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordSCATBL fSCATBL)
 do VDA1(.fSCATBL)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordSCATBL fSCATBL
 do VDA1(.fSCATBL)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordSCATBL fSCATBL
 if sn="SCATBL" do vSET1(.fSCATBL,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordSCATBL fSCATBL,di,X)
 do fSCATBL.setAuditFlag(1)
 set fSCATBL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordSCATBL fSCATBL
 if fid="SCATBL" quit $$vREAD1(.fSCATBL,di)
 quit ""
vREAD1(RecordSCATBL fSCATBL,di)
 quit fSCATBL.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
