DEFNDTFL(RecordDAYENDFNDT dayendfndt, String vpar, Boolean vparNorm) // DAYENDFNDT - Newly Funded Accounts by Funding Date Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:14 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (5)              11/22/2003
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = dayendfndt.getMode()                  // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(dayendfndt,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(dayendfndt,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("FDT").exists()!vx("CLS").exists()!vx("GRP").exists()!vx("TYP").exists()!vx("CID").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("DAYENDFNDT",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("DAYENDFNDT","FDT = :dayendfndt.fdt and CLS = :dayendfndt.cls and GRP = :dayendfndt.grp and TYP = :dayendfndt.typ and CID = :dayendfndt.cid") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String FDT
	type public String CLS
	type public String GRP
	type public String TYP
	type public String CID

	type RecordDAYENDFNDT dayendfndt = Db.getRecord("DAYENDFNDT","FDT=:FDT,CLS=:CLS,GRP=:GRP,TYP=:TYP,CID=:CID")
	if (%ProcessMode = 2) do {
		do dayendfndt.setMode(2)

		do DEFNDTFL(dayendfndt,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordDAYENDFNDT dayendfndt

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("DAYENDFNDT","FDT = :dayendfndt.fdt and CLS = :dayendfndt.cls and GRP = :dayendfndt.grp and TYP = :dayendfndt.typ and CID = :dayendfndt.cid") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(dayendfndt)) S ^DAYEND(vobj(dayendfndt,-3),"FNDT",vobj(dayendfndt,-4),vobj(dayendfndt,-5),vobj(dayendfndt,-6),vobj(dayendfndt,-7))=vobj(dayendfndt)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordDAYENDFNDT dayendfndt


	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^DAYEND(vobj(dayendfndt,-3),"FNDT",vobj(dayendfndt,-4),vobj(dayendfndt,-5),vobj(dayendfndt,-6),vobj(dayendfndt,-7))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordDAYENDFNDT dayendfndt

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordDAYENDFNDT dayendfndt

	if dayendfndt.fdt.isNull() do vreqerr("FDT") quit
	if dayendfndt.cls.isNull() do vreqerr("CLS") quit
	if dayendfndt.grp.isNull() do vreqerr("GRP") quit
	if dayendfndt.typ.isNull() do vreqerr("TYP") quit
	if dayendfndt.cid.isNull() do vreqerr("CID") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DAYENDFNDT","MSG",1767,"DAYENDFNDT."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordDAYENDFNDT dayendfndt
	if 'dayendfndt.cid.isNull() set vfkey("^ACN("_""""_dayendfndt.cid_""""_","_50_")")="DAYENDFNDT(CID) -> ACN"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordDAYENDFNDT dayendfndt
	type public Number %O
	type String vERRMSG

	if 'Db.isDefined("ACN",":dayendfndt.cid") set vERRMSG = $$^MSG(8563,"DAYENDFNDT(CID) -> ACN") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordDAYENDFNDT dayendfndt

	set X = dayendfndt.fdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("FDT", vRM) quit
	set X = dayendfndt.cls if 'X.isNull(),'Db.isDefined("STBLCLS","X") set vRM = $$^MSG(1485,X) do vdderr("CLS", vRM) quit
	if dayendfndt.grp.length()>4 set vRM = $$^MSG(1076,4) do vdderr("GRP", vRM) quit
	set X = dayendfndt.typ if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("TYP", vRM) quit
	set X = dayendfndt.cid if 'X.isNull(),'Db.isDefined("ACN","X") set vRM = $$^MSG(1485,X) do vdderr("CID", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DAYENDFNDT","MSG",979,"DAYENDFNDT."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordDAYENDFNDT dayendfndt

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("FDT").exists() set vux("FDT") = vx("FDT")
	if vx("CLS").exists() set vux("CLS") = vx("CLS")
	if vx("GRP").exists() set vux("GRP") = vx("GRP")
	if vx("TYP").exists() set vux("TYP") = vx("TYP")
	if vx("CID").exists() set vux("CID") = vx("CID")
	do vkey(1) set voldkey = dayendfndt.fdt_","_dayendfndt.cls_","_dayendfndt.grp_","_dayendfndt.typ_","_dayendfndt.cid // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = dayendfndt.fdt_","_dayendfndt.cls_","_dayendfndt.grp_","_dayendfndt.typ_","_dayendfndt.cid // Copy new keys into object
	type RecordDAYENDFNDT vnewrec = dayendfndt.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("DAYENDFNDT",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordDAYENDFNDT dayendfndt

	if vux("FDT").exists() set dayendfndt.fdt = vux("FDT").piece("|",i)
	if vux("CLS").exists() set dayendfndt.cls = vux("CLS").piece("|",i)
	if vux("GRP").exists() set dayendfndt.grp = vux("GRP").piece("|",i)
	if vux("TYP").exists() set dayendfndt.typ = vux("TYP").piece("|",i)
	if vux("CID").exists() set dayendfndt.cid = vux("CID").piece("|",i)
	quit
