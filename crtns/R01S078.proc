R01S078	// SCA006 - Standard Exception Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:40 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA006"
	set RN="Standard Exception Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[DAYENDEXC]TJD|[DAYENDEXC]TJD:DISTINCT:NOVAL||S HDATE=X||D|Transaction Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,DESC,RECORDID,RID,RN,RTN,STBL,TIM,UB,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA006",RN="Standard Exception Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA006","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DAYENDEXC]ET#18#80\[DAYENDEXC]MISC#18#80,[DAYENDEXC]BAL#119#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Transaction Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE="DAYENDEXC.TJD=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Standard Exception Report"
		set VBNRINFO("PGM")="R01S078"
		set VBNRINFO("RID")="SCA006"
		set VBNRINFO("TABLES")="DAYENDEXC,DAYENDEXCR"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DAYENDEXC]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DAYENDEXC]""EXC"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DAYENDEXC]RTN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DAYENDEXC]SORT"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DAYENDEXC]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DAYENDEXC.TJD,DAYENDEXC.RTN,DAYENDEXC.SORT,DAYENDEXC.SEQ,DAYENDEXC.ET,DAYENDEXC.MISC,DAYENDEXC.BAL,DAYENDEXCR.DESC,DAYENDEXC.RECID,DAYENDEXC.TIME","DAYENDEXC,DAYENDEXCR","DAYENDEXC.TJD=:VIN1","DAYENDEXC.TJD,DAYENDEXC.RTN,DAYENDEXC.SORT,DAYENDEXC.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10
	set vc1=V.piece($C(9),1)			// DAYENDEXC.TJD
	set vc2=V.piece($C(9),2)			// DAYENDEXC.RTN
	set vc3=V.piece($C(9),3)			// DAYENDEXC.SORT
	set vc4=V.piece($C(9),4)			// DAYENDEXC.SEQ
	set vc5=V.piece($C(9),5)			// DAYENDEXC.ET
	set vc6=V.piece($C(9),6)			// DAYENDEXC.MISC
	set vc7=V.piece($C(9),7)			// DAYENDEXC.BAL
	set vc8=V.piece($C(9),8)			// DAYENDEXCR.DESC
	set vc9=V.piece($C(9),9)			// DAYENDEXC.RECID
	set vc10=V.piece($C(9),10)			// DAYENDEXC.TIME
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public String RTN
 type Public Boolean UB

 set RTN=""
 set UB=0
	quit

VRPOST	// Report post-processor

 type Public String STBL

 kill STBL
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG5 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,VH0=1
	if vb4!(vovc3'=vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc7
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+vc7			// @TOT([DAYENDEXC]BAL)
	quit

VSUM4	// Summary
	type public String %TIM,DESC,I,IOSL,RECORDID,RTN,STBL,TIM,UB,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Total Records for Function:"
	set V=VT(4)					// @CNT(,N,3)
	set VL=VL_$J("",29-VL.length())_$J(V,3)
	do VP1 quit:VFMQ!verror.get()  set V="TOTAL BALANCE:" do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",102-VL.length())_V
	set V=VT(4,1,1)					// @TOT([DAYENDEXC]BAL,)
	set V=$J($FN(V,",",2),12) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V		// @TOT([DAYENDEXC]BAL,)
	do VOM
	set VL="" do VOM
	quit

VHDG5	// Group Header
	type public String %MSKD,%TIM,CONAM,DESC,ER,IOSL,RECORDID,RID,RN,RTN,STBL,TIM,UB,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Effective:"
	set VL=VL_$J("",11-VL.length())_$J($$DAT^%ZM(vc1),10)
	do VOM
	set VL="" do VOM
	set VL=$E(vc2,1,15)
	set V=vc8,VO=V do VP4 quit:VFMQ!verror.get()  set V=$E(V,1,20)
	set VL=VL_$J("",17-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V="SORT:" do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",115-VL.length())_V
	set V=vc3,VO=V set V=$E(V,1,8) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",122-VL.length())_V		// [SYSDEV,DAYENDEXC]SORT
	do VOM
	set VL="" do VOM
	quit

VDTL5	// Detail
	type public String %TIM,DESC,IOSL,RECORDID,RTN,STBL,TIM,UB,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ  set vh(5)=0 do VHDG5 quit:VFMQ

	do VP8 quit:VFMQ!verror.get()  set V=$E(RECORDID,1,40) set VL=" "_V
	do VOM
	set V=vc5,VO=V do VP9 quit:VFMQ!verror.get()  set V=$E(V,1,80) set VL="                 "_V
	do VOM
	set V=vc6,VO=V do VP10 quit:VFMQ!verror.get()  set V=$E(V,1,80) set VL="                 "_V
	do VP11 quit:VFMQ!verror.get()  set V=$J($$TIM^%ZM(TIM),11)
	set VL=VL_$J("",109-VL.length())_V
	set V=vc7,VO=V set V=$J(V,9,2) do VP12 quit:VFMQ!verror.get()
	set VL=VL_$J("",121-VL.length())_V		// [SYSDEV,DAYENDEXC]BAL
	do VOM
	quit

VSUM5	// Summary
	type public String %TIM,DESC,I,IOSL,RECORDID,RTN,STBL,TIM,UB,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(5)=0 do VHDG5 quit:VFMQ

	set VL="" do VOM
	set VL="Total Records for Sort Type:"
	set V=VT(5)					// @CNT(,N,3)
	set VL=VL_$J("",29-VL.length())_$J(V,3)
	do VP13 quit:VFMQ!verror.get()  set V="TOTAL BALANCE:" do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",102-VL.length())_V
	set V=VT(5,1,1)					// @TOT([DAYENDEXC]BAL,)
	set V=$J($FN(V,",",2),12) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V		// @TOT([DAYENDEXC]BAL,)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DESC,RECORDID,RID,RN,RTN,STBL,TIM,UB,VL,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA006)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="                 "_"Error Log"
	do VOM
	set VL="Record ID        Exception                                                                                      Time"
	do VP16 quit:VFMQ!verror.get()  set V="Balance" do VP17 quit:VFMQ!verror.get()
	set VL=VL_$J("",123-VL.length())_V
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - TOTAL BALANCE:

 type Public String TVL4,VL

 set TVL4=VL
	quit

VP2	// Column post-processor - TOTAL BALANCE:

 type Public String TVL4,VL
 type Public Boolean UB

 if 'UB set VL=TVL4
	quit

VP3	// Column post-processor - @TOT([DAYENDEXC]BAL,,E,12)

 type Public String TVL4,VL
 type Public Boolean UB

 if 'UB set VL=TVL4
	quit

VP4	// Column pre-processor - Variable: DESC

	type public String vc2,vc8
 // Bernardinij ARQ45497 (Changed global reference to Sql macro) 
 type Public String RTN,DESC

 set RTN=vc2
 type RecordSCATBL scatbl=Db.getRecord("SCATBL","FN=:RTN",1)
 set DESC=scatbl.desc
 if DESC.length()=0 set DESC=vc8
	quit

VP5	// Column pre-processor - SORT:

 type Public String TVL,VL

 set TVL=VL
	quit

VP6	// Column post-processor - SORT:

	type public String vc3
 type Public String SORT,TVL,VL

 set SORT=vc3
 if SORT="*" set VL=TVL
	quit

VP7	// Column post-processor - [SYSDEV,DAYENDEXC]SORT

 type Public String SORT,V

 if SORT="*" set V=" "
	quit

VP8	// Column pre-processor - Variable: RECORDID

	type public String vc9
 type Public String RECORDID

 set RECORDID=vc9
 if RECORDID.extract(1,1)=" " set RECORDID=RECORDID.extract(2,100)
 if RECORDID?5.N1",".E do {
    // Remove date field, there is some risk here, hopefully we
    // will not remove a significant key
    set RECORDID=RECORDID.piece(",",2,100)
 }
 //
 // Convert commas to spaces.
 set RECORDID=RECORDID.translate(",","  ")
	quit

VP9	// Column pre-processor - [SYSDEV,DAYENDEXC]ET

 type Public String V
 
 if V.find("#")'=0 set V=(V.piece("#",2)).justify(8,0)
 
	quit

VP10	// Column pre-processor - [SYSDEV,DAYENDEXC]MISC

 type Public String STBL,V

 if V.length()=0 quit
 if STBL(V).exists(),STBL(V)="" quit // Not standard error - use text from file
 if STBL(V).exists() set V=STBL(V) quit  // Standard ^STBL("ER" error
 //
 set STBL=STBL.get()+1
 type RecordSTBLER stbler = Db.getRecord("STBLER","KEY=:V",1)
 if stbler.getMode() set STBL(V)=(stbler.rm).piece("|",1),V=STBL(V) quit
 set STBL(V)=""
	quit

VP11	// Column pre-processor - Variable: TIM

	type public String vc10
 type Public Time TIM

 set TIM=vc10
 if TIM.find(",")'=0 set TIM=TIM.piece(",",2)
	quit

VP12	// Column post-processor - [SYSDEV,DAYENDEXC]BAL

 type Public Boolean UB
 type Public String V

 if 'UB set V=""
	quit

VP13	// Column pre-processor - TOTAL BALANCE:

 type Public String TVL3,VL

 set TVL3=VL
	quit

VP14	// Column post-processor - TOTAL BALANCE:

 type Public String TVL3,VL
 type Public Boolean UB

 if 'UB set VL=TVL3
	quit

VP15	// Column post-processor - @TOT([DAYENDEXC]BAL,,E,12)

 type Public String TVL3,VL
 type Public Boolean UB

 if 'UB set VL=TVL3
	quit

VP16	// Column pre-processor - Balance

 type Public String TVL2,VL

 set TVL2=VL
	quit

VP17	// Column post-processor - Balance

	type public String vc1
 type Public String RTN,TVL2,VL
 type Public Boolean UB
 type Date TJD

 set TJD=vc1
 if (TJD="")!(RTN.length()=0) quit
 // Golpirad IB03993 ARQ14408 (correct UNDEF error)
 // Bernardinij ARQ45497 (Changed global reference to Sql macro)
 type RecordDAYENDEXCR dayendexcr=Db.getRecord("DAYENDEXCR","TJD=:TJD,RTN=:RTN",1)
 set UB=dayendexcr.usebal
 if 'UB set VL=TVL2
	quit
