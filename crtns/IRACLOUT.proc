IRACLOUT	 	/*
           ORIG: SCHWARTZC/LEVINTOLR October 01, 1999
           DESC: This new procedure created to process Retirement Plan 
                 Closeouts. It will contain functions to calculate values
		 required by the transaction set. The values that will be 
		 calculated are Closeout Amount (TAMT), Transaction Code (ETC)
		 and Closeout Account Number (CID).
	          
 
	-------Revision History-------------------------------------------------

	03/28/06 - DHANALAKSHMI R- 20368
		   Removed ttx() from argument list of all the section and 
		   declared the same as public to avoid the error while posting
		   close out transaction.
		   Modified the sections TAMTNP and TAMTWP by adding the 
		   definition of acn and changing the scope of the trn.

	01/02/04 - CARROLLJ - CR7658
		   Corrected parameter mismatch error.

	06/27/03 - ZWITKOWITSM - 51349
		   Removed TR() array references.  General clean-up.

	10/01/99 - SCHWARTZC/LEVINTOLR - 31427
		   This new function will get the customer number (ACN) and
		   retirement plan sequence (RPASEQ) from the originating
	           sequence in the TR array. Function IRACID will retrieve
		   the last account number processed (LASTCID) from the
                   secondary transaction containing the largest sequence
		   number for the originating sequence in the TR array.
		   Using ACN, RPASEQ and LASTCID function IRACID will return
		   the next account in the index file XRSPPLID.

	------------------------------------------------------------------------
        */

        quit


public IRACID()

	type public RecordTTX ttx()
        new relcif,origrpa,trseq,done,more

        set (done,more)=0

	if $G(xtrseq)="" set xtrseq="",xtrseq=$O(ttx(xtrseq),-1)

	set trseq=""
	set trseq=$O(ttx(trseq),-1)

	// Get the retirement plan sequence from the original transaction.
	set origrpa=$$FIELD^UTSO(ttx(xtrseq\1).tso,"RPASEQ")

	// Get ACN from TSO
	set ACN=$$FIELD^UTSO(ttx(xtrseq\1).tso,"ACN")

        // set LASTCID=0 if this is the first transaction to be created.
        if xtrseq=trseq set LASTCID=0
        else  set LASTCID=ttx(trseq).cid

        type ResultSet rs1=Db.select("CID","RELCIF","ACN=:ACN AND CID>:LASTCID")
       	for  quit:('rs1.next())!more  do {

        	set NEXTCID=rs1.getCol(1)

		type RecordDEP dep=Db.getRecord("DEP","NEXTCID")
		set rpa=dep.rpaseq

                if origrpa=dep.rpaseq,'done do {
                        set done=1
                        set cid=NEXTCID
                        }
                if dep.rpaseq,done set more=1
                }

        quit NEXTCID


public TRNNP()

	type public RecordTTX ttx()
	new cid

	set cid=$$IRACID

	type RecordACN acn=Db.getRecord("ACN","cid")
	type RecordPRODCTL prodctl=Db.getRecord("PRODCTL",acn.type)

	// Account Closing Transaction Codes not defined
	if prodctl.drtrcinp="" set ER=1,RM=$$^MSG(3991) 

	quit prodctl.drtrcinp


public TRNWP()

	type public RecordTTX ttx()
        new cid

        set cid=$$IRACID

	type RecordACN acn=Db.getRecord("ACN","cid")
	type RecordPRODCTL prodctl=Db.getRecord("PRODCTL",acn.type)

	// Account Closing Transaction Codes not defined
        if prodctl.drtrci="" set ER=1,RM=$$^MSG(3991) quit:ER

	quit prodctl.drtrci


public TAMTNP()

	type public RecordTTX ttx()
	type public RecordTRN trn
	type public RecordDEP acn
	type Public Cache %CACHE()

        new ETC

        set ETC=$$TRNNP

	set acn=Db.getRecord("DEP","CID=:CID")	
	set trn=%CACHE("TRN").getRecord("TRN","ETC")
	set POP=trn.pop
	set ITC=trn.itc

	#ACCEPT DATE=01/02/04;PGM=John Carroll
	xecute POP

	kill acn

	set TAMT=$G(DFT("AMT"))
	if TAMT="" set TAMT=0

        quit TAMT


public TAMTWP()

	type public RecordTTX ttx()
	type public RecordTRN trn
	type public RecordDEP acn
	type Public Cache %CACHE()

        new ETC

	set ETC=$$TRNWP

	set acn=Db.getRecord("DEP","CID=:CID")	
	set trn=%CACHE("TRN").getRecord("TRN","ETC")
	set POP=trn.pop
	set ITC=trn.itc

	#ACCEPT DATE=01/02/04;PGM=John Carroll
	xecute POP

	kill acn

	set TAMT=$G(DFT("AMT"))
	if TAMT="" set TAMT=0

       	quit TAMT


public REPEAT()

 	type public RecordTTX ttx()
        new rs,trsseq,origrpa,CID,CNT,ACN

        set CNT=0

	// Effective date may not be in the future
	if EFD>%SystemDate set ER=1,RM=$$^MSG(876) 

	quit:ER CNT

	set trsseq=""
        set trsseq=$O(ttx(trsseq),-1)
	set origrpa=$$FIELD^UTSO(ttx(trsseq\1).tso,"RPASEQ")       
	set ACN=$$FIELD^UTSO(ttx(trsseq\1).tso,"ACN")	

        type ResultSet rs=Db.select("CID","RELCIF","ACN=:ACN")
	if 'rs.isEmpty() while rs.next() do {

		set CID=rs.getCol(1)  

		type RecordDEP dep=Db.getRecord("DEP","CID")

       		if dep.rpaseq=origrpa set CNT=CNT+1
		}

        quit CNT

vSIG()	quit "60356^30288^Dhanalakshmi R^4505"	// Signature - LTD^TIME^USER^SIZE
