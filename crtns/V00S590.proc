V00S590(%ProcessMode,RecordUTBLEURINT fUTBLEUR)   // -  - SID= <UTBLEURINT> Euro Interest Index Mapping
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:30 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLEURINT",VPGM=$T(+0),VSNAME="Euro Interest Index Mapping"
 set VFSN("UTBLEURINT")="zfUTBLEUR"
 set vPSL=1
 set KEYS(1)=fUTBLEUR.INDEX
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLEUR),VDA1(.fUTBLEUR),^DBSPNT()

 set ER=0 do VSCRPRE(.fUTBLEUR) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLEUR),VPR(.fUTBLEUR),VDA1(.fUTBLEUR)
 if %ProcessMode do VLOD(.fUTBLEUR) quit:$G(ER)  do VPR(.fUTBLEUR),VDA1(.fUTBLEUR)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLEUR)
	quit


VNEW(RecordUTBLEURINT fUTBLEUR) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLEUR)
 do VLOD(.fUTBLEUR)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLEURINT fUTBLEUR)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLEURINT fUTBLEUR) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLEURINT fUTBLEUR) // Display screen prompts
 set VO="3||13|0"
 set VO(0)="7|0"
 set VO(1)=$C(7,18,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(2)=$C(9,9,21,1,0,0,0,0,0,0)_"01T Euro Interest Index:"
 set VO(3)=$C(10,18,12,0,0,0,0,0,0,0)_"01TDescription:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLEURINT fUTBLEUR)  // Display screen data
 new V
 s DESC=$G(DESC)
 s DESCEUR=$G(DESCEUR)
 //
 set VO="6|4|13|0"
 set VO(4)=$C(7,31,40,2,0,0,0,0,0,0)_"01T"_$G(DESC)
 set VO(5)=$C(9,31,20,2,0,0,0,0,0,0)_"00T"_$E(fUTBLEUR.INDEXEUR,1,20)
 set VO(6)=$C(10,31,40,2,0,0,0,0,0,0)_"01T"_$G(DESCEUR)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLEURINT fUTBLEUR)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=3,VPT=7,VPB=10,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLEURINT"
 set OLNTB=10031
 
 set VFSN("UTBLEURINT")="zfUTBLEUR"
 //
 // 
	
	
 set %TAB(1)=$C(6,30,40)_"20T|*DESC|[*]@DESC"
 set %TAB(2)=$C(8,30,20)_"01T12401|1|[UTBLEURINT]INDEXEUR|[INDEX]||do VP1^V00S590(.fUTBLEUR)"
 set %TAB(3)=$C(9,30,40)_"20T|*DESCEUR|[*]@DESCEUR"
 do VTBL(.fUTBLEUR)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLEURINT fUTBLEUR) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLEURINT fUTBLEUR) //
 type public String DESCEUR
 type RecordINDEX index=Db.getRecord("INDEX","INDEX=:X")
 set DESCEUR=index.des
 do DISPLAY^DBSMACRO("@DESCEUR")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLEURINT fUTBLEUR
 do VPR(.fUTBLEUR)
 do VDA1(.fUTBLEUR)
 do ^DBSPNT()
 quit

VW(RecordUTBLEURINT fUTBLEUR)
 do VDA1(.fUTBLEUR)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLEURINT fUTBLEUR)
 do VDA1(.fUTBLEUR)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLEURINT fUTBLEUR
 do VDA1(.fUTBLEUR)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLEURINT fUTBLEUR
 if sn="UTBLEURINT" do vSET1(.fUTBLEUR,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLEURINT fUTBLEUR,di,X)
 do fUTBLEUR.setAuditFlag(1)
 set fUTBLEUR.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLEURINT fUTBLEUR
 if fid="UTBLEURINT" quit $$vREAD1(.fUTBLEUR,di)
 quit ""
vREAD1(RecordUTBLEURINT fUTBLEUR,di)
 quit fUTBLEUR.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLEURINT fUTBLEUR)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type public String DESC
 type RecordINDEX index=Db.getRecord("INDEX","INDEX=:INDEX")
 set DESC=index.des
 do DISPLAY^DBSMACRO("@DESC")
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
