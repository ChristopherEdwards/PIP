R01S423	// SCA460 - Loan Auto-Escrow Extract Function
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:58 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String %NOOPEN
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String DESC
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"

	set RID="SCA460"
	set RN="Loan Auto-Escrow Extract Function"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DESC")="|40|||||||T|Extract Description|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|255||[LN]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN3")="|255||[LN]BRREG|||D EXT^DBSQRY||T|Account Region|||||"
	set %TAB("VIN4")="|255||[LN]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""L"""""":NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN5")="|255||[LN]TYPE|[XCLS2]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN6")="|255||[LN]CID|[LN]CID:DISTINCT:NOVAL||I X'=""ALL"" S %EXT=1,(CLS,ZCLS)=""L"" S:GRP=""ALL"" ZGRP="""" D ^UACN D EXT^DBSQRY||T|Account|||||"

	set %READ="IO/REQ,DESC#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String %NOOPEN
	type public String DESC,VIN2,VIN3,VIN4,VIN5,VIN6
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CID,CLS,CONAM,DUMMY,EXTSEQ,GRP,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vovc1,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA460",RN="Loan Auto-Escrow Extract Function"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA460","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]BOO "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]BRREG "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[LN]GRP "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[LN]CID "_VIN6,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:1 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT="LN.CID,LN.GRP,LN.CLS,LN.CCL,LN.TRACN"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LN",VWHERE,"LN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1
	set vovc1=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1
	set vovc1=vc1
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5
	set vc1=V.piece($C(9),1)			// LN.CID
	set vc2=V.piece($C(9),2)			// LN.GRP
	set vc3=V.piece($C(9),3)			// LN.CLS
	set vc4=V.piece($C(9),4)			// LN.CCL
	set vc5=V.piece($C(9),5)			// LN.TRACN
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3
 type public Number CID,GRP,CLS
 set CID=vc1
 set GRP=vc2
 set CLS=vc3
	quit

VPREAQ	// Pre-processor (after query)

 type public String DESC,DUMMY
 type public Number EXTSEQ

 // Variable DUMMY is used in Detail section.  Only field "displayed" is
 // this variable.  Line is then blank suppressed.
 set DUMMY=""
 
 // Define file extract sequence number
 type ResultSet rs=Db.select("EXTSEQ","LNAEU1","EFD=:TJD","EXTSEQ DESC")
 if rs.next() set EXTSEQ=rs.getCol("EXTSEQ")+1
 else  set EXTSEQ=1
 
 if 'Db.isDefined("LNAEU1","EFD=:TJD,EXTSEQ=:EXTSEQ") do {
 	type RecordLNAEU1 lnaeu1=Class.new("RecordLNAEU1")
 	set lnaeu1.efd=%SystemDate
 	set lnaeu1.extseq=EXTSEQ
 	set lnaeu1.desc=DESC
 	set lnaeu1.fcdate=+$H
 	set lnaeu1.fctime=$H.piece(",",2)
 	do lnaeu1.save()
 	}
	quit

VPREBQ	// Pre-processor (before query)

 //Define %NOOPEN to suppress DEVICE prompt
 type public Number %NOOPEN
 type String IOTYP
 set %NOOPEN=1,IOTYP=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1		// Skip detail
	do VBREAK

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(1)
	type Public String vc1,vovc1
	type Number vb1
	set (vb1)=0
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(1)=VT(1)+1
	quit

VDTL1	// Detail
	type public String %NOOPEN,CID,CLS,DESC,DUMMY,EXTSEQ,GRP,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc2,vc3,vc4,vc5,verror,vh(),vovc1

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$E(DUMMY,1,20) do VP2 quit:VFMQ!verror.get()  set VL=V
	if 'VL.translate(" ").isNull() do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%NOOPEN,%TIM,CID,CLS,CONAM,DESC,DUMMY,EXTSEQ,GRP,RID,RN,VL,vc1,vc2,vc3,vc4,vc5,vovc1,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DUMMY

 ; Variable DUMMY is used so that we have a post-processor to enter the
 ; auto-escrow logic for each account.
 ;
 ; The value of DUMMY is defined in the report pre-processor.  It is defined
 ; as null.  This line is then blank line suppressed.
	quit

VP2	// Column post-processor - Variable: DUMMY

	type public String vc4,vc5
 type public Date TJD
 type public Number CID,EXTSEQ,MCID,TMPCID,TR
 type public String ADJ(),A53,CCL,ER,ZTRTYPE

 type Number LSEQ,MINSEQ,N,PID
 type String ADJP
 
 set ER=ER.get(),MCID=""
 
 // Determine if this account is a master loan or a carve out

 set CCL=vc4

 if CCL do {
  	set A53=$$LN53^DBSRPUTL(CID)
  	set A53=A53.translate($CHAR(9),"|")
  	set MCID=vc5
  	if MCID'="" set TMPCID=MCID
  	else  set TMPCID=CID
  	}
 else  set TMPCID=CID
 
 // Determine if the account has already been processed.  This will
 // only have an effect if this account is a carve out and the master
 // was processed previously, either with a previous carve out or as
 // the master by itself.

 type RecordLNAEU2 lnaeu2=Db.getRecord("LNAEU2","EFD=:TJD,EXTSEQ=:EXTSEQ,CID=:TMPCID",1)
 if lnaeu2.getMode() quit

 type RecordTTX ttx=Class.new("RecordTTX") 

 type RecordLN ln=Db.getRecord("LN","CID=:CID")
 
 set TR=0
 set PID=%ProcessID

 set MINSEQ=0
 type ResultSet rs=Db.select("MAX(SEQ)","DTX","SPD=:TJD AND PID=:PID")
 if rs.next() set MINSEQ=rs.getCol(1)

 //Check included to check for null in MINSEQ since MAX(SEQ) returns an 
 //empty string if there is no record satisfying the condition in oracle
 if MINSEQ="" set MINSEQ=0

 do EXEC^LNAEU(.ln,.ttx,CID,21011,1) quit:ER
 
 if TR=0 quit

 type DbSet dsdtx=Db.selectDbSet("DTX","SPD=:TJD AND PID=:PID AND SEQ>:MINSEQ")
 if 'dsdtx.isEmpty() do {
 	while dsdtx.next() do {
 		type RecordDTX dtx=dsdtx.getRecord("DTX")
 		set LSEQ=dtx.seq
 		
 		type RecordLNAEU4 lnaeu4=Db.getRecord("LNAEU4","EFD=:TJD,EXTSEQ=:EXTSEQ,CID=:TMPCID,TRTYPE=0,TRC=:LSEQ",1)
 		
		set lnaeu4.tlcid=dtx.cid
		set lnaeu4.itc=dtx.itc
		set lnaeu4.etc=dtx.etc
		set lnaeu4.tamt=dtx.tamt
		set lnaeu4.tlo=dtx.tlo
		set lnaeu4.tso=dtx.tso
		set lnaeu4.tcmt=dtx.tcmt
		set lnaeu4.cdt=dtx.cdt
		set lnaeu4.tim=dtx.time
		set lnaeu4.brcde=dtx.brcd
		set lnaeu4.uidt=dtx.uid
		set lnaeu4.spr=dtx.spr
		set lnaeu4.tsb=dtx.tsb
		set lnaeu4.lnerc=dtx.xhs16
		set lnaeu4.crcd=dtx.crcd
		set lnaeu4.rate=dtx.rate
		set lnaeu4.vdt=dtx.vdt
		set lnaeu4.cc=dtx.cc
		set lnaeu4.dir=dtx.dir
		set lnaeu4.chktyp=dtx.chktyp
		set lnaeu4.endbal=dtx.endbal
		set lnaeu4.mult=dtx.mult
		set lnaeu4.bseamt=dtx.bseamt
		set lnaeu4.custcd=dtx.custcd
		set lnaeu4.tresref=dtx.tresref
		set lnaeu4.rty=dtx.rty
		set lnaeu4.msd=dtx.msd
		set lnaeu4.glsc=dtx.glsc
		set lnaeu4.bcrcd=dtx.bcrcd
		set lnaeu4.xpdo=dtx.xpdo
		
		do lnaeu4.save()
 		}
	} 
 
 set N=""
 for  set N=ADJ(N).order() quit:N=""  do {
   	set ADJP=ADJ(N)
   	// If loan account, save appropriate information
   	if N=CID do { quit 
		type RecordLNAEU2 lnaeu2=Db.getRecord("LNAEU2","EFD=:TJD,EXTSEQ=:EXTSEQ,CID=:CID",1)
		set lnaeu2.balcmp=ADJP.piece("|",1)
		set lnaeu2.ladjamt=ADJP.piece("|",2)
		set lnaeu2.adjlbal=ADJP.piece("|",1)+ADJP.piece("|",2)
		set lnaeu2.hseq=ADJP.piece("|",3)
		set lnaeu2.ignore=0
		do lnaeu2.save()
		}

 	if N=MCID do { quit
		type RecordLNAEU2 lnaeu2=Db.getRecord("LNAEU2","EFD=:TJD,EXTSEQ=:EXTSEQ,CID=:MCID",1)
		set lnaeu2.balcmp=ADJP.piece("|",1)
		set lnaeu2.ladjamt=ADJP.piece("|",2)
		set lnaeu2.adjlbal=ADJP.piece("|",1)+ADJP.piece("|",2)
		set lnaeu2.hseq=ADJP.piece("|",3)
		set lnaeu2.ignore=0
		do lnaeu2.save()
		}
 
	// If not the loan account or the master, must be an escrow account
 	set ZTRTYPE=ADJP.piece("|",3)
 
 	type RecordLNAEU3 lnaeu3=Db.getRecord("LNAEU3","EFD=:TJD,EXTSEQ=:EXTSEQ,CID=:TMPCID,TRTYPE=:ZTRTYPE",1)
 	set lnaeu3.bal=ADJP.piece("|",1)
 	set lnaeu3.EADJAMT=ADJP.piece("|",2)
 	set lnaeu3.adjebal=ADJP.piece("|",1)+ADJP.piece("|",2)
 	do lnaeu3.save() 
 	}
	quit
