V00S166(%ProcessMode,RecordEFTREV EFTREV)   // -  - SID= <EFTREVT> Testscreen for populating the dB
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:18 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="EFTREVT",VPGM=$T(+0),VSNAME="Testscreen for populating the dB"
 set VFSN("EFTREV")="zEFTREV"
 set vPSL=1
 set KEYS(1)=EFTREV.DTREC
 set KEYS(2)=EFTREV.BRCD
 set KEYS(3)=EFTREV.CID
 set KEYS(4)=EFTREV.EFTTYPE
 set KEYS(5)=EFTREV.RSEQ
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.EFTREV),VDA1(.EFTREV),^DBSPNT()

 if '%ProcessMode do VNEW(.EFTREV),VPR(.EFTREV),VDA1(.EFTREV)
 if %ProcessMode do VLOD(.EFTREV) quit:$G(ER)  do VPR(.EFTREV),VDA1(.EFTREV)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.EFTREV)
	quit


VNEW(RecordEFTREV EFTREV) // Initialize arrays if %O=0
 
 do VDEF(.EFTREV)
 do VLOD(.EFTREV)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordEFTREV EFTREV)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordEFTREV EFTREV) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEFTREV EFTREV) // Display screen prompts
 set VO="13||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,25,20,0,0,0,0,0,0,0)_"01TPopulation of EFTREV"
 set VO(2)=$C(3,21,19,1,0,0,0,0,0,0)_"01T Recipient Account:"
 set VO(3)=$C(4,17,23,1,0,0,0,0,0,0)_"01T Recipient Institution:"
 set VO(4)=$C(5,33,7,1,0,0,0,0,0,0)_"01TAmount:"
 set VO(5)=$C(6,30,10,1,0,0,0,0,0,0)_"01T Currency:"
 set VO(6)=$C(7,24,16,1,0,0,0,0,0,0)_"01T Effective Date:"
 set VO(7)=$C(8,30,10,1,0,0,0,0,0,0)_"01T Accepted:"
 set VO(8)=$C(9,30,10,1,0,0,0,0,0,0)_"01T Sequence:"
 set VO(9)=$C(10,15,25,1,0,0,0,0,0,0)_"01T Reserved for Future Use:"
 set VO(10)=$C(11,15,25,1,0,0,0,0,0,0)_"01T Reserved for Future Use:"
 set VO(11)=$C(12,24,16,1,0,0,0,0,0,0)_"01T Constant Field:"
 set VO(12)=$C(13,24,16,1,0,0,0,0,0,0)_"01T Variable Field:"
 set VO(13)=$C(14,24,16,1,0,0,0,0,0,0)_"01T Specific Field:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordEFTREV EFTREV)  // Display screen data
 new V
 //
 set VO="25|14|13|"
 set VO(14)=$C(3,41,16,2,0,0,0,0,0,0)_"00T"_$E(EFTREV.RECACCT,1,16)
 set VO(15)=$C(4,41,12,2,0,0,0,0,0,0)_"00T"_$E(EFTREV.RECINST,1,12)
 set V=$S(EFTREV.AMOUNT="":"",1:$J(EFTREV.AMOUNT,0,2)) set VO(16)=$C(5,41,15,2,0,0,0,0,0,0)_"00$"_$S(EFTREV.AMOUNT="":"",1:$J(EFTREV.AMOUNT,0,2))
 set VO(17)=$C(6,41,3,2,0,0,0,0,0,0)_"00T"_$E(EFTREV.CRCD,1,3)
 set VO(18)=$C(7,41,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(EFTREV.EFD)
 set VO(19)=$C(8,41,1,2,0,0,0,0,0,0)_"00L"_$S(EFTREV.ACC:"Y",1:"N")
 set VO(20)=$C(9,41,12,2,0,0,0,0,0,0)_"00N"_EFTREV.SEQ
 set VO(21)=$C(10,41,1,2,0,0,0,0,0,0)_"00N"_EFTREV.AMTTYP
 set VO(22)=$C(11,41,10,2,0,0,0,0,0,0)_"00T"_$E(EFTREV.MET,1,10)
 set VO(23)=$C(12,41,10,2,0,0,0,0,0,0)_"00N"_EFTREV.CONSTANT
 set VO(24)=$C(13,41,10,2,0,0,0,0,0,0)_"00T"_$E(EFTREV.VARIABLE,1,10)
 set VO(25)=$C(14,41,10,2,0,0,0,0,0,0)_"00N"_EFTREV.SPECIFIC
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordEFTREV EFTREV)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=12,VPT=1,VPB=14,PGM=$T(+0),DLIB="SYSDEV",DFID="EFTREV"
 set OLNTB=14041
 
 set VFSN("EFTREV")="zEFTREV"
 //
 // 
	
	
 set %TAB(1)=$C(2,40,16)_"01T12401|1|[EFTREV]RECACCT"
 set %TAB(2)=$C(3,40,12)_"01T12402|1|[EFTREV]RECINST|[UTBLEFTINST]"
 set %TAB(3)=$C(4,40,15)_"01$12403|1|[EFTREV]AMOUNT|||||||2"
 set %TAB(4)=$C(5,40,3)_"01T12404|1|[EFTREV]CRCD|[CRCD]"
 set %TAB(5)=$C(6,40,10)_"01D12408|1|[EFTREV]EFD"
 set %TAB(6)=$C(7,40,1)_"00L12421|1|[EFTREV]ACC"
 set %TAB(7)=$C(8,40,12)_"01N12424|1|[EFTREV]SEQ"
 set %TAB(8)=$C(9,40,1)_"01N12418|1|[EFTREV]AMTTYP|[STBLAMTTYP]"
 set %TAB(9)=$C(10,40,10)_"01T12413|1|[EFTREV]MET|[STBLPAYMET]"
 set %TAB(10)=$C(11,40,10)_"01N12406|1|[EFTREV]CONSTANT|[UTBLECOACT]"
 set %TAB(11)=$C(12,40,10)_"01T12405|1|[EFTREV]VARIABLE"
 set %TAB(12)=$C(13,40,10)_"01N12407|1|[EFTREV]SPECIFIC"
 do VTBL(.EFTREV)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordEFTREV EFTREV) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEFTREV EFTREV
 do VPR(.EFTREV)
 do VDA1(.EFTREV)
 do ^DBSPNT()
 quit

VW(RecordEFTREV EFTREV)
 do VDA1(.EFTREV)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEFTREV EFTREV)
 do VDA1(.EFTREV)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEFTREV EFTREV
 do VDA1(.EFTREV)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordEFTREV EFTREV
 if sn="EFTREV" do vSET1(.EFTREV,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordEFTREV EFTREV,di,X)
 do EFTREV.setAuditFlag(1)
 set EFTREV.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordEFTREV EFTREV
 if fid="EFTREV" quit $$vREAD1(.EFTREV,di)
 quit ""
vREAD1(RecordEFTREV EFTREV,di)
 quit EFTREV.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
