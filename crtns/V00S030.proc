V00S030(%ProcessMode,RecordCRCDMG fCRCDMG,RecordCRCD fCRCD)   // -  - SID= <CRCDMG> Modify Currency Mid-Rate
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:05 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,DELETE",VSID="CRCDMG",VPGM=$T(+0),VSNAME="Modify Currency Mid-Rate"
 set VFSN("CRCD")="zfCRCD",VFSN("CRCDMG")="zfCRCDMG"
 set vPSL=1
 set KEYS(1)=fCRCD.CO
 set KEYS(2)=fCRCD.CRCD
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fCRCDMG,.fCRCD),VDA1(.fCRCDMG,.fCRCD),^DBSPNT()

 if '%ProcessMode do VNEW(.fCRCDMG,.fCRCD),VPR(.fCRCDMG,.fCRCD),VDA1(.fCRCDMG,.fCRCD)
 if %ProcessMode do VLOD(.fCRCDMG,.fCRCD) quit:$G(ER)  do VPR(.fCRCDMG,.fCRCD),VDA1(.fCRCDMG,.fCRCD)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCRCDMG,.fCRCD)
	quit


VNEW(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) // Initialize arrays if %O=0
 
 do VDEF(.fCRCDMG,.fCRCD)
 do VLOD(.fCRCDMG,.fCRCD)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) // Display screen prompts
 set VO="14||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,1,80,1,0,0,0,0,0,0)_"01T                              Currency Margin Table                             "
 set VO(2)=$C(3,14,15,1,0,0,0,0,0,0)_"01T Currency Code:"
 set VO(3)=$C(4,14,15,1,0,0,0,0,0,0)_"01T Customer Code:"
 set VO(4)=$C(4,39,7,0,0,0,0,0,0,0)_"01TDelete:"
 set VO(5)=$C(5,54,10,0,0,0,0,0,0,0)_"01T Mid-rate:"
 set VO(6)=$C(6,4,25,0,0,0,0,0,0,0)_"01TMargins Expressed as a %:"
 set VO(7)=$C(6,54,10,0,0,0,0,0,0,0)_"01TSpot Rate:"
 set VO(8)=$C(9,29,12,0,0,0,0,0,0,0)_"01TCash Margins"
 set VO(9)=$C(9,57,16,0,0,0,0,0,0,0)_"01TNon-Cash Margins"
 set VO(10)=$C(11,3,10,0,0,0,0,0,0,0)_"01TThreshhold"
 set VO(11)=$C(11,24,3,0,0,0,0,0,0,0)_"01TBuy"
 set VO(12)=$C(11,40,4,0,0,0,0,0,0,0)_"01TSell"
 set VO(13)=$C(11,55,3,0,0,0,0,0,0,0)_"01TBuy"
 set VO(14)=$C(11,71,4,0,0,0,0,0,0,0)_"01TSell"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD)  // Display screen data
 new V
 s CRCD=$G(CRCD)
 s CUSTCD=$G(CUSTCD)
 s DELETE=$G(DELETE)
 //
 set VO="36|15|13|"
 set VO(15)=$C(3,30,3,2,0,0,0,0,0,0)_"01T"_$G(CRCD)
 set VO(16)=$C(3,39,40,2,0,0,0,0,0,0)_"01T"_$E(fCRCD.DESC,1,40)
 set VO(17)=$C(4,30,6,2,0,0,0,0,0,0)_"01T"_$G(CUSTCD)
 set VO(18)=$C(4,47,1,2,0,0,0,0,0,0)_"00L"_$S($G(DELETE):"Y",1:"N")
 set V=$S(fCRCD.MIDRATE="":"",1:$J(fCRCD.MIDRATE,0,7)) set VO(19)=$C(5,65,13,2,0,0,0,0,0,0)_"01N"_$S(fCRCD.MIDRATE="":"",1:$J(fCRCD.MIDRATE,0,7))
 set VO(20)=$C(6,30,1,2,0,0,0,0,0,0)_"00L"_$S(fCRCDMG.MARGINT:"Y",1:"N")
 set V=$S(fCRCD.FINSPOT="":"",1:$J(fCRCD.FINSPOT,0,7)) set VO(21)=$C(6,65,13,2,0,0,0,0,0,0)_"01N"_$S(fCRCD.FINSPOT="":"",1:$J(fCRCD.FINSPOT,0,7))
 set V=$S(fCRCDMG.TRESREF="":"",1:$J(fCRCDMG.TRESREF,0,2)) set VO(22)=$C(14,1,15,2,0,0,0,0,0,0)_"00$"_$S(fCRCDMG.TRESREF="":"",1:$J(fCRCDMG.TRESREF,0,2))
 set V=$S(fCRCDMG.BUYCASH="":"",1:$J(fCRCDMG.BUYCASH,0,7)) set VO(23)=$C(14,20,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.BUYCASH="":"",1:$J(fCRCDMG.BUYCASH,0,7))
 set V=$S(fCRCDMG.SELLCASH="":"",1:$J(fCRCDMG.SELLCASH,0,7)) set VO(24)=$C(14,36,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.SELLCASH="":"",1:$J(fCRCDMG.SELLCASH,0,7))
 set V=$S(fCRCDMG.BUYNCASH="":"",1:$J(fCRCDMG.BUYNCASH,0,7)) set VO(25)=$C(14,52,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.BUYNCASH="":"",1:$J(fCRCDMG.BUYNCASH,0,7))
 set V=$S(fCRCDMG.SELLNCASH="":"",1:$J(fCRCDMG.SELLNCASH,0,7)) set VO(26)=$C(14,68,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.SELLNCASH="":"",1:$J(fCRCDMG.SELLNCASH,0,7))
 set V=$S(fCRCDMG.TRESREF2="":"",1:$J(fCRCDMG.TRESREF2,0,2)) set VO(27)=$C(15,1,15,2,0,0,0,0,0,0)_"00$"_$S(fCRCDMG.TRESREF2="":"",1:$J(fCRCDMG.TRESREF2,0,2))
 set V=$S(fCRCDMG.BUYCASH2="":"",1:$J(fCRCDMG.BUYCASH2,0,7)) set VO(28)=$C(15,20,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.BUYCASH2="":"",1:$J(fCRCDMG.BUYCASH2,0,7))
 set V=$S(fCRCDMG.SELLCASH2="":"",1:$J(fCRCDMG.SELLCASH2,0,7)) set VO(29)=$C(15,36,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.SELLCASH2="":"",1:$J(fCRCDMG.SELLCASH2,0,7))
 set V=$S(fCRCDMG.BUYNCSH2="":"",1:$J(fCRCDMG.BUYNCSH2,0,7)) set VO(30)=$C(15,52,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.BUYNCSH2="":"",1:$J(fCRCDMG.BUYNCSH2,0,7))
 set V=$S(fCRCDMG.SELLNCSH2="":"",1:$J(fCRCDMG.SELLNCSH2,0,7)) set VO(31)=$C(15,68,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.SELLNCSH2="":"",1:$J(fCRCDMG.SELLNCSH2,0,7))
 set V=$S(fCRCDMG.TRESREF3="":"",1:$J(fCRCDMG.TRESREF3,0,2)) set VO(32)=$C(16,1,15,2,0,0,0,0,0,0)_"00$"_$S(fCRCDMG.TRESREF3="":"",1:$J(fCRCDMG.TRESREF3,0,2))
 set V=$S(fCRCDMG.BUYCASH3="":"",1:$J(fCRCDMG.BUYCASH3,0,7)) set VO(33)=$C(16,20,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.BUYCASH3="":"",1:$J(fCRCDMG.BUYCASH3,0,7))
 set V=$S(fCRCDMG.SELLCASH3="":"",1:$J(fCRCDMG.SELLCASH3,0,7)) set VO(34)=$C(16,36,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.SELLCASH3="":"",1:$J(fCRCDMG.SELLCASH3,0,7))
 set V=$S(fCRCDMG.BUYNCSH3="":"",1:$J(fCRCDMG.BUYNCSH3,0,7)) set VO(35)=$C(16,52,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.BUYNCSH3="":"",1:$J(fCRCDMG.BUYNCSH3,0,7))
 set V=$S(fCRCDMG.SELLNCSH3="":"",1:$J(fCRCDMG.SELLNCSH3,0,7)) set VO(36)=$C(16,68,13,2,0,0,0,0,0,0)_"00N"_$S(fCRCDMG.SELLNCSH3="":"",1:$J(fCRCDMG.SELLNCSH3,0,7))
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=22,VPT=1,VPB=16,PGM=$T(+0),DLIB="SYSDEV",DFID="CRCDMG",VSCRPP=1,VSCRPP=1
 set OLNTB=16068
 
 set VFSN("CRCD")="zfCRCD",VFSN("CRCDMG")="zfCRCDMG"
 //
 // 
	
	
 set %TAB(1)=$C(2,29,3)_"21T|*CRCD|[*]@CRCD|[CRCD]"
 set %TAB(2)=$C(2,38,40)_"20T12401|1|[CRCD]DESC"
 set %TAB(3)=$C(3,29,6)_"21T|*CUSTCD|[*]@CUSTCD|^UTBL(""CC"","
 set %TAB(4)=$C(3,46,1)_"00L|*DELETE|[*]@DELETE|||do VP1^V00S030(.fCRCDMG,.fCRCD)"
 set %TAB(5)=$C(4,64,13)_"20N12401|1|[CRCD]MIDRATE|||||.0000001||7"
 set %TAB(6)=$C(5,29,1)_"00L12401|1|[CRCDMG]MARGINT"
 set %TAB(7)=$C(5,64,13)_"20N12408|1|[CRCD]FINSPOT|||||.0000001||7"
 set %TAB(8)=$C(13,0,15)_"01$12402|1|[CRCDMG]TRESREF|||do VP2^V00S030(.fCRCDMG,.fCRCD)|do VP3^V00S030(.fCRCDMG,.fCRCD)|||2"
 set %TAB(9)=$C(13,19,13)_"01N12403|1|[CRCDMG]BUYCASH|||||||7"
 set %TAB(10)=$C(13,35,13)_"01N12404|1|[CRCDMG]SELLCASH|||||||7"
 set %TAB(11)=$C(13,51,13)_"01N12405|1|[CRCDMG]BUYNCASH|||||||7"
 set %TAB(12)=$C(13,67,13)_"01N12406|1|[CRCDMG]SELLNCASH|||||||7"
 set %TAB(13)=$C(14,0,15)_"00$12407|1|[CRCDMG]TRESREF2|||do VP4^V00S030(.fCRCDMG,.fCRCD)||||2"
 set %TAB(14)=$C(14,19,13)_"00N12408|1|[CRCDMG]BUYCASH2||||do VP5^V00S030(.fCRCDMG,.fCRCD)|||7"
 set %TAB(15)=$C(14,35,13)_"00N12409|1|[CRCDMG]SELLCASH2||||do VP6^V00S030(.fCRCDMG,.fCRCD)|||7"
 set %TAB(16)=$C(14,51,13)_"00N12410|1|[CRCDMG]BUYNCSH2||||do VP7^V00S030(.fCRCDMG,.fCRCD)|||7"
 set %TAB(17)=$C(14,67,13)_"00N12413|1|[CRCDMG]SELLNCSH2||||do VP8^V00S030(.fCRCDMG,.fCRCD)|||7"
 set %TAB(18)=$C(15,0,15)_"00$12414|1|[CRCDMG]TRESREF3|||do VP9^V00S030(.fCRCDMG,.fCRCD)||||2"
 set %TAB(19)=$C(15,19,13)_"00N12415|1|[CRCDMG]BUYCASH3||||do VP10^V00S030(.fCRCDMG,.fCRCD)|||7"
 set %TAB(20)=$C(15,35,13)_"00N12416|1|[CRCDMG]SELLCASH3||||do VP11^V00S030(.fCRCDMG,.fCRCD)|||7"
 set %TAB(21)=$C(15,51,13)_"00N12417|1|[CRCDMG]BUYNCSH3||||do VP12^V00S030(.fCRCDMG,.fCRCD)|||7"
 set %TAB(22)=$C(15,67,13)_"00N12418|1|[CRCDMG]SELLNCSH3||||do VP13^V00S030(.fCRCDMG,.fCRCD)|||7"
 do VTBL(.fCRCDMG,.fCRCD)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordCRCDMG fCRCDMG
 type Public RecordCRCD fCRCD
 do VSPP1(.fCRCDMG,.fCRCD)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD)
 do DEFAULT^DBSMACRO("CRCDMG.DLM",TJD,"1","0","0")

 do DEFAULT^DBSMACRO("CRCDMG.TLM",%CurrentTime,"1","0","0")

 quit

 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if X do GOTO^DBSMACRO("END")

 quit

VP2(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if X="" do { quit
	new Y
	set Y=fCRCDMG.TRESREF2
	if 'Y do { quit
		do GOTO^DBSMACRO("END")
		do DELETE^DBSMACRO("CRCDMG.TRESREF","1","0")
		do DELETE^DBSMACRO("CRCDMG.BUYCASH","1","0")
		do DELETE^DBSMACRO("CRCDMG.SELLCASH","1","0")
		do DELETE^DBSMACRO("CRCDMG.BUYNCASH","1","0")
		do DELETE^DBSMACRO("CRCDMG.SELLNCASH","1","0")

		do DEFAULT^DBSMACRO("CRCDMG.TRESREF",fCRCDMG.tresref2,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.BUYCASH",fCRCDMG.buycash2,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.SELLCASH",fCRCDMG.sellcash2,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.BUYNCASH",fCRCDMG.buyncsh2,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.SELLNCASH",fCRCDMG.sellncsh2,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.TRESREF2",fCRCDMG.tresref3,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.BUYCASH2",fCRCDMG.buycash3,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.SELLCASH2",fCRCDMG.sellcash3,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.BUYNCSH2",fCRCDMG.buyncsh3,"1","0","0")
		do DEFAULT^DBSMACRO("CRCDMG.SELLNCSH2",fCRCDMG.sellncsh3,"1","0","0")

		do DELETE^DBSMACRO("CRCDMG.TRESREF3","1","0")
		do DELETE^DBSMACRO("CRCDMG.BUYCASH3","1","0")
		do DELETE^DBSMACRO("CRCDMG.SELLCASH3","1","0")
		do DELETE^DBSMACRO("CRCDMG.BUYNCSH3","1","0")
		do DELETE^DBSMACRO("CRCDMG.SELLNCSH3","1","0")
		}
	set NI=NI-1
	}
 quit

VP3(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 //Allow deletion in order to shuffle higher tiers
 if %ProcessMode set E5=0
 quit

VP4(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if X="" do { quit
	new Y
	set Y=fCRCDMG.tresref3
	if 'Y do { quit
		do DELETE^DBSMACRO("CRCDMG.TRESREF2","1","0")
		do DELETE^DBSMACRO("CRCDMG.BUYCASH2","1","0")
		do DELETE^DBSMACRO("CRCDMG.SELLCASH2","1","0")
		do DELETE^DBSMACRO("CRCDMG.BUYNCSH2","1","0")
		do DELETE^DBSMACRO("CRCDMG.SELLNCSH2","1","0")
		}
	do DEFAULT^DBSMACRO("CRCDMG.TRESREF2",fCRCDMG.tresref3,"1","0","0")
	do DEFAULT^DBSMACRO("CRCDMG.BUYCASH2",fCRCDMG.buycash3,"1","0","0")
	do DEFAULT^DBSMACRO("CRCDMG.SELLCASH2",fCRCDMG.sellcash3,"1","0","0")
	do DEFAULT^DBSMACRO("CRCDMG.BUYNCSH2",fCRCDMG.buyncsh3,"1","0","0")
	do DEFAULT^DBSMACRO("CRCDMG.SELLNCSH2",fCRCDMG.sellncsh3,"1","0","0")
	do DELETE^DBSMACRO("CRCDMG.TRESREF3","1","0")
	do DELETE^DBSMACRO("CRCDMG.BUYCASH3","1","0")
	do DELETE^DBSMACRO("CRCDMG.SELLCASH3","1","0")
	do DELETE^DBSMACRO("CRCDMG.BUYNCSH3","1","0")
	do DELETE^DBSMACRO("CRCDMG.SELLNCSH3","1","0")
	set NI=NI-1
	}
 // Must enter Threshholds in ascending order
 if X'>fCRCDMG.tresref set ER=1,RM=$$^MSG(8637)

 quit

VP5(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if fCRCDMG.tresref2 do CHANGE^DBSMACRO("REQ","")
 quit

VP6(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if fCRCDMG.tresref2 do CHANGE^DBSMACRO("REQ","")

 quit

VP7(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if fCRCDMG.tresref2 do CHANGE^DBSMACRO("REQ","")
 quit

VP8(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if fCRCDMG.tresref2 do CHANGE^DBSMACRO("REQ","")
 quit

VP9(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if X="" do { quit
	do DELETE^DBSMACRO("CRCDMG.TRESREF3","1","0")
	do DELETE^DBSMACRO("CRCDMG.BUYCASH3","1","0")
	do DELETE^DBSMACRO("CRCDMG.SELLCASH3","1","0")
	do DELETE^DBSMACRO("CRCDMG.BUYNCSH3","1","0")
	do DELETE^DBSMACRO("CRCDMG.SELLNCSH3","1","0")
	}
 // Must enter Threshholds in ascending order
 if X'>fCRCDMG.tresref2 set ER=1,RM=$$^MSG(8637) quit

 quit

VP10(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if fCRCDMG.tresref3 do CHANGE^DBSMACRO("REQ","")
 quit

VP11(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if fCRCDMG.tresref3 do CHANGE^DBSMACRO("REQ","")
 quit

VP12(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if fCRCDMG.tresref3 do CHANGE^DBSMACRO("REQ","")
 quit

VP13(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD) //
 if fCRCDMG.tresref3 do CHANGE^DBSMACRO("REQ","")
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCRCDMG fCRCDMG
 type Public RecordCRCD fCRCD
 do VPR(.fCRCDMG,.fCRCD)
 do VDA1(.fCRCDMG,.fCRCD)
 do ^DBSPNT()
 quit

VW(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD)
 do VDA1(.fCRCDMG,.fCRCD)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCRCDMG fCRCDMG,RecordCRCD fCRCD)
 do VDA1(.fCRCDMG,.fCRCD)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCRCDMG fCRCDMG
 type Public RecordCRCD fCRCD
 do VDA1(.fCRCDMG,.fCRCD)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCRCDMG fCRCDMG
 if sn="CRCDMG" do vSET1(.fCRCDMG,di,X)
 type Public RecordCRCD fCRCD
 if sn="CRCD" do vSET2(.fCRCD,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCRCDMG fCRCDMG,di,X)
 do fCRCDMG.setAuditFlag(1)
 set fCRCDMG.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordCRCD fCRCD,di,X)
 do fCRCD.setAuditFlag(1)
 set fCRCD.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCRCDMG fCRCDMG
 if fid="CRCDMG" quit $$vREAD1(.fCRCDMG,di)
 type Public RecordCRCD fCRCD
 if fid="CRCD" quit $$vREAD2(.fCRCD,di)
 quit ""
vREAD1(RecordCRCDMG fCRCDMG,di)
 quit fCRCDMG.@di
vREAD2(RecordCRCD fCRCD,di)
 quit fCRCD.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
