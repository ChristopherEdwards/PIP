ACCNT		/*
	ORIG: CARROLLJ - 02/06/2001
	DESC: New Account Information

	---- Comments --------------------------------------------------------

	---- Revision History ------------------------------------------------

	12/28/05 - PRAKASHJ - 17423
		   Removed depricated warnings and scoped variables. 

	07/31/02 - CARROLLJ - 50836
		   Added section addtran and removed call to addkey from
		   section UPDTRAN to correct undefined error on %O.  Also
		   removed getOneRow's with Db.getRecord's since the change 
		   will roll forward.

	07/18/02 - CARROLLJ - 50836
		   Added sections UPDTRAN,trancol,and addtran to publish column
		   changes that are done via transaction processing.

	06/20/02 - CARROLLJ - 50873
		   Added section DELREL to send deleted keys to UCS.

	06/10/02 - CARROLLJ - 50575:001
		   Modified section NEWREL to pass XpressSync in the xml
		   message and pass CURRVAL as the CUSTOMER_ID.

	05/30/02 - CARROLLJ - 50575
		   Modified addcol section to correctly set xml message with 
		   updated information.

	04/18/02 - CARROLLJ - 49948
		   Modified adactcol section to add primary owner and enable 
		   bill pay fields.

	03/25/02 - CARROLLJ - 49706
		   Added code to pass old values and modified values.

	11/15/01 - CARROLLJ - 48179
		   Retrofit to V6.1.

	08/20/01 - CARROLLJ - 42494:003
		   Added code to pull servicer ID from CUVAR.UCSSERV.

	08/03/01 - CARROLLJ - 42494:004
		   ACCOUNT_ID & ACCOUNT IDENTIFIER were changed to SERVICER_ID
		   and SERVICER_IDENTTIFIER.


	07/13/01 - CARROLLJ - 42494:20
		   Modified addactcol section to add ACCTNAME.


	*/

	quit

	// I18N=QUIT

NEWACT(RecordACN acn,String xml)  // ACN table for new account

	type String UCSSERV
	
	set xml=""
	set UCSSERV=CUVAR.ucsserv

	do ACTADD("XpressSync")

	set xml=xml_"<TopicInfo type='group' seq='1'>"
	set xml=xml_"<ID>"
	do addtopke("Key name=""PUBLISHER_NAME""","HostPA",xml)
	do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
	set xml=xml_"</ID>"
	set xml=xml_"</TopicInfo>"

	set xml=xml_"<newAccountDetail type='group' seq='1'>"
	set xml=xml_"<ID>"
	do addtopke("Key name=""ACCOUNT_ID""","NEXTVAL",xml)
	do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
	set xml=xml_"</ID>"
	set xml=xml_"<newAccountDetailModValues type='modified'>"
	do adactcol(.acn,.xml)
	set xml=xml_"</newAccountDetailModValues>"
	set xml=xml_"</newAccountDetail>"

	
	// addCustomerToServicer
	set xml=xml_"<addCustomerToServicer type='group' seq='1'>"
	set xml=xml_"<ID>"
	do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
	do addtopke("Key name=""CUSTOMER_ID""","CURRVAL",xml)
	set xml=xml_"</ID>"
	set xml=xml_"<addCustomerToServicerModValues type='modified'>"
	do addkey("SERVICER_CUSTOMER_ID",acn.acn,xml)
	set xml=xml_"</addCustomerToServicerModValues>"
	set xml=xml_"</addCustomerToServicer>"
	
	quit

NEWREL(RecordRELCIF relcif,String xml,String flag) // Update relcif info

	type public String UCSSERV

	// for only a new relcif
	if flag.get() do {
		set xml=""
		set UCSSERV=CUVAR.ucsserv
		do ACTADD("XpressSync")
		set xml=xml_"<TopicInfo type='group' seq='1'>"
		set xml=xml_"<ID>"
		do addtopke("Key name=""PUBLISHER_NAME""","HostPA",xml)
		do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
		set xml=xml_"</ID>"
		set xml=xml_"</TopicInfo>"

		set xml=xml_"<addCustomerToAccount type='group' seq='1'>"
		set xml=xml_"<ID>"
		do addtopke("Key name=""CUSTOMER_ID""","CURRVAL",xml)
		set xml=xml_"</ID>"
		set xml=xml_"<addCustomerToAccountModValues type='modified'>"
		do addkey("SERVICER_ACCOUNT_ID",relcif.cid,xml)
		do addkey("SERVICER_CUSTOMER_ID",relcif.acn,xml)
		do relcif(.relcif,.xml)
		set xml=xml_"</addCustomerToAccountModValues>"
		set xml=xml_"</addCustomerToAccount>"
		set xml=xml_"</XpressSync>"
		}

	if 'flag.get() do {
		set xml=xml_"<addCustomerToAccount type='group' seq='1'>"
		set xml=xml_"<ID>"
		do addtopke("Key name=""CUSTOMER_ID""","CURRVAL",xml)
		set xml=xml_"</ID>"
		set xml=xml_"<addCustomerToAccountModValues type='modified'>"
		do relcif(.relcif,.xml)
		do addkey("SERVICER_CUSTOMER_ID",relcif.acn,xml)
		set xml=xml_"</addCustomerToAccountModValues>"
		set xml=xml_"</addCustomerToAccount>"
		}
	quit
	
UPDACT(RecordACN acn,String xml) // Update account

	type Number change,xmlchg
	type String UCSSERV,string,modstr

	set xml=""
	set xmlchg=0
	set UCSSERV=CUVAR.ucsserv
	do ACTADD("XpressSync")

	// Set Topic and Key info
	set xml=xml_"<TopicInfo type='group' seq='1'>"
	set xml=xml_"<ID>"
	do addtopke("Key name=""PUBLISHER_NAME""","HostPA",xml)
	do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
	set xml=xml_"</ID>"
	set xml=xml_"</TopicInfo>"

	// Update Account Info
	set string=""
	set modstr=""
	set change=0
	do adactcol(.acn,.string)
	if change do {	
		set xml=xml_"<updateAccountDetail type='group' seq='1'>"
		set xml=xml_"<ID>"
		do addtopke("Key name=""ACCOUNT_ID""","CURRVAL",xml)
		set xml=xml_"</ID>"

		set xml=xml_"<updateAccountDetailOrigValues type='original'>"
		do addkey("SERVICER_ACCOUNT_ID",acn.cid,xml)
		do addkey("SERVICER_CUSTOMER_ID",acn.acn,xml)
		set xml=xml_string
		set xml=xml_"</updateAccountDetailOrigValues>"
 
		set xml=xml_"<updateAccountDetailModValues type='modified'>"
		do addkey("SERVICER_ACCOUNT_ID",acn.cid,xml)
		do addkey("SERVICER_CUSTOMER_ID",acn.acn,xml)
		set xml=xml_modstr
		set xml=xml_"</updateAccountDetailModValues>"

		set xml=xml_"</updateAccountDetail>"
		}
	set xml=xml_"</XpressSync>"
	if xmlchg=0 set xml=""
	quit


UPDREL(RecordRELCIF relcif,String xml) // Update Customer to Account
	
	type Number xmlchg,change
	type String UCSSERV,string,modstr

	set xml=""
	set xmlchg=0
	set UCSSERV=CUVAR.ucsserv
	do ACTADD("XpressSync")

	// Set Topic and Key info
	set xml=xml_"<TopicInfo type='group' seq='1'>"
	set xml=xml_"<ID>"
	do addtopke("Key name=""PUBLISHER_NAME""","HostPA",xml)
	do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
	set xml=xml_"</ID>"
	set xml=xml_"</TopicInfo>"

	// Update Customer to Account Info
	set string=""
	set modstr=""
	set change=0
	do relcif(.relcif,.string)
	if change do {	
		set xml=xml_"<updateAccountDetail type='group' seq='1'>"
		set xml=xml_"<ID>"
		do addtopke("Key name=""ACCOUNT_ID""",relcif.cid,xml)
		do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
		set xml=xml_"</ID>"

		set xml=xml_"<updateAccountDetailOrigValues type='original'>"
		do addkey("SERVICER_CUSTOMER_ID",relcif.acn,xml)
		set xml=xml_string
		set xml=xml_"</updateAccountDetailOrigValues>"
 
		set xml=xml_"<updateAccountDetailModValues type='modified'>"
		do addkey("SERVICER_CUSTOMER_ID",relcif.acn,xml)
		set xml=xml_modstr
		set xml=xml_"</updateAccountDetailModValues>"

		set xml=xml_"</updateAccountDetail>"
		}
	set xml=xml_"</XpressSync>"
	if xmlchg=0 set xml=""

	quit


DELREL(RecordRELCIF relcif,String xml)	// Delete Cusomter to Account

	type String UCSSERV

	set xml=""
	set UCSSERV=CUVAR.ucsserv	

	do ACTADD("XpressSync")
	set xml=xml_"<TopicInfo type='group' seq='1'>"
	set xml=xml_"<ID>"
	do addtopke("Key name=""PUBLISHER_NAME""","HostPA",xml)
	do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
	set xml=xml_"</ID>"
	set xml=xml_"</TopicInfo>"

	set xml=xml_"<deleteCustomerToAccount type='group' seq='1'>"
	set xml=xml_"<ID>"
	do addtopke("Key name=""SERVICER_CUSTOMER_ID""",relcif.acn,xml)
	do addtopke("Key name=""SERVICER_ACCOUNT_ID""",relcif.cid,xml)
	set xml=xml_"</ID>"
	set xml=xml_"</deleteCustomerToAccount>"
	set xml=xml_"</XpressSync>"

	quit



adactcol(RecordACN acn,String xml) // add columns to account

	set xml=xml.get()
	if %ProcessMode=0 do addkey("SERVICER_ACCOUNT_ID",acn.cid,xml)
	if %ProcessMode=0 do addkey("SERVICER_ACCOUNT_IDENTIFIER",acn.cid,xml)
	//if %ProcessMode=0!acn.isChanged("CONVACN") do addcol("ACCOUNT_IDENTIFIER",acn.convacn,acn.convacn.oldVal,xml)
	if %ProcessMode=0!acn.isChanged("TYPE") do addcol("PRODUCT_ID",acn.type,acn.type.oldVal,xml)
	if %ProcessMode=0!acn.isChanged("ACNRELC") do addcol("RELATIONSHIP_TYPE",acn.acnrelc,acn.acnrelc.oldVal,xml)
	if %ProcessMode=0!acn.isChanged("CLS") do addcol("PRODUCT_CLASS",acn.cls,acn.cls.oldVal,xml)
	if %ProcessMode=0!acn.isChanged("STAT") do addcol("STATUS",acn.stat,acn.stat.oldVal,xml)
	if %ProcessMode=0!acn.isChanged("ODT") do addcol("OPENING_DATE",acn.odt,acn.odt.oldVal,xml)
	if %ProcessMode=0!acn.isChanged("ACCTNAME") do addcol("NICKNAME",acn.acctname,acn.acctname.oldVal,xml)
	if %ProcessMode=0!acn.isChanged("ACTIBPAY") do addcol("BILLPAY_ENABLED",acn.actibpay,acn.actibpay.oldVal,xml)
	if %ProcessMode=0!acn.isChanged("ACN") do addcol("PRIMARY_OWNER",acn.acn,acn.acn.oldVal,xml)

	quit

relcif(RecordRELCIF relcif,String xml) // Add relcif info

	set xml=xml.get()
	if %ProcessMode=0!relcif.isChanged("ROLE") do addcol("ROLE",$S('relcif.role.isNull():relcif.role,1:1),$S('relcif.role.oldVal.isNull():relcif.role.oldVal,1:1),xml)
	if %ProcessMode=0!relcif.isChanged("ECOACD") do addcol("ECOA_CODE",relcif.ecoacd,relcif.ecoacd.oldVal,xml)

	quit

addcol(String column,String data,String oldata,String output) // adds colums to XML message

	type public Number xmlchg,change
	type public String modstr
	type String xml
	
	if %ProcessMode=0,data.isNull() quit
	if %ProcessMode=0 set xml=output.get()_"<"_column_" type = ""data"">"_data_"</"_column_">"

	else  do {
		set modstr=modstr.get()_"<"_column_" type = ""data"">"_data_"</"_column_">"
		set xml=output.get()_"<"_column_" type = ""data"">"_oldata_"</"_column_">"
		}
	set (xmlchg,change)=1
	quit


addkey(String column,String data,String output) // add keys to XML message
	
	type public Number xmlchg,change
 	type String xml
 	
	if %ProcessMode=0,data.isNull() quit
	set xml=output.get()_"<"_column_" type = ""data"">"_data_"</"_column_">"
	set (xmlchg,change)=1
	quit
 
 
ACTADD(String add) // Creates Header for newAccountInfo.dtd
 
	type public String xml
		
	set xml=xml_"<?xml version=""1.0"" encoding=""UTF-8""?>"
	set xml=xml_"<?DocHandler DocHandler=""PIA""?>"
	set xml=xml_"<?PIA Application=""batch""?>"
	set xml=xml_"{cookie}"
	set xml=xml_"<!DOCTYPE "_add_">"
	set xml=xml_"<"_add_">"
 
	quit

addtopke(String column,String data,String output)	//  Adds topic info

	type public String xml

	set xml=xml_"<"_column_">"_data_"</"_"Key"_">"

	quit

UPDTRAN(String xml,String PUBLISH) // Updates account columns that are updated during trasaction processing
	
	/*
	This section is called from UCSDRV to create an xml message for an
	account status change during transaction processing.

	Arguments:
	  . xml		xml message			/TYP=S/REQ
	  . PUBLISH	Publish Array			/TYP=T/REQ
		
	*/
	
	type Number change,xmlchg
	type String UCSSERV,string,modstr
	type public String ACT

	set xml=""
	set xmlchg=0

	Type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set UCSSERV=cuvar.ucsserv
	do ACTADD("XpressSync")

	// Set Topic and Key info
	set xml=xml_"<TopicInfo type='group' seq='1'>"
	set xml=xml_"<ID>"
	do addtopke("Key name=""PUBLISHER_NAME""","HostPA",xml)
	do addtopke("Key name=""SERVICER_ID""",UCSSERV,xml)
	set xml=xml_"</ID>"
	set xml=xml_"</TopicInfo>"

	// Update Account Info
	set string=""
	set modstr=""
	set change=0
	do trancol(.string,.PUBLISH)
	if change do {	
		Type RecordACN acn=Db.getRecord("ACN","CID=:ACT")
		set xml=xml_"<updateAccountDetail type='group' seq='1'>"
		set xml=xml_"<ID>"
		do addtopke("Key name=""ACCOUNT_ID""","CURRVAL",xml)
		set xml=xml_"</ID>"

		set xml=xml_"<updateAccountDetailOrigValues type='original'>"
		do trankey("SERVICER_ACCOUNT_ID",acn.cid,xml)
		do trankey("SERVICER_CUSTOMER_ID",acn.acn,xml)
		set xml=xml_string
		set xml=xml_"</updateAccountDetailOrigValues>"
 
		set xml=xml_"<updateAccountDetailModValues type='modified'>"
		do trankey("SERVICER_ACCOUNT_ID",acn.cid,xml)
		do trankey("SERVICER_CUSTOMER_ID",acn.acn,xml)
		set xml=xml_modstr
		set xml=xml_"</updateAccountDetailModValues>"

		set xml=xml_"</updateAccountDetail>"
		}
	set xml=xml_"</XpressSync>"
	if xmlchg=0 set xml=""
	quit


trancol(String xml,String PUBLISH) // Add columns to account

	type public String ACT,COL,FILE
	
	set xml=xml.get()
	do addtran(COL, PUBLISH(FILE,ACT,COL).piece("|",2),PUBLISH(FILE,ACT,COL).piece("|",1),xml)
	quit


addtran(String column,String data,String oldata,String output) // adds colums to XML message

	type Number xmlchg,change
	type public String modstr,xml 
	
	set modstr=modstr.get()_"<"_column_" type = ""data"">"_data_"</"_column_">"
	set xml=output.get()_"<"_column_" type = ""data"">"_oldata_"</"_column_">"
	set (xmlchg,change)=1
	quit

trankey(String column,String data,String output) // add keys to XML message

	type Number xmlchg,change
	type public String xml 

	set xml=output.get()_"<"_column_" type = ""data"">"_data_"</"_column_">"
	set (xmlchg,change)=1
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60298^27215^Jaimano Prakash^12224"	// Signature - LTD^TIME^USER^SIZE
