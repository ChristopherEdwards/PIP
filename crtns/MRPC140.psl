MRPC140( String RETURN, Number VERSN, Number OLDTYPE, Number NEWTYPE, Number GLSC)

	/*
	 Procedure Id: MRPC140
	 DESC: Copy Product Type
	 ORIG: Jeff Walton
	 DATE: 04/19/2006

	 ARGUMENTS:
		. RETURN	Return value		/TYP=T/REQ/MECH=REFNAM:W
		. VERSN		Version number		/TYP=N/REQ/MECH=VAL
		. OLDTYPE	Old Product Type	/TYP=T/REQ/MECH=VAL
		. NEWTYPE	New product Type	/TYP=T/REQ/MECH=VAL
		. GLSC		G/L Set Code		/TYP=T/MECH=VAL
		
	 RETURNS:

		. $$		Status			/TYP=L/REQ/MECH=VAL		
				New type, otherwise error message
 
		. RETURN  	requested information	/TYP=N	


	 EXAMPLE:
		
		set X=$$^MRPC140(.RETURN,1,300,3000)

	 ---- Comments --------------------------------------------------------

	 ---- Revision History ------------------------------------------------
	 
	04/16/2007 - MbuiM - CR 26500
		     Modified PROC section to type correctly the variables ERV,
		     ET, ERRMSG, and RM as they need to be public so the 
		     correct error message gets sent back to the calling 
		     application when an error occurs within section PROC. Also 
		     modified to check for an error after the call to save the 
		     product type.
		     Corrected class undefined error returned and typed the 
		     objects within loop as in an oracle environment compiler, 
		     expects the objects to be declared and instantioated at on
		     the same level.
	
	02/08/2007 - chhabris - CR25137
		     Created new MRPC. Retrofit from ICGWeb01_Dev_Profile view
		     for Profile Direct retrofits.
	
	*/

	type public Boolean ER, ERV
	type public String ERRMSG,ET, RM
	
	set (ER,ERV)=0
	set (ERRMSG,RM)=""
	set RETURN=0

	// Process new product type create
	do PROC(VERSN.get(),OLDTYPE.get(),NEWTYPE.get(),GLSC.get(),.RETURN)
	if ERV set ER=1,RM=ERRMSG

	quit:ER $$ERRMSG^PBSUTL(RM.get())

	// Build return value
	set RETURN=$$V2LV^MSG(.RETURN) 
	
	quit ""


public PROC( Number VERSN, Number OLDTYPE, Number NEWTYPE, Number GLSC, String RETURN)

	/*
	 Process copy product type

	 ARGUMENTS:
		. VERSN		Version number		/TYP=N/REQ/MECH=VAL
		. OLDTYPE	Old Product Type	/TYP=T/REQ/MECH=VAL
		. NEWTYPE	New Product Type	/TYP=T/REQ/MECH=VAL
		. GLSC		G/L Set Code		/TYP=T/MECH=VAL	

	 RETURNS
		. RETURN	Return value		/TYP=T/REQ/MECH=REFNAM:W
	*/

	type public Boolean ER, ERV
	type public String ERRMSG, ET, RM
	type String FROM

	catch error {
		set ET=error.type
		set RM=error.description
		set FROM=error.thrownAt
		if error.type["%GTM-" do ZE^UTLERR

		do Runtime.rollback()
		
		// Set error flag
		set ERV=1
		set ERRMSG=RM
	}

	// Version number of client message is not compatible with server
	if VERSN'=1 set RM=$$^MSG(2951) throw Class.new("Error",","_RM)

	// Verify copy from product type is valid
	if OLDTYPE.isNull() throw Class.new("Error",","_$$^MSG(3113,"TYPE"))
	type ResultSet rs = Db.select("TYPE","PRODCTL","TYPE=:OLDTYPE")
	if rs.isEmpty() throw Class.new("Error",","_$$^MSG(1503))

	// Verify copy to product type is valid
	if NEWTYPE.isNull() throw Class.new("Error",","_$$^MSG(3113,"TYPE"))
	type ResultSet rs1 = Db.select("TYPE","PRODCTL","TYPE=:NEWTYPE")
	if rs1.next() throw Class.new("Error",","_$$^MSG(2266,NEWTYPE))

	// G/L set code undefined
	type RecordPRODCTL prodctl = Db.getRecord("PRODCTL","TYPE=:OLDTYPE")
	type ResultSet rs2 = Db.select("GLSC","UTBLGLSC","GLSC=:GLSC")
	if 'GLSC.isNull(), rs2.isEmpty() throw Class.new("Error",","_$$^MSG(6574))

	type RecordPRODCTL nprodctl=prodctl.copy()
	do nprodctl.setMode(0)
	set nprodctl.type=NEWTYPE
	set nprodctl.cls=prodctl.cls
	do nprodctl.save() 
	if ER quit

	if prodctl.cls="*" do {  quit:ER
		type RecordPRODDFTC cif = Db.getRecord("PRODDFTC","TYPE=:OLDTYPE")
		type RecordPRODDFTC ncif=cif.copy()
		do ncif.setMode(0)
		set ncif.type=NEWTYPE
		set ncif.cls=prodctl.cls
		do ncif.save()
	}
	
	if prodctl.cls="D" do {  quit:ER
		type RecordPRODDFTD dep=Db.getRecord("PRODDFTD","TYPE=:OLDTYPE")
                type RecordPRODDFTD ndep=dep.copy()
                do ndep.setMode(0)
                set ndep.type=NEWTYPE
		set ndep.cls=prodctl.cls
		if 'GLSC.isNull() set ndep.glsc=GLSC
                do ndep.save()
	}

	if prodctl.cls="L" do {  quit:ER
                type RecordPRODDFTL ln=Db.getRecord("PRODDFTL","TYPE=:OLDTYPE")
                type RecordPRODDFTL nln=ln.copy()
                do nln.setMode(0)
                set nln.type=NEWTYPE
		set nln.cls=prodctl.cls
                if 'GLSC.isNull() set nln.glsc=GLSC
                do nln.save()
        }
	set RETURN=NEWTYPE
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60737^47450^Marie Mbui^4245"	// Signature - LTD^TIME^USER^SIZE
