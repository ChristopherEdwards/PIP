public LNES1	// Payment Maintenance / Escrow Balance Summary
	/*
	       ORIG:  Neal E. Gorman (5053) - 03/05/87
	       DESC:

	  ---- Revision History ------------------------------------------------

	   07/31/06 - KELLYP - CR 22048
	   	      Modified VPG00 section to eliminate PRECEDENCE warning.

	   01/31/06 - Srinivar -19137
	   	      Cleaned up the warnings 
	   	      Modified the code to conform PSL standards.
	   
	   11/15/02 - TELIV - 49451
		      Converted to PSL
	  ----------------------------------------------------------------------

	*/
	
	do UPD 
	
	quit
	
UPD 	//
	
	type String TEXT()
	
	set TEXT(1)=$$^MSG(8510) 
	do INIT(1)
	quit


INQ 	//
	type String TEXT()
	
	set TEXT(1)=$$^MSG(8509) 
	do INIT(2)
	quit


INIT(%ProcessMode)	//

	type public String VFMQ
	type Number %PG,%PAGE

	set %PG=0 
	set %PAGE=1
	set %EffectiveDate=%SystemDate

	type RecordLN LN
        type RecordLNES fLNES()
	type RecordLNBIL0 fLNBIL0
	type RecordLNAPCHGE EAB()

	do VPG(.LN,.fLNES(),.fLNBIL0,.EAB())

	quit


VPG(RecordLN LN,RecordLNES fLNES(),RecordLNBIL0 fLNBIL0,RecordLNAPCHGE EAB())  // Page control
	
	type public Number %PG
	type public String ER,VFMQ
	type Boolean FINISH
		
	set FINISH=0

	for  do { quit:FINISH
		if %PG=0 do VPG00(.LN,.fLNES(),.fLNBIL0,.EAB()) if ER set FINISH=1 quit
		if %PG>0 do VPG01(.LN,.fLNES()) 
		if "DFQ"[VFMQ do VER(.LN,.fLNES(),.fLNBIL0,.EAB()) set FINISH=1 quit
		set %PG=%PG+1
		}

	quit


VPG00(RecordLN LN, RecordLNES fLNES(),RecordLNBIL0 fLNBIL0,RecordLNAPCHGE EAB()) // Set up

	type public Number CID,CNT,N,TACR,TBAL,TNPMT
	type public String ACN(),CHG,ER,ET,IO,%READ,%TAB,VFMQ
	type public Date APCND
	
	type Boolean EACIP
	type Number BOO,%PAGE,TPMT,TYPE
	
	set %TAB("CID")=".CID3/XPP=S %EXT=1 D ^UACN/XPR=S (CLS,ZCLS)=""L"""

	if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)

	set %READ="@@%FN,,,CID/REQ"
	if %ProcessMode=2 set %READ=%READ_",IO/REQ"

	do ^UTLREAD 

	if VFMQ="Q" set ER=1 quit

	if %ProcessMode=1 lock +ACN(CID) else  set ET="RECLOC" do ERR quit
	if %ProcessMode=2,IO'=$I do OPEN^SCAIO quit:ER

	// Not Analyzed
	set CHG=$$^MSG("3965") 
	set (TPMT,TNPMT,CNT)=0

	set LN=Db.getRecord("LN","CID=:CID")
	set fLNBIL0=Db.getRecord("LNBIL0","CID=:CID",1)

	do BIL0(.LN,.fLNBIL0,.fLNES())

	set (N,TACR,TBAL)=0 
	do ESC(.fLNES())

	// Product Type
	set BOO=LN.boo 
	set TYPE=LN.type 
	set N=-1

	// Escrow Analysis Change In Process
	set APCND=LN.apcnd 
	set EACIP=LN.eacip

	if EACIP do EAB(.EAB()) if ER do ERR quit

	set TACR=$$^SCARND(TACR,12,$G(CID)) 
	set TPMT=$$^SCARND(TPMT,12,$G(CID)) 
	set TBAL=$$^SCARND(TBAL,12,$G(CID))

	set %PAGE=('(CNT#7=0))+(CNT\7) 
	if '%PAGE set %PAGE=1

	quit


VPG01(RecordLN LN,RecordLNES fLNES())  // Page control
	// Screen

	type public Number CNT,%MODS,%PG,%REPEAT
	type public String SEAB
	
	
	set SEAB="" 
	set %REPEAT=7 
	set %MODS=(%PG)*(7-6)
	if %REPEAT+%MODS>CNT set %REPEAT=CNT-%MODS+1
	
	do DRV^USID(%ProcessMode,"LNES1",.LN,.fLNES())

	quit


ERR	//
	type public String ER,VFMQ
	
	
	set ER=1 do DSPBP^UTLERR
	set VFMQ="Q"
	quit


VER(RecordLN LN,RecordLNES fLNES(),RecordLNBIL0 fLNBIL0,RecordLNAPCHGE EAB()) 	//

	type public String VFMQ

	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit

	do FILE(.LN,.fLNES(),.fLNBIL0,.EAB())

	do END
	quit


FILE(RecordLN LN,RecordLNES fLNES(),RecordLNBIL0 fLNBIL0,RecordLNAPCHGE EAB())	// File data
	
	type public Number CID,EAB
	type public Date APCND
	
	type Number I,N,X
	type String SEAB,PCB
	
	do PFILE(.LN,.fLNBIL0,.fLNES())
	do fLNBIL0.bypassSave()

	if 'EAB(1).exists() quit

	// Find the total new payment after maintenance
	set X=0 
	set N=""

	for  set N=$O(EAB(N)) quit:N=""  set X=X+EAB(N).epmt

	set $P(PCB,"|",1)=X

	for I=1:1 do { quit:N=""
		set N=$P(SEAB,"|",I) quit:N="" 
		set EAB(N).apcnd=APCND
		set EAB(N).cid=CID
		set EAB(N).ecid=N
		do EAB(N).bypassSave()
		}

	type RecordLNAPCHG lnapchg=Db.getRecord("LNAPCHG","APCND=:APCND,CID=:CID",1)

	set lnapchg.ntrs=$P(PCB,"|",1)
	set lnapchg.lnd=$P(PCB,"|",2)
	set lnapchg.lfre=$P(PCB,"|",3)
	set lnapchg.laf=$P(PCB,"|",4)
	set lnapchg.otrs=$P(PCB,"|",5)
	set lnapchg.olbal=$P(PCB,"|",6)
	set lnapchg.oebal=$P(PCB,"|",7)
	set lnapchg.cebal=$P(PCB,"|",8)
	set lnapchg.aebal=$P(PCB,"|",9)
	set lnapchg.tdis=$P(PCB,"|",10)
	set lnapchg.povsh=$P(PCB,"|",11)
	set lnapchg.esreq=$P(PCB,"|",12)
	set lnapchg.coll=$P(PCB,"|",13)
	set lnapchg.lrbas=$P(PCB,"|",14)
	set lnapchg.rndi=$P(PCB,"|",15)
	set lnapchg.cpi=$P(PCB,"|",16)
	set lnapchg.probas=$P(PCB,"|",17)
	set lnapchg.odm=$P(PCB,"|",18)
	set lnapchg.rnda=$P(PCB,"|",19)
	set lnapchg.aeaf=$P(PCB,"|",20)
	set lnapchg.aelap=$P(PCB,"|",21)
	set lnapchg.tamtd=$P(PCB,"|",22)
	set lnapchg.tamtb=$P(PCB,"|",23)
	set lnapchg.tamtl=$P(PCB,"|",24)	
	set lnapchg.tamts=$P(PCB,"|",25)
	set lnapchg.epost=$P(PCB,"|",26)

	do lnapchg.bypassSave()

	quit


END	//
	
	type public String ER,RM,%TAB,VFMQ
	type public Number CID
	
	
	kill %TAB
	if ER!(%ProcessMode=2)!(%ProcessMode=4)!(ER="W") quit
	set CID=$G(CID)

	// Account ~p1 not modified
	if VFMQ="Q" set RM=$$^MSG("135",CID)

	// Account ~p1 modified
	else  set RM=$$^MSG("122",CID)
	set ER="W"
	quit


PFILE(RecordLN LN,RecordLNBIL0 fLNBIL0,RecordLNES fLNES())	//
	// Product Class
	
	type public Number CC,FILE,N,P,PC,TYPE
	type public String A,CLS,DES(),GRP,UX()
	type public String FIL
	
	set TYPE=LN.type 
	set CLS=LN.cls

	// Cost Center
	set GRP=LN.grp 
	set CC=LN.cc
	set FILE=0 
	set N=""

	// CURR
	set A="LNES|4" 
	set FIL="*" 
	set DES(A)=$$^MSG("4092") 
	if UX(FIL,A).exists() set PC=3 do PMT(.LN,.fLNBIL0,.fLNES())

	// LUMP
	set A="LNES|5" 
	set FIL="*" 
	set DES(A)=$$^MSG("4093") 
	if UX(FIL,A).exists() set PC=5 do PMT(.LN,.fLNBIL0,fLNES())

	// NEW
	set A="LNES|9" 
	set FIL="*" 
	set DES(A)=$$^MSG("7054") 
	if UX(FIL,A).exists() do NPMT(.LN,.fLNBIL0,.fLNES())

	if 'FILE quit

	// File Maintenance - Last Date
	set LN.fmld=%SystemDate

	set P=0 
	set N=""
	for  set N=$O(fLNES(N)) quit:N=""  set P=P+fLNES(N).cpmt

	// Payment Escrow Amount
	if +LN.pmttrs=P quit

	// Principal and Interest Payment
	set LN.pmttrs=P 
	set LN.pmt=LN.pmtpi+P
	do LN.save()

	quit


HFILE(RecordLNES fLNES())	//

	type public String DES(),FIL,UX()
	type public Number A,N,X
	
	type String %TRN
	type Number I()
	
	
	if $P(UX(FIL,A,N),"|",6) quit
	set X=$P(UX(FIL,A,N),"|",2) if X?1N.E,'(X-UX(FIL,A,N)) quit

	set I(3)=DES(A)_fLNES(N).trtype_"PMT:"_+$P(UX(FIL,A,N),"|",1)_":"_+$P(UX(FIL,A,N),"|",2)
	set %TRN="||||"_%EffectiveDate_"|"_%UserStation_"||"_I(3)_"|"_+%CurrentDate_"|"_%CurrentTime_"|||"_%UserID
	do H
	quit


HFIL1	//
	type public Number A,CID,FIL,X
	type public String UX()
	
	type Number I()
	type String %TRN
	
	if $P(UX(FIL,A),"|",6) quit
	set X=$P(UX(FIL,A),"|",2) if X?1N.E,'(X-UX(FIL,A)) quit

	set I(3)=CID_"["_FIL_"]"_A_":"_$P(UX(FIL,A),"|",1)_":"_$P(UX(FIL,A),"|",2)
	set %TRN="||||"_%EffectiveDate_"|"_%UserStation_"||"_I(3)_"|"_+%CurrentDate_"|"_%CurrentTime_"|||"_%UserID

	quit

H	//
	type public String CLS,GRP
	type public Number CC,CID,I,TYPE,TSEQ,%UID
	type Number FILE
	
	
	type ResultSet rs=Db.select("TSEQ","HIST","CID=:CID","TSEQ DESC")
        if rs.next() set TSEQ=TSEQ+1

	type RecordDTJFM dtjfm=Db.getRecord("DTJFM","TJD=:%SystemDate,CLS=:CLS,GRP=:GRP,TYP=:TYPE,CID=:CID,TSEQ=:TSEQ",1)
	do dtjfm.setAuditFlag(1)
	set dtjfm.cc=CC
	set dtjfm.efd=%EffectiveDate
	set dtjfm.tlo=%UserStation
	set dtjfm.tcmt=I(3)
	set dtjfm.cdt=+$H
	set dtjfm.time=$P($H,",",2)
	set dtjfm.uid=%UID
	do dtjfm.save()
	
	type RecordHIST hist=Db.getRecord("HIST","CID=:CID,TSEQ=:TSEQ",1)
	set hist.tjd=%SystemDate
	set hist.efd=%EffectiveDate
	set hist.tlo=%UserStation
	set hist.tcmt=I(3)
	set hist.cdt=+$H
	set hist.time=$P($H,",",2)
	set hist.uid=%UID
	do hist.save()
        
	set TSEQ=TSEQ+1
	set FILE=1
	quit


PMT(RecordLN LN,RecordLNBIL0 fLNBIL0,RecordLNES fLNES())	// Modify fields in node 0
	
	type public Number A,CID,N,PC,X
	type public String UX()
	
	type Number B
	set N=$O(UX("*",A,N)) quit:N=""
	while N'="" do {
	set X=+$P(UX("*",A,N),"|",2) if X?1N.E,'(X-UX("*",A,N)) quit

	set B=$$GETBIL0(.fLNBIL0,fLNES(N).pce)
	set B=$P(B,"#",2)

	if B'="" do {

		type RecordDEP dep=Db.getRecord("DEP","CID=:CID")
		if PC=3 set dep.curramt=+X do dep.save()

		//Lump Amt.
		if PC=5 do {
			set B=$$GETBIL0(.fLNBIL0,fLNES(N).pce)
			set $P(B,"#",PC)=+X

			do SETBIL0(.fLNBIL0,fLNES(N).pce,B)
			}
		}

	do HFILE(.fLNES())
	set N=$O(UX("*",A,N)) quit:N=""
	}
	quit


NPMT(RecordLN ln,RecordLNBIL0 fLNBIL0,RecordLNES fLNES())	// Modify ^PCBD global values
	
	type public Number A,B,C,N
	type public String EAB,UX()
	
	set N=$O(UX("*",A,N)) quit:N=""

	while N'="" do {
		set C=+$P(UX("*",A,N),"|",2) if C?1N.E,'(C-UX("*",A,N)) quit
		set $P(EAB(fLNES(N).pce),"|",2)=C

		set B=$$GETBIL0(.fLNBIL0,fLNES(N).pce)

		set B=$P(B,"#",2)

		type RecordDEP dep=Db.getRecord("DEP","CID=:B")
		if B'="" set dep.recamt=C do dep.save()

		////////////////////////
		// set SEAB=SEAB_+LNES(N)_"|"
		////////////////////////

		do HFILE(.fLNES())
		set N=$O(UX("*",A,N)) quit:N=""
		}

	quit


BIL0(RecordLN LN,RecordLNBIL0 fLNBIL0,RecordLNES fLNES())	//
	
	//new P,A,ETYP,ECID,B,F
	type public Number CID,ER,CNT
	type Number A210,B,ECID,F,P,TNPMT,TPMT,TEMP()
	type String A,ETYP,ET,ACN()
	
	set ER=0
	set CNT=0 
	set TNPMT=0 
	set TPMT=0
	
	for P=2:1:21 do { quit:ER
		set A=$$GETBIL0(.fLNBIL0,P)
		if A="" quit
		set ETYP=$P(A,"#",1)

		if '$$ESC^LNU(ETYP) quit

		set ECID=$P(A,"#",2)

		if LN.stat=4 quit

		type RecordDEP dep=Db.getRecord("DEP","CID=:ECID")
	 	set A210=dep.curramt
		set B=dep.curramt
		set F=dep.recamt

		lock +ACN(ECID):2 else  set ET="RECLOC" do ERR quit

		set CNT=CNT+1 set TEMP(ECID)=CNT
		set TPMT=TPMT+B set TNPMT=TNPMT+F

		set fLNES(CNT)=Db.getRecord("LNES","",1)
		
		// Escrow account number
		set fLNES(CNT).cid=ECID

		// Position in ^BIL(CID,0
		set fLNES(CNT).pce=P

		// Escrow type
		set fLNES(CNT).trtype=ETYP

		// Current payment amount
		set fLNES(CNT).cpmt=B

		// Lump payment - next bill
		set fLNES(CNT).lpmt=+$P(A,"#",5)

		// Next payment amount
		set fLNES(CNT).npmt=F
		}
	quit


ESC(RecordLNES fLNES())	// Escrow
	
	type public Number A,CNT,N,TACR,TBAL
	type Number B
	
	for  set N=$O(fLNES(N)) quit:N=""!(N>499)  do { 

		type Number CID
		set CID=fLNES(N).cid

		type RecordDEP dep=Db.getRecord("DEP","CID=:CID")
		type RecordACN acn=Db.getRecord("ACN","CID=:CID")
		
		set A=$$^SCARND(dep.posacr,0,$G(CID)) 
		set TACR=TACR+A
	
		set B=acn.bal
		set TBAL=TBAL+B
	
		// Current accrual
		set fLNES(N).acr=A
	
		// Current balance
		set fLNES(N).bal=B
	
		// Ignore at payoff flag
		set fLNES(N).iwcp=dep.iwcp
		
		do fLNES(N).bypassSave()
	
		}
		quit
	

EAB(RecordLNAPCHGE EAB())	//
	
	type public String ER,ET,PCBD()
	type public Number CHG,CID,TNPMT,TPMT
	type public Date APCND
	type String PCB
	
	lock +PCBD("APCND",APCND,CID):2 else  set ER=1 set ET="RECLOC" quit

	type RecordLNAPCHG lnapchg=Db.getRecord("LNAPCHG","APCND=:APCND,CID=:CID",1)

	set PCB=lnapchg.ntrs_"|"_lnapchg.lnd_"|"_lnapchg.lfre_"|"_lnapchg.laf
	set PCB=PCB_"|"_lnapchg.otrs_"|"_lnapchg.olbal_"|"_lnapchg.oebal
	set PCB=PCB_"|"_lnapchg.cebal_"|"_lnapchg.aebal_"|"_lnapchg.tdis
	set PCB=PCB_"|"_lnapchg.povsh_"|"_lnapchg.esreq_"|"_lnapchg.coll
	set PCB=PCB_"|"_lnapchg.lrbas_"|"_lnapchg.rndi_"|"_lnapchg.cpi
	set PCB=PCB_"|"_lnapchg.probas_"|"_lnapchg.odm_"|"_lnapchg.rnda
	set PCB=PCB_"|"_lnapchg.aeaf_"|"_lnapchg.aelap_"|"_lnapchg.tamtd
	set PCB=PCB_"|"_lnapchg.tamtb_"|"_lnapchg.tamtl_"|"_lnapchg.tamts
	set PCB=PCB_"|"_lnapchg.epost

	type Number lecid
	type DbSet rs=Db.selectDbSet("LNAPCHGE","APCND=:APCND AND CID=:CID")
	while rs.next() do {
		type RecordLNAPCHGE temp=rs.getRecord()
		set lecid=temp.ecid
		set EAB(lecid)=rs.getRecord()
		}

	set CHG=TNPMT-TPMT 
	set TNPMT=$$^SCARND(TNPMT,12,$G(CID)) 
	set CHG=$$^SCARND(CHG,12,$G(CID))

	quit


GETBIL0(RecordLNBIL0 fLNBIL0,PEVAL)	//

	if PEVAL=2 quit fLNBIL0.pe01
	if PEVAL=3 quit fLNBIL0.pe02
	if PEVAL=4 quit fLNBIL0.pe03
	if PEVAL=5 quit fLNBIL0.pe04
	if PEVAL=6 quit fLNBIL0.pe05
	if PEVAL=7 quit fLNBIL0.pe06
	if PEVAL=8 quit fLNBIL0.pe07
	if PEVAL=9 quit fLNBIL0.pe08
	if PEVAL=10 quit fLNBIL0.pe09
	if PEVAL=11 quit fLNBIL0.pe10
	if PEVAL=12 quit fLNBIL0.pe11
	if PEVAL=13 quit fLNBIL0.pe12
	if PEVAL=14 quit fLNBIL0.pe13
	if PEVAL=15 quit fLNBIL0.pe14
	if PEVAL=16 quit fLNBIL0.pe15
	if PEVAL=17 quit fLNBIL0.pe16
	if PEVAL=18 quit fLNBIL0.pe17
	if PEVAL=19 quit fLNBIL0.pe18
	if PEVAL=20 quit fLNBIL0.pe19
	if PEVAL=21 quit fLNBIL0.pe20

	quit 0


SETBIL0(RecordLNBIL0 fLNBIL0,PEVAL,VAL)	//
	if PEVAL=2 set fLNBIL0.pe01=VAL
	if PEVAL=3 set fLNBIL0.pe02=VAL
	if PEVAL=4 set fLNBIL0.pe03=VAL
	if PEVAL=5 set fLNBIL0.pe04=VAL
	if PEVAL=6 set fLNBIL0.pe05=VAL
	if PEVAL=7 set fLNBIL0.pe06=VAL
	if PEVAL=8 set fLNBIL0.pe07=VAL
	if PEVAL=9 set fLNBIL0.pe08=VAL
	if PEVAL=10 set fLNBIL0.pe09=VAL
	if PEVAL=11 set fLNBIL0.pe10=VAL
	if PEVAL=12 set fLNBIL0.pe11=VAL
	if PEVAL=13 set fLNBIL0.pe12=VAL
	if PEVAL=14 set fLNBIL0.pe13=VAL
	if PEVAL=15 set fLNBIL0.pe14=VAL
	if PEVAL=16 set fLNBIL0.pe15=VAL
	if PEVAL=17 set fLNBIL0.pe16=VAL
	if PEVAL=18 set fLNBIL0.pe17=VAL
	if PEVAL=19 set fLNBIL0.pe18=VAL
	if PEVAL=20 set fLNBIL0.pe19=VAL
	if PEVAL=21 set fLNBIL0.pe20=VAL

	quit

 #OPTION ResultClass ON
Public String vSIG()	quit "60477^65452^Pat Kelly^12531"	// Signature - LTD^TIME^USER^SIZE
