R01S233	// SCA189 - Manual Internal Bill Conv Verification
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA189"
	set RN="Manual Internal Bill Conv Verification"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[LNCONBL1]CEFD|[LNCONBL1]CEFD:DISTINCT:NOVAL||||D|Conversion Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CIDT,CONAM,GIDIST,GITRSFR,GPDIST,GPTRSFR,GTCID,IDIST,ITRSFR,PDIST,PTRSFR,RID,RN,TAMTREM,TIDIST,TITRSFR,TORIG,TPDIST,TPTRSFR,TTCID,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA189",RN="Manual Internal Bill Conv Verification"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA189","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNCONBL1]CID#1#12,[LNCONBL1]BSEQ#15#3,[LNCONBL1]LDT#21#10,[LNCONBL1]ORIG#35#12,[LNCONBL1]AMTREM#52#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Conversion Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE="LNCONBL1.CEFD=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Manual Internal Bill Conv Verification"
		set VBNRINFO("PGM")="R01S233"
		set VBNRINFO("RID")="SCA189"
		set VBNRINFO("TABLES")="LNCONBL1"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNCONBL1]CEFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNCONBL1]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNCONBL1]BSEQ"

		set VBNRINFO("DOC",1)="<<MAX(1),D,10>>      Conversion Date entered from the Query Screen"
		set VBNRINFO("DOC",2)="<<TCID>>             Temporary CID"
		set VBNRINFO("DOC",3)="<<TTCID>>            Total number of CIDs per page"
		set VBNRINFO("DOC",4)="<<GTCID>>            Total number of CIDs per Conversion Effective Date"
		set VBNRINFO("DOC",5)="<<TORIG>>            Original Bill Amount total per page"
		set VBNRINFO("DOC",6)="<<TAMTREM>>          Amount Remaining total per page"
		set VBNRINFO("DOC",7)="<<ITRSFR>>           Interest Transfer Amount"
		set VBNRINFO("DOC",8)="<<TITRSFR>>          Interest Transfer Amount total per page"
		set VBNRINFO("DOC",9)="<<GITRSFR>>          Interest Transfer Amt. total per Conversion Effect. Date"
		set VBNRINFO("DOC",10)="<<PTRSFR>>           Payment Transfer Amount"
		set VBNRINFO("DOC",11)="<<TPTRSFR>>          Payment Transfer Amount total per page"
		set VBNRINFO("DOC",12)="<<GPTRSFR>>          Payment Transfer Amt. total per Conversion Effective Date"
		set VBNRINFO("DOC",13)="<<IDIST>>            Interest Remaining Distribution"
		set VBNRINFO("DOC",14)="<<TIDIST>>           Interest Remaining Distribution total per page"
		set VBNRINFO("DOC",15)="<<GIDIST>>           Interest Remaining Dist. per Conversion Effective Date"
		set VBNRINFO("DOC",16)="<<PDIST>>            Payment Remaining Distribution"
		set VBNRINFO("DOC",17)="<<TPDIST>>           Payment Remaining Distribution total per page"
		set VBNRINFO("DOC",18)="<<GPDIST>>           Payment Remaining Dist. per Conversion Effective Date"
		set VBNRINFO("DOC",19)="<<#>>                Forced Form Feed"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNCONBL1.CEFD,LNCONBL1.CID,LNCONBL1.BSEQ,LNCONBL1.LDT,LNCONBL1.ORIG,LNCONBL1.AMTREM,LNCONBL1.FIRST,LNCONBL1.PE01,LNCONBL1.PE02,LNCONBL1.PE03,LNCONBL1.PE04,LNCONBL1.PE05,LNCONBL1.PE06,LNCONBL1.PE07,LNCONBL1.PE08,LNCONBL1.PE09,LNCONBL1.PE10,LNCONBL1.PE11,LNCONBL1.PE12,LNCONBL1.PE13,LNCONBL1.PE14,LNCONBL1.PE15,LNCONBL1.PE16,LNCONBL1.PE17,LNCONBL1.PE18,LNCONBL1.PE19,LNCONBL1.PE20","LNCONBL1","LNCONBL1.CEFD=:VIN1","LNCONBL1.CEFD,LNCONBL1.CID,LNCONBL1.BSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27
	set vc1=V.piece($C(9),1)			// LNCONBL1.CEFD
	set vc2=V.piece($C(9),2)			// LNCONBL1.CID
	set vc3=V.piece($C(9),3)			// LNCONBL1.BSEQ
	set vc4=V.piece($C(9),4)			// LNCONBL1.LDT
	set vc5=V.piece($C(9),5)			// LNCONBL1.ORIG
	set vc6=V.piece($C(9),6)			// LNCONBL1.AMTREM
	set vc7=V.piece($C(9),7)			// LNCONBL1.FIRST
	set vc8=V.piece($C(9),8)			// LNCONBL1.PE01
	set vc9=V.piece($C(9),9)			// LNCONBL1.PE02
	set vc10=V.piece($C(9),10)			// LNCONBL1.PE03
	set vc11=V.piece($C(9),11)			// LNCONBL1.PE04
	set vc12=V.piece($C(9),12)			// LNCONBL1.PE05
	set vc13=V.piece($C(9),13)			// LNCONBL1.PE06
	set vc14=V.piece($C(9),14)			// LNCONBL1.PE07
	set vc15=V.piece($C(9),15)			// LNCONBL1.PE08
	set vc16=V.piece($C(9),16)			// LNCONBL1.PE09
	set vc17=V.piece($C(9),17)			// LNCONBL1.PE10
	set vc18=V.piece($C(9),18)			// LNCONBL1.PE11
	set vc19=V.piece($C(9),19)			// LNCONBL1.PE12
	set vc20=V.piece($C(9),20)			// LNCONBL1.PE13
	set vc21=V.piece($C(9),21)			// LNCONBL1.PE14
	set vc22=V.piece($C(9),22)			// LNCONBL1.PE15
	set vc23=V.piece($C(9),23)			// LNCONBL1.PE16
	set vc24=V.piece($C(9),24)			// LNCONBL1.PE17
	set vc25=V.piece($C(9),25)			// LNCONBL1.PE18
	set vc26=V.piece($C(9),26)			// LNCONBL1.PE19
	set vc27=V.piece($C(9),27)			// LNCONBL1.PE20
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 /*
 
   ---- Revision History------------------------------------------------
 
        02/15/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number CIDT,GIDIST,GITRSFR,GPDIST,GPTRSFR,GTCID
 type Public Number TAMTREM,TIDIST,TITRSFR,TORIG,TPDIST,TPTRSFR,TTCID

 set CIDT=""
 set TTCID=""
 set TORIG=""
 set TAMTREM=""
 set TIDIST=""
 set TITRSFR=""
 set TPDIST=""
 set TPTRSFR=""
 set GTCID=""
 set GIDIST=""
 set GITRSFR=""
 set GPDIST=""
 set GPTRSFR=""

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		do VTRL0
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL3	// Detail
	type public String %TIM,CIDT,GIDIST,GITRSFR,GPDIST,GPTRSFR,GTCID,IDIST,IOSL,ITRSFR,PDIST,PTRSFR,TAMTREM,TIDIST,TITRSFR,TORIG,TPDIST,TPTRSFR,TTCID,V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set V=vc2,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",13-VL.length())_$J(vc3,4)
	set VL=VL_$J("",20-VL.length())_$J($$DAT^%ZM(vc4),10)
	set V=vc5,VO=V set V=$J(V,15,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",31-VL.length())_V		// [SYSDEV,LNCONBL1]ORIG
	set V=vc6,VO=V set V=$J(V,16,2) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",47-VL.length())_V		// [SYSDEV,LNCONBL1]AMTREM
	set VL=VL_$J("",67-VL.length())_$J(ITRSFR,12,2)
	set VL=VL_$J("",84-VL.length())_$J(IDIST,12,2)
	set VL=VL_$J("",101-VL.length())_$J(PTRSFR,12,2)
	set VL=VL_$J("",118-VL.length())_$J(PDIST,12,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CIDT,CONAM,GIDIST,GITRSFR,GPDIST,GPTRSFR,GTCID,IDIST,ITRSFR,PDIST,PTRSFR,RID,RN,TAMTREM,TIDIST,TITRSFR,TORIG,TPDIST,TPTRSFR,TTCID,VIN1,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if VPN do VTRL0
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA189)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Conversion Date:"
	set VL=VL_$J("",17-VL.length())_$J($$DAT^%ZM(VIN1),10)
	do VOM
	set VL="" do VOM
	set VL="       "_"Loan  Bill   Date Bill        Total Due          Total          Interest         Interest        Principal        Principal"
	do VOM
	set VL="      "_"Number  Nbr       Due                           Remaining           Due          Remaining"
	set V="Due           Remaining" do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",107-VL.length())_V
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VTRL0	// Page Trailer
	type Public Number IOSL,verror,vh,VFMQ,VLC,VT(),VX()
	type Public String %TIM,CIDT,GIDIST,GITRSFR,GPDIST,GPTRSFR,GTCID,IDIST,ITRSFR,PDIST,PTRSFR,TAMTREM,TIDIST,TITRSFR,TORIG,TPDIST,TPTRSFR,TTCID,VIN1,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String VL

	set VL=""
	for I=VLC:1:IOSL-4 do VOM

	set VL="" do VOM
	set V="Page Totals" do VP5 quit:VFMQ!verror.get()  set VL=V
	do VOM
	set VL="    "_"Count:"
	set V=$E(TTCID,1,2) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",11-VL.length())_V
	set VL=VL_$J("",34-VL.length())_$J(TORIG,12,2)
	set VL=VL_$J("",51-VL.length())_$J(TAMTREM,12,2)
	set V=$J(TITRSFR,12,2) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",67-VL.length())_V
	set V=$J(TIDIST,12,2) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",84-VL.length())_V
	set V=$J(TPTRSFR,12,2) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",101-VL.length())_V
	set V=$J(TPDIST,12,2) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V
	do VOM
	quit

VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,CIDT,GIDIST,GITRSFR,GPDIST,GPTRSFR,GTCID,IDIST,ITRSFR,PDIST,PTRSFR,TAMTREM,TIDIST,TITRSFR,TORIG,TPDIST,TPTRSFR,TTCID,VIN1,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	do VHDG0 quit:VFMQ				// <<#>>
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,LNCONBL1]CID

	type public String vc2
 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number CIDT,TCID,TTCID
 type Public String V,VL

 type Number CID
 set CID=vc2

 if CID=TCID do {
	set V=""
	set VL=""
	}

 if CID'=CIDT set TTCID=TTCID+1

 set CIDT=CID
 set TCID=CID

	quit

VP2	// Column post-processor - [SYSDEV,LNCONBL1]ORIG

	type public String vc7
 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TORIG

 set TORIG=TORIG+vc7.piece("#",4)

	quit

VP3	// Column post-processor - [SYSDEV,LNCONBL1]AMTREM

	type public String vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27
 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number IDIST,ITRSFR,PDIST,PTRSFR,TAMTREM

 type Number I
 type String LNCONBL(),TARR

 set TAMTREM=TAMTREM+vc7.piece("#",1)

 set ITRSFR=0
 set PTRSFR=0
 set IDIST=0
 set PDIST=0

 do GETBIL(.LNCONBL)	// Populate the LNCONBL array

 for I=1:1 set TARR=LNCONBL(I) quit:TARR.isNull()  do COMP 

 quit


COMP

 type Public Number IDIST,ITRSFR,PDIST,PTRSFR,TIDIST,TITRSFR,TPDIST,TPTRSFR
 type Public String TARR

 type String PRI

 set PRI=TARR.piece("#",1)
 if PRI="I" do { quit
	set ITRSFR=TARR.piece("#",3)
	set IDIST=TARR.piece("#",4)
	set TITRSFR=TITRSFR+ITRSFR
	set TIDIST=TIDIST+IDIST
	}
 else  if PRI="P" do {
	set PTRSFR=TARR.piece("#",3)
	set PDIST=TARR.piece("#",4)
	set TPTRSFR=TPTRSFR+PTRSFR
	set TPDIST=TPDIST+PDIST
	}

 quit


GETBIL(LNCONBL)
 /*
  Retrieves payment elements from the conversion bill record
  and adds them to the LNCONBL array passed in.
 */
 set LNCONBL(1)=vc8
 set LNCONBL(2)=vc9
 set LNCONBL(3)=vc10
 set LNCONBL(4)=vc11
 set LNCONBL(5)=vc12
 set LNCONBL(6)=vc13
 set LNCONBL(7)=vc14
 set LNCONBL(8)=vc15
 set LNCONBL(9)=vc16
 set LNCONBL(10)=vc17
 set LNCONBL(11)=vc18
 set LNCONBL(12)=vc19
 set LNCONBL(13)=vc20
 set LNCONBL(14)=vc21
 set LNCONBL(15)=vc22
 set LNCONBL(16)=vc23
 set LNCONBL(17)=vc24
 set LNCONBL(18)=vc25
 set LNCONBL(19)=vc26
 set LNCONBL(20)=vc27

 quit
	
	quit

VP4	// Column post-processor - Due           Remaining

 /*
 
   ---- Revision History------------------------------------------------
 
	02/11/05 - KELLYP - CR 14452
		Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TAMTREM,TCID,TIDIST,TITRSFR,TORIG,TPDIST,TPTRSFR,TTCID

 set TCID=""
 set TTCID=""
 set TORIG=""
 set TAMTREM=""
 set TIDIST=""
 set TPDIST=""
 set TITRSFR=""
 set TPTRSFR=""

	quit

VP5	// Column post-processor - Page Totals

 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number TTCID
 type Public String V,VL

 if 'TTCID.isNull() quit

 set V=""
 set VL=""

	quit

VP6	// Column post-processor - Variable: TTCID

 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number GTCID,TTCID

 if TTCID.isNull() quit

 set GTCID=GTCID+TTCID
 set TTCID=0
	quit

VP7	// Column post-processor - Variable: TITRSFR

 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number GITRSFR,TAMTREM,TITRSFR,TORIG

 set GITRSFR=GITRSFR+TITRSFR
 set TITRSFR=0
 set TORIG=0
 set TAMTREM=0
	quit

VP8	// Column post-processor - Variable: TIDIST

 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number GIDIST,TIDIST

 set GIDIST=GIDIST+TIDIST
 set TIDIST=0

	quit

VP9	// Column post-processor - Variable: TPTRSFR

 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number GPTRSFR,TPTRSFR

 set GPTRSFR=GPTRSFR+TPTRSFR
 set TPTRSFR=0

	quit

VP10	// Column post-processor - Variable: TPDIST

 /*
 
   ---- Revision History------------------------------------------------
 
        02/11/05 - KELLYP - CR 14452
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public Number GPDIST,TCID,TPDIST,TTCID
 type Public String V,VL

 set TCID=""
 set GPDIST=GPDIST+TPDIST
 set TPDIST=0
 if TTCID.isNull() do {
	set V=""
	set VL=""
	}

	quit
