R01S210	// SCA155A - Deferred Fee Trial Balance Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:53 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="SCA155A"
	set RN="Deferred Fee Trial Balance Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNCYCPTS]PLAN|[AOAMO]PLAN,PDES:QU ""[AOAMO]TYP=<<""""PTS"""">>&[AOAMO]PAYEE=1""||D EXT^DBSQRY||T|Net Fee Plan|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,OD,OD1,PAYEE,PLAN,RID,RN,TBAL,TINT,TNINV,TNP,TREM,TYLD,TYP,V2C,V3C,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA155A",RN="Deferred Fee Trial Balance Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA155A","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=40				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNCYCPTS]CID#1#12,[LNCYCPTS]NFEE#15#9,[LNCYCPTS]NPDA#26#8,[LNCYCPTS]NINV#36#10,[LN]BAL#47#10,[LNCYCPTS]CNTR#59#4,[LNCYCPTS]CALTD#64#9,[LNCYCPTS]GFD#74#9,[LN]IRN#84#8,[LNCYCPTS]NXADT#93#10,[LN]DIST1ND#104#10,[LN]INDEX#115#18\[LNCYCPTS]TERM#59#4,[LNCYCPTS]AMT#64#9,[LNCYCPTS]GCD#74#9,[LNCYCPTS]RATE#84#8,[LNCYCPTS]LSADT#93#10,[LN]SCHND#104#10,[LN]PCHND#115#10,[LN]PTRM#126#7"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNCYCPTS]PLAN "_VIN1,SEQ=SEQ+1
		set DQQRY(SEQ)="[LNCYCPTS]PLAN'=""""",SEQ=SEQ+1
		set DQQRY(SEQ)="[LN]STAT<>4",SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT IS NULL)",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNCYCPTS,LN,AOAMO") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Net Fee Plan"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Deferred Fee Trial Balance Summary"
		set VBNRINFO("PGM")="R01S210"
		set VBNRINFO("RID")="SCA155A"
		set VBNRINFO("TABLES")="LNCYCPTS,LN,AOAMO"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNCYCPTS]TYP"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNCYCPTS]PAYEE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNCYCPTS]PLAN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNCYCPTS]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:8 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNCYCPTS.TYP,LNCYCPTS.PAYEE,LNCYCPTS.PLAN,LNCYCPTS"
	set VSELECT=VSELECT_".CID,LN.BAL,LNCYCPTS.NINV,LNCYCPTS.NFEE,LNCYCPTS.N"
	set VSELECT=VSELECT_"PDA,LNCYCPTS.CALTD,LNCYCPTS.AMT,LNCYCPTS.GFD,LNCYC"
	set VSELECT=VSELECT_"PTS.GCD,LNCYCPTS.CNTR,LN.IRN,LNCYCPTS.NXADT,LN.DIS"
	set VSELECT=VSELECT_"T1ND,LN.INDEX,LNCYCPTS.TERM,LNCYCPTS.RATE,LNCYCPTS"
	set VSELECT=VSELECT_".LSADT,LN.SCHND,LN.PCHND,LN.PTRM,LN.PMTPI,LN.DIST1"
	set VSELECT=VSELECT_"AF,LN.BALCMP,LN.ONP,LN.DFP,AOAMO.FMET"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNCYCPTS,LN,AOAMO",VWHERE,"LNCYCPTS.TYP,LNCYCPTS.PAYEE,LNCYCPTS.PLAN,LNCYCPTS.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29
	set vc1=V.piece($C(9),1)			// LNCYCPTS.TYP
	set vc2=V.piece($C(9),2)			// LNCYCPTS.PAYEE
	set vc3=V.piece($C(9),3)			// LNCYCPTS.PLAN
	set vc4=V.piece($C(9),4)			// LNCYCPTS.CID
	set vc5=V.piece($C(9),5)			// LN.BAL
	set vc6=V.piece($C(9),6)			// LNCYCPTS.NINV
	set vc7=V.piece($C(9),7)			// LNCYCPTS.NFEE
	set vc8=V.piece($C(9),8)			// LNCYCPTS.NPDA
	set vc9=V.piece($C(9),9)			// LNCYCPTS.CALTD
	set vc10=V.piece($C(9),10)			// LNCYCPTS.AMT
	set vc11=V.piece($C(9),11)			// LNCYCPTS.GFD
	set vc12=V.piece($C(9),12)			// LNCYCPTS.GCD
	set vc13=V.piece($C(9),13)			// LNCYCPTS.CNTR
	set vc14=V.piece($C(9),14)			// LN.IRN
	set vc15=V.piece($C(9),15)			// LNCYCPTS.NXADT
	set vc16=V.piece($C(9),16)			// LN.DIST1ND
	set vc17=V.piece($C(9),17)			// LN.INDEX
	set vc18=V.piece($C(9),18)			// LNCYCPTS.TERM
	set vc19=V.piece($C(9),19)			// LNCYCPTS.RATE
	set vc20=V.piece($C(9),20)			// LNCYCPTS.LSADT
	set vc21=V.piece($C(9),21)			// LN.SCHND
	set vc22=V.piece($C(9),22)			// LN.PCHND
	set vc23=V.piece($C(9),23)			// LN.PTRM
	set vc24=V.piece($C(9),24)			// LN.PMTPI
	set vc25=V.piece($C(9),25)			// LN.DIST1AF
	set vc26=V.piece($C(9),26)			// LN.BALCMP
	set vc27=V.piece($C(9),27)			// LN.ONP
	set vc28=V.piece($C(9),28)			// LN.DFP
	set vc29=V.piece($C(9),29)			// AOAMO.FMET
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type Public String PAYEE,TBAL,TINT,TNINV,TNP,TREM,TYLD,TYP,V2C,V3C

	set (TNP,TREM,TINT,TYLD,TBAL,TNINV,V2C,V3C)=0
	set TYP="PTS"
	set PAYEE=1
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(4)=1		// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc10,vc9,vc12,vc11,vc7,vc6,vc8,vc5
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc10			// @TOT([LNCYCPTS]AMT)
	set VT(4,2,1)=VT(4,2,1)+vc9			// @TOT([LNCYCPTS]CALTD)
	set VT(4,3,1)=VT(4,3,1)+vc12			// @TOT([LNCYCPTS]GCD)
	set VT(4,4,1)=VT(4,4,1)+vc11			// @TOT([LNCYCPTS]GFD)
	set VT(4,5,1)=VT(4,5,1)+vc7			// @TOT([LNCYCPTS]NFEE)
	set VT(4,6,1)=VT(4,6,1)+vc6			// @TOT([LNCYCPTS]NINV)
	set VT(4,7,1)=VT(4,7,1)+vc8			// @TOT([LNCYCPTS]NPDA)
	set VT(4,8,1)=VT(4,8,1)+vc5			// @TOT([LN]BAL)
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,IOSL,OD,OD1,PAYEE,PLAN,RID,RN,TBAL,TINT,TNINV,TNP,TREM,TYLD,TYP,V,V2C,V3C,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set V="Net Deferred Fee Plan: " do VP1 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",23-VL.length())_$E(vc3,1,6)
	do VOM
	set VL="" do VOM
	set VL=" "_"Account Nbr   Deferred  Non Perf  Net Invsmt    Account  #Amo  Amo Life  Grs Fees     Rate   Nxt Calc   Next Due Index"
	do VOM
	set VL="               "_" Fee Bal   Fee Bal     Balance    Balance  #Tot  Original  Grs Cost    Yield   Lst Calc   Next Sch N Pt Chg   Pmt Trm"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,IOSL,OD,OD1,PAYEE,PLAN,TBAL,TINT,TNINV,TNP,TREM,TYLD,TYP,V,V2C,V3C,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$J(V,12) do VP2 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",14-VL.length())_$J($FN(vc7,",",2),9)
	set VL=VL_$J("",25-VL.length())_$J($FN(vc8,",",2),8)
	set V=vc6,VO=V set V=$J($FN(V,",",2),10) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",35-VL.length())_V		// [SYSDEV,LNCYCPTS]NINV
	set VL=VL_$J("",46-VL.length())_$J($FN(vc5,",",2),10)
	set VL=VL_$J("",58-VL.length())_$J(vc13,4)
	set VL=VL_$J("",63-VL.length())_$J($FN(vc9,",",2),9)
	set VL=VL_$J("",73-VL.length())_$J($FN(vc11,",",2),9)
	set V=vc14,VO=V set V=$J($FN(V,",",2),8) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",83-VL.length())_V		// [SYSDEV,LN]IRN
	set VL=VL_$J("",92-VL.length())_$J($$DAT^%ZM(vc15),10)
	set VL=VL_$J("",103-VL.length())_$J($$DAT^%ZM(vc16),10)
	set V=vc17,VO=V set V=$E(V,1,18) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",114-VL.length())_V		// [SYSDEV,LN]INDEX
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                          "_$J(vc18,4)
	set VL=VL_$J("",63-VL.length())_$J($FN(vc10,",",2),9)
	set VL=VL_$J("",73-VL.length())_$J($FN(vc12,",",2),9)
	set V=vc19,VO=V set V=$J($FN(V,",",2),8) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",83-VL.length())_V		// [SYSDEV,LNCYCPTS]RATE
	set VL=VL_$J("",92-VL.length())_$J($$DAT^%ZM(vc20),10)
	set VL=VL_$J("",103-VL.length())_$J($$DAT^%ZM(vc21),10)
	set VL=VL_$J("",114-VL.length())_$J($$DAT^%ZM(vc22),10)
	set V=vc23,VO=V set V=$E(V,1,7) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",125-VL.length())_V		// [SYSDEV,LN]PTRM
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %TIM,I,IOSL,OD,OD1,PAYEE,PLAN,TBAL,TINT,TNINV,TNP,TREM,TYLD,TYP,V,V2C,V3C,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+10>IOSL do VHDG0 quit:VFMQ

	set VL="Net Fee Plan "
	set VL=VL_$J("",13-VL.length())_$E(vc3,1,6)
	set VL=VL_$J("",21-VL.length())_"Totals:    Accounts        Loan Balance        Net Investment"
	do VOM
	set V=VT(4)					// @CNT(,N,8)
	set VL="                                "_$J(V,8)
	set V=VT(4,8,1)					// @TOT([LN]BAL,)
	set V=$J($FN(V,",",2),12) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",48-VL.length())_V		// @TOT([LN]BAL,)
	set V=VT(4,6,1)					// @TOT([LNCYCPTS]NINV,)
	set V=$J($FN(V,",",2),12) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",70-VL.length())_V		// @TOT([LNCYCPTS]NINV,)
	do VOM
	set VL="" do VOM
	set VL="Net Deferred Fees"
	set VL=VL_$J("",19-VL.length())_"+"
	set VL=VL_$J("",22-VL.length())_"Non-Perf Fee Bal"
	set VL=VL_$J("",40-VL.length())_"+"
	set VL=VL_$J("",43-VL.length())_"Fees Recognized"
	set VL=VL_$J("",60-VL.length())_"="
	set VL=VL_$J("",63-VL.length())_"Original Deferred"
	do VOM
	set V=VT(4,5,1)					// @TOT([LNCYCPTS]NFEE,)
	set VL="     "_$J($FN(V,",",2),12)
	set V=VT(4,7,1)					// @TOT([LNCYCPTS]NPDA,)
	set VL=VL_$J("",26-VL.length())_$J($FN(V,",",2),12)
	set V=VT(4,2,1)					// @TOT([LNCYCPTS]CALTD,)
	set VL=VL_$J("",46-VL.length())_$J($FN(V,",",2),12)
	set V=VT(4,1,1)					// @TOT([LNCYCPTS]AMT,)
	set V=$J($FN(V,",",2),12) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",68-VL.length())_V		// @TOT([LNCYCPTS]AMT,)
	do VOM
	set VL="" do VOM
	set VL="Gross Deferred Fees"
	set VL=VL_$J("",21-VL.length())_"-"
	set VL=VL_$J("",24-VL.length())_"Gross Deferred Costs"
	set VL=VL_$J("",46-VL.length())_"="
	set VL=VL_$J("",49-VL.length())_"Original Deferred"
	do VOM
	set V=VT(4,4,1)					// @TOT([LNCYCPTS]GFD,)
	set VL="       "_$J($FN(V,",",2),12)
	set V=VT(4,3,1)					// @TOT([LNCYCPTS]GCD,)
	set VL=VL_$J("",32-VL.length())_$J($FN(V,",",2),12)
	do VP11 quit:VFMQ!verror.get()  set V=$J($FN(OD,",",2),12)
	set VL=VL_$J("",54-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Weighted Average: "
	set VL=VL_$J("",24-VL.length())_"Loan Rate"
	set VL=VL_$J("",42-VL.length())_"Loan Yield"
	set VL=VL_$J("",63-VL.length())_"Contractual Remaining Term"
	set VL=VL_$J("",95-VL.length())_"Actual Remaining Term"
	do VOM
	do VP12 quit:VFMQ!verror.get()  set V=$E($J(V,8,5),1,8) set VL="                         "_V
	do VP13 quit:VFMQ!verror.get()  set V=$E($J(V,8,5),1,8)
	set VL=VL_$J("",44-VL.length())_V
	do VP14 quit:VFMQ!verror.get()  set V=$E($J(V,6,2),1,8)
	set VL=VL_$J("",83-VL.length())_V
	do VP15 quit:VFMQ!verror.get()  set V=$E($J(V,6,2),1,8)
	set VL=VL_$J("",110-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,OD,OD1,PAYEE,PLAN,RID,RN,TBAL,TINT,TNINV,TNP,TREM,TYLD,TYP,V2C,V3C,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,OD,OD1,PAYEE,PLAN,TBAL,TINT,TNINV,TNP,TREM,TYLD,TYP,V2C,V3C,VPN,vc3,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+14>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Total Accounts: "
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4))		// @CNT(0,N,8)
	set VL=VL_$J("",16-VL.length())_$J(V,8)
	do VOM
	set VL="" do VOM
	set VL="Total Loan Balance  Total Net Investment"
	do VOM
	set V=0						// @TOT([LN]BAL,0)
	for I=0:1:4 set V=V+VT(I,8,1)
	set V=$J($FN(V,",",2),12) do VP16 quit:VFMQ!verror.get()  set VL="      "_V
	set V=0						// @TOT([LNCYCPTS]NINV,0)
	for I=0:1:4 set V=V+VT(I,6,1)
	set VL=VL_$J("",28-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="" do VOM
	set VL=" "_"Net Deferred Bal  +  Non-perf Fee Bal  +  Fees Recognized  =  Original Deferred"
	do VOM
	set V=0						// @TOT([LNCYCPTS]NFEE,0)
	for I=0:1:4 set V=V+VT(I,5,1)
	set VL="     "_$J($FN(V,",",2),12)
	set V=0						// @TOT([LNCYCPTS]NPDA,0)
	for I=0:1:4 set V=V+VT(I,7,1)
	set VL=VL_$J("",26-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([LNCYCPTS]CALTD,0)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VL=VL_$J("",46-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([LNCYCPTS]AMT,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	set V=$J($FN(V,",",2),12) do VP17 quit:VFMQ!verror.get()
	set VL=VL_$J("",68-VL.length())_V		// @TOT([LNCYCPTS]AMT,0)
	do VOM
	set VL="" do VOM
	set VL="Gross Deferred Fees  -  Gross Deferred Costs  =  Original Deferred"
	do VOM
	set V=0						// @TOT([LNCYCPTS]GFD,0)
	for I=0:1:4 set V=V+VT(I,4,1)
	set VL="       "_$J($FN(V,",",2),12)
	set V=0						// @TOT([LNCYCPTS]GCD,0)
	for I=0:1:4 set V=V+VT(I,3,1)
	set VL=VL_$J("",32-VL.length())_$J($FN(V,",",2),12)
	do VP18 quit:VFMQ!verror.get()  set V=$J($FN(OD1,",",2),12)
	set VL=VL_$J("",54-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Weighted Average:      Loan Rate            Loan Yield         Contractual Remaining Term      Actual Remaining Term"
	do VOM
	do VP19 quit:VFMQ!verror.get()  set V=$E($J(V,8,5),1,8) set VL="                        "_V
	do VP20 quit:VFMQ!verror.get()  set V=$E($J(V,8,5),1,8)
	set VL=VL_$J("",46-VL.length())_V
	do VP21 quit:VFMQ!verror.get()  set V=$E($J(V,6,2),1,8)
	set VL=VL_$J("",83-VL.length())_V
	do VP22 quit:VFMQ!verror.get()  set V=$E($J(V,6,2),1,8)
	set VL=VL_$J("",110-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - Net Deferred Fee Plan:

	type public String vc3
	type Public String PLAN,TREM(),TNP(),TINT(),TYLD(),TAMT(),TBAL(),TNINV(),VL,VT()

	set PLAN=vc3
	set (TREM(5),TNP(5),TINT(5),TYLD(5),TAMT(5),TBAL(5),TNINV(5),VT(5))=0
	quit

VP2	// Column post-processor - [SYSDEV,LNCYCPTS]CID

	type public String vc24,vc25,vc14,vc26,vc27,vc21,vc28
 /*
  ---- Revision History ------------------------------------------------
 
        03/31/06 - TITOVE - CR 20480
		   Converted into PSL. 
 */

 type public Number ER = 0

 type public Number B, IR, NP, P, T

 set P = vc24

 set IR = $select(vc25:vc14/(vc25*100),1:0)
 
 if ((P - (IR*vc26)) '> 0)!('P) set NP = vc27 do VP5PP(NP) quit
 
 set T = $$LNX^%ZFUNC(P / (P - (IR * vc26)))
 
 set B = $$LNX^%ZFUNC(1 + IR) 

 if 'B set NP = vc27 do VP5PP(NP) quit
 
 set NP = $select(B:$J(T/B+.5,0,0),1:0)

 do VP5PP(NP)

 quit

VP5PP(Number NP)

 type public Number TNP, TREM

 type Number X

 set X = NP * vc26

 set TNP = TNP + X

 set TNP(5) = TNP(5) + X
 set X = 0

 if vc25 set X = vc27 - $J(vc21-vc28/vc25,0,0)

 set X = X * vc26

 if (X < 0) set X = 0

 set TREM = TREM + X

 set TREM(5) = TREM(5) + X

 quit
	quit

VP3	// Column post-processor - [SYSDEV,LNCYCPTS]NINV

	type public String vc29
	type Public String TNINV,VO

	if vc29 quit 
	set TNINV=TNINV+VO
	quit

VP4	// Column post-processor - [SYSDEV,LN]IRN

	type public String vc5
	type Public String TINT,VO,X

	set X=VO/100*vc5
	set TINT=TINT+X
	set TINT(5)=TINT(5)+X
	quit

VP5	// Column post-processor - [SYSDEV,LN]INDEX

 type public String V, VL 

 set (V,VL) = ""
	quit

VP6	// Column post-processor - [SYSDEV,LNCYCPTS]RATE

	type public String vc29,vc6
	type Public String TYLD,VO,X

	if vc29 quit 
	set X=(VO/100*vc6)
	set TYLD(5)=TYLD(5)+X
	set TYLD=TYLD+X
	quit

VP7	// Column post-processor - [SYSDEV,LN]PTRM

 type public String V, VL
 
 set (V,VL) = ""
	quit

VP8	// Column post-processor - @TOT([LN]BAL,,E,12)

	type Public String TBAL,VT

	set TBAL(5)=VT(4,8,1)
	quit

VP9	// Column post-processor - @TOT([LNCYCPTS]NINV,,E,12)

	type Public String TNINV,VT

	set TNINV(5)=VT(4,2,1)
	quit

VP10	// Column post-processor - @TOT([LNCYCPTS]AMT,,E,12)

	type Public String TAMT,VT

	set TAMT(5)=VT(4,1,1)
	quit

VP11	// Column pre-processor - Variable: OD

	type Public String OD,TAMT

	set OD=$$^SCARND(TAMT(5),0)
	quit

VP12	// Column pre-processor - Variable: $J(V

	type Public String TBAL,TINT,V

	if 'TBAL(5) set V=0 quit 
	set V=$J(TINT(5)/TBAL(5)*100,0,5)

	quit

VP13	// Column pre-processor - Variable: $J(V

	type Public String TNINV,TYLD,V

	if 'TNINV(5) set V=0 quit 
	set V=$J(TYLD(5)/TNINV(5)*100,0,5)

	quit

VP14	// Column pre-processor - Variable: $J(V

	type public String vc4
	type Public String CID,TBAL,TREM,V

	set CID=vc4
	if 'TBAL(5) set V=0 quit 
	set V=$$^SCARND(TREM(5)/TBAL(5),0,CID)

	quit

VP15	// Column pre-processor - Variable: $J(V

	type Public String CID,TBAL,TNP,V

	if 'TBAL(5) set V=0 quit 
	set V=$$^SCARND(TNP(5)/TBAL(5),0,CID)

	quit

VP16	// Column post-processor - @TOT([LN]BAL,0,E,12)

	type Public String I,TBAL,VT

	set TBAL=0

	for I=0:1:4 set TBAL=TBAL+VT(I,8,1)
	quit

VP17	// Column post-processor - @TOT([LNCYCPTS]AMT,0,E,12)

	type Public String I,TAMT,VT

	set TAMT=0

	for I=0:1:4 set TAMT=TAMT+VT(I,1,1)
	quit

VP18	// Column pre-processor - Variable: OD1

	type Public String OD1,TAMT

	set OD1=$$^SCARND(TAMT,0)
	quit

VP19	// Column pre-processor - Variable: $J(V

	type Public String TBAL,TINT,V

	if 'TBAL set V=0 quit 
	set V=$J(TINT/TBAL*100,0,5)

	quit

VP20	// Column pre-processor - Variable: $J(V

	type Public String TNINV,TYLD,V

	if 'TNINV set V=0 quit 
	set V=$J(TYLD/TNINV*100,0,5)

	quit

VP21	// Column pre-processor - Variable: $J(V

	type Public String CID,TBAL,TREM,V

	if 'TBAL set V=0 quit 
	set V=$$^SCARND(TREM/TBAL,0,CID)

	quit

VP22	// Column pre-processor - Variable: $J(V

	type Public String CID,TBAL,TNP,V

	if 'TBAL set V=0 quit 
	set V=$$^SCARND(TNP/TBAL,0,CID)

	quit
