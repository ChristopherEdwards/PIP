GLADCC	/*
	       ORIG:  WOODWARD - 16 APR 1992
	       DESC:  Maintain G/L Cost Center Restrictions

	 ----- Revision History ------------------------------------------------
		
		 01/05/05 - ARPAVC - 13861
		 	    Fixed compile errors and miscellaneous issues
		 	    due to conversion.  
		 	    - Properly scoped all variables
		 	    - Added calls into END procedure to display
		 	      messages correctly. 
		 	    
		 09/25/02 - DATTAR - 49451
			    Converted to PSL
		
	 -----------------------------------------------------------------------	
	
	*/
	quit
	
UPD	//

	do INIT(1) 
	quit 


INQ	//

	do INIT(2) 
	quit 
	

INIT(%ProcessMode) //
	
	type Public Boolean ER
	type Public String ET,RM
	
	type String CC(),CCOLD()
	type Number ACN,%MODS,%PAGE,%PG,%REPEAT
	type String OLNTB,VFMQ
	type Boolean FINISH
	
	set %PG=0
	set %PAGE=20
	set %REPEAT=10

	//Page control

        set FINISH=0
        for  do { quit:FINISH
                if %PG=0 do VPG00 if ER set FINISH=1 quit

                if %PG>0 do VPG01

                if "DFQ"[VFMQ do VER set FINISH=1 quit

                set %PG=%PG+1
                }

        quit


VPG00	//Set up

	type String %TAB()
	type String %NOPRMT,%READ
	type Public Number ACN
	type Public Boolean ER
	type Public String ET,RM,UTBL(),VFMQ
	
	set %TAB("ACN")=".ACN5/TBL=[GLAD]"
	set %TAB("IO")=$$IO^SCATAB($I)
	
	set %READ="@@%FN,,,ACN/REQ" 
	set %NOPRMT="N"
	if %ProcessMode=2 set %READ=%READ_",IO"

	do ^UTLREAD 

	if VFMQ="Q" set ER=1 quit 

	lock +UTBL("GLADCC"):2
        else  set ER=1 set ET="RECLOC" quit
	
	do LDCCNTR

	quit 
	

VPG01	//Screen

	type Public Number ACN,%MODS,%PAGE,%PG,%REPEAT
	
	set %MODS=(%PG*%REPEAT)-%REPEAT+1
	type RecordGLAD fGLAD=Db.getRecord("GLAD","ACN=:ACN")

	do DRV^USID(%ProcessMode,"GLADCC",.fGLAD)

	quit 
	

LDCCNTR	// Load CC array from UTBLGLADCC

	type Number I,J,X
	type Public String CC(),CCOLD()
	
	set (I,J)=1
        set X=0

	type ResultSet rs=Db.select("CC","UTBLGLADCC","ACN=:ACN")
	while rs.next() do {
	
		// Save the cost centers to the CC/CCOLD arrays
		set $P(CC(I),"|",J)=rs.getCol("CC")
		set J=J+1
		set X=X+1
		if X#8=0 set I=I+1 set J=1
		set CCOLD(rs.getCol("CC"))=""
		}
	quit

	
VER	//

	type Public String VFMQ
	
	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit
	
	do FILE
	do END
	
	quit


FILE    // File data
	
	type Number CCN,I,J
	type Public String CC(),CCOLD()
	type Public Number ACN
	type Public Boolean ER
	
	set (I,J,CCN)=""

	for  set I=$O(CC(I)) quit:I=""  do { quit:ER 
		for J=1:1:8 set CCN=$P(CC(I),"|",J) if CCN'="" do {
			if $D(CCOLD(CCN)) kill CCOLD(CCN)
			else  do {
				type RecordUTBLGLADCC fUTBLGLA=Class.new("RecordUTBLGLADCC")
				set fUTBLGLA.acn=ACN
				set fUTBLGLA.cc=CCN
				do fUTBLGLA.save()
				}
			}
		}
	
	if '$D(CCOLD) quit 
	set CCN=""

	for  set CCN=$O(CCOLD(CCN)) quit:CCN=""  do { quit:ER
		do Db.delete("UTBLGLADCC","ACN=:ACN and CC=:CCN")
		}
	
	quit 
	
END	//
	
	type Public Boolean ER
	type Public String RM,UTBL(),VFMQ
	type Public Number ACN

	lock -UTBL("GLADCC")	
	if $G(ER)!(%ProcessMode=2)!(%ProcessMode=4) quit

	set ER="W"

	// G/L Account ~p1 not modified
	if VFMQ="Q" set RM=$$^MSG(1240,ACN)

	// G/L Account ~p1 modified
	else  set RM=$$^MSG(1241,ACN)	

	quit 

vSIG()	quit "59932^39218^Vincent Arpa^3055"	// Signature - LTD^TIME^USER^SIZE
