R01S498	// SCA554 - Net Interest/Dividend Margin Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:59 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String AGID
	type String AGID1
	type Number REGEN
	type String TRANSCCY
	type String VIN4="ALL"

	set RID="SCA554"
	set RN="Net Interest/Dividend Margin Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("AGID")="|20|||[DBTBL22]AGID||do AGID^NIMCOL(X)||T|Net Interest Margin Internal Matrix|||||"
	set %TAB("AGID1")="|20|||[DBTBL22]AGID||do AGID^NIMCOL(X)||T|Net Interest Margin External Matrix|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("REGEN")="|1|||||||L|Regenerate Net Interest Margin Data|||||"
	set %TAB("TRANSCCY")="|3|||[CRCD]CRCD||||T|Translation Currency|||||"
	set %TAB("VIN4")="|255||[TMPRPT2]KEY1|[CRCD]CRCD||D EXT^DBSQRY||T|Currency Code|||||"

	set %READ="IO/REQ,REGEN#1,AGID#1,AGID1#1,VIN4#0,TRANSCCY#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=38
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number REGEN
	type public String AGID,AGID1,VIN4,TRANSCCY
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,CRCDDESC,DBAL,DINT,DIRS,DNIMB,DNIMI,DNIMWAR,DWAR,MBAL,MINT,MIRS,MNIMB,MNIMI,MNIMWAR,MWAR,RID,RN,ROWDESC,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA554",RN="Net Interest/Dividend Margin Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA554","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[TMPRPT2]KEY1 "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("TMPRPT2") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",4)="WC2|"_"Currency Code"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Net Interest/Dividend Margin Report"
		set VBNRINFO("PGM")="R01S498"
		set VBNRINFO("RID")="SCA554"
		set VBNRINFO("TABLES")="TMPRPT2"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TMPRPT2]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TMPRPT2]KEY1"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TMPRPT2]KEY2"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT="TMPRPT2.PID,TMPRPT2.KEY1,TMPRPT2.KEY2,TMPRPT2.DATA"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"TMPRPT2",VWHERE,"TMPRPT2.PID,TMPRPT2.KEY1,TMPRPT2.KEY2","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4
	set vc1=V.piece($C(9),1)			// TMPRPT2.PID
	set vc2=V.piece($C(9),2)			// TMPRPT2.KEY1
	set vc3=V.piece($C(9),3)			// TMPRPT2.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT2.DATA
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 do ^NIMCOL
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming = AGID, AGID1, REGEN, TRANSCCY
	quit

VRPOST	// Report post-processor

 do Db.fastDelete("TMPRPT2", "PID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1		// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL3	// Detail
	type public String %TIM,CRCDDESC,DBAL,DINT,DIRS,DNIMB,DNIMI,DNIMWAR,DWAR,IOSL,MBAL,MINT,MIRS,MNIMB,MNIMI,MNIMWAR,MWAR,ROWDESC,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$E(ROWDESC,1,25) set VL=V
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(DBAL,",",2),16)
	set VL=VL_$J("",31-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(DINT,",",2),16)
	set VL=VL_$J("",49-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J(DWAR,9,6)
	set VL=VL_$J("",68-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V=$J($FN(MBAL,",",2),16)
	set VL=VL_$J("",83-VL.length())_V
	do VP6 quit:VFMQ!verror.get()  set V=$J($FN(MINT,",",2),16)
	set VL=VL_$J("",103-VL.length())_V
	do VP7 quit:VFMQ!verror.get()  set V=$J(MWAR,9,6)
	set VL=VL_$J("",121-VL.length())_V
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,CRCDDESC,DBAL,DINT,DIRS,DNIMB,DNIMI,DNIMWAR,DWAR,I,IOSL,MBAL,MINT,MIRS,MNIMB,MNIMI,MNIMWAR,MWAR,ROWDESC,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="Interest Rate Spread"
	do VP8 quit:VFMQ!verror.get()  set V=$J(DIRS,9,6)
	set VL=VL_$J("",68-VL.length())_V
	do VP9 quit:VFMQ!verror.get()  set V=$J(MIRS,9,6)
	set VL=VL_$J("",121-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Net Interest Margin"
	do VP10 quit:VFMQ!verror.get()  set V=$J($FN(DNIMB,",",2),16)
	set VL=VL_$J("",31-VL.length())_V
	do VP11 quit:VFMQ!verror.get()  set V=$J($FN(DNIMI,",",2),16)
	set VL=VL_$J("",49-VL.length())_V
	do VP12 quit:VFMQ!verror.get()  set V=$J(DNIMWAR,9,6)
	set VL=VL_$J("",68-VL.length())_V
	do VP13 quit:VFMQ!verror.get()  set V=$J($FN(MNIMB,",",2),16)
	set VL=VL_$J("",83-VL.length())_V
	do VP14 quit:VFMQ!verror.get()  set V=$J($FN(MNIMI,",",2),16)
	set VL=VL_$J("",103-VL.length())_V
	do VP15 quit:VFMQ!verror.get()  set V=$J(MNIMWAR,9,6)
	set VL=VL_$J("",121-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,CRCDDESC,DBAL,DINT,DIRS,DNIMB,DNIMI,DNIMWAR,DWAR,MBAL,MINT,MIRS,MNIMB,MNIMI,MNIMWAR,MWAR,RID,RN,ROWDESC,VL,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Currency: "
	set V=vc2,VO=V do VP16 quit:VFMQ!verror.get()  set V=$E(V,1,3)
	set VL=VL_$J("",10-VL.length())_V		// [SYSDEV,TMPRPT2]KEY1
	do VP17 quit:VFMQ!verror.get()  set V=$E(CRCDDESC,1,25)
	set VL=VL_$J("",15-VL.length())_V
	do VOM
	set VL="                                                                                         "_"Month-to-          Month-to-"
	do VOM
	set VL="Description                       Daily Balance    Daily Int/Div      Percent          Date Balance       Date Int/Div     Percent"
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: ROWDESC

	type public String vc3
 type Public Number TIBAR, TIEAR
 type Public String AGID, AGID1, ROWDESC

 type Number ROW
 type RecordUTBLALM ualm
 type RecordDBTBL22R d22r, d22r2

 set ROWDESC = ""
 set ROW = vc3
 set ualm = Db.getRecord("UTBLALM", "AGID=:AGID,ROW=:ROW", 1)
 if ualm.getMode(), ((ROW = TIEAR) ! (ROW = TIBAR)) set ROWDESC = ualm.desc quit 
 set d22r = Db.getRecord("DBTBL22R", "%LIBS='SYSDEV',AGID=:AGID,ROW=:ROW", 1)
 set ROWDESC = d22r.des
 if 'ROWDESC.isNull() quit
 set d22r2 = Db.getRecord("DBTBL22R", "%LIBS='SYSDEV',AGID=:AGID1,ROW=:ROW", 1)
 set ROWDESC = d22r2.des
 if ROWDESC.isNull(), ualm.getMode() set ROWDESC = ualm.desc
	quit

VP2	// Column pre-processor - Variable: DBAL

	type public String vc4
 type Public Number DBAL
 type Public String ROWDATA

 set ROWDATA = vc4
 set DBAL = ROWDATA.piece("|", 1)
	quit

VP3	// Column pre-processor - Variable: DINT

 type Public Number DINT
 type Public String ROWDATA

 set DINT = ROWDATA.piece("|", 2)
	quit

VP4	// Column pre-processor - Variable: DWAR

 type Public Number DWAR
 type Public String ROWDATA

 set DWAR = ROWDATA.piece("|", 5)
	quit

VP5	// Column pre-processor - Variable: MBAL

 type Public Number MBAL
 type Public String ROWDATA

 set MBAL = ROWDATA.piece("|", 3)
	quit

VP6	// Column pre-processor - Variable: MINT

 type Public Number MINT
 type Public String ROWDATA

 set MINT = ROWDATA.piece("|", 4)
	quit

VP7	// Column pre-processor - Variable: MWAR

 type Public Number MWAR
 type Public String ROWDATA

 set MWAR = ROWDATA.piece("|", 6)
	quit

VP8	// Column pre-processor - Variable: DIRS

 type Public Number DIRS, TIBAR, TIEAR
 type Public String CRCD, TIBDATA, TIEDATA

 type Number TIBAWAR, TIEAWAR

 type RecordTMPRPT2 tibr2, tier2
 /*
  TIEAWAR=Total Interest Earning Assets Weighted Average Rate
  TIBAWAR=Total Interest Bearing Accounts Weighted Average rate
  DIRS=Interest Rate Spread
 */

 set TIEDATA = ""
 set TIBDATA = ""
 
 set tier2 = Db.getRecord("TMPRPT2", "PID=:%ProcessID,KEY1=:CRCD,KEY2=:TIEAR", 1)
 if tier2.getMode() set TIEDATA = tier2.data 
 set tibr2 = Db.getRecord("TMPRPT2", "PID=:%ProcessID,KEY1=:CRCD,KEY2=:TIBAR", 1)
 if tibr2.getMode() set TIBDATA = tibr2.data

 set TIEAWAR = TIEDATA.piece("|", 5)
 set TIBAWAR = TIBDATA.piece("|", 5)
 set DIRS = TIEAWAR - TIBAWAR
	quit

VP9	// Column pre-processor - Variable: MIRS

 type Public Number MIRS
 type Public String TIBDATA, TIEDATA

 type Number TIBAWAR, TIEAWAR

 /*
  TIEAWAR=Total Interest Earning Assets Weighted Average Rate
  TIBAWAR=Total Interest Bearing Accounts Weighted Average rate
  MIRS=Interest Rate Spread
 */

 set TIEAWAR = TIEDATA.piece("|", 6)
 set TIBAWAR = TIBDATA.piece("|", 6)
 set MIRS = TIEAWAR - TIBAWAR
	quit

VP10	// Column pre-processor - Variable: DNIMB

 type Public Number DNIMB
 type Public String TIEDATA

 set DNIMB = +TIEDATA.piece("|", 1)
	quit

VP11	// Column pre-processor - Variable: DNIMI

 type Public Number DNIMI
 type Public String TIBDATA, TIEDATA
 
 type Number DTEAI, DTIBI

 /*
  DTEAI=Daily Total Interest Earning Assets Interest
  DTIBI=Daily Total Interest Bearing Acounts Interest
  DNIMI=Daily Net Interest Margin Interest
 */

 set DTEAI = TIEDATA.piece("|", 2)
 set DTIBI = TIBDATA.piece("|", 2)
 set DNIMI = DTEAI - DTIBI
	quit

VP12	// Column pre-processor - Variable: DNIMWAR

 type Public Number DIY, DNIMB, DNIMI, DNIMWAR

 if DNIMB = 0 set DNIMWAR = 0 quit
 set DNIMWAR = DNIMI * DIY / DNIMB * 100
	quit

VP13	// Column pre-processor - Variable: MNIMB

 type Public Number MNIMB
 type Public String TIEDATA

 // MNIMB=Monthly Net Interest Margin Balance
 set MNIMB = +TIEDATA.piece("|", 3)
	quit

VP14	// Column pre-processor - Variable: MNIMI

 type Public Number MNIMI
 type Public String TIBDATA, TIEDATA

 type Number MTEAI, MTIBI

 /*
  MTEAI=Monthly Total Interest Earning Assets Interest
  MTIBI=Monthly Total Interest Bearing Acounts Interest
  MNIMI=Monthly Net Interest Margin Interest
 */
 
 set MTEAI = TIEDATA.piece("|", 4)
 set MTIBI = TIBDATA.piece("|", 4)
 set MNIMI = MTEAI - MTIBI
	quit

VP15	// Column pre-processor - Variable: MNIMWAR

 type Public Number DAYS, DIY, MNIMB, MNIMI, MNIMWAR

 type Number MNIMAI

 if MNIMB = 0 set MNIMWAR = 0 quit
 set MNIMAI = MNIMI * DIY / DAYS
 set MNIMWAR = MNIMAI / MNIMB * 100
	quit

VP16	// Column pre-processor - [SYSDEV,TMPRPT2]KEY1

 type Public String V, X
 if V = "ZZZ" set V = "", X = ""
	quit

VP17	// Column pre-processor - Variable: CRCDDESC

	type public String vc2
 type Public String CRCD, CRCDDESC, TRANSCCY

 set CRCDDESC = ""
 set CRCD = vc2
 if 'TRANSCCY.get().isNull() do { quit
	// Amounts displayed in <<TRANSCCY>>
	set CRCDDESC = $$^MSG(3992, TRANSCCY)
	// Totals displayed in <<TRANSCCY>>
	if CRCD = "ZZZ" set CRCDDESC = $$^MSG(3993, TRANSCCY)
 }
 // Totals displayed in <<System Currency>>
 if CRCD = "ZZZ" set CRCDDESC = $$^MSG(3993, %SystemCurrency)
	quit
