BUDGETFL(RecordBUDGET budget, String vpar, Boolean vparNorm) // BUDGET - Budget Record File Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:22 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (13)             11/22/2003
	// Trigger Definition (2)                      12/17/2004
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = budget.getMode()                      // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(budget,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(budget,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String CID = budget.cid
	type String BGTYRSD = budget.bgtyrsd
	type String BGTSEQ = budget.bgtseq

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/TRIGBEF/" do VBI                            // Before insert triggers
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("CID").exists()!vx("BGTYRSD").exists()!vx("BGTSEQ").exists() do vkchged quit // Primary key changed
		if vpar["/TRIGBEF/" do VBU                            // Before update triggers
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("BUDGET",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("BUDGET","CID = :budget.cid and BGTYRSD = :budget.bgtyrsd and BGTSEQ = :budget.bgtseq") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String CID
	type public String BGTYRSD
	type public String BGTSEQ

	type RecordBUDGET budget = Db.getRecord("BUDGET","CID=:CID,BGTYRSD=:BGTYRSD,BGTSEQ=:BGTSEQ")
	if (%ProcessMode = 2) do {
		do budget.setMode(2)

		do BUDGETFL(budget,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordBUDGET budget

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("BUDGET","CID = :budget.cid and BGTYRSD = :budget.bgtyrsd and BGTSEQ = :budget.bgtseq") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(budget))  S ^BUDGET(vobj(budget,-3),vobj(budget,-4),vobj(budget,-5))=vobj(budget)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordBUDGET budget


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	ZWI ^BUDGET(vobj(budget,-3),vobj(budget,-4),vobj(budget,-5)) // Delete Record
	quit


vreqn // Validate required data items

	type public RecordBUDGET budget

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordBUDGET budget

	if budget.cid.isNull() do vreqerr("CID") quit
	if budget.bgtyrsd.isNull() do vreqerr("BGTYRSD") quit
	if budget.bgtseq.isNull() do vreqerr("BGTSEQ") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("BUDGET","MSG",1767,"BUDGET."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VBI //
	type public Number ER = 0
	type public String vx(),RM
	do vbi1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VBU //
	type public Number ER = 0
	type public String vx(),RM
	type public RecordBUDGET budget
	do vbu1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	do AUDIT^UCUTILN(budget,.vx(),1,"|")
	quit


vbi1 // Trigger BEFORE_INSERT - BEFORE INSERT

	type public RecordBUDGET budget
	/*
	----- Revision History------------------------------------------------^
	
	01/21/00 - SWEENEYT - 36318
		   Edit checks on required fields only if data is present in
		   the Budget record.
	*/
	 
	new XCID,data,DATE
	set XCID=budget.cid 
	set DATE=budget.bgtyrsd
	
	do {
	    new rs
	    type ResultSet rs=Db.select("BGTSEQ","BUDGET","CID=:XCID AND BGTYRSD=:DATE")
	    set data="" if 'rs.next()  quit
	    set data=rs.getRow()
	    }
	
 	if data do {
		
		// Data required in Data Item ~p1
		
		if budget.bgtcd="" do Runtime.setErrMSG("BUDGET",7531,"BUDGET.BGTCD") quit:ER
		if budget.bgtamtcy="" do Runtime.setErrMSG("BUDGET",7531,"BUDGET.BGTAMTCY") quit:ER
		if budget.cocd="" do Runtime.setErrMSG("BUDGET",7531,"BUDGET.COCD") quit:ER
		}
		
	quit

vbu1 // Trigger BU_BGTPRO - Before Update Budget Processing

	type public RecordBUDGET budget
	do budget.setAuditFlag(1)
	/*
	----- Revision History------------------------------------------------^
	01/13/00 - SWEENEYT - 36318
		   Added checks on Budget Code,Company Code and Budget Amount
		   Current Year to make sure data exists.
	
	*/
	
	// Data required in Data Item ~p1
	if budget.bgtcd="" do Runtime.setErrMSG("BUDGET",7531,"BUDGET.BGTCD") quit:ER
	if budget.bgtamtcy="" do Runtime.setErrMSG("BUDGET",7531,"BUDGET.BGTAMT") quit:ER
	if budget.cocd="" do Runtime.setErrMSG("BUDGET",7531,"BUDGET.COCD") quit:ER
	
	quit


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordBUDGET budget

	set X = budget.cid if 'X.isNull(),'Db.isDefined("ACN","X") set vRM = $$^MSG(1485,X) do vdderr("CID", vRM) quit
	set X = budget.bgtyrsd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("BGTYRSD", vRM) quit
	set X = budget.bgtseq if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("BGTSEQ", vRM) quit
	set X = budget.amtpd if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"BUDGET.AMTPD"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = budget.bgtamtcy if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"BUDGET.BGTAMTCY"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = budget.bgtamtny if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"BUDGET.BGTAMTNY"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = budget.bgtcd if 'X.isNull(),'Db.isDefined("UTBLBGTCD","X") set vRM = $$^MSG(1485,X) do vdderr("BGTCD", vRM) quit
	set X = budget.bgtjrnl if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"BUDGET.BGTJRNL"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = budget.bgtpmts if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("BGTPMTS", vRM) quit
	if budget.billnbr.length()>40 set vRM = $$^MSG(1076,40) do vdderr("BILLNBR", vRM) quit
	if budget.cocd.length()>12 set vRM = $$^MSG(1076,12) do vdderr("COCD", vRM) quit
	if budget.instnbr.length()>40 set vRM = $$^MSG(1076,40) do vdderr("INSTNBR", vRM) quit
	set X = budget.misccsh if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"BUDGET.MISCCSH"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("BUDGET","MSG",979,"BUDGET."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordBUDGET budget

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("CID").exists() set vux("CID") = vx("CID")
	if vx("BGTYRSD").exists() set vux("BGTYRSD") = vx("BGTYRSD")
	if vx("BGTSEQ").exists() set vux("BGTSEQ") = vx("BGTSEQ")
	do vkey(1) set voldkey = budget.cid_","_budget.bgtyrsd_","_budget.bgtseq // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/TRIGBEF/" do VBU
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = budget.cid_","_budget.bgtyrsd_","_budget.bgtseq // Copy new keys into object
	type RecordBUDGET vnewrec = budget.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("BUDGET",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordBUDGET budget

	if vux("CID").exists() set budget.cid = vux("CID").piece("|",i)
	if vux("BGTYRSD").exists() set budget.bgtyrsd = vux("BGTYRSD").piece("|",i)
	if vux("BGTSEQ").exists() set budget.bgtseq = vux("BGTSEQ").piece("|",i)
	quit
