public	UIRR(CF,FRE,PIACM,IACM,AMODT,OIACM,CTL,LNBEFD)	

	/*
	       Generic Internal Rate of Return Calculator
	       ORIG:  Chuck Hardy (6721) - 03/06/87
	
	   This utility will compute the internal rate of return for any series
	   of cash flows.  The rate of interest on a financial instrument
	   determines the amount of cash that will be paid in excess of the
	   original amount of the instrument.  Therefore, if we know the
	   original amount of the instrument and the amounts of cash paid over
	   time (and the amount of time) we can compute the rate of return on
	   those cash payments.  The timing of these payments is crucial to the
	   calculation.  For example, if you invest $1,000 and receive $1,100
	   at the end of your investment, what is your rate of return?  It's
	   10% if you received the $1,100 in 1 year, 20% if you received it in
	   6 months and 1% if it took 10 years.
	
	   ----------------------------------------------------------------------
	   The CF array is sequenced 0-nnnnnnnn for number of cash flows
	   CF(SEQ)=$ amount of each cash flow | # of cash flows for that amount
	
	   CF(0) must equal the initial investment.
	
	   Sign convention is very important to the proper operation of this
	   calculation.  Cash flows which are received must be positive, and
	   those expended must be negative.  i.e. a typical loan transaction
	   (from the lender's viewpoint) would have an inital cash outflow of
	   the loan amount.  This amount would be negative.  The monthly pay-
	   ments would be positive (as they are being received by the lender.)
	
	   CF(0)=-100000     | This is a standard 30 year fixed payment
	   CF(1)=1028.61|360 | loan transaction.
	
	   If the initial cash flow does not have the appropriate sign, or if
	   the calculation receives an error, ER will be returned as 1, with an
	   error message "INVLDANS" and an IRR of 0.
	
	   Additionally, the frequency of payments may not be mixed.  If during
	   the above loan transaction, an additional payment is to be made, it
	   must be assumed that it occurs at the time of a regularly scheduled
	   payment.
	
	   CF(0)=-100000     |  This example would provide the internal
	   CF(1)=1028.61|59  |  rate of return for a 30 year loan when
	   CF(2)=2028.61|1   |  a $1000.00 principal paydown after 5 years
	   CF(3)=1028.61|300 |  is required.
	
	   During periods where there is no cash flow, CF(n) must be set to zero
	   (for the appropriate number of periods) to allow the calculation to
	   reflect this.
	
	   An odd first period may be designated by setting ODYS equal to the
	   number of odd DAYS to the first cash flow, less one period.  If BASIS
	   is not defined, it will be assumed to be 360 days.
	
	
	   KEYWORDS: Calculations, Interest, Deposits, Loans
	
	   ARGUMENTS:
	   . CF		Cash Flow Array				    /TYP=T/REQ/MECH=REFARR:R
	                As defined above, the CF array conatins
	                the cash flows for which an IRR is to be
	                computed.
	
	   . FRE	Cash flow frequency			    /TYP=T/REQ/REF=VAL
	                The frequency at which cash flows occur.
	                If flows may occur at any time, then FRE
	                must equal 1DA.
	
	   . PIACM	Compute P&I based on IACM		    /TYP=L/NOREQ/REF=VAL
	                Specifies whether IACM should be used 
	                when performing financial calculations.
	
	   . IACM	Interest Accrual Calc Method		    /TYP=T/NOREQ/REF=VAL
	                The interest accrual method. 
	                Required if PIACM=1.
	
	   . AMODT	Date Amortization Begins		    /TYP=D/NOREQ/REF=VAL
	                The date that interest calculations for
	                the purpose of amortization starts. 
	                Required if PIACM=1.
	
	   . OIACM	Odd Days IACM				    /TYP=T/NOREQ/REF=VAL
	                The interest accrual method for the odd
	                period prior to the initial payment period.
	
	   . CTL	Control Parameter			    /TYP=T/NOREQ/MECH=VAL
	
			Position 1 - Capitalize Odd Days Interest
	                             0 = Do not capitalize
	                             1 = Capitalize
	                   
			Position 2 - Is odd period:
	                             0 = Full first period
	                             1 = Short first period
	
	    . LNBEFD	Effective Date				    /TYP=D/NOREQ/MECH=VAL
			If specified, will use this date as the
			basis to calculate the annual factor or
			basis. This is used for the loan billing
			statements where we need to calculate values
			on a date other than today. Called from ^LNB.
	
	   INPUTS:
	    . CF,FRE,PIACM,IACM,AMODT,OIACM,CTL,LNBEFD as specified above.
	
	   RETURNS:
	    . $$	The percentage internal rate of return to five decimal
			places.
	
	---- Revision History -------------------------------------------------
	04/17/06 - ALAGARSS - 20545 
		   Modified code to check CTL.
		   
	06/28/05 - KinI - 15524
		   Added public tag to the top section.

	03/11/03 - CARROLLJ - 51349
		   Corrected TPTIMEOUT error by qutting out of loop.

	02/19/03 - ZWITKOWITSM - 51349
		   Changed "QUIT:quit" to "quit:QUIT" to correct Undefined
		   Error.

	01/16/02 - ARCILLAZ - 43583
		   Converted to PSL. Removed old revision history.

	
	-----------------------------------------------------------------------
	*/
	
	catch error {
		new ET,RM
		set ET=error.type
 
		if ET["%GTM-" do ZE^UTLERR quit
		set ET=ET_"-"_error.thrownAt
		set RM=error.description
		do ^UTLERR
		}

	new ANS,CNTR,E,IR,IRR,IRX,LDD,MARGIN,N,NPV,NUM,OPER,SEQ
	
	if $O(CF(0))="" do { quit $$END
		set ER=1
		set ET="INVLDCF"
		}

	if $G(FRE)="" do { quit $$END
		set ER=1
		set ET="INVLDFRE"
		}
	
	set PIACM=+$G(PIACM)

	if PIACM,$G(IACM)="" do { quit $$END
		set ER=1
		set ET="INVICM"
		}
	
	set ER=0

	if $G(LNBEFD)="" set X=$$NJD^UFRE(+%CurrentDate,FRE,.AF)
	if $G(LNBEFD)'="" set X=$$NJD^UFRE(LNBEFD,FRE,.AF)
	if ER quit $$END
	
	set CTL=$G(CTL)
	set AMODT=$G(AMODT) 
	set OIACM=$G(OIACM)

	if OIACM="" set OIACM=IACM
	
	set IRX=12.5
	set IR=12
	set (CNTR,OPER)=0
	
	// Compute odd period if AMODT and PIACM=0
	if 'PIACM,$G(AMODT),CTL=0 do {
		new AF,BASIS,JD,NJD,ODYS
	
		set BASIS=360
	
		if $G(IACM)'="" do {
			new D
			set D=$E(IACM,2)
			if 'D quit 
			set BASIS=365
			if D=3 quit 
	
			// Replaced obsoleted date reference with Y2K compliant call to $$DAT^%ZM(+%CurrentDate)
			if $G(LNBEFD)="",$$DAT^%ZM(+%CurrentDate,"YEAR")#4=0&('($$DAT^%ZM(+$H,"YEAR")#100=0)!($$DAT^%ZM(+$H,"YEAR")#400=0)) set BASIS=366
			if $G(LNBEFD)'="",$$DAT^%ZM(LNBEFD,"YEAR")#4=0&('($$DAT^%ZM(LNBEFD,"YEAR")#100=0)!($$DAT^%ZM(LNBEFD,"YEAR")#400=0)) set BASIS=366
	
			}
	
		set JD=AMODT
		do FULL^UFRE
		set JD=$$NJD^UFRE(NJD,"-"_FRE) quit:ER
		set ODYS=JD-AMODT
		set OPER=ODYS/BASIS
	
		}

	/*	
	 MARGIN is used as the calculation tolerance.
	 Set MARGIN to .00001 (originally was .001) to handle calculation
	 of IRR's that are higher than 100%.  For the REG Z Periodic APR
	 calculation on loan Billing Statements, loans with a very low
	 Average Balance and a Minimum Finance Charge, their IRR's can
	 go up extremely high.  For example:  900%, 1200%, 4000%, 7500%
	*/
	new QUIT
	set QUIT=0
	set MARGIN=.00001
	
	if PIACM set MARGIN=.1
	
	// Iterate an IRR, beginning with 12.5%
	for  do { quit:QUIT
		set (NPV,ER)=0
	
		// IRX cannot be less than -999
		if IRX'>-999 set (ER,QUIT)=1 quit
	
		// If the rate gets too large, we will receive an error
		if IRX>6E34 set (QUIT)=1 quit
			
		// Determine net present value based on IRX.  Our goal is to hit zero.
		set NPV=$$IR(IRX,AF,AMODT,CTL)
		if ER set QUIT=1 quit
	
		// The answer falls within the margin for error - we're done.
		if NPV<MARGIN,NPV>-MARGIN set QUIT=1 quit
	
		// ANS array tracks rates for each iteration; E tracks the error, where
		// NPV > or < zero is the error (because NPV = zero is our goal).
		set ANS(CNTR)=IRX,E(CNTR)=NPV
	
		/*
		 CNTR is the number of iterations.  99.99% of all calculations should
		 be within 10 iterations, we'll decrease accuracy by a factor of 10
		 for each 10 iterations, but 50 is the maximum.
		*/
		set CNTR=CNTR+1
		
		// Use bisection to get first two guesses
		if CNTR<2 do { quit
			set IRX=$$BI^UFINC(IRX,IR)
			set IR=IRX
			}
		
		// After each 10 tries increase the margin of error.  Stop after 50.
		if CNTR#10=0 do { quit:QUIT=1
			set MARGIN=MARGIN*10
			if CNTR#50=0 set QUIT=1
			}
	
		// If we got the same answer twice stop.
		if E(CNTR-1)-E(CNTR-2)=0 set (ER,QUIT)=1 quit
	
		// Use Newtown's method for guesses 3 through n.
		set IRX=$$NEWT^UFINC(.ANS,.E,CNTR)
		}
	quit $$END

IR(IRX,AF,LDD,CTL)	// Calculate the net PV for the cash flows at the iterated IRX
	new NPV,NUM,PT,PV,SEQ,TNUM
	
	// Define CTL for the call to PVI^UFINC
	set CTL=CTL_$E("000",$L(CTL)+1,2)
	set (NPV,SEQ,TNUM)=""

	for  set SEQ=$O(CF(SEQ)) quit:SEQ=""  do { if ER quit 
	
		set PT=+CF(SEQ)
		// Start NPV with CF(0)
		if 'SEQ set NPV=NPV+PT quit           
		set NUM=+$P(CF(SEQ),"|",2)
		// No number of payments
		if 'NUM quit                          
		// No payment
		if 'PT set TNUM=TNUM+NUM quit         
	
		// Find PV of each cash flow.
		if 'PIACM set PV=$$PV^UFINC(0,IRX,NUM,PT,AF)
		else  set PV=$$PVI^UFINC(PT,IRX,NUM,0,LDD,IACM,FRE,OIACM,AF,CTL,"",.LDD)
		if ER quit 
	
		// If 'PIACM then adjust PV for odd period. $$PVI does this
		// automatically for PIACM based on AMODT.
		if 'TNUM do { quit 
			if OPER,'PIACM set PV=$$PV^UFINC(PV,IRX*OPER,1,0)
			set NPV=NPV+PV
			set TNUM=TNUM+NUM
			}
		/*	
		 Find PV of future cashflows.  After CF(1) (which starts today)
		 all future cashflows must be discounted from their starting
		 point to today.  So, if CF(1) has 12 payments in it, CF(2)'s
		 PV must be discounted from the beginning of payment 13 to
		 today.
		*/
		if 'PIACM set PV=$$PV^UFINC(PV,IRX,TNUM,0,AF)
		else  set PV=$$PVI^UFINC(0,IRX,TNUM,PV,AMODT,IACM,FRE,OIACM,AF,CTL_1)

		set NPV=NPV+PV
		set TNUM=TNUM+NUM

		}
	
	quit NPV
	
END()	// Exit
	if ER do {
		if $G(ET)="" set ET="INVLDANS"
		do ^UTLERR
		set IRX=""
		}

	quit $J($G(IRX),0)
	

vSIG()	quit "60372^37351^Sivakumar Alagarsamy^9668"	// Signature - LTD^TIME^USER^SIZE
