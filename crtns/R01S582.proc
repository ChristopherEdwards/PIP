R01S582	// SCA656 - Interest Checking Proof - NRA
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:53 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA656"
	set RN="Interest Checking Proof - NRA"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CB,CONAM,CTZN,IRS,LNAM,RID,RN,TAXID,TYPE,VL,VLOF,VRF(),VSTATS(),ZRID,ZZRID,vCOL,vHDG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA656",RN="Interest Checking Proof - NRA"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA656","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[CIF]NRCNTRY#73#2,[DEP]NRPOSIPTY#100#12,[DEP]NRWHPTY#116#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"DEP.IRSEXM=0 AND DEP.GRP='DDA' AND (DEP.NRPOSIPTY>"
		set VWHERE=VWHERE_"0 OR DEP.NRWHPTY>0)"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Interest Checking Proof - NRA"
		set VBNRINFO("PGM")="R01S582"
		set VBNRINFO("RID")="SCA656"
		set VBNRINFO("TABLES")="DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]TYPE"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEP]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,CIF]LNM"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,CIF]TAXID"

		set VBNRINFO("DOC",1)=" Interest Checking Proof Report -  NRA Accounts (SCA656)."
		set VBNRINFO("DOC",2)=" The selection criteria for this report will consider all demand deposit"
		set VBNRINFO("DOC",3)=" accounts with Demand Deposit Account Flag set to ""Y"" and IRS Reporting "
		set VBNRINFO("DOC",4)=" Option set to ""0"" (Interest Reporting) and where one or more"
		set VBNRINFO("DOC",5)=" of the following is greater than .00: Non Resident Alien Interest Paid Prior"
		set VBNRINFO("DOC",6)=" Year or Non Resident Alien Interest Withheld Prior Year."
		set VBNRINFO("DOC",7)=" "
		set VBNRINFO("DOC",8)=" This report is broken down by Product Type, Account Number, Customer Name,"
		set VBNRINFO("DOC",9)=" and Tax ID Number."
		set VBNRINFO("DOC",10)=" "
		set VBNRINFO("DOC",11)=" This report automatically generates the SCA654A report. "

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DEP.TYPE,DEP.CID,CIF.LNM,CIF.TAXID,CIF.NRCNTRY,DEP.NRPOSIPTY,DEP.NRWHPTY,DEP.USRESTAT,DEP.BWF,DEP.BNOT1DT,DEP.BNOT2DT,DEP.CNOTDT","DEP,CIF","DEP.IRSEXM=0 AND DEP.GRP='DDA' AND (DEP.NRPOSIPTY>0 OR DEP.NRWHPTY>0)","DEP.TYPE,DEP.CID,CIF.LNM,CIF.TAXID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12
	set vc1=V.piece($C(9),1)			// DEP.TYPE
	set vc2=V.piece($C(9),2)			// DEP.CID
	set vc3=V.piece($C(9),3)			// CIF.LNM
	set vc4=V.piece($C(9),4)			// CIF.TAXID
	set vc5=V.piece($C(9),5)			// CIF.NRCNTRY
	set vc6=V.piece($C(9),6)			// DEP.NRPOSIPTY
	set vc7=V.piece($C(9),7)			// DEP.NRWHPTY
	set vc8=V.piece($C(9),8)			// DEP.USRESTAT
	set vc9=V.piece($C(9),9)			// DEP.BWF
	set vc10=V.piece($C(9),10)			// DEP.BNOT1DT
	set vc11=V.piece($C(9),11)			// DEP.BNOT2DT
	set vc12=V.piece($C(9),12)			// DEP.CNOTDT
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 do Db.fastDelete("CD1099","PID=:%ProcessID")
	quit

VRPOST	// Report post-processor

 type String %NOOPEN,%NOCLOSE,%NOBANNER,PGM
 type public String LNAM,ZZRID,RID
 type public Number vcrt
 type public Boolean VFMQ
 type Number PN

 set ZZRID=RID
 set LNAM="Interest Cheking Proof - NRA Accounts"
 if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
 set (%NOOPEN,%NOCLOSE,%NOBANNER)="" //Clean up the TMP files
 set RID="SCA654A" do ^URID
 if 'PGM.length() do Runtime.setErrMSG("DEP",8074,"RID") Quit 
 do V0^@PGM
 do Db.fastDelete("CD1099","PID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CB,CONAM,CTZN,ER,IOSL,IRS,LNAM,RID,RN,TAXID,TYPE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,ZRID,ZZRID,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc2,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",17-VL.length())_$E(vc3,1,20)
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,CB,CTZN,IOSL,IRS,LNAM,RID,TAXID,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZRID,ZZRID,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                                        "_$E(vc4,1,20)
	set VL=VL_$J("",64-VL.length())_$E(CTZN,1,1)
	set VL=VL_$J("",72-VL.length())_$E(vc5,1,2)
	set VL=VL_$J("",81-VL.length())_$E(CB,1,1)
	set VL=VL_$J("",88-VL.length())_$E(IRS,1,1)
	set VL=VL_$J("",90-VL.length())_$J($FN(vc6,",",2),21)
	set V=vc7,VO=V set V=$J($FN(V,",",2),15) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",112-VL.length())_V		// [SYSDEV,DEP]NRWHPTY
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CB,CONAM,CTZN,IRS,LNAM,RID,RN,TAXID,TYPE,VL,ZRID,ZZRID,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="Interest Checking Proof - NRA Accounts "
	do VP3 quit:VFMQ!verror.get()  set V=$E(ZRID,1,14)
	set VL=VL_$J("",39-VL.length())_V
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set V=$J(VPN,3) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",128-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Interest Product Type Number:  "
	set V=vc1,VO=V do VP5 quit:VFMQ!verror.get()  set V=$J(V,4)
	set VL=VL_$J("",31-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="     "_"Account     Customer               Tax ID                  CTZN    Cntry    C/B    IRS            Interest     Backup"
	do VOM
	set VL="     "_"Number      Name                   Number                          Code                           Paid         Withholding "
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,DEP]CID

	type public String vc8,vc9,vc10,vc11,vc12
 type public String CB,CTZN,IRS

 set CB=" ",IRS=" ",CTZN=" " 
 if vc8=1 set CTZN="N"    // Non resident Alien 
 if vc8=2 set CTZN="R"    // Resident Alien
 if vc9=1 set CB="Y"           // Subject to backup withholding
 // other than backup withholing   
 if vc9=1,vc10="",vc11="",vc12="" set IRS="Y"
	quit

VP2	// Column post-processor - [SYSDEV,DEP]NRWHPTY

	type public String vc6,vc7
 type public Number TYPE
 
 type RecordCD1099 cd1099=Db.getRecord("CD1099","PID=:%ProcessID,TYPE=:TYPE",1)

 set cd1099.ipy=cd1099.ipy+vc6
 set cd1099.bwp=cd1099.bwp+vc7
 set cd1099.cnt=cd1099.cnt+1

 do cd1099.save()
	quit

VP3	// Column pre-processor - Variable: ZRID


 type public String ZRID,RID

 set ZRID="("_RID_")"
	quit

VP4	// Column post-processor - Variable: VPN

 type public Number OLDPAGE,VPN

 set OLDPAGE=VPN
	quit

VP5	// Column pre-processor - Variable: TYPE

	type public String vc1
 type public Number TYPE
 set TYPE=vc1
	quit
