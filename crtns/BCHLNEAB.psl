BCHLNEAB //Batch BCHLNEAB - Create Escrow Analysis Batch - Part 1
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:08 - joynerd
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHLNEAB Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHLNEAB")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHLNEAB") quit
 do JOBMGR^BCHUTL(%FN,"BCHLNEAB",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHLNEAB")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(CID) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHLNEAB","*","",CID.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHLNEAB",CID.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHLNEAB",CID.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,CID)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHLNEAB","*","",CID.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHLNEAB",CID.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,CID) //
	
	new APCND,POSTFLG
	type RecordLN ln
	set ln=Db.getRecord("LN","CID=:CID")
 	set APCND=ln.apcnd

	set POSTFLG=""
	if Db.isDefined("LNAPCHG","APCND,CID") do {
	   type RecordLNAPCHG lnapchg
	   set lnapchg=Db.getRecord("LNAPCHG","APCND=:APCND,CID=:CID")
	   if lnapchg.epost set POSTFLG=1           //Skip if posted
	   }
	if POSTFLG=1 quit

 	set CRCD=ln.crcd
 	set BR=ln.boo
 	set TYP=ln.type
	set ANOFF=ln.anoffdt
	
	type RecordPRODCTL ltype
	set ltype=Db.getRecord("PRODCTL","TYPE=:TYP")
	set AL1Y=ltype.al1y
	set LCID=CID
	do ^LNEAB1(.ln,.EABL,.EABE)
	quit
	


Public EXTERN(RecordLN ln,EABL,EABE)	// Entry point from maintenance screen
	
	set CTL=0  // process locally only
	
	if '$D(APCND) set APCND=ln.apcnd
	set ANOFF=ln.anoff
	if $G(EPOST) set ER=1,RM=$$^MSG("289") quit
	set TYP=ln.type
	set BR=ln.boo
	
	new CRCD 
	set CRCD=ln.crcd
	do OC(.ln,.EABL,.EABE)
	quit

	
OC(RecordLN ln,EABL,EABE)	// Off cycle analysis
	
	type Number LCID=ln.cid

	set (SING,%EXT)=1

	do INIT(.EABL,.EABE)

	set ECID=""
	kill EAB

	type RecordPRODCTL lntyp
	set lntyp=Db.getRecord("PRODCTL","TYP")
	set AL1Y=lntyp.al1y
	
	// Load all analysis plan default data
	
	set ANOFF=APCND-ANOFF
	do LOAD^LNEABPD
	
	do ^LNEAB1(.ln,.EABE,.EABL)
	
	quit


 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,CID
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set CID=vRECORD.piece($C(9),1)
 do vPROC(CID)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,CID
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32767 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+13>32767 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("CID","LN","LN.ANOFFDT=:TJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	set CTL=1
	set SING=0
	set %EXT=0 kill ESEQ
	set ANOFF=%SystemDate

	// Load all analysis plan default data

	do LOAD^LNEABPD
	do INIT(.EABL,.EABE)
	quit

INIT(EABL,EABE)	//

	kill ERRL,ERRE
	// Error log sequence number~P1
	set ERRL("E0")=$$^MSG("3389")
	// Account locked by another user
	set ERRL("E1")=$$^MSG("4051")
	// Account has zero balance
	set ERRL("E2")=$$^MSG("4048")
	// Analysis flag not set - no analysis conducted
	set ERRL("O1")=$$^MSG("4052")
 	// Account less than 1 year old, not analyzed
	set ERRL("O2")=$$^MSG("4049")
	// Account less than 1 year old, produce coupons only
	set ERRL("O3")=$$^MSG("4050")
	// No analysis frequency set in loan
	set ERRL("O4")=$$^MSG("31")
	// Total new transfer payment equals zero
	set ERRL("W1")=$$^MSG("4062")
	// Escrow to round not specified, payment not rounded
	set ERRL("W2")=$$^MSG("4054")
	// Override plan in effect
	set ERRL("W3")=$$^MSG("4057")
	// Total new payment is less than current P&I
	set ERRL("W4")=$$^MSG("4061")
	// Error log sequence number
	set ERRE("E0")=$$^MSG("3389")
	// Account locked by another user
	set ERRE("E1")=$$^MSG("4051")
	// Account excluded from analysis
	set ERRE("O1")=$$^MSG("4047")
	// Analysis flag not set - no analysis conducted
	set ERRE("O2")=$$^MSG("4052")
	// New transfer payment less than zero
	set ERRE("W1")=$$^MSG("4056")
	// Remittance next date is in the past
	set ERRE("W2")=$$^MSG("4060")
	// Last remittance date is in the future
	set ERRE("W3")=$$^MSG("4055")
	// Remittance base equals zero
	set ERRE("W4")=$$^MSG("4059")
	// Payments elapsed exceeds 1 remittance period
	set ERRE("W5")=$$^MSG("4058")
	

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
