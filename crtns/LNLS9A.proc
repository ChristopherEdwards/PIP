public LNLS9A(RecordLN ln,RecordTTX ttx)	// Loan Sale Payoff Calculations
	/*
	       ORIG:  Neal Gorman (5053) - 07/23/86
	  CALLED BY:  ^LNPTS23
	      CALLS:  Batch process BCHLNLS8 - routine BCHLNLS

	   This utility is called by loan payoff routine ^LNPTS23.  It is used
	   to calculate loan sale payoff remittance amounts.

	---- Revision History ------------------------------------------------

	11/07/06 - KELLYP - CR 23972
		   Modified entire procedure to eliminate UNDEFINED errors
		   caused by variables in old INIT section being scoped local
		   instead of public.  Also removed pre-2004 revision history.

        07/26/05 - SkariahV- CR16679
	           Removed #WARN and #OPTIMIZE directives.

	*/

	type public Boolean ER
	type public Number CID,DIC,NARL,PSEQ
	type public String PRETRN()

	type Boolean POF,SFF
	type Date AGRDT,JD,REMLD,REMND
	type Number AF,FEEP,GRP,IAA,ICA,INTCOL,ODAY,ODDA,OPTR,PICM,PL,POGD,PP,PRC,REMAF,YLD
	type String FRE,INCD,PRIRO,PRPRO,SFCM

	type RecordLNLS6 lnls6 = Db.getRecord("LNLS6","CID=:CID,PSEQ=:PSEQ",1)

	set INCD=lnls6.incd
	set PL=lnls6.pl
	set GRP=lnls6.grp
	set OPTR=lnls6.optr/100
	set INTCOL=ttx.int

	type RecordLNLS2 lnls2=Db.getRecord("LNLS2","INCD=:INCD,PL=:PL",1)

	set PP=lnls2.pp/100
	set SFF=lnls2.sff
	set PICM=lnls2.picm
	set FEEP=lnls2.feep/100

	set JD=%SystemDate 
	set FRE=lnls2.remfre 
	set JD=$$NJD^UFRE(JD,FRE,.AF) quit:ER  
	set REMAF=AF

	set REMND=lnls2.remnd
	set REMLD=lnls2.remld
	set YLD=lnls2.yield/100
	set AGRDT=lnls2.efd
	set SFCM=lnls2.sfcm
	set POGD=lnls2.pogd
	set PRIRO=lnls2.priro
	set PRPRO=lnls2.prpro
	
	set (ICA,IAA,PRC,ODDA)=0
	set ODAY = ""

	// Determine value of payoff grace day flag POF
	set POF=$$POF(%SystemDate,.ln)

	// Principal calculation
	if PRPRO do PRC(.lnls6)

	// Interest calculation
	if 'POF,PRIRO do ICM(.ln,.lnls6)

	// Create paid off sold loan end-of-day record
	type RecordLNLS9 delspo=Db.getRecord("LNLS9","EFD=:%SystemDate,INCD=:INCD,PL=:PL,GRP=:GRP,CID=:CID",1)

	set delspo.pobal=PRETRN("BALCMP")
	set delspo.pobli=$$^SCARND(PP*ln.bal,0,CID)
	set delspo.lrbal=lnls6.plrpb
	set delspo.namlr=lnls6.plrcd-lnls6.plrrl
	set delspo.nampb=DIC.get()-NARL.get()
	set delspo.intod=ODAY
	set delspo.intcl=ODDA
	set delspo.intad=IAA
	set delspo.prlrm=PRC
	set delspo.intrm=ICA
	set delspo.netrm=PRC+ICA
	set delspo.pondd=PRETRN("DIST1ND")
	set delspo.poeff=%EffectiveDate

	do delspo.bypassSave()

	// Modify [LNLS6] record
	// Int calc
	set lnls6.poric=ICA

	if POF do {
		/* 
		 Principal remittance will be equal to previously calculated
		 principal plus scheduled balance at last remittance.  (This
		 brings us back to scheduled prin bal before the remittance.)
		*/

		// Prin Remit
		set lnls6.plrpr=lnls6.plrpr+lnls6.plrsb
		// Action Code
		set lnls6.accd=60
		// Action Date
		set lnls6.acdt=%EffectiveDate
		}

	do lnls6.save()

	quit


public POF(Date PODT,RecordLN ln)	// Payoff Grace Day Flag
	/*
	Determines whether or not only principal will be remitted.  This
	is determined by the the value of [LNLS2]POGD, the Payoff Grace
	Day.

	If the payoff (PODT) takes place between the remittance day and
	the indicated grace day (including the grace day) the system will
	change the principal remittance amount in the remittance file
	LNLS6.  This section determines whether or not that change should
	take place. (POF=1)

	Otherwise principal and interest payoff remittance amounts will
	be calculated normally and these amounts will not affect the
	LNLS6 file (POF=0).
	*/

	type public Date AGRDT,REMLD
	type public Number POGD
	type public String %MSKD

	type Date DATE,LG
	type Number DAY,ER,MON,YR
	type String SD

	if 'POGD quit 0

	set DATE=$select(REMLD:REMLD,1:AGRDT)

	// Date in string date format
	set SD=DATE.toString()

	// Find last grace date (LG)
	set ER=0
	set MON=+SD.piece("/",1) set YR=+SD.piece("/",3) set DAY=POGD
	for DAY=DAY:-1 set LG=$$DSJD^SCADAT(MON_"/"_DAY_"/"_YR) if 'ER quit
	if LG<DATE do {
		set DAY=POGD
		set MON=SD.piece("/",1)+1
		if MON=13 set YR=YR+1 set MON=1
		for DAY=DAY:-1 set LG=$$DSJD^SCADAT(MON_"/"_DAY_"/"_YR) if 'ER quit
		}

	if PODT'>LG quit 1

	quit 0


PRC(RecordLNLS6 lnls6)	// Principal remitted

	type public Number PP,PRC,PRPRO
	type public String PRETRN()

	// Payoff Balance
	if PRPRO=1 set PRC=PRETRN("BALCMP")

	// Last Remit Balance
	if PRPRO=2 set PRC=lnls6.plrpb
	
	set PRC=(PRC*PP).roundDec()

	quit


ICM(RecordLN ln,RecordLNLS6 lnls6)	// Interest remitted calculation

	type public Date REMND
	type public Number CID,ER,ICA,INTCOL,IRN,ODDA,PP,PRIRO,REMAF
	type public String DIST1FRE,PRETRN()
	
	type Date JD,NJD
	type String FRE

	if PRIRO=1 set ICA=INTCOL*PP
	if PRIRO=2 set ICA=INTCOL*$$TEMPRT*PP/IRN
	if PRIRO=3 set ODDA=$$ODDA(.ln) set ICA=ODDA-$$IAA(.lnls6)
	if PRIRO=4 set ICA=lnls6.plrsb*$$TEMPRT*PP/REMAF
	if PRIRO=5 set ICA=lnls6.plrpb*$$TEMPRT*PP/(REMAF*2)
	if PRIRO=6 set ODDA=$$ODDA(.ln) set ICA=0 do { 
		set ICA=ICA+ODDA
		set NJD=PRETRN("DIST1ND") 
		set FRE=DIST1FRE
		for  quit:NJD>REMND!(ER)  do {
			set ICA=((((PRETRN("BALCMP"))*$$TEMPRT)*PP)/12)+ICA 
			set JD=NJD 
			set NJD=NJD.nextFreqDate(FRE)
			}
		}
		
	set ICA=ICA.roundDec()
	set ODDA=ODDA.roundDec()

	quit


TEMPRT()	//

	type Number TEMPRATE
	type String PGM,XECUTE

	set PGM=$$GET^UBCHID("BCHLNLS8") if PGM="" quit
	set XECUTE="set TEMPRATE=$$RATE^"_PGM_"()"
	
	#ACCEPT Date=05/30/03; PGM=Shaun Gray; CR=51351
	xecute XECUTE

	quit TEMPRATE


IAA(RecordLNLS6 lnls6)	// Interest adjustment amount - FHLMC method 3 (reduce by full period)

	type public Number IAA,INTCOL,IRN,PICM,PP,REMAF
	
	type Number ICM

	// Only calculate adjustment if payoff effective after 15th of month.
	if (%EffectiveDate.dayOfMonth())'>15 quit ""

	type RecordSTBLLSRCM slsrcm = Db.getRecord("STBLLSRCM","KEY=:PICM",1)
	
	set ICM=slsrcm.rcc.extract(3,4)
		
	if ICM=1 set IAA=INTCOL*PP
	else  if ICM=2 set IAA=INTCOL*$$TEMPRT*PP/IRN
	else  if ICM=3 set IAA=lnls6.plrpb*$$TEMPRT*PP/REMAF

	quit IAA.roundDec()


ODDA(RecordLN ln)	// Odd days amount (dollars)
	
	type public Number PP
	type public String PRETRN()

	quit PRETRN("BALCMP")*$$TEMPRT*PP*$$ODD(.ln)/365


ODD(RecordLN ln)	// Odd days calculation (days)

	type public Boolean ER
	type public Number ODAY
	type public String DIST1FRE

	type Date JD,NJD,SCHLD,SCHND
	type String FRE

	// Scheduled Payment - Last Date
	set SCHLD=ln.schld

	// Scheduled Payment - Next Date
	set SCHND=ln.schnd

	for  quit:SCHLD'>%EffectiveDate  set SCHLD=SCHLD.nextFreqDate("-"_DIST1FRE) quit:ER
	for  quit:(SCHND>%EffectiveDate)!(ER)  do {
		set FRE=DIST1FRE set JD=SCHND
		set NJD=JD.nextFreqDate(FRE) quit:ER
		set SCHND=NJD 
		set SCHLD=JD
		}

	set ODAY=%EffectiveDate-SCHLD

	quit ODAY

vSIG()	quit "60578^58053^Pat Kelly^6343"	// Signature - LTD^TIME^USER^SIZE
