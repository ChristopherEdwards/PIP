IRSO98		/*
	ORIG: titove - 09/12/2005
	DESC: IRS Tape Processing - Form 1098 Original

	---- Comments --------------------------------------------------------
			  THIS PROCEDURE IS TO BE COMPILED
			      DO NOT RUN STANDALONE
	
	I18N=QUIT: Excluded from I18N standards.
	
	---- Revision History ------------------------------------------------
	
	05/15/06 - DESHPANDE S K - 21167
		   Modified WRITE section. The ADDR variable is set to mailing 
		   address instead of permanent address.
	
	04/06/06 - SWARNALP - CR 20388
		   Modified CID section to remove the parameter %SystemDate 
		   from the extrinsic function PNTSPY^LNCO since the signature of 
		   the same is changed to remove TJD.	

	09/11/05 - TITOVE - CR 16942
		   Converted into PSL. Replaced references to ^TMP global with
		   references to temporary TMPRPT2 table. Added arguments to
		   WRITE section. Moved temporary table delete to the end of
		   the processing. Removed pre-2005 revision history.		   

	*/
	
        // Accept "Dead code" warning during runtime of @IRSTAPE
        #ACCEPT Date=10/16/2005;PGM=Eugene Titov
        quit
        
	
MTRCNTRL	// Master control

	type public Number ER

	type Boolean CIFCTOF = CUVAR.ctof1098		// Apply 1098 Cutoff to CIF
	
	do Db.delete("B1098")
	
	do SORT			// Sort all reportable accounts, save in TMPRPT2
	
	do ARECBLD quit:ER	// Build and write the "A" record
	
	do BRECBLD quit:ER	// Build and write the "B" record
	
	do CRECBLD quit:ER	// Build and write the "C" record
	
	do STORETOT		// Store totals and runtime data in IRS* tables
	
	do Db.delete("TMPRPT2","PID=:%ProcessID")
	
	quit
	
	
ARECBLD	// "A" record builder

	type public String TAMT()

	type Number AMTIND, FORMCODE

	set FORMCODE = 3	// IRS form code
	
	set AMTIND = 123	// IRS amount type indicator
	
	set TAMT(1).piece("|",2) = "Mortgage Interest Received"
	set TAMT(2).piece("|",2) = "Points paid prior year"
	set TAMT(3).piece("|",2) = "Refund of overpaid interest"
	
	do ARECWRT		// Write the record to tape
	
	quit
	

BRECBLD	// "B" record builder

	type Number ACN, CID
	
	set (ACN,CID) = 0

	type DbSet ds = Db.selectDbSet("TMPRPT2","PID=:%ProcessID")
	
	while ds.next() do {
		
		type RecordTMPRPT2 tmp2 = ds.getRecord("TMPRPT2")
		
		type RecordCIF cif = Db.getRecord("CIF", "ACN = :tmp2.key1")
		
		do WRITE(.cif,.tmp2)		
		}
	
	quit
	

WRITE(RecordCIF cif,			// Customer Information record
      RecordTMPRPT2 tmp2)		// Reportable Amounts record
	 
	// Write and file a B record

	type public Number AMT(), ER, FAMT(), FCNT
	
	type String ADDR, CITY, CNTRY, CORRTN, DOCCODE, FORCNTY, LNAME, NAME
	type String SPECIAL, STATE, TIN, TINTYPE, X, ZIP
	
	set TIN = cif.taxid
	
	set TINTYPE = $S(TIN?2N1"-"7N:1,TIN?3N1"-"2N1"-"4N:2,1:" ")	// Type of TIN
	
	// The rest of AMT() entries are initialized at the top of template routine
	set AMT(1) = tmp2.data.piece("|",1)*100		// Mortgage Interest Received
	set AMT(2) = tmp2.data.piece("|",2)*100		// Points paid prior year
	set AMT(3) = tmp2.data.piece("|",3)*100 	// Refund of Overpaid Interest
	
	set DOCCODE = "  "
	set CORRTN = " " 				// Corrected return indicator
	set NAME = cif.nam	 			// Payee First Name
	set LNAME = cif.lnm  				// Payee Last Name
	set ADDR = cif.mad1_" "_cif.mad2_" "_cif.mad3	// Payee address
	set CITY = cif.mcity 				// Payee city
	set STATE = cif.mstate 				// Payee state
	set ZIP = cif.mzip.piece("-",1)_cif.mzip.piece("-",2) // Payee zip
	set CNTRY = cif.mcntry	 			// Foreign country
	set FORCNTY = $S(cif.mcntry="US":" ",1:1)  	// Foreign country indicator	
	
	//; Blank|544|662
	set SPECIAL = "".justify(119)
	//; Special Data Entries|663|722
	set SPECIAL = SPECIAL_"".justify(60)
	//; Blank|723|750
	set SPECIAL = SPECIAL_"".justify(28)
	
	do BRECWRT			// Write "B" record
	
	if (TINTYPE = 2) set X = LNAME
	else  set X = NAME
	
	do NAMCNTRL^IRSTPMTR		// Format name
	
	// B Record - IRS 1098 Form Data
	type RecordB1098 b1098 = Db.getRecord("B1098", "PDATE = :%SystemDate, KEY = :tmp2.key1, BSEQ = :tmp2.key2", 1)
	
	set b1098.bnamcon = X
	set b1098.btintype = TINTYPE
	set b1098.btin = TIN.translate(" ","-")
	set b1098.bcid = tmp2.key2
	set b1098.bamt1 = AMT(1)/100
	set b1098.bamt2 = AMT(2)/100
	set b1098.bamt3 = AMT(3)/100
	set b1098.bname = NAME
	set b1098.baddr1 = cif.mad1
	set b1098.baddr2 = cif.mad2
	set b1098.baddr3 = cif.mad3
	set b1098.bcity = CITY
	set b1098.bstate = STATE
	set b1098.bzip = cif.mzip
	
	do b1098.save()
	
	// Calculate number of records and tax form report totals
	set FCNT = FCNT + 1
	
	set FAMT(1) = FAMT(1) + (AMT(1) / 100)
	set FAMT(2) = FAMT(2) + (AMT(2) / 100)
	set FAMT(3) = FAMT(3) + (AMT(3) / 100)
	
	quit
	

SORT	// Sort all reportable accounts into a temporary table

	type public Boolean CIFCTOF
	type public Number CUTOFF

	type Number ACN, CID, TOTINT
	type String INTARR()
	
	type ResultSet rs = Db.select("ACN","CIF")
	
	while rs.next() do {
		
		set ACN = rs.getCol("ACN")

		set TOTINT = 0
		
		kill INTARR
		
		type ResultSet rs1 = Db.select("CID","RELCIF","ACN=:ACN")
		
		while rs1.next() set CID = rs1.getCol("CID") do CID(ACN,CID)
		
		if CIFCTOF,(TOTINT < CUTOFF) kill INTARR	// Apply cutoff to CIF
		
		// Save account info into a temporary table
		set CID = ""
		for  set CID = INTARR(CID).order() quit:CID.isNull()  do {
			
			type RecordTMPRPT2 tmp2 = Class.new("RecordTMPRPT2")
			
			set tmp2.pid = %ProcessID
			set tmp2.key1 = ACN
			set tmp2.key2 = CID
			set tmp2.data = INTARR(CID)
			
			do tmp2.save()
			}
		}
	
	quit
	

CID(Number ACN,Number CID)	// Process a single account

	type public Boolean CIFCTOF
	type public Number CUTOFF, TOTINT
	type public String INTARR()

	type String AMT, IPY, PNTSPY

	type RecordACN acn = Db.getRecord("ACN", "CID = :CID")
	
	// Not a primary owner or not a loan account
	if (acn.acn '= ACN)!(acn.cls '= "L") quit
	
	type RecordLN ln = {RecordLN}acn
	
	if (ln.irsexm = 1) quit				// IRS 1098 Reporting Exemption
	
	set PNTSPY = $$PNTSPY^LNCO(.ln)	// Points paid prior year
	
	// If Penalty Prior Tax Year is not set, then use Int/Div Paid Prior Tax Year
	// otherwise, use Int/Div Paid Prior Tax Year plus Penalty Prior Tax Year
	set IPY = $S('ln.iplcf:ln.ipty,1:ln.ipty+ln.penpty)
	
	if (IPY < 0) set IPY = 0			// Don't report negative amount
	
	if (PNTSPY < 0) set PNTSPY = 0
	
	if (IPY + PNTSPY + ln.prefint) = 0 quit		// Nothing to report
	
	set TOTINT = TOTINT + IPY + PNTSPY
	
	set AMT = IPY_"|"_PNTSPY_"|"_ln.prefint
	
	// Apply cutoff to individual account
	if 'CIFCTOF,((IPY + PNTSPY + ln.prefint) '< CUTOFF) set INTARR(CID) = AMT
	else  set INTARR(CID) = AMT			// Possible reportable account

	quit


CRECBLD	// "C" record builder 

	do CRECWRT	// Write the record to tape
	
	quit

%STOPLOD	// Stop %ZRTNLOD from this point on down
	quit
TRECWRT		// Dummy line reference for GT.M
	quit
ARECWRT		// Dummy line reference for GT.M
	quit
BRECWRT		// Dummy line reference for GT.M
	quit
CRECWRT		// Dummy line reference for GT.M
	quit
STORETOT	// Dummy line reference for GT.M
	quit

vSIG()	quit "60403^47743^Shriram Deshpande^6706"	// Signature - LTD^TIME^USER^SIZE
