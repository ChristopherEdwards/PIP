R01S201	// SCA142 - Collateral Record Report by Customer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:44 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String OPT
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA142"
	set RN="Collateral Record Report by Customer"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("OPT")="|255|||[STBLCRCDOPT2]||||T|Currency Option|||||"
	set %TAB("VIN2")="|255||[LN]TYPE|[PRODDFTL]||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN3")="|255||[LN]ACN|[CIF]:NOVAL||I X'=""ALL"" S %EXT=1 D ^UCIF I 'ER D EXT^DBSQRY D EXT^DBSQRY||T|Customer Number|||||"
	set %TAB("VIN4")="|255||[LNCOL]CID|[ACN]:NOVAL||I X'=""ALL"" S %EXT=1 D ^UACN I 'ER D EXT^DBSQRY D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN5")="|255||[COL]COLRVND|||D EXT^DBSQRY||T|Next Collateral Review Date|||||"

	set %READ="IO/REQ,OPT#1,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String OPT,VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %CRCD,%TIM,ACN,COLAMT,COLVAL,CONAM,CRCD,CURCOL,CUSTLTV,CUSTOT,DSC1,DSC2,LNCOL,LNLTV,RID,RN,TLVP,TOTCLBAL,TOTLNBAL,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA142",RN="Collateral Record Report by Customer"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA142","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[COL]COLL#47#9\[COL]MLN#81#1,[COL]COLRVND#86#10,[COL]COLRVLD#97#10"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]ACN "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[LNCOL]CID "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[COL]COLRVND "_VIN5,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNCOL,LN,COL,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Type"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Customer Number"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Account Number"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Next Collateral Review Date"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Collateral Record Report by Customer"
		set VBNRINFO("PGM")="R01S201"
		set VBNRINFO("RID")="SCA142"
		set VBNRINFO("TABLES")="LNCOL,LN,COL,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,CIF]ACN"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNCOL]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNCOL]COLL"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"CIF.ACN,LNCOL.CID,LNCOL.COLL,CIF.NAM,CIF.TLVP,LN.T"
	set VSELECT=VSELECT_"YPE,COL.COLL,COL.MLN,COL.COLRVND,COL.COLRVLD,LN.CR"
	set VSELECT=VSELECT_"CD,COL.DESC,COL.COLVAL,COL.CRCD,LN.BALCMP"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNCOL,LN,COL,CIF",VWHERE,"CIF.ACN,LNCOL.CID,LNCOL.COLL","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15
	set vc1=V.piece($C(9),1)			// CIF.ACN
	set vc2=V.piece($C(9),2)			// LNCOL.CID
	set vc3=V.piece($C(9),3)			// LNCOL.COLL
	set vc4=V.piece($C(9),4)			// CIF.NAM
	set vc5=V.piece($C(9),5)			// CIF.TLVP
	set vc6=V.piece($C(9),6)			// LN.TYPE
	set vc7=V.piece($C(9),7)			// COL.COLL
	set vc8=V.piece($C(9),8)			// COL.MLN
	set vc9=V.piece($C(9),9)			// COL.COLRVND
	set vc10=V.piece($C(9),10)			// COL.COLRVLD
	set vc11=V.piece($C(9),11)			// LN.CRCD
	set vc12=V.piece($C(9),12)			// COL.DESC
	set vc13=V.piece($C(9),13)			// COL.COLVAL
	set vc14=V.piece($C(9),14)			// COL.CRCD
	set vc15=V.piece($C(9),15)			// LN.BALCMP
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	// Converted to PSL by CNV70RW
	type Public String COLAMT,COLVAL,CURCOL,CUSTLTV,CUSTOT,LNCOL,TOTCLBAL,TOTLNBAL

	set (COLAMT,COLVAL,CUSTOT,CURCOL,LNCOL,TOTLNBAL,TOTCLBAL,CUSTLTV)=0

	set %SystemCurrency=CUVAR.%CRCD
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG2 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),COLAMT
	type Public String VSTATS

	set VT(3)=VT(3)+1
	set VT(3,1,1)=VT(3,1,1)+COLAMT			// @TOT(<<COLAMT>>)
	quit

VHDG2	// Group Header
	type public String %CRCD,%MSKD,%TIM,ACN,COLAMT,COLVAL,CONAM,CRCD,CURCOL,CUSTLTV,CUSTOT,DSC1,DSC2,ER,IOSL,LNCOL,LNLTV,RID,RN,TLVP,TOTCLBAL,TOTLNBAL,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:vh(2)  set vh(2)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set V=vc1,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()  set VL=" "_V
	set VL=VL_$J("",16-VL.length())_$E(vc4,1,40)
	do VOM
	quit

VSUM2	// Summary
	type public String %CRCD,%TIM,ACN,COLAMT,COLVAL,CRCD,CURCOL,CUSTLTV,CUSTOT,DSC1,DSC2,I,IOSL,LNCOL,LNLTV,TLVP,TOTCLBAL,TOTLNBAL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="Customer Totals"
	set VL=VL_$J("",16-VL.length())_"in "
	set VL=VL_$J("",19-VL.length())_$E(%CRCD,1,4)
	set VL=VL_$J("",24-VL.length())_$J(vc1,9)
	set V=$J(CUSTOT,18,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",107-VL.length())_V
	set VL=VL_$J("",127-VL.length())_$J(vc5,4,0)
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VHDG3	// Group Header
	type public String %CRCD,%MSKD,%TIM,ACN,COLAMT,COLVAL,CONAM,CRCD,CURCOL,CUSTLTV,CUSTOT,DSC1,DSC2,ER,IOSL,LNCOL,LNLTV,RID,RN,TLVP,TOTCLBAL,TOTLNBAL,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                         "_$J(vc6,4)
	set V=vc11,VO=V do VP3 quit:VFMQ!verror.get()  set V=$E(V,1,3)
	set VL=VL_$J("",32-VL.length())_V
	set V=vc2,VO=V set V=$J(V,13) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",36-VL.length())_V		// [SYSDEV,LNCOL]CID
	do VOM
	quit

VDTL3	// Detail
	type public String %CRCD,%TIM,ACN,COLAMT,COLVAL,CRCD,CURCOL,CUSTLTV,CUSTOT,DSC1,DSC2,IOSL,LNCOL,LNLTV,TLVP,TOTCLBAL,TOTLNBAL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="                                              "_$J(vc7,9)
	do VP5 quit:VFMQ!verror.get()  set V=$E(DSC1,1,75)
	set VL=VL_$J("",56-VL.length())_V
	do VOM
	set VL="                                                        "_$E(DSC2,1,75)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                "_$S(vc8:"Y",1:"N")
	set VL=VL_$J("",85-VL.length())_$J($$DAT^%ZM(vc9),10)
	set VL=VL_$J("",96-VL.length())_$J($$DAT^%ZM(vc10),10)
	do VP6 quit:VFMQ!verror.get()  set V=$J(COLAMT,18,2) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",107-VL.length())_V
	do VP8 quit:VFMQ!verror.get()  set V=$J(CURCOL,4,0)
	set VL=VL_$J("",127-VL.length())_V
	do VOM
	quit

VSUM3	// Summary
	type public String %CRCD,%TIM,ACN,COLAMT,COLVAL,CRCD,CURCOL,CUSTLTV,CUSTOT,DSC1,DSC2,I,IOSL,LNCOL,LNLTV,TLVP,TOTCLBAL,TOTLNBAL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL="Loan Totals "
	set V=VT(3,1,1)					// @TOT(<<COLAMT>>,)
	set VL=VL_$J("",107-VL.length())_$J(V,18,2)
	do VP9 quit:VFMQ!verror.get()  set V=$J(LNLTV,4,0)
	set VL=VL_$J("",127-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %CRCD,%MSKD,%TIM,ACN,COLAMT,COLVAL,CONAM,CRCD,CURCOL,CUSTLTV,CUSTOT,DSC1,DSC2,LNCOL,LNLTV,RID,RN,TLVP,TOTCLBAL,TOTLNBAL,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Customer   Customer                   Loan     Col                         Mult    Next        Last              Current   Cur"
	do VOM
	set VL="       "_"Number   Name     Type   CRCD    Account  Record Collateral Description  Loan  Review      Review                Value   LTV"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,CIF]ACN

	type Public String CNT,TOTCLBAL,TOTLNBAL

	set (CNT,TOTLNBAL,TOTCLBAL)=0
	quit

VP2	// Column post-processor - Variable: CUSTOT

	type Public String CUSTOT

	set CUSTOT=0
	quit

VP3	// Column pre-processor - Variable: CRCD

	type public String vc11
	type Public String CRCD,OPT

	if OPT=0 set CRCD=""
	if OPT=1 set CRCD=vc11
	quit

VP4	// Column post-processor - [SYSDEV,LNCOL]CID

	type Public String CNT

	set CNT=CNT+1
	quit

VP5	// Column pre-processor - Variable: DSC1

	type public String vc12
	type Public String DSC1,DSC2

	new I,QUIT
	set DSC1=vc12
	set DSC2=""
	if $L(DSC1)>75 set QUIT=0 do {
		for I=1:1 if $L($P(DSC1," ",1,I))>75 do { quit:QUIT 
			set DSC2=$P(DSC1," ",I,999)
			set DSC1=$P(DSC1," ",1,I-1)
			set QUIT=1
			quit 
			}
		}
	quit

VP6	// Column pre-processor - Variable: COLAMT

	type public String vc13,vc14,vc11
	type Public String COLAMT,CUSTVAL,OPT

	new COLVAL
	set (COLVAL,CUSTVAL)=vc13
	if OPT=1 do CAMT^CRCDUTL(vc14,vc11,.COLVAL) set COLAMT=COLVAL
	do CAMT^CRCDUTL(vc14,%CRCD,.CUSTVAL) set CUSTOT=CUSTOT+CUSTVAL
	if OPT'=1 set COLAMT=CUSTVAL quit 
	quit

VP7	// Column post-processor - Variable: COLAMT

	type Public String COLAMT,LNCOL

	set LNCOL=LNCOL+COLAMT
	quit

VP8	// Column pre-processor - Variable: CURCOL

	type public String vc15,vc11
	type Public String COLAMT,CURCOL,OPT,TOTCLBAL,TOTLNBAL

	new LNBAL
	set LNBAL=vc15
	if COLAMT=0 set CURCOL=0 quit 
	if OPT=0 do CAMT^CRCDUTL(vc11,%CRCD,.LNBAL)
	set CURCOL=LNBAL/COLAMT*100
	set TOTLNBAL=TOTLNBAL+LNBAL
	set TOTCLBAL=TOTCLBAL+COLAMT
	quit

VP9	// Column pre-processor - Variable: LNLTV

	type public String vc15,vc11
	type Public String COLAMT,LNCOL,LNLTV,OPT

	new LNBAL2
	set LNBAL2=vc15
	if COLAMT=0 set LNLTV=0 quit 
	if OPT=0 do CAMT^CRCDUTL(vc11,%CRCD,.LNBAL2)
	set LNLTV=LNBAL2/LNCOL*100
	set LNCOL=0
	quit
