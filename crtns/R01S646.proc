R01S646	// SETTSTAT - Daily Settlement Statement Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:54 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String zzTAB()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1
	type Date VIN2

	set RID="SETTSTAT"
	set RN="Daily Settlement Statement Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|20||[INCOM52]UID|zzTAB(||S zzUID=X||T|Teller Number is equal to|||||"
	set %TAB("VIN2")="|12||[INCOM52]CCDT|[INCOM52]CCDT:DISTINCT:QU ""[INCOM52]UID=<<zzUID>>""||||D|Clearing Center Date is equal to|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=35
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String zzTAB()
	type public Date VIN2
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,ACTBAL,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate,zzBBCN,zzBBCR,zzBBDB,zzCCCN,zzCCCR,zzCCDB,zzNVCN,zzNVCR,zzNVDB,zzOTCN,zzOTCR,zzOTDB,zzTHCN,zzTHCR,zzTHDB

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SETTSTAT",RN="Daily Settlement Statement Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SETTSTAT","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[INCOM52]RECINST#6#7,[INCOM52]PTYPE#29#2,[INCOM52]COUNT#53#6,[INCOM52]DBAMT#77#18,[INCOM52]CRAMT#109#18"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Teller Number is equal to"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC1|"_"Clearing Center Date is equal to"_"|VIN2|"_$$DAT^%ZM(VIN2.get(),%MSKD)

		set VWHERE="INCOM52.UID=:VIN1 AND INCOM52.CCDT=:VIN2"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Daily Settlement Statement Report"
		set VBNRINFO("PGM")="R01S646"
		set VBNRINFO("RID")="SETTSTAT"
		set VBNRINFO("TABLES")="INCOM52"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,INCOM52]UID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,INCOM52]INST"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,INCOM52]CCDT"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,INCOM52]CRCD"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,INCOM52]PTYPE"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,INCOM52]RECINST"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:3 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("INCOM52.UID,INCOM52.INST,INCOM52.CCDT,INCOM52.CRCD,INCOM52.PTYPE,INCOM52.RECINST,INCOM52.ACCTYPE,INCOM52.OPENBAL,INCOM52.COUNT,INCOM52.DBAMT,INCOM52.CRAMT","INCOM52","INCOM52.UID=:VIN1 AND INCOM52.CCDT=:VIN2","INCOM52.UID,INCOM52.INST,INCOM52.CCDT,INCOM52.CRCD,INCOM52.PTYPE,INCOM52.RECINST","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece($C(9),1)			// INCOM52.UID
	set vc2=V.piece($C(9),2)			// INCOM52.INST
	set vc3=V.piece($C(9),3)			// INCOM52.CCDT
	set vc4=V.piece($C(9),4)			// INCOM52.CRCD
	set vc5=V.piece($C(9),5)			// INCOM52.PTYPE
	set vc6=V.piece($C(9),6)			// INCOM52.RECINST
	set vc7=V.piece($C(9),7)			// INCOM52.ACCTYPE
	set vc8=V.piece($C(9),8)			// INCOM52.OPENBAL
	set vc9=V.piece($C(9),9)			// INCOM52.COUNT
	set vc10=V.piece($C(9),10)			// INCOM52.DBAMT
	set vc11=V.piece($C(9),11)			// INCOM52.CRAMT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number zzBBCN,zzBBCR,zzBBDB,zzCCCN,zzCCCR,zzCCDB,zzNVCN,zzNVCR,zzNVDB
 type public Number zzTHCN,zzTHCR,zzTHDB,zzOTCN,zzOTCR,zzOTDB
 
 // Set up variables for totals
 set (zzCCCN,zzCCDB,zzCCCR,zzBBCN,zzBBDB,zzBBCR,zzNVCN,zzNVDB,zzNVCR)=0
 set (zzTHCN,zzTHDB,zzTHCR,zzOTCN,zzOTDB,zzOTCR)=0
	quit

VPREBQ	// Pre-processor (before query)

 // Set up Teller Number Table from Inclearing sources
 
 type public String zzTAB()
 
 type String zz
 
 set zz=""
 type ResultSet rs=Db.select("KEY,DESC,TELLER","CTBLINC")
 while rs.next() do {
 	set zz=rs.getCol("KEY")
 	set zzTAB(rs.getCol("TELLER"))=zz_$J("",8-zz.length())_" - "_rs.getCol("DESC")
 	}
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc9,vc11,vc10
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+vc9			// @TOT([INCOM52]COUNT)
	set VT(6,2,1)=VT(6,2,1)+vc11			// @TOT([INCOM52]CRAMT)
	set VT(6,3,1)=VT(6,3,1)+vc10			// @TOT([INCOM52]DBAMT)
	quit

VSUM5	// Summary
	type public String %TIM,ACTBAL,I,IOSL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,zzBBCN,zzBBCR,zzBBDB,zzCCCN,zzCCCR,zzCCDB,zzNVCN,zzNVCR,zzNVDB,zzOTCN,zzOTCR,zzOTDB,zzTAB(),zzTHCN,zzTHCR,zzTHDB

	if 'VT(5) quit
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="                                              "_"------------------"
	set VL=VL_$J("",76-VL.length())_"------------------              ------------------"
	do VOM
	set VL="                  "_"Value Items C-C Total:     "
	set VL=VL_$J("",50-VL.length())_$J(zzCCCN,8)
	set VL=VL_$J("",76-VL.length())_$J($FN(zzCCDB,",",2),18)
	set VL=VL_$J("",108-VL.length())_$J($FN(zzCCCR,",",2),18)
	do VOM
	set VL="                  "_"Value Items B-B Total:"
	set VL=VL_$J("",50-VL.length())_$J(zzBBCN,8)
	set VL=VL_$J("",76-VL.length())_$J($FN(zzBBDB,",",2),18)
	set VL=VL_$J("",108-VL.length())_$J($FN(zzBBCR,",",2),18)
	do VOM
	set VL="                  "_"Value Items 3rd Total:"
	set VL=VL_$J("",50-VL.length())_$J(zzTHCN,8)
	set VL=VL_$J("",76-VL.length())_$J($FN(zzTHDB,",",2),18)
	set VL=VL_$J("",108-VL.length())_$J($FN(zzTHCR,",",2),18)
	do VOM
	set VL="                  "_"Non-Value Items Total:"
	set VL=VL_$J("",50-VL.length())_$J(zzNVCN,8)
	set VL=VL_$J("",76-VL.length())_$J($FN(zzNVDB,",",2),18)
	set VL=VL_$J("",108-VL.length())_$J($FN(zzNVCR,",",2),18)
	do VOM
	set VL="            "_"Other (Rejected) Item Total:"
	set VL=VL_$J("",50-VL.length())_$J(zzOTCN,8)
	set VL=VL_$J("",76-VL.length())_$J($FN(zzOTDB,",",2),18)
	set V=$J($FN(zzOTCR,",",2),18) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",108-VL.length())_V
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,ACTBAL,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,zzBBCN,zzBBCR,zzBBDB,zzCCCN,zzCCCR,zzCCDB,zzNVCN,zzNVCR,zzNVDB,zzOTCN,zzOTCR,zzOTDB,zzTAB(),zzTHCN,zzTHCR,zzTHDB

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="     "_$E(vc6,1,7)
	set V=vc5,VO=V set V=$J(V,17) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",13-VL.length())_V		// [SYSDEV,INCOM52]PTYPE
	set VL=VL_$J("",31-VL.length())_$J(vc9,27)
	set VL=VL_$J("",59-VL.length())_$J($FN(vc10,",",2),35)
	set VL=VL_$J("",95-VL.length())_$J($FN(vc11,",",2),31)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ACTBAL,CONAM,RID,RN,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate,zzBBCN,zzBBCR,zzBBDB,zzCCCN,zzCCCR,zzCCDB,zzNVCN,zzNVCR,zzNVDB,zzOTCN,zzOTCR,zzOTDB,zzTAB(),zzTHCN,zzTHCR,zzTHDB
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="     "_$E(RN,1,30)
	set VL=VL_$J("",82-VL.length())_"Run date/time:"
	set VL=VL_$J("",97-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",108-VL.length())_$E(%TIM,1,5)
	set VL=VL_$J("",118-VL.length())_"Page "
	set VL=VL_$J("",123-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Bank : "
	set VL=VL_$J("",12-VL.length())_$E(vc2,1,7)
	set VL=VL_$J("",21-VL.length())_"Teller Number: "
	set VL=VL_$J("",36-VL.length())_$E(vc1,1,20)
	set VL=VL_$J("",58-VL.length())_"Account day :"
	set VL=VL_$J("",72-VL.length())_$$DAT^%ZM(vc3,"DD-MON-YEAR")
	set VL=VL_$J("",85-VL.length())_"Account type : "
	set VL=VL_$J("",100-VL.length())_$E(vc7,1,1)
	do VOM
	set VL="" do VOM
	set VL="     "_"Currency : "
	set VL=VL_$J("",16-VL.length())_$E(vc4,1,3)
	set VL=VL_$J("",81-VL.length())_"Daily Opening Balance :"
	set VL=VL_$J("",105-VL.length())_$J($FN(vc8,",",2),21)
	do VOM
	set VL="" do VOM
	set VL="     "_"Bank              Payment type           Debit/Credit count                 Debit  Amount                  Credit  Amount"
	do VOM
	set VL="     "_"-------           ------------           ------------------            ------------------              ------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,ACTBAL,VPN,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,zzBBCN,zzBBCR,zzBBDB,zzCCCN,zzCCCR,zzCCDB,zzNVCN,zzNVCR,zzNVDB,zzOTCN,zzOTCR,zzOTDB,zzTHCN,zzTHCR,zzTHDB
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="                                              "_"------------------            ------------------              ------------------"
	do VOM
	set V=0						// @TOT([INCOM52]COUNT,0)
	for I=0:1:6 set V=V+VT(I,1,1)
	set VL="                                                  "_$J(V,8)
	set V=0						// @TOT([INCOM52]DBAMT,0)
	for I=0:1:6 set V=V+VT(I,3,1)
	set VL=VL_$J("",76-VL.length())_$J($FN(V,",",2),18)
	set V=0						// @TOT([INCOM52]CRAMT,0)
	for I=0:1:6 set V=V+VT(I,2,1)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),18)
	do VOM
	set VL="" do VOM
	set VL="                                                                                 "_"Actual Balance :"
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(ACTBAL,",",2),21)
	set VL=VL_$J("",105-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - Variable: zzOTCR

 // Post Processor to kill all Subtotals variables
 
 type public Number zzBBCN,zzBBCR,zzBBDB,zzCCCN,zzCCCR,zzCCDB,zzNVCN,zzNVCR,zzNVDB
 type public Number zzTHCN,zzTHCR,zzTHDB,zzOTCN,zzOTCR,zzOTDB
 
 set (zzNVCN,zzNVDB,zzNVCR,zzCCCN,zzCCDB,zzCCCR)=0
 set (zzBBCN,zzBBDB,zzBBCR,zzTHCN,zzTHDB,zzTHCR)=0
 set (zzOTCN,zzOTDB,zzOTCR)=0
	quit

VP2	// Column post-processor - [SYSDEV,INCOM52]PTYPE

	type public String vc5,vc11,vc10,vc9
 // Post processor on Record Type to collect proper Totals
 
 type public Number zzBBCN,zzBBCR,zzBBDB,zzCCCN,zzCCCR,zzCCDB,zzNVCN,zzNVCR,zzNVDB
 type public Number zzTHCN,zzTHCR,zzTHDB,zzOTCN,zzOTCR,zzOTDB
 
 type String zzTYPE
 
 set zzTYPE=vc5
 if (zzTYPE.extract(1)="3")!(zzTYPE.extract(1)="4") do { quit
	set zzNVCR=zzNVCR.get()+vc11
	set zzNVDB=zzNVDB.get()+vc10
	set zzNVCN=zzNVCN.get()+vc9
	}
 if (zzTYPE="11")!(zzTYPE="12")!(zzTYPE="13")!(zzTYPE="14") do { quit
	set zzCCCR=zzCCCR.get()+vc11
	set zzCCDB=zzCCDB.get()+vc10
	set zzCCCN=zzCCCN.get()+vc9
	}
 if (zzTYPE="21")!(zzTYPE="22")!(zzTYPE="23")!(zzTYPE="24") do { quit
	set zzBBCR=zzBBCR.get()+vc11
	set zzBBDB=zzBBDB.get()+vc10
	set zzBBCN=zzBBCN.get()+vc9
	}
 if (zzTYPE="15")!(zzTYPE="16")!(zzTYPE="25")!(zzTYPE="26") do { quit
	set zzTHCR=zzTHCR.get()+vc11
	set zzTHDB=zzTHDB.get()+vc10
	set zzTHCN=zzTHCN.get()+vc9
	}
 set zzOTCR=zzOTCR.get()+vc11
 set zzOTDB=zzOTDB.get()+vc10
 set zzOTCN=zzOTCN.get()+vc9
	quit

VP3	// Column pre-processor - Variable: ACTBAL

	type public String vc11,vc10,vc8
 type public Number ACTBAL

 set ACTBAL=vc11-(vc10+vc8)
	quit
