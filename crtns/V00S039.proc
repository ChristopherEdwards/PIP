V00S039(%ProcessMode,RecordCTBLINST fCTBLINST)   //PBS - DEP - SID= <CTBLINST> Institution Table
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:05 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="CTBLINST",VPGM=$T(+0),VSNAME="Institution Table"
 set VFSN("CTBLINST")="zfCTBLINST"
 set vPSL=1
 set KEYS(1)=fCTBLINST.KEY
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fCTBLINST),VDA1(.fCTBLINST),^DBSPNT()

 if '%ProcessMode do VNEW(.fCTBLINST),VPR(.fCTBLINST),VDA1(.fCTBLINST)
 if %ProcessMode do VLOD(.fCTBLINST) quit:$G(ER)  do VPR(.fCTBLINST),VDA1(.fCTBLINST)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCTBLINST)
	quit


VNEW(RecordCTBLINST fCTBLINST) // Initialize arrays if %O=0
 
 do VDEF(.fCTBLINST)
 do VLOD(.fCTBLINST)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCTBLINST fCTBLINST)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCTBLINST fCTBLINST) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCTBLINST fCTBLINST) // Display screen prompts
 set VO="5||13|"
 set VO(0)="12|0"
 set VO(1)=$C(12,4,20,1,0,0,0,0,0,0)_"01T Institution number:"
 set VO(2)=$C(13,10,14,1,0,0,0,0,0,0)_"01T Logical name:"
 set VO(3)=$C(14,6,18,0,0,0,0,0,0,0)_"01T Remote node name:"
 set VO(4)=$C(15,4,20,0,0,0,0,0,0,0)_"01T CID post processor:"
 set VO(5)=$C(16,3,21,1,0,0,0,0,0,0)_"01T Posting date option:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCTBLINST fCTBLINST)  // Display screen data
 new V
 //
 set VO="10|6|13|"
 set VO(6)=$C(12,25,5,2,0,0,0,0,0,0)_"00N"_fCTBLINST.INNUM
 set VO(7)=$C(13,25,12,2,0,0,0,0,0,0)_"00T"_$E(fCTBLINST.LOG,1,12)
 set VO(8)=$C(14,25,20,2,0,0,0,0,0,0)_"00T"_$E(fCTBLINST.%NODE,1,20)
 set VO(9)=$C(15,25,50,2,0,0,0,0,0,0)_"00T"_$E(fCTBLINST.CIDPP,1,50)
 set VO(10)=$C(16,25,1,2,0,0,0,0,0,0)_"00N"_fCTBLINST.PDT
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCTBLINST fCTBLINST)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=5,VPT=12,VPB=16,PGM=$T(+0),DLIB="SYSDEV",DFID="CTBLINST"
 set OLNTB=16025
 
 set VFSN("CTBLINST")="zfCTBLINST"
 //
 // 
	
	
 set %TAB(1)=$C(11,24,5)_"01N12401|1|[CTBLINST]INNUM"
 set %TAB(2)=$C(12,24,12)_"01T12402|1|[CTBLINST]LOG"
 set %TAB(3)=$C(13,24,20)_"00T12405|1|[CTBLINST]%NODE"
 set %TAB(4)=$C(14,24,50)_"00T12403|1|[CTBLINST]CIDPP"
 set %TAB(5)=$C(15,24,1)_"01N12404|1|[CTBLINST]PDT|[STBLPDT]"
 do VTBL(.fCTBLINST)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCTBLINST fCTBLINST) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCTBLINST fCTBLINST
 do VPR(.fCTBLINST)
 do VDA1(.fCTBLINST)
 do ^DBSPNT()
 quit

VW(RecordCTBLINST fCTBLINST)
 do VDA1(.fCTBLINST)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCTBLINST fCTBLINST)
 do VDA1(.fCTBLINST)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCTBLINST fCTBLINST
 do VDA1(.fCTBLINST)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCTBLINST fCTBLINST
 if sn="CTBLINST" do vSET1(.fCTBLINST,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCTBLINST fCTBLINST,di,X)
 do fCTBLINST.setAuditFlag(1)
 set fCTBLINST.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCTBLINST fCTBLINST
 if fid="CTBLINST" quit $$vREAD1(.fCTBLINST,di)
 quit ""
vREAD1(RecordCTBLINST fCTBLINST,di)
 quit fCTBLINST.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
