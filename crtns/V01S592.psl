V01S592(Number %ProcessMode,RecordTRN %A)   //PBS -  - SID= <TRNLNK> Linked Transaction Codes 
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:34 - joynerd
 // This screen allows the user to link one transaction code to another.
 // When a user posts a transaction using the first transaction code, the
 // system automatically posts a transaction using the linked transaction
 // code.  The user accesses the TRNLNK screen via the Transaction Code
 // Maintenance function (UTR002).
 // 
 // The system only uses linked transaction codes in an on-line environment;
 // processing associated with linked transaction codes is not invoked during batch
 // processing.
 // 
 // For further information, refer to the Transaction Code Maintenance Reference
 // Manual.
 // 
 // For loan fee processing purposes, the institution may establish linked
 // transactions to assess fees (e.g., linking a disbursement fee to the
 // disbursement transaction codes).  The TRNLNK screen enables the institution
 // to display or suppress these linked transactions when the corresponding
 // fee amount is zero.  For further information, refer to the Loan Fee
 // Processing Reference Manual.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if '%A.exists() set %A = Class.new("RecordTRN")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="TRNLNK",VPGM=$T(+0),VSNAME="Linked Transaction Codes "
 set VFSN("TRN")="zA"
 set vPSL=1
 set KEYS(1)=%A.ETC
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.%A),VDA1(.%A),^DBSPNT() quit

 if '%ProcessMode do VNEW(.%A),VPR(.%A),VDA1(.%A)
 if %ProcessMode do VLOD(.%A) quit:$G(ER)  do VPR(.%A),VDA1(.%A)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.%A)
	quit


VNEW(RecordTRN %A) // Initialize arrays if %O=0
 
 do VDEF(.%A)
 do VLOD(.%A)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordTRN %A)
 quit:%A.ETC.isNull() 
 quit:%ProcessMode  set ER=0 if (%A.ETC="") set ER=1,RM=$$^MSG(1767,"ETC") Q
 if Db.isDefined("TRN","TRN.ETC=:%A.ETC") S ER=1,RM=$$^MSG(2327) Q
 do %A.setAuditFlag(1)
 if %A.PCFD32="" set %A.PCFD32=0
 if %A.PCFD33="" set %A.PCFD33=0
 if %A.STPNT="" set %A.STPNT=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordTRN %A) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordTRN %A) // Display screen prompts
 set VO="16||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,7,17,0,0,0,0,0,0,0)_"01TTransaction Code:"
 set VO(2)=$C(2,53,6,0,0,0,0,0,0,0)_"01TClass:"
 set VO(3)=$C(2,63,6,0,0,0,0,0,0,0)_"01TGroup:"
 set VO(4)=$C(3,12,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(5)=$C(5,7,17,0,0,0,0,0,0,0)_"01TLinked Tran Code:"
 set VO(6)=$C(6,10,14,0,0,0,0,0,0,0)_"01TNo-Book (Y/N):"
 set VO(7)=$C(8,12,55,2,0,0,0,0,0,0)_"01TApplicable to Native PROFILE On-Line Transactions Only "
 set VO(8)=$C(10,25,26,1,0,0,0,0,0,0)_"01T Linked Variable Defaults "
 set VO(9)=$C(12,9,15,0,0,0,0,0,0,0)_"01TAccount Number:"
 set VO(10)=$C(13,5,19,0,0,0,0,0,0,0)_"01TTransaction Amount:"
 set VO(11)=$C(14,9,15,0,0,0,0,0,0,0)_"01TTeller Comment:"
 set VO(12)=$C(15,4,20,0,0,0,0,0,0,0)_"01TDisable if Zero Amt:"
 set VO(13)=$C(17,16,45,2,0,0,0,0,0,0)_"01TApplicable to PROFILE for Windows Client Only"
 set VO(14)=$C(19,8,16,0,0,0,0,0,0,0)_"01TPFW Window Name:"
 set VO(15)=$C(20,1,23,0,0,0,0,0,0,0)_"01TUpdate Client Est. Bal:"
 set VO(16)=$C(21,16,8,0,0,0,0,0,0,0)_"01TForm ID:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordTRN %A)  // Display screen data
 new V
 //
 set VO="29|17|13|0"
 set VO(17)=$C(2,25,12,2,0,0,0,0,0,0)_"01T"_$E(%A.ETC,1,12)
 set VO(18)=$C(2,60,1,2,0,0,0,0,0,0)_"01T"_$E(%A.CLS,1,1)
 set VO(19)=$C(2,70,6,2,0,0,0,0,0,0)_"01T"_$E(%A.GRP,1,6)
 set VO(20)=$C(3,25,35,2,0,0,0,0,0,0)_"01T"_$E(%A.DES,1,35)
 set VO(21)=$C(5,25,12,2,0,0,0,0,0,0)_"00T"_$E(%A.LNKETC,1,12)
 set VO(22)=$C(6,25,1,2,0,0,0,0,0,0)_"00L"_$S(%A.LNKNBK:"Y",1:"N")
 set VO(23)=$C(12,25,12,2,0,0,0,0,0,0)_"00T"_$E(%A.LNKCID,1,12)
 set VO(24)=$C(13,25,12,2,0,0,0,0,0,0)_"00T"_$E(%A.LNKAMT,1,12)
 set VO(25)=$C(14,25,28,2,0,0,0,0,0,0)_"00T"_$E(%A.LNKCMT,1,28)
 set VO(26)=$C(15,25,1,2,0,0,0,0,0,0)_"00L"_$S(%A.LNKDSABL:"Y",1:"N")
 set VO(27)=$C(19,25,40,2,0,0,0,0,0,0)_"00T"_$E(%A.PFWW,1,40)
 set VO(28)=$C(20,25,1,2,0,0,0,0,0,0)_"00L"_$S(%A.OFFLNUPDT:"Y",1:"N")
 set VO(29)=$C(21,25,12,2,0,0,0,0,0,0)_"00N"_%A.FORMID
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordTRN %A)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=13,VPT=2,VPB=21,PGM=$T(+0),DLIB="SYSDEV",DFID="TRN"
 set OLNTB=21025
 
 set VFSN("TRN")="zA"
 //
 // 
	
	
 set %TAB(1)=$C(1,24,12)_"21T12401|1|[TRN]ETC"
 set %TAB(2)=$C(1,59,1)_"21T12403|1|[TRN]CLS|[STBLTRNCLS]"
 set %TAB(3)=$C(1,69,6)_"21T12404|1|[TRN]GRP|[STBLLIBS]"
 set %TAB(4)=$C(2,24,35)_"21T12406|1|[TRN]DES"
 set %TAB(5)=$C(4,24,12)_"00T12422|1|[TRN]LNKETC|[TRN]:NOVAL||do VP1^V01S592(.%A)"
 set %TAB(6)=$C(5,24,1)_"00L12406|1|[TRN]LNKNBK"
 set %TAB(7)=$C(11,24,12)_"00T12404|1|[TRN]LNKCID|[STBLLNKTRN]||do VP2^V01S592(.%A)"
 set %TAB(8)=$C(12,24,12)_"00T12405|1|[TRN]LNKAMT|[STBLLNKTRN]||do VP3^V01S592(.%A)"
 set %TAB(9)=$C(13,24,28)_"00T12407|1|[TRN]LNKCMT|[STBLLNKTRN]||do VP4^V01S592(.%A)||||||40"
 set %TAB(10)=$C(14,24,1)_"00L12408|1|[TRN]LNKDSABL"
 set %TAB(11)=$C(18,24,40)_"00T12409|1|[TRN]PFWW"
 set %TAB(12)=$C(19,24,1)_"00L12416|1|[TRN]OFFLNUPDT"
 set %TAB(13)=$C(20,24,12)_"00N12410|1|[TRN]FORMID|||do VP5^V01S592(.%A)"
 do VTBL(.%A)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordTRN %A) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	11/13/06 - KumarSS - CR 23414
		   Removed setting null to TRN.LNKNBK.

	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String X,ER

 do LNKTRN^UTRN quit:ER 
 if X="DR"!(X="CR") do CHANGE^DBSMACRO("TBL","")
 if X="DR"!(X="CR") quit 

 if X.length() do { quit
	type ResultSet rs=Db.select("CLS","TRN","ETC=:X")
	type String TMPCLS

	set TMPCLS=rs.next()
	set TMPCLS=rs.getCol(1)

	if (TMPCLS="L")!(TMPCLS="D") quit

	do GOTO^DBSMACRO("[TRN]LNKCID")
	}

 do DELETE^DBSMACRO("[TRN]LNKCID","1","0")
 do DELETE^DBSMACRO("[TRN]LNKAMT","1","0")
 do DELETE^DBSMACRO("[TRN]LNKCMT","1","0")
 do GOTO^DBSMACRO("[TRN]PFWW") quit 

 quit 
VP2(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------

	07/26/07 - Anitha Chandran - CR 28313
		Modified to insert a condition to quit, if the account 
		number is set to “CID”, since an error was displayed 
		for the value of “CID”.

	01/12/06 - KELLYP - CR 18989
		Modified to return an error message when the account
		number entered doesn't exist or doesn't match the
		linked trancode group.

	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */
 
 type public Boolean ER
 type public String I(),X

 if X.isNull() quit

 if X?1N.N set I(3)=""

 type RecordTRN trnlnk=Db.getRecord("TRN","ETC=:%A.lnketc")

 if trnlnk.cls="M" do { quit
        // Invalid G/L account
        if 'Db.isDefined("GLAD","ACN=:X") do Runtime.setErrMSG("TRN",1364) quit:ER
        }

 if X="CID" quit

 type RecordACN acnlnk=Db.getRecord("ACN","CID=:X",1)

 // Invalid ~p1 account
 if 'acnlnk.getMode() do Runtime.setErrMSG("TRN",1512,trnlnk.grp) quit:ER

 // Account is not in group ~p1
 if acnlnk.grp'=trnlnk.grp do Runtime.setErrMSG("TRN",8228,trnlnk.grp) quit:ER

 quit 
VP3(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String I(),X

 if X.length(),(X?1N.N!(X?1N.N1"."2N)) set I(3)=""

 quit

VP4(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String I(),X

 if X.length(),'Db.isDefined("STBLLNKTRN","X") set I(3)=""

 quit

VP5(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String ER,RM,X

 // Cannot define form ID if print receipt is disabled
 if 'X.isNull(),(%A.receipt="0") do Runtime.setErrMSG("TRN",4996) quit:ER

 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordTRN %A
 do VPR(.%A)
 do VDA1(.%A)
 do ^DBSPNT()
 quit

VW(RecordTRN %A)
 do VDA1(.%A)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordTRN %A)
 do VDA1(.%A)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordTRN %A
 do VDA1(.%A)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordTRN %A
 if sn="TRN" do vSET1(.%A,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordTRN %A,di,X)
 do %A.setAuditFlag(1)
 set %A.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordTRN %A
 if fid="TRN" quit $$vREAD1(.%A,di)
 quit ""
vREAD1(RecordTRN %A,di)
 quit %A.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
