V01S494(%ProcessMode,)   // -  - SID= <MTMPENDING> Display MTM Pending Information
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:51 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="MTMPENDING",VPGM=$T(+0),VSNAME="Display MTM Pending Information"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=17 do VPR(),VDA1(),V5^DBSPNT quit

 if '%ProcessMode do VNEW(),VPR(),VDA1()
 if %ProcessMode do VLOD() quit:$G(ER)  do VPR(),VDA1()

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB()
	quit


VNEW() // Initialize arrays if %O=0
 
 do VDEF()
 do VLOD()
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF()
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD() // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=17
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR() // Display screen prompts
 set VO="10||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,1,36,0,0,0,0,0,0,0)_"01TPending Messsage Information for MTM"
 set VO(2)=$C(3,1,3,2,0,0,0,0,0,0)_"01TSrv"
 set VO(3)=$C(3,46,7,2,0,0,0,0,0,0)_"01TConnect"
 set VO(4)=$C(3,56,9,2,0,0,0,0,0,0)_"01TWait Time"
 set VO(5)=$C(3,66,10,2,0,0,0,0,0,0)_"01T(hh:mm:ss)"
 set VO(6)=$C(4,2,2,2,0,0,0,0,0,0)_"01TID"
 set VO(7)=$C(4,6,12,2,0,0,0,0,0,0)_"01TProcess Name"
 set VO(8)=$C(4,24,12,2,0,0,0,0,0,0)_"01TService Type"
 set VO(9)=$C(4,47,4,2,0,0,0,0,0,0)_"01TTime"
 set VO(10)=$C(4,56,15,2,0,0,0,0,0,0)_"01TClient Waiting "
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1()  // Display screen data
 new V
 s DATA=$G(DATA)
 s MTMID=$G(MTMID)
 //
 set VO="13|11|13|"
 set VO(11)=$C(1,38,10,2,0,0,0,0,0,0)_"01T"_$G(MTMID)
 set VO(12)=$C(1,64,8,2,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$DAT^%ZM(DATE))
 set VO(13)=$C(1,73,8,2,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$TIM^%ZM(TIME))
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=6 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA()
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA()  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,DATA(I))=$G(DATA(I))
 
 set VO(VX+1)=$C(DY,2,2,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,6,16,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,24,20,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",3)
 set VO(VX+4)=$C(DY,46,8,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",4)
 set VO(VX+5)=$C(DY,56,8,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",6)
 set VO(VX+6)=$C(DY+1,56,25,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",5)
 set DY=DY+2,VX=VX+6
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB()
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=2
 set %MODOFF=1,%MOD=6,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=5+(%REPEAT*2),BLKSIZ=(79*%REPEAT)+10,PGM=$T(+0),DLIB="SYSDEV",DFID=""
 set OLNTB=VPB*1000
 
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,37,10)_"20T|*MTMID|[*]@MTMID"
 set %TAB(2)=$C(5,1,2)_"20N12401|*DATA(1)|[*]@DATA"
 set %TAB(3)=$C(5,5,16)_"20T12402|*DATA(1)|[*]@DATA"
 set %TAB(4)=$C(5,23,20)_"20T12403|*DATA(1)|[*]@DATA"
 set %TAB(5)=$C(5,45,8)_"20T12404|*DATA(1)|[*]@DATA"
 set %TAB(6)=$C(5,55,8)_"20T12406|*DATA(1)|[*]@DATA"
 set %TAB(7)=$C(6,55,25)_"20T12405|*DATA(1)|[*]@DATA"
 do VTBL()
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL() //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 do VPR()
 do VDA1()
 do ^DBSPNT()
 quit

VW()
 do VDA1()
 do ^DBSPNT(10)
 quit

VDAPNT()
 do VDA1()
 do ^DBSPNT(0,2)
 quit

VDA
 do VDA1()
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 quit ""
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
