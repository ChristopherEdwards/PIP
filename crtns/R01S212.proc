R01S212	// SCA157 - Commercial Commitment Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:44 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="SCA157"
	set RN="Commercial Commitment Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[TMPRPT6]KEY1|[CIF]||D EXT^DBSQRY||T|CIF Number|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CONAM,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RID,RN,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,VL,VLOF,VRF(),VSTATS(),VWHERE,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7
	type String vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA157",RN="Commercial Commitment Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA157","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[TMPRPT6]KEY6#11#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[TMPRPT6]KEY1 "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("TMPRPT6") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"CIF Number"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Commercial Commitment Summary"
		set VBNRINFO("PGM")="R01S212"
		set VBNRINFO("RID")="SCA157"
		set VBNRINFO("TABLES")="TMPRPT6"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TMPRPT6]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TMPRPT6]KEY1"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TMPRPT6]KEY2"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TMPRPT6]KEY3"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,TMPRPT6]KEY4"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,TMPRPT6]KEY5"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,TMPRPT6]KEY6"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"TMPRPT6.PID,TMPRPT6.KEY1,TMPRPT6.KEY2,TMPRPT6.KEY3"
	set VSELECT=VSELECT_",TMPRPT6.KEY4,TMPRPT6.KEY5,TMPRPT6.KEY6"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"TMPRPT6",VWHERE,"TMPRPT6.PID,TMPRPT6.KEY1,TMPRPT6.KEY2,TMPRPT6.KEY3,TMPRPT6.KEY4,TMPRPT6.KEY5,TMPRPT6.KEY6","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// TMPRPT6.PID
	set vc2=V.piece($C(9),2)			// TMPRPT6.KEY1
	set vc3=V.piece($C(9),3)			// TMPRPT6.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT6.KEY3
	set vc5=V.piece($C(9),5)			// TMPRPT6.KEY4
	set vc6=V.piece($C(9),6)			// TMPRPT6.KEY5
	set vc7=V.piece($C(9),7)			// TMPRPT6.KEY6
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number VIN1
 type public String VWHERE
 type Number ACN,CID
 type String WHR

 do Db.delete("TMPRPT6","PID=:%ProcessID")

 // Add PID to WHERE list to exclude other TMPRPT6 data
 if 'VWHERE.isNull() set VWHERE=VWHERE_" AND TMPRPT6.PID="_%ProcessID
 else  set VWHERE="TMPRPT6.PID="_%ProcessID

 set ACN=VIN1
 set WHR="CCL IS NULL AND CPF=1"
 if ACN'="ALL" set WHR="ACN="_ACN_" AND "_WHR

 // Get all top-level commitments
 type ResultSet rs=Db.select("CID,ACN","LN",WHR)
 while rs.next() do {
	type RecordTMPRPT6 tmprpt6=Class.new("RecordTMPRPT6")

	set CID=rs.getCol("CID")
	set ACN=rs.getCol("ACN")

        set tmprpt6.pid=%ProcessID
        set tmprpt6.key1=ACN
	
	// Initialize key values
	set tmprpt6.key3=0
	set tmprpt6.key4=0
	set tmprpt6.key5=0
	set tmprpt6.key6=0

	do ADDMCOM(ACN,CID,.tmprpt6,2)
	}

ADDMCOM(Number ACN, Number CID, RecordTMPRPT6 tmprpt6, Number LEVEL)
	// Add master commitment records to TMPRPT6

	type String COL

	do tmprpt6.setMode(0)	// Force create mode

	set COL="KEY"_LEVEL

	set tmprpt6.@COL=CID

	type ResultSet rsccl=Db.select("CID","LN","CCL=:CID")

	// No more sub-levels, time to save
	if rsccl.isEmpty() do tmprpt6.save() quit

	// Iteratively call this same section to add all loans
	// linked to this commitment (and it's sub-loans/commitments, etc.).
	while rsccl.next() do ADDMCOM(ACN,rsccl.getCol("CID"),.tmprpt6,LEVEL+1)

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	if 'vskp(7).get() do VDTL7 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1
	if vb6!(vovc6'=vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(7)=VT(7)+1
	quit

VDTL2	// Detail
	type public String %TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,IOSL,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),VWHERE,vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2
	type public String vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set V=vc2,VO=V set V=$J(V,10) do VP1 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",12-VL.length())_$E(NAM,1,30)
	set VL=VL_$J("",43-VL.length())_$J($$DAT^%ZM(DAO),10)
	do VOM
	set VL="" do VOM
	quit

VDTL3	// Detail
	type public String %TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,IOSL,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),VWHERE,vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2
	type public String vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc3,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,12) do VP3 quit:VFMQ!verror.get()  set VL="  "_V
	set VL=VL_$J("",24-VL.length())_$E(GRP2,1,3)
	set VL=VL_$J("",29-VL.length())_$J(TYPE2,4)
	set VL=VL_$J("",35-VL.length())_$E(RSHP2,1,5)
	set VL=VL_$J("",41-VL.length())_$E(DIR2,1,1)
	set VL=VL_$J("",43-VL.length())_$J($$DAT^%ZM(ODT2),10)
	set VL=VL_$J("",54-VL.length())_$J(STAT2,1)
	set VL=VL_$J("",57-VL.length())_$S(REVF2:"Y",1:"N")
	set VL=VL_$J("",60-VL.length())_$J($FN(CRLMT2,",",2),12)
	set VL=VL_$J("",74-VL.length())_$J($FN(BALCMP2,",",2),12)
	set VL=VL_$J("",87-VL.length())_$J($FN(AVLBAL2,",",2),12)
	set VL=VL_$J("",100-VL.length())_$J($$DAT^%ZM(DIST1LD2),10)
	set VL=VL_$J("",111-VL.length())_$J($FN(TDUE2,",",2),10)
	set VL=VL_$J("",122-VL.length())_$J($$DAT^%ZM(MDT2),10)
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,I,IOSL,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,V,VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VT(),VWHERE,VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2
	type public String vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                   "_"DIRECT:"
	set VL=VL_$J("",60-VL.length())_$J($FN(DCRLMT,",",2),12)
	set VL=VL_$J("",74-VL.length())_$J($FN(DBAL,",",2),12)
	set VL=VL_$J("",87-VL.length())_$J($FN(DAVLBAL,",",2),12)
	set VL=VL_$J("",109-VL.length())_$J($FN(DTDUE,",",2),12)
	do VOM
	set VL="                                                    "_"TOTAL:"
	set VL=VL_$J("",60-VL.length())_$J($FN(TCRLMT,",",2),12)
	set VL=VL_$J("",74-VL.length())_$J($FN(TBAL,",",2),12)
	set VL=VL_$J("",87-VL.length())_$J($FN(TAVLBAL,",",2),12)
	set VL=VL_$J("",109-VL.length())_$J($FN(TTDUE,",",2),12)
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,IOSL,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),VWHERE,vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2
	type public String vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J(V,12) do VP5 quit:VFMQ!verror.get()  set VL="    "_V
	set VL=VL_$J("",24-VL.length())_$E(GRP3,1,3)
	set VL=VL_$J("",29-VL.length())_$J(TYPE3,4)
	set VL=VL_$J("",35-VL.length())_$E(RSHP3,1,5)
	set VL=VL_$J("",41-VL.length())_$E(DIR3,1,1)
	set VL=VL_$J("",43-VL.length())_$J($$DAT^%ZM(ODT3),10)
	set VL=VL_$J("",54-VL.length())_$J(STAT3,1)
	set VL=VL_$J("",57-VL.length())_$S(REVF3:"Y",1:"N")
	set VL=VL_$J("",60-VL.length())_$J($FN(CRLMT3,",",2),12)
	set VL=VL_$J("",74-VL.length())_$J($FN(BALCMP3,",",2),12)
	set VL=VL_$J("",87-VL.length())_$J($FN(AVLBAL3,",",2),12)
	set VL=VL_$J("",100-VL.length())_$J($$DAT^%ZM(DIST1LD3),10)
	set VL=VL_$J("",111-VL.length())_$J($FN(TDUE3,",",2),10)
	set VL=VL_$J("",122-VL.length())_$J($$DAT^%ZM(MDT3),10)
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,IOSL,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),VWHERE,vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2
	type public String vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:VD(5)  set VD(5)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc5,VO=V do VP6 quit:VFMQ!verror.get()  set V=$J(V,12) do VP7 quit:VFMQ!verror.get()  set VL="      "_V
	set VL=VL_$J("",24-VL.length())_$E(GRP4,1,3)
	set VL=VL_$J("",29-VL.length())_$J(TYPE4,4)
	set VL=VL_$J("",35-VL.length())_$E(RSHP4,1,5)
	set VL=VL_$J("",41-VL.length())_$E(DIR4,1,1)
	set VL=VL_$J("",43-VL.length())_$J($$DAT^%ZM(ODT4),10)
	set VL=VL_$J("",54-VL.length())_$J(STAT4,1)
	set VL=VL_$J("",57-VL.length())_$S(REVF4:"Y",1:"N")
	set VL=VL_$J("",60-VL.length())_$J($FN(CRLMT4,",",2),12)
	set VL=VL_$J("",74-VL.length())_$J($FN(BALCMP4,",",2),12)
	set VL=VL_$J("",87-VL.length())_$J($FN(AVLBAL4,",",2),12)
	set VL=VL_$J("",100-VL.length())_$J($$DAT^%ZM(DIST1LD4),10)
	set VL=VL_$J("",111-VL.length())_$J($FN(TDUE4,",",2),10)
	set VL=VL_$J("",122-VL.length())_$J($$DAT^%ZM(MDT4),10)
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,IOSL,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),VWHERE,vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2
	type public String vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc6,VO=V do VP8 quit:VFMQ!verror.get()  set V=$J(V,12) do VP9 quit:VFMQ!verror.get()  set VL="        "_V
	set VL=VL_$J("",24-VL.length())_$E(GRP5,1,3)
	set VL=VL_$J("",29-VL.length())_$J(TYPE5,4)
	set VL=VL_$J("",35-VL.length())_$E(RSHP5,1,5)
	set VL=VL_$J("",41-VL.length())_$E(DIR5,1,1)
	set VL=VL_$J("",43-VL.length())_$J($$DAT^%ZM(ODT5),10)
	set VL=VL_$J("",54-VL.length())_$J(STAT5,1)
	set VL=VL_$J("",57-VL.length())_$S(REVF5:"Y",1:"N")
	set VL=VL_$J("",60-VL.length())_$J($FN(CRLMT5,",",2),12)
	set VL=VL_$J("",74-VL.length())_$J($FN(BALCMP5,",",2),12)
	set VL=VL_$J("",87-VL.length())_$J($FN(AVLBAL5,",",2),12)
	set VL=VL_$J("",100-VL.length())_$J($$DAT^%ZM(DIST1LD5),10)
	set VL=VL_$J("",111-VL.length())_$J($FN(TDUE5,",",2),10)
	set VL=VL_$J("",122-VL.length())_$J($$DAT^%ZM(MDT5),10)
	do VOM
	quit

VDTL7	// Detail
	type public String %TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,IOSL,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,V,VD(),VFMQ,VIN1,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),VWHERE,vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2
	type public String vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc7,VO=V set V=$J(V,12) do VP10 quit:VFMQ!verror.get()  set VL="          "_V
	set VL=VL_$J("",24-VL.length())_$E(GRP6,1,3)
	set VL=VL_$J("",29-VL.length())_$J(TYPE6,4)
	set VL=VL_$J("",35-VL.length())_$E(RSHP6,1,5)
	set VL=VL_$J("",41-VL.length())_$E(DIR6,1,1)
	set VL=VL_$J("",43-VL.length())_$J($$DAT^%ZM(ODT6),10)
	set VL=VL_$J("",54-VL.length())_$J(STAT6,1)
	set VL=VL_$J("",57-VL.length())_$S(REVF6:"Y",1:"N")
	set VL=VL_$J("",60-VL.length())_$J($FN(CRLMT6,",",2),12)
	set VL=VL_$J("",74-VL.length())_$J($FN(BALCMP6,",",2),12)
	set VL=VL_$J("",87-VL.length())_$J($FN(AVLBAL6,",",2),12)
	set VL=VL_$J("",100-VL.length())_$J($$DAT^%ZM(DIST1LD6),10)
	set VL=VL_$J("",111-VL.length())_$J($FN(TDUE6,",",2),10)
	set VL=VL_$J("",122-VL.length())_$J($$DAT^%ZM(MDT6),10)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AVLBAL2,AVLBAL3,AVLBAL4,AVLBAL5,AVLBAL6,BALCMP2,BALCMP3,BALCMP4,BALCMP5,BALCMP6,CONAM,CRLMT2,CRLMT3,CRLMT4,CRLMT5,CRLMT6,DAO,DAVLBAL,DBAL,DCRLMT,DIR2,DIR3,DIR4,DIR5,DIR6,DIST1LD2,DIST1LD3,DIST1LD4,DIST1LD5,DIST1LD6,DTDUE,GRP2,GRP3,GRP4,GRP5,GRP6,MDT2,MDT3,MDT4,MDT5,MDT6,NAM,ODT2,ODT3,ODT4,ODT5,ODT6,REVF2,REVF3,REVF4,REVF5,REVF6,RID,RN,RSHP2,RSHP3,RSHP4,RSHP5,RSHP6,STAT2,STAT3,STAT4,STAT5,STAT6,TAVLBAL,TBAL,TCRLMT,TDUE2,TDUE3,TDUE4,TDUE5,TDUE6,TTDUE,TYPE2,TYPE3,TYPE4,TYPE5,TYPE6,VIN1,VL,VWHERE,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA157)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Borrower                Grp  Type  Rshp  D Opened     S  R   Credit Line       Balance    Available    PD Thru  Total Due Matures"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,TMPRPT6]KEY1

	type public String vc2
 type public Date DAO
 type public Number DAVLBAL,DBAL,DCRLMT,DTDUE
 type public Number TAVLBAL,TBAL,TCRLMT,TTDUE
 type public String NAM

 type Number ACN

 set ACN=vc2
 
 type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")

 set DAO=cif.dao
 set NAM=cif.nam

 // Zero-out customer totals
 set (DAVLBAL,DBAL,DCRLMT,DTDUE,TAVLBAL,TBAL,TCRLMT,TTDUE)=0

	quit

VP2	// Column pre-processor - [SYSDEV,TMPRPT6]KEY2

	type public String vc4,vc5,vc6,vc7
 type public String vskp()
 if vc4=0 set vskp(4)=1
 if vc5=0 set vskp(5)=1
 if vc6=0 set vskp(6)=1
 if vc7=0 set vskp(7)=1
	quit

VP3	// Column post-processor - [SYSDEV,TMPRPT6]KEY2

	type public String vc3,vc2
 do CIDINFO(vc3,2)

 quit

CIDINFO(Number CID, Number LEVEL)

 type public Number DAVLBAL,DBAL,DCRLMT,DTDUE
 type public Number TAVLBAL,TBAL,TCRLMT,TTDUE

 type Number ACN,BALCMP
 type String COL1,COL2,COL3,COL4,COL5,COL6,COL7
 type String COL8,COL9,COL10,COL11,COL12,COL13

 /* 
  Need to grab ACN from the report instead of from
  the ln record because the primary loan owner may
  not be this customer. 
 */
 set ACN=vc2

 type RecordLN ln=Db.getRecord("LN","CID=:CID")
 type RecordRELCIF relcif=Db.getRecord("RELCIF","ACN=:ACN,CID=:CID",1)

 set COL1="GRP"_LEVEL
 set COL2="TYPE"_LEVEL
 set COL3="RSHP"_LEVEL
 set COL4="DIR"_LEVEL
 set COL5="ODT"_LEVEL
 set COL6="STAT"_LEVEL
 set COL7="REVF"_LEVEL
 set COL8="CRLMT"_LEVEL
 set COL9="BALCMP"_LEVEL
 set COL10="AVLBAL"_LEVEL
 set COL11="DIST1LD"_LEVEL
 set COL12="TDUE"_LEVEL
 set COL13="MDT"_LEVEL

 set @COL1=ln.grp
 set @COL2=ln.type

 if relcif.role.length()=0 do {
	set @COL3="None"
	set @COL4=0
	}
 else  do {
	type Number ACNRELC
	set ACNRELC=ln.acnrelc
	set @COL3=ACNRELC.justify(2,0)_"-"_relcif.role
	type RecordRELCODE relcode=Db.getRecord("RELCODE","REL=:ACNRELC,ROLE=:relcif.role",1)
	if 'relcode.getMode() set @COL4=0
	else  set @COL4=relcode.dl
	}

 set @COL5=ln.odt
 set @COL6=ln.stat
 set @COL7=ln.revf
 set @COL8=ln.crlmt
 
 if 'ln.aruf set BALCMP=ln.bal
 else  set BALCMP=ln.bal-ln.udbal

 set @COL9=BALCMP
 set @COL10=ln.avlbal
 set @COL11=ln.dist1ld
 set @COL12=ln.tdue
 set @COL13=ln.mdt 

 // Add balance fields to customer totals
 if @COL4 do {	// Direct Liability
	set DCRLMT=DCRLMT+@COL8
	
	if 'ln.cpf set DBAL=DBAL+$S(ln.trb:BALCMP,1:-BALCMP)

	set DAVLBAL=DAVLBAL+@COL10
	set DTDUE=DTDUE+@COL12
	}

 set TCRLMT=TCRLMT+@COL8

 if 'ln.cpf set TBAL=TBAL+$S(ln.trb:BALCMP,1:-BALCMP)

 set TAVLBAL=TAVLBAL+@COL10
 set TTDUE=TTDUE+@COL12

 quit
	quit

VP4	// Column pre-processor - [SYSDEV,TMPRPT6]KEY3

	type public String vc5,vc6,vc7
 type public String vskp()
 if vc5=0 set vskp(5)=1
 if vc6=0 set vskp(6)=1
 if vc7=0 set vskp(7)=1
	quit

VP5	// Column post-processor - [SYSDEV,TMPRPT6]KEY3

	type public String vc4
 do CIDINFO(vc4,3)
 
	quit

VP6	// Column pre-processor - [SYSDEV,TMPRPT6]KEY4

	type public String vc6,vc7
 type public String vskp()
 if vc6=0 set vskp(6)=1
 if vc7=0 set vskp(7)=1
	quit

VP7	// Column post-processor - [SYSDEV,TMPRPT6]KEY4

	type public String vc5
 do CIDINFO(vc5,4)
 
	quit

VP8	// Column pre-processor - [SYSDEV,TMPRPT6]KEY5

	type public String vc7
 type public String vskp()
 if vc7=0 set vskp(7)=1
	quit

VP9	// Column post-processor - [SYSDEV,TMPRPT6]KEY5

	type public String vc6
 do CIDINFO(vc6,5)
 
	quit

VP10	// Column post-processor - [SYSDEV,TMPRPT6]KEY6

	type public String vc7
 do CIDINFO(vc7,6)
 
	quit
