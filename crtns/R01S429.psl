R01S429	// SCA469 - Activity Modeling Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:58 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CID,ERRORCNT
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA469"
	set RN="Activity Modeling Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CID,ERRORCNT
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,BEGDATE,BORTOT,CONAM,DESC,ENDDATE,HDG1,HDG2,IAM,LNDTE,LSTDTE,MDLTYP,MSG1,MSG2,RID,RN,SCHEDAMT,SCHEDBAL,SCHEDINT,SCHEDPRN,SUBTOTAL,TOTINT,TYPE,VL,VLOF,VRF(),VSTATS(),amtreq,irn,mdt,odd,sumhead,trm,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA469",RN="Activity Modeling Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA469","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("TMPRPT4.PID,TMPRPT4.KEY1,TMPRPT4.KEY2,TMPRPT4.KEY3,TMPRPT4.KEY4,TMPRPT4.DATA","TMPRPT4","TMPRPT4.PID=:%ProcessID","TMPRPT4.PID,TMPRPT4.KEY1,TMPRPT4.KEY2,TMPRPT4.KEY3,TMPRPT4.KEY4","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6
	set vc1=V.piece($C(9),1)			// TMPRPT4.PID
	set vc2=V.piece($C(9),2)			// TMPRPT4.KEY1
	set vc3=V.piece($C(9),3)			// TMPRPT4.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT4.KEY3
	set vc5=V.piece($C(9),5)			// TMPRPT4.KEY4
	set vc6=V.piece($C(9),6)			// TMPRPT4.DATA
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Date BEGDATE,ENDDATE,odd,mdt
 type public Number amtreq,CID,irn,MDLTYP,SUBTOTAL,TOTINT,trm
 type public String IAM,LSTDTE,TYPE,HDG1,HDG2

 set LSTDTE=""

 type RecordLN ln=Db.getRecord("LN","CID=:CID")

 set MDLTYP=ln.cid
 set BEGDATE=ln.odd         
 set ENDDATE=ln.mdt
 set IAM=ln.iam
 
 set (SUBTOTAL,TOTINT)=""
 set HDG1=""
 set HDG2=""
 
 if 'MDLTYP do ^LNCAL20
 
 set TYPE=ln.type
 set odd=ln.odd
 set mdt=ln.mdt
 set trm=ln.trm
 set amtreq=ln.amtreq
 set irn=ln.irn

	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=CID
 //Incoming=ERRORCNT

 do Db.fastDelete("TMPRPT4","PID=:%ProcessID")
 
	quit

VRPOST	// Report post-processor

 do Db.fastDelete("TMPRPT4","PID=:%ProcessID") 
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),SCHEDINT
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+SCHEDINT		// @TOT(<<SCHEDINT>>)
	quit

VDTL5	// Detail
	type public String %TIM,BEGDATE,BORTOT,CID,DESC,ENDDATE,ERRORCNT,HDG1,HDG2,IAM,IOSL,LNDTE,LSTDTE,MDLTYP,MSG1,MSG2,SCHEDAMT,SCHEDBAL,SCHEDINT,SCHEDPRN,SUBTOTAL,TOTINT,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),amtreq,irn,mdt,odd,sumhead,trm,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(LNDTE),10) set VL=V
	do VP2 quit:VFMQ!verror.get()  set V=$E(DESC,1,35)
	set VL=VL_$J("",12-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(SCHEDAMT,",",2),16)
	set VL=VL_$J("",49-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J($FN(SCHEDINT,",",2),16) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",67-VL.length())_V
	do VP6 quit:VFMQ!verror.get()  set V=$J($FN(SCHEDPRN,",",2),16)
	set VL=VL_$J("",85-VL.length())_V
	do VP7 quit:VFMQ!verror.get()  set V=$J($FN(SCHEDBAL,",",2),16)
	set VL=VL_$J("",103-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BEGDATE,BORTOT,CID,CONAM,DESC,ENDDATE,ERRORCNT,HDG1,HDG2,IAM,LNDTE,LSTDTE,MDLTYP,MSG1,MSG2,RID,RN,SCHEDAMT,SCHEDBAL,SCHEDINT,SCHEDPRN,SUBTOTAL,TOTINT,TYPE,VL,amtreq,irn,mdt,odd,sumhead,trm,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+13,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="Projected Activity Report                                                                             System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Account : "
	set V=$J(CID,12) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",10-VL.length())_V
	do VOM
	set VL="Product : "
	set V=$J(TYPE,4) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",10-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Beginning:"
	set VL=VL_$J("",11-VL.length())_$J($$DAT^%ZM(BEGDATE),10)
	set VL=VL_$J("",64-VL.length())_"Disbursement Date: "
	set VL=VL_$J("",83-VL.length())_$J($$DAT^%ZM(odd),10)
	set VL=VL_$J("",97-VL.length())_"Amount Requested: "
	set VL=VL_$J("",115-VL.length())_$J($FN(amtreq,",",2),16)
	do VOM
	set VL="   "_"Ending: "
	set VL=VL_$J("",11-VL.length())_$J($$DAT^%ZM(ENDDATE),10)
	set VL=VL_$J("",77-VL.length())_"Term: "
	set VL=VL_$J("",83-VL.length())_$E(trm,1,8)
	set VL=VL_$J("",100-VL.length())_"Interest Rate: "
	set VL=VL_$J("",115-VL.length())_$J(irn,8,5)
	do VOM
	set VL="                                                                    "_"Maturity Date:"
	set VL=VL_$J("",83-VL.length())_$J($$DAT^%ZM(mdt),10)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="  "_"Date      Description                                    Amount          Interest         Principal           Balance"
	do VOM
	set VL="=================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,BEGDATE,BORTOT,CID,DESC,ENDDATE,HDG1,HDG2,IAM,LNDTE,LSTDTE,MDLTYP,MSG1,MSG2,SCHEDAMT,SCHEDBAL,SCHEDINT,SCHEDPRN,SUBTOTAL,TOTINT,TYPE,VPN,amtreq,irn,mdt,odd,sumhead,trm,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+9>IOSL do VHDG0 quit:VFMQ

	set VL="=================================================================================================================================="
	do VOM
	set VL="                                                       "_"Total:"
	set V=0						// @TOT(<<SCHEDINT>>,0)
	for I=0:1:5 set V=V+VT(I,1,1)
	do VP10 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),17)
	set VL=VL_$J("",66-VL.length())_V		// @TOT(<<SCHEDINT>>,0)
	do VOM
	set VL="" do VOM
	set VL="                                               "_"Subsidy Total:"
	set VL=VL_$J("",66-VL.length())_$J($FN(SUBTOTAL,",",2),17)
	do VOM
	set VL="                                              "_"Borrower Total:"
	do VP11 quit:VFMQ!verror.get()  set V=$J($FN(BORTOT,",",2),17)
	set VL=VL_$J("",66-VL.length())_V
	do VOM
	set VL="" do VOM
	do VP12 quit:VFMQ!verror.get()  set V=$E(sumhead,1,80) set VL="            "_V
	do VOM
	do VP13 quit:VFMQ!verror.get()  set V=$E(MSG1,1,80) set VL="            "_V
	do VOM
	do VP14 quit:VFMQ!verror.get()  set V=$E(MSG2,1,80) set VL="            "_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: LNDTE

	type public String vc3
 type public Date LNDTE,LSTDTE,LSTDTE1

 set LSTDTE1=vc3

 if LSTDTE=LSTDTE1 set LNDTE=""

 else  set (LSTDTE,LNDTE)=LSTDTE1
	quit

VP2	// Column pre-processor - Variable: DESC

	type public String vc5
 type public String DESC,ETC

 set ETC=vc5

 set DESC=""

 type RecordTRN trn=Db.getRecord("TRN","ETC=:ETC",1)
 
 set DESC=$$TRDESC^LNCAL20(.trn,ETC) 

	quit

VP3	// Column pre-processor - Variable: SCHEDAMT

	type public String vc6
 type public Number SCHEDAMT
 type public String DATA

 set DATA=vc6

 set SCHEDAMT=DATA.piece("|",1)
	quit

VP4	// Column pre-processor - Variable: SCHEDINT

 type public String DATA
 type public Number SCHEDINT

 set SCHEDINT=DATA.piece("|",2)
	quit

VP5	// Column post-processor - Variable: SCHEDINT

 type public Number SCHEDINT,SUBTOTAL
 type public String DATA,SUBFLAG 

 set SUBFLAG=DATA.piece("|",5)

 if SUBFLAG set SUBTOTAL=SUBTOTAL+SCHEDINT
	quit

VP6	// Column pre-processor - Variable: SCHEDPRN

 type public Number SCHEDPRN
 type public String DATA

 set SCHEDPRN=DATA.piece("|",3)
	quit

VP7	// Column pre-processor - Variable: SCHEDBAL

 type public Number SCHEDBAL
 type public String DATA

 set SCHEDBAL=DATA.piece("|",4)
	quit

VP8	// Column post-processor - Variable: CID

 type public Number CID,V,VL

 if (CID.get().isNull())!(CID=999999999999) set (V,VL)=""
	quit

VP9	// Column post-processor - Variable: TYPE

 type public Number TYPE,V,VL

 if (TYPE.get().isNull()) set (V,VL)=""
	quit

VP10	// Column pre-processor - @TOT(<<SCHEDINT>>,0,E,17)

 type public Number TOTINT,V 
 
 set TOTINT=V
	quit

VP11	// Column pre-processor - Variable: BORTOT

 type public Number BORTOT,SUBTOTAL,TOTINT

 set BORTOT=TOTINT-SUBTOTAL
	quit

VP12	// Column pre-processor - Variable: sumhead

 type public Number ERRORCNT
 type public String sumhead

 if 'ERRORCNT set sumhead=""
 // Errors encountered when anticipating transaction activity
 else  set sumhead=$$^MSG(999)

	quit

VP13	// Column pre-processor - Variable: MSG1

 type public Number ERRORCNT
 type public String MSG1,ERRMSG()

 if ERRORCNT.isNull() set MSG1=""

 else  set MSG1=ERRMSG(1).get()
	quit

VP14	// Column pre-processor - Variable: MSG2

 type public String IAM,MSG2

 set MSG2=""

 type RecordLN ln=Db.getRecord("LN","CID=9999999999",1) 

 // This is an add-on or discount loan. Refer to the report document
 if (IAM.get()>0)!(ln.iam>0) set MSG2=$$^MSG(1341)
	quit
