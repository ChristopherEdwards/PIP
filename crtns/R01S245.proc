R01S245	// SCA224 - Loan Sale Daily Transaction Journal
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TEFD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA224"
	set RN="Loan Sale Daily Transaction Journal"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[LNLSDT]EFD|[LNLSDT]EFD:DISTINCT||S TEFD=X||D|Transaction Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TEFD
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,BRCD,CONAM,ESCCOL,ESCRED,ESCWASH,ETC,INCD,INTCOL,INTCOLRED,INTGL,NETESCCNG,NETINTCNG,NETPRNCNG,PIWASH,PL,PRGL,PRNINC,PRNRED,PTD,RID,RN,SFGL,SUBDIS,SUBLSFEE,SUBNETCNG,SUBREC,TOT,TSB,UAPBALCHG,UAPBALINC,UAPBALRED,UDBPRNRED,UID,VL,VLOF,VRF(),VSKIPREC,VSTATS(),WASH,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc5,vovc6,vovc7,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA224",RN="Loan Sale Daily Transaction Journal"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA224","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNLSDT]CID#1#12,[LNLSDT]LSTDUE#98#10,[LNLSDT]BALBEF#108#12,[LNLSDT]ESCBEF#121#12\[LNLS6]INVAC#1#12,[LNLSDT]TSEQ#29#4,[LNLSDT]BALAFT#108#12\[LNLSDT]SRVFEE#87#10"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Transaction Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE=""
		set VWHERE=VWHERE_"LNLSDT.EFD=:VIN1 AND LNLS2.RDTF NOT =1 AND ((LN.PC"
		set VWHERE=VWHERE_"IDSTAT=0) OR (LN.PCIDSTAT=''))"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Sale Daily Transaction Journal"
		set VBNRINFO("PGM")="R01S245"
		set VBNRINFO("RID")="SCA224"
		set VBNRINFO("TABLES")="LNLSDT,LN,LNLS1,LNLS2,LNLS6,LNLS6C"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLSDT]EFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLSDT]INCD"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNLSDT]PL"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLSDT]CID"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNLSDT]TSEQ"

		set VBNRINFO("DOC",1)="This report has not been updated for euro compliance.  It references records in"
		set VBNRINFO("DOC",2)="the Transaction History (HIST) table directly without calling into the History"
		set VBNRINFO("DOC",3)="Record Fetch (UHFETCH) utility.  Therefore the amount fields will display in"
		set VBNRINFO("DOC",4)="the original currency of the account for any transactions that occurred prior"
		set VBNRINFO("DOC",5)="to an account's conversion, and they will display in the euro currency for any"
		set VBNRINFO("DOC",6)="transactions that occurred after the account's conversion."
		set VBNRINFO("DOC",7)=";"
		set VBNRINFO("DOC",8)="If the report is run for a period that crosses over the account's conversion"
		set VBNRINFO("DOC",9)="date, the amount totals will no longer be meaningful, since they will include a"
		set VBNRINFO("DOC",10)="sum of values in both the account's legacy currency and the euro currency.  For"
		set VBNRINFO("DOC",11)="example, if a PTE account is converted on March 10, 2002 to EUR and the report"
		set VBNRINFO("DOC",12)="displays transactions from March 1, 2002 through March 31, 2002, the amount"
		set VBNRINFO("DOC",13)="totals will include an accumulation of values in PTE for any transactions that"
		set VBNRINFO("DOC",14)="occurred up through March 10, 2002 and EUR for transactions that occurred after"
		set VBNRINFO("DOC",15)="March 10, 2002."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:20 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNLSDT.CID,LNLSDT.TSEQ,LNLSDT.SRVFEE,LNLS6C.SUBINV,LNLSDT.EFD,LNLSDT.INCD,LNLSDT.PL,LNLS6C.INVPRNPCT,LNLS6C.INVINTPCT,LNLS6C.INVESCPCT,LNLS2.PP,LNLS2.PICM,LNLS2.ACTGRP,LNLS2.FEEP,LNLS2.SFCM,LNLS2.SVN,LNLS2.PRGL,LNLS2.INTGL,LNLS2.SFGL,LNLS2.WASH,LNLS2.ESCWASH,LNLS1.PIWASH,LNLS1.ESCWASH,LNLSDT.LSTDUE,LNLSDT.BALBEF,LNLSDT.ESCBEF,LNLS6.INVAC,LNLSDT.BALAFT","LNLSDT,LN,LNLS1,LNLS2,LNLS6,LNLS6C","LNLSDT.EFD=:VIN1 AND LNLS2.RDTF NOT =1 AND ((LN.PCIDSTAT=0) OR (LN.PCIDSTAT=''))","LNLSDT.EFD,LNLSDT.INCD,LNLSDT.PL,LNLSDT.CID,LNLSDT.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc5,vovc6,vovc7,vovc1,vovc2
	set vovc5="",vovc6="",vovc7="",vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc1,vc1,vovc2,vc2
	set vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28
	set vc1=V.piece($C(9),1)			// LNLSDT.CID
	set vc2=V.piece($C(9),2)			// LNLSDT.TSEQ
	set vc3=V.piece($C(9),3)			// LNLSDT.SRVFEE
	set vc4=V.piece($C(9),4)			// LNLS6C.SUBINV
	set vc5=V.piece($C(9),5)			// LNLSDT.EFD
	set vc6=V.piece($C(9),6)			// LNLSDT.INCD
	set vc7=V.piece($C(9),7)			// LNLSDT.PL
	set vc8=V.piece($C(9),8)			// LNLS6C.INVPRNPCT
	set vc9=V.piece($C(9),9)			// LNLS6C.INVINTPCT
	set vc10=V.piece($C(9),10)			// LNLS6C.INVESCPCT
	set vc11=V.piece($C(9),11)			// LNLS2.PP
	set vc12=V.piece($C(9),12)			// LNLS2.PICM
	set vc13=V.piece($C(9),13)			// LNLS2.ACTGRP
	set vc14=V.piece($C(9),14)			// LNLS2.FEEP
	set vc15=V.piece($C(9),15)			// LNLS2.SFCM
	set vc16=V.piece($C(9),16)			// LNLS2.SVN
	set vc17=V.piece($C(9),17)			// LNLS2.PRGL
	set vc18=V.piece($C(9),18)			// LNLS2.INTGL
	set vc19=V.piece($C(9),19)			// LNLS2.SFGL
	set vc20=V.piece($C(9),20)			// LNLS2.WASH
	set vc21=V.piece($C(9),21)			// LNLS2.ESCWASH
	set vc22=V.piece($C(9),22)			// LNLS1.PIWASH
	set vc23=V.piece($C(9),23)			// LNLS1.ESCWASH
	set vc24=V.piece($C(9),24)			// LNLSDT.LSTDUE
	set vc25=V.piece($C(9),25)			// LNLSDT.BALBEF
	set vc26=V.piece($C(9),26)			// LNLSDT.ESCBEF
	set vc27=V.piece($C(9),27)			// LNLS6.INVAC
	set vc28=V.piece($C(9),28)			// LNLSDT.BALAFT
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4
 type public Boolean VSKIPREC
 
 type Number CID = vc1
 type Number TSEQ = vc2
 type RecordHIST hist=Db.getRecord("HIST","CID=:CID,TSEQ=:TSEQ",1)
 if 'hist.getMode() set VSKIPREC=1 quit

 if hist.etc.isNull() set VSKIPREC=1 quit
 if hist.itc6=1 set VSKIPREC=1 quit

 type RecordHISTR histr=Db.getRecord("HISTR","CID=:CID,TSEQ=:TSEQ",1)
 if histr.getMode(),(histr.revflg=1) set VSKIPREC=1 quit

 type public Number SUBLSFEE

 type Number SRVFEE = vc3
 type Number SUBINV = vc4

 set SUBLSFEE = SUBINV - SRVFEE

 type public Number ESCCOL,ESCRED,INTCOL,INTCOLRED,NETESCCNG,NETINTCNG
 type public Number NETPRNCNG,PRNINC,PRNRED,SUBDIS,SUBNETCNG,SUBREC
 type public Number UAPBALCHG,UAPBALINC,UAPBALRED,UDBPRNRED
 type String XLNTAMT1

 set XLNTAMT1=$$TAMT^LNCO3(CID,TSEQ)

 set PRNRED=($P(XLNTAMT1,$C(124),1)+$P(XLNTAMT1,$C(124),10))
 set INTCOL=($P(XLNTAMT1,$C(124),3))
 set ESCCOL=($P(XLNTAMT1,$C(124),13))
 set UAPBALINC=($P(XLNTAMT1,$C(124),17))
 set PRNINC=($P(XLNTAMT1,$C(124),2)+$P(XLNTAMT1,$C(124),9))
 set INTCOLRED=($P(XLNTAMT1,$C(124),4))
 set ESCRED=($P(XLNTAMT1,$C(124),14))
 set UAPBALRED=($P(XLNTAMT1,$C(124),18))
 set UDBPRNRED=($P(XLNTAMT1,$C(124),10)) 
 set NETPRNCNG=(PRNRED-PRNINC)
 set NETINTCNG=(INTCOL-INTCOLRED)
 set NETESCCNG=(ESCCOL-ESCRED)
 set SUBREC=(PRNRED+INTCOL+UDBPRNRED)
 set SUBDIS=(PRNINC+INTCOLRED+UDBPRNRED)
 set SUBNETCNG=(NETPRNCNG+NETINTCNG)
 set UAPBALCHG=(UAPBALINC-UAPBALRED)







	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=TEFD
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc5,vovc5,vc6,vovc6,vc7,vovc7,vc1,vovc1,vc2,vovc2
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc5'=vc5) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(vovc6'=vc6) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(vovc7'=vc7) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(+vovc1'=+vc1) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),ESCCOL,ESCRED,INTCOL,INTCOLRED,NETESCCNG,NETINTCNG,NETPRNCNG,PRNINC,PRNRED,SUBDIS,SUBLSFEE,SUBNETCNG,SUBREC,UAPBALCHG,UAPBALINC,UAPBALRED,vc10,vc9,vc8,vc3
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+ESCCOL			// @TOT(<<ESCCOL>>)
	set VT(5,2,1)=VT(5,2,1)+ESCRED			// @TOT(<<ESCRED>>)
	set VT(5,3,1)=VT(5,3,1)+INTCOL			// @TOT(<<INTCOL>>)
	set VT(5,4,1)=VT(5,4,1)+INTCOLRED		// @TOT(<<INTCOLRED>>)
	set VT(5,5,1)=VT(5,5,1)+NETESCCNG		// @TOT(<<NETESCCNG>>)
	set VT(5,6,1)=VT(5,6,1)+NETINTCNG		// @TOT(<<NETINTCNG>>)
	set VT(5,7,1)=VT(5,7,1)+NETPRNCNG		// @TOT(<<NETPRNCNG>>)
	set VT(5,8,1)=VT(5,8,1)+PRNINC			// @TOT(<<PRNINC>>)
	set VT(5,9,1)=VT(5,9,1)+PRNRED			// @TOT(<<PRNRED>>)
	set VT(5,10,1)=VT(5,10,1)+SUBDIS		// @TOT(<<SUBDIS>>)
	set VT(5,11,1)=VT(5,11,1)+SUBLSFEE		// @TOT(<<SUBLSFEE>>)
	set VT(5,12,1)=VT(5,12,1)+SUBNETCNG		// @TOT(<<SUBNETCNG>>)
	set VT(5,13,1)=VT(5,13,1)+SUBREC		// @TOT(<<SUBREC>>)
	set VT(5,14,1)=VT(5,14,1)+UAPBALCHG		// @TOT(<<UAPBALCHG>>)
	set VT(5,15,1)=VT(5,15,1)+UAPBALINC		// @TOT(<<UAPBALINC>>)
	set VT(5,16,1)=VT(5,16,1)+UAPBALRED		// @TOT(<<UAPBALRED>>)
	set VT(5,17,1)=VT(5,17,1)+vc10			// @TOT([LNLS6C]INVESCPCT)
	set VT(5,18,1)=VT(5,18,1)+vc9			// @TOT([LNLS6C]INVINTPCT)
	set VT(5,19,1)=VT(5,19,1)+vc8			// @TOT([LNLS6C]INVPRNPCT)
	set VT(5,20,1)=VT(5,20,1)+vc3			// @TOT([LNLSDT]SRVFEE)
	quit

VSUM3	// Summary
	type public String %TIM,BRCD,ESCCOL,ESCRED,ESCWASH,ETC,I,INCD,INTCOL,INTCOLRED,INTGL,IOSL,NETESCCNG,NETINTCNG,NETPRNCNG,PIWASH,PL,PRGL,PRNINC,PRNRED,PTD,SFGL,SUBDIS,SUBLSFEE,SUBNETCNG,SUBREC,TEFD,TOT,TSB,UAPBALCHG,UAPBALINC,UAPBALRED,UDBPRNRED,UID,V,VFMQ,VL,VLC,VO,VOFFLG,VSKIPREC,VT(),VX(),WASH,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc5,vovc6,vovc7,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="Totals Investor:"
	set VL=VL_$J("",17-VL.length())_$E(vc6,1,8)
	set VL=VL_$J("",32-VL.length())_"Principal:"
	set V=VT(3,9,1)					// @TOT(<<PRNRED>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,8,1)					// @TOT(<<PRNINC>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,7,1)					// @TOT(<<NETPRNCNG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,19,1)				// @TOT([LNLS6C]INVPRNPCT,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                 "_"Interest:"
	set V=VT(3,3,1)					// @TOT(<<INTCOL>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,4,1)					// @TOT(<<INTCOLRED>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,6,1)					// @TOT(<<NETINTCNG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,18,1)				// @TOT([LNLS6C]INVINTPCT,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                              "_"Service Fee:"
	set V=VT(3,20,1)				// @TOT([LNLSDT]SRVFEE,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                 "_"Subtotal:"
	set V=VT(3,13,1)				// @TOT(<<SUBREC>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,10,1)				// @TOT(<<SUBDIS>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,12,1)				// @TOT(<<SUBNETCNG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,11,1)				// @TOT(<<SUBLSFEE>>,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),12)
	set VL=VL_$J("",106-VL.length())_"**"
	set VL=VL_$J("",109-VL.length())_$J(vc22,12)
	set VL=VL_$J("",122-VL.length())_"Deposit"
	do VOM
	set VL="" do VOM
	set VL="                                   "_"Escrow:"
	set V=VT(3,1,1)					// @TOT(<<ESCCOL>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,2,1)					// @TOT(<<ESCRED>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,5,1)					// @TOT(<<NETESCCNG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,17,1)				// @TOT([LNLS6C]INVESCPCT,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",106-VL.length())_"**"
	set VL=VL_$J("",109-VL.length())_$J(vc21,12)
	set VL=VL_$J("",122-VL.length())_"Deposit"
	do VOM
	set VL="                             "_"Unapld Funds:"
	set V=VT(3,15,1)				// @TOT(<<UAPBALINC>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,16,1)				// @TOT(<<UAPBALRED>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,14,1)				// @TOT(<<UAPBALCHG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,14,1)				// @TOT(<<UAPBALCHG>>,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,BRCD,CONAM,ER,ESCCOL,ESCRED,ESCWASH,ETC,INCD,INTCOL,INTCOLRED,INTGL,IOSL,NETESCCNG,NETINTCNG,NETPRNCNG,PIWASH,PL,PRGL,PRNINC,PRNRED,PTD,RID,RN,SFGL,SUBDIS,SUBLSFEE,SUBNETCNG,SUBREC,TEFD,TOT,TSB,UAPBALCHG,UAPBALINC,UAPBALRED,UDBPRNRED,UID,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,VSKIPREC,WASH,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="Investor:"
	set VL=VL_$J("",10-VL.length())_$E(vc6,1,10)
	set VL=VL_$J("",22-VL.length())_"Sale %:"
	set VL=VL_$J("",30-VL.length())_$J(vc11,9,5)
	set VL=VL_$J("",41-VL.length())_"Rem Met:"
	set VL=VL_$J("",50-VL.length())_$J(vc12,12)
	set VL=VL_$J("",64-VL.length())_"Pool ID:"
	set VL=VL_$J("",73-VL.length())_$E(vc13,1,10)
	set VL=VL_$J("",108-VL.length())_"0"
	do VOM
	set VL="    "_"Pool: "
	set VL=VL_$J("",10-VL.length())_$E(vc7,1,10)
	set VL=VL_$J("",23-VL.length())_"Fee %:"
	set VL=VL_$J("",30-VL.length())_$J(vc14,8)
	set VL=VL_$J("",41-VL.length())_"Fee Met:"
	set VL=VL_$J("",50-VL.length())_$E(vc15,1,1)
	set VL=VL_$J("",63-VL.length())_"Servicer:"
	set VL=VL_$J("",73-VL.length())_$E(vc16,1,10)
	do VOM
	set VL="" do VOM
	set VL="Our Account  Branch             Amount  ------ Top: Receipts, Bottom: Disbursements ------        --- Top: Before, Bottom: After ---"
	do VOM
	set VL="Inv Account  Teller Tran     Seq          Principal     Interest       Escrow   Unap Funds   Fee  Pd Through    Balance       Escrow"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,BRCD,ESCCOL,ESCRED,ESCWASH,ETC,I,INCD,INTCOL,INTCOLRED,INTGL,IOSL,NETESCCNG,NETINTCNG,NETPRNCNG,PIWASH,PL,PRGL,PRNINC,PRNRED,PTD,SFGL,SUBDIS,SUBLSFEE,SUBNETCNG,SUBREC,TEFD,TOT,TSB,UAPBALCHG,UAPBALINC,UAPBALRED,UDBPRNRED,UID,V,VFMQ,VL,VLC,VO,VOFFLG,VSKIPREC,VT(),VX(),WASH,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc5,vovc6,vovc7,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+9>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL="Totals Investor:"
	set VL=VL_$J("",17-VL.length())_$E(vc6,1,8)
	set VL=VL_$J("",49-VL.length())_"Receipts"
	set VL=VL_$J("",60-VL.length())_"Disbursements"
	set VL=VL_$J("",79-VL.length())_"Net Change"
	set VL=VL_$J("",97-VL.length())_"Investor"
	set VL=VL_$J("",114-VL.length())_"Account"
	do VOM
	set VL="           "_"Pool:"
	set VL=VL_$J("",17-VL.length())_$E(vc7,1,6)
	set VL=VL_$J("",32-VL.length())_"-----------------------------------------------------------------------------------------"
	do VOM
	set VL="                                "_"Principal:"
	set V=VT(4,9,1)					// @TOT(<<PRNRED>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,8,1)					// @TOT(<<PRNINC>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,7,1)					// @TOT(<<NETPRNCNG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,19,1)				// @TOT([LNLS6C]INVPRNPCT,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",109-VL.length())_$J(vc17,12)
	set VL=VL_$J("",123-VL.length())_"G/L"
	do VOM
	set VL="                                 "_"Interest:"
	set V=VT(4,3,1)					// @TOT(<<INTCOL>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,4,1)					// @TOT(<<INTCOLRED>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,6,1)					// @TOT(<<NETINTCNG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,18,1)				// @TOT([LNLS6C]INVINTPCT,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",109-VL.length())_$J(vc18,12)
	set VL=VL_$J("",123-VL.length())_"G/L"
	do VOM
	set VL="                              "_"Service Fee:"
	set V=VT(4,20,1)				// @TOT([LNLSDT]SRVFEE,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",109-VL.length())_$J(vc19,12)
	set VL=VL_$J("",123-VL.length())_"G/L"
	do VOM
	set VL="                                 "_"Subtotal:"
	set V=VT(4,13,1)				// @TOT(<<SUBREC>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,10,1)				// @TOT(<<SUBDIS>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,12,1)				// @TOT(<<SUBNETCNG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,11,1)				// @TOT(<<SUBLSFEE>>,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",106-VL.length())_"**"
	set VL=VL_$J("",109-VL.length())_$J(vc20,12)
	set VL=VL_$J("",123-VL.length())_"Deposit"
	do VOM
	set VL="" do VOM
	set VL="                                   "_"Escrow:"
	set V=VT(4,1,1)					// @TOT(<<ESCCOL>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,2,1)					// @TOT(<<ESCRED>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,5,1)					// @TOT(<<NETESCCNG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,17,1)				// @TOT([LNLS6C]INVESCPCT,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",106-VL.length())_"**"
	set VL=VL_$J("",109-VL.length())_$J(vc21,12)
	set VL=VL_$J("",123-VL.length())_"Deposit"
	do VOM
	set VL="                             "_"Unapld Funds:"
	set V=VT(4,15,1)				// @TOT(<<UAPBALINC>>,)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,16,1)				// @TOT(<<UAPBALRED>>,)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,14,1)				// @TOT(<<UAPBALCHG>>,)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,14,1)				// @TOT(<<UAPBALCHG>>,)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VDTL5	// Detail
	type public String %TIM,BRCD,ESCCOL,ESCRED,ESCWASH,ETC,INCD,INTCOL,INTCOLRED,INTGL,IOSL,NETESCCNG,NETINTCNG,NETPRNCNG,PIWASH,PL,PRGL,PRNINC,PRNRED,PTD,SFGL,SUBDIS,SUBLSFEE,SUBNETCNG,SUBREC,TEFD,TOT,TSB,UAPBALCHG,UAPBALINC,UAPBALRED,UDBPRNRED,UID,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VSKIPREC,VT(),WASH,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc5,vovc6,vovc7,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL=$E(vc1,1,12)
	do VP1 quit:VFMQ!verror.get()  set V=$E(BRCD,1,6)
	set VL=VL_$J("",13-VL.length())_V
	set VL=VL_$J("",20-VL.length())_$J($FN(TOT,",",2),18)
	set VL=VL_$J("",39-VL.length())_$J($FN(PRNRED,",",2),12)
	set VL=VL_$J("",52-VL.length())_$J($FN(INTCOL,",",2),12)
	set VL=VL_$J("",65-VL.length())_$J($FN(ESCCOL,",",2),12)
	set VL=VL_$J("",78-VL.length())_$J($FN(UAPBALINC,",",2),12)
	set VL=VL_$J("",97-VL.length())_$J($$DAT^%ZM(vc24),10)
	set VL=VL_$J("",108-VL.length())_$J($FN(vc25,",",2),11)
	set VL=VL_$J("",120-VL.length())_$J($FN(vc26,",",2),12)
	do VOM
	set VL=$E(vc27,1,12)
	set VL=VL_$J("",13-VL.length())_$E(UID,1,6)
	set VL=VL_$J("",20-VL.length())_$E(ETC,1,7)
	set V=vc2,VO=V set V=$J(V,4) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",28-VL.length())_V		// [SYSDEV,LNLSDT]TSEQ
	set VL=VL_$J("",39-VL.length())_$J($FN(PRNINC,",",2),12)
	set VL=VL_$J("",52-VL.length())_$J($FN(INTCOLRED,",",2),12)
	set VL=VL_$J("",65-VL.length())_$J($FN(ESCRED,",",2),12)
	set VL=VL_$J("",78-VL.length())_$J($FN(UAPBALRED,",",2),12)
	set VL=VL_$J("",97-VL.length())_$J($$DAT^%ZM(PTD),10)
	set VL=VL_$J("",108-VL.length())_$J($FN(vc28,",",2),11)
	do VOM
	set VL="                                                                                      "_$J($FN(vc3,",",2),10)
	set VL=VL_$J("",114-VL.length())_$J($FN(TSB,",",2),18)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BRCD,CONAM,ESCCOL,ESCRED,ESCWASH,ETC,INCD,INTCOL,INTCOLRED,INTGL,NETESCCNG,NETINTCNG,NETPRNCNG,PIWASH,PL,PRGL,PRNINC,PRNRED,PTD,RID,RN,SFGL,SUBDIS,SUBLSFEE,SUBNETCNG,SUBREC,TEFD,TOT,TSB,UAPBALCHG,UAPBALINC,UAPBALRED,UDBPRNRED,UID,VL,VSKIPREC,WASH,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",99-VL.length())_"Run Date:"
	set VL=VL_$J("",109-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",101-VL.length())_"System:"
	set VL=VL_$J("",109-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="Transactions Dated:  "
	set VL=VL_$J("",21-VL.length())_$J($$DAT^%ZM(TEFD),10)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,BRCD,ESCCOL,ESCRED,ESCWASH,ETC,INCD,INTCOL,INTCOLRED,INTGL,NETESCCNG,NETINTCNG,NETPRNCNG,PIWASH,PL,PRGL,PRNINC,PRNRED,PTD,SFGL,SUBDIS,SUBLSFEE,SUBNETCNG,SUBREC,TEFD,TOT,TSB,UAPBALCHG,UAPBALINC,UAPBALRED,UDBPRNRED,UID,VSKIPREC,WASH,vc17,vc18,vc19,vc20,vc21,vc22,vc6,vc7,vovc1,vovc2,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+11>IOSL do VHDG0 quit:VFMQ

	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	set VL="Report Totals                                    Receipts   Disbursements      Net Change        Investor"
	do VOM
	set VL="                                "_"-------------------------------------------------------------------------"
	do VOM
	set VL="                                "_"Principal:"
	set V=0						// @TOT(<<PRNRED>>,0)
	for I=0:1:5 set V=V+VT(I,9,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<PRNINC>>,0)
	for I=0:1:5 set V=V+VT(I,8,1)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<NETPRNCNG>>,0)
	for I=0:1:5 set V=V+VT(I,7,1)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6C]INVPRNPCT,0)
	for I=0:1:5 set V=V+VT(I,19,1)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                 "_"Interest:"
	set V=0						// @TOT(<<INTCOL>>,0)
	for I=0:1:5 set V=V+VT(I,3,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<INTCOLRED>>,0)
	for I=0:1:5 set V=V+VT(I,4,1)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<NETINTCNG>>,0)
	for I=0:1:5 set V=V+VT(I,6,1)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6C]INVINTPCT,0)
	for I=0:1:5 set V=V+VT(I,18,1)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                              "_"Service Fee:"
	set V=0						// @TOT([LNLSDT]SRVFEE,0)
	for I=0:1:5 set V=V+VT(I,20,1)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="                                 "_"Subtotal:"
	set V=0						// @TOT(<<SUBREC>>,0)
	for I=0:1:5 set V=V+VT(I,13,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<SUBDIS>>,0)
	for I=0:1:5 set V=V+VT(I,10,1)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<SUBNETCNG>>,0)
	for I=0:1:5 set V=V+VT(I,12,1)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<SUBLSFEE>>,0)
	for I=0:1:5 set V=V+VT(I,11,1)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),12)
	set VL=VL_$J("",106-VL.length())_"**"
	do VOM
	set VL="" do VOM
	set VL="                                   "_"Escrow:"
	set V=0						// @TOT(<<ESCCOL>>,0)
	for I=0:1:5 set V=V+VT(I,1,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<ESCRED>>,0)
	for I=0:1:5 set V=V+VT(I,2,1)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<NETESCCNG>>,0)
	for I=0:1:5 set V=V+VT(I,5,1)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6C]INVESCPCT,0)
	for I=0:1:5 set V=V+VT(I,17,1)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	set VL=VL_$J("",106-VL.length())_"**"
	do VOM
	set VL="                             "_"Unapld Funds:"
	set V=0						// @TOT(<<UAPBALINC>>,0)
	for I=0:1:5 set V=V+VT(I,15,1)
	set VL=VL_$J("",43-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<UAPBALRED>>,0)
	for I=0:1:5 set V=V+VT(I,16,1)
	set VL=VL_$J("",59-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<UAPBALCHG>>,0)
	for I=0:1:5 set V=V+VT(I,14,1)
	set VL=VL_$J("",75-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<UAPBALCHG>>,0)
	for I=0:1:5 set V=V+VT(I,14,1)
	set VL=VL_$J("",91-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: BRCD

	type public String vc1,vc2
 type public Date PTD
 type public Number TOT,TSB
 type public String BRCD,ETC,UID

 type Number CID = vc1
 type Number TSEQ = vc2

 type RecordHIST hist=Db.getRecord("HIST","CID=:CID,TSEQ=:TSEQ")

 set BRCD = hist.brcd
 set TOT = hist.tot
 set UID = hist.uid
 set ETC = hist.etc
 set PTD = hist.ptd
 set TSB = hist.tsb
	quit

VP2	// Column post-processor - [SYSDEV,LNLSDT]TSEQ


	quit
