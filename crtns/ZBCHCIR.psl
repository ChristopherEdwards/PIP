ZBCHCIR //Batch ZBCHCIRCULO - Monthly XML to Circulo de Credito
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:09 - joynerd
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - ZBCHCIRCULO Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit quit
 do JOBMGR^BCHUTL(%FN,"ZBCHCIRCULO",.vINPUT)
 do ^JOBMGR(.vINPUT)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(CID) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("ZBCHCIRCULO","*","",CID.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,CID)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("ZBCHCIRCULO","*","",CID.get(),"",et)
 }
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,CID) //
	type Number XCID
	type RecordCIF cif
	type RecordLN ln=Db.getRecord("LN","CID")
	type RecordZCIRCULO zcirculo=Class.new("RecordZCIRCULO")
	type ResultSet rs
	type String record

	set rs=Db.select("ACN","RELCIF","CID=:CID")
	if rs.isEmpty() quit
	while rs.next() do {

		set XACN=rs.getCol(1)
		set cif=Db.getRecord("CIF","XACN")
		if cif.pers quit
		
		// Nombre list
		set zcirculo.cid=CID
		set zcirculo.acn=XACN
		set zcirculo.xml="N"
		set zcirculo.seq=1
		set zcirculo.data=$$escape^UCHTML($$NOMBRE(.cif))
		do zcirculo.bypassSave()		

		// Domicilios List
		set zcirculo.cid=CID
                set zcirculo.acn=XACN
                set zcirculo.xml="D"
                set zcirculo.seq=1
                set zcirculo.data=$$escape^UCHTML($$DOMICIL(.cif))
		do zcirculo.bypassSave()

		// Empleo list
		set zcirculo.cid=CID
                set zcirculo.acn=XACN
                set zcirculo.xml="E"
                set zcirculo.seq=1
                set zcirculo.data=$$escape^UCHTML($$EMPLEO(.cif))
		do zcirculo.bypassSave()

		// Cuenta list
		set zcirculo.cid=CID
                set zcirculo.acn=XACN
                set zcirculo.xml="C"
                set zcirculo.seq=1
                set zcirculo.data=$$escape^UCHTML($$CUENTA(.ln))
		do zcirculo.bypassSave()
	}

	quit

NOMBRE(RecordCIF cif)	//

	type String MAR,MMNAME,OWN,record

	set record=cif.lnm_t			// ApellidoPaterno
	set MMNAME=cif.mmname
	if MMNAME="" set MMNAME="No proporcionado"
	set record=record_MMNAME_t			// ApellidoMaterno
	set record=record_t				// ApellidoAdicional
	set record=record_cif.fname_" "_cif.mname_t	// Nombres
	set record=record_cif.dob.toString(MASK)_t	// FechaNacimiento
	set record=record_cif.taxid_t			// RFC
	set record=record_cif.oin_t			// CURP
	set record=record_cif.nation_t			// Nacionalidad
	set OWN=cif.own
	set OWN=$SELECT(OWN="O":1,OWN="R":2,1:3)
	set record=record_OWN_t				// Residencia
	set record=record_cif.dlnum_t			// NumeroLicenciaConducir
	set MAR=cif.mar
	if MAR'="D",MAR'="S" set MAR=$SELECT(MAR="M":"C",MAR="W":"V",MAR="SP":"E",1:"")
	set record=record_MAR_t				// EstadoCivil
	set record=record_cif.sex_t			// Sexo
	set record=record_t				// ClaveElectorIFE
	set record=record_cif.dep_t			// NumeroDependientes
	set record=record_cif.dod.toString(MASK)_t	// FechaDefuncion
	set record=record_t				// IndicadorDefuncion
	set record=record_$SELECT(cif.pers=0:"PF",1:"")_t // TipoPersona

	quit record


DOMICIL(RecordCIF cif)	//

	type String record

	set record=cif.pad1_" "_cif.pad2.extract(1,39)_t // Direccion
	set record=record_cif.pad4_t		// ColoniaPoblacion
	set record=record_cif.pcounty_t		// DelegacionMunicipio
	set record=record_cif.pcity_t		// Ciudad
	set record=record_STATE(cif.pstate).get()_t	// Estado
	set record=record_cif.pzip_t		// CP
	set record=record_t			// FechaResidencia
	set record=record_cif.hph.translate("-() ","")_t	// NumeroTelefono
	set record=record_t			// TipoDomicilio
	set record=record_t			// TipoAsentamiento

	quit record


EMPLEO(RecordCIF cif)	//

	type String EMPNAME,record

	set EMPNAME=cif.empname
	if EMPNAME="" set EMPNAME="No proporcionado"
	set record=EMPNAME_t			// NombreEmpresa
	set record=record_cif.empad1_" "_cif.empad2.extract(1,39)_t	// Direccion
	set record=record_cif.empad3_t			// ColoniaPoblacion
	set record=record_cif.empcnty_t			// DelegacionMunicipio
	set record=record_cif.empcity_t		// Ciudad
	set record=record_STATE(cif.empstate).get()_t	// Estado
	set record=record_cif.empzip_t		// CP
	set record=record_cif.bph.translate("-() ","")_t	// NumeroTelefono
	set record=record_cif.bphext_t		// Extension
	set record=record_cif.faxnum.translate("-() ","")_t // Fax
	set record=record_t			// Puesto
	set record=record_t			// FechaContratacion
	set record=record_t			// ClaveMoneda
	set record=record_t			// SalarioMensual
	set record=record_t			// FechaUltimoDiaEmpleo
	set record=record_cif.empverdt.toString(MASK) // FechaVerificacionEmpleo

	quit record

CUENTA(RecordLN ln)	//

	type Date ODT
	type String AF,CRCD,DEL,record,RELCODE,TYPE
	
	set CRCD="MX"
	set RELCODE="O"
	set TYPE="F"
	set record=GRANTCD_t				// ClaveActualOtorgante
	set record=record_GRANTNM_t			// NombreOtorgante
	set record=record_ln.cid_t			// CuentaActual
	if ln.acnrelc="1" set RELCODE="I"
	set record=record_RELCODE_t			// *TipoResponsabilidad
	if ln.revf set TYPE="R"
	set record=record_TYPE_t			// *TipoCuenta
	set record=record_CBC(ln.cbc).get()_t		// *TipoContrato
	if ln.crcd="USD" set CRCD="US"
	set record=record_CRCD_t			// *ClaveUnidadMonetaria
	set record=record_t				// ValorActivoValuacion
	set record=record_$SELECT(TYPE="F":ln.onp,1:"")_t // NumeroPagos
	set AF=ln.dist1af
	set record=record_$SELECT(AF=12:"M",AF=26:"Q",1:"S")_t // *FrecuenciaPagos
	set record=record_$SELECT(TYPE="F":ln.pmtpi.roundDec(0),1:"")_t // MontoPagar
	set ODT=$SELECT(TYPE="F":ln.odt,1:ln.odd)
	set record=record_ODT.toString(MASK)_t		// FechaAperturaCuenta
	set record=record_ln.lpdt.toString(MASK)_t	// FechaUltimoPago
	set ODT=$SELECT(TYPE="F":ln.odd,1:ln.ladt)
	set record=record_ODT.toString(MASK)_t		// FechaUltimaCompra
	set record=record_ln.dtc.toString(MASK)_t	// FechaCierreCuenta
	set record=record_ln.schld.toString(MASK)_t	// FechaCorte
	set record=record_t				// Garantia *
	set record=record_ln.crlmt_t			// *CreditoMaximo
	set record=record_ln.bal.roundDec(0)_t		// SaldoActual
	set record=record_ln.crlmt_t			// LimiteCredito
	set record=record_ln.gtdue.roundDec(0)_t	// SaldoVencido
	set DEL=ln.pmtdel
	set record=record_DEL_t				// NumeroPagosVencidos
	if DEL'>0 set DEL="V"
	else  if DEL>0,DEL<10 set DEL="0"_DEL
	else  if DEL>83 set DEL=84
	set record=record_DEL_t				// *PagoActual
	set record=record_t				// *HistoricoPagos
	set record=record_t				// *ClavePrevencion
	set record=record_ln.cntcr_t			// TotalPagosReportados
	set record=record_t				// *ClaveAnteriorOtorgante
	set record=record_t				// NombreAnteriorOtorgante
	set record=record_t				// NumeroCuentaAnterior

	quit record


BUILD(maintag,list,data)    //
 
 	type String i,tag

        set ret="<"_maintag_">"
        for i=1:1:list.length(",") do {
		set tag=list.piece(",",i)
                set ret=ret_"<"_tag_">"
                set ret=ret_data.piece($c(9),i)
		set ret=ret_"</"_tag_">"
	}
	set ret=ret_"</"_maintag_">"

	quit ret

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,CID
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set CID=vRECORD.piece($C(9),1)
 do vPROC(CID)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,CID
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+13>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
	type RecordUTBLEXTINT utblextint
	type String %READ,%TAB,XINT,VFMQ
	
	set XTJD1=%SystemDate-8
	set XTJD2=%SystemDate-1
	set %TAB("XTJD1")=".BJD2/REQ"
	set %TAB("XTJD2")=".ENDT1/REQ"
	set %READ="@%FN/REV/CEN,,XTJD1,XTJD2"
	do ^UTLREAD
	if VFMQ="Q" set %BatchExit=1 quit
	
	set XINT="CIRCULO"
	set utblextint=Db.getRecord("UTBLEXTINT","INTRFACE=:XINT")
	set GRANTCD=utblextint.misc1			// ClaveOtorgante
	set GRANTNM=utblextint.misc2			// NombreOtorgante

 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("CID","LN","SCHND BETWEEN :XTJD1 AND :XTJD2")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	// build state array to eliminate disk reads
	type ResultSet rs3,rs4
	
	set rs3=Db.select("STATE,ASTATE","STBLCNTRY1","CNTRY='MX'")
	if 'rs3.isEmpty() while rs3.next() set STATE(rs3.getCol(1))=rs3.getCol(2)
	
	set rs4=Db.select("CBC,ZCBC","ZUTBLCBC")
	if 'rs4.isEmpty() while rs4.next() set CBC(rs4.getCol(1))=rs4.getCol(2) 
	
	set t=$C(9)
	set MASK="YEARMMDD"
	

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
	type IO io=Class.new("IO")
	type Number MEANS,TBAL,TDUE,TXML,XACN,XCID,XXML
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	type RecordZCIRCULO zcirculo
	type ResultSet rs1,rs2
	type String ccl,cl,dl,el,enl,nl,return,t
	type String CCDATA,COADDR,COMMENTS,DATA,ENDDATA,EXTDATE,XML

	set t=$C(9)	
	set (TBAL,TDUE,TXML)=0

	set io.fileName="CIRCULO.XML"
	set io.recordSize=5000
	set io.openParams="NEWV/WRITE"
	do io.open()

	// Nombre list
	set nl="ApellidoPaterno,ApellidoMaterno,ApellidoAdicional,Nombres,"
        set nl=nl_"FechaNacimiento,RFC,CURP,Nacionalidad,Residencia,"
        set nl=nl_"NumeroLicenciaConducir,EstadoCivil,Sexo,"
        set nl=nl_"ClaveElectorIFE,NumeroDependientes,FechaDefuncion,"
        set nl=nl_"IndicadorDefuncion,TipoPersona"

	// Domicilios List
	set dl="Direccion,ColoniaPoblacion,DelegacionMunicipio,Ciudad,Estado,"
	set dl=dl_"CP,FechaResidencia,NumeroTelefono,TipoDomicilio,"
	set dl=dl_"TipoAsentamiento"

	// Empleo list
	set el="NombreEmpresa,Direccion,ColoniaPoblacion,DelegacionMunicipio,"
	set el=el_"Ciudad,Estado,CP,NumeroTelefono,Extension,Fax,Puesto,"
	set el=el_"FechaContratacion,ClaveMoneda,SalarioMensual,"
	set el=el_"FechaUltimoDiaEmpleo,FechaVerificacionEmpleo"

	// Cuenta list
	set cl="ClaveActualOtorgante,NombreOtorgante,CuentaActual,"
	set cl=cl_"TipoResponsabilidad,TipoCuenta,TipoContrato,"
	set cl=cl_"ClaveUnidadMonetaria,ValorActivoValuacion,NumeroPagos,"
	set cl=cl_"FrecuenciaPagos,MontoPagar,FechaAperturaCuenta,"
	set cl=cl_"FechaUltimoPago,FechaUltimaCompra,FechaCierreCuenta,"
	set cl=cl_"FechaCorte,Garantia,CreditoMaximo,SaldoActual,"
	set cl=cl_"LimiteCredito,SaldoVencido,NumeroPagosVencidos,PagoActual,"
	set cl=cl_"HistoricoPagos,ClavePrevencion,TotalPagosReportados,"
	set cl=cl_"ClaveAnteriorOtorgante,NombreAnteriorOtorgante,"
	set cl=cl_"NumeroCuentaAnterior"

	set XML="<?xml version=""1.0"" encoding=""ISO-8859-1""?>"
	do io.write(.XML)

	set XML="<Carga xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""/Carga.xsd"">"
	do io.write(.XML)
	
	// Encabezado list
	set enl="ClaveOtorgante,NombreOtorgante,IdentificadorDeMedio,"
	set enl=enl_"FechaExtraccion,NotaOtorgante"

	set MEANS=1					// IdentificadorDeMedio
	set EXTDATE=%SystemDate.toString("YEARMMDD")	// FechaExtraccion
	set COMMENTS=""					// NotaOtorgante
	set ENDDATA=GRANTCD_t_GRANTNM_t_MEANS_t_EXTDATE_t_COMMENTS

	set XML=$$BUILD("Encabezado",enl,ENDDATA)
	do io.write(.XML)

	set XML="<Personas>"
	do io.write(.XML)

	// Collate through ZCIRCULO table
	set rs1=Db.select("DISTINCT CID","ZCIRCULO")
	if 'rs1.isEmpty() while rs1.next() do {
		set XCID=rs1.getCol(1)
		
		set rs2=Db.select("DISTINCT ACN","ZCIRCULO","CID=:XCID")
		if 'rs2.isEmpty() while rs2.next() do {
			set XACN=rs2.getCol(1)
			
			set XML="<Persona>"
                	do io.write(.XML)

			for XXML="N","D","E","C" do {
				if 'Db.isDefined("ZCIRCULO","XCID,XACN,XXML,1") quit
				set zcirculo=Db.getRecord("ZCIRCULO","XCID,XACN,XXML,1")
				set DATA=zcirculo.data
				if XXML="N" set return=$$BUILD("Nombre",nl,DATA)
        			else  if XXML="D" do {
					set return="<Domicilios>" 
					set return=return_$$BUILD("Domicilio",dl,DATA)
					set return=return_"</Domicilios>"
				}
				else  if XXML="E" do {
					set return="<Empleos>" 
					set return=return_$$BUILD("Empleo",el,DATA)
					set return=return_"</Empleos>"
				}
				else  do {
					set return=$$BUILD("Cuenta",cl,DATA)
					set TDUE=TDUE+DATA.piece(t,11)
                                        set TBAL=TBAL+DATA.piece(t,19)
				}
				do io.write(.return)				

			}
			set XML="</Persona>"
			set TXML=TXML+1
                	do io.write(.XML)
		}
	}

	set XML="</Personas>"
        do io.write(.XML)	

	// CitrasControl list
	set ccl="TotalSaldosActuales,TotalSaldosVencidos,TotalElementosNombreReportados,"
	set ccl=ccl_"TotalElementosDireccionReportados,TotalElementosEmpleoReportados,"
	set ccl=ccl_"TotalElementosCuentaReportados,NombreOtorgante,"
	set ccl=ccl_"DomicilioDevolucion"	

	set COADDR=cuvar.cad1_" "_cuvar.cad2_" "_cuvar.cad3_" "_cuvar.ccity_" "_cuvar.cstate
	set COADDR=COADDR_" "_cuvar.ccntry_" "_cuvar.czip
	set CCDATA=TDUE_t_TBAL_t_TXML_t_TXML_t_TXML_t_TXML_t_cuvar.cname_t_COADDR
	set return=$$BUILD("CifrasControl",ccl,CCDATA)
        do io.write(.return)

	set XML="</Carga>"
	do io.write(.XML)

	do io.close()
	do Db.fastDelete("ZCIRCULO")

	quit

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
