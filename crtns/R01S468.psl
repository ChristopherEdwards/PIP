R01S468	// SCA518 - Provision Amounts Detail (By Category)
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:59 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"

	set RID="SCA518"
	set RN="Provision Amounts Detail (By Category)"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[ACN]CC|[UTBLCCNTR]:NOVAL||D EXT^DBSQRY||T|Cost Center|||||"
	set %TAB("VIN2")="|255||[ACN]CLS|[STBLCLS]:NOVAL||S CLS=X D EXT^DBSQRY||T|Product Class|||||"
	set %TAB("VIN3")="|255||[ACN]PROVCAT|[UTBLACC]:NOVAL||S PROVCAT=X D EXT^DBSQRY||T|Provision Category|||||"
	set %TAB("VIN4")="|255||[ACN]GRP|[STBLGRP]:NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN5")="|255||[ACN]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN6")="|255||[ACN]CRCD|[CRCD]:NOVAL||D EXT^DBSQRY||T|Currency Code|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5,VIN6
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,COLOFC,CONAM,DAYSDELQ,DESC,PROVPCT,RID,RN,VL,VLOF,VRF(),VSTATS(),XCRCD,vCOL,vHDG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA518",RN="Provision Amounts Detail (By Category)"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA518","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[ACN]CID#3#12,[ACN]TYPE#19#4,[ACN]BAL#36#12,[ACN]CRCD#51#3,[ACN]PROVBAL#58#12,[ACN]PROVEXPD#95#10"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[ACN]CC "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[ACN]CLS "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[ACN]PROVCAT "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[ACN]GRP "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[ACN]TYPE "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[ACN]CRCD "_VIN6,SEQ=SEQ+1
		set DQQRY(SEQ)="[ACN]PROVCAT+0'=0",SEQ=SEQ+1
		set DQQRY(SEQ)="([ACN]PCIDSTAT=0)!([ACN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("ACN,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Cost Center"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Class"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Provision Category"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Product Group"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Product Type"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Currency Code"_"|VIN6|"_VIN6.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Provision Amounts Detail (By Category)"
		set VBNRINFO("PGM")="R01S468"
		set VBNRINFO("RID")="SCA518"
		set VBNRINFO("TABLES")="ACN,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ACN]CC"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,ACN]CLS"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ACN]PROVCAT"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,ACN]CRCD"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,ACN]TYPE"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,ACN]CID"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,ACN]BOO"

		set VBNRINFO("DOC",1)="This report is used to provide detailed Provision amounts by cost "
		set VBNRINFO("DOC",2)="center and asset classification (i.e. sub-standard, doubtful, lost, "
		set VBNRINFO("DOC",3)="etc.) with sub-totals by currency code."
		set VBNRINFO("DOC",4)=""
		set VBNRINFO("DOC",5)="/*"
		set VBNRINFO("DOC",6)="   ---------- Revision History --------------------------------------------"
		set VBNRINFO("DOC",7)=""
		set VBNRINFO("DOC",8)="     03/29/07 - SWARNALP - CR24947"
		set VBNRINFO("DOC",9)="                Created post processor for the subtotal column to "
		set VBNRINFO("DOC",10)="		reinitialize variables PROVCAT and CLS with null so that "
		set VBNRINFO("DOC",11)="		the new values will be fetched from ACN record when the "
		set VBNRINFO("DOC",12)="		provision category or class changes, as per the condition "
		set VBNRINFO("DOC",13)="		check written in pre processor for DESC. This will enable "
		set VBNRINFO("DOC",14)="		the system to display the asset class description "
		set VBNRINFO("DOC",15)="		appropriately."
		set VBNRINFO("DOC",16)=""
		set VBNRINFO("DOC",17)="   ------------------------------------------------------------------------"
		set VBNRINFO("DOC",18)="*/"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"ACN.CC,ACN.CLS,ACN.PROVCAT,ACN.CRCD,ACN.TYPE,ACN.C"
	set VSELECT=VSELECT_"ID,ACN.BOO,ACN.BAL,ACN.PROVBAL,ACN.PROVEXPD,LN.COL"
	set VSELECT=VSELECT_"OFF,LN.DIST1ND"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"ACN,LN",VWHERE,"ACN.CC,ACN.CLS,ACN.PROVCAT,ACN.CRCD,ACN.TYPE,ACN.CID,ACN.BOO","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12
	set vc1=V.piece($C(9),1)			// ACN.CC
	set vc2=V.piece($C(9),2)			// ACN.CLS
	set vc3=V.piece($C(9),3)			// ACN.PROVCAT
	set vc4=V.piece($C(9),4)			// ACN.CRCD
	set vc5=V.piece($C(9),5)			// ACN.TYPE
	set vc6=V.piece($C(9),6)			// ACN.CID
	set vc7=V.piece($C(9),7)			// ACN.BOO
	set vc8=V.piece($C(9),8)			// ACN.BAL
	set vc9=V.piece($C(9),9)			// ACN.PROVBAL
	set vc10=V.piece($C(9),10)			// ACN.PROVEXPD
	set vc11=V.piece($C(9),11)			// LN.COLOFF
	set vc12=V.piece($C(9),12)			// LN.DIST1ND
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1
	if vb6!(+vovc6'=+vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc9
	type Public String VSTATS

	set VT(7)=VT(7)+1
	set VT(7,2,1)=VT(7,2,1)+vc9			// @TOT([ACN]PROVBAL)
	quit

VSUM5	// Summary
	type public String %TIM,COLOFC,DAYSDELQ,DESC,I,IOSL,PROVPCT,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),XCRCD,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                               "_"Currency Code"
	set VL=VL_$J("",45-VL.length())_$E(XCRCD,1,3)
	set VL=VL_$J("",49-VL.length())_"Totals:"
	set V=VT(5,2,1)					// @TOT([ACN]PROVBAL,)
	set V=$J($FN(V,",",2),12) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",57-VL.length())_V		// @TOT([ACN]PROVBAL,)
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,COLOFC,DAYSDELQ,DESC,IOSL,PROVPCT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),XCRCD,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "_$J(vc6,12)
	set VL=VL_$J("",18-VL.length())_$J(vc5,4)
	do VP2 quit:VFMQ!verror.get()  set V=$J(COLOFC,4)
	set VL=VL_$J("",28-VL.length())_V
	set VL=VL_$J("",35-VL.length())_$S(vc8="":"",1:$J(vc8,0,2))
	set VL=VL_$J("",50-VL.length())_$E(vc4,1,3)
	set VL=VL_$J("",57-VL.length())_$S(vc9="":"",1:$J(vc9,0,2))
	do VP3 quit:VFMQ!verror.get()  set V=$J(PROVPCT,9,5)
	set VL=VL_$J("",73-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J(DAYSDELQ,4)
	set VL=VL_$J("",86-VL.length())_V
	set V=vc10,VO=V set V=$J($$DAT^%ZM(V),10) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",94-VL.length())_V		// [SYSDEV,ACN]PROVEXPD
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,COLOFC,CONAM,DAYSDELQ,DESC,PROVPCT,RID,RN,VL,XCRCD,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+13,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Cost Center: "
	set VL=VL_$J("",13-VL.length())_$J(vc1,6)
	do VOM
	set VL="" do VOM
	set VL="     "_"Provision Category:"
	set VL=VL_$J("",25-VL.length())_$J(vc3,3)
	do VP6 quit:VFMQ!verror.get()  set V=$E(DESC,1,40)
	set VL=VL_$J("",31-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="          "_"Class: "
	set V=$$VP7(vc2)				// @TBL([ACN]CLS)
	set VL=VL_$J("",17-VL.length())_$E(V,1,20)
	do VOM
	set VL="" do VOM
	set VL="       "_"Account    Prod   Collect        Account   Curr      Provision    Provision    Days    Expiration"
	do VOM
	set VL="        "_"Number    Type   Officer        Balance   Code        Balance      Percent   Delin          Date"
	do VOM
	set VL="=================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - @TOT([ACN]PROVBAL,,E,12)

 type public String CLS,PROVCAT

 set PROVCAT=""
 set CLS=""

	quit

VP2	// Column pre-processor - Variable: COLOFC

	type public String vc2,vc11
  /*
  ---- Revision History ------------------------------------------------
 
	04/18/05 - TITOVE - CR 15089
                   Converted to PSL.
 */

 type public String COLOFC

 // Collection Officer
 if vc2 = "L" set COLOFC = vc11
 else  set COLOFC = ""
	quit

VP3	// Column pre-processor - Variable: PROVPCT

	type public String vc3,vc9,vc6
 /*
  ---- Revision History ------------------------------------------------
 
        03/16/06 - TITOVE - CR 20174
                   Modified to work for both loans and deposits.
 
 */
 
 type public Number PROVPCT
 
 set PROVPCT = $$PROVPCT^LNCDI(vc3,vc9,vc6)
	quit

VP4	// Column pre-processor - Variable: DAYSDELQ

	type public String vc12,vc2
  /*
  ---- Revision History ------------------------------------------------
 
        04/18/05 - TITOVE - CR 15089
                   Converted to PSL.
 */

 type public Number DAYSDELQ

 if vc12.isNull() set DAYSDELQ = "" quit

 if vc2 = "L" set DAYSDELQ = %SystemDate - vc12
 else  set DAYSDELQ = ""

 if (DAYSDELQ < 0) set DAYSDELQ = 0
	quit

VP5	// Column post-processor - [SYSDEV,ACN]PROVEXPD

	type public String vc4
 type public String XCRCD
 set XCRCD = vc4
	quit

VP6	// Column pre-processor - Variable: DESC

	type public String vc3,vc2
 /*
  ---- Revision History ------------------------------------------------
 
	04/18/05 - TITOVE - CR 15089
                   Converted into PSL.

 */
 
 type public String CLS, DESC, PROVCAT

 if 'PROVCAT set PROVCAT = vc3
 if 'CLS set CLS = vc2

 if CLS.isNull() ! PROVCAT.isNull() set DESC = "" quit

 type RecordUTBLACC utblacc = Db.getRecord("UTBLACC", "CLS = :CLS, AC = :PROVCAT", 1)

 if 'utblacc.getMode() set DESC = "" quit

 set DESC = utblacc.desc
	quit

VP7(KEY1)	// @TBL([ACN]CLS)

	if KEY1="" quit ""
	type Public Cache %CACHE()
	type RecordSTBLCLS tbl=%CACHE("STBLCLS").getRecord("STBLCLS","CLS=:KEY1")
	quit tbl.DES
