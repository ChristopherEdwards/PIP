V00S315(%ProcessMode,RecordLNPOPT fLNPOPT)   // -  - SID= <LNPOPT1> Loan Late Charge Methods - Page 1
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:37 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNPOPT1",VPGM=$T(+0),VSNAME="Loan Late Charge Methods - Page 1"
 set VFSN("LNPOPT")="zfLNPOPT"
 set vPSL=1
 set KEYS(1)=fLNPOPT.GRP
 set KEYS(2)=fLNPOPT.POPT
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fLNPOPT),VDA1(.fLNPOPT),^DBSPNT()

 if '%ProcessMode do VNEW(.fLNPOPT),VPR(.fLNPOPT),VDA1(.fLNPOPT)
 if %ProcessMode do VLOD(.fLNPOPT) quit:$G(ER)  do VPR(.fLNPOPT),VDA1(.fLNPOPT)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fLNPOPT)
	quit


VNEW(RecordLNPOPT fLNPOPT) // Initialize arrays if %O=0
 
 do VDEF(.fLNPOPT)
 do VLOD(.fLNPOPT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordLNPOPT fLNPOPT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordLNPOPT fLNPOPT) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNPOPT fLNPOPT) // Display screen prompts
 set VO="20||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,9,15,0,0,0,0,0,0,0)_"01T         Group:"
 set VO(2)=$C(1,45,14,0,0,0,0,0,0,0)_"01TCharge Method:"
 set VO(3)=$C(4,22,36,1,0,0,0,0,0,0)_"01T Loan Late Charge Method Definition "
 set VO(4)=$C(7,11,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(5)=$C(9,4,20,1,0,0,0,0,0,0)_"01T Calculation Option:"
 set VO(6)=$C(9,46,18,0,0,0,0,0,0,0)_"01TDaily Calculation:"
 set VO(7)=$C(10,5,19,0,0,0,0,0,0,0)_"01TPercentage of Base:"
 set VO(8)=$C(10,42,22,0,0,0,0,0,0,0)_"01TGrace Period Catch-Up:"
 set VO(9)=$C(11,3,21,0,0,0,0,0,0,0)_"01TSummary Posting Only:"
 set VO(10)=$C(11,41,23,0,0,0,0,0,0,0)_"01TBase Comparison Option:"
 set VO(11)=$C(13,4,20,1,0,0,0,0,0,0)_"01T Calculation Base 1:"
 set VO(12)=$C(13,44,20,0,0,0,0,0,0,0)_"01T Calculation Base 2:"
 set VO(13)=$C(14,4,20,0,0,0,0,0,0,0)_"01T Calculation Base 3:"
 set VO(14)=$C(14,44,20,0,0,0,0,0,0,0)_"01T Calculation Base 4:"
 set VO(15)=$C(15,4,20,0,0,0,0,0,0,0)_"01T Calculation Base 5:"
 set VO(16)=$C(15,44,20,0,0,0,0,0,0,0)_"01T Calculation Base 6:"
 set VO(17)=$C(17,9,15,0,0,0,0,0,0,0)_"01TMinimum Charge:"
 set VO(18)=$C(17,49,15,0,0,0,0,0,0,0)_"01TMinimum Option:"
 set VO(19)=$C(18,9,15,0,0,0,0,0,0,0)_"01TMaximum Charge:"
 set VO(20)=$C(18,44,20,0,0,0,0,0,0,0)_"01TConsider at Payment:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordLNPOPT fLNPOPT)  // Display screen data
 new V
 //
 set VO="39|21|13|"
 set VO(21)=$C(1,25,5,2,0,0,0,0,0,0)_"01T"_$E(fLNPOPT.GRP,1,5)
 set VO(22)=$C(1,60,6,2,0,0,0,0,0,0)_"01T"_$E(fLNPOPT.POPT,1,6)
 set VO(23)=$C(7,25,25,2,0,0,0,0,0,0)_"00T"_$E(fLNPOPT.DESC,1,25)
 set VO(24)=$C(9,25,1,2,0,0,0,0,0,0)_"00N"_fLNPOPT.MET
 set VO(25)=$C(9,65,1,2,0,0,0,0,0,0)_"00L"_$S(fLNPOPT.CDF:"Y",1:"N")
 set V=$S(fLNPOPT.PCT="":"",1:$J(fLNPOPT.PCT,0,5)) set VO(26)=$C(10,25,8,2,0,0,0,0,0,0)_"00N"_$S(fLNPOPT.PCT="":"",1:$J(fLNPOPT.PCT,0,5))
 set VO(27)=$C(10,65,1,2,0,0,0,0,0,0)_"00L"_$S(fLNPOPT.GPCU:"Y",1:"N")
 set VO(28)=$C(11,25,1,2,0,0,0,0,0,0)_"00L"_$S(fLNPOPT.SUMM:"Y",1:"N")
 set VO(29)=$C(11,65,1,2,0,0,0,0,0,0)_"00T"_$E(fLNPOPT.COMP,1,1)
 set VO(30)=$C(13,25,1,2,0,0,0,0,0,0)_"00N"_fLNPOPT.BASE1
 set VO(31)=$C(13,65,1,2,0,0,0,0,0,0)_"00N"_fLNPOPT.BASE2
 set VO(32)=$C(14,25,1,2,0,0,0,0,0,0)_"00N"_fLNPOPT.BASE3
 set VO(33)=$C(14,65,1,2,0,0,0,0,0,0)_"00N"_fLNPOPT.BASE4
 set VO(34)=$C(15,25,1,2,0,0,0,0,0,0)_"00N"_fLNPOPT.BASE5
 set VO(35)=$C(15,65,1,2,0,0,0,0,0,0)_"00N"_fLNPOPT.BASE6
 set V=$S(fLNPOPT.MINLC="":"",1:$J(fLNPOPT.MINLC,0,2)) set VO(36)=$C(17,25,18,2,0,0,0,0,0,0)_"00$"_$S(fLNPOPT.MINLC="":"",1:$J(fLNPOPT.MINLC,0,2))
 set VO(37)=$C(17,65,1,2,0,0,0,0,0,0)_"00T"_$E(fLNPOPT.MLCO,1,1)
 set V=$S(fLNPOPT.MAXLC="":"",1:$J(fLNPOPT.MAXLC,0,2)) set VO(38)=$C(18,25,18,2,0,0,0,0,0,0)_"00$"_$S(fLNPOPT.MAXLC="":"",1:$J(fLNPOPT.MAXLC,0,2))
 set VO(39)=$C(18,65,1,2,0,0,0,0,0,0)_"00L"_$S(fLNPOPT.MMCOL:"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordLNPOPT fLNPOPT)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=19,VPT=1,VPB=18,PGM=$T(+0),DLIB="SYSDEV",DFID="LNPOPT"
 set OLNTB=18065
 
 set VFSN("LNPOPT")="zfLNPOPT"
 //
 // 
	
	
 set %TAB(1)=$C(0,24,5)_"20T12401|1|[LNPOPT]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""L"""""""
 set %TAB(2)=$C(0,59,6)_"21T12402|1|[LNPOPT]POPT|[LNPOPT]"
 set %TAB(3)=$C(6,24,25)_"01T12401|1|[LNPOPT]DESC"
 set %TAB(4)=$C(8,24,1)_"01N12402|1|[LNPOPT]MET|[STBLPOM]||do VP1^V00S315(.fLNPOPT)"
 set %TAB(5)=$C(8,64,1)_"00L12414|1|[LNPOPT]CDF"
 set %TAB(6)=$C(9,24,8)_"00N12410|1|[LNPOPT]PCT|||||||5"
 set %TAB(7)=$C(9,64,1)_"00L12416|1|[LNPOPT]GPCU|||do VP2^V00S315(.fLNPOPT)"
 set %TAB(8)=$C(10,24,1)_"00L12415|1|[LNPOPT]SUMM"
 set %TAB(9)=$C(10,64,1)_"00T12403|1|[LNPOPT]COMP|[STBLLCOM]"
 set %TAB(10)=$C(12,24,1)_"01N12404|1|[LNPOPT]BASE1|[STBLLCB]||do VP3^V00S315(.fLNPOPT)"
 set %TAB(11)=$C(12,64,1)_"00N12405|1|[LNPOPT]BASE2|[STBLLCB]||do VP4^V00S315(.fLNPOPT)"
 set %TAB(12)=$C(13,24,1)_"00N12406|1|[LNPOPT]BASE3|[STBLLCB]||do VP5^V00S315(.fLNPOPT)"
 set %TAB(13)=$C(13,64,1)_"00N12407|1|[LNPOPT]BASE4|[STBLLCB]||do VP6^V00S315(.fLNPOPT)"
 set %TAB(14)=$C(14,24,1)_"00N12408|1|[LNPOPT]BASE5|[STBLLCB]||do VP7^V00S315(.fLNPOPT)"
 set %TAB(15)=$C(14,64,1)_"00N12409|1|[LNPOPT]BASE6|[STBLLCB]||do VP8^V00S315(.fLNPOPT)"
 set %TAB(16)=$C(16,24,18)_"00$12412|1|[LNPOPT]MINLC|||||||2"
 set %TAB(17)=$C(16,64,1)_"00T12413|1|[LNPOPT]MLCO|[STBLMOPT]"
 set %TAB(18)=$C(17,24,18)_"00$12411|1|[LNPOPT]MAXLC|||do VP9^V00S315(.fLNPOPT)||||2"
 set %TAB(19)=$C(17,64,1)_"00L12417|1|[LNPOPT]MMCOL"
 do VTBL(.fLNPOPT)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordLNPOPT fLNPOPT) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordLNPOPT fLNPOPT) //
 if X=1 do DEFAULT^DBSMACRO("LNPOPT.BASE1",0,"1","0","0")
 quit

VP2(RecordLNPOPT fLNPOPT) //
 if 'X quit 
 if fLNPOPT.CDF quit 
 set ER=1
 
 // Catch-up option is available only in conjunction with daily assessment option
 set RM=$$^MSG(508)                     
 quit

VP3(RecordLNPOPT fLNPOPT) //
 // Response of '0' required if calculation option is '1'
 if fLNPOPT.MET=1,X'="0" set ER=1 set RM=$$^MSG(2401) quit      

BASE5	// Also called by other bases post processors.
 if X=5 set RM=$$^MSG(2112)_"|22001"    
 // Option 5 requires definition of payment due on next page
 if $L(X),X'=5 set RM=" |22001"
 quit 

VP4(RecordLNPOPT fLNPOPT) //
 do BASE5
 quit

VP5(RecordLNPOPT fLNPOPT) //
 do BASE5
 quit

VP6(RecordLNPOPT fLNPOPT) //
 do BASE5
 quit

VP7(RecordLNPOPT fLNPOPT) //
 do BASE5
 quit

VP8(RecordLNPOPT fLNPOPT) //
 do BASE5
 quit

VP9(RecordLNPOPT fLNPOPT) //
 // Maximum charge may not exceed minimum
 if X.length(),fLNPOPT.MINLC,(X<fLNPOPT.MINLC) do Runtime.setErrMSG("LNPOPT",1683)
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNPOPT fLNPOPT
 do VPR(.fLNPOPT)
 do VDA1(.fLNPOPT)
 do ^DBSPNT()
 quit

VW(RecordLNPOPT fLNPOPT)
 do VDA1(.fLNPOPT)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNPOPT fLNPOPT)
 do VDA1(.fLNPOPT)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNPOPT fLNPOPT
 do VDA1(.fLNPOPT)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordLNPOPT fLNPOPT
 if sn="LNPOPT" do vSET1(.fLNPOPT,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordLNPOPT fLNPOPT,di,X)
 do fLNPOPT.setAuditFlag(1)
 set fLNPOPT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordLNPOPT fLNPOPT
 if fid="LNPOPT" quit $$vREAD1(.fLNPOPT,di)
 quit ""
vREAD1(RecordLNPOPT fLNPOPT,di)
 quit fLNPOPT.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
