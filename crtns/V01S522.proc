V01S522(%ProcessMode,RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())   // -  - SID= <RELCODE> Relationship Codes
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:52 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="RELCODE",VPGM=$T(+0),VSNAME="Relationship Codes"
 set VFSN("RELCODE")="zfRELCODE",VFSN("RELCODE1")="zfRELCOD1"
 set vPSL=1
 set KEYS(1)=fRELCOD1.REL
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=10 do VPR(.fRELCOD1,.fRELCODE()),VDA1(.fRELCOD1,.fRELCODE()),V5^DBSPNT quit

 // Display Pre-Processor
 //
 if '%ProcessMode do VNEW(.fRELCOD1,.fRELCODE()),VDSPPRE(.fRELCOD1,.fRELCODE()) quit:$G(ER)  do VPR(.fRELCOD1,.fRELCODE()),VDA1(.fRELCOD1,.fRELCODE())
 if %ProcessMode do VLOD(.fRELCOD1,.fRELCODE()) quit:$G(ER)  do VDSPPRE(.fRELCOD1,.fRELCODE()) quit:$G(ER)  do VPR(.fRELCOD1,.fRELCODE()),VDA1(.fRELCOD1,.fRELCODE())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fRELCOD1,.fRELCODE())
 type Number ptr
 set ptr=""
 for  set ptr = fRELCODE(ptr).order() quit:ptr.isNull()  do {
     if fRELCODE(ptr).ROLE="" kill fRELCODE(ptr)
     }
	quit


VNEW(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) // Initialize arrays if %O=0
 
 do VLOD(.fRELCOD1,.fRELCODE())
 do VDEF(.fRELCOD1,.fRELCODE())
 do VLOD(.fRELCOD1,.fRELCODE())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())
 if fRELCOD1.RSPREL="" set fRELCOD1.RSPREL=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VNEWDQ(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) // Original VNEW section
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VLOD(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) // User defined access section
 //
 if '$D(%REPEAT) set %REPEAT=10
 if '$D(%MODS) set %MODS=1
 Q
 Q
 #ACCEPT date=11/05/03;pgm=Screen compiler
 quit
VLODDQ(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //Original VLOD section
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) // Display screen prompts
 set VO="11||13|"
 set VO(0)="|0"
 set VO(1)=$C(4,2,19,0,0,0,0,0,0,0)_"01T Relationship Code:"
 set VO(2)=$C(5,8,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(7,7,19,0,0,0,0,0,0,0)_"01TTax Recipient Code:"
 set VO(4)=$C(8,8,18,0,0,0,0,0,0,0)_"01TT5 Recipient Code:"
 set VO(5)=$C(8,44,19,0,0,0,0,0,0,0)_"01TNR4 Recipient Code:"
 set VO(6)=$C(10,54,3,0,0,0,0,0,0,0)_"01TBur"
 set VO(7)=$C(10,71,4,0,0,0,0,0,0,0)_"01TRole"
 set VO(8)=$C(11,47,32,0,0,0,0,0,0,0)_"01TPrim   Rep  Direct   Description"
 set VO(9)=$C(12,1,51,0,0,0,0,0,0,0)_"01TRole   Description           Suffix       SS  Owner"
 set VO(10)=$C(12,54,3,0,0,0,0,0,0,0)_"01TRel"
 set VO(11)=$C(12,60,19,0,0,0,0,0,0,0)_"01TLiab    Max # Min #"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())  // Display screen data
 new V
 //
 set VO="17|12|13|"
 set VO(12)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(13)=$C(4,22,2,2,0,0,0,0,0,0)_"01T"_$E(fRELCOD1.REL,1,2)
 set VO(14)=$C(5,22,30,2,0,0,0,0,0,0)_"00T"_$E(fRELCOD1.RELDESC,1,30)
 set VO(15)=$C(7,27,2,2,0,0,0,0,0,0)_"00T"_$E(fRELCOD1.RCODE,1,2)
 set VO(16)=$C(8,27,1,2,0,0,0,0,0,0)_"00N"_fRELCOD1.T5RECTYPE
 set VO(17)=$C(8,64,1,2,0,0,0,0,0,0)_"00N"_fRELCOD1.NR4REC
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+5,DY=13 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fRELCOD1,.fRELCODE())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'fRELCODE(I).getPointer() do {
     set fRELCODE(I)=Class.new("RecordRELCODE","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY+1,2,3,2,0,0,0,0,0,0)_"01N"_fRELCODE(I).ROLE
 set VO(VX+2)=$C(DY+1,7,20,2,0,0,0,0,0,0)_"00T"_$E(fRELCODE(I).DESC,1,20)
 set VO(VX+3)=$C(DY+1,29,12,2,0,0,0,0,0,0)_"00T"_$E(fRELCODE(I).SFX,1,12)
 set VO(VX+4)=$C(DY+1,44,1,2,0,0,0,0,0,0)_"00L"_$S(fRELCODE(I).OVRSFX:"Y",1:"N")
 set VO(VX+5)=$C(DY+1,49,1,2,0,0,0,0,0,0)_"00L"_$S(fRELCODE(I).PCIF:"Y",1:"N")
 set VO(VX+6)=$C(DY+1,55,1,2,0,0,0,0,0,0)_"00L"_$S(fRELCODE(I).SPOUSE:"Y",1:"N")
 set VO(VX+7)=$C(DY+1,62,1,2,0,0,0,0,0,0)_"00L"_$S(fRELCODE(I).DL:"Y",1:"N")
 set VO(VX+8)=$C(DY+1,69,2,2,0,0,0,0,0,0)_"00N"_fRELCODE(I).MAXROL
 set VO(VX+9)=$C(DY+1,75,2,2,0,0,0,0,0,0)_"00N"_fRELCODE(I).REQ
 set DY=DY+2,VX=VX+9
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %REPREQ=14 set %MODGRP=2
 set %MODOFF=5,%MOD=9,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=12+(%REPEAT*2),BLKSIZ=(43*%REPEAT)+36,PGM=$T(+0),DLIB="SYSDEV",DFID="RELCODE1,RELCODE",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("RELCODE")="zfRELCODE",VFSN("RELCODE1")="zfRELCOD1"
 //
 for I=15:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(3,21,2)_"21T12401|1|[RELCODE1]REL"
 set %TAB(2)=$C(4,21,30)_"01T12401||[RELCODE1]RELDESC"
 set %TAB(3)=$C(6,26,2)_"00T12404||[RELCODE1]RCODE||||do VP1^V01S522(.fRELCOD1,.fRELCODE)"
 set %TAB(4)=$C(7,26,1)_"00N12402||[RELCODE1]T5RECTYPE|[UTBLT5REC]"
 set %TAB(5)=$C(7,63,1)_"00N12403||[RELCODE1]NR4REC"
 set %TAB(6)=$C(13,1,3)_"20N12402|1|[RELCODE]ROLE"
 set %TAB(7)=$C(13,6,20)_"00T12402|1|[RELCODE]DESC|||do VP2^V01S522(.fRELCOD1,.fRELCODE)"
 set %TAB(8)=$C(13,28,12)_"00T12403|1|[RELCODE]SFX|||do VP3^V01S522(.fRELCOD1,.fRELCODE)"
 set %TAB(9)=$C(13,43,1)_"00L12407|1|[RELCODE]OVRSFX"
 set %TAB(10)=$C(13,48,1)_"00L12404|1|[RELCODE]PCIF|||do VP4^V01S522(.fRELCOD1,.fRELCODE)"
 set %TAB(11)=$C(13,54,1)_"00L12408|1|[RELCODE]SPOUSE|||do VP5^V01S522(.fRELCOD1,.fRELCODE)"
 set %TAB(12)=$C(13,61,1)_"00L12405|1|[RELCODE]DL"
 set %TAB(13)=$C(13,68,2)_"00N12406|1|[RELCODE]MAXROL|||do VP6^V01S522(.fRELCOD1,.fRELCODE)"
 set %TAB(14)=$C(13,74,2)_"00N12401|1|[RELCODE]REQ|||do VP7^V01S522(.fRELCOD1,.fRELCODE)"
 do VTBL(.fRELCOD1,.fRELCODE()),VDEPRE(.fRELCOD1,.fRELCODE()) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordRELCODE1 fRELCOD1
 type Public RecordRELCODE fRELCODE()
 do VSPP1(.fRELCOD1,.fRELCODE())
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())
 D VSPPREQ(.fRELCOD1,.fRELCODE()) I ER Q
 ;
 	quit:%ProcessMode'<2
 
        type String H,N
        set (H,N)=""
         for  set N=$O(fRELCODE(N)) quit:N=""  do {
	        if (fRELCODE(N).PCIF=1) set H=1 quit
                }
        if H.isNull() set ER=1,RM=$$^MSG(8473)
        quit
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit

VSPPREQ(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) 
 //_______________________________________________________
 //  User Defined Required Data Item Definitions
 //_______________________________________________________

 set ER=0

 for I=%MODS:1:%REPEAT+%MODS-1 do VR1(.fRELCOD1,.fRELCODE()) if ER set NI=((I-1)*9)+(1+%MODOFF) quit
 quit

VR1(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) 

 // ([RELCODE]DESC,[RELCODE]MAXROL,[RELCODE]REQ)

 I (fRELCODE(I).DESC'=""),(fRELCODE(I).MAXROL'=""),(fRELCODE(I).REQ'="") quit


 // ([RELCODE]DESC-,[RELCODE]MAXROL-,[RELCODE]REQ-)

 I (fRELCODE(I).DESC=""),(fRELCODE(I).MAXROL=""),(fRELCODE(I).REQ="") quit

 do VR99 quit

VR99 
 set RM="Missing required field(s)/data item set definition error"
 set ER=1 quit
VDEPRE(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())  // Data Entry Pre-processor
 
 S CNT=0
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //
 set CNTRY=$$^CUVAR("CCNTRY")
 do CHANGE^DBSMACRO("TBL","[STBLIRSRCODE]") 
VP2(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //
 /* 14057 - JERUCHIMC - 3/23/05
      Convert to DBI2 standards... replace .delete
     with setting local array pieces to null.
 */
 
 type Public Boolean ER
 type Public String I(),RM,X
 
 if X="",I(1)=1 do Runtime.setErrMSG("RELCODE",741) quit        // Data required
 if X'="" quit
 set fRELCODE(I(1)).sfx=""
 set fRELCODE(I(1)).ovrsfx=""
 set fRELCODE(I(1)).pcif=""
 set fRELCODE(I(1)).dl=""
 set fRELCODE(I(1)).maxrol=""
 set fRELCODE(I(1)).req=""
 do GOTO^DBSMACRO("NEXT")
 quit
 
VP3(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //
	/* 14057 - JERUCHIMC - 3/23/05
   	   Convert to DBI2 standards.  Type variables
           and use local array syntax.
 	*/	

 	type Public String I(),L,RM,X
        type Public Boolean ER
 
        quit:X="N"!('X)
        for L=1:1 quit:L=I(1)  do:X { quit:ER
                if fRELCODE(L).pcif do Runtime.setErrMSG("RELCODE",7788) quit
        }
 
        if ER=1 quit
        if fRELCODE(I(1)).maxrol>1 do Runtime.setErrMSG("RELCODE",1689)
        quit
 
 
 
VP4(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //
	/* 14057 - JERUCHIMC - 3/23/05
           Convert to DBI2 standards.  Type variables
           and use local array syntax.
        */

 	type Public String RM,X
        type Public Boolean ER
 
        quit:X="N"!('X)
        for L=1:1 quit:L=I(1)  do:X { quit:ER
                if fRELCODE(L).pcif do Runtime.setErrMSG("RELCODE",7788) quit
        }
 
        if fRELCODE(I(1)).maxrol>1 do Runtime.setErrMSG("RELCODE",1689)
        quit
 
VP5(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //
  /* 14057 - JERUCHIMC - 3/23/05
          Convert to DBI2 standards.  Use local array syntax.
  */
 
 type public Boolean ER
 type public String RM
 if (fRELCODE(I(1)).req>fRELCODE(I(1)).maxrol) do Runtime.setErrMSG("RELCODE",1737)
VP6(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //
        /* 14057 - JERUCHIMC - 3/23/05
           Convert to DBI2 standards.  Type variables
           and use local array syntax.
        */
 
 type public Number CNT
 type public Boolean ER
 type public String RM

 if V.length() set CNT=CNT-V
 set CNT=CNT+X
 if CNT>99 set CNT=CNT-X do Runtime.setErrMSG("RELCODE",1037) quit
 if fRELCODE(I(1)).pcif,X>1 do Runtime.setErrMSG("RELCODE",1689)
VP7(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE()) //
 /* 14057 - JERUCHIMC - 3/23/05
          Convert to DBI2 standards.  Type variables
          and use local array syntax.
 */

 type public Boolean ER
 type public String RM

 if fRELCODE(I(1)).req>fRELCODE(I(1)).maxrol do Runtime.setErrMSG("RELCODE",1737)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordRELCODE1 fRELCOD1
 type Public RecordRELCODE fRELCODE()
 do VPR(.fRELCOD1,.fRELCODE())
 do VDA1(.fRELCOD1,.fRELCODE())
 do ^DBSPNT()
 quit

VW(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())
 do VDA1(.fRELCOD1,.fRELCODE())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())
 do VDA1(.fRELCOD1,.fRELCODE())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordRELCODE1 fRELCOD1
 type Public RecordRELCODE fRELCODE()
 do VDA1(.fRELCOD1,.fRELCODE())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordRELCODE1 fRELCOD1
 if sn="RELCODE1" do vSET1(.fRELCOD1,di,X)
 type Public RecordRELCODE fRELCODE()
 if sn="RELCODE" do vSET2(fRELCODE(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordRELCODE1 fRELCOD1,di,X)
 do fRELCOD1.setAuditFlag(1)
 set fRELCOD1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordRELCODE fRELCODE,di,X)
 do fRELCODE.setAuditFlag(1)
 set fRELCODE.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordRELCODE1 fRELCOD1
 if fid="RELCODE1" quit $$vREAD1(.fRELCOD1,di)
 type Public RecordRELCODE fRELCODE()
 if fid="RELCODE" quit $$vREAD2(fRELCODE(I(1)),di)
 quit ""
vREAD1(RecordRELCODE1 fRELCOD1,di)
 quit fRELCOD1.@di
vREAD2(RecordRELCODE fRELCODE,di)
 quit fRELCODE.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VDSPPRE(RecordRELCODE1 fRELCOD1,RecordRELCODE fRELCODE())  // Display Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type Number i
 //type Public RecordRELCODE fRELCODE()
 for i = 1:1:60 do {
 if '$D(fRELCODE(i)) set fRELCODE(i) = Class.new("RecordRELCODE","REL=:fRELCOD1.REL,ROLE=:i")
	set fRELCODE(i).role = i
 }
 if %ProcessMode = 0 set fRELCODE(1).pcif = 1 // Default primary owner
 quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
