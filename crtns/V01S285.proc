V01S285(%ProcessMode,RecordINDEX1 INDEX1,RecordINDEX fINDEX)   // -  - SID= <INDEX2> Interest Index Rate - Investment/Sweep
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,RATE",VSID="INDEX2",VPGM=$T(+0),VSNAME="Interest Index Rate - Investment/Sweep"
 set VFSN("INDEX")="zfINDEX",VFSN("INDEX1")="zINDEX1"
 set vPSL=1
 set KEYS(1)=fINDEX.INDEX
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=11 do VPR(.INDEX1,.fINDEX),VDA1(.INDEX1,.fINDEX),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.INDEX1,.fINDEX) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.INDEX1,.fINDEX),VPR(.INDEX1,.fINDEX),VDA1(.INDEX1,.fINDEX)
 if %ProcessMode do VLOD(.INDEX1,.fINDEX) quit:$G(ER)  do VPR(.INDEX1,.fINDEX),VDA1(.INDEX1,.fINDEX)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.INDEX1,.fINDEX)
	quit


VNEW(RecordINDEX1 INDEX1,RecordINDEX fINDEX) // Initialize arrays if %O=0
 
 do VDEF(.INDEX1,.fINDEX)
 do VLOD(.INDEX1,.fINDEX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordINDEX1 INDEX1,RecordINDEX fINDEX) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=11
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordINDEX1 INDEX1,RecordINDEX fINDEX) // Display screen prompts
 set VO="8||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,12,12,0,0,0,0,0,0,0)_"01T Index Name:"
 set VO(2)=$C(2,11,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(4,25,28,1,0,0,0,0,0,0)_"01T Comparative Interest Index "
 set VO(4)=$C(7,25,16,0,0,0,0,0,0,0)_"01T Effective Date:"
 set VO(5)=$C(8,21,20,0,0,0,0,0,0,0)_"01TOperator & Rounding:"
 set VO(6)=$C(10,14,7,2,0,0,0,0,0,0)_"01T Level "
 set VO(7)=$C(10,25,4,2,0,0,0,0,0,0)_"01TType"
 set VO(8)=$C(10,36,5,2,0,0,0,0,0,0)_"01TValue"
 if '$D(%MODS) set %MODS=1
 set DY=12 for I=%MODS:1:%REPEAT+%MODS-1 do VRPR(.INDEX1,.fINDEX)
 set VO=(+VO)_"|"_(VO+1)_"|13" quit  // BOD pointer
 
VRPR(RecordINDEX1 INDEX1,RecordINDEX fINDEX)  // Display prompts %REPEAT times
 
 set VO(VO+1)=$C(DY,19,1,2,0,0,0,0,0,0)_"01T)"
 set VO=VO+1,DY=DY+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordINDEX1 INDEX1,RecordINDEX fINDEX)  // Display screen data
 new V
 s RATE=$G(RATE)
 //
 set VX=$P(VO,"|",2)
 set VO(VX+0)=$C(1,25,6,2,0,0,0,0,0,0)_"01T"_$E(INDEX1.INDEX,1,6)
 set VO(VX+1)=$C(2,25,40,2,0,0,0,0,0,0)_"01T"_$E(fINDEX.DES,1,40)
 set VO(VX+2)=$C(7,42,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(INDEX1.EFD)
 set VO(VX+3)=$C(8,42,20,2,0,0,0,0,0,0)_"01T"_$E(fINDEX.EXTENSION,1,20)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+3,DY=12 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.INDEX1,.fINDEX)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordINDEX1 INDEX1,RecordINDEX fINDEX)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,RATE(I))=$G(RATE(I))
 
 set VO(VX+1)=$C(DY,17,2,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",3)
 set VO(VX+2)=$C(DY,27,1,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",4)
 set VO(VX+3)=$C(DY,35,20,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",2)
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %REPREQ=7 set %MODGRP=1
 set %MODOFF=4,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=11+%REPEAT,BLKSIZ=(23*%REPEAT)+76,PGM=$T(+0),DLIB="SYSDEV",DFID="INDEX1,INDEX"
 set OLNTB=VPB*1000
 
 set VFSN("INDEX")="zfINDEX",VFSN("INDEX1")="zINDEX1"
 //
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,24,6)_"21T12401|1|[INDEX1]INDEX|[INDEX]"
 set %TAB(2)=$C(1,24,40)_"21T12401||[INDEX]DES"
 set %TAB(3)=$C(6,41,10)_"21D12402|1|[INDEX1]EFD"
 set %TAB(4)=$C(7,41,20)_"20T12412||[INDEX]EXTENSION"
 set %TAB(5)=$C(11,16,2)_"00N12403|*RATE(1)|[*]@RATE"
 set %TAB(6)=$C(11,26,1)_"00T12404|*RATE(1)|[*]@RATE|[STBLTIERTYP]||do VP1^V01S285(.INDEX1,.fINDEX)"
 set %TAB(7)=$C(11,34,20)_"00T12402|*RATE(1)|[*]@RATE1||||do VP2^V01S285(.INDEX1,.fINDEX)"
 do VTBL(.INDEX1,.fINDEX)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordINDEX1 INDEX1,RecordINDEX fINDEX) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordINDEX1 INDEX1,RecordINDEX fINDEX) //
 if V'="",X="" do {
 	set RATE(z1).piece($C(124),2)=""

 	do DISPLAY^DBSMACRO("ALL","","0")

 	do GOTO^DBSMACRO("NEXT") quit 

 	}
 do TYPE^INDX1

 quit 

VP2(RecordINDEX1 INDEX1,RecordINDEX fINDEX) //

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordINDEX1 INDEX1
 type Public RecordINDEX fINDEX
 do VPR(.INDEX1,.fINDEX)
 do VDA1(.INDEX1,.fINDEX)
 do ^DBSPNT()
 quit

VW(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 do VDA1(.INDEX1,.fINDEX)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 do VDA1(.INDEX1,.fINDEX)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordINDEX1 INDEX1
 type Public RecordINDEX fINDEX
 do VDA1(.INDEX1,.fINDEX)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordINDEX1 INDEX1
 if sn="INDEX1" do vSET1(.INDEX1,di,X)
 type Public RecordINDEX fINDEX
 if sn="INDEX" do vSET2(.fINDEX,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordINDEX1 INDEX1,di,X)
 do INDEX1.setAuditFlag(1)
 set INDEX1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordINDEX fINDEX,di,X)
 do fINDEX.setAuditFlag(1)
 set fINDEX.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordINDEX1 INDEX1
 if fid="INDEX1" quit $$vREAD1(.INDEX1,di)
 type Public RecordINDEX fINDEX
 if fid="INDEX" quit $$vREAD2(.fINDEX,di)
 quit ""
vREAD1(RecordINDEX1 INDEX1,di)
 quit INDEX1.@di
vREAD2(RecordINDEX fINDEX,di)
 quit fINDEX.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordINDEX1 INDEX1,RecordINDEX fINDEX)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type Number A,B,FND,V
 set A=1
 set B=0
 set INTRTE.piece("|",2)=RATE(A).piece("|",2)
 set FND=0
 for  set V=$O(RATE(A)) do { quit:FND=1
 	if V="" set FND=1 quit 
 	set A=A+1
	set B=B+1
	if B>9 set FND=1 quit 
	if RATE(A).piece("|",2)="" set FND=1 quit 
	set CMPIND(B).piece("|",2)=RATE(A).piece("|",2)
	}
 quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
