R01S254	// SCA237 - Officer Lending Limit Summary Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date DATE

	set RID="SCA237"
	set RN="Officer Lending Limit Summary Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("DATE")="|10|||||||D|Effective Date|||||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,DATE#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date DATE
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,AVAIL,AVL,CID,CLS,COMM,COMMT,CONAM,CRLMT,DAMT,DAT,DESC,DTJNA(),FLG,FUND,FUNDT,I,INCCOM,LIMIT,LIMPGRP,M1,M2,MAX,MIN,NEWCRLMT,OFFC,OLDCRLMT,RID,RN,TAVL,TCOMM,TDAMT,TDATE,TFUND,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA237",RN="Officer Lending Limit Summary Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA237","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[UTBLOFPLIM]OFFC#1#4,[UTBLOFPLIM]PRCLIM#46#8,[UTBLOFPLIM]DOLLIM#58#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Officer Lending Limit Summary Report"
		set VBNRINFO("PGM")="R01S254"
		set VBNRINFO("RID")="SCA237"
		set VBNRINFO("TABLES")="UTBLOFPLIM"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,UTBLOFPLIM]""OFPLIM"""
		set VBNRINFO("ORDERBY",2)="[SYSDEV,UTBLOFPLIM]KEY"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,UTBLOFPLIM]OFFC"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,UTBLOFPLIM]DOLLIM"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("UTBLOFPLIM.KEY,UTBLOFPLIM.OFFC,UTBLOFPLIM.DOLLIM,UTBLOFPLIM.PRCLIM","UTBLOFPLIM","","UTBLOFPLIM.KEY,UTBLOFPLIM.OFFC,UTBLOFPLIM.DOLLIM","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4
	set vc1=V.piece($C(9),1)			// UTBLOFPLIM.KEY
	set vc2=V.piece($C(9),2)			// UTBLOFPLIM.OFFC
	set vc3=V.piece($C(9),3)			// UTBLOFPLIM.DOLLIM
	set vc4=V.piece($C(9),4)			// UTBLOFPLIM.PRCLIM
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public String CID,CLS
	type public Number COMMT,FUNDT,I,NEWCRLMT,OLDCRLMT,TAVL,TDAMT,TYPE
	type public Date DAT,DATE,MAX,MIN,TDATE
	type public Boolean FLG

	set CLS="L"

	// Init report totals
	set (COMMT,FUNDT,TAVL,TDAMT)=0

	set FLG=0

	set DAT=$$DAT^%ZM(DATE) 
	set TDATE=$P(DAT,"/",1)_"/01/"_$P(DAT,"/",3)
	set MAX=DATE 
	set MIN=$$^SCAJD(TDATE)

	for I=MIN:1:MAX do {
		type ResultSet rs=Db.select("CID,TYP,NEWCRLMT,OLDCRLMT","DTJNA","TJD=:I AND CLS=:CLS") 	
		while rs.next() do {
			set CID=rs.getCol("cid")
			set TYPE=rs.getCol("typ")
			set NEWCRLMT=rs.getCol("newcrlmt")
			set OLDCRLMT=rs.getCol("oldcrlmt")

			do CID1(CID,TYPE,NEWCRLMT,OLDCRLMT)
			}	
		}
	quit

CID1(CID,TYPE,NEWCRLMT,OLDCRLMT)

	type public String DTJNA(),LIMPGRP,OFFC

	type RecordLN ln
	set ln=Db.getRecord("LN","CID")

	set OFFC=ln.off  // Primary Account Officer Code
	if OFFC.isNull() quit  

	type RecordPRODCTL prodctl
	set prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE")
	set LIMPGRP=prodctl.limigrp	
	if LIMPGRP.isNull() quit 
 
	set DTJNA(LIMPGRP,OFFC,CID)=ln.crlmt_"|"_(NEWCRLMT-OLDCRLMT)

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb2!(+vovc1'=+vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VSUM3	// Summary
	type public String %TIM,AVAIL,AVL,CID,CLS,COMM,COMMT,CRLMT,DAMT,DAT,DATE,DESC,DTJNA(),FLG,FUND,FUNDT,I,INCCOM,IOSL,LIMIT,LIMPGRP,M1,M2,MAX,MIN,NEWCRLMT,OFFC,OLDCRLMT,TAVL,TCOMM,TDAMT,TDATE,TFUND,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Group "
	set VL=VL_$J("",6-VL.length())_$J(vc1,3)
	set VL=VL_$J("",9-VL.length())_" Totals:"
	do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$J(DAMT,12,2) do VP2 quit:VFMQ!verror.get()  set VL="                                                         "_V
	do VP3 quit:VFMQ!verror.get()  set V=$J(TFUND,12,2)
	set VL=VL_$J("",75-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J(TCOMM,12,2)
	set VL=VL_$J("",92-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V=$J(AVL,12,2)
	set VL=VL_$J("",110-VL.length())_V
	do VOM
	set VL="" do VOM
	do VP6 quit:VFMQ!verror.get()  set V=$E(M2,1,96) set VL=V
	do VOM
	do VP7 quit:VFMQ!verror.get()  set V=$E(M1,1,62) set VL=V
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,AVAIL,AVL,CID,CLS,COMM,COMMT,CRLMT,DAMT,DAT,DATE,DESC,DTJNA(),FLG,FUND,FUNDT,I,INCCOM,IOSL,LIMIT,LIMPGRP,M1,M2,MAX,MIN,NEWCRLMT,OFFC,OLDCRLMT,TAVL,TCOMM,TDAMT,TDATE,TFUND,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	do VP8 quit:VFMQ!verror.get()  set V="LOAN ACCOUNT:" set VL="                                        "_V
	set VL=VL_$J("",57-VL.length())_$E(CID,1,12)
	do VP9 quit:VFMQ!verror.get()  set V=$S(+CRLMT=0:$J("",12),1:$J(CRLMT,12,2))
	set VL=VL_$J("",75-VL.length())_V
	set V=$J(INCCOM,12,2) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",92-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set V=vc2,VO=V set V=$J(V,4) do VP11 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",8-VL.length())_$E(DESC,1,25)
	set V=vc4,VO=V do VP12 quit:VFMQ!verror.get()  set V=$J(V,8,5)
	set VL=VL_$J("",45-VL.length())_V		// [SYSDEV,UTBLOFPLIM]PRCLIM
	set V=vc3,VO=V do VP13 quit:VFMQ!verror.get()  set V=$J(V,15,2)
	set VL=VL_$J("",54-VL.length())_V		// [SYSDEV,UTBLOFPLIM]DOLLIM
	set VL=VL_$J("",75-VL.length())_$J(FUND,12,2)
	set VL=VL_$J("",92-VL.length())_$J(COMM,12,2)
	do VP14 quit:VFMQ!verror.get()  set V=$J(AVAIL,12,2)
	set VL=VL_$J("",110-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AVAIL,AVL,CID,CLS,COMM,COMMT,CONAM,CRLMT,DAMT,DAT,DATE,DESC,DTJNA(),FLG,FUND,FUNDT,I,INCCOM,LIMIT,LIMPGRP,M1,M2,MAX,MIN,NEWCRLMT,OFFC,OLDCRLMT,RID,RN,TAVL,TCOMM,TDAMT,TDATE,TFUND,TYPE,VL,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+10,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Portfolio Group"
	set V=vc1,VO=V set V=$J(V,3) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",16-VL.length())_V		// [SYSDEV,UTBLOFPLIM]KEY
	set VL=VL_$J("",54-VL.length())_$E(TDATE,1,24)
	do VOM
	set VL="Total Limit:"
	do VP16 quit:VFMQ!verror.get()  set V=$J(LIMIT,12,2)
	set VL=VL_$J("",13-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="                                           "_"-------- Portfolio -------                          Increased           Funds"
	do VOM
	set VL="Officer Description                        Percentage      Dollar Amt   -  Loans Funded   -  Commitments    =    Available"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,AVAIL,AVL,CID,CLS,COMM,COMMT,CRLMT,DAMT,DAT,DATE,DESC,DTJNA(),FLG,FUND,FUNDT,INCCOM,LIMIT,LIMPGRP,M1,M2,MAX,MIN,NEWCRLMT,OFFC,OLDCRLMT,TAVL,TCOMM,TDAMT,TDATE,TFUND,TYPE,vc1,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Report Totals:"
	do VOM
	set VL="                                                        "_$J(TDAMT,13,2)
	set VL=VL_$J("",74-VL.length())_$J(FUNDT,13,2)
	set VL=VL_$J("",91-VL.length())_$J(COMMT,13,2)
	do VP17 quit:VFMQ!verror.get()  set V=$J(TAVL,13,2)
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DAMT

	type Public Number DAMT,TDAMT

	set TDAMT=TDAMT+DAMT
	quit

VP2	// Column post-processor - Variable: DAMT

	type public String vc1
	type Public Number DAMT,DIFF
	type Public String KEY,M2
	type Public Boolean FLG

	set KEY=vc1

	type RecordUTBLLNPLIM utbl
	set utbl=Db.getRecord("UTBLLNPLIM","KEY=:KEY")

	set DIFF=utbl.limit-DAMT
	if DIFF>0 set FLG=1
 
	quit

VP3	// Column pre-processor - Variable: TFUND

	type Public Number FUNDT,TFUND

	set FUNDT=FUNDT+TFUND
	quit

VP4	// Column pre-processor - Variable: TCOMM

	type Public Number COMMT,TCOMM

	set COMMT=COMMT+TCOMM
	quit

VP5	// Column pre-processor - Variable: AVL

	type Public Number AVL,DAMT,TCOMM,TFUND

	set AVL=DAMT-TFUND-TCOMM
	quit

VP6	// Column pre-processor - Variable: M2

	type Public Number CID,DIFF
	type Public String KEY,M1,M2
	type Public Boolean FLG

	set (M1,M2)=""

	type RecordUTBLLNPLIM utbl
	set utbl=Db.getRecord("UTBLLNPLIM","KEY=:KEY")

	// *** Portfolio limits by officer (~p1) differ from total portfolio
	// limit by ~p2
	if FLG set M2=$$^MSG(6418,utbl.limit,$$^SCARND(DIFF,12,$G(CID)))
 
	set FLG=0
	
	quit

VP7	// Column pre-processor - Variable: M1

	type Public String M1
	type Public Number TP

	//*** Sum of officer percentages (~p1%) does not equal 100%
	if TP,(+TP'=100) set M1=$$^MSG(6419,TP)        

	quit

VP8	// Column pre-processor - LOAN ACCOUNT:

	type Public String CID,DTJNA(),KEY,OFFC,PR,V,VL

	if CID'="X",'(DTJNA(KEY,OFFC).data()) set CID="X" set (V,VL)="" quit
	if CID'="X" set CID=DTJNA(KEY,OFFC,CID).order()
 
	if PR set VL=""
	else  set PR=1
	quit

VP9	// Column pre-processor - Variable: CRLMT

	type Public String CID,DTJNA(),KEY,OFFC
	type Public Number COMM,CRLMT,FUND,INCCOM,TCOMM,TFUND

	if (CID="X")!(CID="") set (CRLMT,INCCOM)=0 quit

	set CRLMT=DTJNA(KEY,OFFC,CID).piece("|",1)
	set FUND=FUND+CRLMT
	set TFUND=TFUND+CRLMT

	set INCCOM=DTJNA(KEY,OFFC,CID).piece("|",2)
	set COMM=COMM+INCCOM
	set TCOMM=TCOMM+INCCOM
 
	quit

VP10	// Column post-processor - Variable: INCCOM

	type Public String V,VL

	set (V,VL)=""
	quit

VP11	// Column post-processor - [SYSDEV,UTBLOFPLIM]OFFC

	type public String vc2
	type Public String DESC,OFFC

	set OFFC=vc2

	type RecordUTBLOFF utbloff
	set utbloff=Db.getRecord("UTBLOFF","OFF=:OFFC")

	set DESC=utbloff.desc
 
	quit

VP12	// Column pre-processor - [SYSDEV,UTBLOFPLIM]PRCLIM

	type Public Number TP,V

	set TP=TP+V
	quit

VP13	// Column pre-processor - [SYSDEV,UTBLOFPLIM]DOLLIM

	type public String vc4,vc3
	type Public Number DAMT,LIMIT,PRCLIM,V

	set PRCLIM=vc4

	if 'V , '(PRCLIM.isNull()) set V=(PRCLIM/100)*LIMIT

	set vc3=V

	set DAMT=DAMT+V
 
	quit

VP14	// Column pre-processor - Variable: AVAIL

	type public String vc3
	type Public Number AVAIL,COMM,FUND

	set AVAIL=vc3-FUND-COMM
 
 
	quit

VP15	// Column post-processor - [SYSDEV,UTBLOFPLIM]KEY

	type public Number AVAIL,AVL,COMM,FUND,DAMT,PR,TCOMM,TFUND,TP
	type public String CID
	
	// Init Portfolio Group totals
	set (AVL,DAMT,TCOMM,TFUND,TP)=0
 
	// Init Portfolio Limit amounts
	set (AVAIL,COMM,FUND,PR)=0

	set CID=""
 
	quit

VP16	// Column pre-processor - Variable: LIMIT

	type public String vc1
	type Public String KEY
	type Public Number LIMIT

	set KEY=vc1
	if KEY.isNull() set LIMIT="" quit 

	type RecordUTBLLNPLIM utbl
	set utbl=Db.getRecord("UTBLLNPLIM","KEY=:KEY")
	set LIMIT=utbl.limit

	quit

VP17	// Column pre-processor - Variable: TAVL

	type Public Number COMMT,FUNDT,TAVL,TDAMT

	set TAVL=TDAMT-FUNDT-COMMT
	quit
