R01S106	// SCA035 - Payoff Lockout Exceptions
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA035"
	set RN="Payoff Lockout Exceptions"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[LNPOLOE]EFD|[LNPOLOE]EFD:DISTINCT:NOVAL||||D|Effective Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,DIFF,RID,RN,TOTDIFP,USER,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA035",RN="Payoff Lockout Exceptions"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA035","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNPOLOE]CID#3#12,[LN]BAL#17#12,[LN]MDT#32#10,[LN]DIST1ND#45#10,[LN]PAYLKFRM#56#10,[LN]PAYLKTO#67#10,[LNPOLOE]POLO#84#12,[LNPOLOE]POSC#98#12,[LNPOLOE]DIFD#112#10,[LNPOLOE]DIFP#123#7"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Effective Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE="LNPOLOE.EFD=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Payoff Lockout Exceptions"
		set VBNRINFO("PGM")="R01S106"
		set VBNRINFO("RID")="SCA035"
		set VBNRINFO("TABLES")="LNPOLOE,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNPOLOE]EFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNPOLOE]""POLOE"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNPOLOE]%UID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNPOLOE]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:4 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNPOLOE.EFD,LNPOLOE.%UID,LNPOLOE.CID,LN.BAL,LN.MDT,LN.DIST1ND,LN.PAYLKFRM,LN.PAYLKTO,LNPOLOE.POLO,LNPOLOE.POSC,LNPOLOE.DIFD,LNPOLOE.DIFP","LNPOLOE,LN","LNPOLOE.EFD=:VIN1","LNPOLOE.EFD,LNPOLOE.%UID,LNPOLOE.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12
	set vc1=V.piece($C(9),1)			// LNPOLOE.EFD
	set vc2=V.piece($C(9),2)			// LNPOLOE.%UID
	set vc3=V.piece($C(9),3)			// LNPOLOE.CID
	set vc4=V.piece($C(9),4)			// LN.BAL
	set vc5=V.piece($C(9),5)			// LN.MDT
	set vc6=V.piece($C(9),6)			// LN.DIST1ND
	set vc7=V.piece($C(9),7)			// LN.PAYLKFRM
	set vc8=V.piece($C(9),8)			// LN.PAYLKTO
	set vc9=V.piece($C(9),9)			// LNPOLOE.POLO
	set vc10=V.piece($C(9),10)			// LNPOLOE.POSC
	set vc11=V.piece($C(9),11)			// LNPOLOE.DIFD
	set vc12=V.piece($C(9),12)			// LNPOLOE.DIFP
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc11,vc9,vc10,vc4
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc11			// @TOT([LNPOLOE]DIFD)
	set VT(4,2,1)=VT(4,2,1)+vc9			// @TOT([LNPOLOE]POLO)
	set VT(4,3,1)=VT(4,3,1)+vc10			// @TOT([LNPOLOE]POSC)
	set VT(4,4,1)=VT(4,4,1)+vc4			// @TOT([LN]BAL)
	quit

VDTL4	// Detail
	type public String %TIM,DIFF,IOSL,TOTDIFP,USER,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "_$J(vc3,12)
	set VL=VL_$J("",15-VL.length())_$J(vc4,13,2)
	set VL=VL_$J("",31-VL.length())_$J($$DAT^%ZM(vc5),10)
	set VL=VL_$J("",44-VL.length())_$J($$DAT^%ZM(vc6),10)
	set V=vc7,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(V),10)
	set VL=VL_$J("",55-VL.length())_V		// [SYSDEV,LN]PAYLKFRM
	set V=vc8,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(V),10)
	set VL=VL_$J("",66-VL.length())_V		// [SYSDEV,LN]PAYLKTO
	do VP3 quit:VFMQ!verror.get()  set V=$J(DIFF,5)
	set VL=VL_$J("",77-VL.length())_V
	set VL=VL_$J("",83-VL.length())_$J(vc9,12,2)
	set VL=VL_$J("",96-VL.length())_$J(vc10,13,2)
	set VL=VL_$J("",110-VL.length())_$J(vc11,11,2)
	set VL=VL_$J("",122-VL.length())_$J(vc12,7,4)
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,DIFF,I,IOSL,TOTDIFP,USER,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="     "_"TOTALS:"
	set V=VT(4,4,1)					// @TOT([LN]BAL,)
	set VL=VL_$J("",16-VL.length())_$J(V,12,2)
	set V=VT(4,2,1)					// @TOT([LNPOLOE]POLO,)
	set VL=VL_$J("",81-VL.length())_$J(V,14,2)
	set V=VT(4,3,1)					// @TOT([LNPOLOE]POSC,)
	do VP4 quit:VFMQ!verror.get()  set V=$J(V,13,2)
	set VL=VL_$J("",96-VL.length())_V		// @TOT([LNPOLOE]POSC,)
	set V=VT(4,1,1)					// @TOT([LNPOLOE]DIFD,)
	do VP5 quit:VFMQ!verror.get()  set V=$J(V,10,2)
	set VL=VL_$J("",111-VL.length())_V		// @TOT([LNPOLOE]DIFD,)
	do VP6 quit:VFMQ!verror.get()  set V=$J(TOTDIFP,8,4)
	set VL=VL_$J("",121-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DIFF,RID,RN,TOTDIFP,USER,VL,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA035)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="ENTERED BY:"
	do VP7 quit:VFMQ!verror.get()  set V=$E(USER,1,15)
	set VL=VL_$J("",13-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="                                 "_"MATURITY                ---------------LOCKOUT----------------         SYSTEM"
	do VOM
	set VL="     "_"ACCOUNT         BALANCE       DATE       NEXT DUE     FROM        TO     DIFF      AMOUNT          PAYOFF DIFFERENCE PERCENT"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,LN]PAYLKFRM

	type Public String PAYLKFRM,V

	set PAYLKFRM=V
	quit

VP2	// Column pre-processor - [SYSDEV,LN]PAYLKTO

	type Public String PAYLKTO,V

	set PAYLKTO=V
	quit

VP3	// Column pre-processor - Variable: DIFF

	type Public String DIFF,PAYLKFRM,PAYLKTO

	set DIFF=PAYLKTO-PAYLKFRM
	quit

VP4	// Column pre-processor - @TOT([LNPOLOE]POSC,,$,13)

	type Public String TPOSC,V

	set TPOSC=V
	quit

VP5	// Column pre-processor - @TOT([LNPOLOE]DIFD,,$,10)

	type Public String TDIFD,V

	set TDIFD=V
	quit

VP6	// Column pre-processor - Variable: TOTDIFP

	type Public String TDIFD,TOTDIFP,TPOSC

	if TPOSC=0 set TOTDIFP=0 quit 
	set TOTDIFP=TDIFD/TPOSC*100
	quit

VP7	// Column pre-processor - Variable: USER

	type public String vc2
	type Public String %UID,USER,ZUID,ZUNAM

	set %UID=vc2

	if %UID="" set USER=""
	else  do {
		set ZUID=%UID
	
		do {
			Type ResultSet rs=Db.select("%UFN","SCAU","UID=:ZUID") 
	    		set ZUNAM="" if 'rs.next()  quit
	    		set ZUNAM=rs.getRow()
	   	} 
		set USER=%UID_" "_ZUNAM
		}
	quit
