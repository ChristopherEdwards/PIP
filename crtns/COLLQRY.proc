COLLQRY		/*
	PROCEDURE:  COLLQRY
	ORIG: Vince Arpa - 13 May 1999
	DESC: Collection Queue System Query Compiler
 
	---- Comments --------------------------------------------------------
	This routine will compile a routine to be used during dayend
	processing for the Collection Queue System.  This routine will
	loop through the user table UTBLCOLLQRY and for each query definition,
	compile a section in the new routine COLLQRY1    

	
	---- Revision History ------------------------------------------------

        11/09/05 - Satyanas
        	   Modified the code PSL Standards.
        
        07/27/05 - SkariahV- CR16679
	           Removed #WARN directive.
	              
	02/14/03 - Dan Russell - 51351
		   Modified to generate PSL instead of M code.

	*/
	
	type public Number ER=0
	type public String CMPERR(),CODE(),%MSKC,%MSKD,%UserID,RM,TAB
	
	catch error {
		do ZE^UTLERR
		set ER=1
		}

	set TAB=$CHAR(9)
	
	do addcode("public COLLQRY1(RecordACN acn)"_TAB_"// Collection Queue System Compiled Program")
	do addcode(TAB_"// Last compiled:  "_%CurrentDate.toString($G(%MSKD))_" "_$$TIM^%ZM_" - "_$G(%UserID))
	do addcode("")
	do addcode(TAB_"// THIS IS A COMPILED ROUTINE.  Compiled by procedure COLLQRY")
	do addcode("")
	do addcode(TAB_"quit   // Cannot access from top")
	
	// Loop through collection query user table and find all queries that are defined.
	
	type DbSet ds=Db.selectDbSet("UTBLCOLLQRY","QUERY IS NOT NULL")

	quit:ds.isEmpty()

	while ds.next() do { quit:ER
		type RecordUTBLCOLLQRY collqry=ds.getRecord()
		do bldquery(.collqry)
		}

	quit:ER

	// Build compiled routine
	do BUILDRTN^UCGM(.CODE,"COLLQRY1",.CMPERR)
	if CMPERR.data() do {
		type Number N=""

		for  set N=CMPERR(N).order() quit:N.isNull()  do {
			if 'ER set ER=1,RM=CMPERR(N)
			write CMPERR(N),!
			}
		}
	
	//Completed at ~p1
	if 'ER set ER="W",RM=$$^MSG(591,$$TIM^%ZM(%CurrentTime,$G(%MSKC)))

	quit 
	

bldquery(RecordUTBLCOLLQRY collqry)	// Build query for class and priority

	type public Number ER
	type public String PSLOBJ,PSLQRY,RM
	type Number N
	type String INSTANTS,LINETAG,RECTYP,TAB
	
	set TAB=$CHAR(9)
	set LINETAG=collqry.cls_collqry.prio

	/* Convert code line into PSL code for loading necessary objects and build query.
	   Since batch BCHQCOLL will be passing an instantiated account object, recast 
	   it to the correct record type on input.
	*/
	
	if collqry.cls="D" do {
		set INSTANTS="DEP=dep"
		set RECTYP="(RecordDEP dep)"
		}
	else  if collqry.cls="L" do {
		set INSTANTS="LN=ln"
		set RECTYP="(RecordLN ln)"
		}
	else  do {
		set INSTANTS="ACN=acn"
		set RECTYP="(RecordACN acn)"
		}
	
	do addcode("")
	do addcode("public "_LINETAG_RECTYP_TAB_"// Query - "_collqry.query_" ("_collqry.des_")")
	do addcode("")

	do ^UCQRYBLD(collqry.query,INSTANTS,,.PSLOBJ,.PSLQRY)
	quit:ER
	
	// Validate tables
	set N=""
	for  set N=PSLOBJ(N).order() quit:N.isNull()  do { quit:ER
		type String TABLE
		
		set TABLE=PSLOBJ(N).piece("|",1)
		if '("/ACN/CIF/DEP/LN/ZCIF/ZDEP/ZLN/"[("/"_TABLE_"/")) do {
			set ER=1
			
			// Invalid table name - ~p1
			set RM=$$^MSG(1484,TABLE)
			
			// Query
			set RM=RM_".  "_$$^MSG(7165)_" = "_collqry.query
			}
		}
	quit:ER
	
	set N=""
	// Insert lines to instantiate new objects
	for  set N=PSLOBJ(N).order() quit:N.isNull()  do addcode(TAB_PSLOBJ(N,1))
	
	// Insert the query lines
	for  set N=PSLQRY(N).order() quit:N.isNull()  do {
		do addcode(TAB_"if "_PSLQRY(N))
		do addcode(TAB_"else  quit 0")
		}

	do addcode(TAB_"quit 1")

	do addcode("")

	quit 

	
addcode(String LINE)	// Add new line to CODE arry

	type public String CODE()

	set CODE(CODE("").order(-1)+1)=LINE
	
	quit

vSIG()	quit "60219^29253^Sethy, Satyanarayan^3486"	// Signature - LTD^TIME^USER^SIZE
