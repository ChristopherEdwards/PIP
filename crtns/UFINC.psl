UFINC		// Financial Calculation Utilities
	/*
	       ORIG:  HARDY - 15 JUN 1992
	
	  -----------------------------------------------------------------------
	   Throughout the IBS system, financial calculations are made to
	   determine term, payment, rate or balance data surrounding an account.
	
	   The goal of these calculations is to determine an unknown account
	   value, using current account data.
	
	   The general formula used to make these calculations is:
	
	                          _               _
	                         |             -n  |                  -n
	         0 = PV + (PMT * |  1 - (1 + i)    | ) + (FV * (1 + i)  )
	                         | --------------- |
	                         |_      i        _|
	
	     where:  PV  = The loan amount
	             PMT = The periodic payment
	             i   = The periodic nominal interest rate
	             FV  = The balloon balance
	             n   = The number of periodic payments
	
	   This general formula is simplified into four separate formulas:
	
	   1)  General formula to calculate P+I payment:
	
	                                      -n               -n
	              PMT = PV + (-FV x (1 + i) ) / (1 - (1 + i) / i )
	
	   2)  General formula to calculate Present Value:
	
	                                     -n                    -n
	               PV = PMT x (1 - (1 + i) / i ) + (FV x (1 + i) )
	
	   3)  General formula to calculate Future Value:
	
	                                      n                    n
	               FV = PMT x (1 - (1 + i) / i) + (PV x (1 + i) )
	
	       or, if PMT is unknown:
	                                 n
	               FV = (PV x (1 + i) )
	
	   4)  General formula to calculate Term:
	
	                     log (PMT - (i * FV) / (PMT - (i * PV)))
	                n = -----------------------------------------
	                                  log (1 + i)
	
	   Note there is no formula to compute a nominal interest rate.  The only
	   means available is through an iterative calculation.
	
	    LIBRARY:  . $$PI     - Compute iterated P&I payment based
	                           upon value of IACM
	              . $$NPI    - Compute iterated number of payments based
	                           upon value of IACM.  Returns whole number.
	              . $$PVI    - Compute iterated present value based
	                           upon value of IACM
	              . $$FVA    - This utility will compute the future value of
	                           a series of payments based upon IACM.
	              . $$FVAS   - This utility will compute the future value of
	                           a series of payments based upon IACM where the
	                           payment and interest compounding frequencies
	                           are different.
	              . $$TRM    - Compute number of payments based on date
	                           amortization begins and term.
	              . $$NP     - Standard formula to compute number of payments
	              . $$PMT    - Standard formula to compute P&I
	              . $$PV     - Standard formula to compute Present Value
	              . $$FV     - Standard formula to compute Future Value
	              . $$IRNS   - Standard formula to compute interest rate
	                           where PMT,FV,PV and n are defined.
	                           Additionally will compute the value of IRN
	                           based upon IACM if CTL=1.
	              . AMO      - Standard Interest Method Amortization Utility
	
	---- Revision History -------------------------------------------------

	08/02/06 - KELLYP - CR 22048
		   Modified multiple sections to eliminate PRECEDENCE warnings.

	03/16/06 - S.Krishnan - 17985
		   Modified "do IRNS1" at the end of the IRNS section to 
	           "set IRN=$$IRNS1()" and also modified the label of the
	           section IRNS1 to IRNS1().

	02/02/06 - S.Krishnan - 16885
		 . The sections NEWT, UPI and BI are made as private.
		 . In the section ITERNPI and IRNS1, modified the a typo in the
		   code("quit" which is used as a variable name instead of "QUIT")
		    
	05/16/05 - KinI - 15524
		   Modified PVI section to include the call to ITERPVI section
		   in order to return PVX value.	

	12/30/03 - CARROLLJ - CR7658
		   Added #ACCEPT prior to setting %SystemDate.

	10/21/02 - ScottC - 43583
		   Clean up PSL after code review.
	
	12/04/01 - ARCILLAZ - 43583
		   Converted to PSL. Removed old revision history.
	----------------------------------------------------------------------
	*/
	quit

public	NP(PV,IR,PMT,FV,AF)	
	/*
	Standard formula to compute number of payments
	
	                     log (PMT - (i * FV) / (PMT - (i * PV)))
	                n = -----------------------------------------
	                                  log (1 + i)
	
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . PV        Present Value                /TYP=$/REQ/MECH=VAL
	                   This could be the loan amount, or if odd-days
	                   interest is capitalized, this would be the loan
	                   amount plus odd-days.
	
	       . IR        Nominal Interest Rate        /TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . PMT       Payment Amount               /TYP=$/REQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . FV        Future Value                 /TYP=$/NOREQ/MECH=VAL
	                   This could be a loan's balloon balance.
	
	       . AF        Loan Payment Annual Factor   /TYP=N/NOREQ/MECH=VAL
	                   Specifies the number of times per year that payments
	                   are made.  Optional value.  If not defined, the
	                   incoming value of the interest rate is considered to
	                   already have been reduced to its periodic value.
	
	   INPUTS:
	       . PV,IR,PMT,FV,AF as specified above.
	
	   RETURNS:
	       . $$  Unjustified value of the number of payments.
	   
	*/

	// Exclude error conditions
	if '$G(PMT) quit 0
	
	set AF=$G(AF)
	set FV=$G(FV)
	
	// Zero interest rate.  Set NP equal to one PMTth of the loan amount.
	if '$G(IR) quit (PV-FV)/PMT
	
	new B,I,P,T
	
	set I=IR/100
	if AF set I=I/AF
	
	set P=PMT-(I*PV)
	if P'>0 quit 0
	
	set P=(PMT-(I*FV))/P

	if P<0 quit 0
	if P<(1/1E38) quit 0
	
	set T=$$LNX^%ZFUNC(P)
	set B=$$LNX^%ZFUNC(1+I)
	
	if 'B quit 0
	
	quit T/B
	
public	PMT(PV,IR,NP,AF,FV)
	/*
	   Standard formula to compute P&I	
	                                      -n               -n
	              PMT = PV + (-FV x (1 + i) ) / (1 - (1 + i) / i )
	
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . PV        Present Value                /TYP=$/REQ/MECH=VAL
	                   This could be the loan amount, or if odd-days
	                   interest is capitalized, this would be the loan
	                   amount plus odd-days.
	
	       . IR        Nominal Interest Rate        /TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . NP        Number of Payments           /TYP=N/REQ/MECH=VAL
	
	       . FV        Future Value                 /TYP=$/NOREQ/MECH=VAL
	                   This could be a loan's balloon balance.
	
	       . AF        Loan Payment Annual Factor   /TYP=N/NOREQ/MECH=VAL
	                   Specifies the number of times per year that payments
	                   are made.  Optional value.  If not defined, the
	                   incoming value of the interest rate is considered to
	                   already have been reduced to its periodic value.
	
	   INPUTS:
	       . PV,IR,NP,FV,AF as specified above.
	
	   RETURNS:
	       . $$  Unjustified value of the P&I payment.
	*/

	set PV=$G(PV)
	set FV=$G(FV)
	
	// No change in balance equals a zero payment.
	if PV-FV=0 quit 0
	
	new E,I,P,X
	
	// Exclude error conditions
	if '$G(NP) quit 0
	
	// Zero interest rate.  Set payment equal to one NPth of the net
	// principal reduction.
	if '$G(IR) set P=(PV-FV)/NP quit P
	
	set AF=AF.get()
	
	set I=IR/100
	if AF set I=I/AF
	set X=1/(1+I)
	
	if X<(1/1E38) quit 0
	set X=$$LNX^%ZFUNC(X)*NP

	if X>88 quit 0
	set E=$$EXP^%ZFUNC(X)

	quit (PV+(-FV*E))/((1-E)/I)
	

public	PV(FV,IR,NP,PMT,AF)	// Standard formula to compute Present Value
	/*
	
	                                     -n                    -n
	               PV = PMT x (1 - (1 + i) / i ) + (FV x (1 + i) )
	
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . FV        Future Value                 /TYP=$/REQ/MECH=VAL
	                   This could be a loan's balloon balance.
	
	       . IR        Nominal Interest Rate        /TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . NP        Number of Payments           /TYP=N/REQ/MECH=VAL
	
	       . PMT       Payment Amount               /TYP=$/NOREQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . AF        Loan Payment Annual Factor   /TYP=N/NOREQ/MECH=VAL
	                   Specifies the number of times per year that payments
	                   are made.  Optional value.  If not defined, the
	                   incoming value of the interest rate is considered to
	                   already have been reduced to its periodic value.
	
	   INPUTS:
	       . FV,IR,NP,PMT,AF as specified above.
	
	   RETURNS:
	       . $$  Unjustified value of the loan amount.
	*/

	set AF=$G(AF)
	set PMT=$G(PMT)
	
	// Zero interest rate - the PV must be the sum of the future value and
	// the payment stream.
	if '$G(IR) quit FV+(NP*PMT)
	
	new E,I,X
	
	set I=IR/100

	if AF set I=I/AF
	if (1+I)<(1/1E38) quit 0

	set X=$$LNX^%ZFUNC((1+I))
	if X>88 quit 0

	set E=$$EXP^%ZFUNC(X*-NP)

	quit PMT*((1-E)/I)+(FV*E)
	

public	FV(PV,IR,NP,PMT,AF)	// Standard formula to compute Future Value
	/*
	                                      n                    n
	               FV = PMT x (1 - (1 + i) / i) + (PV x (1 + i) )
	
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . PV        Present Value                /TYP=$/REQ/MECH=VAL
	                   This could be the loan amount, or if odd-days
	                   interest is capitalized, this would be the loan
	                   amount plus odd-days.
	
	       . IR        Nominal Interest Rate        /TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . NP        Number of Payments           /TYP=N/REQ/MECH=VAL
	
	       . PMT       Payment Amount               /TYP=$/NOREQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . AF        Loan Payment Annual Factor   /TYP=N/NOREQ/MECH=VAL
	                   Specifies the number of times per year that payments
	                   are made.  Optional value.  If not defined, the
	                   incoming value of the interest rate is considered to
	                   already have been reduced to its periodic value.
	
	   INPUTS:
	       . PV,IR,NP,PMT,AF as specified above.
	
	   RETURNS:
	       . $$  Unjustified value of the future value.
	
	   No term means that the FV is equal to the PV.
	*/

	if '$G(NP) quit PV
	
	set PMT=$G(PMT)
	
	// Zero interest rate.  FV must be the remainder of the PV after the
	// payment stream has been applied.
	if 'IR quit PV-(NP*PMT)
	
	set AF=$G(AF)
	
	new E,I,X
	
	set I=IR/100

	if AF set I=I/AF
	if (1+I)<(1/1E38) quit 0

	set X=$$LNX^%ZFUNC(1+I)*NP
	if X>88 quit 0

	set E=$$EXP^%ZFUNC(X)

	quit (((1-E)/I)*PMT)+(PV*E)
	

public	IRNS(PV,NP,PMT,FV,AF,CTL,AMODT,IACM,FRE,OIACM)	
	/*
	   Standard and iterated formulas to compute interest rate where PMT,FV,PV and n
	   are defined.  Will compute IRN based on IACM if CTL=1.
	  ----------------------------------------------------------------------
	
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . PV        Present Value                /TYP=$/REQ/MECH=VAL
	                   This could be the loan amount, or if odd-days
	                   interest is capitalized, this would be the loan
	                   amount plus odd-days.
	
	       . NP        Number of Payments           /TYP=N/REQ/MECH=VAL
	
	       . PMT       Payment Amount               /TYP=$/NOREQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . FV        Future Value                 /TYP=$/NOREQ/MECH=VAL
	                   This could be a loan's balloon balance.
	
	       . AF        Loan Payment Annual Factor   /TYP=N/NOREQ/MECH=VAL
	                   Specifies the number of times per year that payments
	                   are made.  Optional value.  If not defined, the
	                   incoming value of the interest rate is considered to
	                   already have been reduced to its periodic value.
	                   Required if $E(CTL)=1.
	
	       . CTL       Control Parameter            /TYP=T/NOREQ/MECH=VAL
	
	                   Position 1 - Payment Calculation
	                                0 = Standard Calculation
	                                1 = IRN based in IACM
	                   Position 2 - Capitalize Odd Days Interest
	                                0 = Do not capitalize
	                                1 = Capitalize
	                   Position 3 - Is odd period
	                                0 = Full first period
	                                1 = Short first period
	
	       . AMODT     Date Amortization Begins     /TYP=D/NOREQ/MECH=VAL
	                   The date for which the first payment's interest
	                   begins to accrue.  For example, a loan with a payment
	                   frequency of 1MA1 with a first due date of 6/1/yy
	                   would have an AMODT of 5/1/yy, assuming that interest
	                   was computed in arrears.  (AMODT would be 6/1/yy if
	                   interest was computed in advance.).  Required if
	                   $E(CTL)=1.
	
	       . IACM      Interest Accrual Calc Method /TYP=T/NOREQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the periods over which the interest is to
	                   be calculated.  Required if $E(CTL)=1.
	
	       . OIACM     Odd Period IACM              /TYP=T/NOREQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the method that interest for the inital odd
	                   period of the loan is to be calculated.  If not
	                   specified, IACM will be used.
	
	       . FRE       Loan Payment Frequency       /TYP=F/NOREQ/MECH=VAL
	                   Specifies how often the loan's payments are due,
	                   expressed using standard IBS frequency syntax (e.g.,
	                   1YA1, 6MN1, 14DA).  Required if $E(CTL)=1 and AF is
	                   not defined.
	
	   INPUTS:
	       . PV,FV,NP,PMT,AF,CTL,AMODT,IACM,FRE as specified above.
	
	   RETURNS:
	       . $$        Unjustified value of the interest rate.      /TYP=$
	
	       . ER        Error flag (0=No Error, 1=Error Encountered) /TYP=N
	
	       . SVFRE     This is an array keyed by frequency and date which is
	                   defined by ^UFRE.  This will be returned if $E(CTL)=1.
	*/

	set AF=$G(AF)
	
	set PMT=$G(PMT)
	if 'PMT quit 0
	
	set ER=0
	
	set FV=$G(FV)
	set OIACM=$G(OIACM)
	
	new P1,P2

	set P1=+$E($G(CTL))
	set P2=+$E($G(CTL),2)
	set P3=+$E($G(CTL),3)
	
	// Iterative calculations require the following.  Quit if any are
	// missing.
	if P1 do { if ER quit 0

		set AMODT=$G(AMODT) if AMODT="" set ER=1 quit 
		set IACM=$G(IACM) if IACM="" set ER=1 quit 
		set FRE=$G(FRE) if FRE="" set ER=1 quit 

		if AF='"" quit 

		new X

		set X=$$NJD^UFRE(+%CurrentDate,FRE,.AF) quit:ER 

		}
	
	new A,ANS,CNTR,E,I,INEW,IOLD,MARGIN,PMT1

	set (CNTR,ER,IOLD)=0
	set INEW=10                            
	set MARGIN=1/210
	set IRN=$$IRNS1()

	quit IRN
	

IRNS1()	// Iteration  
	/* 
	   To determine rate we will compute a payment (PMT1) based
	   upon our interest rate "guess".  This is then compared to the value
	   of PMT to determine how close we are.  When the difference between
	   PMT and PMT1 is within the value of MARGIN then we have successfully
	   calculated the interest rate.
	
	   If we're basing our calculation on IACM, then we'll calculate PMT1
	   using the PI utility.
	*/
	new QUIT
	set QUIT=0

	for  do { quit:QUIT

		if 'P1 set PMT1=$$PMT(PV,INEW,NP,AF,FV)
		if P1 set PMT1=$$PI(PV,INEW,NP,0,AMODT,IACM,FRE,OIACM,AF,P2_P3)
	
		/*
		The ANS array represents the iterated rates computed on each pass, E
		contains the error in the calculation (in this case the difference	
		between the stated and the computed payment amounts.
		*/
		set ANS(CNTR)=INEW set E(CNTR)=PMT1-PMT
		
		// If the error falls within tolerance, then we're done.
		if E(CNTR)<MARGIN,E(CNTR)>-MARGIN set QUIT=1 quit
		
		/*
		If the error (in this case the difference in payment amounts) is the
		same over two passes, then it's time to quit because we'll probably
		never get any closer.
		*/
		if CNTR>0,'(E(CNTR)-E(CNTR-1)) set QUIT=1 quit
		
		set CNTR=CNTR+1
	
		// Newton's method for guesses 3 through n.
		if CNTR>1 set INEW=$$NEWT(.ANS,.E,CNTR) quit
		
		// Use Bisection method for the second guess.
		set INEW=$$BI(INEW,IOLD)
		}
	
	quit INEW

public	PVI(PMT,IRN,AMBAS,FV,AMODT,IACM,FRE,OIACM,AF,CTL,TRM,LDD)	
	/*
	   Compute iterated present value based upon value of IACM
	  ----------------------------------------------------------------------
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . PMT       Payment Amount               /TYP=$/REQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . IRN       Nominal Interest Rate        /TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . AMBAS     Number of Payments           /TYP=N/NOREQ/MECH=VAL
	                   The loan's amortization term.  Will be computed from
	                   TRM if not defined.
	
	       . FV        Future Value                 /TYP=$/REQ/MECH=VAL
	                   This could be a loan's balloon balance.
	
	       . AMODT     Date Amortization Begins     /TYP=D/REQ/MECH=VAL
	                   The date for which the first payment's interest
	                   begins to accrue.  For example, a loan with a payment
	                   frequency of 1MA1 with a first due date of 6/1/yy
	                   would have an AMODT of 5/1/yy, assuming that interest
	                   was computed in arrears.  (AMODT would be 6/1/yy if
	                   interest was computed in advance.)
	
	       . IACM      Interest Accrual Calc Method /TYP=T/REQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the periods over which the interest is to
	                   be calculated.
	
	       . FRE       Loan Payment Frequency       /TYP=F/REQ/MECH=VAL
	                   Specifies how often the loan's payments are due,
	                   expressed using standard IBS frequency syntax (e.g.,
	                   1YA1, 6MN1, 14DA)
	
	       . OIACM     Odd Period IACM              /TYP=T/NOREQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the method that interest for the inital odd
	                   period of the loan is to be calculated.  If not
	                   specified, IACM will be used.
	
	       . AF        Loan Payment Annual Factor   /TYP=N/NOREQ/MECH=VAL
	                   Specifies the number of times per year that FRE
	                   occurs.
	
	       . CTL       Control Parameter            /TYP=T/NOREQ/MECH=VAL
	
	                   Position 1 - Capitalize Odd Days Interest
	                                0 = Do not capitalize
	                                1 = Capitalize
	                   Position 2 - Is odd period:
	                                0 = Full first period
	                                1 = Short first period
	                   Position 3 - Compounding
	                                0 = Do not consider compounding of int
	                                1 = Consider compounding
	
	       . TRM       Loan Term                    /TYP=T/NOREQ/MECH=VAL
	                   The loan's amortization term, expressed using standard
	                   IBS term syntax (e.g., 30Y, 6M, 182D).  Required if
	                   AMBAS is not defined.
	
	       . LDD       Last Due Date                /TYP=D/NOREQ/MECH=VAL
	                   The last payment due date in the amortization.  This
	                   is used by the yield calculator to perform successive
	                   calculations based on IACM.
	
	   INPUTS:
	       . PMT,IRN,TRM,AMODT,IACM,FRE,AMBAS,AF as specified above.
	
	   RETURNS:
	       . $$        Unjustified value of the present value.      /TYP=$
	
	       . ER        Error flag (0=No Error, 1=Error Encountered) /TYP=N
	
	       . SVFRE     This is an array keyed by frequency and date which is
	                   defined by ^UFRE.
	*/

	new A,ANS,CNTR,E,EXP,FVX,IR,IRX,MARGIN,P,PVX,PVN,X
	
	set ER=0
	set OIACM=$G(OIACM)
	
	if $G(FRE)="" quit 0
	if $G(AF)="" set X=$$NJD^UFRE(+%CurrentDate,FRE,.AF) 
	if ER quit 0
	
	// Compute an AMBAS
	if $G(AMBAS)="" do { 
		if $G(TRM)="" set ER=1 quit 
		set AMBAS=$$TRM(AMODT,TRM,AF)
		}
	if ER quit 0
	
	// Compute an estimated present value based upon the nominal interest rate.
	set PVN=$$PV(FV,IRN,AMBAS,PMT,AF)
	
	// Compute adjusted interest rate to make a "guess" present value.
	set IRX=$$IRN(IRN,IACM)
	if IRX=IRN set IRX=IRN*1.1

	/*
	Define what the present value should be based on our adjusted
	interest rate.  This will give us an excellent basis to make our
	second guess of PVX.
	*/
	set PVX=$$PV(FV,IRX,AMBAS,PMT,AF)
	
	// Define MARGIN for error.
	set MARGIN=.005
	set CNTR=0
	set CTL=CTL_$E("000",$L(CTL)+1,3)
	set CTL=$E(CTL)_0_$E(CTL,3)_$E(CTL,2)

	set PVX=$$ITERPVI()

	quit PVX


ITERPVI()
	
	/* 
	   Iteration.  To determine rate we will compute a future value (FVX)	
	   based upon our present value "guess".  When FVX is within the value
	   of MARGIN then we have successfully calculated the present value.
	
	   Compute the future value for this present value.  Note that the
	   expected future value (FV) is subtracted.
	*/
	new QUIT
	set QUIT=0

	for  do { quit:QUIT
		set FVX=$$FVA(PVX,IRN,PMT,AMBAS,AMODT,IACM,FRE,OIACM,.LDD,CTL)-FV 
		if ER quit 0
	
		/*
		ANS array tracks the future value for each iteration; E tracks the
		error, where FVX > or < zero is the error (because FVX = zero is our
		goal).
		*/
		set ANS(CNTR)=PVX
		set E(CNTR)=FVX
		
		// The answer falls within the margin for error.  We're done.
		if E(CNTR)<MARGIN,E(CNTR)>-MARGIN set QUIT=1 quit
		
		/*
		CNTR is the number of iterations.  99.99% of all calculations should
		be within 10 iterations, we'll decrease accuracy by a factor of 10	
		for each 10 iterations, but 20 is the maximum.
		*/
		set CNTR=CNTR+1
		if CNTR#10=0 set MARGIN=MARGIN*10
		if CNTR#20=0 quit
		
		// If the error (in this case FVX) is the same over two passes, then it's
		// time to quit because we'll probably never get any closer.
		if CNTR>1,E(CNTR-1)-E(CNTR-2)=0 set QUIT=1 quit
	
		// Newton's iterative method for guesses 3 through n.
		if CNTR>1 set PVX=$$NEWT(.ANS,.E,CNTR) quit
				
	
		// Bisection method must be used for the second "guess".
		set PVX=$$BI(PVX,PVN)
		}

	quit PVX


public	NPI(PMT,IRN,PV,FV,AMODT,IACM,FRE,OIACM,AF,CTL,LDD)	
	/*
	   Compute iterated number of payments based upon value of IACM.
	  ----------------------------------------------------------------------
	
	   This function will return a whole number vs. an unjustified term.
	   This is because an integral portion of the computation is to run an
	   amortization to confirm the iterated guesses.  Because an amortization
	   only runs for a whole number of times, any decimalized answer would
	   be incorrect.
	
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . PMT       Payment Amount               /TYP=$/REQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . IRN       Nominal Interest Rate        /TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . PV        Present Value                /TYP=$/REQ/MECH=VAL
	                   This could be the loan amount, or if odd-days
	                   interest is capitalized, this would be the loan
	                   amount plus odd-days.
	
	       . FV        Future Value                 /TYP=$/REQ/MECH=VAL
	                   This could be a loan's balloon balance.
	
	       . AMODT     Date Amortization Begins     /TYP=D/REQ/MECH=VAL
	                   The date for which the first payment's interest
	                   begins to accrue.  For example, a loan with a payment
	                   frequency of 1MA1 with a first due date of 6/1/yy
	                   would have an AMODT of 5/1/yy, assuming that interest
	                   was computed in arrears.  (AMODT would be 6/1/yy if
	                   interest was computed in advance.)
	
	       . IACM      Interest Accrual Calc Method /TYP=T/REQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the periods over which the interest is to
	                   be calculated.
	
	       . FRE       Loan Payment Frequency       /TYP=F/REQ/MECH=VAL
	                   Specifies how often the loan's payments are due,
	                   expressed using standard IBS frequency syntax (e.g.,
	                   1YA1, 6MN1, 14DA)
	
	       . OIACM     Odd Period IACM              /TYP=T/NOREQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the method that interest for the inital odd
	                   period of the loan is to be calculated.  If not
	                   specified, IACM will be used.
	
	       . AF        Loan Payment Annual Factor   /TYP=N/NOREQ/MECH=VAL
	                   Specifies the number of times per year that FRE
	                   occurs.
	
	       . CTL       Control Parameter            /TYP=T/NOREQ/MECH=VAL
	
	                   Position 1 - Capitalize Odd Days Interest
	                                0 = Do not capitalize
	                                1 = Capitalize
	                   Position 2 - Is odd period:
	                                0 = Full first period
	                                1 = Short first period
	
	       . LDD       Last Due Date                /TYP=D/NOREQ/MECH=VAL
	                   The last payment due date in the amortization.  This
	                   is used by the yield calculator to perform successive
	                   calculations based on IACM.
	
	   INPUTS:
	       . PV,IRN,PV,FV,AMODT,IACM,FRE,AF as specified above.
	
	   RETURNS:
	       . $$        The whole number value of the number of       /TYP=N
	                   payments.
	
	       . ER        Error flag (0=No Error, 1=Error Encountered)  /TYP=N
	
	       . SVFRE     This is an array keyed by frequency and date which is
	                   defined by ^UFRE.
	*/

	new A,ANS,CNTR,E,EX,FVX,IRX,MARGIN,P,NPN,NPX,X
	
	set ER=0
	
	if $G(FRE)="" set ER=1 quit 0
	
	if $G(AF)="" set X=$$NJD^UFRE(+%CurrentDate,FRE,.AF)
	if ER quit 0
	
	set OIACM=$G(OIACM)
	set CTL=$G(CTL)
	
	// Define what the value should be.  This will give us an
	// excellent basis to make our second guess of FVX.
	set NPN=$$NP(PV,IRN,PMT,FV,AF)-1       
	
	// Compute adjusted interest rate to make a "guess" number of payments.
	set IRX=$$IRN(IRN,IACM)
	if IRX=IRN set IRX=IRN+.01
	
	// Compute an estimated number of payments based upon the adjusted
	// interest rate.
	set NPX=$$NP(PV,IRX,PMT,FV,AF)+1       
	
	// Define MARGIN.
	set MARGIN=PV/10000000
	set CNTR=0
	set CTL=$E(CTL)_"00"_$E(CTL,2)

	quit

ITERNPI	// Iteration
	/*
	   To determine the number of payments we will compute a
	   future value (FVX) based upon our number of payments "guess".
	   When FVX is within the value of MARGIN then we have successfully
	   calculated the number of payments.
	
	   Compute the future value for this number of payments.  Note that the
	   expected future value (FV) is subtracted.
	*/
	new QUIT
	set QUIT=0

	for  do { quit:QUIT

		set FVX=$$FVA(PV,IRN,PMT,NPX,AMODT,IACM,FRE,OIACM,.LDD,CTL)-FV
		if ER quit 0
	
		/*
		ANS array tracks the number of payments for each iteration; E tracks
		the error, where FVX > or < zero is the error (because FVX = zero is
		our goal).
		*/
		set ANS(CNTR)=NPX
		set E(CNTR)=FVX
		
		// The answer falls within the margin for error.
		if E(CNTR)<MARGIN,E(CNTR)>-MARGIN set QUIT=1 quit
	
		/*
		CNTR is the number of iterations.  99.99% of all calculations should
		be within 10 iterations, we'll decrease accuracy by a factor of 10
		for each 10 iterations, but 20 is the maximum.
		*/
		set CNTR=CNTR+1
		if CNTR#10=0 set MARGIN=MARGIN*10 if CNTR#20=0 set QUIT=1 quit
	
		// If the error (in this case FVX) is the same over two passes, then it's
		// time to quit because we'll probably never get any closer.
		if CNTR>1,E(CNTR-1)-E(CNTR-2)=0 set QUIT=1 quit
	
		// Newton's iterative method for guesses 3 through n.
		if CNTR>1 set NPX=$$NEWT(.ANS,.E,CNTR) quit
	
		// Bisection method must be used for the second "guess".
		set NPX=$$BI(NPX,NPN)
		}

	quit NPX/1
	
public	PI(PV,IRN,AMBAS,FV,AMODT,IACM,FRE,OIACM,AF,CTL,TRM,LDD)	
	/*
	   Compute iterated P&I payment based upon value of IACM.
	  ----------------------------------------------------------------------
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . PV        Present Value                /TYP=$/REQ/MECH=VAL
	                   This could be the loan amount, or if odd-days
	                   interest is capitalized, this would be the loan
	                   amount plus odd-days.
	
	       . IRN       Nominal Interest Rate        /TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . AMBAS     Number of Payments           /TYP=N/NOREQ/MECH=VAL
	                   The loan's amortization term.  Will be computed from
	                   TRM if not defined.
	
	       . FV        Future Value                 /TYP=$/NOREQ/MECH=VAL
	                   This could be a loan's balloon balance.
	
	       . AMODT     Date Amortization Begins     /TYP=D/REQ/MECH=VAL
	                   The date for which the first payment's interest
	                   begins to accrue.  For example, a loan with a payment
	                   frequency of 1MA1 with a first due date of 6/1/yy
	                   would have an AMODT of 5/1/yy, assuming that interest
	                   was computed in arrears.  (AMODT would be 6/1/yy if
	                   interest was computed in advance.)
	
	       . IACM      Interest Accrual Calc Method /TYP=T/REQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the periods over which the interest is to
	                   be calculated.
	
	       . FRE       Loan Payment Frequency       /TYP=F/REQ/MECH=VAL
	                   Specifies how often the loan's payments are due,
	                   expressed using standard IBS frequency syntax (e.g.,
	                   1YA1, 6MN1, 14DA)
	
	       . OIACM     Odd Period IACM              /TYP=T/NOREQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the method that interest for the inital odd
	                   period of the loan is to be calculated.  If not
	                   specified, IACM will be used.
	
	       . AF        Loan Payment Annual Factor   /TYP=N/NOREQ/MECH=VAL
	                   Specifies the number of times per year that FRE
	                   occurs.
	
	       . CTL       Control Parameter            /TYP=T/NOREQ/MECH=VAL
	
	                   Position 1 - Capitalize Odd Days Interest
	                                0 = Do not capitalize
	                                1 = Capitalize
	                   Position 2 - Is odd period:
	                                0 = Full first period
	                                1 = Short first period
	
	       . TRM       Loan Term                    /TYP=T/NOREQ/MECH=VAL
	                   The loan's amortization term, expressed using standard
	                   IBS term syntax (e.g., 30Y, 6M, 182D).  Required if
	                   AMBAS is not defined.
	
	       . LDD       Last Due Date                /TYP=D/NOREQ/MECH=VAL
	                   The last payment due date in the amortization.  This
	                   is used by the yield calculator to perform successive
	                   calculations based on IACM.
	
	   INPUTS:
	       . PV,IRN,TRM,AMODT,IACM,FRE,AF,CTL,AMBAS as specified above.
	
	   RETURNS:
	       . $$        Unjustified value of the P&I payment.        /TYP=$
	
	       . ER        Error flag (0=No Error, 1=Error Encountered) /TYP=N
	
	       . SVFRE     This is an array keyed by frequency and date which is
	                   defined by ^UFRE.
	*/

	new A,ANS,CNTR,E,EX,EXP,FVX,IR,IRX,MARGIN,P,PMTX,PMTN,X
	
	set ER=0
	set CTL=$G(CTL)
	set OIACM=$G(OIACM)
	
	if $G(FRE)="" set ER=1 quit 0
	if $G(AF)="" set X=$$NJD^UFRE(+%CurrentDate,FRE,.AF) if ER quit 0
	
	set FV=$G(FV)
	
	// Compute an AMBAS
	if $G(AMBAS)="" do { if ER quit 0
		if $G(TRM)="" set ER=1 quit 
		set AMBAS=$$TRM(AMODT,TRM,AF)
		}
	
	// Define what the normal payment should be.  This will give us an
	// excellent basis to make our second guess of PMTX.
	set PMTN=$$PMT(PV,IRN,AMBAS,AF,FV)
	
	// Compute adjusted interest rate to make a "guess" P&I.
	set IRX=$$IRN(IRN,IACM)
	if IRX=IRN set IRX=IRN*1.1
	
	// Compute an estimated P&I based upon the adjusted interest rate.
	set PMTX=$$PMT(PV,IRX,AMBAS,AF,FV)
	
	// Define parameters for iteration.  MARGIN should allow each payment
	// to be up to 1/2 cent too high (or low).
	set MARGIN=((AMBAS-1)/100)/2
	set (CNTR,EX)=0
	set CTL=$E(CTL)_"00"_$E(CTL,2)


	// Iterate the correct P&I amount. Compute the future value for this 
	// P&I.  Note that the expected future value (FV) is subtracted.
	new QUIT
	set QUIT=0
	
	for  do { quit:QUIT

		set FVX=$$FVA(PV,IRN,PMTX,AMBAS,AMODT,IACM,FRE,OIACM,.LDD,CTL)-FV if ER set QUIT=1,PMTX=0 quit
				
		// The answer falls within the margin for error.
		if FVX<MARGIN,FVX>-MARGIN set QUIT=1 quit
	
		// ANS array tracks payments for each iteration; E tracks the error,
		// where FVX > or < zero is the error (because FVX = zero is our goal).
		set ANS(CNTR)=PMTX
		set E(CNTR)=FVX
	
		/*
		CNTR is the number of iterations.  99.99% of all calculations should
		be within 10 iterations, we'll decrease accuracy by a factor of 10
		for each 10 iterations, but 20 is the maximum.
		*/
		set CNTR=CNTR+1
		if CNTR#10=0 set MARGIN=MARGIN*10 
		if CNTR#20=0 set QUIT=1 quit
	
		/*
		If the error (in this case FV) is the same over two passes, then it's
		time to quit because we'll probably never get any closer.  Also,
		check to see if the remainder (FVX) is positive.  If it is then we
		will actually have a larger last payment - it should be less.  Add
		.01 to the payment to try to resolve.  Allow only three more tries.
		*/
		if CNTR>1,E(CNTR-1)-E(CNTR-2)=0 do { set QUIT=1 quit
			if FVX<0 set EX=3 quit 
			set EX=EX+1
			if EX>1 quit
			if EX<3 quit 
			set PMTX=PMTX+.01
			}
	
		// Newton's iterative method for guesses 3 through n.
		if CNTR>1 set PMTX=$$NEWT(.ANS,.E,CNTR) quit
	
		// Bisection method must be used for the second "guess".
		set PMTX=$$BI(PMTX,PMTN)
		}
			
	quit PMTX

public	FVA(PV,IRN,PMT,AMBAS,AMODT,IACM,FRE,OIACM,LDD,CTL)	
	/*
	  Run an amortization schedule for this PMT.
	  ----------------------------------------------------------------------
	
	   This utility takes an amount (PV) and, based upon true interest
	   amounts computed on actual dates, amortizes the annuity.
	
	   KEYWORDS: Calculations, Loans, Interest, Math
	
	   ARGUMENTS:
	       . PV        Present Value                /TYP=$/REQ/MECH=VAL
	                   This could be the loan amount, or if odd-days
	                   interest is capitalized, this would be the loan
	                   amount plus odd-days.
	
	       . IRN       Nominal Interest Rate        /TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . AMBAS     Number of Payments           /TYP=N/REQ/MECH=VAL
	                   The loan's amortization term.
	
	       . IACM      Interest Accrual Calc Method /TYP=T/REQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the periods over which the interest is to
	                   be calculated.
	
	       . PMT       Payment Amount               /TYP=$/REQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . AMODT     Date Amortization Begins     /TYP=D/REQ/MECH=VAL
	                   The date for which the first payment's interest
	                   begins to accrue.  For example, a loan with a payment
	                   frequency of 1MA1 with a first due date of 6/1/yy
	                   would have an AMODT of 5/1/yy, assuming that interest
	                   was computed in arrears.  (AMODT would be 6/1/yy if
	                   interest was computed in advance.)
	
	       . FRE       Loan Payment Frequency       /TYP=F/REQ/MECH=VAL
	                   Specifies how often the loan's payments are due,
	                   expressed using standard IBS frequency syntax (e.g.,
	                   1YA1, 6MN1, 14DA)
	
	       . OIACM     Odd Period IACM              /TYP=T/NOREQ/MECH=VAL
	                   The value from the IBS system table "IACML" which
	                   specifies the method that interest for the inital odd
	                   period of the loan is to be calculated.  If not
	                   specified, IACM will be used.
	
	       . LDD       Last Due Date                /TYP=D/NOREQ/MECH=VAL
	                   The last payment due date in the amortization.  This
	                   is used by the yield calculator to perform successive
	                   calculations based on IACM.
	
	       . CTL       Control Parameter            /TYP=T/NOREQ/MECH=VAL
	
	                   Position 1 - Capitalize Odd Days Interest
	                                0 = Do not capitalize
	                                1 = Capitalize
	
	                   Position 2 - Internal P&I Rounding
	                                0 = Do not round (default)
	                                1 = Round P&I up in iterative
	                                    amortizations
	                                2 = Round P&I down in iterative
	                                    amortizations
	                                3 = Round P&I to the nearest 2 decimal
	                                    places in iterative amortizations
	
	                   Position 3 - Compounding
	                                0 = Do not consider compounding of int
	                                1 = Consider compounding
	
	                   Position 4 - Is odd period:
	                                0 = Full first period
	                                1 = Short first period
	
	                   Position 5 - Retain Schedule
	                                0 = Do not save payment details.
	                                1 = Build AMO array to save transaction
	                                    details
	
	   INPUTS:
	       . PV,IRN,AMBAS,IACM,AMODT,PMT,FRE,CTL as specified above.
	
	   RETURNS:
	       . $$        Future value of the P&I payment.             /TYP=$
	
	       . ER        Error flag (0=No Error, 1=Error Encountered) /TYP=N
	
	       . SVFRE     This is an array keyed by frequency and date which is
	                   defined by ^UFRE.
	
	       . AMO       This array contains the details of the amortization
	                   and is returned if $E(CTL,3) is set.
	
	                   The top level values of AMO are:
	
	                          Piece 1 = Original PV
	                                2 = Odd Days Interest
	                                3 = Final Payment
	                                4 = Total of Payments
	                                5 = Total Interest
	
	                   The individual array elements are keyed by payment
	                   number.  Each contains:
	
	                          Piece 1 = Principal Payment
	                                2 = Interest Payment
	                                3 = Principal Balance (after payment)
	                                4 = Payment's Last Due Date
	                                5 = Payment's Due Date
	*/

	new ACR,AF,I,INT,JD,LD,ND,NJD,NP,P1,P2,P3,P4,P5,PR,TI,TP
	
	set (ACR,ER,TI,TP)=0
	set CTL=$G(CTL)
	set P1=$E(CTL)
	set P2=$E(CTL,2)
	set P3=$E(CTL,3)
	set P4=$E(CTL,4)
	set P5=$E(CTL,5)
	
	if P5 do {
		kill AMO
		set AMO=PV
		}
	
	// Determine rounding
	if P2 do {
		if P2=1 set PMT=$$^SCARND(PMT+.005,0,"","",2)
		else  if P2=2 set PMT=$$^SCARND(PMT-.005,0,"","",2)
		else  if P2=3 set PMT=$$^SCARND(PMT,0,"","",2)
		}
	
	// Find first payment date and one full frequency back.
	set JD=AMODT

	if 'P4 do FULL^UFRE
	if P4 set NJD=$$NJD^UFRE(JD,FRE)
	if ER quit ""

	set ND=NJD
	set LD=$$NJD^UFRE(NJD,"-"_FRE,.AF) quit:ER 

	if LD<AMODT set LD=AMODT
	
	// Compute Odd Days Interest
	if LD-AMODT do {
		if $G(OIACM)="" set OIACM=IACM
		set ACR=$$^SCARND($$^UIC(PV,AMODT,LD-1,OIACM,IRN,0,AF,FRE),0,"","",2)
		if P5 set $P(AMO,"|",2)=ACR
		}
	
	set LDD=LD

	for NP=1:1:AMBAS do {  quit:PV=0  if ER set PV=0 quit 
		set JD=LDD
		set LDD=$$NJD^UFRE(JD,FRE) if ER quit 
		set ACR=ACR+$$^SCARND($$^UIC(PV,JD,LDD-1,IACM,IRN,"0"_P2,AF,FRE,"",LDD,JD),0,"","",5)
		set INT=$$^SCARND(ACR,0,"","",2)

		//  Negative AM
		if 'P3,INT>PMT set INT=PMT

		set ACR=ACR-INT
		set PV=PV+INT-PMT
	
		if 'P5 quit 
	
		set TI=TI+INT
		set PR=PMT-INT

		// We've run out the balance.
		if PV<0 set PR=PR+PV set PV=0
	
		// End of term, collect balance.
		if NP=AMBAS,PV do {
			set PR=PV+PR
			set PV=0
			}
				
		set TP=TP+PR+INT
		set AMO(NP)=PR_"|"_INT_"|"_PV_"|"_JD_"|"_LDD_"|"_ACR
		}
	
	set ACR=$$^SCARND(ACR,0,"","",2)

	if ACR set PV=PV+ACR
	if P5 set AMO=AMO_"|"_(PR+INT)_"|"_TP_"|"_TI

	quit PV
	
public	FVAS(PV,IRN,AMBAS,IACM,PMT,AMODT,PFRE,AFRE,ADT,CTL)	
	/*
	   Amortization for Different Payment/Interest Frequencies
	  -----------------------------------------------------------------------
	
	   Performs an amortization of a loan with different payment and
	   interest compounding frequencies.
	
	   KEYWORDS: Calculations, Loans, Interest
	
	   ARGUMENTS:
	       . PV        Present Value				/TYP=$/REQ/MECH=VAL
			   This is the loan's scheduled balance or 
			   if odd-days interest is capitalized, this
			   would be the loan's scheduled balance plus
			   odd-days.
	
	       . IRN       Nominal Interest Rate			/TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . AMBAS     Total Number of Payments			/TYP=N/REQ/MECH=VAL
	                   The number of payments of the term of the
	                   amortization.
	
	       . IACM      Interest Accrual Calc Method			/TYP=T/REQ/MECH=VAL
	                   Specifies the days per period/year to be
	                   used when determining the periodic interest
	                   amounts. Optional value. If no value is 
	                   passed, "00" will be assumed.
	
	       . PMT       Payment Amount				/TYP=$/REQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . AMODT     Date Amortization Begins			/TYP=D/REQ/MECH=VAL
	                   The date the loan's proceeds will be 
	                   advanced to the borrower.  Often this is 
	                   the date the loan is established.  If no 
	                   value is supplied, the current system date
	                   will be used.
	
	       . PFRE      Loan Payment Frequency			/TYP=F/REQ/MECH=VAL
	                   Specifies how often a loan's payments
	                   must be made.
	
	       . AFRE      Amortization Frequency			/TYP=F/REQ/MECH=VAL
	                   Specifies the frequency at which the 
	                   deferred amount will be amortized. The 
	                   default value is the payment frequency.
	
	       . ADT       First Amortization Date			/TYP=D/REQ/MECH=VAL
	                   The first date that interest will be
	                   compounded to the loan balance.
	
	       . CTL       Control
	
	
	   INPUTS:
	       . Values as specified above.
	
	   RETURNS:
	       . $$        Future value of the payment.                 /TYP=$
	
	       . ER        Error flag					/TYP=N
	       		   (0=No Error, 1=Error Encountered) 
	
	       . SVFRE     This is an array keyed by frequency and
	       		   date which is defined by ^UFRE.
	*/
		
	//   Required data
	if '$G(PV) quit 0
	if '$G(IRN) quit 0
	if '$G(AMBAS) quit 0
	if $G(PFRE)="" quit 0
	if '$G(PMT) quit 0
	
	// Optional data
	if '$G(AMODT) set AMODT=+%CurrentDate
	if $G(AFRE)="" set AFRE=PFRE
	if '$G(ADT) set ADT=AMODT
	if $G(IACM)="" set IACM="00"

	set CTL=+$G(CTL)
	
	new ACR,AAF,AF,CAL,CP,FD,FRE,I,INT,JD,LD,N,ND,NJD,PAF,PND,ST

	set ER=0
	
	set FRE=PFRE
	set JD=AMODT
	set X=$$NJD^UFRE(JD,FRE,.AF) if ER quit 0
	set PAF=AF
	set FRE=AFRE
	set JD=ADT
	set X=$$NJD^UFRE(JD,FRE,.AF) if ER quit 0
	set AAF=AF
	
	// Build calculation array for payments
	set JD=AMODT

	for I=1:1:AMBAS do {  if ER quit
		set NJD=$$NJD^UFRE(JD,PFRE) quit:ER 
		set CAL(JD,"P")=NJD
		set CP(JD)=NJD
		set JD=NJD
		}
	if ER quit 0
	
	// Build calculation array for amortization
	set JD=ADT
	set N=AMBAS/(PAF/AAF)

	for I=1:1:N do {  if ER quit
		set NJD=$$NJD^UFRE(JD,AFRE) quit:ER 
		set CAL(JD,"A")=NJD
		set JD=NJD
		}
	if ER quit 0

	// Perform amortizations until ST (stop) = 1
	set (ACR,FD,INT,ST)=""

	for  set FD=$O(CAL(FD)) quit:FD=""  do { if ST quit
	
		// Do we adjust the scheduled balance?
		if $D(CAL(FD,"P")) do {

			set ND=CAL(FD,"P")-1
			set ACR=ACR+$$^SCARND($$^UIC(PV,FD,ND,IACM,IRN,0,PAF,PFRE,"0"_CTL,ND,FD),0,"","",5)
			set INT=INT+$$^SCARND(ACR,0,"","",2)
			set ACR=ACR-INT

			// New scheduled balance
			set PV=PV-PMT                        

			// Balance is satisfied
			if (PV+INT)'>0 set ST=1              

			}
	
		// Does this date have an amortization?
		if $D(CAL(FD,"A")) do {
			set PV=PV+INT
			set INT=0
			// Roll dates until end - set stop flag.
			set PND=$O(CP(FD)) if 'PND set ST=1 quit 
			}
		}
	
	quit PV
	
public	AMO(PV,IR,AM,YLD,TNP,PFRE,PMT,CTL,NP,ODD,AFRE,FDT,IACM)	
	/*
	   Standard Interest Method Amortization Utility
	  -----------------------------------------------------------------------
	
	   Uses the interest method to amortize an amount.  All values are
	   returned in a local array.  This utility is intended for use as a
	   validation or reporting tool.
	
	   KEYWORDS: Calculations, Loans, Interest
	
	   ARGUMENTS:
	       . PV        Present Value				/TYP=$/REQ/MECH=VAL
			   This is the loan's scheduled balance or if
			   odd-days interest is capitalized, this would
			   be the loan's scheduled balance plus odd-days.
	
	       . IR        Nominal Interest Rate			/TYP=$/REQ/MECH=VAL
	                   The annual nominal interest rate in percent.
	
	       . AM        Amount to be amortized			/TYP=$/REQ/MECH=VAL
	
	       . YLD       Amortization Yield				/TYP=$/REQ/MECH=VAL
	
	       . TNP       Total Number of Payments			/TYP=N/REQ/MECH=VAL
	                   The number of payments of the term of the
	                   amortization.
	
	       . PFRE      Loan Payment Frequency			/TYP=F/REQ/MECH=VAL
	                   Specifies how often a loan's payments must
	                   be made.
	
	       . PMT       Payment Amount				/TYP=$/REQ/MECH=VAL
	                   The periodic P&I payment amount.
	
	       . CTL       Control Parameter				/TYP=T/NOREQ/MECH=VAL
	                   Indicates whether special processing
	                   should occur.
	
	                   $E(CTL,1) = Amortize Balance
	                               0 = Until end of term
	                               1 = To a zero balance
	
	                   $E(CTL,2) = Is loan's initial odd period:
	                               0 = Full period
	                               1 = Partial period
	
	       . NP        Number of Payments				/TYP=N/NOREQ/MECH=VAL
	                   The number of payments for this amortization.
	                   If not defined, the value of TNP will be assumed.
	
	       . ODD       Original Disbursement Date			/TYP=D/NOREQ/MECH=VAL
	                   The date the loan's proceeds will be advanced to
	                   the borrower.  Often this is the date the loan is
	                   established.  If no value is supplied, the current
	                   system date will be used.
	
	       . AFRE      Amortization Frequency			/TYP=F/NOREQ/MECH=VAL
	                   Specifies the frequency at which the deferred
	                   amount will be amortized. The default value 
	                   is the payment frequency.
	
	       . FDT       Beginning Amortization Date			/TYP=D/NOREQ/MECH=VAL
	                   The first date that amortization will occur.
	                   The default value is %CurrentDate.
	
	       . IACM      Interest Accrual Calc Method			/TYP=T/NOREQ/MECH=VAL
	                   Specifies the days per period/year to be 
	                   used when determining the periodic interest
	                   amounts. Optional value.  If no value is 
	                   passed, "00" will be assumed.
	
	   INPUTS:
	       . Values as specified above.
	
	   RETURNS:
	       . AMO array  This array contains the details of the amortization.
	
	       . SVFRE array  This array is constructed by UFRE.  This utility
	                      does not new this array as it's existance is
	                      beneficial in batch processing.
	*/

	// Required data
	if '$G(PV) quit 
	if '$G(IR) quit 
	if '$G(AM) quit 
	if '$G(YLD) quit 
	if '$G(TNP) quit 
	if $G(PFRE)="" quit 
	if '$G(PMT) quit 
	
	// Optional data
	set CTL=$G(CTL)
	if '$G(NP) set NP=TNP
	if '$G(ODD) set ODD=+%CurrentDate
	if $G(AFRE)="" set AFRE=PFRE
	if '$G(FDT) set FDT=+%CurrentDate
	if $G(IACM)="" set IACM="00"
	
	new AF,ALD,AND,CA,CAL,CP,FRE,I,IN,JD,LD,N,ND,NJD,PAF,PLD,PND,PR,TR

	set ER=0
	
	set AMO=PV_"|"_AM_"|"_NP
	
	// Find first payment date
	set JD=ODD
	set FRE=PFRE

	if '$E(CTL,2) do FULL^UFRE
	if $E(CTL,2) set X=$$NJD^UFRE(JD,FRE,.AF) if ER quit 
	if ER quit 

	set ND=NJD,LD=$$NJD^UFRE(NJD,"-"_FRE) quit:ER 
	set PND=ND,PLD=LD
	set PAF=AF
	
	// Build calculation array for payments
	for I=1:1:NP do { if ER quit 

		set CAL(NJD,"P")=LD
		set CP(NJD)=LD
		set LD=ND
		set ND=$$NJD^UFRE(LD,PFRE) quit:ER 

		}
	
	// Find amortization dates
	set JD=FDT
	set FRE="-"_AFRE
	set X=$$NJD^UFRE(JD,FRE,.AF) if ER quit 
	set (ND,AND)=JD
	set (LD,ALD)=NJD
	
	// Build calculation array for amortization
	for I=1:1:NP do { if ER quit 

		set CAL(JD,"A")=LD
		set CA(JD)=LD
		set LD=ND
		set ND=$$NJD^UFRE(LD,AFRE) quit:ER 

		}
	
	// Perform amortizations until ST (stop) = 1
	new A,B,D,L,NUM,P,REC,ST,T,TR

	set (A,D,NUM,P,REC,ST,T,TR)=""

	for  set D=$O(CAL(D)) quit:D=""  do { if ST quit 
	
		// Does this date have an amortization?
		if $D(CAL(D,"A")) do {
			set L=CAL(D,"A")
			// T is the Net Investment Balance
			set T=PV-(AM-REC)
			// Compute one period's earnings for the net investment
			set A=$$^SCARND($$^UIC(T,L,D-1,IACM,YLD,0,PAF,PFRE,"",PND,PLD),0,"")
			// Compute one period's earnings for the loan.
			set B=$$^SCARND($$^UIC(PV,L,D-1,IACM,IR,0,PAF,PFRE,"",PND,PLD),0,"")
			// This period's amortization
			set TR=A-B                           
			// Total recognized
			set REC=REC+TR

			if TR>(AM-REC),$E(CTL) do {
				set X=AM-REC
				set TR=TR+X
				set ST=1
				}

			set NUM=NUM+1

			}
	
		// Do we adjust the scheduled balance?
		if $D(CAL(D,"P")) do {
			set B=$$^SCARND($$^UIC(PV,PLD,PND-1,IACM,IR,0,PAF,PFRE,"",PND,PLD),0,"")
			// Principal portion of P&I
			set P=PMT-B                          
			// New scheduled balance
			set PV=PV-P
			// Balance is satisfied
			if PV'>0 set ST=1                    
			// Roll dates until end - set stop flag.
			set PND=$O(CP(PND)) if 'PND set ST=1 quit 
			set PLD=CP(PND)
			}
	
		if 'TR set P=0 quit 

		set AMO(D)=TR_"|"_REC_"|"_NUM_"|"_(T+TR)_"|"_(PV+P)_"|"_A_"|"_B
		set TR=0
		}
	quit

public	TRM(AMODT,TRM,AF)	
	/*
	   Compute number of payments based on opening date and term.
	  ----------------------------------------------------------------------
	   KEYWORDS: Calculations, Loans
	
	   ARGUMENTS:
	       . AMODT     Date Amortization Begins     /TYP=D/REQ/MECH=VAL
	                   The date for which the first payment's interest
	                   begins to accrue.  For example, a loan with a payment
	                   frequency of 1MA1 with a first due date of 6/1/yy
	                   would have an AMODT of 5/1/yy, assuming that interest
	                   was computed in arrears.  (AMODT would be 6/1/yy if
	                   interest was computed in advance.)
	
	       . TRM       Loan Term                    /TYP=T/REQ/MECH=VAL
	                   The loan's amortization term, expressed using standard
	                   IBS term syntax (e.g., 30Y, 6M, 182D)
	
	       . AF        Loan Payment Annual Factor   /TYP=N/REQ/MECH=VAL
	                   Specifies the number of times per year that FRE
	                   occurs.
	
	   INPUTS:
	       . AMODT,TRM,AF as specified above.
	
	   RETURNS:
	       . $$  The value of the P&I payment.                /TYP=N
	
	       . ER  Error flag (0=No Error, 1=Error Encountered) /TYP=N
	*/

	new MDT,ODT,STD,X
	
	// Save value of TJD.  UMDT will use TJD to determine MDT.  We want UMDT
	// to think that AMODT=TJD
	new %SystemDate
	#ACCEPT DATE=12/30/03;PGM=John Carroll
	set %SystemDate=AMODT
	
	set ER=0
	
	// Call maturity date utility to compute MDT.
	do ^UMDT
	if ER quit 0
	
	// "X" will equal the number of years in the term.
	set X=$$^SCARND((MDT-AMODT)/3.6525,0,"","",0)/100
	
	/*
	If X is zero or negative then we technically have an invalid
	situation - that the maturity date preceded AMODT.  We'll have at
	least 1 payment left: the final payment.
	*/
	if X'>0 quit 1
	
	// Compute number of payments
	quit $$^SCARND(X*AF,0,"","",0)
	
private BI(P1,P2)	//
	// Bisection method which is used for the second "guess" in iterative calculations.
	new P

	set P=(P1-P2)/2
	if P<0 set P=-P
	set P2=P1
	if P2<0 set P2=-P2

	quit P2+P
	
private NEWT(ANS,E,CNT)	// Compute next iterative guess using Newton's method.
	new A

	set A=(E(CNT-1)-E(CNT-2))/(ANS(CNT-1)-ANS(CNT-2))
	if A=0 quit 0
	quit ANS(CNT-1)-(E(CNT-1)/A)
	
IRN(IRN,IACM)	//
	/*
	   Modify calculation rate to simulate rate differences due to
	   IACM characteristics, where a "10" computes more than a "01" does.
	   This rate is used for estimation only.
	*/

	new D,N
	
	// Numerator
	set N=$E(IACM)
	// Denominator
	set D=$E(IACM,2)
	// 00 and 11 - No adjustments necessary
	if N-D=0 quit IRN
	// 10        - Increase rate
	if N quit IRN*365.25/360
	// 01        - Decrease rate
	if D=1 quit IRN*360/365.25
	// 13        - Increase slightly for 366
	if N=1,D=3 quit IRN*365.25/365
	// 03        - Decrease rate always 365
	quit IRN*360/365

private UPI(PV,IRN,AMBAS,FV,AMODT,IACM,FRE,OIACM,AF,NDD,INTADJ)	// P&I Calculation
	/*
	   Utility for loans requiring a P&I recalculation because of payoff
	   recalculation considerations.
	  ----------------------------------------------------------------------
	
	   KEYWORDS: Calculations, Loans
	
	   INPUTS:
	         . PV            Present Value (Loan Amount)
	         . IRN           Interest Rate
	         . AMBAS         Amortization Base
	         . FV            Future Value (e.g. Balloon Balance)
	         . AMODT         Amortization Date
	         . IACM          Interest Accrual Method
	         . FRE           Loan Payment Frequency
	         . OIACM         Odd Period IACM
	         . AF            Annual Factor
	         . NDD           Next Payment Due Date
	         . INTADJ        Account's Accrual Balance
	                         - This is the amount of interest accrued on
	                           the loan prior to the principal paydown.
	
	   RETURNS:
	         . P&I Amount
	
	*/
	new ACR,ACRTOT,BAL,BEGPMT,HIGH,INT,ITER,LDD,LOW,PMT,PMTNO,PRIN,TOT
	
	// Determine base P&I amount and set up LOW/HIGH boundaries
	set (BEGPMT,PMT)=$$PMT^UFINC(PV,IRN,AMBAS,AF)
	set LOW=PMT-(PMT*.2)
	set HIGH=PMT+(((INTADJ/AMBAS)+PMT)*.2)
	
	// Repeat ITER section 20 times to determine best P&I
	for ITER=1:1:20 do {
		do ITER
		if ((BAL>-.06)&(BAL<.06)) quit 
		if BAL<0 set HIGH=PMT,PMT=PMT-((HIGH-LOW)/2)
		if BAL>0 set LOW=PMT,PMT=PMT+((HIGH-LOW)/2)
		set PMT=$J(PMT,0,3)
		}

	set ACRTOT=$J(ACRTOT,0,2),TOT=PV+ACRTOT,PMT=$J(PMT,0,2)
	for PMTNO=1:1:AMBAS set TOT=TOT-PMT

	if TOT>0 set PMT=PMT+.01

	quit PMT

ITER	//
	new NJD

	set BAL=PV
	set NJD=NDD
	set LDD=$$NJD^UFRE(NJD,"-"_FRE) if ER quit

	set ACR=$$^UIC(PV,AMODT,NJD-1,IACM,IRN,"",AF,FRE,"",NJD,LDD)
	set ACR=ACR+INTADJ
	set ACRTOT=ACR

	for PMTNO=1:1:AMBAS do {
		set INT=ACR
		if INT>PMT set INT=PMT
		
		set INT=$J(INT,0,2)
		set PRIN=PMT-INT
		set ACR=ACR-INT
		set BAL=BAL-PRIN
		set LDD=NJD

		set NJD=$$NJD^UFRE(NJD,FRE) if ER quit
		set ACR=ACR+$$^UIC(BAL,LDD,NJD-1,IACM,IRN,"",AF,FRE,"",NJD,LDD)
		set ACRTOT=ACRTOT+ACR
		}
	quit 
	
 #OPTION ResultClass ON
Public String vSIG()	quit "60479^60363^Pat Kelly^55951"	// Signature - LTD^TIME^USER^SIZE
