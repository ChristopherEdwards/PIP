UCOLLATE(SRCSTR,opt)

	/* DESC: Determine starting location for alpha lookups
	   Using macro code, generate a string of characters in their
	   proper collating order. Based on "opt" determine the correct
	   seed value for mumps to $O through the database.
	   Orig: 3-DEC-1997 Mark Spier
	   This procedure definition replaces [.MRTNS]UCOLLATE.M
	
	   KEYWORDS:
	
	   ARGUMENTS:
	   . SRCSTR Input String  /TYP=T/REQ/MECH=VAL
	         . opt           Collating option /TYP=N/NOREQ/DFT=0
	                         0 - Prior string char/number
	                         1 - Next string char/number
	   INPUTS:
	
	   RETURNS:
	   . $$ lookup string starting value /TYP=T
	
	
	   RELATED:
	   called from UACN,UCIF and SQL
	   EXAMPLE:
	
	      $$^UCOLLATE("AXD")    = AXC_$C(255)
	      $$^UCOLLATE("AXD",1)  = AXD_$C(1)
	      $$^UCOLLATE("123")    = 122.9999999999
	      $$^UCOLLATE("123.45") = 122.4499999999
	      $$^UCOLLATE(123,1)    = 123.0000000001
	 
 	   Revision History 

	   07/30/99 - CHOK -33890
		Converted procedure code to PSL. 
	
	   04/23/98 - PARRAS - 28570
	        Added the LASTCHAR section to be called from SQLQ.M to
	        find the next character for this particular character set,
	        per Mark Spier.
	
	   02/18/98 - PARRAS - 27785
	        Changed $C(255) to $C(0) to allow lookups when the last
	        character is a 0 (zero), per Mark Spier.
	
	   LIBRARY
	   $$UCOLLATE
	   $$DEC	- Return decimal values based on numeric value
	   $$LASTCHAR	- Find the next character for this particular character
			  set

	*/
	
	new CHARSET,LASTCHR,CHARPOS
	
	if SRCSTR="" quit ""
	set opt=$G(opt)
	if SRCSTR=+SRCSTR,'opt quit SRCSTR-$$DEC(SRCSTR)       // Prior numeric value
	if SRCSTR=+SRCSTR,opt quit SRCSTR+$$DEC(SRCSTR)        // Next numeric value
	if opt quit SRCSTR_$C(1)               // Next string char
	
	set LASTCHR=$E(SRCSTR,$L(SRCSTR))      // Get last character of lookup val
	set CHARSET=Runtime.charset()
	set CHARPOS=$F(CHARSET,LASTCHR)
	
	/* If charpos <3 then we are either on the first character
	   or we didn't find it.
	*/
	
	if CHARPOS<3,$L(SRCSTR)=1,'opt quit $C($A(SRCSTR)-1)_$C(255)
	if CHARPOS<3 quit $E(SRCSTR,1,$L(SRCSTR)-1)_$C(0)
	
	// back off 2 places to account for $f return and
	// the need to get the previous value
	set LASTCHAR=$E(CHARSET,CHARPOS-2)
	quit $E(SRCSTR,1,$L(SRCSTR)-1)_LASTCHAR_$C(255)        // Return starting value for collating
	
	
DEC(str)	// Return decimal values based on numeric value
	/*
	   Input 12345    returns .1
	         12345.1  returns .01
	         23456.123       returns .0001
	*/

	new len
	if str'["." quit ".1"                  // No decimal
	set len=$L($P(str,".",2))              // Get precision
	quit "."_$E("000000000000000000",1,len)_1
	

LASTCHAR(SRCSTR)
	
	new LASTCHR,CHARSET,CHARPOS
	set LASTCHR=$E(SRCSTR,$L(SRCSTR))      // Get last character of lookup val
	set CHARSET=Runtime.charset()
	set CHARPOS=$F(CHARSET,LASTCHR)
	quit $E(SRCSTR,1,$L(SRCSTR)-1)_$E(CHARSET,CHARPOS)
	

vSIG()	quit "59886^43623^Sanchez SCM Administrator^2877"	// Signature - LTD^TIME^USER^SIZE
