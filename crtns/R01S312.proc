R01S312	// SCA314 - Rate Information Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:47 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String RPTCLS
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date RDAT
	type String VIN1
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA314"
	set RN="Rate Information Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("RDAT")="|10|||||D POS^@TPGM||D|Rates Effective|||||"
	set %TAB("VIN1")="|1||[DEP]CLS|[STBLCLS]:NOVAL||S RPTCLS=X||T|Product Class is equal to|||||"
	set %TAB("VIN2")="|255||[DEP]GRP|^XCLS(RPTCLS,||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN3")="|255||[DEP]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,RDAT#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String RPTCLS
	type public Date RDAT
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %ALTFID,%NOSORT,%QUIT,%SHOWSRT,%TIM,ACN,AF,APR,BAL,BOO,BRCD,BRDES,CID,CLS,CONAM,CRCD,DAT,DEF,DFT,DI2,DT,IFREQ,IND,INDSCH,IRN,LIN,LINE,LINE(),N,NJD,OPT,PGBK,PID,RATE,RID,RN,RND,SCH,TC1,TERM,TEXE,TINT,TREC,TYPDES,TYPE,UTBLINDEX(),UTBLRATE(),VAL,VAL1,VL,VLOF,VRF(),VSTATS(),XXX,YIELD,data(),dft,di,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA314",RN="Rate Information Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA314","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[DEP]TYPE#1#4"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DEP]CLS = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DEP]GRP "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]BOO "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DEP,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Product Class is equal to"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Group"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Branch of Ownership"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Rate Information Report"
		set VBNRINFO("PGM")="R01S312"
		set VBNRINFO("RID")="SCA314"
		set VBNRINFO("TABLES")="DEP,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]CLS"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEP]GRP"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEP]BOO"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DEP]TYPE"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DEP]CRCD"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,DEP]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT="DEP.CLS,DEP.GRP,DEP.BOO,DEP.TYPE,DEP.CRCD,DEP.CID"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DEP,LN",VWHERE,"DEP.CLS,DEP.GRP,DEP.BOO,DEP.TYPE,DEP.CRCD,DEP.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6
	set vc1=V.piece($C(9),1)			// DEP.CLS
	set vc2=V.piece($C(9),2)			// DEP.GRP
	set vc3=V.piece($C(9),3)			// DEP.BOO
	set vc4=V.piece($C(9),4)			// DEP.TYPE
	set vc5=V.piece($C(9),5)			// DEP.CRCD
	set vc6=V.piece($C(9),6)			// DEP.CID
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public String %NOSORT
 set %NOSORT=""
 type Public Number CID,PID,PGBK,TC1,TEXE,TREC,%QUIT
 type Public String %TIM,%ALTFID,BRCD,IO
 if '$D(IO) do {
 	do ^SCAIO
 	set %QUIT=0
 	do INT^%T
 }
 set PID=%ProcessID
 do Db.delete("TMPRPT0","PID=:PID")
 type RecordTMPRPT0 tmprpt0=Class.new("RecordTMPRPT0")
 set tmprpt0.pid=%ProcessID
 set tmprpt0.data=(%CurrentDate).toString("MM/DD/YEAR")_"  "_%TIM
 do tmprpt0.bypassSave()
 if '$D(%ALTFID) set %ALTFID=""
 set TREC=0,TEXE=0,TC1=0,%QUIT=0,PGBK=0
 set BRCD="",CID=1
 type ResultSet rs=Db.select("DISTINCT BOO,CLS,GRP,TYPE,CRCD","DEP","CLS=:RPTCLS","BOO,CLS,GRP,TYPE,CRCD")
 while rs.next() do {
	type RecordTMPRPT6 tmprpt6=Class.new("RecordTMPRPT6")
	set tmprpt6.pid = %ProcessID
	set tmprpt6.key1=rs.getCol("cls")
	set tmprpt6.key2=rs.getCol("grp")
	set tmprpt6.key3=rs.getCol("boo")
	set tmprpt6.key4=rs.getCol("type")
	set tmprpt6.key5=rs.getCol("crcd")
	set tmprpt6.key6=CID
	do tmprpt6.bypassSave()
        set TREC=TREC+1
        set TEXE=TEXE+1
 }
 type Public String %SHOWSRT
 if '$D(%SHOWSRT) quit
 write !!,$$^MSG(3976),TREC
 write !!,$$^MSG(3977),TEXE
 write !! do ^%T write !,#,!
 quit  // USE THIS SECTION TO INSERT REPORT LINE DEFINITIONS
TYPE //
 type Public String BOO,CRCD,data(),dft,di,DI2,DFT,IFREQ,IND,INDSCH,IRN,NJD,SCH,TYPE 
 type Public Number ACN,AF,LIN
 set LIN=1,INDSCH="",di=""
 set data("ACN")=$S($G(ACN)'="":ACN,1:0)
 set data("BOO")=$G(BOO)
 set data("CRCD")=$G(CRCD)
 set data("TYPE")=$G(TYPE)
 do ^UPRODDFT(.data,.dft)
 for  set di=$O(dft(di)) quit:di=""  do {
 	set DI2=di.piece(".",2),DFT(DI2)=dft(di)
 }
 set AF=12  						// EMD 12/18/2001 [43787] + next 3 lines
 set IFREQ=$G(DFT("ICF"))             			// use compunding frequency to determine APY
 if IFREQ="" set IFREQ=$G(DFT("IPF"))  			// ICF not defined, use posting freq
 if IFREQ'="" set NJD=$$NJD^UFRE(+$H,IFREQ,.AF,"00001") 	// get annual factor
 set SCH=$G(DFT("SCH")) if SCH'="" do SCH quit
 set IND=$G(DFT("INDEX")) if IND'="" do IND quit
 set IRN=$G(DFT("IRN")) do IRN quit
 quit
 //
SCH // DEFINE LINE(S) IF TYPE TIED TO SCHEDULE
 //
 // I18N=OFF
 type Public String AF,APR,CLS,DEF,DT,INDSCH,IRN,LINE,LIN,N,RDAT,SCH,TINT,UTBLRATE(),VAL,VAL1
 set INDSCH="S-"_SCH
 // I18N=ON
 type RecordUTBLRATE utblrate=Db.getRecord("UTBLRATE","SCH=:SCH",1)
 set TINT=utblrate.tint
 if TINT="" set TINT="D"
 set (VAL,VAL1,APR,DEF)="" 
 type ResultSet rs3=Db.select("SCH,EFD,TERM,MBALTERM,RATEXBAL","RATE1","SCH=:SCH","EFD DESC")
 while rs3.next() do { 	 
 	if CLS="D" set N=AF do ^UAPR
 	set VAL=rs3.getCol("TERM")
 	set VAL1=rs3.getCol("MBALTERM")
 	set IRN=rs3.getCol("RATEXBAL") 	
 	set LINE(LIN)=VAL_TINT_"|"_VAL1_"|"_IRN_"|"_APR,LIN=LIN+1
 	set LIN=LIN+1
 }
 //
IND // DEFINE LINE(S) IF TYPE TIED TO INDEX
 //
 // I18N=OFF
 //type Public String AF,APR,CLS,DEF,DT,IND,INDSCH,IRN,LIN,LINE(),N,RDAT,UTBLINDEX(),VAL1,VAL
 type Public String IND,UTBLINDEX()
 set INDSCH="I-"_IND
 // I18N=ON
 set (VAL,VAL1,APR,DEF)=""
 type ResultSet rs4=Db.select("INDEX,EFD,RMIN,RATE","INDEX1","INDEX=:IND","INDEX DESC")
 while rs4.next() do {
 	if CLS="D" S N=AF D ^UAPR
 	set VAL=rs4.getCol("RMIN")
 	set IRN=rs4.getCol("RATE")
 	set LINE(LIN)="|"_VAL_"|"_IRN_"|"_APR
 	set LIN=LIN+1
 } 
 //
IRN // DEFINE LINE (ONLY ONE) IF NO RATE OR INDEX
 // S IRN=$P(D(57),"|",1)	; VCA 1/25/99	IRN is already set
 set IRN=$G(IRN)
 if IRN="" set IRN=$$^MSG(6472)
 set (VAL,VAL1,APR,DEF)=""
 // If deposit calculate yield via ^UAPR with 12 compound periods
 if IRN,IRN'?.AP,CLS="D" set N=AF do ^UAPR // EMD 12/18/2001 use AF instead of 12
 set LINE(LIN)="||"_IRN_"|"_APR
 quit
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=RPTCLS
 set RID="SCA314"
 do ^URID
 if PGM="" set ER=1 quit
 set TPGM=PGM
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 set RDAT=cuvar.tjd
 quit
 //
POS // POST PROCESSOR FOR DATE INPUT
 if X="" set ER=1,RM=$$^MSG(2385) quit
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 if X<cuvar.tjd set ER=1,RM=$$^MSG(748) quit
 quit
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VDTL6	// Detail
	type public String %ALTFID,%NOSORT,%QUIT,%SHOWSRT,%TIM,ACN,AF,APR,BAL,BOO,BRCD,BRDES,CID,CLS,CRCD,DAT,DEF,DFT,DI2,DT,IFREQ,IND,INDSCH,IO,IOSL,IRN,LIN,LINE,LINE(),N,NJD,OPT,PGBK,PID,RATE,RDAT,RND,RPTCLS,SCH,TC1,TERM,TEXE,TINT,TREC,TYPDES,TYPE,UTBLINDEX(),UTBLRATE(),V,VAL,VAL1,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),XXX,YIELD,data(),dft,di,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$J(V,4) do VP1 quit:VFMQ!verror.get()  set VL=V
	do VP2 quit:VFMQ!verror.get()  set V=$E(TYPDES,1,19) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",5-VL.length())_V
	set VL=VL_$J("",25-VL.length())_$E(vc5,1,3)
	set V=$E(INDSCH,1,8) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",30-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V=$E(OPT,1,1)
	set VL=VL_$J("",40-VL.length())_V
	do VP6 quit:VFMQ!verror.get()  set V=$E(RND,1,2)
	set VL=VL_$J("",43-VL.length())_V
	do VP7 quit:VFMQ!verror.get()  set V=$J(TERM,4) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",47-VL.length())_V
	do VP9 quit:VFMQ!verror.get()  set V=$J($FN(BAL,",",2),10) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",54-VL.length())_V
	do VP11 quit:VFMQ!verror.get()  set V=$E(RATE,1,8)
	set VL=VL_$J("",65-VL.length())_V
	do VP12 quit:VFMQ!verror.get()  set V=$J(YIELD,6,3) do VP13 quit:VFMQ!verror.get()
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	quit

VSUM6	// Summary
	type public String %ALTFID,%NOSORT,%QUIT,%SHOWSRT,%TIM,ACN,AF,APR,BAL,BOO,BRCD,BRDES,CID,CLS,CRCD,DAT,DEF,DFT,DI2,DT,I,IFREQ,IND,INDSCH,IO,IOSL,IRN,LIN,LINE,LINE(),N,NJD,OPT,PGBK,PID,RATE,RDAT,RND,RPTCLS,SCH,TC1,TERM,TEXE,TINT,TREC,TYPDES,TYPE,UTBLINDEX(),UTBLRATE(),V,VAL,VAL1,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),XXX,YIELD,data(),dft,di,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	do VP14 quit:VFMQ!verror.get()  set V=$E(XXX,1,20) set VL=V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %ALTFID,%MSKD,%NOSORT,%QUIT,%SHOWSRT,%TIM,ACN,AF,APR,BAL,BOO,BRCD,BRDES,CID,CLS,CONAM,CRCD,DAT,DEF,DFT,DI2,DT,IFREQ,IND,INDSCH,IO,IRN,LIN,LINE,LINE(),N,NJD,OPT,PGBK,PID,RATE,RDAT,RID,RN,RND,RPTCLS,SCH,TC1,TERM,TEXE,TINT,TREC,TYPDES,TYPE,UTBLINDEX(),UTBLRATE(),VAL,VAL1,VL,XXX,YIELD,data(),dft,di,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+10,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",48-VL.length())_"Run Date:"
	set VL=VL_$J("",58-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",50-VL.length())_"System:"
	set VL=VL_$J("",58-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="Branch: "
	do VP15 quit:VFMQ!verror.get()  set V=$E(BRDES,1,20)
	set VL=VL_$J("",8-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="                   "_"Selected Rates Effective"
	do VP16 quit:VFMQ!verror.get()  set V=$E(DAT,1,20)
	set VL=VL_$J("",45-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="                              "_"Index or                   Minimum"
	do VOM
	set VL="Type Description         Curr Schedule Opt Rnd  Term     Balance     Rate  Yield"
	do VOM
	set VL="================================================================================"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,DEP]TYPE

 type Public String V,VL
 type Public Boolean PASS
 if PASS=0 quit
 set (V,VL)=""
	quit

VP2	// Column pre-processor - Variable: TYPDES

 type Public String TYPE,TYPDES
 type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE",1)
 set TYPDES=prodctl.des
 set TYPDES=TYPDES.extract(1,18)
	quit

VP3	// Column post-processor - Variable: TYPDES

 type Public String V,VL
 type Public Boolean PASS
 if PASS=0 quit
 set (V,VL)=""
	quit

VP4	// Column post-processor - Variable: INDSCH

 type Public String V,VL
 type Public Boolean PASS
 if PASS=0 set PASS=1 quit
 set (V,VL)=""
	quit

VP5	// Column pre-processor - Variable: OPT

 type Public String INDSCH,OPT,X
 set OPT=""
 set X=INDSCH.piece("-",2)
 if $G(X)'="" do {
	type RecordUTBLRATE utblrate=Db.getRecord("UTBLRATE","SCH=:X",1)
	set OPT=utblrate.copt
 }
	quit

VP6	// Column pre-processor - Variable: RND

 type Public String INDSCH,RND,X
 set RND=""
 set X=INDSCH.piece("-",2)
 if $G(X)'="" do {
 	type RecordUTBLRATE utblrate=Db.getRecord("UTBLRATE","SCH=:X",1)
 	set RND=utblrate.ropt
 }
	quit

VP7	// Column pre-processor - Variable: TERM

 type Public String LINE,TERM
 type Public Number CID
 set TERM=LINE(CID).piece("|",1)
	quit

VP8	// Column post-processor - Variable: TERM

 type Public String TERM,V
 if TERM="" set V=""
	quit

VP9	// Column pre-processor - Variable: BAL

 type Public String BAL,LINE
 type Public Number CID
 set BAL=LINE(CID).piece("|",2)
	quit

VP10	// Column post-processor - Variable: BAL

 type Public String BAL,CLS,LINE,V
 type Public Number CID
 if BAL["DEP."!(BAL["LN.") set V=BAL quit
 if LINE(CID).piece("|",2)="" set V="" quit
 if CLS="L" set V=""
	quit

VP11	// Column pre-processor - Variable: RATE

 type Public String LINE,RATE,RT
 type Public Number CID
 set RATE=LINE(CID).piece("|",3)
 quit:RATE["N"
 set RT=RATE
 set RATE=$$^SCARND(RATE,8,,,3)
	quit

VP12	// Column pre-processor - Variable: YIELD

 type Public String LINE,YIELD
 type Public Number CID
 set YIELD=LINE(CID).piece("|",4)
	quit

VP13	// Column post-processor - Variable: YIELD

 type Public String CLS,RATE,RT,V
 if CLS="L" set V=""
 if '$G(RT)!(RATE["N") set V=""
	quit

VP14	// Column pre-processor - Variable: XXX

 type Public String XXX
 set XXX="   "
	quit

VP15	// Column pre-processor - Variable: BRDES

	type public String vc3
 type Public String BOO,BRDES
 set BOO=vc3
 if '$L(BOO) set BRDES="" quit
 type RecordUTBLBRCD utblbrcd=Db.getRecord("UTBLBRCD","BRCD=:BOO",1)
 set BRDES=BOO_" - "_utblbrcd.desc
 quit
	quit

VP16	// Column pre-processor - Variable: DAT

 type Public String D1,D2,D3,DAT,RDAT,VAL
 set DAT=RDAT
 set DAT=$$DAT^%ZM(DAT,"MM/DD/YEAR")
 set VAL="January,February,March,April,May,June,July,August,September,October,November,December"
 set D1=DAT.piece("/",1),D2=DAT.piece("/",2),D3=DAT.piece("/",3)
 set D1=VAL.piece(",",D1)
 set DAT=D1_" "_D2_", "_D3
	quit
