R01S151	// SCA084 - Certificate Maturity Projection Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:43 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String BOO,TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1=TJD.get()

	set RID="SCA084"
	set RN="Certificate Maturity Projection Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[DEP]MDT|||||D|Matures after|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String BOO,TJD
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,OCNT,OVR,RID,RN,UCNT,UND,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA084",RN="Certificate Maturity Projection Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA084","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DEP]BAL#100#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Matures after"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE=""
		set VWHERE=VWHERE_"DEP.MDT>:VIN1 AND DEP.MDT NOT >'10/15/2114' AND DE"
		set VWHERE=VWHERE_"P.BAL>0"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Certificate Maturity Projection Report"
		set VBNRINFO("PGM")="R01S151"
		set VBNRINFO("RID")="SCA084"
		set VBNRINFO("TABLES")="DEP"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]BOO"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEP]MDTYM"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEP]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:5 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DEP.BOO,DEP.MDTYM,DEP.CID,DEP.BAL","DEP","DEP.MDT>:VIN1 AND DEP.MDT NOT >'10/15/2114' AND DEP.BAL>0","DEP.BOO,DEP.MDTYM,DEP.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4
	set vc1=V.piece($C(9),1)			// DEP.BOO
	set vc2=V.piece($C(9),2)			// DEP.MDTYM
	set vc3=V.piece($C(9),3)			// DEP.CID
	set vc4=V.piece($C(9),4)			// DEP.BAL
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type Public String OCNT,OVR,UCNT,UND

	set (OVR,OCNT,UND,UCNT)=0
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=BOO
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),OCNT,OVR,UCNT,UND,vc4
	type Public String VSTATS

	set VT(3)=VT(3)+1
	set VT(3,1,1)=VT(3,1,1)+OCNT			// @TOT(<<OCNT>>)
	set VT(3,2,1)=VT(3,2,1)+OVR			// @TOT(<<OVR>>)
	set VT(3,3,1)=VT(3,3,1)+UCNT			// @TOT(<<UCNT>>)
	set VT(3,4,1)=VT(3,4,1)+UND			// @TOT(<<UND>>)
	set VT(3,5,1)=VT(3,5,1)+vc4			// @TOT([DEP]BAL)
	quit

VSUM2	// Summary
	type public String %TIM,BOO,I,IOSL,OCNT,OVR,TJD,UCNT,UND,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Branch Totals :"
	do VOM
	set V=VT(2,3,1)					// @TOT(<<UCNT>>,)
	set VL="               "_$J(V,4)
	set V=VT(2,4,1)					// @TOT(<<UND>>,)
	set VL=VL_$J("",20-VL.length())_$J($FN(V,",",2),14)
	set V=VT(2,1,1)					// @TOT(<<OCNT>>,)
	set VL=VL_$J("",45-VL.length())_$J(V,4)
	set V=VT(2,2,1)					// @TOT(<<OVR>>,)
	set VL=VL_$J("",50-VL.length())_$J($FN(V,",",2),14)
	set V=VT(2)					// @CNT(,N,5)
	set VL=VL_$J("",74-VL.length())_$J(V,5)
	set V=VT(2,5,1)					// @TOT([DEP]BAL,)
	set VL=VL_$J("",80-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VDTL3	// Detail
	type public String %TIM,BOO,IOSL,OCNT,OVR,TJD,UCNT,UND,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$J(V,12,2) do VP1 quit:VFMQ!verror.get()  set VL="                                                                                                   "_V
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM3	// Summary
	type public String %TIM,BOO,I,IOSL,OCNT,OVR,TJD,UCNT,UND,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set V=vc2,VO=V set V=$E(V,1,8) do VP2 quit:VFMQ!verror.get()  set VL=V
	set V=VT(3,3,1)					// @TOT(<<UCNT>>,)
	set VL=VL_$J("",15-VL.length())_$J(V,4)
	set V=VT(3,4,1)					// @TOT(<<UND>>,)
	set VL=VL_$J("",22-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,1,1)					// @TOT(<<OCNT>>,)
	set VL=VL_$J("",45-VL.length())_$J(V,4)
	set V=VT(3,2,1)					// @TOT(<<OVR>>,)
	set VL=VL_$J("",52-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3)					// @CNT(,N,5)
	set VL=VL_$J("",74-VL.length())_$J(V,5)
	set V=VT(3,5,1)					// @TOT([DEP]BAL,)
	set VL=VL_$J("",80-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BOO,CONAM,OCNT,OVR,RID,RN,TJD,UCNT,UND,VL,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set V="BRANCH "_$G(BOO) do VP3 quit:VFMQ!verror.get()  set VL=V
	do VOM
	set VL="" do VOM
	set VL="Month of      Balances Not Greater          --Balances Greater--          -------Totals-------"
	do VOM
	set VL="Maturity         Than  $100,000                Than  $100,000"
	do VOM
	set VL="              "_"Count         Amount          Count         Amount          Count         Amount"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,OCNT,OVR,UCNT,UND,VPN,vc2,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Institution Totals:"
	do VOM
	set V=0						// @TOT(<<UCNT>>,0)
	for I=0:1:3 set V=V+VT(I,3,1)
	set VL="               "_$J(V,4)
	set V=0						// @TOT(<<UND>>,0)
	for I=0:1:3 set V=V+VT(I,4,1)
	set VL=VL_$J("",20-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<OCNT>>,0)
	for I=0:1:3 set V=V+VT(I,1,1)
	set VL=VL_$J("",44-VL.length())_$J(V,4)
	set V=0						// @TOT(<<OVR>>,0)
	for I=0:1:3 set V=V+VT(I,2,1)
	set VL=VL_$J("",50-VL.length())_$J($FN(V,",",2),14)
	set V=(VT(0)+VT(1)+VT(2)+VT(3))			// @CNT(0,N,5)
	set VL=VL_$J("",74-VL.length())_$J(V,5)
	set V=0						// @TOT([DEP]BAL,0)
	for I=0:1:3 set V=V+VT(I,5,1)
	set VL=VL_$J("",80-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,DEP]BAL

	type public String vc4
	type Public String OCNT,OVR,UCNT,UND,V,VL

	set (OVR,UND,OCNT,UCNT)=0
	if vc4>100000 set OVR=vc4 set OCNT=1
	else  set UND=vc4 set UCNT=1
	set V="" set VL=""
	quit

VP2	// Column post-processor - [SYSDEV,DEP]MDTYM

	type Public String V,X

	set X=V
	if $L(X)>4 set V=$E(X,5,6)_"/"_$E(X,1,4)
	else  set V=$E(X,3,4)_"/"_$E(X,1,2)
	quit

VP3	// Column post-processor - BRANCH <<$G(BOO)>>

	type Public String V,X

	set X=V
	if (X="")!(X<0) set V=$$^MSG(6339)     // TOTALS
	quit
