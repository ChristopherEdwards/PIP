Y472TGP(RecordSRVSUM fSRVSUM,Number cnt,Number ctl,Number base,Number lim)	// ; Procedure Y472TGP - Special Service Fees Calculation. 
 ;;Copyright(c)2005 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/09/05 10:38 - spatola
 ;
 ; **** This is a DATA-QWIK generated routine (level 25) ****
 ;
	/*
	   ORIG: GEISS - 03/20/95
	   DESC: Custom Service Fee Program to calculate special service fees
		 Calculates the service fee amount for Category 3 fees when
	         there are different fees for each transaction code within a
	         transaction group.  The fee schedule can be based on # of
	         free items, a balance limit, or n free items per $ amount.
	         To be used as a custom program on Fee Schedules.

	   KEYWORDS:

	   ARGUMENTS:
	   . cnt  - Number of free items per period  /TYP=N/REQ/MECH=VAL

	   . ctl  - 0: only free items, no balance consideration
	            1: if balance is less than amount (lim) compute fee
	               allowing (cnt) free items.
		    2: free items is per balance amount (lim)

	   . base - balance to be used
		    0 = Not Applicable
		    1 = Average Ledger Balance
		    2 = Average Collected Balance
		    3 = Average Investable Balance
		    4 = Low Balance (Intra-Day)
		    5 = Low Balance (End-of-Day)

	   . lim  - balance amount


	   RETURNS:
	   . FEEAMT - service fee amount   /TYP=$

	   EXAMPLE:
	      D Y472TGP(10) - 10 free items per period
	      D Y472TGP(2,1,1,500) - if ledger balance is >=500 no fee
	                                 if under 500, 2 free items
	      D Y472TGP(1,2,5,500) - 1 free item for every $500.00 MMB

	  ---- Revision History ------------------------------------------------
		03/16/04 - GIRIDHARANB - CR8057
		      Corrected a isDefined call to use "," as delimiter 
		      between the keys being passed as parameters.
		 
		05/28/03 - BHANGALEV - 51351
	   	      Converted to PSL

	  ----------------------------------------------------------------------
	*/

	#WARN
        #OPTIMIZE
        
	
	type Number BAL,ETC,TG,TRN
	type Public Number base,cnt,ctl,FEEAMT,lim
	type Number ER=0
	type String MSGVAR,RM

	set cnt=cnt.get()
  	set base=base.get() 

	// Invalid Balance Base
	type ResultSet rs=Db.select("DES","DBTBL1D","FID='YFEEEXP' AND DI='BALB'")
	if rs.next() set MSGVAR=rs.getCol("DES")
	
	if +base<0!(+base>5) set ER=1 set RM=$$^MSG(8316,MSGVAR) quit
	
	set lim=lim.get()
	set ctl=ctl.get()
	set FEEAMT=FEEAMT.get()

	/*
	 Get balance base from SRVSUM balances. SRVSUM already holds this info
	 Average Ledger Balance
	*/

	if base=1 set BAL=fSRVSUM.avgbal

	// Average Collected Balance
	else  if base=2 set BAL=fSRVSUM.avgcol

	// Average Investable Balance
	else  if base=3 set BAL=fSRVSUM.avginv

	// Low Balance (Intra-Day)
	else  if base=4 set BAL=fSRVSUM.lowbal

	// Low Balance (End of Day)
	else  if base=5 set BAL=fSRVSUM.loweod

	// no fee (balance >= limit)
	if ctl=1,(BAL'<lim) quit

	// determine number of free items
	if ctl=2 set cnt=(BAL\lim)*cnt

	// get transaction codes and amounts
	do TRNGRP

	// loop thru hist and calculate feeamt
	do HIST

	quit


HIST	//

	/* loop through account's history and count # of transactions for each
	   transaction code in group, excluding the free items
	*/
	type Public Number CID,I,SCLD,SEQ
	type Public Date HJD
	type Public Number cnt,end,FEEAMT
	type Public String ETC,HIST(),ITC,TG()
	type Number J

	type RecordDEP dep=Db.getRecord("DEP","CID=:CID",1)

	// Service Charge - Last Date
	set SCLD=dep.scld

	/*
	   cnt=# free items, CNT=total count of transactions posted from group
	   UHFETCH is not used to save processing time
	*/

	type DbSet rs=Db.selectDbSet("HIST","CID=:CID","TSEQ DESC")
        while rs.next() do { if HJD<SCLD quit

                type RecordHIST fhist
                set fhist=rs.getRecord("HIST")
		set HJD=fhist.tjd
		if HJD<SCLD!(HJD>%SystemDate) quit
		
		set ETC=fhist.etc

		// not in group
		if ETC=""!('TG(ETC).data()) quit
		
		set ITC=fhist.itc

		// error correct or reversal
		if ITC.extract(6)!ITC.extract(12) quit

		// Exclude original tran that was EC/REV
		if Db.isDefined("HISTR","CID=:CID,TSEQ=:SEQ") quit

		set I=I+1
		set HIST(I)=ETC
		}

	set end=I-cnt+1

	// remove free items
	for J=I:-1:end kill HIST(J)

	set I=""

	for  set I=HIST(I).order() quit:I=""  set FEEAMT=FEEAMT+TG(HIST(I))
	quit


TRNGRP	// get transaction codes and fee amounts
	
	type Public Date SRVDT
	type Date EFD,TSRVDT
	type Public String ETC,FEETYP,TG()

	set TSRVDT=SRVDT+1
	type ResultSet rs=Db.select("TRNGRPDT","UTBLTRNGRPT","TRNGRP=:FEETYP AND TRNGRPDT<:TSRVDT","TRNGRPDT DESC")
	if rs.next() set EFD=rs.getCol("TRNGRPDT")

	type DbSet ds=Db.selectDbSet("UTBLTRNGRP","TRNGRP=:FEETYP AND TRNGRPDT=:EFD")
	while ds.next() do {
		type RecordUTBLTRNGRP utbltrgp=ds.getRecord("UTBLTRNGRP")
		set TG(utbltrgp.trncd)=utbltrgp.feeamt
		}

	quit

vSIG()	quit "59886^43631^Sanchez SCM Administrator^4379"	// Signature - LTD^TIME^USER^SIZE
