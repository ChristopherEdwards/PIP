R01S391	// SCA426 - Daily Deposit General Ledger Balance Rpt
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:49 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1=$$KEY^DBSREP("TTL",%SystemDate,1,"")

	set RID="SCA426"
	set RN="Daily Deposit General Ledger Balance Rpt"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[TTL]TJD|[TTL]TJD:DISTINCT:NOVAL||||D|Transaction Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CAT,CONAM,DESC,GLSC,GRP,RID,RN,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA426",RN="Daily Deposit General Ledger Balance Rpt"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA426","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[TTL]TYPE#1#4,[TTL]GLSC#7#4,[TTL]CC#13#6,[TTL]BAL#22#20,[TTL]BALACR#44#20,[TTL]INTAVL#66#20"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Transaction Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE=""
		set VWHERE=VWHERE_"TTL.TJD=:VIN1 AND TTL.CRCD IS NOT NULL AND TTL.CLS"
		set VWHERE=VWHERE_"='D'"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Daily Deposit General Ledger Balance Rpt"
		set VBNRINFO("PGM")="R01S391"
		set VBNRINFO("RID")="SCA426"
		set VBNRINFO("TABLES")="TTL,PRODDFTD"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TTL]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TTL]CRCD"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,PRODDFTD]TRB"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TTL]CLS"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,TTL]GRP"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,TTL]TYPE"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,TTL]GLSC"
		set VBNRINFO("ORDERBY",8)="[SYSDEV,TTL]CC"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:8 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:3 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("TTL.TJD,TTL.CRCD,PRODDFTD.TRB,TTL.CLS,TTL.GRP,TTL.TYPE,TTL.GLSC,TTL.CC,TTL.BAL,TTL.BALACR,TTL.INTAVL","TTL,PRODDFTD","TTL.TJD=:VIN1 AND TTL.CRCD IS NOT NULL AND TTL.CLS='D'","TTL.TJD,TTL.CRCD,PRODDFTD.TRB,TTL.CLS,TTL.GRP,TTL.TYPE,TTL.GLSC,TTL.CC","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7="",vovc8=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc8,vc8
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece($C(9),1)			// TTL.TJD
	set vc2=V.piece($C(9),2)			// TTL.CRCD
	set vc3=V.piece($C(9),3)			// PRODDFTD.TRB
	set vc4=V.piece($C(9),4)			// TTL.CLS
	set vc5=V.piece($C(9),5)			// TTL.GRP
	set vc6=V.piece($C(9),6)			// TTL.TYPE
	set vc7=V.piece($C(9),7)			// TTL.GLSC
	set vc8=V.piece($C(9),8)			// TTL.CC
	set vc9=V.piece($C(9),9)			// TTL.BAL
	set vc10=V.piece($C(9),10)			// TTL.BALACR
	set vc11=V.piece($C(9),11)			// TTL.INTAVL
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0,vs(8)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1,vskp(8)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(8).get() do VDTL8 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(8)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7,vc8,vovc8
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,vb8=1,VH0=1
	if vb6!(+vovc6'=+vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,vb8=1
	if vb7!(vovc7'=vc7) set vs(8)=0,vh(8)=0,VD(7)=0,vb8=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(8) set vs(8)=1 do VSUM8 quit:VFMQ  do stat^DBSRWUTL(8)
	if 'vs(7) set vs(7)=1 do VSUM7 quit:VFMQ  do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc9,vc10,vc11
	type Public String VSTATS

	set VT(8)=VT(8)+1
	set VT(8,1,1)=VT(8,1,1)+vc9			// @TOT([TTL]BAL)
	set VT(8,2,1)=VT(8,2,1)+vc10			// @TOT([TTL]BALACR)
	set VT(8,3,1)=VT(8,3,1)+vc11			// @TOT([TTL]INTAVL)
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CAT,CONAM,DESC,ER,GLSC,GRP,IOSL,RID,RN,TYPE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="        "_"Currency:"
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC,1,30)
	set VL=VL_$J("",18-VL.length())_V
	do VOM
	set VL="        "_"Category:"
	do VP2 quit:VFMQ!verror.get()  set V=$E(CAT,1,30)
	set VL=VL_$J("",18-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VSUM5	// Summary
	type public String %TIM,CAT,DESC,GLSC,GRP,I,IOSL,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="            "_"Total:"
	set V=VT(5,1,1)					// @TOT([TTL]BAL,)
	set VL=VL_$J("",20-VL.length())_$J($FN(V,",",2),21)
	set V=VT(5,2,1)					// @TOT([TTL]BALACR,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),21)
	set V=VT(5,3,1)					// @TOT([TTL]INTAVL,)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),21)
	do VOM
	quit

VSUM6	// Summary
	type public String %TIM,CAT,DESC,GLSC,GRP,I,IOSL,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                    "_"---------------------  --------------------  --------------------"
	do VOM
	set VL=$E(vc5,1,4)
	set VL=VL_$J("",12-VL.length())_"Total:"
	set V=VT(6,1,1)					// @TOT([TTL]BAL,)
	set VL=VL_$J("",20-VL.length())_$J($FN(V,",",2),21)
	set V=VT(6,2,1)					// @TOT([TTL]BALACR,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),21)
	set V=VT(6,3,1)					// @TOT([TTL]INTAVL,)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),21)
	do VOM
	set VL="" do VOM
	quit

VSUM7	// Summary
	type public String %TIM,CAT,DESC,GLSC,GRP,I,IOSL,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(7) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc6,4)
	set VL=VL_$J("",12-VL.length())_"Total:"
	set V=VT(7,1,1)					// @TOT([TTL]BAL,)
	set VL=VL_$J("",20-VL.length())_$J($FN(V,",",2),21)
	set V=VT(7,2,1)					// @TOT([TTL]BALACR,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),21)
	set V=VT(7,3,1)					// @TOT([TTL]INTAVL,)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),21)
	do VOM
	set VL="" do VOM
	quit

VDTL8	// Detail
	type public String %TIM,CAT,DESC,GLSC,GRP,IOSL,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc6,4)
	set VL=VL_$J("",6-VL.length())_$E(vc7,1,4)
	set VL=VL_$J("",11-VL.length())_$J(vc8,7)
	set VL=VL_$J("",19-VL.length())_$J($FN(vc9,",",2),22)
	set VL=VL_$J("",42-VL.length())_$J($FN(vc10,",",2),21)
	set VL=VL_$J("",64-VL.length())_$J($FN(vc11,",",2),21)
	do VOM
	quit

VSUM8	// Summary
	type public String %TIM,CAT,DESC,GLSC,GRP,I,IOSL,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	if 'VT(8) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="      "_$E(vc7,1,4)
	set VL=VL_$J("",12-VL.length())_"Total:"
	set V=VT(8,1,1)					// @TOT([TTL]BAL,)
	set VL=VL_$J("",20-VL.length())_$J($FN(V,",",2),21)
	set V=VT(8,2,1)					// @TOT([TTL]BALACR,)
	set VL=VL_$J("",42-VL.length())_$J($FN(V,",",2),21)
	set V=VT(8,3,1)					// @TOT([TTL]INTAVL,)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),21)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CAT,CONAM,DESC,GLSC,GRP,RID,RN,TYPE,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA426)"
	set VL=VL_$J("",102-VL.length())_"System: "
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Transaction Date: "
	set VL=VL_$J("",18-VL.length())_$J($$DAT^%ZM(vc1),10)
	do VOM
	set VL="   "_"Deposit Group: "
	set VL=VL_$J("",18-VL.length())_$E(vc5,1,4)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="Acct  G/L"
	do VOM
	set VL="Type  Code      CC      Principal Balance       Accrued Int/Div     Available Int/Div"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC

	type public String vc2
	/*
        ---- Revision History ------------------------------------------------
 
            01/17/05 - KINI - CR13991
                       Created instead of deleted by PSL compiler TTL.CRCD
                       post-processor.
 	*/
	
	type Public String CO,CRCD,DESC

	set CO=CUVAR.co
	set CRCD=vc2

	type RecordCRCD crcd=Db.getRecord("CRCD","CO,CRCD")
	
	set DESC=crcd.desc 
	quit

VP2	// Column pre-processor - Variable: CAT

	type public String vc3
	/*
        ---- Revision History ------------------------------------------------
 
            01/17/05 - KINI - CR13991
                       Added at PSL conversion.
	*/
	
	type Public String CAT
	type String TRB 

	set TRB=vc3
	set CAT=$S(TRB:"Debit",1:"Credit")_" Balance Instruments"
	quit
