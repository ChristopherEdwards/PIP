RTPCSH		/*
	  ORIG: GRAY - 01/13/2000
	  DESC: Teller Cash Count
    
    ---- Comments --------------------------------------------------------
    
    ---- Revision History ------------------------------------------------
	01/11/07 - chhabris - CR25140
		   Retrofit from ICGWeb01_Dev_Profile view for Profile Direct
		   Enhancements.
	
		   10/19/06 - APPLEYARDM - CR 23686
			Added back code previously removed for integration with
			Direct Teller	

	05/05/05 - TITOVE - CR 14192
		   Modified as part of DBI2 project. Removed CASHCUR
		   section that is not used. Added back TTL section that 
		   was mistakenly removed - it is called by computed 
		   column TPCASH.TTL.

	12/20/99 - GRAY - 32507
		   Removed code no longer needed due to the Elimination
		   of Teller/Branch Character Interface and placed remaining
		   code into PSL'd procedure definition.

	*/
	
	quit
	
	
public	TTL(Number BRCD,		// Branch Code
	     String UID,		// User ID
	       Date TPD,		// Teller Balancing Date
	    String CRCD)		// Currency Code

	/*
	  Calculate value for TPCASH.TTL column - Ending Cash Total
	*/

	type Number TTL = 0

        type RecordTPCASH tpc = Db.getRecord("TPCASH", "BRCD = :BRCD, UID = :UID, TPD = :TPD, CRCD = :CRCD")
        
	if tpc.hund set TTL = TTL + (tpc.hund * 100)	  		// Hundred dollars
	if tpc.fifty set TTL = TTL + (tpc.fifty * 50)	  		// Fifty dollars
	if tpc.twenty set TTL = TTL + (tpc.twenty * 20)    	  	// Twenty dollars
	if tpc.ten set TTL = TTL + (tpc.ten * 10)    	  		// Ten dollars
	if tpc.five set TTL = TTL + (tpc.five * 5)     	  		// Five dollars
	if tpc.two set TTL = TTL + (tpc.two * 2)     	  		// Two dollars
	if tpc.one set TTL = TTL + tpc.one    	  			// One dollar
	if tpc.silver set TTL = TTL + tpc.silver    	  		// Silver dollar
	if tpc.halves set TTL = TTL + tpc.halves   		  	// Half dollars
	if tpc.quarter set TTL = TTL + tpc.quarter		  	// Quarters
	if tpc.dimes set TTL = TTL + tpc.dimes   		  	// Dimes
	if tpc.nickle set TTL = TTL + tpc.nickle  		  	// Nickels
	if tpc.penny set TTL = TTL + tpc.penny  		  	// Pennies
	if tpc.decoy set TTL = TTL + tpc.decoy    	  		// Decoy
	if tpc.strap set TTL = TTL + tpc.strap    	  		// Strap currency
	if tpc.rolled set TTL = TTL + tpc.rolled  		  	// Rolled currency
	if tpc.mutil set TTL = TTL + tpc.mutil  		  	// Mutilated
	if tpc.forgn set TTL = TTL + tpc.forgn  		  	// Foreign
	if tpc.twopnc set TTL = TTL + tpc.twopnc  		  	// Two pence
	if tpc.tsilver set TTL = TTL + (tpc.tsilver * 2)  		// 2 Dollar Coins (AUD)
	if tpc.twtycn set TTL = TTL + tpc.twtycn		  	// 20 Cent Coins (AUD)
	if tpc.fthou set TTL = TTL + (tpc.fthou * 5000) 	  	// 5000 (BEC)
	if tpc.othou set TTL = TTL + (tpc.othou * 1000) 	  	// 1000 (BEC)
	if tpc.fhund set TTL = TTL + (tpc.fhund * 500)	  		// 500 (BEC)
	if tpc.fiftycn set TTL = TTL + (tpc.fiftycn * 50)	  	// 50 Coin (BEC)
	if tpc.twentycoin set TTL = TTL + (tpc.twentycoin * 20)  	// 20 Coin (BEC)
	if tpc.fivecoin set TTL = TTL + (tpc.fivecoin * 5)  	  	// 5 Coin (BEC)
	if tpc.tencoin set TTL = TTL + (tpc.tencoin * 10)  	  	// 10 Coin (DKK)
	if tpc.hundthou set TTL = TTL + (tpc.hundthou * 100000)	  	// 100000 (ITL)
	if tpc.fiftythou set TTL = TTL + (tpc.fiftythou * 50000)	// 50000 (ITL)
	if tpc.twentythou set TTL = TTL + (tpc.twentythou * 20000)	// 20000 (ITL)
	if tpc.tenthou set TTL = TTL + (tpc.tenthou * 10000)	  	// 10000 (ITL)
	if tpc.twothou set TTL = TTL + (tpc.twothou * 2000)	  	// 2000 (ITL)
	if tpc.fivehuncoin set TTL = TTL + (tpc.fivehuncoin * 500)	// 500 Coin (ITL)
	if tpc.twohundcoin set TTL = TTL + (tpc.twohundcoin * 200)	// 200 Coin (ITL)
	if tpc.onehundcoin set TTL = TTL + (tpc.onehundcoin * 100)	// 100 Coin (ITL)
	if tpc.twohund set TTL = TTL + (tpc.twohund * 200)	  	// 200 Bill (FRF)
	if tpc.twohundfif set TTL = TTL + (tpc.twohundfif * 250)	// 250 Bill (NLG)
	if tpc.twofifcoin set TTL = TTL + tpc.twofifcoin		// 2.50 Coin (NLG)
	if tpc.twentyfive set TTL = TTL + (tpc.twentyfive * 25)	  	// 25 Bill (NLG)
	if tpc.twntyfivcoin set TTL = TTL + (tpc.twntyfivcoin * 25)	// 25 Coin (ESP)
	if tpc.othoucoin set TTL = TTL + (tpc.othoucoin * 1000)	  	// 1000 Coin (JPY)
	if tpc.fhundthou set TTL = TTL + (tpc.fhundthou * 500000)	// 500000 Bill (ITL)
	if tpc.omill set TTL = TTL + (tpc.omill * 1000000)  		// 1000000 Bill
	if tpc.omillcoin set TTL = TTL + (tpc.omillcoin * 1000000)  	// 1000000 Coin


	quit $$^SCARND(TTL,0,"",CRCD,"","",1)
 

public INIT     // Initialize DENOM array
 
	type public Number DENOM()

	set DENOM(4)=100                          // Hundred dollars
	set DENOM(5)=50                           // Fifty dollars
	set DENOM(6)=20                           // Twenty dollars
	set DENOM(7)=10                           // Ten dollars
	set DENOM(8)=5                            // Five dollars
	set DENOM(9)=2                            // Two dollars
	set DENOM(10)=1                           // One dollars
	set DENOM(11)=1                           // Silver dollar
	set DENOM(12)=.5                          // Half dollars
	set DENOM(13)=.25                         // Quarters
	set DENOM(14)=.1                          // Dimes
	set DENOM(15)=.05                         // Nickels
	set DENOM(16)=.01                         // Pennies
	set DENOM(17)=1                           // Decoy
	set DENOM(18)=1                           // Strap currency
	set DENOM(19)=.25                         // Rolled currency
	set DENOM(20)=.01                         // Mutilated
	set DENOM(21)=.01                         // Foreign
	set DENOM(22)=.02                         // Two pence
	set DENOM(23)=2                           // 2 Dollar Coins (AUD)
	set DENOM(24)=.2                          // 20 Cent Coins (AUD)
	set DENOM(25)=5000                        // 5000 (BEC)
	set DENOM(26)=1000                        // 1000 (BEC)
	set DENOM(27)=500                         // 500 (BEC)
	set DENOM(28)=50                          // 50 Coin (BEC)
	set DENOM(29)=20                          // 20 Coin (BEC)
	set DENOM(30)=5                           // 5 Coin (BEC)
	set DENOM(31)=10                          // 10 Coin (DKK)
	set DENOM(32)=100000                      // 100000 (ITL)
	set DENOM(33)=50000                       // 50000 (ITL)
	set DENOM(34)=20000                       // 20000 (ITL)
	set DENOM(35)=10000                       // 10000 (ITL)
	set DENOM(36)=2000                        // 2000 (ITL)
	set DENOM(37)=500                         // 500 Coin (ITL)
	set DENOM(38)=200                         // 200 Coin (ITL)
	set DENOM(39)=100                         // 100 Coin (ITL)
	set DENOM(40)=200                         // 200 Bill (FRF)
	set DENOM(41)=250                         // 250 Bill (NLG)
	set DENOM(42)=2.5                         // 2.50 Coin (NLG)
	set DENOM(43)=25                          // 25 Bill (NLG)
	set DENOM(44)=25                          // 25 Coin (ESP)
	set DENOM(45)=1000                        // 1000 Coin (JPY)
	set DENOM(46)=500000                      // 500000 Bill (ITL)
	set DENOM(47)=1000000                     // 1000000 Bill
	set DENOM(48)=1000000                     // 1000000 Coin
	
	quit
	

Public CASHCUR(X,CRCDFLG)	//  Determine if Cash Currency Flag = Y
	/*
	  This routine will return the value of [CRCD]CASHCUR.  If this 
	  flag = "Y", the teller may enter cash totals in this currency. 
	
	  ARGUMENTS:
	 	. X	Currency Code
	
	  RETURNS:
	 	. $$	CASHCUR
	*/
	
	type public String CO

	if X.get().isNull() quit ""
	if CO.get().isNull() do {
		type RecordCUVAR cuvar
		set cuvar=Db.getRecord("CUVAR")
		set CO=cuvar.co
		}
	
	type RecordCRCD crcd
	set crcd=Db.getRecord("CRCD","CO=:CO,CRCD=:X")
	
	quit crcd.cashcur


public CASH(DATE,BRCD,UID,CRCD) // Cash count for date determination
	/*
	
	Returns:	1 - If this day's cash count should be used as
			    starting cash
			0 - If there was no cash count for today
	*/

	if DATE.get().isNull() quit 0

	type RecordTPCASH tpcash=Db.getRecord("TPCASH","BRCD,UID,DATE,CRCD",1)
	if 'tpcash.getMode() quit 0
	if tpcash.ectot'="" quit 1	//Cash was entered
	if tpcash.ccseq'="" quit 1	//Cash count sequence
	quit 0
        
 #OPTION ResultClass ON
Public String vSIG()	quit "60669^53341^Sanjay Chhabria^7935"	// Signature - LTD^TIME^USER^SIZE
