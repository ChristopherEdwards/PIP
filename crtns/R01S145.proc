R01S145	// SCA077 - Negative Ledger Balance Accounts Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:43 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String TOD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1=TJD-1
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA077"
	set RN="Negative Ledger Balance Accounts Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[DAYENDNEG]EFD|[DAYENDNEG]EFD:DISTINCT:NOVAL||||D|Effective Date|||||"
	set %TAB("VIN2")="|255||[DEP]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""D"""""":NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN3")="|255||[DEP]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN4")="|255||[DEP]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN5")="|255||[DAYENDNEG]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TOD
	type public Date VIN1
	type public String VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BEGD,BRANCH,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA077",RN="Negative Ledger Balance Accounts Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA077","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DEP]CID#1#12,[DEP]GRP#14#4,[DEP]TYPE#19#4,[DEP]TITLE1#24#37,[DEP]BAL#62#15,[DEP]BALCOL#78#15,[DEP]BALAVL#94#15,[DEP]TLD#121#10\[CIF]HPH#24#12,[DAYENDNEG]BALNEG#59#18"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DAYENDNEG]EFD = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DEP]GRP "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]TYPE "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DEP]BOO "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DAYENDNEG]CID "_VIN5,SEQ=SEQ+1
		set DQQRY(SEQ)="[DEP]CLS=""D""",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DAYENDNEG,DEP,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Effective Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Group"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Product Type"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Branch of Ownership"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Account Number"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Negative Ledger Balance Accounts Report"
		set VBNRINFO("PGM")="R01S145"
		set VBNRINFO("RID")="SCA077"
		set VBNRINFO("TABLES")="DAYENDNEG,DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DAYENDNEG]EFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DAYENDNEG]""NEG"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEP]BOO"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DAYENDNEG]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DAYENDNEG.EFD,DEP.BOO,DAYENDNEG.CID,DEP.CID,DEP.GR"
	set VSELECT=VSELECT_"P,DEP.TYPE,DEP.TITLE1,DEP.BAL,DEP.BALCOL,DEP.BALAV"
	set VSELECT=VSELECT_"L,DEP.TLD,CIF.HPH,DAYENDNEG.BALNEG,CIF.BPH"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DAYENDNEG,DEP,CIF",VWHERE,"DAYENDNEG.EFD,DEP.BOO,DAYENDNEG.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// DAYENDNEG.EFD
	set vc2=V.piece($C(9),2)			// DEP.BOO
	set vc3=V.piece($C(9),3)			// DAYENDNEG.CID
	set vc4=V.piece($C(9),4)			// DEP.CID
	set vc5=V.piece($C(9),5)			// DEP.GRP
	set vc6=V.piece($C(9),6)			// DEP.TYPE
	set vc7=V.piece($C(9),7)			// DEP.TITLE1
	set vc8=V.piece($C(9),8)			// DEP.BAL
	set vc9=V.piece($C(9),9)			// DEP.BALCOL
	set vc10=V.piece($C(9),10)			// DEP.BALAVL
	set vc11=V.piece($C(9),11)			// DEP.TLD
	set vc12=V.piece($C(9),12)			// CIF.HPH
	set vc13=V.piece($C(9),13)			// DAYENDNEG.BALNEG
	set vc14=V.piece($C(9),14)			// CIF.BPH
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 type Public Number TOD
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 set TOD=cuvar.tjd
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %TIM,BEGD,BRANCH,IOSL,TOD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc4,12)
	set VL=VL_$J("",13-VL.length())_$E(vc5,1,4)
	set VL=VL_$J("",18-VL.length())_$J(vc6,4)
	set VL=VL_$J("",23-VL.length())_$E(vc7,1,37)
	set VL=VL_$J("",61-VL.length())_$J(vc8,15,2)
	set VL=VL_$J("",77-VL.length())_$J(vc9,15,2)
	set VL=VL_$J("",93-VL.length())_$J(vc10,15,2)
	do VP1 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(BEGD),10)
	set VL=VL_$J("",109-VL.length())_V
	set VL=VL_$J("",120-VL.length())_$J($$DAT^%ZM(vc11),10)
	do VOM
	set V=vc12,VO=V set V=$E(V,1,12) do VP2 quit:VFMQ!verror.get()  set VL="                       "_V
	set VL=VL_$J("",36-VL.length())_$J(vc13,40,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BEGD,BRANCH,CONAM,RID,RN,TOD,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA077)"
	set VL=VL_$J("",97-VL.length())_"System Date:"
	set VL=VL_$J("",110-VL.length())_$E($$DAT^%ZM(TJD,$G(%MSKD)),1,10)
	set VL=VL_$J("",121-VL.length())_"Page:"
	set VL=VL_$J("",127-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$E(BRANCH,1,30) set VL=V
	do VOM
	set VL="                       "_"Account Title/                            Ledger Bal/       Collected      Available   Overdraft  Date Last"
	do VOM
	set VL="  "_"Account # Group Type Phone Number                              EOD Neg Bal         Balance        Balance  Begin Date Transaction"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: BEGD

	type public String vc3
 type Public Date BEGD
 type Number CID
 type Date DAT

 set DAT=%SystemDate
 set CID=vc3
 set BEGD=0
 
 while ('BEGD) do {
	type RecordDAYENDNEG dayendneg=Db.getRecord("DAYENDNEG","EFD=:DAT,CID=:CID",1)
	if dayendneg.getMode()=0 set BEGD=DAT quit
	set DAT=DAT-1
	}
	quit

VP2	// Column post-processor - [SYSDEV,CIF]HPH

	type public String vc14
 type Public String V
 if 'V set V=vc14
	quit

VP3	// Column pre-processor - Variable: BRANCH

	type public String vc2
 type String BCD,BOO,PARAM
 type Public String BRANCH

 set BOO=vc2
 set BCD="" 
 if BOO="" set BRANCH="" quit
 type RecordUTBLBRCD utblbrcd=Db.getRecord("UTBLBRCD","BRCD=:BOO",1)
 set PARAM=BOO_" - "_BCD
 // Branch ~p1
 set BRANCH=$$^MSG(5657,PARAM)
	quit
