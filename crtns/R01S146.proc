R01S146	// SCA078 - Loan Delinquency Detail Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:43 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DRCN,JOB
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA078"
	set RN="Loan Delinquency Detail Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DRCN,JOB
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,AD,CAT,COLOFF,CONAM,CY,DETAIL,GRP,PGM,PY,RID,RN,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc9,vovc1
	type String vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA078",RN="Loan Delinquency Detail Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA078","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="LNDELQ1.JOB=:JOB"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Loan Delinquency Detail Report"
		set VBNRINFO("PGM")="R01S146"
		set VBNRINFO("RID")="SCA078"
		set VBNRINFO("TABLES")="LNDELQ1,LN,CIF,PRODDFTL,PRODCTL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNDELQ1]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNDELQ1]1"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNDELQ1]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNDELQ1]COLOFF"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNDELQ1]TYPE"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LNDELQ1]CAT"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,LNDELQ1]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:10 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNDELQ1.JOB,LNDELQ1.GRP,LNDELQ1.COLOFF,LNDELQ1.TYPE,LNDELQ1.CAT,LNDELQ1.CID,PRODCTL.DCC1,PRODCTL.DCC2,PRODCTL.DCC3,PRODCTL.DCC4,PRODCTL.DCC5,LN.UNTO,LN.DUIN,LN.BAL,LN.TDUE,LN.TOTCOL,LN.UNAPF,LN.LCHG,LN.ACR,LN.GTDUE,LN.MCHG,CIF.HPH,LN.CCLD,LN.PMT,LN.ODT,LN.FPC01,LN.FPC02,LN.FPC03,LN.FPC04,LN.FPC05,LN.FPC06,LN.FPC07,LN.FPC08,LN.FPC09,LN.FPC10,LN.FPC11,LN.FPC12,CIF.BPH,LN.LPDT,LN.PVAR,LN.MDT,LN.FPP01,LN.FPP02,LN.FPP03,LN.FPP04,LN.FPP05,LN.FPP06,LN.FPP07,LN.FPP08,LN.FPP09,LN.FPP10,LN.FPP11,LN.FPP12,LN.DIST1LD,LN.DPMT,LN.PAYTD,LN.LCAN,LN.COLCD,LN.ONP,LN.DY1,LN.DY2,LN.DY3,LN.DY4,LN.DY5,LN.ORG,LN.SCHLD,LN.PMTDEL,LN.FSINV,LN.PAPL,LN.LCANLF,LN.PURCD,LN.CNTCR,LN.DP1,LN.DP2,LN.DP3,LN.DP4,LN.DP5,LN.EXTLDT,LN.EXTTOT,LN.NAI","LNDELQ1,LN,CIF,PRODDFTL,PRODCTL","LNDELQ1.JOB=:JOB","LNDELQ1.JOB,LNDELQ1.GRP,LNDELQ1.COLOFF,LNDELQ1.TYPE,LNDELQ1.CAT,LNDELQ1.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80
	set vc1=V.piece($C(9),1)			// LNDELQ1.JOB
	set vc2=V.piece($C(9),2)			// LNDELQ1.GRP
	set vc3=V.piece($C(9),3)			// LNDELQ1.COLOFF
	set vc4=V.piece($C(9),4)			// LNDELQ1.TYPE
	set vc5=V.piece($C(9),5)			// LNDELQ1.CAT
	set vc6=V.piece($C(9),6)			// LNDELQ1.CID
	set vc7=V.piece($C(9),7)			// PRODCTL.DCC1
	set vc8=V.piece($C(9),8)			// PRODCTL.DCC2
	set vc9=V.piece($C(9),9)			// PRODCTL.DCC3
	set vc10=V.piece($C(9),10)			// PRODCTL.DCC4
	set vc11=V.piece($C(9),11)			// PRODCTL.DCC5
	set vc12=V.piece($C(9),12)			// LN.UNTO
	set vc13=V.piece($C(9),13)			// LN.DUIN
	set vc14=V.piece($C(9),14)			// LN.BAL
	set vc15=V.piece($C(9),15)			// LN.TDUE
	set vc16=V.piece($C(9),16)			// LN.TOTCOL
	set vc17=V.piece($C(9),17)			// LN.UNAPF
	set vc18=V.piece($C(9),18)			// LN.LCHG
	set vc19=V.piece($C(9),19)			// LN.ACR
	set vc20=V.piece($C(9),20)			// LN.GTDUE
	set vc21=V.piece($C(9),21)			// LN.MCHG
	set vc22=V.piece($C(9),22)			// CIF.HPH
	set vc23=V.piece($C(9),23)			// LN.CCLD
	set vc24=V.piece($C(9),24)			// LN.PMT
	set vc25=V.piece($C(9),25)			// LN.ODT
	set vc26=V.piece($C(9),26)			// LN.FPC01
	set vc27=V.piece($C(9),27)			// LN.FPC02
	set vc28=V.piece($C(9),28)			// LN.FPC03
	set vc29=V.piece($C(9),29)			// LN.FPC04
	set vc30=V.piece($C(9),30)			// LN.FPC05
	set vc31=V.piece($C(9),31)			// LN.FPC06
	set vc32=V.piece($C(9),32)			// LN.FPC07
	set vc33=V.piece($C(9),33)			// LN.FPC08
	set vc34=V.piece($C(9),34)			// LN.FPC09
	set vc35=V.piece($C(9),35)			// LN.FPC10
	set vc36=V.piece($C(9),36)			// LN.FPC11
	set vc37=V.piece($C(9),37)			// LN.FPC12
	set vc38=V.piece($C(9),38)			// CIF.BPH
	set vc39=V.piece($C(9),39)			// LN.LPDT
	set vc40=V.piece($C(9),40)			// LN.PVAR
	set vc41=V.piece($C(9),41)			// LN.MDT
	set vc42=V.piece($C(9),42)			// LN.FPP01
	set vc43=V.piece($C(9),43)			// LN.FPP02
	set vc44=V.piece($C(9),44)			// LN.FPP03
	set vc45=V.piece($C(9),45)			// LN.FPP04
	set vc46=V.piece($C(9),46)			// LN.FPP05
	set vc47=V.piece($C(9),47)			// LN.FPP06
	set vc48=V.piece($C(9),48)			// LN.FPP07
	set vc49=V.piece($C(9),49)			// LN.FPP08
	set vc50=V.piece($C(9),50)			// LN.FPP09
	set vc51=V.piece($C(9),51)			// LN.FPP10
	set vc52=V.piece($C(9),52)			// LN.FPP11
	set vc53=V.piece($C(9),53)			// LN.FPP12
	set vc54=V.piece($C(9),54)			// LN.DIST1LD
	set vc55=V.piece($C(9),55)			// LN.DPMT
	set vc56=V.piece($C(9),56)			// LN.PAYTD
	set vc57=V.piece($C(9),57)			// LN.LCAN
	set vc58=V.piece($C(9),58)			// LN.COLCD
	set vc59=V.piece($C(9),59)			// LN.ONP
	set vc60=V.piece($C(9),60)			// LN.DY1
	set vc61=V.piece($C(9),61)			// LN.DY2
	set vc62=V.piece($C(9),62)			// LN.DY3
	set vc63=V.piece($C(9),63)			// LN.DY4
	set vc64=V.piece($C(9),64)			// LN.DY5
	set vc65=V.piece($C(9),65)			// LN.ORG
	set vc66=V.piece($C(9),66)			// LN.SCHLD
	set vc67=V.piece($C(9),67)			// LN.PMTDEL
	set vc68=V.piece($C(9),68)			// LN.FSINV
	set vc69=V.piece($C(9),69)			// LN.PAPL
	set vc70=V.piece($C(9),70)			// LN.LCANLF
	set vc71=V.piece($C(9),71)			// LN.PURCD
	set vc72=V.piece($C(9),72)			// LN.CNTCR
	set vc73=V.piece($C(9),73)			// LN.DP1
	set vc74=V.piece($C(9),74)			// LN.DP2
	set vc75=V.piece($C(9),75)			// LN.DP3
	set vc76=V.piece($C(9),76)			// LN.DP4
	set vc77=V.piece($C(9),77)			// LN.DP5
	set vc78=V.piece($C(9),78)			// LN.EXTLDT
	set vc79=V.piece($C(9),79)			// LN.EXTTOT
	set vc80=V.piece($C(9),80)			// LN.NAI
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public Number CAT, CY, PY
	type public String AD, RID, VRWOPT

	
	set VRWOPT("NOCLOSE")=""
	set AD=""
	set CAT=""
	set CY=""
	set PY=""
	set RID=""
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=DRCN,JOB
	quit

VRPOST	// Report post-processor

	type public String DETAIL,PGM
	type String RID

	// Set NOCLOSE and NOOPEN flags to allow PNTQ devices to work correctly

	set VRWOPT("NOOPEN")=1
	set VRWOPT("NOCLOSE")=1

	set:'DETAIL.exists() DETAIL=0 if DETAIL quit 
 
	set RID="SCA080" do ^URID if PGM.length() do V0^@PGM

	set RID="SCA081" do ^URID if PGM.length() do V0^@PGM

	set RID="SCA082" do ^URID if PGM.length()  do V0^@PGM

	set RID="SCA087" do ^URID if PGM.length() do V0^@PGM

	set RID="SCA079" do ^URID if PGM.length() do V0^@PGM

	set RID="SCA293" do ^URID if PGM.length() do V0^@PGM

	kill VRWOPT("NOOPEN")
	kill VRWOPT("NOCLOSE")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	if 'vskp(7).get() do VDTL7 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(+vovc1'=+vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,VH0=1
	if vb5!(+vovc4'=+vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,VH0=1
	if vb6!(+vovc5'=+vc5) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do VSUM7 quit:VFMQ  do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc19,vc14,vc13,vc20,vc18,vc21,vc15,vc16,vc17,vc12
	type Public String VSTATS

	set VT(7)=VT(7)+1
	set VT(7,1,1)=VT(7,1,1)+vc19			// @TOT([LN]ACR)
	set VT(7,2,1)=VT(7,2,1)+vc14			// @TOT([LN]BAL)
	set VT(7,3,1)=VT(7,3,1)+vc13			// @TOT([LN]DUIN)
	set VT(7,4,1)=VT(7,4,1)+vc20			// @TOT([LN]GTDUE)
	set VT(7,5,1)=VT(7,5,1)+vc18			// @TOT([LN]LCHG)
	set VT(7,6,1)=VT(7,6,1)+vc21			// @TOT([LN]MCHG)
	set VT(7,7,1)=VT(7,7,1)+vc15			// @TOT([LN]TDUE)
	set VT(7,8,1)=VT(7,8,1)+vc16			// @TOT([LN]TOTCOL)
	set VT(7,9,1)=VT(7,9,1)+vc17			// @TOT([LN]UNAPF)
	set VT(7,10,1)=VT(7,10,1)+vc12			// @TOT([LN]UNTO)
	quit

VSUM4	// Summary
	type public String %TIM,AD,CAT,COLOFF,CY,DETAIL,DRCN,GRP,I,IOSL,JOB,PGM,PY,RID,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VRWOPT,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78
	type public String vc79,vc8,vc80,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="Group "
	set VL=VL_$J("",6-VL.length())_$E(vc2,1,4)
	set VL=VL_$J("",12-VL.length())_"Total:"
	set VL=VL_$J("",40-VL.length())_"---------"
	set VL=VL_$J("",61-VL.length())_"-------             -------"
	do VOM
	set V=VT(4,10,1)				// @TOT([LN]UNTO,)
	set VL="                                                           "_$J(V,9,2)
	do VOM
	set V=VT(4,3,1)					// @TOT([LN]DUIN,)
	set VL="                                                           "_$J(V,9,2)
	do VOM
	set V=VT(4,2,1)					// @TOT([LN]BAL,)
	set VL="                                      "_$J(V,11,2)
	set V=VT(4,7,1)					// @TOT([LN]TDUE,)
	set VL=VL_$J("",59-VL.length())_$J(V,9,2)
	set V=VT(4,8,1)					// @TOT([LN]TOTCOL,)
	set VL=VL_$J("",76-VL.length())_$J(V,12,2)
	do VOM
	set V=VT(4,9,1)					// @TOT([LN]UNAPF,)
	set VL="                                                           "_$J(V,9,2)
	set V=VT(4,5,1)					// @TOT([LN]LCHG,)
	set VL=VL_$J("",80-VL.length())_$J(V,8,2)
	do VOM
	set V=VT(4,1,1)					// @TOT([LN]ACR,)
	set VL="                                      "_$J(V,11,2)
	set V=VT(4,4,1)					// @TOT([LN]GTDUE,)
	set VL=VL_$J("",59-VL.length())_$J(V,9,2)
	set V=VT(4,6,1)					// @TOT([LN]MCHG,)
	set VL=VL_$J("",80-VL.length())_$J(V,8,2)
	do VOM
	set VL="" do VOM
	quit

VSUM5	// Summary
	type public String %TIM,AD,CAT,COLOFF,CY,DETAIL,DRCN,GRP,I,IOSL,JOB,PGM,PY,RID,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VRWOPT,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78
	type public String vc79,vc8,vc80,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="Officer "
	set VL=VL_$J("",8-VL.length())_$J(vc3,3)
	set VL=VL_$J("",12-VL.length())_"Total:"
	set VL=VL_$J("",40-VL.length())_"---------"
	set VL=VL_$J("",61-VL.length())_"-------             -------"
	do VOM
	set V=VT(5,10,1)				// @TOT([LN]UNTO,)
	set VL="                                                           "_$J(V,9,2)
	do VOM
	set V=VT(5,3,1)					// @TOT([LN]DUIN,)
	set VL="                                                           "_$J(V,9,2)
	do VOM
	set V=VT(5,2,1)					// @TOT([LN]BAL,)
	set VL="                                      "_$J(V,11,2)
	set V=VT(5,7,1)					// @TOT([LN]TDUE,)
	set VL=VL_$J("",59-VL.length())_$J(V,9,2)
	set V=VT(5,8,1)					// @TOT([LN]TOTCOL,)
	set VL=VL_$J("",76-VL.length())_$J(V,12,2)
	do VOM
	set V=VT(5,9,1)					// @TOT([LN]UNAPF,)
	set VL="                                                           "_$J(V,9,2)
	set V=VT(5,5,1)					// @TOT([LN]LCHG,)
	set VL=VL_$J("",80-VL.length())_$J(V,8,2)
	do VOM
	set V=VT(5,1,1)					// @TOT([LN]ACR,)
	set VL="                                      "_$J(V,11,2)
	set V=VT(5,4,1)					// @TOT([LN]GTDUE,)
	set VL=VL_$J("",59-VL.length())_$J(V,9,2)
	set V=VT(5,6,1)					// @TOT([LN]MCHG,)
	set VL=VL_$J("",80-VL.length())_$J(V,8,2)
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %TIM,AD,CAT,COLOFF,CY,DETAIL,DRCN,GRP,IOSL,JOB,PGM,PY,RID,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VRWOPT,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78
	type public String vc79,vc8,vc80,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:VD(6)  set VD(6)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="Loans That Are Delinquent"
	do VP1 quit:VFMQ!verror.get()  set V=$E(DRCN(CAT),1,20)
	set VL=VL_$J("",26-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Collection Officer: "
	set VL=VL_$J("",21-VL.length())_$J(vc3,2)
	set VL=VL_$J("",32-VL.length())_"Group: "
	set VL=VL_$J("",39-VL.length())_$E(vc2,1,4)
	set VL=VL_$J("",48-VL.length())_"Type: "
	set VL=VL_$J("",55-VL.length())_$J(vc4,3)
	do VOM
	set VL="" do VOM
	quit

VSUM6	// Summary
	type public String %TIM,AD,CAT,COLOFF,CY,DETAIL,DRCN,GRP,I,IOSL,JOB,PGM,PY,RID,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VRWOPT,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78
	type public String vc79,vc8,vc80,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(6) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="Type "
	set VL=VL_$J("",5-VL.length())_$J(vc4,4)
	set VL=VL_$J("",10-VL.length())_"Total:"
	set VL=VL_$J("",40-VL.length())_"---------"
	set VL=VL_$J("",61-VL.length())_"-------             -------"
	do VOM
	set V=VT(6,10,1)				// @TOT([LN]UNTO,)
	set VL="                                                           "_$J(V,9,2)
	do VOM
	set V=VT(6,3,1)					// @TOT([LN]DUIN,)
	set VL="                                                           "_$J(V,9,2)
	do VOM
	set V=VT(6,2,1)					// @TOT([LN]BAL,)
	set VL="                                      "_$J(V,11,2)
	set V=VT(6,7,1)					// @TOT([LN]TDUE,)
	set VL=VL_$J("",59-VL.length())_$J(V,9,2)
	set V=VT(6,8,1)					// @TOT([LN]TOTCOL,)
	set VL=VL_$J("",76-VL.length())_$J(V,12,2)
	do VOM
	set V=VT(6,9,1)					// @TOT([LN]UNAPF,)
	set VL="                                                           "_$J(V,9,2)
	set V=VT(6,5,1)					// @TOT([LN]LCHG,)
	set VL=VL_$J("",80-VL.length())_$J(V,8,2)
	do VOM
	set V=VT(6,1,1)					// @TOT([LN]ACR,)
	set VL="                                      "_$J(V,11,2)
	set V=VT(6,4,1)					// @TOT([LN]GTDUE,)
	set VL=VL_$J("",59-VL.length())_$J(V,9,2)
	set V=VT(6,6,1)					// @TOT([LN]MCHG,)
	set VL=VL_$J("",80-VL.length())_$J(V,8,2)
	do VOM
	set VL="" do VOM
	quit

VDTL7	// Detail
	type public String %TIM,AD,CAT,COLOFF,CY,DETAIL,DRCN,GRP,IOSL,JOB,PGM,PY,RID,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VRWOPT,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78
	type public String vc79,vc8,vc80,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc6,12)
	do VP2 quit:VFMQ!verror.get()  set V=$E(AD(1),1,25)
	set VL=VL_$J("",13-VL.length())_V
	set V=vc22,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,10)
	set VL=VL_$J("",38-VL.length())_V		// [SYSDEV,CIF]HPH
	set VL=VL_$J("",49-VL.length())_$J($$DAT^%ZM(vc23),10)
	set VL=VL_$J("",60-VL.length())_$J(vc12,8,2)
	set VL=VL_$J("",69-VL.length())_$J(vc24,9,2)
	set VL=VL_$J("",80-VL.length())_$J($$DAT^%ZM(vc25),10)
	set VL=VL_$J("",91-VL.length())_$J(vc26,7)
	set VL=VL_$J("",99-VL.length())_$J(vc27,2)
	set VL=VL_$J("",102-VL.length())_$J(vc28,2)
	set VL=VL_$J("",105-VL.length())_$J(vc29,2)
	set VL=VL_$J("",108-VL.length())_$J(vc30,2)
	set VL=VL_$J("",111-VL.length())_$J(vc31,2)
	set VL=VL_$J("",114-VL.length())_$J(vc32,2)
	set VL=VL_$J("",117-VL.length())_$J(vc33,2)
	set VL=VL_$J("",120-VL.length())_$J(vc34,2)
	set VL=VL_$J("",123-VL.length())_$J(vc35,2)
	set VL=VL_$J("",126-VL.length())_$J(vc36,2)
	set VL=VL_$J("",129-VL.length())_$J(vc37,2)
	do VOM
	set VL="             "_$E(AD(2),1,25)
	set V=vc38,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J(V,10)
	set VL=VL_$J("",38-VL.length())_V		// [SYSDEV,CIF]BPH
	set VL=VL_$J("",48-VL.length())_$J($$DAT^%ZM(vc39),10)
	set VL=VL_$J("",59-VL.length())_$J(vc13,8,2)
	set VL=VL_$J("",68-VL.length())_$J(vc40,18,2)
	set VL=VL_$J("",86-VL.length())_$J($$DAT^%ZM(vc41),10)
	set VL=VL_$J("",97-VL.length())_$J(vc42,1)
	set VL=VL_$J("",99-VL.length())_$J(vc43,2)
	set VL=VL_$J("",102-VL.length())_$J(vc44,2)
	set VL=VL_$J("",105-VL.length())_$J(vc45,2)
	set VL=VL_$J("",108-VL.length())_$J(vc46,2)
	set VL=VL_$J("",111-VL.length())_$J(vc47,2)
	set VL=VL_$J("",114-VL.length())_$J(vc48,2)
	set VL=VL_$J("",117-VL.length())_$J(vc49,2)
	set VL=VL_$J("",120-VL.length())_$J(vc50,2)
	set VL=VL_$J("",123-VL.length())_$J(vc51,2)
	set VL=VL_$J("",126-VL.length())_$J(vc52,2)
	set VL=VL_$J("",129-VL.length())_$J(vc53,2)
	do VOM
	set VL="             "_$E(AD(3),1,25)
	set VL=VL_$J("",39-VL.length())_$J(vc14,9,2)
	set VL=VL_$J("",49-VL.length())_$J($$DAT^%ZM(vc54),10)
	set VL=VL_$J("",60-VL.length())_$J(vc15,8,2)
	set VL=VL_$J("",69-VL.length())_$J(vc55,9,2)
	set VL=VL_$J("",79-VL.length())_$J(vc16,9,2)
	set VL=VL_$J("",89-VL.length())_$J(vc56,6,2)
	set VL=VL_$J("",96-VL.length())_$J(vc57,2)
	set VL=VL_$J("",100-VL.length())_$E(vc58,1,4)
	set VL=VL_$J("",105-VL.length())_$J(vc59,5)
	set VL=VL_$J("",111-VL.length())_$J(vc60,8)
	set VL=VL_$J("",120-VL.length())_$J(vc61,2)
	set VL=VL_$J("",123-VL.length())_$J(vc62,2)
	set VL=VL_$J("",126-VL.length())_$J(vc63,2)
	set VL=VL_$J("",129-VL.length())_$J(vc64,2)
	do VOM
	set VL="             "_$E(AD(4),1,25)
	set VL=VL_$J("",39-VL.length())_$J(vc65,9,2)
	set VL=VL_$J("",49-VL.length())_$J($$DAT^%ZM(vc66),10)
	set VL=VL_$J("",60-VL.length())_$J(vc17,8,2)
	set VL=VL_$J("",69-VL.length())_$J(vc67,3)
	set VL=VL_$J("",73-VL.length())_$E(vc68,1,5)
	set VL=VL_$J("",79-VL.length())_$J(vc18,9,2)
	set VL=VL_$J("",89-VL.length())_$J(vc69,6,2)
	set VL=VL_$J("",96-VL.length())_$J(vc70,2)
	set VL=VL_$J("",100-VL.length())_$E(vc71,1,4)
	set VL=VL_$J("",105-VL.length())_$J(vc72,5)
	set VL=VL_$J("",111-VL.length())_$J(vc73,8)
	set VL=VL_$J("",120-VL.length())_$J(vc74,2)
	set VL=VL_$J("",123-VL.length())_$J(vc75,2)
	set VL=VL_$J("",126-VL.length())_$J(vc76,2)
	set VL=VL_$J("",129-VL.length())_$J(vc77,2)
	do VOM
	set VL="             "_$E(AD(5),1,25)
	set VL=VL_$J("",39-VL.length())_$J(vc19,9,2)
	set VL=VL_$J("",49-VL.length())_$J($$DAT^%ZM(vc78),10)
	set VL=VL_$J("",60-VL.length())_$J(vc20,8,2)
	set VL=VL_$J("",69-VL.length())_$J(vc79,3)
	set VL=VL_$J("",73-VL.length())_$J(vc21,15,2)
	set VL=VL_$J("",90-VL.length())_$S(vc80:"Y",1:"N")
	do VOM
	set VL="" do VOM
	quit

VSUM7	// Summary
	type public String %TIM,AD,CAT,COLOFF,CY,DETAIL,DRCN,GRP,I,IOSL,JOB,PGM,PY,RID,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VRWOPT,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78
	type public String vc79,vc8,vc80,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(7) quit
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL=$E(DRCN(CAT),1,20)
	set VL=VL_$J("",21-VL.length())_"DELINQUENT TOTAL:"
	set VL=VL_$J("",40-VL.length())_"---------"
	set VL=VL_$J("",61-VL.length())_"-------             -------"
	do VOM
	set V=VT(7,10,1)				// @TOT([LN]UNTO,)
	set VL="                                                           "_$J(V,9,2)
	do VOM
	set V=VT(7,3,1)					// @TOT([LN]DUIN,)
	set VL="                                                           "_$J(V,9,2)
	do VOM
	set V=VT(7,2,1)					// @TOT([LN]BAL,)
	set VL="                                      "_$J(V,11,2)
	set V=VT(7,7,1)					// @TOT([LN]TDUE,)
	set VL=VL_$J("",59-VL.length())_$J(V,9,2)
	set V=VT(7,8,1)					// @TOT([LN]TOTCOL,)
	set VL=VL_$J("",76-VL.length())_$J(V,12,2)
	do VOM
	set V=VT(7,9,1)					// @TOT([LN]UNAPF,)
	set VL="                                                           "_$J(V,9,2)
	set V=VT(7,5,1)					// @TOT([LN]LCHG,)
	set VL=VL_$J("",80-VL.length())_$J(V,8,2)
	do VOM
	set V=VT(7,1,1)					// @TOT([LN]ACR,)
	set VL="                                      "_$J(V,11,2)
	set V=VT(7,4,1)					// @TOT([LN]GTDUE,)
	set VL=VL_$J("",59-VL.length())_$J(V,9,2)
	set V=VT(7,6,1)					// @TOT([LN]MCHG,)
	set VL=VL_$J("",80-VL.length())_$J(V,8,2)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AD,CAT,COLOFF,CONAM,CY,DETAIL,DRCN,GRP,JOB,PGM,PY,RID,RN,TYPE,VL,VRWOPT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc9,vovc1,vovc2
	type public String vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="Loan Delinquency Report                                                                               System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Loan Account  Borrower(s)               Hom Phone  Last Con  Tot Del   Pmt Amt  Opened"
	do VP5 quit:VFMQ!verror.get()  set V=$E(CY,1,4)
	set VL=VL_$J("",90-VL.length())_V
	set VL=VL_$J("",94-VL.length())_": JN FB MR AP MY JN JL AG SP OC NV DC"
	do VOM
	set VL="                                        "_"Bus Phone  Last Pmt  Int Due  Variance  Matures"
	do VP6 quit:VFMQ!verror.get()  set V=$E(PY,1,4)
	set VL=VL_$J("",90-VL.length())_V
	set VL=VL_$J("",94-VL.length())_": JN FB MR AP MY JN JL AG SP OC NV DC"
	do VOM
	set VL="              "_"Address                   Cur Bal     Pd Thru  Pmt Due  Bump Pmt  Col Val  LC YTD  #  CLCD  #PMT  CYL:"
	set VL=VL_$J("",117-VL.length())_$J(vc7,2)
	set VL=VL_$J("",120-VL.length())_$J(vc8,2)
	set VL=VL_$J("",123-VL.length())_$J(vc9,2)
	set VL=VL_$J("",126-VL.length())_$J(vc10,2)
	set VL=VL_$J("",129-VL.length())_$J(vc11,2)
	do VOM
	set VL="              "_"City           ST CTY ZIP Org Bal    Sched Dt  Unappld  DP Invsr  LCH Due  LC LIF  #  PRCD  #CUR  PYL:"
	set VL=VL_$J("",117-VL.length())_$J(vc7,2)
	set VL=VL_$J("",120-VL.length())_$J(vc8,2)
	set VL=VL_$J("",123-VL.length())_$J(vc9,2)
	set VL=VL_$J("",126-VL.length())_$J(vc10,2)
	set VL=VL_$J("",129-VL.length())_$J(vc11,2)
	do VOM
	set VL="                                        "_"Acr Bal    Last Ext  Tot Due   No Exts  MCH Due  NA"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DRCN(CAT)

	type public String vc5
	type public Number CAT
 
	set CAT=vc5 
	quit

VP2	// Column pre-processor - Variable: AD(1)

	type public String vc6
	type public String AD
 
	do ^UTLADDR(,"AD",5,2,"ACN",vc6)
	quit

VP3	// Column pre-processor - [SYSDEV,CIF]HPH

 type Public String V

 if V="" quit 
 if $L(V)>8 set V=$TR(V,"()- ","")
 if $L(V)>8 set V=$TR(V,"(). ","")
	quit

VP4	// Column pre-processor - [SYSDEV,CIF]BPH

 type Public String V

 if V="" quit 
 if $L(V)>8 set V=$TR(V,"()- ","")
 if $L(V)>8 set V=$TR(V,"(). ","")
	quit

VP5	// Column pre-processor - Variable: CY

	type public Number CY

	set CY=$ZD(%SystemDate,"YEAR")
	quit

VP6	// Column pre-processor - Variable: PY

	type public Number CY, PY

	set PY=CY-1
	quit
