R01S447	// SCA493 - Transaction Files Integrity Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:50 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA493"
	set RN="Transaction Files Integrity Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,DES,DESC,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA493",RN="Transaction Files Integrity Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA493","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[CHKINT]ERCD#1#3,[CHKINT]CID#5#12,[CHKINT]BRCD#18#6,[CHKINT]UID#25#12,[CHKINT]TSEQ#38#6,[CHKINT]TC#45#12,[CHKINT]TAMT#58#12,[CHKINT]TIME#71#8,[CHKINT]DATE#81#10"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="CHKINT.PID=:%ProcessID"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Transaction Files Integrity Report"
		set VBNRINFO("PGM")="R01S447"
		set VBNRINFO("RID")="SCA493"
		set VBNRINFO("TABLES")="CHKINT"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,CHKINT]$J"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,CHKINT]FIL"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,CHKINT]CRCD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,CHKINT]ERCD"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,CHKINT]BRCD"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,CHKINT]UID"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,CHKINT]TSEQ"
		set VBNRINFO("ORDERBY",8)="[SYSDEV,CHKINT]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:8 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("CHKINT.FIL,CHKINT.CRCD,CHKINT.ERCD,CHKINT.BRCD,CHKINT.UID,CHKINT.TSEQ,CHKINT.CID,CHKINT.TC,CHKINT.TAMT,CHKINT.TIME,CHKINT.DATE","CHKINT","CHKINT.PID=:%ProcessID","CHKINT.FIL,CHKINT.CRCD,CHKINT.ERCD,CHKINT.BRCD,CHKINT.UID,CHKINT.TSEQ,CHKINT.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece($C(9),1)			// CHKINT.FIL
	set vc2=V.piece($C(9),2)			// CHKINT.CRCD
	set vc3=V.piece($C(9),3)			// CHKINT.ERCD
	set vc4=V.piece($C(9),4)			// CHKINT.BRCD
	set vc5=V.piece($C(9),5)			// CHKINT.UID
	set vc6=V.piece($C(9),6)			// CHKINT.TSEQ
	set vc7=V.piece($C(9),7)			// CHKINT.CID
	set vc8=V.piece($C(9),8)			// CHKINT.TC
	set vc9=V.piece($C(9),9)			// CHKINT.TAMT
	set vc10=V.piece($C(9),10)			// CHKINT.TIME
	set vc11=V.piece($C(9),11)			// CHKINT.DATE
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	// Converted to PSL by CNV70RW
	type Public String DES

	// Branch code not defined
	set DES(1)=$$^MSG(6654)

	// Transaction sequence number not defined
	set DES(2)=$$^MSG(6667)

	// User ID number not defined
	set DES(3)=$$^MSG(6668)

	// No corresponding TTX file entry
	set DES(4)=$$^MSG(6662)

	// Amount fields do not match
	set DES(5)=$$^MSG(6653)

	// Multiple pointers to TTX file
	set DES(6)=$$^MSG(6658)

	// No corresponding DTJ file entry
	set DES(7)=$$^MSG(6660)

	// External transaction code not defined
	set DES(8)=$$^MSG(6655)

	// Internal transaction code not defined
	set DES(9)=$$^MSG(6657)

	// No corresponding DMJ file entry
	set DES(10)=$$^MSG(6659)

	// No corresponding HIST file entry
	set DES(11)=$$^MSG(6661)

	// Account not updated
	set DES(12)=$$^MSG(6652)

	// HIST file does not match DTJ file
	set DES(13)=$$^MSG(6656)
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0,vs(8)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1,vskp(8)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(8).get() do VDTL8 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(8)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8)=0
	if vb2!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,vb8=1
	if vb5!(+vovc4'=+vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,vb8=1
	if vb6!(vovc5'=vc5) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,vb8=1
	if vb7!(+vovc6'=+vc6) set vs(8)=0,vh(8)=0,VD(7)=0,vb8=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(8) set vs(8)=1 do stat^DBSRWUTL(8)
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc9
	type Public String VSTATS

	set VT(8)=VT(8)+1
	set VT(8,1,1)=VT(8,1,1)+vc9			// @TOT([CHKINT]TAMT)
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CONAM,DES,DESC,ER,IOSL,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"Currency Code:  "
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,DES,DESC,I,IOSL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL="" do VOM
	set VL=" "_"Totals for Currency:"
	set VL=VL_$J("",22-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",31-VL.length())_"Count:"
	set V=VT(4)					// @CNT(,N,8)
	set VL=VL_$J("",38-VL.length())_$J(V,8)
	set V=VT(4,1,1)					// @TOT([CHKINT]TAMT,)
	set VL=VL_$J("",56-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="" do VOM
	quit

VDTL8	// Detail
	type public String %TIM,DES,DESC,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc3,3)
	set VL=VL_$J("",4-VL.length())_$E(vc7,1,12)
	set VL=VL_$J("",17-VL.length())_$J(vc4,6)
	set VL=VL_$J("",24-VL.length())_$E(vc5,1,12)
	set VL=VL_$J("",37-VL.length())_$J(vc6,6)
	set VL=VL_$J("",44-VL.length())_$E(vc8,1,12)
	set VL=VL_$J("",57-VL.length())_$J($FN(vc9,",",2),12)
	set VL=VL_$J("",70-VL.length())_$J($$TIM^%ZM(vc10),8)
	set VL=VL_$J("",80-VL.length())_$J($$DAT^%ZM(vc11),10)
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC,1,40)
	set VL=VL_$J("",92-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DES,DESC,RID,RN,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	do VP2 quit:VFMQ!verror.get()  set V=RN_"  ("_RID_")" set VL=V
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Err Account      Branch User            Seq Tran Code          Amount Time            Date  Error Description          "
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC

	type public String vc3
	type Public String DES(),DESC

	type String ERCD

	set ERCD=vc3
	set DESC=DES(ERCD)
	quit

VP2	// Column pre-processor - Variable: RN  (RID)

	type public String vc1
	type Public String CHKINT,FIL,RN

	// This section will need to be translated as part of Internationalization
	// I18N=OFF
	set RN="Transaction Files Integrity Report "
	if vc1="DTJ" set RN=RN_"- DTJ File Compared to TTX and HIST files"
	if vc1="EXC" set RN=RN_"- EXC File Compared to TTX File"
	if vc1="DMJ" set RN=RN_"- DMJ File Compared to TTX File"
	if vc1="TTX" set RN=RN_"- TTX File Compared to DTJ, DMJ, and EXC files"
	// I18N=ON
	quit
