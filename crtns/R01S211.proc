R01S211	// SCA156 - IRS 1099-C Cancellation of Debt Rpt
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:44 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date DATE
	type String VIN3="ALL"
	type String VIN5="ALL"

	set RID="SCA156"
	set RN="IRS 1099-C Cancellation of Debt Rpt"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("DATE")="|10||||||S %DS=1.1 S DATE=$$DAT^%ZM($$^SCAJD(%DS))|D|From Date|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN3")="|255||[M1099]TYPE|[STBLM1099]:NOVAL||D EXT^DBSQRY||T|Transaction Type|||||"
	set %TAB("VIN5")="|255||[M1099]CC|[UTBLCCNTR]:NOVAL||D EXT^DBSQRY||T|Cost Center|||||"

	set %READ="IO/REQ,DATE#0,VIN3#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date DATE
	type public String VIN3,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RDATE,RID,RN,SKIP,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA156",RN="IRS 1099-C Cancellation of Debt Rpt"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA156","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[M1099]TD'<<<DATE>>",SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[M1099]TYPE "_VIN3,SEQ=SEQ+1
		set DQQRY(SEQ)="[M1099]FORMTYP=5",SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[M1099]CC "_VIN5,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("M1099") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:4 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"M1099.TAXID,M1099.SEQ,M1099.COPRIN,M1099.COINT,M10"
	set VSELECT=VSELECT_"99.COFEE,M1099.COTOT,M1099.NAM,M1099.TD,M1099.ODAT"
	set VSELECT=VSELECT_",M1099.DESC,M1099.ACN,M1099.UPDT,M1099.DESC2,M1099"
	set VSELECT=VSELECT_".DESC3,M1099.AD1,M1099.AD2,M1099.AD3,M1099.CITY,M1"
	set VSELECT=VSELECT_"099.STATE,M1099.MZIP"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"M1099",VWHERE,"M1099.TAXID,M1099.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20
	set vc1=V.piece($C(9),1)			// M1099.TAXID
	set vc2=V.piece($C(9),2)			// M1099.SEQ
	set vc3=V.piece($C(9),3)			// M1099.COPRIN
	set vc4=V.piece($C(9),4)			// M1099.COINT
	set vc5=V.piece($C(9),5)			// M1099.COFEE
	set vc6=V.piece($C(9),6)			// M1099.COTOT
	set vc7=V.piece($C(9),7)			// M1099.NAM
	set vc8=V.piece($C(9),8)			// M1099.TD
	set vc9=V.piece($C(9),9)			// M1099.ODAT
	set vc10=V.piece($C(9),10)			// M1099.DESC
	set vc11=V.piece($C(9),11)			// M1099.ACN
	set vc12=V.piece($C(9),12)			// M1099.UPDT
	set vc13=V.piece($C(9),13)			// M1099.DESC2
	set vc14=V.piece($C(9),14)			// M1099.DESC3
	set vc15=V.piece($C(9),15)			// M1099.AD1
	set vc16=V.piece($C(9),16)			// M1099.AD2
	set vc17=V.piece($C(9),17)			// M1099.AD3
	set vc18=V.piece($C(9),18)			// M1099.CITY
	set vc19=V.piece($C(9),19)			// M1099.STATE
	set vc20=V.piece($C(9),20)			// M1099.MZIP
	quit

	// User-defined pre/post-processor code

VPRNT	// PRINT pre-processor

	type public Boolean SKIP
	type public String vc1,vovc1

	// if old TAXID is not equal to current TAXID
	if vovc1'=vc1 set SKIP=0 quit
	set SKIP=1
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	do VPRNT quit:VFMQ				// Print pre-processor
	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc5,vc4,vc3,vc6
	type Public String VSTATS

	set VT(2)=VT(2)+1
	set VT(2,1,1)=VT(2,1,1)+vc5			// @TOT([M1099]COFEE)
	set VT(2,2,1)=VT(2,2,1)+vc4			// @TOT([M1099]COINT)
	set VT(2,3,1)=VT(2,3,1)+vc3			// @TOT([M1099]COPRIN)
	set VT(2,4,1)=VT(2,4,1)+vc6			// @TOT([M1099]COTOT)
	quit

VDTL2	// Detail
	type public String %TIM,IOSL,RDATE,SKIP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set V=vc1,VO=V set V=$E(V,1,11) do VP1 quit:VFMQ!verror.get()  set VL=" "_V
	set V=vc7,VO=V set V=$E(V,1,34) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",14-VL.length())_V		// [SYSDEV,M1099]NAM
	set VL=VL_$J("",49-VL.length())_$J(vc2,4)
	set VL=VL_$J("",54-VL.length())_$J($$DAT^%ZM(vc8),10)
	set VL=VL_$J("",65-VL.length())_$J($$DAT^%ZM(vc9),10)
	set VL=VL_$J("",77-VL.length())_$E(vc10,1,18)
	set VL=VL_$J("",96-VL.length())_$J($FN(vc3,",",2),14)
	set VL=VL_$J("",111-VL.length())_$J($FN(vc4,",",2),18)
	do VOM
	set V=vc11,VO=V set V=$J(V,12) do VP3 quit:VFMQ!verror.get()  set VL=V
	set V=$E(AD(1),1,34) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",14-VL.length())_V
	set V=vc12,VO=V set V=$J($$DAT^%ZM(V),10) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",65-VL.length())_V		// [SYSDEV,M1099]UPDT
	set VL=VL_$J("",77-VL.length())_$E(vc13,1,18)
	set VL=VL_$J("",96-VL.length())_$J($FN(vc5,",",2),14)
	set VL=VL_$J("",111-VL.length())_$J($FN(vc6,",",2),18)
	do VOM
	set V=$E(AD(2),1,34) do VP6 quit:VFMQ!verror.get()  set VL="              "_V
	set VL=VL_$J("",77-VL.length())_$E(vc14,1,18)
	do VOM
	set V=$E(AD(3),1,34) do VP7 quit:VFMQ!verror.get()  set VL="              "_V
	if 'VL.translate(" ").isNull() do VOM
	set V=$E(AD(4),1,34) do VP8 quit:VFMQ!verror.get()  set VL="              "_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RDATE,RID,RN,SKIP,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA156)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Transactions From Date:"
	do VP9 quit:VFMQ!verror.get()  set V=$E(RDATE,1,10)
	set VL=VL_$J("",25-VL.length())_V
	set VL=VL_$J("",56-VL.length())_"Transaction Dates"
	do VOM
	set VL="                                                       "_"===================="
	do VOM
	set VL="      "_"Tax ID  Name                                Seq  Current     Original  Description         Debt Amt Prin       Debt Amt Int"
	do VOM
	set VL=" "_"Rel Account  Address                                                  Last                   Debt Amt Penalty       Debt Amt Tot"
	do VOM
	set VL="=================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,RDATE,SKIP,vc1,vovc1,vovc2,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                                                         "_"Total Principal     Total Debt Int      Total Penalty         Total Debt "
	do VOM
	set VL="                                   "_"Report Totals:"
	set V=0						// @TOT([M1099]COPRIN,0)
	for I=0:1:2 set V=V+VT(I,3,1)
	set VL=VL_$J("",55-VL.length())_$J($FN(V,",",2),17)
	set V=0						// @TOT([M1099]COINT,0)
	for I=0:1:2 set V=V+VT(I,2,1)
	set VL=VL_$J("",74-VL.length())_$J($FN(V,",",2),17)
	set V=0						// @TOT([M1099]COFEE,0)
	for I=0:1:2 set V=V+VT(I,1,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),17)
	set V=0						// @TOT([M1099]COTOT,0)
	for I=0:1:2 set V=V+VT(I,4,1)
	set VL=VL_$J("",112-VL.length())_$J($FN(V,",",2),17)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,M1099]TAXID

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP2	// Column post-processor - [SYSDEV,M1099]NAM

	type public String vc15,vc16,vc17,vc18,vc19,vc20
	type public Boolean SKIP
	type public String AD(),V

	type Number I

	if SKIP set V="" quit

	for I=1:1:4 set AD(I)=""

	set I=1
	if 'vc15.isNull() set AD(I)=vc15,I=I+1
	if 'vc16.isNull() set AD(I)=vc16,I=I+1
	if 'vc17.isNull() set AD(I)=vc17,I=I+1
	set AD(I)=vc18_", "_vc19_"  "_vc20
	quit

VP3	// Column post-processor - [SYSDEV,M1099]ACN

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP4	// Column post-processor - Variable: AD(1)

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP5	// Column post-processor - [SYSDEV,M1099]UPDT

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP6	// Column post-processor - Variable: AD(2)

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP7	// Column post-processor - Variable: AD(3)

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP8	// Column post-processor - Variable: AD(4)

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP9	// Column pre-processor - Variable: RDATE

	type public Date DATE
	type public String %MSKD,RDATE

	if 'DATE.length() set RDATE="ALL" quit
	set RDATE=DATE.toString(%MSKD)
	quit
