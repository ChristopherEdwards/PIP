V01S684(Number %ProcessMode,RecordUTBLMPS fUTBLMPS)   // -  - SID= <UTBLMPS> MPS Card Extract Options
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:35 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fUTBLMPS.exists() set fUTBLMPS = Class.new("RecordUTBLMPS")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLMPS",VPGM=$T(+0),VSNAME="MPS Card Extract Options"
 set VFSN("UTBLMPS")="zfUTBLMPS"
 set vPSL=1
 set KEYS(1)=fUTBLMPS.CO
 set KEYS(2)=fUTBLMPS.CARDTYP
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLMPS),VDA1(.fUTBLMPS),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fUTBLMPS),VPR(.fUTBLMPS),VDA1(.fUTBLMPS)
 if %ProcessMode do VLOD(.fUTBLMPS) quit:$G(ER)  do VPR(.fUTBLMPS),VDA1(.fUTBLMPS)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLMPS)
	quit


VNEW(RecordUTBLMPS fUTBLMPS) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLMPS)
 do VLOD(.fUTBLMPS)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordUTBLMPS fUTBLMPS)
 quit:fUTBLMPS.CO.isNull() ! fUTBLMPS.CARDTYP.isNull() 
 quit:%ProcessMode  set ER=0 if (fUTBLMPS.CO="")!(fUTBLMPS.CARDTYP="") set ER=1,RM=$$^MSG(1767,"CO,CARDTYP") Q
 if Db.isDefined("UTBLMPS","UTBLMPS.CO=:fUTBLMPS.CO AND UTBLMPS.CARDTYP=:fUTBLMPS.CARDTYP") S ER=1,RM=$$^MSG(2327) Q
 do fUTBLMPS.setAuditFlag(1)
 if fUTBLMPS.FA="" set fUTBLMPS.FA=1
 if fUTBLMPS.IA="" set fUTBLMPS.IA=1
 if fUTBLMPS.TA="" set fUTBLMPS.TA=1
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordUTBLMPS fUTBLMPS) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLMPS fUTBLMPS) // Display screen prompts
 set VO="23||13|0"
 set VO(0)="7|0"
 set VO(1)=$C(7,18,15,1,0,0,0,0,0,0)_"01T MPS Card Type:"
 set VO(2)=$C(8,16,17,1,0,0,0,0,0,0)_"01T MPS Card Length:"
 set VO(3)=$C(8,54,15,0,0,0,0,0,0,0)_"01TMPS BIN Number:"
 set VO(4)=$C(9,1,32,1,0,0,0,0,0,0)_"01T Check Digit Calculation Method:"
 set VO(5)=$C(9,46,23,0,0,0,0,0,0,0)_"01TMPS BIN Number Trailer:"
 set VO(6)=$C(11,11,27,0,0,0,0,0,0,0)_"01TDaily Card Limit - Offline:"
 set VO(7)=$C(12,1,37,0,0,0,0,0,0,0)_"01TLimits for ATM Transactions - Online:"
 set VO(8)=$C(13,1,38,0,0,0,0,0,0,0)_"01TLimits for ATM Transactions - Offline:"
 set VO(9)=$C(14,1,37,0,0,0,0,0,0,0)_"01TLimits for POS Transactions - Online:"
 set VO(10)=$C(15,1,38,0,0,0,0,0,0,0)_"01TLimits for POS Transactions - Offline:"
 set VO(11)=$C(16,1,38,0,0,0,0,0,0,0)_"01TReplacement Card Type-Declined Status:"
 set VO(12)=$C(18,1,16,1,0,0,0,0,0,0)_"01T FROM Authority:"
 set VO(13)=$C(18,50,20,1,0,0,0,0,0,0)_"01TAuto-linking Option:"
 set VO(14)=$C(19,1,19,1,0,0,0,0,0,0)_"01T INQUIRY Authority:"
 set VO(15)=$C(19,29,45,0,0,0,0,0,0,0)_"01TMaximum Number of Accounts per Card by Group:"
 set VO(16)=$C(20,1,20,1,0,0,0,0,0,0)_"01T TRANSFER Authority:"
 set VO(17)=$C(20,46,4,0,0,0,0,0,0,0)_"01TDDA:"
 set VO(18)=$C(20,61,3,0,0,0,0,0,0,0)_"01TRC:"
 set VO(19)=$C(21,1,23,0,0,0,0,0,0,0)_"01TInclude Inception Date:"
 set VO(20)=$C(21,45,5,0,0,0,0,0,0,0)_"01T SAV:"
 set VO(21)=$C(21,61,3,0,0,0,0,0,0,0)_"01TLN:"
 set VO(22)=$C(22,1,25,0,0,0,0,0,0,0)_"01TCredit Card Renewal Code:"
 set VO(23)=$C(22,31,38,0,0,0,0,0,0,0)_"01TMaximum Total Number of Accounts/Card:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordUTBLMPS fUTBLMPS)  // Display screen data
 new V
 //
 set VO="45|24|13|0"
 set VO(24)=$C(7,34,6,2,0,0,0,0,0,0)_"00T"_$E(fUTBLMPS.MPSCRD,1,6)
 set VO(25)=$C(8,34,2,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.MPSCRDLEN
 set VO(26)=$C(8,70,9,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.MPSCRDNUM
 set VO(27)=$C(9,34,6,2,0,0,0,0,0,0)_"00T"_$E(fUTBLMPS.CDM,1,6)
 set VO(28)=$C(9,70,3,2,0,0,0,0,0,0)_"00T"_$E(fUTBLMPS.MPSBINTLR,1,3)
 set V=$S(fUTBLMPS.OFFLIMCRD="":"",1:$J(fUTBLMPS.OFFLIMCRD,0,2)) set VO(29)=$C(11,40,12,2,0,0,0,0,0,0)_"00$"_$S(fUTBLMPS.OFFLIMCRD="":"",1:$J(fUTBLMPS.OFFLIMCRD,0,2))
 set V=$S(fUTBLMPS.ONATMLMT="":"",1:$J(fUTBLMPS.ONATMLMT,0,2)) set VO(30)=$C(12,40,12,2,0,0,0,0,0,0)_"00$"_$S(fUTBLMPS.ONATMLMT="":"",1:$J(fUTBLMPS.ONATMLMT,0,2))
 set V=$S(fUTBLMPS.OFFATMLMT="":"",1:$J(fUTBLMPS.OFFATMLMT,0,2)) set VO(31)=$C(13,40,12,2,0,0,0,0,0,0)_"00$"_$S(fUTBLMPS.OFFATMLMT="":"",1:$J(fUTBLMPS.OFFATMLMT,0,2))
 set V=$S(fUTBLMPS.ONPOSLMT="":"",1:$J(fUTBLMPS.ONPOSLMT,0,2)) set VO(32)=$C(14,40,12,2,0,0,0,0,0,0)_"00$"_$S(fUTBLMPS.ONPOSLMT="":"",1:$J(fUTBLMPS.ONPOSLMT,0,2))
 set V=$S(fUTBLMPS.OFFPOSLMT="":"",1:$J(fUTBLMPS.OFFPOSLMT,0,2)) set VO(33)=$C(15,40,12,2,0,0,0,0,0,0)_"00$"_$S(fUTBLMPS.OFFPOSLMT="":"",1:$J(fUTBLMPS.OFFPOSLMT,0,2))
 set VO(34)=$C(16,40,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLMPS.RPLCRDTYP,1,12)
 set VO(35)=$C(18,19,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLMPS.FA:"Y",1:"N")
 set VO(36)=$C(18,71,2,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.LNKOPT
 set VO(37)=$C(19,21,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLMPS.IA:"Y",1:"N")
 set VO(38)=$C(20,22,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLMPS.TA:"Y",1:"N")
 set VO(39)=$C(20,51,2,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.MAXDDA
 set VO(40)=$C(20,65,2,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.MAXRC
 set VO(41)=$C(21,25,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLMPS.INCPDT:"Y",1:"N")
 set VO(42)=$C(21,51,2,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.MAXSAV
 set VO(43)=$C(21,65,2,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.MAXLN
 set VO(44)=$C(22,27,1,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.CCRNC
 set VO(45)=$C(22,71,2,2,0,0,0,0,0,0)_"00N"_fUTBLMPS.MAXCRD
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordUTBLMPS fUTBLMPS)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=22,VPT=7,VPB=22,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLMPS"
 set OLNTB=22071
 
 set VFSN("UTBLMPS")="zfUTBLMPS"
 //
 // 
	
	
 set %TAB(1)=$C(6,33,6)_"01T12401|1|[UTBLMPS]MPSCRD|[STBLMPS]"
 set %TAB(2)=$C(7,33,2)_"01N12404|1|[UTBLMPS]MPSCRDLEN||||||20"
 set %TAB(3)=$C(7,69,9)_"00N12402|1|[UTBLMPS]MPSCRDNUM"
 set %TAB(4)=$C(8,33,6)_"01T12405|1|[UTBLMPS]CDM|[UTBLCDM]"
 set %TAB(5)=$C(8,69,3)_"00T12403|1|[UTBLMPS]MPSBINTLR|||do VP1^V01S684(.fUTBLMPS)"
 set %TAB(6)=$C(10,39,12)_"00$12407|1|[UTBLMPS]OFFLIMCRD|||||||2"
 set %TAB(7)=$C(11,39,12)_"00$12408|1|[UTBLMPS]ONATMLMT|||||||2"
 set %TAB(8)=$C(12,39,12)_"00$12409|1|[UTBLMPS]OFFATMLMT|||||||2"
 set %TAB(9)=$C(13,39,12)_"00$12410|1|[UTBLMPS]ONPOSLMT|||||||2"
 set %TAB(10)=$C(14,39,12)_"00$12411|1|[UTBLMPS]OFFPOSLMT|||||||2"
 set %TAB(11)=$C(15,39,12)_"00T12415|1|[UTBLMPS]RPLCRDTYP||||do VP2^V01S684(.fUTBLMPS)"
 set %TAB(12)=$C(17,18,1)_"00L12412|1|[UTBLMPS]FA"
 set %TAB(13)=$C(17,70,2)_"01N12420|1|[UTBLMPS]LNKOPT|[STBLLNKOPT]||do VP3^V01S684(.fUTBLMPS)"
 set %TAB(14)=$C(18,20,1)_"00L12413|1|[UTBLMPS]IA"
 set %TAB(15)=$C(19,21,1)_"00L12414|1|[UTBLMPS]TA"
 set %TAB(16)=$C(19,50,2)_"00N12417|1|[UTBLMPS]MAXDDA|||do VP4^V01S684(.fUTBLMPS)"
 set %TAB(17)=$C(19,64,2)_"00N12419|1|[UTBLMPS]MAXRC|||do VP5^V01S684(.fUTBLMPS)"
 set %TAB(18)=$C(20,24,1)_"00L12422|1|[UTBLMPS]INCPDT"
 set %TAB(19)=$C(20,50,2)_"00N12418|1|[UTBLMPS]MAXSAV|||do VP6^V01S684(.fUTBLMPS)"
 set %TAB(20)=$C(20,64,2)_"00N12423|1|[UTBLMPS]MAXLN|||do VP7^V01S684(.fUTBLMPS)"
 set %TAB(21)=$C(21,26,1)_"00N12421|1|[UTBLMPS]CCRNC|[STBLCCRNC]|||do VP8^V01S684(.fUTBLMPS)"
 set %TAB(22)=$C(21,70,2)_"00N12416|1|[UTBLMPS]MAXCRD|||do VP9^V01S684(.fUTBLMPS)|do VP10^V01S684(.fUTBLMPS)"
 do VTBL(.fUTBLMPS),VDEPRE(.fUTBLMPS) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordUTBLMPS fUTBLMPS) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDEPRE(RecordUTBLMPS fUTBLMPS)  // Data Entry Pre-processor
 
 if (fUTBLMPS.lnkopt).isNull() do DEFAULT^DBSMACRO("[UTBLMPS]MAXCRD","1")  
 if (fUTBLMPS.lnkopt).isNull() do DEFAULT^DBSMACRO("[UTBLMPS]MAXDDA","1")
 if (fUTBLMPS.lnkopt).isNull() do DEFAULT^DBSMACRO("[UTBLMPS]LNKOPT","1")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordUTBLMPS fUTBLMPS) //
 type public String X
 type String LEAD
 type Number LEN

 if X.isNull() quit

 set LEN=3

 if X.length()<LEN do {
	set LEAD=$J("",LEN).translate(" ","0")
	set X=LEAD.extract(1,LEN-X.length())_X
	if X?3N do DEFAULT^DBSMACRO("[UTBLMPS]MPSBINTLR","X")
	}

 // Invalid format ~p1
 if X'?3N do Runtime.setErrMSG("UTBLMPS",1350) quit

 if +X=0 set X="" do DEFAULT^DBSMACRO("[UTBLMPS]MPSBINTLR","")
VP2(RecordUTBLMPS fUTBLMPS) //
 type public String ZTBL()
 type String XCO,XCRDTYP,Z

 set XCO=fUTBLMPS.co
 set XCRDTYP=fUTBLMPS.cardtyp
 set Z=""

 type ResultSet rs=Db.select("CARDTYP","UTBLMPS","CO=:XCO")
 while rs.next() do {
	set Z=rs.getCol("CARDTYP")
	if Z=XCRDTYP quit
	set ZTBL(Z)=""
	}

 do CHANGE^DBSMACRO("TBL","ZTBL(")
VP3(RecordUTBLMPS fUTBLMPS) //
 type public Number TOT,X

 if X=0 do {

 	do DELETE^DBSMACRO("[UTBLMPS]MAXDDA","1","0")
 	do DELETE^DBSMACRO("[UTBLMPS]MAXSAV","1","0")
 	do DELETE^DBSMACRO("[UTBLMPS]MAXLN","1","0")
 	do DELETE^DBSMACRO("[UTBLMPS]MAXRC","1","0")
 	do DELETE^DBSMACRO("[UTBLMPS]MAXCRD","1","0")
 	do PROTECT^DBSMACRO("[UTBLMPS]MAXDDA")
 	do PROTECT^DBSMACRO("[UTBLMPS]MAXSAV")
 	do PROTECT^DBSMACRO("[UTBLMPS]MAXLN")
 	do PROTECT^DBSMACRO("[UTBLMPS]MAXRC")
 	do PROTECT^DBSMACRO("[UTBLMPS]MAXCRD")
	}

 if X do {

 	do UNPROT^DBSMACRO("[UTBLMPS]MAXDDA")
 	do UNPROT^DBSMACRO("[UTBLMPS]MAXSAV")
 	do UNPROT^DBSMACRO("[UTBLMPS]MAXLN")
 	do UNPROT^DBSMACRO("[UTBLMPS]MAXRC")
 	do UNPROT^DBSMACRO("[UTBLMPS]MAXCRD")
	set TOT=0
	}
VP4(RecordUTBLMPS fUTBLMPS) //
 type public Number TOT

 set TOT=fUTBLMPS.maxdda+fUTBLMPS.maxsav+fUTBLMPS.maxrc+fUTBLMPS.maxln
 set fUTBLMPS.maxcrd=TOT
VP5(RecordUTBLMPS fUTBLMPS) //
 type public Number TOT

 set TOT=fUTBLMPS.maxdda+fUTBLMPS.maxsav+fUTBLMPS.maxrc+fUTBLMPS.maxln
 set fUTBLMPS.maxcrd=TOT
VP6(RecordUTBLMPS fUTBLMPS) //
 type public Number TOT 

 set TOT=fUTBLMPS.maxdda+fUTBLMPS.maxsav+fUTBLMPS.maxrc+fUTBLMPS.maxln
 set fUTBLMPS.maxcrd=TOT
VP7(RecordUTBLMPS fUTBLMPS) //
 type public Number TOT

 set TOT=fUTBLMPS.maxdda+fUTBLMPS.maxsav+fUTBLMPS.maxrc+fUTBLMPS.maxln
 set fUTBLMPS.maxcrd=TOT
VP8(RecordUTBLMPS fUTBLMPS) //
 type public Number TOT

 set TOT=fUTBLMPS.maxdda+fUTBLMPS.maxsav+fUTBLMPS.maxrc+fUTBLMPS.maxln
 set fUTBLMPS.maxcrd=TOT
VP9(RecordUTBLMPS fUTBLMPS) //
 type public Number TOT,X

 // Field ~p1 must be defined if field ~p2 is present
 if 'X,fUTBLMPS.lnkopt>0 do Runtime.setErrMSG("UTBLMPS",4620,"LNKOPT") quit


 // Must be less than or equal to ~p1
 if X>TOT do Runtime.setErrMSG("UTBLMPS",8689,TOT)

 if 'X.isNull(),X<TOT quit
 set X=TOT
VP10(RecordUTBLMPS fUTBLMPS) //
 type public Number TOT


 set TOT=fUTBLMPS.maxdda+fUTBLMPS.maxsav+fUTBLMPS.maxrc+fUTBLMPS.maxln
 set fUTBLMPS.maxcrd=TOT

 do DISPLAY^DBSMACRO("[UTBLMPS]MAXCRD","","0")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLMPS fUTBLMPS
 do VPR(.fUTBLMPS)
 do VDA1(.fUTBLMPS)
 do ^DBSPNT()
 quit

VW(RecordUTBLMPS fUTBLMPS)
 do VDA1(.fUTBLMPS)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLMPS fUTBLMPS)
 do VDA1(.fUTBLMPS)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLMPS fUTBLMPS
 do VDA1(.fUTBLMPS)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLMPS fUTBLMPS
 if sn="UTBLMPS" do vSET1(.fUTBLMPS,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordUTBLMPS fUTBLMPS,di,X)
 do fUTBLMPS.setAuditFlag(1)
 set fUTBLMPS.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordUTBLMPS fUTBLMPS
 if fid="UTBLMPS" quit $$vREAD1(.fUTBLMPS,di)
 quit ""
vREAD1(RecordUTBLMPS fUTBLMPS,di)
 quit fUTBLMPS.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
