R01S402	// SCA436L2 - OTS Schedule CMR Loan Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:58 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CMRDATE,SEC,SEC()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1=$$KEY^DBSREP("LNCMR","",1,"D")

	set RID="SCA436L2"
	set RN="OTS Schedule CMR Loan Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNCMR]RUNDATE|[LNCMR]RUNDATE:DISTINCT||if X set CMRDATE=$$FDAT^%ZM(X) D EXT^DBSQRY||T|System Processing Date|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CMRDATE,SEC,SEC()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA436L2",RN="OTS Schedule CMR Loan Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA436L2","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNCMR]RUNDATE "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNCMR") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"System Processing Date"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="OTS Schedule CMR Loan Report"
		set VBNRINFO("PGM")="R01S402"
		set VBNRINFO("RID")="SCA436L2"
		set VBNRINFO("TABLES")="LNCMR"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNCMR]RUNDATE"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNCMR]SECN"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNCMR]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNCMR]RATECAT"

		set VBNRINFO("DOC",1)="08/18/05 - SWARNALATHAP - CR16708"
		set VBNRINFO("DOC",2)="       Report fully converted to PSL"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT="LNCMR.RUNDATE,LNCMR.SECN,LNCMR.GRP,LNCMR.RATECAT"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNCMR",VWHERE,"LNCMR.RUNDATE,LNCMR.SECN,LNCMR.GRP,LNCMR.RATECAT","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4
	set vc1=V.piece($C(9),1)			// LNCMR.RUNDATE
	set vc2=V.piece($C(9),2)			// LNCMR.SECN
	set vc3=V.piece($C(9),3)			// LNCMR.GRP
	set vc4=V.piece($C(9),4)			// LNCMR.RATECAT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 do PTR2^LNOTSCMR
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=SEC,SEC(),CMRDATE
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1		// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL1	// Detail
	type public String %TIM,CMRDATE,IOSL,SEC,SEC(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                                           "_"First Mortgage Loans: Adjustable-Rate, Single-Family"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                                "_"--------------"
	set VL=VL_$J("",46-VL.length())_"Rate Chg Freq (Curr Mkt Index)-------------"
	set VL=VL_$J("",97-VL.length())_"---Rate Chg Freq (Lag Mkt Index)---"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                               "_"6 Mos or Less"
	set VL=VL_$J("",52-VL.length())_"7 Mos to 2 Yrs"
	set VL=VL_$J("",74-VL.length())_"2 Yrs to 5 Yrs"
	set VL=VL_$J("",98-VL.length())_"1 Mo or Less"
	set VL=VL_$J("",118-VL.length())_"2 Mos to 5 Yrs"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Promotional Rate Loans"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Principal"
	set VL=VL_$J("",26-VL.length())_"141"
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(1,1),",",0),13)
	set VL=VL_$J("",48-VL.length())_"142"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(2,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"143"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(3,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"144"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(4,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"145"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(5,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rate (%)"
	set VL=VL_$J("",26-VL.length())_"146"
	set VL=VL_$J("",31-VL.length())_$J(SEC(1,3),13,2)
	set VL=VL_$J("",48-VL.length())_"147"
	set VL=VL_$J("",53-VL.length())_$J(SEC(2,3),13,2)
	set VL=VL_$J("",70-VL.length())_"148"
	set VL=VL_$J("",75-VL.length())_$J(SEC(3,3),13,2)
	set VL=VL_$J("",92-VL.length())_"149"
	set VL=VL_$J("",97-VL.length())_$J(SEC(4,3),13,2)
	set VL=VL_$J("",114-VL.length())_"150"
	set VL=VL_$J("",119-VL.length())_$J(SEC(5,3),13,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Non-Promotional Rate Loans"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Principal"
	set VL=VL_$J("",26-VL.length())_"156"
	set V=$J($FN(SEC(6,1),",",0),13) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",31-VL.length())_V
	set VL=VL_$J("",48-VL.length())_"157"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(7,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"158"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(8,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"159"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(9,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"160"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(10,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Margin (BP)"
	set VL=VL_$J("",26-VL.length())_"161"
	set VL=VL_$J("",31-VL.length())_$J(SEC(6,4),13,0)
	set VL=VL_$J("",48-VL.length())_"162"
	set VL=VL_$J("",53-VL.length())_$J(SEC(7,4),13,0)
	set VL=VL_$J("",70-VL.length())_"163"
	set VL=VL_$J("",75-VL.length())_$J(SEC(8,4),13,0)
	set VL=VL_$J("",92-VL.length())_"164"
	set VL=VL_$J("",97-VL.length())_$J(SEC(9,4),13,0)
	set VL=VL_$J("",114-VL.length())_"165"
	set VL=VL_$J("",119-VL.length())_$J(SEC(10,4),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rate (%)"
	set VL=VL_$J("",26-VL.length())_"166"
	set VL=VL_$J("",31-VL.length())_$J(SEC(6,3),13,2)
	set VL=VL_$J("",48-VL.length())_"167"
	set VL=VL_$J("",53-VL.length())_$J(SEC(7,3),13,2)
	set VL=VL_$J("",70-VL.length())_"168"
	set VL=VL_$J("",75-VL.length())_$J(SEC(8,3),13,2)
	set VL=VL_$J("",92-VL.length())_"169"
	set VL=VL_$J("",97-VL.length())_$J(SEC(9,3),13,2)
	set VL=VL_$J("",114-VL.length())_"170"
	set VL=VL_$J("",119-VL.length())_$J(SEC(10,3),13,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Rem Trm (Mos)"
	set VL=VL_$J("",26-VL.length())_"171"
	set VL=VL_$J("",31-VL.length())_$J(SEC(6,2),13,0)
	set VL=VL_$J("",48-VL.length())_"172"
	set VL=VL_$J("",53-VL.length())_$J(SEC(7,2),13,0)
	set VL=VL_$J("",70-VL.length())_"173"
	set VL=VL_$J("",75-VL.length())_$J(SEC(8,2),13,0)
	set VL=VL_$J("",92-VL.length())_"174"
	set VL=VL_$J("",97-VL.length())_$J(SEC(9,2),13,0)
	set VL=VL_$J("",114-VL.length())_"175"
	set VL=VL_$J("",119-VL.length())_$J(SEC(10,2),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg Nxt Pmt Chg (Mos) 176"
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(6,5),",",0),13)
	set VL=VL_$J("",48-VL.length())_"177"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(7,5),",",0),13)
	set VL=VL_$J("",70-VL.length())_"178"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(8,5),",",0),13)
	set VL=VL_$J("",92-VL.length())_"179"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(9,5),",",0),13)
	set VL=VL_$J("",114-VL.length())_"180"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(10,5),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                      "_"Total Adjustable-Rate, Single-Family First Mortgage Loans   185  "
	set VL=VL_$J("",87-VL.length())_$J($FN(SEC(1,16),",",0),14)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                                             "_"Adjustable-Rate Loans with Rate Ceiling/Floor"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Loans Within 200 BPs of Lifetime Cap"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Principal"
	set VL=VL_$J("",26-VL.length())_"186"
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(11,1),",",0),13)
	set VL=VL_$J("",48-VL.length())_"187"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(12,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"188"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(13,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"189"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(14,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"190"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(15,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg BP to Life Cap"
	set VL=VL_$J("",26-VL.length())_"191"
	set VL=VL_$J("",31-VL.length())_$J(SEC(11,7),13,0)
	set VL=VL_$J("",48-VL.length())_"192"
	set VL=VL_$J("",53-VL.length())_$J(SEC(12,7),13,0)
	set VL=VL_$J("",70-VL.length())_"193"
	set VL=VL_$J("",75-VL.length())_$J(SEC(13,7),13,0)
	set VL=VL_$J("",92-VL.length())_"194"
	set VL=VL_$J("",97-VL.length())_$J(SEC(14,7),13,0)
	set VL=VL_$J("",114-VL.length())_"195"
	set VL=VL_$J("",119-VL.length())_$J(SEC(15,7),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Loans 201 to 400 BPs from Lifetime Cap"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Principal"
	set VL=VL_$J("",26-VL.length())_"196"
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(16,1),",",0),13)
	set VL=VL_$J("",48-VL.length())_"197"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(17,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"198"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(18,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"199"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(19,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"200"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(20,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg BP to Life Cap"
	set VL=VL_$J("",26-VL.length())_"201"
	set VL=VL_$J("",31-VL.length())_$J(SEC(16,7),13,0)
	set VL=VL_$J("",48-VL.length())_"202"
	set VL=VL_$J("",53-VL.length())_$J(SEC(17,7),13,0)
	set VL=VL_$J("",70-VL.length())_"203"
	set VL=VL_$J("",75-VL.length())_$J(SEC(18,7),13,0)
	set VL=VL_$J("",92-VL.length())_"204"
	set VL=VL_$J("",97-VL.length())_$J(SEC(19,7),13,0)
	set VL=VL_$J("",114-VL.length())_"205"
	set VL=VL_$J("",119-VL.length())_$J(SEC(20,7),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Loans More Than 400 BPs from Lifetime Cap"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Principal"
	set VL=VL_$J("",26-VL.length())_"206"
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(21,1),",",0),13)
	set VL=VL_$J("",48-VL.length())_"207"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(22,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"208"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(23,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"209"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(24,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"210"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(25,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg BP to Life Cap"
	set VL=VL_$J("",26-VL.length())_"216  "
	set VL=VL_$J("",31-VL.length())_$J(SEC(21,7),13,0)
	set VL=VL_$J("",48-VL.length())_"217  "
	set VL=VL_$J("",53-VL.length())_$J(SEC(22,7),13,0)
	set VL=VL_$J("",70-VL.length())_"218"
	set VL=VL_$J("",75-VL.length())_$J(SEC(23,7),13,0)
	set VL=VL_$J("",92-VL.length())_"219"
	set VL=VL_$J("",97-VL.length())_$J(SEC(24,7),13,0)
	set VL=VL_$J("",114-VL.length())_"220"
	set VL=VL_$J("",119-VL.length())_$J(SEC(25,7),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Loans with No Lifetime Cap"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Principal"
	set VL=VL_$J("",26-VL.length())_"211"
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(26,1),",",0),13)
	set VL=VL_$J("",48-VL.length())_"212"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(27,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"213"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(28,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"214"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(29,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"215"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(30,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Loans With Periodic Cap"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Principal"
	set VL=VL_$J("",26-VL.length())_"221"
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(31,1),",",0),13)
	set VL=VL_$J("",48-VL.length())_"222"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(32,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"223"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(33,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"224"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(34,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"225"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(35,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Wtd Avg BP to Period Cap"
	set VL=VL_$J("",26-VL.length())_"226"
	set VL=VL_$J("",31-VL.length())_$J(SEC(31,8),13,0)
	set VL=VL_$J("",48-VL.length())_"227"
	set VL=VL_$J("",53-VL.length())_$J(SEC(32,8),13,0)
	set VL=VL_$J("",70-VL.length())_"228"
	set VL=VL_$J("",75-VL.length())_$J(SEC(33,8),13,0)
	set VL=VL_$J("",92-VL.length())_"229"
	set VL=VL_$J("",97-VL.length())_$J(SEC(34,8),13,0)
	set VL=VL_$J("",114-VL.length())_"230"
	set VL=VL_$J("",119-VL.length())_$J(SEC(35,8),13,0)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="Loans with Periodic Floor"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Principal"
	set VL=VL_$J("",26-VL.length())_"231"
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(36,1),",",0),13)
	set VL=VL_$J("",48-VL.length())_"232"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(37,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"233"
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(38,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"234"
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(39,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"235"
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(40,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="MBS Included in ARM Balances"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="Principal                 241  "
	set VL=VL_$J("",31-VL.length())_$J($FN(SEC(46,1),",",0),13)
	set VL=VL_$J("",48-VL.length())_"242"
	set VL=VL_$J("",53-VL.length())_$J($FN(SEC(47,1),",",0),13)
	set VL=VL_$J("",70-VL.length())_"243  "
	set VL=VL_$J("",75-VL.length())_$J($FN(SEC(48,1),",",0),13)
	set VL=VL_$J("",92-VL.length())_"244  "
	set VL=VL_$J("",97-VL.length())_$J($FN(SEC(49,1),",",0),13)
	set VL=VL_$J("",114-VL.length())_"245  "
	set VL=VL_$J("",119-VL.length())_$J($FN(SEC(50,1),",",0),13)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CMRDATE,CONAM,RID,RN,SEC,SEC(),VL,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - Variable: SEC(6

 //
 // This change was made by CRH for ARQ12753.  SEC(I,18) is the value of RICBAL
 // (see ^LNOTSCMR).  If this balance is less than 50% of the total, then we
 // must print 9s.

 type Public Number SEC()

 type Number I

 for I = 6:1:10 do {
 	if 'SEC(I,1) set SEC(I,4) = 9999 quit
  	if SEC(I,18)/SEC(I,1)<.5 set SEC(I,4) = 9999 quit
 }
	quit
