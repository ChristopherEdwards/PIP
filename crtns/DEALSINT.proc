DEALSINT	// Private; Deal Settlement Instructions Maintenance
	/*
	  Origin: Matt Lessig 4/21/93
	  Description: Deal Settlement Instructions Maintenance Procedure
	  This procedure is used for the deal processing screens
	  DEAL1SI*.  It is used primarily for deal settlement
	  instruction maintenance.  It also warehouses pre/post-
	  processors for the data items on the DEALSI* screens.
	  
	  Inputs:
		 . System        %FN,%LIBS,%UID
			
	  Returns:
	  	 . ER    Error indicator         /TYPE=T
		         Returns ER=1 if an error, otherwise ER="W"

		 . RM    Return message          /TYPE=T
		 	 Returns error message if ER=1, otherwise
			 completion message
			 
	   --- Revision History -----------------------------------------------
	   
	   03/21/06 - RussellDS - CR20234
	  	      Fixed query syntax for table lookups.
	  	      
	  	      Cleaned up PSL warnings
	   
	   02/09/2006 - KinI - CR 16664
	   	      Modified to type NOINT variable as public in INIT section.
	   	      Removed VPG, NOSSPP, DIS and ERR line tags as unneeded.
	   	      Modified NOPP section: the message "Deal has been 
	   	      deleted" is supposed to be returned if the Deal status is
	   	      "deleted".
	   	      
	   09/13/05 - KELLYP - CR 17050
		      Modified NOSSPP section to replace XNOS with DEP. The 
		      XNOS table is being obsoleted as it is a table mapped
		      to an index.  Also removed pre-2003 revision history.
	   
	   08/10/04 - MBUIM - 11381
	   	      Completed PSL conversion.

	   03/13/03 - TELIV - 49451
		      Converting to PSL

	   --------------------------------------------------------------------
	   
	   Settlement Instructions are created by the system based upon 
	   existing data in DEAL1 file. Consequently, there is no need a NEW 
	   section (%O=0).
	   There also is no need for a DEL (%O=3) of settlement instructions,
	   because by deleting a DEAL1 record through the DQ filer the deal
	   settlement instructions are also deleted.
	   
	*/
	
	quit

public NEW(String NOINT)	// Contract Number (DEAL1 record)	

	// New record. Called from DEAL procedure upon a new DEAL1 record creation

	do INIT(1,NOINT)
	
	quit
	

public UPD(String NOINT)	// Contract Number (DEAL1 record)

	// Update. Called by FX05, Deal Settlement Instruction Maintenance

	do INIT(1,NOINT)
		
	quit


INIT(Number %ProcessMode,	// Process Mode
     String NOINT)		// Contract Number from DEAL1 record
		
	type public Boolean ER=0
	
	type Boolean FINISH
	type Number %PAGE, %PG
	type String OLNTB,VFMQ
	
	set %PG=0 
	set %PAGE=1
	set FINISH=0
	
	type RecordDEAL1 fDEAL1
	type RecordDEALMSG2 DEALMSG2
	type RecordDEALMSG3 DEALMSG3
	
	for  do { quit:FINISH
		if %PG=0 do VPG00(.DEALMSG2,.DEALMSG3,.fDEAL1) if ER set FINISH=1 quit
		if %PG>0 do VPG01(.DEALMSG2,.DEALMSG3,.fDEAL1)
		if "DFQ"[VFMQ do VER(.DEALMSG2,.DEALMSG3,.fDEAL1) set FINISH=1 quit
		set %PG=%PG+1
		}
		
	quit


VPG00(RecordDEALMSG2 DEALMSG2,	// Deal Message File 2 record
      RecordDEALMSG3 DEALMSG3,	// Deal Message File 3 record
      RecordDEAL1 fDEAL1)	// DEAL1 record
	
	type String %NOPRMT,%READ,%TAB, QRY
	type public String ER,IO,NOINT,VFMQ
	
	set QRY="[DEAL1]STATUS'=6 AND [DEAL1]STATUS'=8"
	
	// Choose a deal record to retrieve
	set %TAB("NOINT")="[DEAL1]NOINT/TBL=""[DEAL1]NOINT,NOEXT,AMTB,CRCDB,AMTS,CRCDS,STATUS:QU """""_QRY_"""""""/XPP=D NOPP^DEALSINT"
	set %TAB("NOEXT")="[DEAL1]NOEXT/TBL=""[DEALMEMO]NOEXT,[DEALMEMO]NOINT,[DEAL1]AMTB,[DEAL1]CRCDB,[DEAL1]AMTS,[DEAL1]CRCDS,[DEAL1]STATUS:QU """""_QRY_"""""""/XPP=D MEMOPP^DEALSINT"
	set %TAB("TRREFNO")="[DEAL1]TRREFNO/TBL=""[DEALREFNO]TRREFNO,[DEALREFNO]NOINT,[DEAL1]AMTB,[DEAL1]CRCDB,[DEAL1]AMTS,[DEAL1]CRCDS,[DEAL1]STATUS:QU """""_QRY_"""""""/XPP=D REFPP^DEALSINT"
	set %TAB("IO")=$$IO^SCATAB($I)
	
	if NOINT="" do { quit:ER
	
		set %READ="@@%FN,,,NOINT#0,NOEXT#0,TRREFNO#0" 
		set %NOPRMT="N"
		if %ProcessMode=2 set %READ=%READ_",IO#1"
		
		do ^UTLREAD 
			
		if VFMQ="Q" set ER=1 quit
		}
	
	else  set VFMQ=0
	
	// Loads DEAL record into locals arrays fDEAL1,fDEALMSG
	set fDEAL1=Db.getRecord("DEAL1","NOINT=:NOINT",1)
	set DEALMSG2=Db.getRecord("DEALMSG2","NOINT=:NOINT,MSG=5",1)
	set DEALMSG3=Db.getRecord("DEALMSG3","NOINT=:NOINT,MSG=6",1)
	
	if %ProcessMode=2,IO'=$I do OPEN^SCAIO
	
	quit


VPG01(RecordDEALMSG2 DEALMSG2,	// Deal Message File 2 record
      RecordDEALMSG3 DEALMSG3,	// Deal Message File 3 record
      RecordDEAL1 fDEAL1)	// DEAL1 Record

	type public String CO,DEAL1,ER,NOINT,RM,VFMQ

	// Record locked by another user
	lock +DEAL1(NOINT) else  set VFMQ="Q" set ER=1 set RM=$$^MSG(2333) quit
	
	if 'CO.exists() set CO=CUVAR.co
	
	type Number ZACN

	set ZACN=fDEAL1.acn
	type RecordCIF cif=Db.getRecord("CIF","ACN=:ZACN",1)
	
	do DRV^USID(%ProcessMode,"DEAL1SI",.DEALMSG2,.DEALMSG3,.fDEAL1,.cif)
	
	quit


MEMOPP	// Trader's Memo (NOEXT) Post-Processor

	type public Number NI,X
	type public String ER,NOINT,RM
		
	if X="" quit
	
	//Modified to get the deal number from new related file.
	if NOINT="" do {
		type RecordDEALMEMO dmemo=Db.getRecord("DEALMEMO","NOEXT=:X")
		set NOINT=dmemo.noint
		}
	
	// Invalid contract number
	if NOINT="" set ER=1 set RM=$$^MSG(7607) quit
	
	// Once verified, a spot deal cannot be modified
	
	type RecordDEAL1 deal1=Db.getRecord("DEAL1","NOINT=:NOINT")
	
	// Once verified, a spot deal cannot be modified
	if (deal1.status=2)&(deal1.type="SPOT") set ER=1 set RM=$$^MSG(7618) quit
	set NI=NI+1
	
	quit
	
	
NOPP	// Contract Number Post-Processor
	
	/*
	   Only allow settlement instruction maintenance if deal has been
	   created. Do not allow it once the deal has been "Processed" or
	   "Deleted."
	*/
	
	type public Number NI,X
	type public String %OSAVE,ER,RM
	
	if X="" quit
	
	// Allow display, regardless of status.
	if %OSAVE=2 set NI=NI+1 quit
	
	// Record not found
	if 'Db.isDefined("DEAL1","NOINT=:X") do Runtime.setErrMSG("DEAL1",2335) quit:ER
	
	type RecordDEAL1 deal1=Db.getRecord("DEAL1","NOINT=:X")
	
	// Deal has been deleted
	if deal1.status=8 do Runtime.setErrMSG("DEAL1",7551) quit:ER
	
	// Once verified, a spot deal cannot be modified
	if (deal1.status=2)&(deal1.type="SPOT") do Runtime.setErrMSG("DEAL1",7618) quit:ER
	
	do GOTO^DBSMACRO("END")
	
	quit


REFPP	// Transaction Reference Number Post-Processor.

	type public Number X
	type public String ER,NOINT,NOEXT,RM
	
	// Must enter contract number
	if (X="")&(NOINT="")&(NOEXT="") set ER=1 set RM=$$^MSG(7603) quit
	
	if NOINT="" do {
		type RecordDEALMEMO dmemo=Db.getRecord("DEALMEMO","NOEXT=:X")
		set NOINT=dmemo.noint
		}
	
	// Invalid transaction reference number
	if NOINT="" set ER=1 set RM=$$^MSG(7553)
	
	type RecordDEAL1 deal1=Db.getRecord("DEAL1","NOINT=:NOINT")
	
	// Once verified, a spot deal cannot be modified
	if (deal1.status=2)&(deal1.type="SPOT") set ER=1 set RM=$$^MSG(7618) quit
	
	quit


public	CORRPP(String CORR,	// Payable To (Sell)
       	       String L1,	// Inst Line
               String L2,	// Address Line 1
               String L3,	// Address Line 2
               String L4)	// City
	
	// Correspondent from User Table

	type public Number X
	
	if X="" quit
	if 'Db.isDefined("UTBLCORRE","KEY=:X") quit
	
	type RecordUTBLCORRE utblc=Db.getRecord("UTBLCORRE","KEY=:X")
	
	set L1=utblc.name	
	set L2=utblc.addr1
	set L3=utblc.addr2
	
	if utblc.city="" set L4=utblc.city
	if utblc.state'="" set L4=L4_", "_utblc.state
	if utblc.cntry'="" set L4=L4_", "_utblc.cntry
	if utblc.mzip'="" set L4=L4_", "_utblc.mzip
	if L3="" set L3=L4 set L4=""
	
	quit

	
VER(RecordDEALMSG2 DEALMSG2,	// Deal Message File 2 record
    RecordDEALMSG3 DEALMSG3,	// Deal Message File 3 record
    RecordDEAL1 fDEAL1)		// DEAL1 Record

	type public String VFMQ

	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit
	
	do FILE(.DEALMSG2,.DEALMSG3,.fDEAL1)
	do END
	
	quit


FILE(RecordDEALMSG2 DEALMSG2,	// Deal Message File 2 record
     RecordDEALMSG3 DEALMSG3,	// Deal Message File 3 record
     RecordDEAL1 fDEAL1)	// DEAL1 Record

	// settlement instructions now exist
	set fDEAL1.instrflg=1
	
	// updates have been made to ^DEAL
	set %ProcessMode=1
	
	// Resubmit Flag
	if fDEAL1.status=5 set fDEAL1.reflg=1
	
	// Settlement Instructions Flag
	set fDEAL1.inst=1
	
	// Status
	if fDEAL1.status=2 set fDEAL1.status=9
	
	do fDEAL1.save()
	do DEALMSG2.save()
	do DEALMSG3.save()
	
	quit


END	// End of processing

	type public String %TAB,DEAL1,ER,NOINT,RM,VFMQ
	
	if NOINT.exists() lock -DEAL1(NOINT)
	kill %TAB
	if $G(ER)!(%ProcessMode=2)!(%ProcessMode=4) quit
	
	if VFMQ="Q" do {
	
		// Deal settlement instructions not created
		if %ProcessMode=0 set RM=$$^MSG(7621) quit
		
		// Deal ~p1 settlement instructions not modified
		set RM=$$^MSG(7622,NOINT)
		
		}
	else  do {
			
		// Deal -P1 settlement instructions created
		if %ProcessMode=0 set RM=$$^MSG(7619,NOINT) quit
		
		// Deal ~p1 settlement instructions modified
		set RM=$$^MSG(7620,NOINT)
		}

	set ER="W"

	quit
	
	

vSIG()	quit "60346^62126^Dan Russell^8502"	// Signature - LTD^TIME^USER^SIZE
