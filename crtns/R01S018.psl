R01S018	// SCA433 - NCP Loan Coupon/Escrow Analysis System
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:58 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String RECSIZ
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1
	type Date VIN2

	set RID="SCA433"
	set RN="NCP Loan Coupon/Escrow Analysis System "
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[LNCPN]PND|[LNCPN]PND:DISTINCT:NOVAL||||D|From date|||||"
	set %TAB("VIN2")="|10||[LNCPN]PND|[LNCPN]PND:DISTINCT:NOVAL||||D|To date|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String RECSIZ
	type public Date VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,AD1,AD2,AD3,CONAM,ESCAD,FR,JD,LCHG,NCP,NCPCLNU,NDD,PMTGRC,RID,RN,SPRA,TPT,VL,VLOF,VRF(),VSTATS(),ZZ,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA433",RN="NCP Loan Coupon/Escrow Analysis System "
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA433","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=9999999			// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=1501")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNCPN.PND,LNCPN.PMET,LNCPN.CID,LN.TITLE1,LN.ODD,LN.CID,LNAPCHG.NTRS,LNAPCHG.CEBAL,LNAPCHG.ESREQ,LNAPCHG.APCND,LNAPCHG.AEBAL,LNAPCHG.TDIS,LNAPCHG.PROBAS,LN.APCND,LN.ACN,LNAPCHG.RNDA","LNCPN,LN,LNAPCHG","LNCPN.PND NOT <:VIN1 AND LNCPN.PND NOT >:VIN2 AND LNCPN.PND NOT >:TJD AND LN.STAT NOT >0 AND LN.CBMET>0","LNCPN.PND,LNCPN.PMET,LNCPN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16
	set vc1=V.piece($C(9),1)			// LNCPN.PND
	set vc2=V.piece($C(9),2)			// LNCPN.PMET
	set vc3=V.piece($C(9),3)			// LNCPN.CID
	set vc4=V.piece($C(9),4)			// LN.TITLE1
	set vc5=V.piece($C(9),5)			// LN.ODD
	set vc6=V.piece($C(9),6)			// LN.CID
	set vc7=V.piece($C(9),7)			// LNAPCHG.NTRS
	set vc8=V.piece($C(9),8)			// LNAPCHG.CEBAL
	set vc9=V.piece($C(9),9)			// LNAPCHG.ESREQ
	set vc10=V.piece($C(9),10)			// LNAPCHG.APCND
	set vc11=V.piece($C(9),11)			// LNAPCHG.AEBAL
	set vc12=V.piece($C(9),12)			// LNAPCHG.TDIS
	set vc13=V.piece($C(9),13)			// LNAPCHG.PROBAS
	set vc14=V.piece($C(9),14)			// LN.APCND
	set vc15=V.piece($C(9),15)			// LN.ACN
	set vc16=V.piece($C(9),16)			// LNAPCHG.RNDA
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type String CLBAL(), DESC(), ELAP(), EPMT(), ESCT(), RBAS(), RDT()

 do INIT^NCPUTILS()
	quit

VPREBQ	// Pre-processor (before query)

 type Public Number RECSIZ
 type Public String IO

 set RECSIZ=1500
 set IO="NCP.TAPE"
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String AD1,AD2,AD3,ESCAD,FR,IOSL,JD,LCHG,NCP,NCPCLNU,NDD,PMTGRC,RECSIZ,SPRA,TPT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZZ,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$J(NCPCLNU,6) set VL=V
	set VL=VL_$J("",6-VL.length())_$E(10E30_vc3,18+$L(vc3),99)
	set VL=VL_$J("",21-VL.length())_$E(10E30_NCP,30+$L(NCP),99)
	set VL=VL_$J("",24-VL.length())_"10000"
	set VL=VL_$J("",29-VL.length())_$E(vc4,1,30)
	set VL=VL_$J("",59-VL.length())_$E(AD1,1,30)
	set VL=VL_$J("",89-VL.length())_$E(AD2,1,30)
	set VL=VL_$J("",119-VL.length())_$E(AD3,1,30)
	set VL=VL_$J("",149-VL.length())_"001"
	set VL=VL_$J("",152-VL.length())_$$^%ZD(vc5,"MM")_$$^%ZD(vc5,"DD")_$$^%ZD(vc5,"YY")
	set VL=VL_$J("",158-VL.length())_"000000000"
	set VL=VL_$J("",167-VL.length())_$E(10E30_NCP,30+$L(NCP),99)
	set VL=VL_$J("",170-VL.length())_"0000000"
	set VL=VL_$J("",177-VL.length())_$E(vc3,1,17)
	set VL=VL_$J("",194-VL.length())_$$^%ZD(NDD,"MM")_$$^%ZD(NDD,"DD")_$$^%ZD(NDD,"YY")
	set VL=VL_$J("",200-VL.length())_$E(10E30_(TPT*100\1),24+$L(TPT*100\1),99)
	set VL=VL_$J("",209-VL.length())_"0"
	set VL=VL_$J("",210-VL.length())_"0000000000"
	set VL=VL_$J("",232-VL.length())_"0"
	set VL=VL_$J("",239-VL.length())_"0"
	set VL=VL_$J("",242-VL.length())_$E(10E30_FR,32+$L(FR),99)
	set VL=VL_$J("",243-VL.length())_$E(AD3,1,30)
	do VP2 quit:VFMQ!verror.get()  set V=$$^%ZD(JD,"MM")_$$^%ZD(JD,"DD")_$$^%ZD(JD,"YY")
	set VL=VL_$J("",275-VL.length())_V
	set VL=VL_$J("",281-VL.length())_$E(10E30_(LCHG*100\1),28+$L(LCHG*100\1),99)
	set VL=VL_$J("",286-VL.length())_$E(10E30_PMTGRC,31+$L(PMTGRC),99)
	set VL=VL_$J("",288-VL.length())_"0000000"
	set VL=VL_$J("",300-VL.length())_$E("FB",1,2)
	set VL=VL_$J("",302-VL.length())_$E(10E30_vc6,16+$L(vc6),99)
	do VP3 quit:VFMQ!verror.get()  set V=$$^%ZD(JD,"MM")_$$^%ZD(JD,"DD")_$$^%ZD(JD,"YY")
	set VL=VL_$J("",319-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$E(DESC(1),1,12)
	set VL=VL_$J("",325-VL.length())_V
	set VL=VL_$J("",337-VL.length())_$$^%ZD(RDT(1),"MM")_$$^%ZD(RDT(1),"DD")_$$^%ZD(RDT(1),"YY")
	set VL=VL_$J("",343-VL.length())_$E(10E30_ESCT(1),31+$L(ESCT(1)),99)
	set VL=VL_$J("",345-VL.length())_$E(10E30_(RBAS(1)*100\1),24+$L(RBAS(1)*100\1),99)
	set VL=VL_$J("",354-VL.length())_$E(10E30_(EPMT(1)*100\1),24+$L(EPMT(1)*100\1),99)
	set VL=VL_$J("",363-VL.length())_$E(10E30_ELAP(1),31+$L(ELAP(1)),99)
	set VL=VL_$J("",365-VL.length())_$E(10E30_(CLBAL(1)*100\1),24+$L(CLBAL(1)*100\1),99)
	set VL=VL_$J("",375-VL.length())_$E(DESC(2),1,12)
	set VL=VL_$J("",387-VL.length())_$$^%ZD(RDT(2),"MM")_$$^%ZD(RDT(2),"DD")_$$^%ZD(RDT(2),"YY")
	set VL=VL_$J("",393-VL.length())_$E(10E30_ESCT(2),31+$L(ESCT(2)),99)
	set VL=VL_$J("",395-VL.length())_$E(10E30_(RBAS(2)*100\1),24+$L(RBAS(2)*100\1),99)
	set VL=VL_$J("",404-VL.length())_$E(10E30_(EPMT(2)*100\1),24+$L(EPMT(2)*100\1),99)
	set VL=VL_$J("",413-VL.length())_$E(10E30_ELAP(2),31+$L(ELAP(2)),99)
	set VL=VL_$J("",415-VL.length())_$E(10E30_(CLBAL(2)*100\1),24+$L(CLBAL(2)*100\1),99)
	set VL=VL_$J("",425-VL.length())_$E(DESC(3),1,12)
	set VL=VL_$J("",437-VL.length())_$$^%ZD(RDT(3),"MM")_$$^%ZD(RDT(3),"DD")_$$^%ZD(RDT(3),"YY")
	set VL=VL_$J("",443-VL.length())_$E(10E30_ESCT(3),31+$L(ESCT(3)),99)
	set VL=VL_$J("",445-VL.length())_$E(10E30_(RBAS(3)*100\1),24+$L(RBAS(3)*100\1),99)
	set VL=VL_$J("",454-VL.length())_$E(10E30_(EPMT(3)*100\1),24+$L(EPMT(3)*100\1),99)
	set VL=VL_$J("",463-VL.length())_$E(10E30_ELAP(3),31+$L(ELAP(3)),99)
	set VL=VL_$J("",465-VL.length())_$E(10E30_(CLBAL(3)*100\1),24+$L(CLBAL(3)*100\1),99)
	set VL=VL_$J("",475-VL.length())_$E(DESC(4),1,12)
	set VL=VL_$J("",487-VL.length())_$$^%ZD(RDT(4),"MM")_$$^%ZD(RDT(4),"DD")_$$^%ZD(RDT(4),"YY")
	set VL=VL_$J("",493-VL.length())_$E(10E30_ESCT(4),31+$L(ESCT(4)),99)
	set VL=VL_$J("",495-VL.length())_$E(10E30_(RBAS(4)*100\1),24+$L(RBAS(4)*100\1),99)
	set VL=VL_$J("",504-VL.length())_$E(10E30_(EPMT(4)*100\1),24+$L(EPMT(4)*100\1),99)
	set VL=VL_$J("",513-VL.length())_$E(10E30_ELAP(4),31+$L(ELAP(4)),99)
	set VL=VL_$J("",515-VL.length())_$E(10E30_(CLBAL(4)*100\1),24+$L(CLBAL(4)*100\1),99)
	set VL=VL_$J("",525-VL.length())_$E(DESC(5),1,12)
	set VL=VL_$J("",537-VL.length())_$$^%ZD(RDT(5),"MM")_$$^%ZD(RDT(5),"DD")_$$^%ZD(RDT(5),"YY")
	set VL=VL_$J("",543-VL.length())_$E(10E30_ESCT(5),31+$L(ESCT(5)),99)
	set VL=VL_$J("",545-VL.length())_$E(10E30_(RBAS(5)*100\1),24+$L(RBAS(5)*100\1),99)
	set VL=VL_$J("",554-VL.length())_$E(10E30_(EPMT(5)*100\1),24+$L(EPMT(5)*100\1),99)
	set VL=VL_$J("",563-VL.length())_$E(10E30_ELAP(5),31+$L(ELAP(5)),99)
	set VL=VL_$J("",565-VL.length())_$E(10E30_(CLBAL(5)*100\1),24+$L(CLBAL(5)*100\1),99)
	set VL=VL_$J("",575-VL.length())_$E(DESC(6),1,12)
	set VL=VL_$J("",587-VL.length())_$$^%ZD(RDT(6),"MM")_$$^%ZD(RDT(6),"DD")_$$^%ZD(RDT(6),"YY")
	set VL=VL_$J("",593-VL.length())_$E(10E30_ESCT(6),31+$L(ESCT(6)),99)
	set VL=VL_$J("",595-VL.length())_$E(10E30_(RBAS(6)*100\1),24+$L(RBAS(6)*100\1),99)
	set VL=VL_$J("",604-VL.length())_$E(10E30_(EPMT(6)*100\1),24+$L(EPMT(6)*100\1),99)
	set VL=VL_$J("",613-VL.length())_$E(10E30_ELAP(6),31+$L(ELAP(6)),99)
	set VL=VL_$J("",615-VL.length())_$E(10E30_(CLBAL(6)*100\1),24+$L(CLBAL(6)*100\1),99)
	set VL=VL_$J("",625-VL.length())_$E(DESC(7),1,12)
	set VL=VL_$J("",637-VL.length())_$$^%ZD(RDT(7),"MM")_$$^%ZD(RDT(7),"DD")_$$^%ZD(RDT(7),"YY")
	set VL=VL_$J("",643-VL.length())_$E(10E30_ESCT(7),31+$L(ESCT(7)),99)
	set VL=VL_$J("",645-VL.length())_$E(10E30_(RBAS(7)*100\1),24+$L(RBAS(7)*100\1),99)
	set VL=VL_$J("",654-VL.length())_$E(10E30_(EPMT(7)*100\1),24+$L(EPMT(7)*100\1),99)
	set VL=VL_$J("",663-VL.length())_$E(10E30_ELAP(7),31+$L(ELAP(7)),99)
	set VL=VL_$J("",665-VL.length())_$E(10E30_(CLBAL(7)*100\1),24+$L(CLBAL(7)*100\1),99)
	set VL=VL_$J("",675-VL.length())_$E(DESC(8),1,12)
	set VL=VL_$J("",687-VL.length())_$$^%ZD(RDT(8),"MM")_$$^%ZD(RDT(8),"DD")_$$^%ZD(RDT(8),"YY")
	set VL=VL_$J("",693-VL.length())_$E(10E30_ESCT(8),31+$L(ESCT(8)),99)
	set VL=VL_$J("",695-VL.length())_$E(10E30_(RBAS(8)*100\1),24+$L(RBAS(8)*100\1),99)
	set VL=VL_$J("",704-VL.length())_$E(10E30_(EPMT(8)*100\1),24+$L(EPMT(8)*100\1),99)
	set VL=VL_$J("",713-VL.length())_$E(10E30_ELAP(8),31+$L(ELAP(8)),99)
	set VL=VL_$J("",715-VL.length())_$E(10E30_(CLBAL(8)*100\1),24+$L(CLBAL(8)*100\1),99)
	set VL=VL_$J("",725-VL.length())_$E(DESC(9),1,12)
	set VL=VL_$J("",737-VL.length())_$$^%ZD(RDT(9),"MM")_$$^%ZD(RDT(9),"DD")_$$^%ZD(RDT(9),"YY")
	set VL=VL_$J("",743-VL.length())_$E(10E30_ESCT(9),31+$L(ESCT(9)),99)
	set VL=VL_$J("",745-VL.length())_$E(10E30_(RBAS(9)*100\1),24+$L(RBAS(9)*100\1),99)
	set VL=VL_$J("",754-VL.length())_$E(10E30_(EPMT(9)*100\1),24+$L(EPMT(9)*100\1),99)
	set VL=VL_$J("",763-VL.length())_$E(10E30_ELAP(9),31+$L(ELAP(9)),99)
	set VL=VL_$J("",765-VL.length())_$E(10E30_(CLBAL(9)*100\1),24+$L(CLBAL(9)*100\1),99)
	set VL=VL_$J("",775-VL.length())_$E(DESC(10),1,12)
	set VL=VL_$J("",787-VL.length())_$$^%ZD(RDT(10),"MM")_$$^%ZD(RDT(10),"DD")_$$^%ZD(RDT(10),"YY")
	set VL=VL_$J("",793-VL.length())_$E(10E30_ESCT(10),31+$L(ESCT(10)),99)
	set VL=VL_$J("",795-VL.length())_$E(10E30_(RBAS(10)*100\1),24+$L(RBAS(10)*100\1),99)
	set VL=VL_$J("",804-VL.length())_$E(10E30_(EPMT(10)*100\1),24+$L(EPMT(10)*100\1),99)
	set VL=VL_$J("",813-VL.length())_$E(10E30_ELAP(10),31+$L(ELAP(10)),99)
	set VL=VL_$J("",815-VL.length())_$E(10E30_(CLBAL(10)*100\1),24+$L(CLBAL(10)*100\1),99)
	set VL=VL_$J("",825-VL.length())_$E(DESC(11),1,12)
	set VL=VL_$J("",837-VL.length())_$$^%ZD(RDT(11),"MM")_$$^%ZD(RDT(11),"DD")_$$^%ZD(RDT(11),"YY")
	set VL=VL_$J("",843-VL.length())_$E(10E30_ESCT(11),31+$L(ESCT(11)),99)
	set VL=VL_$J("",845-VL.length())_$E(10E30_(RBAS(11)*100\1),24+$L(RBAS(11)*100\1),99)
	set VL=VL_$J("",854-VL.length())_$E(10E30_(EPMT(11)*100\1),24+$L(EPMT(11)*100\1),99)
	set VL=VL_$J("",863-VL.length())_$E(10E30_ELAP(11),31+$L(ELAP(11)),99)
	set VL=VL_$J("",865-VL.length())_$E(10E30_(CLBAL(11)*100\1),24+$L(CLBAL(11)*100\1),99)
	set VL=VL_$J("",874-VL.length())_$E(10E30_(vc7*100\1),24+$L(vc7*100\1),99)
	set VL=VL_$J("",883-VL.length())_$E(10E30_(vc8*100\1),24+$L(vc8*100\1),99)
	set VL=VL_$J("",892-VL.length())_$E(10E30_(vc9*100\1),24+$L(vc9*100\1),99)
	set VL=VL_$J("",901-VL.length())_$$^%ZD(vc10,"MM")_$$^%ZD(vc10,"DD")_$$^%ZD(vc10,"YY")
	set VL=VL_$J("",907-VL.length())_$E(10E30_(vc11*100\1),24+$L(vc11*100\1),99)
	set VL=VL_$J("",916-VL.length())_$E(10E30_(ESCAD*100\1),24+$L(ESCAD*100\1),99)
	set VL=VL_$J("",925-VL.length())_$E(10E30_(vc12*100\1),24+$L(vc12*100\1),99)
	set VL=VL_$J("",934-VL.length())_$E(10E30_(TPT*100\1),24+$L(TPT*100\1),99)
	set VL=VL_$J("",943-VL.length())_$E(10E30_(vc7*100\1),24+$L(vc7*100\1),99)
	set VL=VL_$J("",952-VL.length())_$E(10E30_SPRA,24+$L(SPRA),99)
	set VL=VL_$J("",961-VL.length())_$E(10E30_vc13,31+$L(vc13),99)
	set VL=VL_$J("",963-VL.length())_"000000000"
	set VL=VL_$J("",972-VL.length())_"000000000000000000"
	do VP5 quit:VFMQ!verror.get()  set V=$E(ZZ,1,1) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",990-VL.length())_V
	do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AD1,AD2,AD3,CONAM,ESCAD,FR,JD,LCHG,NCP,NCPCLNU,NDD,PMTGRC,RECSIZ,RID,RN,SPRA,TPT,VL,ZZ,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number VLC
	type Public String IO,VL

	use IO
	write VL_$J("",1500-VL.length()),!
	set VL="",VLC=VLC+1
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NCPCLNU

	type public String vc6,vc1,vc2,vc14
 type Date APCND,PND
 type Number CID,PMET

 set CID = vc6
 set PND = vc1
 set PMET = vc2
 set APCND = vc14

 type RecordLN ln = Db.getRecord("LN","CID=:CID")
 type RecordLNCPN lncpn = Db.getRecord("LNCPN","PND=:PND,PMET=:PMET,CID=:CID")
 type RecordLNAPCHG lnapchg = Db.getRecord("LNAPCHG","APCND=:APCND,CID=:CID",1)

 do LNINIT^NCPUTILS(.ln, .lncpn, .lnapchg)
	quit

VP2	// Column pre-processor - Variable: JD

  type Public Number JD

  set JD = %SystemDate
	quit

VP3	// Column pre-processor - Variable: JD

 type Public Number JD

 set JD = %SystemDate
	quit

VP4	// Column pre-processor - Variable: DESC(1)

 type Public string DESC()
	quit

VP5	// Column pre-processor - Variable: ZZ

 type Public String ZZ

 set ZZ=""
	quit

VP6	// Column post-processor - Variable: ZZ

	type public String vc15,vc16,vc7
 type public Number CIFNBR,TPT
 type public String REC,TAXID,V,VL
 type public Date APCND

 /* If REC not defined, only print first 300 characters and pack rest of
    record with spaces
 */


 if REC.isNull() do { quit
 	set V=""
	set VL=VL.extract(1,300)
	set VL=VL.justify(1500-VL.length(), -1, " ")
 }

 set CIFNBR=vc15
 type RecordCIF cif=Db.getRecord("CIF","ACN=:CIFNBR",1)

 set TAXID=cif.taxid

 set V=vc16
 set V=(10E30_(V*100\1))
 set V=24+(V*100\1)
 set V=V.extract(V.length(),99)
 set VL=VL_VL.justify(990-VL.length())_V
 set V=vc7+TPT
 set V=(10E30_(V*100\1))
 set V=(24+(V*100\1))
 set V=V.extract(V.length(),99)
 set VL=VL_VL.justify(999-VL.length())_V
 set VL=VL_VL.justify(1008-VL.length())_(APCND.toString("MM/DD/YEAR")).extract(1,2)_(APCND.toString("MM/DD/YEAR")).extract(4,5)_(APCND.toString("MM/DD/YEAR")).extract(7,8)
 set V=0_TAXID,VL=VL_VL.justify(1139-VL.length())_V
	quit
