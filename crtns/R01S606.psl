R01S606	// SCA702 - Loans Sold - Monthly Arrears
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:02 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String INCD,REMLD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1
	type Date VIN2

	set RID="SCA702"
	set RN="Loans Sold - Monthly Arrears"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|5||[LNLSREM]INCD|[LNLSREM]INCD:DISTINCT||S INCD=X||T|Investor|||||"
	set %TAB("VIN2")="|10||[LNLSREM]REMLD|[LNLSREM]REMLD:DISTINCT:QU ""[LNLSREM]INCD=<<INCD>>""||S REMLD=X||D|Remittance Date|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String INCD,REMLD
	type public Date VIN2
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CID,CONAM,DELDT,GRP,JOB,MONDELQ,PERCT,PL,PRTOT,PSEQ,REMLD1,REMLD2,RID,RN,TOTPERCT,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA702",RN="Loans Sold - Monthly Arrears"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA702","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[TMPLNDEL]TYPE#5#12,[TMPLNDEL]TOTLN#22#12,[TMPLNDEL]TOT1#41#12,[TMPLNDEL]TOT2#60#12,[TMPLNDEL]TOT3#80#12"

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:5 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("TMPLNDEL.JOB,TMPLNDEL.INCD,TMPLNDEL.REMLD,TMPLNDEL.TYPE,TMPLNDEL.TOTLN,TMPLNDEL.TOT1,TMPLNDEL.TOT2,TMPLNDEL.TOT3,LNLS1.DESC","TMPLNDEL,LNLSREM,LNLS1","LNLSREM.INCD=:VIN1 AND LNLSREM.REMLD=:VIN2 AND TMPLNDEL.JOB=:%ProcessID","TMPLNDEL.JOB,TMPLNDEL.INCD,TMPLNDEL.REMLD,TMPLNDEL.TYPE","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
	set vc1=V.piece($C(9),1)			// TMPLNDEL.JOB
	set vc2=V.piece($C(9),2)			// TMPLNDEL.INCD
	set vc3=V.piece($C(9),3)			// TMPLNDEL.REMLD
	set vc4=V.piece($C(9),4)			// TMPLNDEL.TYPE
	set vc5=V.piece($C(9),5)			// TMPLNDEL.TOTLN
	set vc6=V.piece($C(9),6)			// TMPLNDEL.TOT1
	set vc7=V.piece($C(9),7)			// TMPLNDEL.TOT2
	set vc8=V.piece($C(9),8)			// TMPLNDEL.TOT3
	set vc9=V.piece($C(9),9)			// LNLS1.DESC
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 // Sort LNLSREM for this investor and remittance date by loan type
 // total loans by months delinquent [LNLSREM]MONDELQ as of remittance date
 // Delete dates that are from 1 to 2 years old

 type public Number CID,REMLD1,REMLD2,REMLD
 type public String DELDT,GRP,INCD,JOB,MONDELQ,PSEQ,PL,TYPE

 set REMLD1=REMLD-730
 set REMLD2=REMLD-365
 set DELDT="" 

 for DELDT=REMLD1:1:REMLD2  do {
 	do Db.fastDelete("LNLSREM","INCD=:INCD,REMLD=:DELDT")
 	do Db.fastDelete("LNLSINV","INCD=:INCD,REMLD=:DELDT")
	 }

 set JOB=%ProcessID
 set PL="",GRP="",CID="",PSEQ=""
 do Db.fastDelete("TMPRPT0","PID=:%ProcessID")

 type ResultSet rs=Db.select("PL,GRP,CID,PSEQ,MONDELQ","LNLSREM","INCD=:INCD AND REMLD=:REMLD")

 while rs.next()  do {
	set PL=rs.getCol("PL")
	set GRP=rs.getCol("GRP")
	set CID=rs.getCol("CID")
	set PSEQ=rs.getCol("PSEQ")

	type RecordACN acn=Db.getRecord("ACN","CID=:CID",1)
	if 'acn.getMode() quit
	set TYPE=acn.type

	set MONDELQ=rs.getCol("MONDELQ")

	type RecordTMPLNDEL fTMPLNDE=Db.getRecord("TMPLNDEL","JOB=:%ProcessID,INCD=:INCD,REMLD=:REMLD,TYPE=:TYPE",1)

	if 'fTMPLNDE.getMode() do {
		set fTMPLNDE.totln=0
		set fTMPLNDE.tot1=0
		set fTMPLNDE.tot2=0
		set fTMPLNDE.tot3=0
		}

	set fTMPLNDE.totln=fTMPLNDE.totln+1

	if MONDELQ=1 set fTMPLNDE.tot1=fTMPLNDE.tot1+1 

	if MONDELQ=2 set fTMPLNDE.tot2=fTMPLNDE.tot2+1 

	if MONDELQ=3 set fTMPLNDE.tot3=fTMPLNDE.tot3+1 

	do fTMPLNDE.save()

	}

	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=INCD,REMLD
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),PRTOT,vc6,vc7,vc8,vc5
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+PRTOT			// @TOT(<<PRTOT>>)
	set VT(4,2,1)=VT(4,2,1)+vc6			// @TOT([TMPLNDEL]TOT1)
	set VT(4,3,1)=VT(4,3,1)+vc7			// @TOT([TMPLNDEL]TOT2)
	set VT(4,4,1)=VT(4,4,1)+vc8			// @TOT([TMPLNDEL]TOT3)
	set VT(4,5,1)=VT(4,5,1)+vc5			// @TOT([TMPLNDEL]TOTLN)
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CID,CONAM,DELDT,ER,GRP,INCD,IOSL,JOB,MONDELQ,PERCT,PL,PRTOT,PSEQ,REMLD,REMLD1,REMLD2,RID,RN,TOTPERCT,TYPE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="  "_"Lender Number:  "
	set VL=VL_$J("",18-VL.length())_$E(vc2,1,5)
	do VOM
	set VL="    "_"Lender Name:  "
	set VL=VL_$J("",18-VL.length())_$E(vc9,1,30)
	do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CID,CONAM,DELDT,ER,GRP,INCD,IOSL,JOB,MONDELQ,PERCT,PL,PRTOT,PSEQ,REMLD,REMLD1,REMLD2,RID,RN,TOTPERCT,TYPE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+8>IOSL do VHDG0 quit:VFMQ

	set VL="Remittance Date:  "
	set VL=VL_$J("",18-VL.length())_$J($$DAT^%ZM(vc3),10)
	do VOM
	set VL="                                        "_"N u m b e r  o f  L o a n s  i n  A r r e a r s"
	do VOM
	set VL="                                              "_"(Including Loans in Foreclosure)"
	do VOM
	set VL="" do VOM
	set VL="  "_"Product               Number of"
	do VOM
	set VL="  "_"Type of                  Loans                                                                        Total        Percent of"
	do VOM
	set VL="   "_"Loan                  Serviced            1 Month           2 Months            3 Months+         in Arrears         Arrears"
	do VOM
	set VL="================================================================================================================================="
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,CID,DELDT,GRP,INCD,IOSL,JOB,MONDELQ,PERCT,PL,PRTOT,PSEQ,REMLD,REMLD1,REMLD2,TOTPERCT,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="    "_$E(vc4,1,12)
	set V=vc5,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",21-VL.length())_V		// [SYSDEV,TMPLNDEL]TOTLN
	set V=vc6,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",40-VL.length())_V		// [SYSDEV,TMPLNDEL]TOT1
	set V=vc7,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",59-VL.length())_V		// [SYSDEV,TMPLNDEL]TOT2
	set V=vc8,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",79-VL.length())_V		// [SYSDEV,TMPLNDEL]TOT3
	do VP5 quit:VFMQ!verror.get()  set V=$J(PRTOT,12)
	set VL=VL_$J("",98-VL.length())_V
	set VL=VL_$J("",116-VL.length())_$J(PERCT,12,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CID,CONAM,DELDT,GRP,INCD,JOB,MONDELQ,PERCT,PL,PRTOT,PSEQ,REMLD,REMLD1,REMLD2,RID,RN,TOTPERCT,TYPE,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+2,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,20)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=$E(RN,1,30)
	set VL=VL_$J("",32-VL.length())_$E(RID,1,12)
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,CID,DELDT,GRP,INCD,JOB,MONDELQ,PERCT,PL,PRTOT,PSEQ,REMLD,REMLD1,REMLD2,TOTPERCT,TYPE,VPN,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                    "_"--------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="         "_"Totals:"
	set V=0						// @TOT([TMPLNDEL]TOTLN,0)
	for I=0:1:4 set V=V+VT(I,5,1)
	do VP6 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",21-VL.length())_V		// @TOT([TMPLNDEL]TOTLN,0)
	set V=0						// @TOT([TMPLNDEL]TOT1,0)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VL=VL_$J("",40-VL.length())_$J(V,12)
	set V=0						// @TOT([TMPLNDEL]TOT2,0)
	for I=0:1:4 set V=V+VT(I,3,1)
	set VL=VL_$J("",59-VL.length())_$J(V,12)
	set V=0						// @TOT([TMPLNDEL]TOT3,0)
	for I=0:1:4 set V=V+VT(I,4,1)
	set VL=VL_$J("",79-VL.length())_$J(V,12)
	set V=0						// @TOT(<<PRTOT>>,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	do VP7 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",98-VL.length())_V		// @TOT(<<PRTOT>>,0)
	set VL=VL_$J("",116-VL.length())_$J(TOTPERCT,12,2)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,TMPLNDEL]TOTLN

 type public Number PERCT,PRTOT

 set PERCT=0,PRTOT=0
	quit

VP2	// Column pre-processor - [SYSDEV,TMPLNDEL]TOT1

 type public Number PRTOT,V

 if V="" set V=0

 if V'=0 set PRTOT=PRTOT+V
	quit

VP3	// Column pre-processor - [SYSDEV,TMPLNDEL]TOT2

 type public Number PRTOT,V

 if V="" set V=0

 if V'=0 set PRTOT=PRTOT+V
	quit

VP4	// Column pre-processor - [SYSDEV,TMPLNDEL]TOT3

 type public Number PRTOT,V

 if V="" set V=0

 if V'=0 set PRTOT=PRTOT+V
	quit

VP5	// Column pre-processor - Variable: PRTOT

	type public String vc5
 type public Number PERCT,PRTOT
 
 set PERCT=(PRTOT/vc5)*100
 
	quit

VP6	// Column pre-processor - @TOT([TMPLNDEL]TOTLN,0,N,12)

 type Public Number TOTSRV,V
 
 if V="" set V=0
 set TOTSRV=V

	quit

VP7	// Column pre-processor - @TOT(<<PRTOT>>,0,N,12)

 type public Number TOTDEL,TOTPERCT,TOTSRV,V

 if V="" set V=0 
 set TOTDEL=V

 set TOTPERCT=(TOTDEL/TOTSRV)*100
	quit
