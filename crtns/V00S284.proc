V00S284(%ProcessMode,RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1())   // -  - SID= <LNFEEGRP> Loan Fee Group Maintenance
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:32 - kini
 //  	/*
 // 	This screen supports the Loan Fee Groups user table (LNFEEGRP).
 // 	The LNFEEGRP screen identifies valid groupings of loan fees which the
 // 	system may assess when calculating the fee receivable amounts
 // 	due for new loans.  The user accesses the LNFEEGRP screen via the
 // 	Loan Fee Group functions (LNFEEGRP1, LNFEEGRP2, LNFEEGRP3, and
 // 	LNFEEGRP4).
 // 	For further information, refer to the Loan Fee Processing Reference
 // 	Manual.
 // 	*/
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNFEEGRP",VPGM=$T(+0),VSNAME="Loan Fee Group Maintenance"
 set VFSN("LNFEEGRP1")="zfFEEGRP1",VFSN("UTBLLNFEEGRP")="zfLNFEEGRP"
 set vPSL=1
 set KEYS(1)=fLNFEEGRP.FEEGRP
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=14 do VPR(.fLNFEEGRP,.fFEEGRP1()),VDA1(.fLNFEEGRP,.fFEEGRP1()),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fLNFEEGRP,.fFEEGRP1()) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fLNFEEGRP,.fFEEGRP1()),VPR(.fLNFEEGRP,.fFEEGRP1()),VDA1(.fLNFEEGRP,.fFEEGRP1())
 if %ProcessMode do VLOD(.fLNFEEGRP,.fFEEGRP1()) quit:$G(ER)  do VPR(.fLNFEEGRP,.fFEEGRP1()),VDA1(.fLNFEEGRP,.fFEEGRP1())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fLNFEEGRP,.fFEEGRP1())
 type Number ptr
 set ptr=""
 for  set ptr = fFEEGRP1(ptr).order() quit:ptr.isNull()  do {
     if fFEEGRP1(ptr).FEETYP="" kill fFEEGRP1(ptr)
     }
	quit


VNEW(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1()) // Initialize arrays if %O=0
 
 do VDEF(.fLNFEEGRP,.fFEEGRP1())
 do VLOD(.fLNFEEGRP,.fFEEGRP1())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=14
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1()) // Display screen prompts
 set VO="4||13|"
 set VO(0)="|0"
 set VO(1)=$C(2,6,15,0,0,0,0,0,0,0)_"01TLoan Fee Group:"
 set VO(2)=$C(3,8,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(5,25,28,1,0,0,0,0,0,0)_"01T Loan Fee Group Maintenance "
 set VO(4)=$C(7,32,14,1,0,0,0,0,0,0)_"01TLoan Fee Types"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1())  // Display screen data
 new V
 //
 set VO="7|5|13|"
 set VO(5)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(6)=$C(2,22,8,2,0,0,0,0,0,0)_"01T"_$E(fLNFEEGRP.FEEGRP,1,8)
 set VO(7)=$C(3,22,40,2,0,0,0,0,0,0)_"00T"_$E(fLNFEEGRP.DESC,1,40)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=9 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fLNFEEGRP,.fFEEGRP1())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'fFEEGRP1(I).getPointer() do {
     set fFEEGRP1(I)=Class.new("RecordLNFEEGRP1","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY,35,8,2,0,0,0,0,0,0)_"01T"_$E(fFEEGRP1(I).FEETYP,1,8)
 set DY=DY+1,VX=VX+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=2,%MOD=1,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=8+%REPEAT,BLKSIZ=(8*%REPEAT)+48,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLLNFEEGRP"
 set OLNTB=VPB*1000
 
 set VFSN("LNFEEGRP1")="zfFEEGRP1",VFSN("UTBLLNFEEGRP")="zfLNFEEGRP"
 //
 for I=4:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(1,21,8)_"21T12401|1|[UTBLLNFEEGRP]FEEGRP"
 set %TAB(2)=$C(2,21,40)_"01T12401||[UTBLLNFEEGRP]DESC"
 set %TAB(3)=$C(8,34,8)_"20T12402|1|[LNFEEGRP1]FEETYP||||do VP1^V00S284(.fLNFEEGRP,.fFEEGRP1)"
 do VTBL(.fLNFEEGRP,.fFEEGRP1())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1()) //
 do CHANGE^DBSMACRO("TBL","PRIFEE(")
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLLNFEEGRP fLNFEEGRP
 type Public RecordLNFEEGRP1 fFEEGRP1()
 do VPR(.fLNFEEGRP,.fFEEGRP1())
 do VDA1(.fLNFEEGRP,.fFEEGRP1())
 do ^DBSPNT()
 quit

VW(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1())
 do VDA1(.fLNFEEGRP,.fFEEGRP1())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1())
 do VDA1(.fLNFEEGRP,.fFEEGRP1())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLLNFEEGRP fLNFEEGRP
 type Public RecordLNFEEGRP1 fFEEGRP1()
 do VDA1(.fLNFEEGRP,.fFEEGRP1())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLLNFEEGRP fLNFEEGRP
 if sn="UTBLLNFEEGRP" do vSET1(.fLNFEEGRP,di,X)
 type Public RecordLNFEEGRP1 fFEEGRP1()
 if sn="LNFEEGRP1" do vSET2(fFEEGRP1(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLLNFEEGRP fLNFEEGRP,di,X)
 do fLNFEEGRP.setAuditFlag(1)
 set fLNFEEGRP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordLNFEEGRP1 fFEEGRP1,di,X)
 do fFEEGRP1.setAuditFlag(1)
 set fFEEGRP1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLLNFEEGRP fLNFEEGRP
 if fid="UTBLLNFEEGRP" quit $$vREAD1(.fLNFEEGRP,di)
 type Public RecordLNFEEGRP1 fFEEGRP1()
 if fid="LNFEEGRP1" quit $$vREAD2(fFEEGRP1(I(1)),di)
 quit ""
vREAD1(RecordUTBLLNFEEGRP fLNFEEGRP,di)
 quit fLNFEEGRP.@di
vREAD2(RecordLNFEEGRP1 fFEEGRP1,di)
 quit fFEEGRP1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLLNFEEGRP fLNFEEGRP,RecordLNFEEGRP1 fFEEGRP1())  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 do TBL2^LNFEEU(.PRIFEE)
 quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
