IRSC99I		/*
	DESC: IRS Processing - Form 1099-INT Correction
	I18N=QUIT: Excluded from I18N standards.

	---- Comments --------------------------------------------------------
	======================================================================
		*** THIS ROUTINE IS TO BE COMPILED WITH IRSTPMTR ***
		     *** DO NOT RUN THIS ROUTINE STANDALONE ***
	======================================================================
	
	---- Revision History ------------------------------------------------
	
	10/31/06 - SWARNALP - CR 23635
		   The following changes are made in this procedure as part of 
		   the Year 2006 programming changes for magnetic media 
		   reporting of IRS 1098, 1099 & 5498 forms supported by 
		   Profile.
		   .	Modified section ARECBLD to set a value '123489' in 
		   	Amount Codes field (positions 28-41) of the "A" Record 
		   	when reporting for Form 1099-INT. Also the field 
		   	description for the new elements 8 and 9 are stored 
		   	in the second piece of their respective elements 
		   	(8 and 9) in the public array TAMT() so that this data 
		   	will get populated in the IRS Tape Transmittal table 
		   	(IRSCTTR1) later in the procedure IRSTPMTR. 
		   .	Modified section BONDS to include the following changes:
		   	O	Records with the transaction types 8, 9 and 10 
		   		are made to be reportable.
		   	O	Interest Paid (M1099.INT) amount is set to 
		   		Payment Amount #1 (field position 55-66) of 
		   		the Payee "B" Record, B1099INT.BAMT1 and 
		   		B1099INTCID.BAMT1 when the Transaction Type 
		   		(M1099.TYPE) is either equal to 8 - Clean Renewal 
		   		Bonds or 9 - Gulf Bonds.
		   	O	Interest Paid (M1099.INT) amount is set to 
		   		Payment Amount #8 (field position 139-150) of 
		   		the Payee "B" Record, B1099INT.BAMT8 and 
		   		B1099INTCID.BAMT8 when the Transaction Type 
		   		(M1099.TYPE) is 10 - State or Local Bonds.
		   	O	Int on Pvt Activity Bonds (M1099.INTPAB) is set 
		   		to Payment Amount #9 (field position 151-162) of 
		   		the Payee "B" Record, B1099INT.BAMT9 and 
		   		B1099INTCID.BAMT9 when the Transaction Type 
		   		(M1099.TYPE) is 10 - State or Local Bonds.
		   		
	05/15/06 - DESHPANDE S K - CR 21167
		   Modified BRECBLD section to set address variables to mailing 
		   address instead of permanent address.
	
	05/08/06 - TITOVE - CR 21140
		   Modified BRECBLD and BONDS to set "C" corrected return
		   indicator for a second step of a two-step correction.

	04/03/06 - TITOVE - CR 20556
		   Added DISTINCT to select statement from TMPRPT3 to prevent
		   processing same records multiple times. Added TJD to
		   select in SORT section to account for multiple dates.

	09/29/05 - HAILEYM - CR17143
		Converted to PSL.
		
	*/
	
	// Accept "Dead code" warning during runtime of @IRSTAPE.
	#ACCEPT Date=10/14/2005;PGM=Marie Hailey;CR=17143
	quit
	
	
MTRCNTRL	// Master control

	type public Boolean ER
	type public Number SRT
	type public String INSTADDR,INSTEIN,PAYERNAM,Q()
	
	type Boolean QUIT,REG
	type Number BONDS,I
	type String BRREG,REGION(),X
	
	type RecordUTBLREGION uregion
	type ResultSet rs
	
	set REG=Q(1).get()
	set BONDS=0
	
	do Db.fastDelete("B1099INT")
	do Db.fastDelete("B1099INTCID")
	do Db.fastDelete("TMPRPT3","PID=:%ProcessID")

	do SORT
	
	set rs=Db.select("DISTINCT KEY1","TMPRPT3","PID=:%ProcessID")

	// If no records, do only bonds.
	//if rs.isEmpty() set BRREG="" do CNTRL2
	
	while rs.next() do {
		set BRREG=rs.getCol(1)
		
		if 'REGION(BRREG).exists() do {
			set uregion=Db.getRecord("UTBLREGION","KEY=:BRREG",1)
			if 'uregion.getMode() set REGION(BRREG)="" quit
			set REGION(BRREG).piece("|",1)=uregion.desc
			set REGION(BRREG).piece("|",2)=uregion.taxid
			set REGION(BRREG).piece("|",3)=uregion.city
			set REGION(BRREG).piece("|",4)=uregion.state
			set REGION(BRREG).piece("|",5)=uregion.mzip
			set REGION(BRREG).piece("|",6)=uregion.cntry
			set REGION(BRREG).piece("|",7)=uregion.ad1
			set REGION(BRREG).piece("|",8)=uregion.ad2
			set REGION(BRREG).piece("|",9)=uregion.ad3
			set REGION(BRREG).piece("|",12)=uregion.ctof1099
			}
		
		if REGION(BRREG).piece("|",2,9)="" do CNTRL2 quit
		
		set PAYERNAM=REGION(BRREG).piece("|",1)
		set INSTEIN=REGION(BRREG).piece("|",2)
		set INSTADDR=REGION(BRREG).piece("|",3,5)_"|"_REGION(BRREG).piece("|",7,9)
		do CNTRL2
		}
		
	do Db.fastDelete("TMPRPT3","PID=:%ProcessID")
	quit
	

CNTRL2	// Control 2
	
	type public Boolean ER
	type public Number BONDS
	
	type Number PASSFLG
	type String TYPCIF()
	
	set PASSFLG=1
	do ARECBLD quit:ER	// Build and write the "A" record - First pass
	do BRECBLD quit:ER	// Build and write the "B" records for Interest Earnings - First pass
	if 'BONDS set BONDS=1 do BONDS quit:ER	// Build and write the "B" records for Savings bond Earnings - First pass
	do CRECBLD quit:ER	// Build and write the "C" record - First pass
	
	set PASSFLG=2
	do ARECBLD quit:ER	// Build and write the "A" record - Second pass
	do BRECBLD quit:ER	// Build and write the "B" records for Interest Earnings - Second pass
	do BONDS quit:ER	// Build and write the "B" records for Savings bond Earnings - Second pass
	do CRECBLD quit:ER	// Build and write the "C" record - Second pass
	
	do STORETOT ; Store the TTR report totals
	quit
	
	
ARECBLD	// "A" record builder

	type public String AMTIND,FORMCODE,TAMT()
	
	set FORMCODE=6	// IRS form code
	// IRS amount type indicator
	set AMTIND=123489
	set TAMT(1).piece("|",2)="Earnings Amount"
	set TAMT(2).piece("|",2)="Early Withdrawal Penalty"
	set TAMT(3).piece("|",2)="U.S. Savings Bonds, etc."
	set TAMT(4).piece("|",2)="Federal Income Tax Withheld"
	set TAMT(8).piece("|",2)="Tax-exempt Interest"
	set TAMT(9).piece("|",2)="Interest on Private Activity Bonds"
	do ARECWRT	// Write the record to tape
	quit
	

BRECBLD	// "B" record builder
	
	type public Number AMT(),PASSFLG
	type public String BRREG,TYPCIF()
	
	type Boolean QUIT
	type Date JD
	type Number ACN,AMT1,AMT2,AMT4,BW,CID,FOR,I,INT,TOTBW,TOTFOR,TOTINT,ZCID
	type String ADDR,CIDDTL,CITY,CNTRY,CORRTN,DOCCODE,FORCNTY
	type String FULLADDR,LNAME,NAMCON,NAME,SPECIAL,STATE,TIN,TINTYPE
	type String X,XTIN,ZIP
	
	type RecordACN acn,acn1
	type RecordB1099INT b1099int
	type RecordB1099INTCID b1099cid
	type RecordCIF cif
	type RecordIRSUPD irsupd
	type ResultSet rs
	
	for I=1:1:9,"A","B","C" set AMT(I)=0
	
	set DOCCODE="  "
	set CORRTN=$select(PASSFLG=1:"G",PASSFLG=2:"C")
	
	// Special date position 544-750
	//; Blank |544|722
	set SPECIAL="".justify(179)
	//; State Income Tax Withheld|723|734
	set SPECIAL=SPECIAL_"".justify(12,,0)
	//; Local Income Tax Withheld|735|746
	set SPECIAL=SPECIAL_"".justify(12,,0)
	//; Blank |747|750
	set SPECIAL=SPECIAL_"".justify(4)
	
	set b1099int=Class.new("RecordB1099INT")
	set b1099int.bamt3=0
	
	set b1099cid=Class.new("RecordB1099INTCID")
	set b1099cid.bamt3=0
	
	set rs=Db.select("KEY2,KEY3","TMPRPT3","PID=:%ProcessID AND KEY1=:BRREG","KEY2")
	while rs.next() do {
		kill CIDDTL
		
		set JD=rs.getCol(1)
		set CID=rs.getCol(2)
		
		set irsupd=Db.getRecord("IRSUPD","TJD=:JD,FTYPE=1,MISCSEQ=:CID,BSEQ=0",1)
		
		if irsupd.ccode=1,(PASSFLG=1) quit	// Skip duplicates when writting to tape
		if irsupd.ccode=4,(PASSFLG=1) quit	// Skip "New Entry" for first pass
		if irsupd.ccode=3,(PASSFLG=2) quit	// Skip "change amount" for second pass
		
		set acn1=Db.getRecord("ACN","CID=:CID")
		
		set (TOTINT,TOTBW,TOTFOR)=0
		
		type ResultSet rs1=Db.select("CID","RELCIF","ACN=:acn1.acn")
		while rs1.next() do {
			set ZCID=rs1.getCol(1)

			set acn=Db.getRecord("ACN","CID=:ZCID")
			if acn.grp="ESC" quit 	// Escrow done under loan
			
			set (BW,FOR,INT,QUIT)=0
			
			if acn.cls="L" do ESC(ZCID,.BW,.FOR,.INT)
			if acn.cls'="L" do {
				type RecordDEP dep={RecordDEP}acn
				
				if dep.oid set QUIT=1 quit	// Skip OID accounts
				if dep.ira set QUIT=1 quit	// Skip IRA accounts
				if dep.irsexm set QUIT=1 quit	// Account exempt from 1099 reporting
	
				set BW=dep.bwpty
				set FOR=dep.penpty
				set INT=dep.ipty
				}
			if QUIT quit
			
			if INT<0 set INT=0	// Don't report negative interest
			
			// Calculate totals by ACN.
			set TOTINT=TOTINT+INT
			set TOTFOR=TOTFOR+FOR
			set TOTBW=TOTBW+BW
			
			// This is a reporting record
			if ZCID=CID set CIDDTL(ZCID)=INT_"|"_FOR_"|"_BW
			}
		// If no data in CIDDTL(CID) array, nothing to report
		if 'CIDDTL(CID).exists() quit
		
		set INT=CIDDTL(CID).piece("|",1)
		set FOR=CIDDTL(CID).piece("|",2)
		set BW=CIDDTL(CID).piece("|",3)
		
		set ACN=$select(PASSFLG=1:irsupd.ocif,PASSFLG=2:acn.acn)	// Original/New CIF number
	
		set cif=Db.getRecord("CIF","ACN=:ACN")
		
		set TIN=$select(PASSFLG=1:irsupd.otin,PASSFLG=2:cif.taxid)	// Tax ID number
		set TINTYPE=$select(TIN?2N1"-"7N:1,TIN?3N1"-"2N1"-"4N:2,1:" ")	// Type of TIN
		set XTIN=TIN.piece("|",1).translate(" ","-")

		if PASSFLG=1,(irsupd.ccode=2) set (AMT(1),AMT(2),AMT(4))=0
		else  set AMT(1)=INT*100,AMT(2)=FOR*100,AMT(4)=BW*100

		if PASSFLG=1 set NAME=irsupd.oname,LNAME=irsupd.olnam	
		if PASSFLG=2 set NAME=cif.nam,LNAME=cif.lnm
		set FULLADDR=cif.mcity_"|"_cif.mstate_"|"_cif.mzip_"|"_cif.mcntry_"|"_cif.mad1_"|"_cif.mad2_"|"_cif.mad3_"|"_cif.mad4_"|"_cif.mloc
		set ADDR=cif.mad1_" "_cif.mad2_" "_cif.mad3
		set CITY=cif.mcity
		set STATE=cif.mstate
		set ZIP=cif.mzip.piece("-",1)_cif.mzip.piece("-",2)
		set CNTRY=cif.mcntry
		set FORCNTY=$select(CNTRY="US":" ",1:1)	// foreign country indicator
		
		if irsupd.ccode<>1 do BRECWRT	// Skip duplicates
		
		// Inserting "B" Records into B1099INT and B1099INTCID tables
		
		if TINTYPE=2 set X=LNAME
		else  set X=NAME
		do NAMCNTRL^IRSTPMTR set NAMCON=X
		
		if b1099cid.getMode() do b1099cid.setMode(0)
		set b1099cid.pdate=JD
		set b1099cid.bkey=CID
		set b1099cid.bseq=Db.nextVal("B1099INTCID","PDATE=:JD,BKEY=:CID")
		set b1099cid.bnamcon=NAMCON
		set b1099cid.btintype=TINTYPE
		set b1099cid.btin=XTIN
		set b1099cid.bcid=CID
		set b1099cid.bamt1=AMT(1)/100
		set b1099cid.bamt2=AMT(2)/100
		set b1099cid.bamt4=AMT(4)/100
		set b1099cid.bname=NAME
		set b1099cid.baddr1=cif.mad1
		set b1099cid.baddr2=cif.mad2
		set b1099cid.baddr3=cif.mad3
		set b1099cid.bcity=CITY
		set b1099cid.bstate=STATE
		set b1099cid.bzip=cif.mzip
		do b1099cid.bypassSave()
		
		set AMT1=TOTINT
		set AMT2=TOTFOR
		set AMT4=TOTBW
		
		/*
		Check if CIF and form type have already been processed.
		If it is old taxid, set amounts to 0, set TYPCIF(1,ACN_"-1") 
		to value " ".
		If (PASSFLG=2) and ($P(IRSUPD,"|",1)=2) and TYPCIF(1,ACN_"-1")=" ",
		during the first pass the record with old taxid was first processed.
		*/
		if (irsupd.ccode<>2),($$PROCESSED^FRM99INT(1,ACN,.TYPCIF)) quit
		if (irsupd.ccode=2),(PASSFLG=1),(TYPCIF(1,ACN).exists()) quit
		if (irsupd.ccode=2),(PASSFLG=1),('$$PROCESSED^FRM99INT(1,ACN,.TYPCIF)) set AMT1=0,AMT2=0,AMT4=0,TYPCIF(1,ACN_"-1")=" "
		if (irsupd.ccode=2),(PASSFLG=2),'TYPCIF(1,ACN_"-1").exists() quit

		if b1099int.getMode() do b1099int.setMode(0)
		set b1099int.pdate=JD
		set b1099int.key=CID
		set b1099int.bseq=Db.nextVal("B1099INT","PDATE=:JD,KEY=:CID")
		set b1099int.bnamcon=NAMCON
		set b1099int.btintype=TINTYPE
		set b1099int.btin=XTIN
		set b1099int.bcid=CID
		set b1099int.bamt1=AMT1
		set b1099int.bamt2=AMT2
		set b1099int.bamt4=AMT4
		set b1099int.bname=NAME
		set b1099int.baddr1=cif.mad1
		set b1099int.baddr2=cif.mad2
		set b1099int.baddr3=cif.mad3
		set b1099int.bcity=CITY
		set b1099int.bstate=STATE
		set b1099int.bzip=cif.mzip
		do b1099int.bypassSave()
		}
	quit
	
	
SORT	// Sort Records
	
	type public Boolean SRT
	type public Date FORMS()
	type public Number REG
	type public String FORM,Q(,)
	
	type Date XJD
	type Number CID
	type String BRREG,N,TYPCIF()
	
	type RecordTMPRPT3 tmprpt3
	type ResultSet rs
	
	set XJD=FORMS(FORM).get()
	
	set tmprpt3=Class.new("RecordTMPRPT3")
	set tmprpt3.pid=%ProcessID
	
	set rs=Db.select("DISTINCT TJD,MISCSEQ","IRSUPD","TJD NOT <:XJD AND FTYPE=1")
	
	while rs.next() do {
		set CID=rs.getCol(2)
		
		set BRREG="*" 
		if SRT do BRREG^DEPDI
		
		#ACCEPT Date=10/14/2005;PGM=Marie Hailey;CR=17143
		if REG set N="" if 1 for  set N=Q(1,N).order() quit:N.isNull()  xecute Q(1,N) else  quit
	
		if $$PROCESSED^FRM99INT(1,CID,.TYPCIF) quit
		
		if tmprpt3.getMode() do tmprpt3.setMode(0)
		set tmprpt3.key1=BRREG
		set tmprpt3.key2=rs.getCol(1)
		set tmprpt3.key3=CID
		do tmprpt3.bypassSave()
		}
	quit
	
	
ESC(Number CID,Number FOR,Number INT,Number WITH)	// Escrow accounts

	type DbSet ds
	type RecordLNBIL0 lnbil0
	
	set ds=Db.selectDbSet("LNBIL0","CID=:CID")
	while ds.next() do {
		set lnbil0=ds.getRecord("LNBIL0")
		
		if lnbil0.pe01da do DEP(lnbil0.pe01da,.FOR,.INT,.WITH)
		if lnbil0.pe02da do DEP(lnbil0.pe02da,.FOR,.INT,.WITH)
		if lnbil0.pe03da do DEP(lnbil0.pe03da,.FOR,.INT,.WITH)
		if lnbil0.pe04da do DEP(lnbil0.pe04da,.FOR,.INT,.WITH)
		if lnbil0.pe05da do DEP(lnbil0.pe05da,.FOR,.INT,.WITH)
		if lnbil0.pe06da do DEP(lnbil0.pe06da,.FOR,.INT,.WITH)
		if lnbil0.pe07da do DEP(lnbil0.pe07da,.FOR,.INT,.WITH)
		if lnbil0.pe08da do DEP(lnbil0.pe08da,.FOR,.INT,.WITH)
		if lnbil0.pe09da do DEP(lnbil0.pe09da,.FOR,.INT,.WITH)
		if lnbil0.pe10da do DEP(lnbil0.pe10da,.FOR,.INT,.WITH)
		if lnbil0.pe11da do DEP(lnbil0.pe11da,.FOR,.INT,.WITH)
		if lnbil0.pe12da do DEP(lnbil0.pe12da,.FOR,.INT,.WITH)
		if lnbil0.pe13da do DEP(lnbil0.pe13da,.FOR,.INT,.WITH)
		if lnbil0.pe14da do DEP(lnbil0.pe14da,.FOR,.INT,.WITH)
		if lnbil0.pe15da do DEP(lnbil0.pe15da,.FOR,.INT,.WITH)
		if lnbil0.pe16da do DEP(lnbil0.pe16da,.FOR,.INT,.WITH)
		if lnbil0.pe17da do DEP(lnbil0.pe17da,.FOR,.INT,.WITH)
		if lnbil0.pe18da do DEP(lnbil0.pe18da,.FOR,.INT,.WITH)
		if lnbil0.pe19da do DEP(lnbil0.pe19da,.FOR,.INT,.WITH)
		if lnbil0.pe20da do DEP(lnbil0.pe20da,.FOR,.INT,.WITH)
		}
	quit
	
	
DEP(Number ECID,Number FOR,Number INT,Number WITH)	// Payment Element - Deposit Account
		
	type RecordDEP dep
	
	set dep=Db.getRecord("DEP","CID=:ECID",1)
	if 'dep.getMode() quit
	
	if dep.oid quit		// Savings bond type of interest
	if dep.irsexm quit	// Exempt from IRS1099 reporting
	
	set INT=INT+dep.ipty
	set WITH=WITH+dep.bwpty
	set FOR=FOR+dep.penpty
	quit


BONDS	// Savings bond transactions
	
	type public Date BEGYR,ENDYR,FORMS()
	type public Number AMT(),PASSFLG
	type public String FORM,TYPCIF()
	
	type Date XJD
	type Number BAMT1,BAMT8,BAMT9,BOND,CID,I,INT,PAMT(),SEQ,WITH
	type String ADDR,BONDDTL(),CITY,CNTRY,CORRTN,DOCCODE,FORCNTY,FULLADDR
	type String LNAME,NAMCON,NAME,SPECIAL,STATE,TAXID,TIN,TINTYPE,X,XTIN,ZIP
	
	type DbSet ds
	type RecordB1099INT b1099int
	type RecordB1099INTCID b1099cid
	type RecordIRSUPD irsupd
	type RecordM1099 m1099
	
	kill TYPCIF(2)
	
	set XJD=FORMS(FORM).get()
	
	for I=1:1:9,"A","B","C" set AMT(I)=0
	
	set DOCCODE="  "
	set CORRTN=$select(PASSFLG=1:"G",PASSFLG=2:"C")
	set SPECIAL=""
	
	set b1099int=Class.new("RecordB1099INT")
	set b1099int.bamt1=0
	set b1099int.bamt2=0
	
	set b1099cid=Class.new("RecordB1099INTCID")
	set b1099cid.bamt2=0
	
	set ds=Db.selectDbSet("IRSUPD","TJD NOT <:XJD AND FTYPE=2")
	while ds.next() do {
		set irsupd=ds.getRecord("IRSUPD")
			
		set BOND=irsupd.bseq
		
		if $$PROCESSED^FRM99INT(2,irsupd.ocif_"-"_BOND) quit
		
		if irsupd.ccode=1,(PASSFLG=1) quit	// Skip duplicates when writting to tape
		if irsupd.ccode=4,(PASSFLG=1) quit	// Skip "New Entry" for first pass
		if irsupd.ccode=3,(PASSFLG=2) quit	// Skip "change amount" for second pass
		
		set TAXID=irsupd.miscseq
		
		// Accumulate totals by one taxid.
		// Only one 1099-INT Form per taxid will be generated.
		set (INT,WITH,BAMT1,BAMT8,BAMT9)=0
		type DbSet ds1=Db.selectDbSet("M1099","TAXID=:TAXID AND FORMTYP=1")
		while ds1.next() do {
			for I=1,3,8,9 set PAMT(I)=0
			set m1099=ds1.getRecord("M1099")

			if (m1099.type>4)&(m1099.type<8) quit
			
			if m1099.td<BEGYR!(m1099.td>ENDYR) quit
			
			// Clean Renewal Bonds and Gulf Bonds
			if (m1099.type=8)!(m1099.type=9) set PAMT(1)=m1099.int
			
			// State or Local Bonds	
			if m1099.type=10 do {
				set PAMT(8)=m1099.int
				set PAMT(9)=m1099.intpab
				}
				
			if ((m1099.type=1)!(m1099.type=2)!(m1099.type=3)!(m1099.type=4)) set PAMT(3)=m1099.int
			
			set INT=INT+PAMT(3)
			set WITH=WITH+m1099.intwh
			set BAMT1=BAMT1+PAMT(1)
			set BAMT8=BAMT8+PAMT(8)
			set BAMT9=BAMT9+PAMT(9)
				
			// This is a reporting record
			if BOND=m1099.seq set BONDDTL(m1099.seq)=PAMT(3)_"|"_m1099.intwh_"|"_PAMT(1)_"|"_PAMT(8)_"|"_PAMT(9)
			}
		
		// If no data in BONDDTL(BOND) array, nothing to report
		if 'BONDDTL(BOND).exists() quit
		
		if PASSFLG=1 set TIN=irsupd.otin,SEQ=irsupd.obseq,CID=TIN_"-"_irsupd.obseq
		if PASSFLG=2 set TIN=TAXID,SEQ=BOND,CID=TIN_"-"_BOND
	
		set TINTYPE=$select(TIN?2N1"-"7N:1,TIN?3N1"-"2N1"-"4N:2,1:" ")	// Type of TIN
		set XTIN=TIN.piece("|",1).translate(" ","-")
		
		set AMT(1)=0
		
		if PASSFLG=1,(irsupd.ccode=2) set (AMT(3),AMT(4),AMT(8),AMT(9))=0
		else  do {
			set AMT(3)=BONDDTL(BOND).piece("|",1)*100
			set AMT(4)=BONDDTL(BOND).piece("|",2)*100
			set AMT(1)=BONDDTL(BOND).piece("|",3)*100
			set AMT(8)=BONDDTL(BOND).piece("|",4)*100
			set AMT(9)=BONDDTL(BOND).piece("|",5)*100
			}
		set m1099=Db.getRecord("M1099","TAXID=:TIN,SEQ=:SEQ")
		
		if m1099.type=7 set AMT(1)=AMT(3),AMT(3)=0	// Promotional items = interest
		
		if PASSFLG=1 set NAME=irsupd.oname,LNAME=irsupd.olnam	
		if PASSFLG=2 set NAME=m1099.nam,LNAME=m1099.lnam
		set FULLADDR=m1099.ad1_"|"_m1099.ad2_"|"_m1099.ad3_"|"_m1099.city_"|"_m1099.state_"|"_m1099.mzip
		set ADDR=m1099.ad1_" "_m1099.ad2_" "_m1099.ad3
		set CITY=m1099.city
		set STATE=m1099.state
		set ZIP=m1099.mzip.piece("-",1)_m1099.mzip.piece("-",2)
		set CNTRY=m1099.cntry
		set FORCNTY=$select(CNTRY="US":" ",1:1)	// Foreign country indicator
	
		if irsupd.ccode<>1 do BRECWRT	// Skip duplicates
		
		// Inserting "B" Records saving bonds into B1099INT and B1099INTCID Files
		
		if TINTYPE=2 set X=LNAME
		else  set X=NAME
		do NAMCNTRL^IRSTPMTR set NAMCON=X
		
		if b1099cid.getMode() do b1099cid.setMode(0)
		set b1099cid.pdate=irsupd.tjd
		set b1099cid.bkey=TAXID
		set b1099cid.bseq=BOND
		set b1099cid.bnamcon=NAMCON
		set b1099cid.btintype=TINTYPE
		set b1099cid.btin=TIN
		set b1099cid.bamt1=AMT(1)/100
		set b1099cid.bamt3=AMT(3)/100
		set b1099cid.bamt4=AMT(4)/100
		set b1099cid.bamt8=AMT(8)/100
		set b1099cid.bamt9=AMT(9)/100
		set b1099cid.bname=NAME
		set b1099cid.baddr1=m1099.ad1
		set b1099cid.baddr2=m1099.ad2
		set b1099cid.baddr3=m1099.ad3
		set b1099cid.bcity=m1099.city
		set b1099cid.bstate=m1099.state
		set b1099cid.bzip=m1099.mzip
		do b1099cid.bypassSave()
	
		// If correction forms for this taxid already processed
		if $$PROCESSED^FRM99INT(3,irsupd.ocif,.TYPCIF) quit
		
		if b1099int.getMode() do b1099int.setMode(0)
		set b1099int.pdate=irsupd.tjd
		set b1099int.key=TAXID
		set b1099int.bseq=BOND
		set b1099int.bnamcon=NAMCON
		set b1099int.btintype=TINTYPE
		set b1099int.btin=TIN
		set b1099int.bcid=CID
		set b1099int.bamt1=BAMT1
		set b1099int.bamt3=INT
		set b1099int.bamt4=WITH
		set b1099cid.bamt8=BAMT8
		set b1099cid.bamt9=BAMT9
		set b1099int.bname=NAME
		set b1099int.baddr1=m1099.ad1
		set b1099int.baddr2=m1099.ad2
		set b1099int.baddr3=m1099.ad3
		set b1099int.bcity=m1099.city
		set b1099int.bstate=m1099.state
		set b1099int.bzip=m1099.mzip
		do b1099int.bypassSave()
		}
	quit
	
	
CRECBLD	// "C" record builder
	
	do CRECWRT	// Write the record to tape
	quit


%STOPLOD	// Stop %ZRTNLOD from this point on down

	quit
	
	
TRECWRT		// Dummy line reference for GT.M

	quit
	

ARECWRT		// Dummy line reference for GT.M

	quit
	
	
BRECWRT		// Dummy line reference for GT.M

	quit
	
	
CRECWRT		// Dummy line reference for GT.M

	quit
	
	
STORETOT	// Dummy line reference for GT.M

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60585^12778^P.R. Swarnalatha^18970"	// Signature - LTD^TIME^USER^SIZE
