R01S012	// SCA721 - Returned Item Priority Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:02 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String BRCD,CID,OBRCD,PRIORITY,TJD1,TSEQ,UID
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA721"
	set RN="Returned Item Priority Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[SCA721A]DTE|[SCA721A]DTE:DISTINCT:NOVAL||D EXT^DBSQRY||T|System Processing Date|||||"
	set %TAB("VIN2")="|255||[SCA721A]OBRCD|[SCA721A]OBRCD:DISTINCT:NOVAL||D EXT^DBSQRY||T|Branch Code|||||"
	set %TAB("VIN3")="|255||[SCA721A]PRIORITY|[SCA721A]PRIORITY:DISTINCT:NOVAL||D EXT^DBSQRY||T|Priority|||||"
	set %TAB("VIN4")="|255||[SCA721A]UID|[SCA721A]UID:DISTINCT:NOVAL||D EXT^DBSQRY||T|User ID|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String BRCD,CID,OBRCD,PRIORITY,TJD1,TSEQ,UID
	type public String VIN1,VIN2,VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,OVRDSC,RID,RN,STROVR,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc10,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA721",RN="Returned Item Priority Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA721","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[SCA721]CID#3#12,[SCA721]LNM#17#20,[SCA721]TAMT#39#15,[SCA721]CK#56#12,[SCA721]UID#70#12,[SCA721]TSEQ#84#12,[SCA721]PRIORITY#98#3,[SCA721]TCMT#103#30"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[SCA721A]DTE "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[SCA721A]OBRCD "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[SCA721A]PRIORITY "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[SCA721A]UID "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("SCA721A,SCA721") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"System Processing Date"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Branch Code"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Priority"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"User ID"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Returned Item Priority Report"
		set VBNRINFO("PGM")="R01S012"
		set VBNRINFO("RID")="SCA721"
		set VBNRINFO("TABLES")="SCA721A,SCA721"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,SCA721A]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SCA721A]DTE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,SCA721A]OBRCD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,SCA721A]PRIORITY"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,SCA721A]CID"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,SCA721A]TAMT"
		set VBNRINFO("ORDERBY",7)="[SYSDEV,SCA721A]UID"
		set VBNRINFO("ORDERBY",8)="[SYSDEV,SCA721A]TSEQ"
		set VBNRINFO("ORDERBY",9)="[SYSDEV,SCA721A]OVRLIT"
		set VBNRINFO("ORDERBY",10)="[SYSDEV,SCA721A]OVRTYP"

		set VBNRINFO("DOC",1)="This new report will allow an institution to view return items on a priority"
		set VBNRINFO("DOC",2)="basis.  The report information is displayed by posting date, account branch of"
		set VBNRINFO("DOC",3)="origin, priority, account number and transaction amount from lowest to highest. "
		set VBNRINFO("DOC",4)="The prompts for this report are the transaction date, account branch of origin,"
		set VBNRINFO("DOC",5)="priority and user ID (user who posted the original rejected transaction)."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:10 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"SCA721A.JOB,SCA721A.DTE,SCA721A.OBRCD,SCA721A.PRIO"
	set VSELECT=VSELECT_"RITY,SCA721A.CID,SCA721A.TAMT,SCA721A.UID,SCA721A."
	set VSELECT=VSELECT_"TSEQ,SCA721A.OVRLIT,SCA721A.OVRTYP,SCA721.DTE,SCA7"
	set VSELECT=VSELECT_"21.OBRCD,SCA721.PRIORITY,SCA721.CID,SCA721.LNM,SCA"
	set VSELECT=VSELECT_"721.TAMT,SCA721.CK,SCA721.UID,SCA721.TSEQ,SCA721.T"
	set VSELECT=VSELECT_"CMT"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"SCA721A,SCA721",VWHERE,"SCA721A.JOB,SCA721A.DTE,SCA721A.OBRCD,SCA721A.PRIORITY,SCA721A.CID,SCA721A.TAMT,SCA721A.UID,SCA721A.TSEQ,SCA721A.OVRLIT,SCA721A.OVRTYP","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vovc10
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7="",vovc8="",vovc9="",vovc10=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc8,vc8,vovc9,vc9,vovc10,vc10
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8,vovc9=vc9,vovc10=vc10
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20
	set vc1=V.piece($C(9),1)			// SCA721A.JOB
	set vc2=V.piece($C(9),2)			// SCA721A.DTE
	set vc3=V.piece($C(9),3)			// SCA721A.OBRCD
	set vc4=V.piece($C(9),4)			// SCA721A.PRIORITY
	set vc5=V.piece($C(9),5)			// SCA721A.CID
	set vc6=V.piece($C(9),6)			// SCA721A.TAMT
	set vc7=V.piece($C(9),7)			// SCA721A.UID
	set vc8=V.piece($C(9),8)			// SCA721A.TSEQ
	set vc9=V.piece($C(9),9)			// SCA721A.OVRLIT
	set vc10=V.piece($C(9),10)			// SCA721A.OVRTYP
	set vc11=V.piece($C(9),11)			// SCA721.DTE
	set vc12=V.piece($C(9),12)			// SCA721.OBRCD
	set vc13=V.piece($C(9),13)			// SCA721.PRIORITY
	set vc14=V.piece($C(9),14)			// SCA721.CID
	set vc15=V.piece($C(9),15)			// SCA721.LNM
	set vc16=V.piece($C(9),16)			// SCA721.TAMT
	set vc17=V.piece($C(9),17)			// SCA721.CK
	set vc18=V.piece($C(9),18)			// SCA721.UID
	set vc19=V.piece($C(9),19)			// SCA721.TSEQ
	set vc20=V.piece($C(9),20)			// SCA721.TCMT
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

	type Number BRCD,CID,OBRCD,PRIORITY,TSEQ
	type Date TJD1
 	type String UID
	set (BRCD,CID,TSEQ)=0
	set UID=""
 	type ResultSet rs=Db.select("TJD,BRCD,CID,UID,TSEQ,OBRCD,PRIORITY","RET",,"TJD,BRCD,CID,UID,TSEQ")
 	while rs.next() do { 		
 		set TJD1=rs.getCol("TJD")
 		set BRCD=rs.getCol("BRCD")
 		set CID=rs.getCol("CID")
 		set UID=rs.getCol("UID")
 		set TSEQ=rs.getCol("TSEQ")
		set OBRCD=rs.getCol("OBRCD")
		set PRIORITY=rs.getCol("PRIORITY")
 		type RecordEXC fEXC=Db.getRecord("EXC","TJD=:TJD1,BRCD=:BRCD,UID=:UID,TSEQ=:TSEQ",1)
		if 'fEXC.getMode() quit
 		do BLDREC(.fEXC) 
 	}
 	quit

BLDREC(RecordEXC fEXC)
	type public Number BRCD,CID,OBRCD,PRIORITY,TSEQ
	type public String UID
	type public Date TJD1
 	type Number REC2,TAMT
 	type String LNM,NONE,OVR,OVRFLG
 	set REC2=0

 	if OBRCD.isNull() set OBRCD=CUVAR.BOBR
 	if PRIORITY.isNull() set PRIORITY=999
 	
	set TAMT=+fEXC.tamt
 	type ResultSet rs1=Db.select("LNM","ACN","CID=:CID","CID")
 	if rs1.next() do {
 		set LNM=rs1.getCol("LNM")
 		}
	
 	type RecordSCA721 fSCA721=Db.getRecord("SCA721","JOB=:%ProcessID,DTE=:TJD1,OBRCD=:OBRCD,PRIORITY=:PRIORITY,CID=:CID,TAMT=:TAMT,UID=:UID,TSEQ=:TSEQ",1)
 	set fSCA721.lnm=LNM
 	set fSCA721.ck=fEXC.tso.piece("CK#",2).piece("~",1)
 	set fSCA721.tcmt=fEXC.tcmt
 	do fSCA721.bypassSave()
	
 	set (OVR,OVRFLG)="" 
 	set NONE="NONE"	

	type ResultSet rs2=Db.select("OVRFLG,OVR,CLSOVR,AMT","EXC1","TJD=:TJD1 and BRCD=:BRCD and UID=:UID and TSEQ=:TSEQ and CID=:CID")
	while rs2.next() do {
		set OVRFLG=rs2.getCol("OVRFLG")
		set OVR=rs2.getCol("OVR")
		type RecordSCA721A fSCA721A=Db.getRecord("SCA721A","JOB=:%ProcessID,DTE=:TJD1,OBRCD=:OBRCD,PRIORITY=:PRIORITY,CID=:CID,TAMT=:TAMT,UID=:UID,TSEQ=:TSEQ,OVRTYP=:OVRFLG,OVRLIT=:OVR",1)
		set REC2=1
		set fSCA721A.txt=rs2.getCol("CLSOVR")_"|"_rs2.getCol("AMT")
		do fSCA721A.bypassSave()
		}
 
	if 'REC2 do {
		type RecordSCA721A fSCA721A=Db.getRecord("SCA721A","JOB=:%ProcessID,DTE=:TJD1,OBRCD=:OBRCD,PRIORITY=:PRIORITY,CID=:CID,TAMT=:TAMT,UID=:UID,TSEQ=:TSEQ,OVRTYP=:NONE,OVRLIT=:NONE",1)
		set fSCA721A.txt=""
		do fSCA721A.bypassSave()
		}
 	quit
	quit

VRPOST	// Report post-processor

 	//  kill temporary sort files
	do Db.fastDelete("SCA721","JOB=:%ProcessID")
	do Db.fastDelete("SCA721A","JOB=:%ProcessID") 

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0,vs(8)=0,vs(9)=0,vs(10)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1,vskp(8)=1,vskp(9)=1,vskp(10)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(8).get() do VDTL8 quit:VFMQ
	if 'vskp(9).get() do VDTL9 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(10)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6,vc7,vovc7,vc8,vovc8,vc9,vovc9,vc10,vovc10
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8,vb9,vb10
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7,vb8,vb9,vb10)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,vb9=1,vb10=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,vb9=1,vb10=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1,vb8=1,vb9=1,vb10=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1,vb8=1,vb9=1,vb10=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1,vb8=1,vb9=1,vb10=1
	if vb6!(+vovc6'=+vc6) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1,vb8=1,vb9=1,vb10=1
	if vb7!(vovc7'=vc7) set vs(8)=0,vh(8)=0,VD(7)=0,vb8=1,vb9=1,vb10=1
	if vb8!(+vovc8'=+vc8) set vs(9)=0,vh(9)=0,VD(8)=0,vb9=1,vb10=1
	if vb9!(vovc9'=vc9) set vs(10)=0,vh(10)=0,VD(9)=0,vb10=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(10) set vs(10)=1 do stat^DBSRWUTL(10)
	if 'vs(9) set vs(9)=1 do stat^DBSRWUTL(9)
	if 'vs(8) set vs(8)=1 do stat^DBSRWUTL(8)
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(10)=VT(10)+1
	quit

VDTL8	// Detail
	type public String %TIM,BRCD,CID,IOSL,OBRCD,OVRDSC,PRIORITY,STROVR,TJD1,TSEQ,UID,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc10,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	quit:VD(8)  set VD(8)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "_$J(vc14,12)
	set VL=VL_$J("",16-VL.length())_$E(vc15,1,20)
	set VL=VL_$J("",38-VL.length())_$J($FN(vc16,",",2),15)
	set VL=VL_$J("",55-VL.length())_$E(vc17,1,12)
	set VL=VL_$J("",69-VL.length())_$E(vc18,1,12)
	set VL=VL_$J("",83-VL.length())_$J(vc19,12)
	set VL=VL_$J("",97-VL.length())_$J(vc13,3)
	set VL=VL_$J("",102-VL.length())_$E(vc20,1,30)
	do VOM
	quit

VDTL9	// Detail
	type public String %TIM,BRCD,CID,IOSL,OBRCD,OVRDSC,PRIORITY,STROVR,TJD1,TSEQ,UID,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc10,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate

	quit:VD(9)  set VD(9)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$E(STROVR,1,12) set VL="                                   "_V
	do VP2 quit:VFMQ!verror.get()  set V=$E(OVRDSC,1,80)
	set VL=VL_$J("",49-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BRCD,CID,CONAM,OBRCD,OVRDSC,PRIORITY,RID,RN,STROVR,TJD1,TSEQ,UID,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc10,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Date:"
	set VL=VL_$J("",7-VL.length())_$J($$DAT^%ZM(vc11),10)
	set VL=VL_$J("",21-VL.length())_"Branch:"
	set VL=VL_$J("",29-VL.length())_$J(vc12,6)
	set VL=VL_$J("",43-VL.length())_"Priority:"
	set VL=VL_$J("",53-VL.length())_$J(vc13,3)
	do VOM
	set VL="" do VOM
	set VL="                                          "_"Transaction         Check                 Transaction"
	do VOM
	set VL="Account Number  Customer Name                  Amount        Number  User ID           Sequence  Pri  Teller Comment"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: STROVR

	type public String vc9
 type public String STROVR
 type String OVR

 set OVR=vc9
 if OVR="NONE" set STROVR=""
 else  set STROVR=OVR
	quit

VP2	// Column pre-processor - Variable: OVRDSC

	type public String vc9,vc5,vc10,vc6
	type public String OVRDSC
	if vc9="NONE" set OVRDSC="" quit

	type public Number AMT,CID
	type String GRP,OVRTYP,OVRLIT,TCMT

	set CID=vc5
	set OVRTYP=vc10
	set OVRLIT=vc9

	if OVRTYP="OVR" do {
		set OVRDSC=$$OVR(OVRTYP,vc6)
		}
	else  do {
		type RecordACN acn = Db.getRecord("ACN", "CID=:CID") 
		set GRP = acn.grp
		set OVRDSC=$$RFLG(OVRTYP,GRP,vc6)
		}
	quit
	
OVR(OVRTYP,AMT)
        type public Number CID
        type public String CC,OVRDSC,OVRLIT,STBL(,,)
	type String A,CLASS

	set CLASS=""

	type ResultSet rs=Db.select("CLS","ACN","CID=:CID")
 	if rs.next() do {
 		set CLASS=rs.getCol("CLS")
 		}
	if CLASS.isNull() set CLASS="*"

 	if 'STBL(OVRTYP,CLASS,OVRLIT).exists() do {

 		type RecordOVRLIT fOVRLIT = Db.getRecord("OVRLIT","OVR=:OVRLIT",1)
		if 'fOVRLIT.getMode() set STBL(OVRTYP,CLASS,OVRLIT) = "" quit

 		// Loan and Deposit use different desc
 		if CLASS="D" set A=fOVRLIT.desc
 		else  if CLASS="L"  set A=fOVRLIT.desc1
		else  set A=fOVRLIT.desc2

 		if A["<" set A=A.piece("<",1)
 		if A["(" set A=A.piece("(",1)

 		set STBL(OVRTYP,CLASS,OVRLIT)=A
 		}

 	set OVRDSC=STBL(OVRTYP,CLASS,OVRLIT)
	set CC=CUVAR.%CRCD
	if CC="USD" do {	
		if OVRDSC.extract(OVRDSC.length())="$" do {
			if AMT.isNull() set OVRDSC=OVRDSC.piece("$",1)
			else  set OVRDSC=OVRDSC_AMT.piece("#",1)
			}
		else  if 'AMT.isNull() set OVRDSC=OVRDSC_" "_AMT.piece("#",1)
		}
	else  set OVRDSC=OVRDSC.piece("$",1)_AMT.piece("#",1)
	quit OVRDSC
	
RFLG(TYP,GRP,VAL)
	type public String OVRLIT,UTBL()
	type String DESC,X
	set DESC=""

	if 'UTBL(TYP,GRP,OVRLIT).exists() do {
	type RecordUTBLRFLG fUTRFLG=Db.getRecord("UTBLRFLG","GRP=:GRP,RFLG=:OVRLIT",1)
		set X=fUTRFLG.desc
		if X.isNull() set X=$$^MSG(6343)
		set DESC=X
		set UTBL(TYP,GRP,OVRLIT)=X
		}
	else  set DESC=UTBL(TYP,GRP,OVRLIT) 

	// Variable insertion
 	if (DESC["<"),(DESC[">") set DESC=DESC.piece("<",1)_VAL_DESC.piece(">",2)

 	quit DESC
	quit
