ITOPIDFL(RecordITOPID itopid, String vpar, Boolean vparNorm) // ITOPID - Treasury Operation ID Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:25 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (11)             11/22/2003
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = itopid.getMode()                      // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(itopid,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(itopid,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("ITSCODE").exists()!vx("DEALID").exists()!vx("EFD").exists()!vx("BRCD").exists()!vx("UID").exists()!vx("TSEQ").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("ITOPID",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("ITOPID","ITSCODE = :itopid.itscode and DEALID = :itopid.dealid and EFD = :itopid.efd and BRCD = :itopid.brcd and UID = :itopid.uid and TSEQ = :itopid.tseq") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String ITSCODE
	type public String DEALID
	type public String EFD
	type public String BRCD
	type public String UID
	type public String TSEQ

	type RecordITOPID itopid = Db.getRecord("ITOPID","ITSCODE=:ITSCODE,DEALID=:DEALID,EFD=:EFD,BRCD=:BRCD,UID=:UID,TSEQ=:TSEQ")
	if (%ProcessMode = 2) do {
		do itopid.setMode(2)

		do ITOPIDFL(itopid,vpar)
	}
	else  do VINDEX(itopid)

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordITOPID itopid

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("ITOPID","ITSCODE = :itopid.itscode and DEALID = :itopid.dealid and EFD = :itopid.efd and BRCD = :itopid.brcd and UID = :itopid.uid and TSEQ = :itopid.tseq") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(itopid))  S ^ITOPID(vobj(itopid,-3),vobj(itopid,-4),vobj(itopid,-5),vobj(itopid,-6),vobj(itopid,-7),vobj(itopid,-8))=vobj(itopid)
		#ENDBYPASS
	}

	if vpar["/INDEX/",'(%O = 1)!'vx("").order().isNull() do VINDEX(.itopid) // Update Index files

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordITOPID itopid

	if vpar["/INDEX/" do VINDEX(.itopid)                   // Delete index entries

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	ZWI ^ITOPID(vobj(itopid,-3),vobj(itopid,-4),vobj(itopid,-5),vobj(itopid,-6),vobj(itopid,-7),vobj(itopid,-8)) // Delete Record
	quit


vreqn // Validate required data items

	type public RecordITOPID itopid

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordITOPID itopid

	if itopid.itscode.isNull() do vreqerr("ITSCODE") quit
	if itopid.dealid.isNull() do vreqerr("DEALID") quit
	if itopid.efd.isNull() do vreqerr("EFD") quit
	if itopid.brcd.isNull() do vreqerr("BRCD") quit
	if itopid.uid.isNull() do vreqerr("UID") quit
	if itopid.tseq.isNull() do vreqerr("TSEQ") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("ITOPID","MSG",1767,"ITOPID."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordITOPID itopid

	if itopid.itscode.length()>3 set vRM = $$^MSG(1076,3) do vdderr("ITSCODE", vRM) quit
	if itopid.dealid.length()>10 set vRM = $$^MSG(1076,10) do vdderr("DEALID", vRM) quit
	set X = itopid.efd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("EFD", vRM) quit
	set X = itopid.brcd if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("BRCD", vRM) quit
	if itopid.uid.length()>20 set vRM = $$^MSG(1076,20) do vdderr("UID", vRM) quit
	set X = itopid.tseq if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("TSEQ", vRM) quit
	set X = itopid.branch if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("BRANCH", vRM) quit
	set X = itopid.enterdate if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("ENTERDATE", vRM) quit
	set X = itopid.trc if 'X.isNull(),X'?1.6N,X'?1"-"1.5N set vRM=$$^MSG(742,"N") do vdderr("TRC", vRM) quit
	if itopid.userid.length()>20 set vRM = $$^MSG(1076,20) do vdderr("USERID", vRM) quit
	if itopid.vtype.length()>6 set vRM = $$^MSG(1076,6) do vdderr("VTYPE", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("ITOPID","MSG",979,"ITOPID."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


public VINDEX(RecordITOPID itopid) // Update index entries

		type Public String vx()

	if %ProcessMode=1 do { quit
	}
	do vi1(.itopid)

	quit
	

vi1(RecordITOPID itopid) // Maintain ITOPIDX index entries (User/Branch Index)

	type Public String vx()
	type Boolean vdelete = 0
	type String v1 = itopid.itscode
	type String v2 = itopid.uid
	type String v3 = itopid.brcd
	type String v4 = itopid.dealid
	type String v5 = itopid.efd
	type String v6 = itopid.tseq

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if $D(^ITOPID(vobj(itopid,-3),vobj(itopid,-4),vobj(itopid,-5),vobj(itopid,-6),vobj(itopid,-7),vobj(itopid,-8)))#2,'$D(^ITOPIDX(v1,v2,v3,v4,v5,v6)) do vidxerr("ITOPIDX")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if %ProcessMode<2 set ^ITOPIDX(v1,v2,v3,v4,v5,v6)="" quit
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^ITOPIDX(v1,v2,v3,v4,v5,v6)
	quit

public VIDXBLD(List vlist) // Rebuild index files (External call)


	type Number %ProcessMode=0                             // Create mode
	type Number i

	if vlist.get().isNull() set vlist="VINDEX"             // Build all

	type DbSet ds=Db.selectDbSet("ITOPID")

	while ds.next() do {
		type RecordITOPID itopid=ds.getRecord("ITOPID")
		if vlist.contains("VINDEX") do VINDEX(.itopid) quit
		if vlist.contains("ITOPIDX") do vi1(.itopid)
	}

	quit


public VIDXBLD1(RecordITOPID itopid, List vlist) // Rebuild index files for one record (External call)


	type Number i

	if vlist.contains("VINDEX") do VINDEX(.itopid) quit
	if vlist.contains("ITOPIDX") do vi1(.itopid)

	quit


vidxerr(di) // Error message

	D SETERR^DBSEXECU("ITOPID","MSG",1225,"ITOPID."_di)

	quit


vkchged // Access key changed

	type public RecordITOPID itopid

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("ITSCODE").exists() set vux("ITSCODE") = vx("ITSCODE")
	if vx("DEALID").exists() set vux("DEALID") = vx("DEALID")
	if vx("EFD").exists() set vux("EFD") = vx("EFD")
	if vx("BRCD").exists() set vux("BRCD") = vx("BRCD")
	if vx("UID").exists() set vux("UID") = vx("UID")
	if vx("TSEQ").exists() set vux("TSEQ") = vx("TSEQ")
	do vkey(1) set voldkey = itopid.itscode_","_itopid.dealid_","_itopid.efd_","_itopid.brcd_","_itopid.uid_","_itopid.tseq // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = itopid.itscode_","_itopid.dealid_","_itopid.efd_","_itopid.brcd_","_itopid.uid_","_itopid.tseq // Copy new keys into object
	type RecordITOPID vnewrec = itopid.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("ITOPID",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordITOPID itopid

	if vux("ITSCODE").exists() set itopid.itscode = vux("ITSCODE").piece("|",i)
	if vux("DEALID").exists() set itopid.dealid = vux("DEALID").piece("|",i)
	if vux("EFD").exists() set itopid.efd = vux("EFD").piece("|",i)
	if vux("BRCD").exists() set itopid.brcd = vux("BRCD").piece("|",i)
	if vux("UID").exists() set itopid.uid = vux("UID").piece("|",i)
	if vux("TSEQ").exists() set itopid.tseq = vux("TSEQ").piece("|",i)
	quit

VIDXPGM()	quit "ITOPIDFL"	// Location of index program

