public MRPC149( String RETURN, Number VERSN, String COUNTRY, String STATE, String ZIPCODE)
	/*
	Procedure ID: MRPC149
	DESC: Zip Code Validation
	ORIG: Kevin Hailey
	DATE: 11/07/06
	
	KEYWORDS: RPC
	
	ARGUMENTS:
	
		RETURN		Return Value

		VERSN		Version Number		/TYP=N/REQ/MECH=VAL
		current version=1
	
		COUNTRY		Country			/TYP=T/REQ/MECH=VAL
	
		STATE		State			/TYP=T/REQ/MECH=VAL
		
		ZIPCODE		ZIPCODE			/TYP=T/REQ/MECH=VAL


	RETURNS:
	
		$$		Error Message		/TYP=T
		Null		No Error
	

	RELATED:
	
		$$^PBSMRPC - MRPC Service Class Driver

	
	EXAMPLE:

		S RM=$$^MRPC149(.RETURN,1,COUNTRY,STATE,ZIP)


	This RPC is used to validate zip codes based on country and state.  It
	will call procedure POSTAL_CODE to do this validation.

	---- Revision History ------------------------------------------------
	
	01/09/07 - VANITHAK - CR 24741
		   Brought from ICGWeb01_Dev_Profile view. Eliminated
		   compiler warnings.
	*/
		    
 	// Begin processing

	type public Boolean ER
	type public String RM
	type Boolean ERV
	type String ERRMSG

	set (ER,ERV)=0
	set (ERRMSG,RM)=""
	set RETURN=$$LV2V^MSG("")
	
	do MAIN(VERSN.get(),COUNTRY.get(),STATE.get(),ZIPCODE.get())
	
	if ERV set ER=1,RM=ERRMSG

	if ER quit $$ERRMSG^PBSUTL(RM)

	quit ""


MAIN( Number VERSN, String COUNTRY, String STATE, String ZIPCODE)
	/*
	Process request

	ARGUMENTS:
		VERSN		Version
		COUNTRY		Country
		STATE		State
		ZIPCODE		Zip Code

	RETURNS:
		RETURN		Return value
	

	This subroutine will call procedure POSTAL_CODE to perform the
	validation of the zip code.
	
	*/

	type public Boolean ER
	type public String RM

	catch vERROR {

		// Log GTM system errors

		type Boolean ERV
		type String ET, ERRMSG
				
		set ET=vERROR.type
		if vERROR.type["%GTM-" do {
			do ZE^UTLERR
			set ERRMSG=vERROR.type_","_vERROR.description
		}

		if $TLevel do Runtime.rollback()

		// Build error message for thrown errors
		else  do {
			set ERRMSG=$S(RM.get().isNull():vERROR.description,1:RM)
			set ERRMSG=$S(ET.isNull():ERRMSG,ERRMSG.isNull():ET,1:ET_","_ERRMSG)
		}

		// Set error flag
		set ERV=1
	}
	
	// Version number of client message is not compatible with server
	if VERSN'=1 set RM=$$^MSG(2951) throw Class.new("Error",","_RM)

	// Required fields cannot be null - ~p1
	if COUNTRY.isNull() set RM=$$^MSG(2388,"COUNTRY") throw Class.new("Error",","_RM)
	if STATE.isNull() set RM=$$^MSG(2388,"STATE") throw Class.new("Error",","_RM)
	if ZIPCODE.isNull() set RM=$$^MSG(2388,"ZIP") throw Class.new("Error",","_RM)

	do ZIP^PROCZIP(COUNTRY,STATE,ZIPCODE)
	if ER throw class.new("Error",","_RM) quit

	quit
		

TEST( String %UserID)
	/* Test Linetag
	
	This linetag can be used to test the RPC from the GTM prompt
	*/

	type Boolean ER
	type String FLD(),COUNTRY, INPUT, PTR, RETURN, RM, STATE, TLO, ZIPCODE
	type String X,%IPMODE,%LOGID
	
	// User ID required
	if %UserID.isNull() set ER=1 write !,$$^MSG(2849)

	do SYSVAR^SCADRV0()
	set %UserClass="SCA"
	set %LOGID=$$LOGID^SCADRV
	set %IPMODE="NOINT"
	set %UserStation=$$TLO^UTLO()

	set ER=0
	set (INPUT,RM)=""

	read !,"Country: ",COUNTRY
	read !,"State: ",STATE
	read !,"Zip Code: ",ZIPCODE
	
	do Runtime.start("BA")
	
	set X=$$^MRPC149(.RETURN,1,COUNTRY,STATE,ZIPCODE)
		
	if 'X.isNull() do {
		set PTR=$$LV2V^MSG(X,.FLD)
		set ER=1
		if RM.isNull() set RM=FLD(5)
	}
	else  set RM="Success"
	write !!,"Error Flag: ",ER.get(),"   ",RM.get()
	write !,"Return",!

	if $TLevel do Runtime.commit()

	quit

vSIG()	quit "60639^51732^Vanitha Krishnasamy^3174"	// Signature - LTD^TIME^USER^SIZE
