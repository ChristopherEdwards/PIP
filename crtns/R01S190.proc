R01S190	// SCA126 - Anticipated Escrow Remittance Batch
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:44 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String BCH
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number BATCH

	set RID="SCA126"
	set RN="Anticipated Escrow Remittance Batch"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("BATCH")="|6||[SYSDEV,ERB]BATCH|[ERB0]||S BCH=X||N|Batch|||||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,BATCH#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String BCH
	type public Number BATCH
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,AD1,BCHDES,CONAM,PTOTAL,RID,RN,TITLE1,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA126",RN="Anticipated Escrow Remittance Batch"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA126","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[ERB]AREF#1#12,[ERB]ETYP#15#6,[ERB]REMDT#22#10,[ERB]PERAMO#101#8,[ERB]IND#111#1,[ERB]REMPTP#114#8,[ERB]TAMT#125#8"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="ERB.BATCH=:BCH"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Anticipated Escrow Remittance Batch"
		set VBNRINFO("PGM")="R01S190"
		set VBNRINFO("RID")="SCA126"
		set VBNRINFO("TABLES")="ERB"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ERB]BATCH"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,ERB]PAYEE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ERB]CID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,ERB]TYP"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,ERB]REMDT"

		set VBNRINFO("DOC",1)="/*"
		set VBNRINFO("DOC",2)="   ---------- Revision History --------------------------------------------"
		set VBNRINFO("DOC",3)=""
		set VBNRINFO("DOC",4)="    01/21/06 - SWARNALP - 18338"
		set VBNRINFO("DOC",5)="              Converted to PSL"
		set VBNRINFO("DOC",6)=""
		set VBNRINFO("DOC",7)="   ------------------------------------------------------------------------"
		set VBNRINFO("DOC",8)="*/"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:3 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("ERB.BATCH,ERB.PAYEE,ERB.CID,ERB.TYP,ERB.REMDT,ERB.PERAMO,ERB.REMPTP,ERB.TAMT,ERB.AREF,ERB.ETYP,ERB.IND,ERB.REMFACT","ERB","ERB.BATCH=:BCH","ERB.BATCH,ERB.PAYEE,ERB.CID,ERB.TYP,ERB.REMDT","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12
	set vc1=V.piece($C(9),1)			// ERB.BATCH
	set vc2=V.piece($C(9),2)			// ERB.PAYEE
	set vc3=V.piece($C(9),3)			// ERB.CID
	set vc4=V.piece($C(9),4)			// ERB.TYP
	set vc5=V.piece($C(9),5)			// ERB.REMDT
	set vc6=V.piece($C(9),6)			// ERB.PERAMO
	set vc7=V.piece($C(9),7)			// ERB.REMPTP
	set vc8=V.piece($C(9),8)			// ERB.TAMT
	set vc9=V.piece($C(9),9)			// ERB.AREF
	set vc10=V.piece($C(9),10)			// ERB.ETYP
	set vc11=V.piece($C(9),11)			// ERB.IND
	set vc12=V.piece($C(9),12)			// ERB.REMFACT
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 //Incoming=BCH
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc6,vc7,vc8
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+vc6			// @TOT([ERB]PERAMO)
	set VT(5,2,1)=VT(5,2,1)+vc7			// @TOT([ERB]REMPTP)
	set VT(5,3,1)=VT(5,3,1)+vc8			// @TOT([ERB]TAMT)
	quit

VSUM2	// Summary
	type public String %TIM,AD1,BCH,BCHDES,I,IOSL,PTOTAL,TITLE1,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                                                  "_"----------   ---------- ----------"
	do VOM
	set VL="                                "_"Report Totals:"
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4)+VT(5))	// @CNT(0,N,5)
	set VL=VL_$J("",61-VL.length())_$J(V,5)
	set VL=VL_$J("",67-VL.length())_"Accounts"
	set V=0						// @TOT([ERB]PERAMO,0)
	for I=0:1:5 set V=V+VT(I,1,1)
	set VL=VL_$J("",98-VL.length())_$J(V,10,2)
	set V=0						// @TOT([ERB]REMPTP,0)
	for I=0:1:5 set V=V+VT(I,2,1)
	set VL=VL_$J("",111-VL.length())_$J(V,10,2)
	set V=0						// @TOT([ERB]TAMT,0)
	for I=0:1:5 set V=V+VT(I,3,1)
	set VL=VL_$J("",122-VL.length())_$J(V,10,2)
	do VOM
	set VL="" do VOM
	quit

VSUM3	// Summary
	type public String %TIM,AD1,BCH,BCHDES,I,IOSL,PTOTAL,TITLE1,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                                                  "_"----------   ---------- ----------"
	do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(PTOTAL,1,20) set VL="                                "_V
	set V=VT(3)					// @CNT(,N,5)
	set VL=VL_$J("",61-VL.length())_$J(V,5)
	set VL=VL_$J("",67-VL.length())_"Accounts"
	set V=VT(3,1,1)					// @TOT([ERB]PERAMO,)
	set VL=VL_$J("",98-VL.length())_$J(V,10,2)
	set V=VT(3,2,1)					// @TOT([ERB]REMPTP,)
	set VL=VL_$J("",111-VL.length())_$J(V,10,2)
	set V=VT(3,3,1)					// @TOT([ERB]TAMT,)
	set VL=VL_$J("",122-VL.length())_$J(V,10,2)
	do VOM
	set VL="" do VOM
	quit

VDTL5	// Detail
	type public String %TIM,AD1,BCH,BCHDES,IOSL,PTOTAL,TITLE1,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc9,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,12) do VP3 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",14-VL.length())_$E(vc10,1,6)
	set VL=VL_$J("",21-VL.length())_$J($$DAT^%ZM(vc5),10)
	do VP4 quit:VFMQ!verror.get()  set V=$E(TITLE1,1,33)
	set VL=VL_$J("",32-VL.length())_V
	set VL=VL_$J("",67-VL.length())_$E(AD1,1,32)
	set VL=VL_$J("",100-VL.length())_$J(vc6,8,2)
	set VL=VL_$J("",110-VL.length())_$E(vc11,1,1)
	set VL=VL_$J("",112-VL.length())_$J(vc7,9,2)
	set VL=VL_$J("",122-VL.length())_$J(vc8,10,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AD1,BCH,BCHDES,CONAM,PTOTAL,RID,RN,TITLE1,VL,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+12,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",99-VL.length())_"Run Date:"
	set VL=VL_$J("",109-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="Anticipated Escrow Remittance Report  (SCA126)                                                       System:"
	set VL=VL_$J("",109-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	do VP5 quit:VFMQ!verror.get()  set V=$E(BCHDES,1,100) set VL="       "_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="        "_"Loan  Escrow                                                                                  Amount  E      Paid"
	do VOM
	set VL="     "_"Account  Type   For Date   Borrower                           Property Address"
	set V="Billed  A     Prior   To Remit" do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",102-VL.length())_V
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: PTOTAL

 type public String PAYEE,PTOTAL

 set PTOTAL="Payee "_PAYEE_" Totals:"
	quit

VP2	// Column pre-processor - [SYSDEV,ERB]AREF

	type public String vc9
 type public Number PREAREF,POSTAREF,PT
 type public String V

 set PREAREF=vc9
 if PREAREF=POSTAREF set V=""
	quit

VP3	// Column post-processor - [SYSDEV,ERB]AREF

	type public String vc9
 type public Number POSTAREF

 set POSTAREF=vc9
	quit

VP4	// Column pre-processor - Variable: TITLE1

	type public String vc9,vc2
 type public String AD1,PAYEE,TITLE1

 type Number CID,COLL

 set CID=vc9
 type RecordLN ln=Db.getRecord("LN","CID=:CID")
 set TITLE1=ln.title1

 set AD1=""
 set COLL=ln.coll

 if COLL do {
        type RecordCOL col=Db.getRecord("COL","COLL=:COLL")
        set AD1=col.ad1
        }
 set PAYEE=vc2
	quit

VP5	// Column pre-processor - Variable: BCHDES

	type public String vc12
 type public String BCHDES
 type public Number BCH
 
 type String DESC
 type Number FACT,REMFACT

 type RecordERB0 erb0 = Db.getRecord("ERB0","BATCH=:BCH")
 set DESC=erb0.desc

 set REMFACT=vc12

 if REMFACT set FACT=+REMFACT
 else  set FACT=erb0.remfact

 set FACT=FACT*100
 set BCHDES="Remittance Factor "_FACT_" %    Batch "_BCH_" - "_DESC
	quit

VP6	// Column post-processor - Billed  A     Prior   To Remit

 type public Number POSTAREF

 set POSTAREF=""
	quit
