BCHCTFGR //Batch BCHCTFGRP - The CTF Group Account Plan Assignment
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHCTFGRP Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHCTFGRP")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHCTFGRP") quit
 do JOBMGR^BCHUTL(%FN,"BCHCTFGRP",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHCTFGRP")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(EFDATE,GRPNAME,CTFPLN) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHCTFGRP","*","",EFDATE.get()_","_GRPNAME.get()_","_CTFPLN.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHCTFGRP",EFDATE.get()_","_GRPNAME.get()_","_CTFPLN.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHCTFGRP",EFDATE.get()_","_GRPNAME.get()_","_CTFPLN.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,EFDATE,GRPNAME,CTFPLN)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHCTFGRP","*","",EFDATE.get()_","_GRPNAME.get()_","_CTFPLN.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHCTFGRP",EFDATE.get()_","_GRPNAME.get()_","_CTFPLN.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,EFDATE,GRPNAME,CTFPLN) //
	// Loop through dayend file DAYENDCTFGRP to determine if any
	// groups need to be deleted or plans added onto the account
 
	new cnt,EFDATE
	set EFDATE=%SystemDate
	type ResultSet rs=Db.select("CID","DEP","CTFGRP=:GRPNAME")
	if rs.isEmpty() quit
	while rs.next() do {
		set CID=rs.getCol(1)
		if CTFPLN="*" do DELPLAN
		if CTFPLN'="*" do ADDPLAN
		if $G(ER) do EXC quit 
		}
	quit


DELPLAN	// Delete group name from account

	new GRP
	set GRP=""
	do Db.update("DEP","CTFGRP=:GRP","CID=:CID")
	quit


ADDPLAN	// Add plan to account level

	if Db.isDefined("CTFPLNCID","CID,CTFPLN") quit
 
	//check initial query
	new query
	set query=Db.getOneRow("INTQUERY","UTBLCTFPLN","CTFPLN")
	if '$$CHECKCID^COMCALC() quit

	//check to see if end date on plan has past
	new ENDDATE
	set ENDDATE=Db.getOneRow("ENDDATE","UTBLCTFPLN","CTFPLN")
	if (ENDDATE'="")&(TJD>ENDDATE) quit
 
	do Db.insert("CTFPLNCID","CID,CTFPLN,ACTIVE",":CID,:CTFPLN,1")
	quit 


EXC	// Log error to DAYENDEXC
	// reset ER to prevent batch "catch" from rolling back transaction
	set ER=0
 
	if $G(ET)="" set ET=$G(RM)
	do LOG^UTLEXC($T(+0),"*",,$G(CID),$G(%ZTSEQ),$G(ET))
	kill ET,%ZTSEQ
	quit


 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,EFDATE,GRPNAME,CTFPLN
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set EFDATE=vRECORD.piece($C(9),1)
 set GRPNAME=vRECORD.piece($C(9),2)
 set CTFPLN=vRECORD.piece($C(9),3)
 do vPROC(EFDATE,GRPNAME,CTFPLN)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,EFDATE,GRPNAME,CTFPLN
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+29>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("EFDATE,GRPNAME,CTFPLN","DAYENDCTFGRP","DAYENDCTFGRP.EFDATE=:TJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	set %UserID="BATCH"

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
