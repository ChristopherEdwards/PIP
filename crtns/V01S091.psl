V01S091(Number %ProcessMode,RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF)   //PBS -  - SID= <ROLLOVR> Rollover Update 
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:34 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'ROLL.exists() set ROLL = Class.new("RecordROLLOVR")
  if 'DEP.exists() set DEP = Class.new("RecordDEP")
  if 'CIF.exists() set CIF = Class.new("RecordCIF")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="ROLLOVR",VPGM=$T(+0),VSNAME="Rollover Update "
 set VFSN("CIF")="zCIF",VFSN("DEP")="zDEP",VFSN("ROLLOVR")="zROLL"
 set vPSL=1
 set KEYS(1)=DEP.CID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.ROLL,.DEP,.CIF),VDA1(.ROLL,.DEP,.CIF),^DBSPNT() quit

 if '%ProcessMode do VNEW(.ROLL,.DEP,.CIF),VPR(.ROLL,.DEP,.CIF),VDA1(.ROLL,.DEP,.CIF)
 if %ProcessMode do VLOD(.ROLL,.DEP,.CIF) quit:$G(ER)  do VPR(.ROLL,.DEP,.CIF),VDA1(.ROLL,.DEP,.CIF)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.ROLL,.DEP,.CIF)
	quit


VNEW(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) // Initialize arrays if %O=0
 
 do VDEF(.ROLL,.DEP,.CIF)
 do VLOD(.ROLL,.DEP,.CIF)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) // Display screen prompts
 set VO="39||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,8,16,0,0,0,0,0,0,0)_"01T Account Number:"
 set VO(2)=$C(1,50,14,0,0,0,0,0,0,0)_"01T Account Type:"
 set VO(3)=$C(2,9,15,0,0,0,0,0,0,0)_"01T Customer Name:"
 set VO(4)=$C(3,9,15,0,0,0,0,0,0,0)_"01T       TIN/SIN:"
 set VO(5)=$C(3,44,20,0,0,0,0,0,0,0)_"01TRate Renewal Option:"
 set VO(6)=$C(4,40,24,0,0,0,0,0,0,0)_"01TEarnings Renewal Option:"
 set VO(7)=$C(5,15,8,2,0,0,0,0,0,0)_"01TCurrent "
 set VO(8)=$C(5,54,8,2,0,0,0,0,0,0)_"01TRenewal "
 set VO(9)=$C(6,10,14,0,0,0,0,0,0,0)_"01T Account Term:"
 set VO(10)=$C(6,51,13,0,0,0,0,0,0,0)_"01TAccount Term:"
 set VO(11)=$C(7,9,15,0,0,0,0,0,0,0)_"01T Maturity Date:"
 set VO(12)=$C(7,50,14,0,0,0,0,0,0,0)_"01TMaturity Date:"
 set VO(13)=$C(8,8,16,0,0,0,0,0,0,0)_"01T Reg D Category:"
 set VO(14)=$C(8,49,15,0,0,0,0,0,0,0)_"01TReg D Category:"
 set VO(15)=$C(9,4,20,0,0,0,0,0,0,0)_"01T Action at Maturity:"
 set VO(16)=$C(9,45,19,0,0,0,0,0,0,0)_"01TAction at Maturity:"
 set VO(17)=$C(10,1,23,0,0,0,0,0,0,0)_"01T Renewal Transfer Acct:"
 set VO(18)=$C(10,42,22,0,0,0,0,0,0,0)_"01TRenewal Transfer Acct:"
 set VO(19)=$C(12,9,1,0,0,0,0,0,0,0)_"01T "
 set VO(20)=$C(12,10,14,0,0,0,0,0,0,0)_"01TInterest Rate:"
 set VO(21)=$C(12,50,14,0,0,0,0,0,0,0)_"01TInterest Rate:"
 set VO(22)=$C(13,8,16,0,0,0,0,0,0,0)_"01T Accrual Method:"
 set VO(23)=$C(13,49,15,0,0,0,0,0,0,0)_"01TAccrual Method:"
 set VO(24)=$C(14,7,17,0,0,0,0,0,0,0)_"01T Interest Option:"
 set VO(25)=$C(14,48,16,0,0,0,0,0,0,0)_"01TInterest Option:"
 set VO(26)=$C(15,5,19,0,0,0,0,0,0,0)_"01T Recipient Account:"
 set VO(27)=$C(15,46,18,0,0,0,0,0,0,0)_"01TRecipient Account:"
 set VO(28)=$C(16,1,23,0,0,0,0,0,0,0)_"01T Interest Posting Freq:"
 set VO(29)=$C(16,42,22,0,0,0,0,0,0,0)_"01TInterest Posting Freq:"
 set VO(30)=$C(18,8,16,0,0,0,0,0,0,0)_"01T Penalty Method:"
 set VO(31)=$C(18,49,15,0,0,0,0,0,0,0)_"01TPenalty Method:"
 set VO(32)=$C(19,4,20,0,0,0,0,0,0,0)_"01T Penalty Assessment:"
 set VO(33)=$C(19,30,4,2,0,0,0,0,0,0)_"01Tdays"
 set VO(34)=$C(19,45,19,0,0,0,0,0,0,0)_"01TPenalty Assessment:"
 set VO(35)=$C(19,70,4,2,0,0,0,0,0,0)_"01Tdays"
 set VO(36)=$C(21,7,17,0,0,0,0,0,0,0)_"01T Minimum Balance:"
 set VO(37)=$C(21,48,16,0,0,0,0,0,0,0)_"01TMinimum Balance:"
 set VO(38)=$C(22,7,17,0,0,0,0,0,0,0)_"01T Minimum Deposit:"
 set VO(39)=$C(22,48,16,0,0,0,0,0,0,0)_"01TMinimum Deposit:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF)  // Display screen data
 new V
 //
 set VO="73|40|13|0"
 set VO(40)=$C(1,25,12,2,0,0,0,0,0,0)_"01N"_DEP.CID
 set VO(41)=$C(1,65,4,2,0,0,0,0,0,0)_"01N"_DEP.TYPE
 set VO(42)=$C(2,25,40,2,0,0,0,0,0,0)_"01T"_$E(CIF.NAM,1,40)
 set VO(43)=$C(3,25,11,2,0,0,0,0,0,0)_"01T"_$E(CIF.TAXID,1,11)
 //
 set VP("TAXID")="" do %EXT^VP01CIF(CIF,.VP) set VP=VP("TAXID") kill VP("TAXID") if VP set VPTBL(4)=VP set VO(43)=$E(VO(43),1,11)_(VP+1)_$E(VO(43),13,99)
 //
 set VO(44)=$C(3,65,1,2,0,0,0,0,0,0)_"00N"_DEP.RRO
 set VO(45)=$C(4,65,1,2,0,0,0,0,0,0)_"00N"_DEP.ERO
 set VO(46)=$C(6,25,8,2,0,0,0,0,0,0)_"01T"_$E(DEP.TRM,1,8)
 set VO(47)=$C(6,65,8,2,0,0,0,0,0,0)_"00T"_$E(ROLL.TRM,1,8)
 set VO(48)=$C(7,25,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(DEP.MDT)
 set VO(49)=$C(7,65,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(ROLL.MDT)
 set VO(50)=$C(8,25,2,2,0,0,0,0,0,0)_"01N"_DEP.REGD
 set VO(51)=$C(8,65,2,2,0,0,0,0,0,0)_"00N"_ROLL.REGD
 set VO(52)=$C(9,25,1,2,0,0,0,0,0,0)_"01N"_DEP.RENCD
 set VO(53)=$C(9,65,1,2,0,0,0,0,0,0)_"00N"_ROLL.RENCD
 set VO(54)=$C(10,25,12,2,0,0,0,0,0,0)_"01N"_DEP.RACN
 set VO(55)=$C(10,65,12,2,0,0,0,0,0,0)_"00N"_ROLL.RACN
 set V=$S(DEP.IRN="":"",1:$J(DEP.IRN,0,5)) set VO(56)=$C(12,25,8,2,0,0,0,0,0,0)_"01N"_$S(DEP.IRN="":"",1:$J(DEP.IRN,0,5))
 set V=$S(ROLL.IRN="":"",1:$J(ROLL.IRN,0,5)) set VO(57)=$C(12,65,8,2,0,0,0,0,0,0)_"00N"_$S(ROLL.IRN="":"",1:$J(ROLL.IRN,0,5))
 set VO(58)=$C(13,25,2,2,0,0,0,0,0,0)_"01T"_$E(DEP.IACM,1,2)
 set VO(59)=$C(13,65,2,2,0,0,0,0,0,0)_"00T"_$E(ROLL.IACM,1,2)
 set VO(60)=$C(14,25,1,2,0,0,0,0,0,0)_"01N"_DEP.IOPT
 set VO(61)=$C(14,65,1,2,0,0,0,0,0,0)_"00N"_ROLL.IOPT
 set VO(62)=$C(15,25,12,2,0,0,0,0,0,0)_"01N"_DEP.ITRF
 set VO(63)=$C(15,65,12,2,0,0,0,0,0,0)_"00N"_ROLL.ITRF
 set VO(64)=$C(16,25,12,2,0,0,0,0,0,0)_"01T"_$E(DEP.IPF,1,12)
 set VO(65)=$C(16,65,12,2,0,0,0,0,0,0)_"00F"_$E(ROLL.IPF,1,12)
 set VO(66)=$C(18,25,3,2,0,0,0,0,0,0)_"01N"_DEP.POPT
 set VO(67)=$C(18,65,3,2,0,0,0,0,0,0)_"00N"_ROLL.POPT
 set VO(68)=$C(19,25,4,2,0,0,0,0,0,0)_"01N"_DEP.PDYS
 set VO(69)=$C(19,65,4,2,0,0,0,0,0,0)_"00N"_ROLL.PDYS
 set V=$S(DEP.MINBAL="":"",1:$J(DEP.MINBAL,0,2)) set VO(70)=$C(21,25,12,2,0,0,0,0,0,0)_"01$"_$S(DEP.MINBAL="":"",1:$J(DEP.MINBAL,0,2))
 set V=$S(ROLL.MINBAL="":"",1:$J(ROLL.MINBAL,0,2)) set VO(71)=$C(21,65,12,2,0,0,0,0,0,0)_"00$"_$S(ROLL.MINBAL="":"",1:$J(ROLL.MINBAL,0,2))
 set V=$S(DEP.MINCR="":"",1:$J(DEP.MINCR,0,2)) set VO(72)=$C(22,25,12,2,0,0,0,0,0,0)_"01$"_$S(DEP.MINCR="":"",1:$J(DEP.MINCR,0,2))
 set V=$S(ROLL.MINCR="":"",1:$J(ROLL.MINCR,0,2)) set VO(73)=$C(22,65,12,2,0,0,0,0,0,0)_"00$"_$S(ROLL.MINCR="":"",1:$J(ROLL.MINCR,0,2))
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=34,VPT=1,VPB=22,PGM=$T(+0),DLIB="SYSDEV",DFID="ROLLOVR,DEP,CIF"
 set OLNTB=22065
 
 set VFSN("CIF")="zCIF",VFSN("DEP")="zDEP",VFSN("ROLLOVR")="zROLL"
 //
 // 
	
	
 set %TAB(1)=$C(0,24,12)_"21N12401|1|[DEP]CID"
 set %TAB(2)=$C(0,64,4)_"21N12401|1|[DEP]TYPE|[PRODCTL]"
 set %TAB(3)=$C(1,24,40)_"21T12401|1|[CIF]NAM"
 set %TAB(4)=$C(2,24,11)_"21T12401|1|[CIF]TAXID|||||||||20"
 set %TAB(5)=$C(2,64,1)_"00N12413|1|[DEP]RRO|[STBLRRO]"
 set %TAB(6)=$C(3,64,1)_"00N12412|1|[DEP]ERO|[STBLERO]"
 set %TAB(7)=$C(5,24,8)_"21T12401|1|[DEP]TRM"
 set %TAB(8)=$C(5,64,8)_"00T12401|1|[ROLLOVR]TRM|||do VP1^V01S091(.ROLL,.DEP,.CIF)"
 set %TAB(9)=$C(6,24,10)_"21D12402|1|[DEP]MDT"
 set %TAB(10)=$C(6,64,10)_"00D12402|1|[ROLLOVR]MDT|||do VP2^V01S091(.ROLL,.DEP,.CIF)"
 set %TAB(11)=$C(7,24,2)_"21N12409|1|[DEP]REGD|[STBLREGD1]"
 set %TAB(12)=$C(7,64,2)_"00N12409|1|[ROLLOVR]REGD|[STBLREGD1]"
 set %TAB(13)=$C(8,24,1)_"20N12406|1|[DEP]RENCD|[UTBLRENCD]"
 set %TAB(14)=$C(8,64,1)_"00N12406|1|[ROLLOVR]RENCD|[UTBLRENCD]||do VP3^V01S091(.ROLL,.DEP,.CIF)"
 set %TAB(15)=$C(9,24,12)_"20N12408|1|[DEP]RACN"
 set %TAB(16)=$C(9,64,12)_"00N12408|1|[ROLLOVR]RACN|||do VP4^V01S091(.ROLL,.DEP,.CIF)|do VP5^V01S091(.ROLL,.DEP,.CIF)"
 set %TAB(17)=$C(11,24,8)_"20N12401|1|[DEP]IRN|||||||5"
 set %TAB(18)=$C(11,64,8)_"00N12401|1|[ROLLOVR]IRN|||||||5"
 set %TAB(19)=$C(12,24,2)_"21T12405|1|[DEP]IACM|[UTBLIACM]"
 set %TAB(20)=$C(12,64,2)_"00T12405|1|[ROLLOVR]IACM|[STBLIACM]"
 set %TAB(21)=$C(13,24,1)_"21N12411|1|[DEP]IOPT|[STBLIOPT]"
 set %TAB(22)=$C(13,64,1)_"00N12411|1|[ROLLOVR]IOPT|[STBLIOPT]||do VP6^V01S091(.ROLL,.DEP,.CIF)"
 set %TAB(23)=$C(14,24,12)_"21N12412|1|[DEP]ITRF"
 set %TAB(24)=$C(14,64,12)_"00N12412|1|[ROLLOVR]ITRF|||do VP7^V01S091(.ROLL,.DEP,.CIF)|do VP8^V01S091(.ROLL,.DEP,.CIF)"
 set %TAB(25)=$C(15,24,12)_"21F12402|1|[DEP]IPF"
 set %TAB(26)=$C(15,64,12)_"00F12402|1|[ROLLOVR]IPF"
 set %TAB(27)=$C(17,24,3)_"21N12413|1|[DEP]POPT|[STBLPOPT]"
 set %TAB(28)=$C(17,64,3)_"00N12413|1|[ROLLOVR]POPT|[STBLPOPT]"
 set %TAB(29)=$C(18,24,4)_"21N12425|1|[DEP]PDYS"
 set %TAB(30)=$C(18,64,4)_"00N12425|1|[ROLLOVR]PDYS"
 set %TAB(31)=$C(20,24,12)_"20$12415|1|[DEP]MINBAL|||||||2"
 set %TAB(32)=$C(20,64,12)_"00$12415|1|[ROLLOVR]MINBAL|||||||2"
 set %TAB(33)=$C(21,24,12)_"20$12417|1|[DEP]MINCR|||||||2"
 set %TAB(34)=$C(21,64,12)_"00$12417|1|[ROLLOVR]MINCR|||||||2"
 
 set z=0 for  set z=$O(VPTBL(z)) quit:z=""  set %TAB(z)=$E(%TAB(z),1,3)_(VPTBL(z)+2)_$E(%TAB(z),5,999)
 do VTBL(.ROLL,.DEP,.CIF),VDEPRE(.ROLL,.DEP,.CIF) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDEPRE(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF)  // Data Entry Pre-processor
 
	if %ProcessMode>0 quit
 	
	if 'DEP.trate.isNull(),DEP.trexd>%SystemDate do DISPLAY^DBSMACRO("[DEP]IRN",DEP.trate,"0") quit
 	else  do DISPLAY^DBSMACRO("[DEP]IRN",DEP.iro,"0")
	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //
	type public Date MDT	
	type public Number NI
	type public String X
	type Number I
	
	if X.isNull() quit

	// First character of term may not be zero	
	if X.extract()=0 do Runtime.setErrMSG("DEP",1113) quit
	
 	// First character of term must be numeric"  
	if X.toNumber()=0 do Runtime.setErrMSG("DEP",1114) quit 
	
	// Term must contain character D, W, M, or Y 
	if X=X.toNumber() do Runtime.setErrMSG("DEP",2629) quit
 	
	// Lowercase characters not allowed 
	if X?.E1L.E do Runtime.setErrMSG("DEP",1662) quit
	
	for I=1:1:X.length() if '("DWMY"[X.extract(I)!(X.extract(I)?1N)) do Runtime.setErrMSG("DEP",2628) quit

	quit:'%NET

	if X="" do { quit
		set NI=NI+1
		do DELETE^DBSMACRO("[ROLLOVR]MDT","1","0")
		}

	do ROLL^UMDT(.DEP) quit:ER

	set ROLL.MDT=MDT
	do DEFAULT^DBSMACRO("[ROLLOVR]MDT",ROLL.MDT,"1","0","0")	

	quit

VP2(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //
	type public Boolean ER
 	type public String RM,X

 	if X do {
		set %JD=X.toDate("MM/DD/YEAR")
		if %JD>DEP.mdt=0 do Runtime.setErrMSG("DEP",1743,(DEP.mdt+1).toString("MM-DD-YEAR"))
		}

	quit
VP3(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //
	type public String X

 	if X=2 quit
 	
	do DELETE^DBSMACRO("ROLLOVR.RACN","1","0")
 	do GOTO^DBSMACRO("[ROLLOVR]IRN")

	quit
VP4(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //
	type public Boolean ER
	type public Number CID
	type public String X

	if %LOGID.get(),'%NET quit

	do { quit:ER.get()!(X.isNull())
		type String ZCLS,ZGRP
		set ZCLS="D"
		do CID^UACN1

		// Transfer to same account restricted
		if X=CID do Runtime.setErrMSG("DEP",2752) quit
	}

	// Account ~p1 closed
	if DEP.stat=4 do Runtime.setErrMSG("DEP",55) quit
	quit:ER 
VP5(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //
 	type public Number E5,NI
	type public String REQ()

 	kill REQ(NI)
 	
	if ROLL.rencd=2 set REQ(NI)="",E5=1

	quit
VP6(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //
	type public Number NI,X
	
	quit:'%NET
	quit:X=2

	do DELETE^DBSMACRO("[ROLLOVR]ITRF","1","0")
	set NI=NI+1

	quit

VP7(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //
	type public Boolean ER
	type public String ZGRP,%NET
	type public Number X,Y,AGE

	quit:'%NET
	kill ZGRP

	do CID^UACN1

	quit:ER  if 'DEP.IRA quit
	quit:(ROLL.IOPT'=2)!(X.isNull())

	set Y=DEP.ira quit:ER

	set AGE=$J((+%CurrentDate-CIF.DOB)/365.25,5,2)
	if (AGE<59.5),'Y do Runtime.setErrMSG("DEP",2747) quit
	if (AGE>70.5),Y do Runtime.setErrMSG("DEP",478) quit

	quit:ER!(X.isNull())
VP8(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF) //
	type public Number E5,NI,REQ()

	kill REQ(NI)

	if ROLL.iopt=2 do {         
		set REQ(NI)=""                
		set E5=1       
		}

	quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordROLLOVR ROLL
 type Public RecordDEP DEP
 type Public RecordCIF CIF
 do VPR(.ROLL,.DEP,.CIF)
 do VDA1(.ROLL,.DEP,.CIF)
 do ^DBSPNT()
 quit

VW(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF)
 do VDA1(.ROLL,.DEP,.CIF)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordROLLOVR ROLL,RecordDEP DEP,RecordCIF CIF)
 do VDA1(.ROLL,.DEP,.CIF)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordROLLOVR ROLL
 type Public RecordDEP DEP
 type Public RecordCIF CIF
 do VDA1(.ROLL,.DEP,.CIF)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordROLLOVR ROLL
 if sn="ROLLOVR" do vSET1(.ROLL,di,X)
 type Public RecordDEP DEP
 if sn="DEP" do vSET2(.DEP,di,X)
 type Public RecordCIF CIF
 if sn="CIF" do vSET3(.CIF,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordROLLOVR ROLL,di,X)
 do ROLL.setAuditFlag(1)
 set ROLL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordDEP DEP,di,X)
 do DEP.setAuditFlag(1)
 set DEP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET3(RecordCIF CIF,di,X)
 do CIF.setAuditFlag(1)
 set CIF.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordROLLOVR ROLL
 if fid="ROLLOVR" quit $$vREAD1(.ROLL,di)
 type Public RecordDEP DEP
 if fid="DEP" quit $$vREAD2(.DEP,di)
 type Public RecordCIF CIF
 if fid="CIF" quit $$vREAD3(.CIF,di)
 quit ""
vREAD1(RecordROLLOVR ROLL,di)
 quit ROLL.@di
vREAD2(RecordDEP DEP,di)
 quit DEP.@di
vREAD3(RecordCIF CIF,di)
 quit CIF.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
