STBLFRFL(RecordSTBLFORM stblform, String vpar, Boolean vparNorm) // STBLFORM - Form Record Information Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:24 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (9)              11/22/2003
	// Trigger Definition (1)                      10/05/2005
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = stblform.getMode()                    // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(stblform,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(stblform,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String RECTYPE = stblform.rectype
	type String CSEQ = stblform.cseq

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/TRIGBEF/" do VBI                            // Before insert triggers
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("RECTYPE").exists()!vx("CSEQ").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("STBLFORM",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("STBLFORM","RECTYPE = :stblform.rectype and CSEQ = :stblform.cseq") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String RECTYPE
	type public String CSEQ

	type RecordSTBLFORM stblform = Db.getRecord("STBLFORM","RECTYPE=:RECTYPE,CSEQ=:CSEQ")
	if (%ProcessMode = 2) do {
		do stblform.setMode(2)

		do STBLFRFL(stblform,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordSTBLFORM stblform

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("STBLFORM","RECTYPE = :stblform.rectype and CSEQ = :stblform.cseq") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		if %O = 0, vpar'["/NOLOG/" do ^DBSLOGIT(stblform,%O,.vxins())
		if %O = 1, vpar'["/NOLOG/" do ^DBSLOGIT(stblform,%O,.vx())

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(stblform))  S ^STBL("FORM",vobj(stblform,-3),vobj(stblform,-4))=vobj(stblform)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordSTBLFORM stblform

	if vpar'["/NOLOG/" do ^DBSLOGIT(stblform,3)

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	ZWI ^STBL("FORM",vobj(stblform,-3),vobj(stblform,-4))  // Delete Record
	quit


vreqn // Validate required data items

	type public RecordSTBLFORM stblform

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordSTBLFORM stblform

	if stblform.rectype.isNull() do vreqerr("RECTYPE") quit
	if stblform.cseq.isNull() do vreqerr("CSEQ") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("STBLFORM","MSG",1767,"STBLFORM."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VBI //
	type public Number ER = 0
	type public String vx(),RM
	do vbi1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vbi1 // Trigger BEFORE_INSERT - Before Insert 

	type public RecordSTBLFORM stblform
	/* 
	------------------------ Revision History -------------------------
	09/22/05 - PrakashJ - CR17232
		   Removed deprecated warning.

	05/04/04 - RussellDS - CR9172
		   Fix precedence warning.
	  	     
	09/06/00 - OFALTR - 40856
		   Change to PSL

	*/

	if stblform.di="" quit
	if stblform.len'="",stblform.typ'="",stblform.dec'="" quit
	new XDI,XFID,XLIB,XREC
	set XLIB="SYSDEV"
	set XREC=stblform.rectype
	set XDI=stblform.di
	type RecordSTBLFORM0 stblform0= Db.getRecord("STBLFORM0","XREC")
	set XFID=stblform0.fid
	type RecordDBTBL1D dbtbl1d = Db.getRecord("DBTBL1D","XLIB,XFID,XDI")
	
	if stblform.len="" set stblform.len=dbtbl1d.len
	if stblform.typ="" set stblform.typ=dbtbl1d.typ
	if stblform.dec="",(stblform.typ="$")!(stblform.typ="N") set stblform.dec=dbtbl1d.dec
	
	quit


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordSTBLFORM stblform

	set X = stblform.rectype if 'X.isNull(),'Db.isDefined("STBLFORM0","X") set vRM = $$^MSG(1485,X) do vdderr("RECTYPE", vRM) quit
	set X = stblform.cseq if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("CSEQ", vRM) quit
	set X = stblform.dec if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("DEC", vRM) quit
	if stblform.des.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DES", vRM) quit
	if stblform.di.length()>20 set vRM = $$^MSG(1076,20) do vdderr("DI", vRM) quit
	if stblform.diref.length()>25 set vRM = $$^MSG(1076,25) do vdderr("DIREF", vRM) quit
	set X = stblform.len if 'X.isNull(),X'?1.5N,X'?1"-"1.4N set vRM=$$^MSG(742,"N") do vdderr("LEN", vRM) quit
	set X = stblform.typ if 'X.isNull(),'Db.isDefined("DBCTLDVFM","X") set vRM = $$^MSG(1485,X) do vdderr("TYP", vRM) quit
	if stblform.varnam.length()>8 set vRM = $$^MSG(1076,8) do vdderr("VARNAM", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("STBLFORM","MSG",979,"STBLFORM."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordSTBLFORM stblform

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("RECTYPE").exists() set vux("RECTYPE") = vx("RECTYPE")
	if vx("CSEQ").exists() set vux("CSEQ") = vx("CSEQ")
	do vkey(1) set voldkey = stblform.rectype_","_stblform.cseq // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = stblform.rectype_","_stblform.cseq // Copy new keys into object
	type RecordSTBLFORM vnewrec = stblform.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("STBLFORM",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordSTBLFORM stblform

	if vux("RECTYPE").exists() set stblform.rectype = vux("RECTYPE").piece("|",i)
	if vux("CSEQ").exists() set stblform.cseq = vux("CSEQ").piece("|",i)
	quit
