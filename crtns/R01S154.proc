R01S154	// SCA087 - Collateral Summary by Group/Type
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:43 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DRCN,JOB
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA087"
	set RN="Collateral Summary by Group/Type"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DRCN,JOB
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %NOCLOSE,%NOOPEN,%TIM,CONAM,DONE,GRP,RID,RN,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86
	type String vc87,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA087",RN="Collateral Summary by Group/Type"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA087","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="LNDELT2.JOB=:JOB"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Collateral Summary by Group/Type"
		set VBNRINFO("PGM")="R01S154"
		set VBNRINFO("RID")="SCA087"
		set VBNRINFO("TABLES")="LNDELT2,LNDELT1"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNDELT2]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNDELT2]5"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNDELT2]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNDELT2]TYPE"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNDELT2.JOB,LNDELT2.GRP,LNDELT2.TYPE,LNDELT2.TB1,LNDELT2.TB2,LNDELT2.TB3,LNDELT2.TB4,LNDELT2.TN1,LNDELT2.TN2,LNDELT2.TN3,LNDELT2.TN4,LNDELT2.TB5,LNDELT2.TB6,LNDELT2.TB7,LNDELT2.TB8,LNDELT2.TN5,LNDELT2.TN6,LNDELT2.TN7,LNDELT2.TN8,LNDELT2.TB9,LNDELT2.TB10,LNDELT2.TB11,LNDELT2.TB12,LNDELT2.TN9,LNDELT2.TN10,LNDELT2.TN11,LNDELT2.TN12,LNDELT2.TB13,LNDELT2.TB14,LNDELT2.TB15,LNDELT2.TB16,LNDELT2.TN13,LNDELT2.TN14,LNDELT2.TN15,LNDELT2.TN16,LNDELT2.TB17,LNDELT2.TB18,LNDELT2.TB19,LNDELT2.TB20,LNDELT2.TN17,LNDELT2.TN18,LNDELT2.TN19,LNDELT2.TN20,LNDELT2.TBAL,LNDELT2.TNUM,LNDELT1.TB1,LNDELT1.TB2,LNDELT1.TB3,LNDELT1.TB4,LNDELT1.TN1,LNDELT1.TN2,LNDELT1.TN3,LNDELT1.TN4,LNDELT1.TB5,LNDELT1.TB6,LNDELT1.TB7,LNDELT1.TB8,LNDELT1.TN5,LNDELT1.TN6,LNDELT1.TN7,LNDELT1.TN8,LNDELT1.TB9,LNDELT1.TB10,LNDELT1.TB11,LNDELT1.TB12,LNDELT1.TN9,LNDELT1.TN10,LNDELT1.TN11,LNDELT1.TN12,LNDELT1.TB13,LNDELT1.TB14,LNDELT1.TB15,LNDELT1.TB16,LNDELT1.TN13,LNDELT1.TN14,LNDELT1.TN15,LNDELT1.TN16,LNDELT1.TB17,LNDELT1.TB18,LNDELT1.TB19,LNDELT1.TB20,LNDELT1.TN17,LNDELT1.TN18,LNDELT1.TN19,LNDELT1.TN20,LNDELT1.TBAL,LNDELT1.TNUM","LNDELT2,LNDELT1","LNDELT2.JOB=:JOB","LNDELT2.JOB,LNDELT2.GRP,LNDELT2.TYPE","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87
	set vc1=V.piece($C(9),1)			// LNDELT2.JOB
	set vc2=V.piece($C(9),2)			// LNDELT2.GRP
	set vc3=V.piece($C(9),3)			// LNDELT2.TYPE
	set vc4=V.piece($C(9),4)			// LNDELT2.TB1
	set vc5=V.piece($C(9),5)			// LNDELT2.TB2
	set vc6=V.piece($C(9),6)			// LNDELT2.TB3
	set vc7=V.piece($C(9),7)			// LNDELT2.TB4
	set vc8=V.piece($C(9),8)			// LNDELT2.TN1
	set vc9=V.piece($C(9),9)			// LNDELT2.TN2
	set vc10=V.piece($C(9),10)			// LNDELT2.TN3
	set vc11=V.piece($C(9),11)			// LNDELT2.TN4
	set vc12=V.piece($C(9),12)			// LNDELT2.TB5
	set vc13=V.piece($C(9),13)			// LNDELT2.TB6
	set vc14=V.piece($C(9),14)			// LNDELT2.TB7
	set vc15=V.piece($C(9),15)			// LNDELT2.TB8
	set vc16=V.piece($C(9),16)			// LNDELT2.TN5
	set vc17=V.piece($C(9),17)			// LNDELT2.TN6
	set vc18=V.piece($C(9),18)			// LNDELT2.TN7
	set vc19=V.piece($C(9),19)			// LNDELT2.TN8
	set vc20=V.piece($C(9),20)			// LNDELT2.TB9
	set vc21=V.piece($C(9),21)			// LNDELT2.TB10
	set vc22=V.piece($C(9),22)			// LNDELT2.TB11
	set vc23=V.piece($C(9),23)			// LNDELT2.TB12
	set vc24=V.piece($C(9),24)			// LNDELT2.TN9
	set vc25=V.piece($C(9),25)			// LNDELT2.TN10
	set vc26=V.piece($C(9),26)			// LNDELT2.TN11
	set vc27=V.piece($C(9),27)			// LNDELT2.TN12
	set vc28=V.piece($C(9),28)			// LNDELT2.TB13
	set vc29=V.piece($C(9),29)			// LNDELT2.TB14
	set vc30=V.piece($C(9),30)			// LNDELT2.TB15
	set vc31=V.piece($C(9),31)			// LNDELT2.TB16
	set vc32=V.piece($C(9),32)			// LNDELT2.TN13
	set vc33=V.piece($C(9),33)			// LNDELT2.TN14
	set vc34=V.piece($C(9),34)			// LNDELT2.TN15
	set vc35=V.piece($C(9),35)			// LNDELT2.TN16
	set vc36=V.piece($C(9),36)			// LNDELT2.TB17
	set vc37=V.piece($C(9),37)			// LNDELT2.TB18
	set vc38=V.piece($C(9),38)			// LNDELT2.TB19
	set vc39=V.piece($C(9),39)			// LNDELT2.TB20
	set vc40=V.piece($C(9),40)			// LNDELT2.TN17
	set vc41=V.piece($C(9),41)			// LNDELT2.TN18
	set vc42=V.piece($C(9),42)			// LNDELT2.TN19
	set vc43=V.piece($C(9),43)			// LNDELT2.TN20
	set vc44=V.piece($C(9),44)			// LNDELT2.TBAL
	set vc45=V.piece($C(9),45)			// LNDELT2.TNUM
	set vc46=V.piece($C(9),46)			// LNDELT1.TB1
	set vc47=V.piece($C(9),47)			// LNDELT1.TB2
	set vc48=V.piece($C(9),48)			// LNDELT1.TB3
	set vc49=V.piece($C(9),49)			// LNDELT1.TB4
	set vc50=V.piece($C(9),50)			// LNDELT1.TN1
	set vc51=V.piece($C(9),51)			// LNDELT1.TN2
	set vc52=V.piece($C(9),52)			// LNDELT1.TN3
	set vc53=V.piece($C(9),53)			// LNDELT1.TN4
	set vc54=V.piece($C(9),54)			// LNDELT1.TB5
	set vc55=V.piece($C(9),55)			// LNDELT1.TB6
	set vc56=V.piece($C(9),56)			// LNDELT1.TB7
	set vc57=V.piece($C(9),57)			// LNDELT1.TB8
	set vc58=V.piece($C(9),58)			// LNDELT1.TN5
	set vc59=V.piece($C(9),59)			// LNDELT1.TN6
	set vc60=V.piece($C(9),60)			// LNDELT1.TN7
	set vc61=V.piece($C(9),61)			// LNDELT1.TN8
	set vc62=V.piece($C(9),62)			// LNDELT1.TB9
	set vc63=V.piece($C(9),63)			// LNDELT1.TB10
	set vc64=V.piece($C(9),64)			// LNDELT1.TB11
	set vc65=V.piece($C(9),65)			// LNDELT1.TB12
	set vc66=V.piece($C(9),66)			// LNDELT1.TN9
	set vc67=V.piece($C(9),67)			// LNDELT1.TN10
	set vc68=V.piece($C(9),68)			// LNDELT1.TN11
	set vc69=V.piece($C(9),69)			// LNDELT1.TN12
	set vc70=V.piece($C(9),70)			// LNDELT1.TB13
	set vc71=V.piece($C(9),71)			// LNDELT1.TB14
	set vc72=V.piece($C(9),72)			// LNDELT1.TB15
	set vc73=V.piece($C(9),73)			// LNDELT1.TB16
	set vc74=V.piece($C(9),74)			// LNDELT1.TN13
	set vc75=V.piece($C(9),75)			// LNDELT1.TN14
	set vc76=V.piece($C(9),76)			// LNDELT1.TN15
	set vc77=V.piece($C(9),77)			// LNDELT1.TN16
	set vc78=V.piece($C(9),78)			// LNDELT1.TB17
	set vc79=V.piece($C(9),79)			// LNDELT1.TB18
	set vc80=V.piece($C(9),80)			// LNDELT1.TB19
	set vc81=V.piece($C(9),81)			// LNDELT1.TB20
	set vc82=V.piece($C(9),82)			// LNDELT1.TN17
	set vc83=V.piece($C(9),83)			// LNDELT1.TN18
	set vc84=V.piece($C(9),84)			// LNDELT1.TN19
	set vc85=V.piece($C(9),85)			// LNDELT1.TN20
	set vc86=V.piece($C(9),86)			// LNDELT1.TBAL
	set vc87=V.piece($C(9),87)			// LNDELT1.TNUM
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	// Converted to PSL by CNV70RW
	type Public String %NOCLOSE,%NOOPEN,DONE

	set DONE=0 set (%NOOPEN,%NOCLOSE)=""
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=DRCN,JOB
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %NOCLOSE,%NOOPEN,%TIM,DONE,DRCN,GRP,IOSL,JOB,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83
	type public String vc84,vc85,vc86,vc87,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+11>IOSL do VHDG0 quit:VFMQ

	set VL="                               "_$J(DRCN(1),23)
	set VL=VL_$J("",57-VL.length())_$J(DRCN(2),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(3),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(4),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="TYPE "_vc3_" TOTAL:"
	set VL=VL_$J("",21-VL.length())_$J(vc4,22)
	set VL=VL_$J("",44-VL.length())_$J(vc5,25)
	set VL=VL_$J("",70-VL.length())_$J(vc6,25)
	set VL=VL_$J("",96-VL.length())_$J(vc7,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc8,5)
	set VL=VL_$J("",44-VL.length())_$J(vc9,25)
	set VL=VL_$J("",70-VL.length())_$J(vc10,25)
	set VL=VL_$J("",96-VL.length())_$J(vc11,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$J(DRCN(5),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(6),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(7),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(8),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc12,12)
	set VL=VL_$J("",44-VL.length())_$J(vc13,25)
	set VL=VL_$J("",70-VL.length())_$J(vc14,25)
	set VL=VL_$J("",96-VL.length())_$J(vc15,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc16,5)
	set VL=VL_$J("",44-VL.length())_$J(vc17,25)
	set VL=VL_$J("",70-VL.length())_$J(vc18,25)
	set VL=VL_$J("",96-VL.length())_$J(vc19,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$J(DRCN(9),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(10),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(11),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(12),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc20,12)
	set VL=VL_$J("",44-VL.length())_$J(vc21,25)
	set VL=VL_$J("",70-VL.length())_$J(vc22,25)
	set VL=VL_$J("",96-VL.length())_$J(vc23,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc24,5)
	set VL=VL_$J("",44-VL.length())_$J(vc25,25)
	set VL=VL_$J("",70-VL.length())_$J(vc26,25)
	set VL=VL_$J("",96-VL.length())_$J(vc27,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$J(DRCN(13),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(14),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(15),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(16),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc28,12)
	set VL=VL_$J("",44-VL.length())_$J(vc29,25)
	set VL=VL_$J("",70-VL.length())_$J(vc30,25)
	set VL=VL_$J("",96-VL.length())_$J(vc31,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc32,5)
	set VL=VL_$J("",44-VL.length())_$J(vc33,25)
	set VL=VL_$J("",70-VL.length())_$J(vc34,25)
	set VL=VL_$J("",96-VL.length())_$J(vc35,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$J(DRCN(17),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(18),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(19),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(20),23)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc36,12)
	set VL=VL_$J("",44-VL.length())_$J(vc37,25)
	set VL=VL_$J("",70-VL.length())_$J(vc38,25)
	set VL=VL_$J("",96-VL.length())_$J(vc39,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc40,5)
	set VL=VL_$J("",44-VL.length())_$J(vc41,25)
	set VL=VL_$J("",70-VL.length())_$J(vc42,25)
	set VL=VL_$J("",96-VL.length())_$J(vc43,25)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	set VL="                                                                                                             "_"COLLATERAL TOTAL"
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                             "_$J(vc44,12)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                                    "_$J(vc45,5)
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	if VLC+11>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %NOCLOSE,%NOOPEN,%TIM,DONE,DRCN,GRP,I,IOSL,JOB,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83
	type public String vc84,vc85,vc86,vc87,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+19>IOSL do VHDG0 quit:VFMQ

	do VP5 quit:VFMQ!verror.get()  set V=$J(DRCN(1),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(2),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(3),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(4),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="GROUP "_vc2_" TOTAL:"
	set VL=VL_$J("",31-VL.length())_$J(vc46,12)
	set VL=VL_$J("",57-VL.length())_$J(vc47,12)
	set VL=VL_$J("",83-VL.length())_$J(vc48,12)
	set VL=VL_$J("",109-VL.length())_$J(vc49,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc50,5)
	set VL=VL_$J("",64-VL.length())_$J(vc51,5)
	set VL=VL_$J("",90-VL.length())_$J(vc52,5)
	set VL=VL_$J("",116-VL.length())_$J(vc53,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP6 quit:VFMQ!verror.get()  set V=$J(DRCN(5),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(6),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(7),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(8),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc54,12)
	set VL=VL_$J("",57-VL.length())_$J(vc55,12)
	set VL=VL_$J("",83-VL.length())_$J(vc56,12)
	set VL=VL_$J("",109-VL.length())_$J(vc57,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc58,5)
	set VL=VL_$J("",64-VL.length())_$J(vc59,5)
	set VL=VL_$J("",90-VL.length())_$J(vc60,5)
	set VL=VL_$J("",116-VL.length())_$J(vc61,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP7 quit:VFMQ!verror.get()  set V=$J(DRCN(9),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(10),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(11),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(12),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc62,12)
	set VL=VL_$J("",57-VL.length())_$J(vc63,12)
	set VL=VL_$J("",83-VL.length())_$J(vc64,12)
	set VL=VL_$J("",109-VL.length())_$J(vc65,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc66,5)
	set VL=VL_$J("",64-VL.length())_$J(vc67,5)
	set VL=VL_$J("",90-VL.length())_$J(vc68,5)
	set VL=VL_$J("",116-VL.length())_$J(vc69,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP8 quit:VFMQ!verror.get()  set V=$J(DRCN(13),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(14),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(15),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(16),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc70,12)
	set VL=VL_$J("",57-VL.length())_$J(vc71,12)
	set VL=VL_$J("",83-VL.length())_$J(vc72,12)
	set VL=VL_$J("",109-VL.length())_$J(vc73,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc74,5)
	set VL=VL_$J("",64-VL.length())_$J(vc75,5)
	set VL=VL_$J("",90-VL.length())_$J(vc76,5)
	set VL=VL_$J("",116-VL.length())_$J(vc77,5)
	if 'VL.translate(" ").isNull() do VOM
	do VP9 quit:VFMQ!verror.get()  set V=$J(DRCN(17),23) set VL="                               "_V
	set VL=VL_$J("",57-VL.length())_$J(DRCN(18),23)
	set VL=VL_$J("",83-VL.length())_$J(DRCN(19),23)
	set VL=VL_$J("",109-VL.length())_$J(DRCN(20),23)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                               "_$J(vc78,12)
	set VL=VL_$J("",57-VL.length())_$J(vc79,12)
	set VL=VL_$J("",83-VL.length())_$J(vc80,12)
	set VL=VL_$J("",109-VL.length())_$J(vc81,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$J(vc82,5)
	set VL=VL_$J("",64-VL.length())_$J(vc83,5)
	set VL=VL_$J("",90-VL.length())_$J(vc84,5)
	set VL=VL_$J("",116-VL.length())_$J(vc85,5)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="                                                                                                             "_"COLLATERAL TOTAL"
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                             "_$J(vc86,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                                    "_$J(vc87,5)
	if 'VL.translate(" ").isNull() do VOM
	set V="" do VP10 quit:VFMQ!verror.get()  set VL=V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%NOCLOSE,%NOOPEN,%TIM,CONAM,DONE,DRCN,GRP,JOB,RID,RN,TYPE,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc9
	type public String vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA087)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="                                    "_"BALANCE                   BALANCE                   BALANCE                  BALANCE    "
	do VOM
	set VL="                                     "_"NUMBER                    NUMBER                    NUMBER                   NUMBER    "
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DRCN(5)

	type Public String DRCN,VL

	if $L(DRCN(5)) set VL="" do VOM
	quit

VP2	// Column pre-processor - Variable: DRCN(9)

	type Public String DRCN,VL

	if $L(DRCN(9)) set VL="" do VOM
	quit

VP3	// Column pre-processor - Variable: DRCN(13)

	type Public String DRCN,VL

	if $L(DRCN(13)) set VL="" do VOM
	quit

VP4	// Column pre-processor - Variable: DRCN(17)

	type Public String DRCN,VL

	if $L(DRCN(17)) set VL="" do VOM
	quit

VP5	// Column pre-processor - Variable: DRCN(1)

	type Public String DRCN,VL

	if $L(DRCN(1)) set VL="" do VOM
	quit

VP6	// Column pre-processor - Variable: DRCN(5)

	type Public String DRCN,VL

	if $L(DRCN(5)) set VL="" do VOM
	quit

VP7	// Column pre-processor - Variable: DRCN(9)

	type Public String DRCN,VL

	if $L(DRCN(9)) set VL="" do VOM
	quit

VP8	// Column pre-processor - Variable: DRCN(13)

	type Public String DRCN,VL

	if $L(DRCN(13)) set VL="" do VOM
	quit

VP9	// Column pre-processor - Variable: DRCN(17)

	type Public String DRCN,VL

	if $L(DRCN(17)) set VL="" do VOM
	quit

VP10	// Column post-processor -

	do VOM
	quit
