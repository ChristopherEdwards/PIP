MRPC145(String RETURN, Number VERSN, Date TPDATE, Number UID, Number BRCD, String CRCD, Number CTL)
 /*
	Procedure ID: MRPC145
	ORIG: appleyam - 10/18/2006
	DESC: Teller and Branch Proof RPC
 
         ARGUMENTS:
                . RETURN        Return value            /TYP=T/REQ/MECH=REFNAM:W
                . VERSN         Version number          /TYP=N/REQ/MECH=VAL
                . TPDATE        System Blancing Date    /TYP=D/REQ/MECH=VAL
                . UID           User ID                 /TYP=T/NOREQ/MECH=VAL
                . BRCD          Branch Code             /TYP=N/NOREQ/MECH=VAL
                . CRCD          Currency Code           /TYP=T/NOREQ/MECH=VAL
		. CTL		Branch Proof Flag	/TYP=B/REQ/MECH=VAL
 					0 = Teller Proof Processing
 					1 = Branch Proof Processing
 					2 = Cash Reconciliation
 
         RETURNS:
                . $$     Error Message                  /TYP=T
                  Null= No Error
 
                . RETURN                                /TYP=T

                  RETURN
                        Columns in each record are tab-delimited ($C(9))
                        Records are delimted by CRLF ($C(13,10))
 		CTL = 0, 1
                  - CRCD        Currency Code
                  - STARTCSH    Starting Cash
                  - CRTOT       Total Credits
                  - DRTOT       Total Debits
                  - ENDCSH      Ending Cash Total

		CTL = 2
		  - CRCD	Currency Code
		  - UID		User ID
		  - PRICASH 	Prior Day's Cash
		  - PRIPMCI	Prior Day's PM'd Cash In
		  - PRIPMCO	Prior Day's PM'd Cash Out
		  - TOTCICO	Prior Day's Cash Total
		  - CI		Today's Cash In
		  - CO		Today's Cash Out
		  - TLRDIFF	Teller Over/Short
		  - TLRCASH	Today's Teller Cash
		  - TODYPMCI	Today's PM'd Cash In
		  - TODYPMCO	Today's PM'd Cash Out
		  - TODYTOT	Today's Cash Total
		  
         EXAMPLE:
 
                set UID=1
                set BRCD=0
                set CRCD="USD"
                set TPDATE=^CUVAR(2)
		set BRPROOF=0
                set X=$$^MRPC145(.R,1,TPDATE,UID,BRCD,CRCD,CTL)
 
	---- Comments --------------------------------------------------------
 
	---- Revision History ------------------------------------------------

	12/26/2006 - chhabris - CR25140
		     Created the procedure in Profile04 view. Retrofit from
		     ICGWeb01_Dev_Profile view. The following CR's in ICGWeb01
		     view are also covered while creating the procedure;
		     CR23686, CR24222 and CR24357.
	----------------------------------------------------------------------

 */

        type public Boolean ER
        type public String RM
 
        type Boolean ERV
        type String ERRMSG
 
        set (ER,ERV)=0
        set (ERRMSG,RM)=""
        set RETURN=""
 
        do PROC(VERSN.get(),TPDATE.get(),UID.get(),BRCD.get(),CRCD.get(),CTL.get())
 
        if ERV set ER=1,RM=ERRMSG
 
        if ER quit $$ERRMSG^PBSUTL(RM)
 
        // Build return value
        set RETURN=$$V2LV^MSG(.RETURN)
 
        quit ""

public PROC(Number VERSN, Date TPDATE, Number UID, String BRCD, String CRCD, Number CTL)
 
 /*         ARGUMENTS:
                . RETURN        Return value            /TYP=T/REQ/MECH=REFNAM:W
                . VERSN         Version number          /TYP=N/REQ/MECH=VAL
                . TPDAT         System Blancing Date    /TYP=D/REQ/MECH=VAL
                . UID           User ID                 /TYP=T/NOREQ/MECH=VAL
                . BRCD          Branch Code             /TYP=T/REQ/MECH=VAL
                . CRCD          Currency Code           /TYP=T/NOREQ/MECH=VAL
		. CTL		Branch Proof Flag	/TYP=B/REQ/MECH=VAL
					0 = Teller Proof Processing
 					1 = Branch Proof Processing
         RETURNS 
                . RETURN        Return value            /TYP=T/REQ/MECH=REFNAM:W
 
 */
	type public String ERRMSG,ET,FROM,RETURN,RM
	type public Number ERV
	type Number START
 
	catch error {
		set ET=error.type
		set RM=error.description
		set FROM=error.thrownAt
		if error.type["%GTM-" do ZE^UTLERR

		// Set error flag
		set ERV=1
		set ERRMSG=RM
	}

	type public Boolean ER,FLG
	type public String CRLF,TMP,X,%
	type Date A,PRIDATE
	type Number CR,DR,END,ENDCSH,STARTCSH,SUB
	type String RET

	set (RET,RETURN)=""
	set %=$C(9)
	set CRLF=$C(10,13)
	set END=0
	set START=0
 
	// Version number of client message is not compatible with server
	if VERSN'=1 set RM=$$^MSG(2951) throw Class.new("Error",","_RM)
 
	// 1308 - Invalid date ~p1
	if $$^SCAJD(TPDATE)=-1 set RM=$$^MSG(1308,TPDATE) throw Class.new("Error",","_RM)
 
	// Teller Proof
	if CTL=0 do {
		//1504- Invalid user ID
		if UID.isNull() set RM=$$^MSG(1504) throw Class.new("Error",","_RM)

 		type ResultSet rs1=Db.select("UID","SCAU","UID=:UID")
 		if rs1.isEmpty() set RM=$$^MSG(1504) throw Class.new("Error",","_RM)
 
		if CRCD'="*" do {
			set RET=$$DTL^RTPPRF(BRCD,UID,TPDATE,CRCD)
			set RETURN=CRCD_%_RET
			}
		else  do {
			set CRCD=""
			type ResultSet rs
			set rs=Db.select("CRCD","UTBLCRCDX")
			while rs.next() do {
				set CRCD=rs.getCol("CRCD")
				set RET=$$DTL^RTPPRF(BRCD,UID,TPDATE,CRCD)
				set RETURN=RETURN_CRCD_%_RET_CRLF
				}
			}
		}

	// Branch Proof
	else  if CTL=1  do {
		set (CRCD,UID)=""
		type ResultSet rs
		set rs=Db.select("CRCD","UTBLCRCDX")
		while rs.next() do {
			set CRCD=rs.getCol("CRCD")
			set RET=""
			set (DR,CR,START,END,SUB)=0
			type ResultSet rs2
			set rs2=Db.select("UID","TPCTRL","BRCD=:BRCD AND TPD=:TPDATE")
			while rs2.next() do {
				set UID=rs2.getCol("UID")
				set TMP=$$DTL^RTPPRF(BRCD,UID,TPDATE,CRCD)
				set DR=DR+TMP.piece($C(9),1)
				set CR=CR+TMP.piece($C(9),2)
				set START=START+TMP.piece($C(9),3)
				set END=END+TMP.piece($C(9),4)
				set SUB=SUB+TMP.piece($C(9),5)
			}
			set RET=CRCD_%_DR_%_CR_%_START_%_END_%_SUB
			set RETURN=RETURN_RET_CRLF
		}

		// strip last CRLF
		set RETURN=RETURN.extract(1,(RETURN.length()-2))

	}
	else  if CTL=2 do {
		
		set PRIDATE=TPDATE-1
		
		if 'BRCD.isNull() set RETURN = $$RECON(TPDATE, UID, BRCD)
		else  do {
			set BRCD = ""
			type ResultSet rsbrcd
			set rsbrcd=Db.select("BRCD","UTBLBRCD")
			while rsbrcd.next() do {
				set BRCD=rsbrcd.getCol("BRCD")
				set RETURN = $$RECON(TPDATE, UID, BRCD)
				} 
		
			}
		
		// Strip last CRLF
		if RETURN.get() set RETURN=RETURN.extract(1,(RETURN.length()-2))
		
	}
	quit
	
private RECON(Date TPDATE, Number UID, Number BRCD)
	//
	type public String %,CRLF,RETURN
	type public Date PRIDATE
	type String CRCD,RET,X
	type Number CI,CO,FLG,PRICASH,PRIPMCI,PRIPMCO,TOTCICO,TODYPMCI,TODYPMCO,TODYTOT,TLRCASH,TLRDIFF
		
	type ResultSet rs3
	set rs3=Db.select("CRCD","UTBLCRCDX")
	while rs3.next() do {
		set CRCD=rs3.getCol("CRCD")
		set RET=""
		type ResultSet rs4
		set rs4=Db.select("UID","TPCTRL","BRCD=:BRCD AND TPD=:TPDATE")
		while rs4.next() do {
			set UID=rs4.getCol("UID")
			set FLG=0
			set (PRICASH,PRIPMCI,PRIPMCO,TOTCICO,CI,CO,TODYPMCI,TODYPMCO,TLRCASH,TLRDIFF,TODYTOT)=0

			type RecordTPCASH tpcash1
			type RecordTPCASH tpcash2
			
			type ResultSet rs5=Db.select("CRCD","TPCASH","BRCD=:BRCD and UID=:UID and TPD=:PRIDATE and CRCD=:CRCD")
			if rs5.isEmpty() set PRICASH=0

			else  do {
				set tpcash1=Db.getRecord("TPCASH","BRCD=:BRCD,UID=:UID,TPD=:PRIDATE,CRCD=:CRCD")
				set PRICASH=tpcash1.ectot
				}

			type ResultSet rs6=Db.select("CRCD","TPCASH","BRCD=:BRCD and UID=:UID and TPD=:TPDATE and CRCD=:CRCD")
			if rs6.isEmpty() set TLRCASH=PRICASH
			else  do {
				set tpcash2=Db.getRecord("TPCASH","BRCD=:BRCD,UID=:UID,TPD=:TPDATE,CRCD=:CRCD")
				set TLRCASH=tpcash2.ectot
				}

			set X=$$CASH^TTXSUM(BRCD,UID,TPDATE,CRCD)
			if X.piece($C(124),1)'="" set CI=X.piece($C(124),1)			// Today's Total Cash In
			if X.piece($C(124),2)'="" set CO=X.piece($C(124),2)			// Today's Total Cash Out
			if X.piece($C(124),3)'="" set PRIPMCI=X.piece($C(124),3)		// Cash In from prior day(s)
			if X.piece($C(124),4)'="" set PRIPMCO=X.piece($C(124),4)		// Cash Out from prior day(s)
			if X.piece($C(124),5)'="" set TODYPMCI=X.piece($C(124),5)		// Today's PMed Cash In
			if X.piece($C(124),6)'="" set TODYPMCO=X.piece($C(124),6)		// Today's PMed Cash Out
 
			set CI=CI-PRIPMCI							// Today's Non-PMed Cash In
			set CO=CO-PRIPMCO							// Today's Non-PMed Cash Out

			set TOTCICO=PRICASH+PRIPMCI-PRIPMCO
			set TLRDIFF=TLRCASH-(TOTCICO+CI-CO)
			set TODYTOT=TOTCICO+CI-CO+TODYPMCI-TODYPMCO
		
			if PRICASH=0,PRIPMCI=0,PRIPMCO=0,TOTCICO=0,CI=0,CO=0,TLRDIFF=0,TLRCASH=0,TODYPMCI=0,TODYPMCO=0,TODYTOT=0 set FLG=1

			if 'FLG do {
				set RET=BRCD_%_CRCD_%_UID_%_PRICASH_%_PRIPMCI_%_PRIPMCO_%_TOTCICO_%_CI_%_CO_%_TLRDIFF_%_TLRCASH_%_TODYPMCI_%_TODYPMCO_%_TODYTOT
				set RETURN = RETURN_RET_CRLF
				}
			}
		}

	quit RETURN	
 #OPTION ResultClass ON
Public String vSIG()	quit "60674^54215^Sanjay Chhabria^8301"	// Signature - LTD^TIME^USER^SIZE
