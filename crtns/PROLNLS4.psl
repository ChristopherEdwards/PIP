PROLNLS4		/*
	---- Revision History ------------------------------------------------
	11/24/05 - chhabris - CR18008
		   Replaced depricated methods. Also, removed the revision 
		   history prior to 2004.

	----------------------------------------------------------------------
	*/

	quit


Public PP(XCID,TPP)	// Post processor to screen account number prompts
	
	/* 
	X Account number
	TPP Percentage associated with this sale.  (Necessary
	if creation of pool and addition of accounts is
	combined into one GUI function.)
	*/
	
	type public Boolean ER
	new ACC,DATA,DATA1,SQLCNT,LSA,TRB,UDBAL,XINCD,XPL,XPSEQ,BAL,XSEQ
	
	if XCID="" quit 
	set ER=""
	type RecordLN ln=Db.getRecord("LN","CID=:XCID",1)
	
	if ln.getMode() do {
		if (ln.cid).isNull() set ER=1 do Runtime.setErrMSG("LNLS4",1259,XCID) quit
		}
		
	if XCID'=+XCID quit 
	
	// Invalid account number
	type RecordLN ln1=Db.getRecord("LN","CID=:XCID",1)
	
	if ln.getMode() do {
		if XCID?1N.N,(ln1.cid.isNull()) set ER=1 do Runtime.setErrSTBLER("LNLS4","LNPRT4A2") quit 
		}
	if OPT.exists(),OPT="DEL" do PPDEL quit:ER
	
	/* 
	Test for whether or not account currently resides in designated
	loan sale file.  Test is only necessary when INCD and PL are
	available.  (They will not be available when called from GUI
	function though MRPC060.)
	*/
	
	if INCD.get()'="",PL.get()'="" do { quit:ER 
		type RecordLNLS4 lnls4=Db.getRecord("LNLS4","INCD=:INCD,PL=:PL,GRP=:GRP,CID=:XCID",1)
		if lnls4.getMode() set ER=1 do Runtime.setErrSTBLER("LNLS4","LNPRT4C")
		}
		
	type RecordLN ln2=Db.getRecord("LN","CID=:XCID",1)
	if ln2.getMode() do {
		set BAL=ln2.bal
		set UDBAL=ln2.udbal
		set TRLF=ln2.tflg
		}
	else  set (BAL,UDBAL,TRLF)=""
	
	// Account ~p1 rejected. Loan sale processing may only use debit balance accounts.
	if 'ln2.trb set ER=1 do Runtime.setErrMSG("LNLS4",2331,XCID) quit
	
	// Processing flag indicates the account is not available for sale
	if 'ER,ln2.slbl set ER=1 do Runtime.setErrMSG("LNLS4",2243) quit
	
	set SBAL=ln2.bal
	if ln2.aruf set (SBAL,BAL)=BAL-UDBAL
	
	// Percentage will be defined if called
	if TPP.get().isNull()  do {
		type RecordLNLS2 lnls2=Db.getRecord("LNLS2","INCD=:INCD,PL=:PL",1)
		if lnls2.getMode() set TPP=lnls2.pp
		}

	// Percentage will not defined for commercial loans
	if TPP.get().isNull() quit

	set XSEQ=ln2.tflg+1
	if ln2.pflg do {
		type ResultSet rs=Db.select("INCD,PL,RFPF,PSEQ","LNLS6","CID=:XCID")
		if rs.isEmpty() quit
		while rs.next()  do { 
			set XINCD=rs.getCol(1) 
			set XPL=rs.getCol(2) 
			set RFPF=rs.getCol(3) 
			set XPSEQ=rs.getCol(4)
			if RFPF'=1 do TPP
			}
		}
	
	if ln2.tflg do {
		type ResultSet rs=Db.select("INCD,PL,XSEQ","LNLS4B","CID=:XCID")
		if rs.isEmpty() quit
		while rs.next()  do { 
			set XINCD=rs.getCol(1) 
			set XPL=rs.getCol(2) 
			set XPSEQ=rs.getCol(3)
			do TPP
			}
		}
	
	// Effect is to increase portion sold in excess of current balance
	if TPP>100 set ER=1 do Runtime.setErrSTBLER("LNLS4","LNPRT4B") quit 
	
	quit 


	
TPP	//
	type public String PER,TEM,TMP,TPP,XCID,XINCD,XPL,XPSEQ
	
	type RecordLNLS2 lnls2=Db.getRecord("LNLS2","INCD=:XINCD,PL=:XPL",1)
	if lnls2.getMode() set PER=lnls2.pp_$C(9)_lnls2.picm

	type RecordLNLS6B lnls6b=Db.getRecord("LNLS6B","CID=:XCID,PSEQ=:XPSEQ",1)
	if lnls6b.getMode() set TMP=lnls6b.ops
	
	set TPP=TPP+$S($P(PER,$C(9),2)=6:$G(TEM),1:$P(PER,$C(9),1))

	quit 

	
Public PP2(X,AC1)	// post processor for contra account

	if X.isNull() quit 
	
	type public Boolean ER
	type public String ACC,DATA,CBL,CID,INCD,PL,RM,WASH,VALUE,XCID
	new CCY1,CCY2
		
	type RecordLN ln=Db.getRecord("LN","CID=:X",1)
	if ln.getMode() set CCY1=ln.crcd

	type RecordLN ln1=Db.getRecord("LN","CID=:AC1",1)
	if ln1.getMode() set CCY2=ln1.crcd
		
	if CCY1'=CCY2 set ER=1,RM=$$^MSG(4255) Q
	set ER=""
	set ACC=X 
	
	type RecordLN ln2=Db.getRecord("LN","CID=:ACC",1)
	if ln2.getMode() do {
		if ln2.cid.isNull() set ER=1 do Runtime.setErrMSG("LNLS4",1259,ACC) quit
		}
		
	set CID=X
	if X'=+X quit 
	
	type RecordLN ln3=Db.getRecord("LN","CID=:CID",1)
	set DATA=ln3.cid_$C(9)_ln.cls_$C(9)_ln.grp
		
	// Invalid account number
	if (CID?1N.N),(DATA="") set ER=1 do Runtime.setErrSTBLER("LNLS4","LNPRT4A2") quit 
	type RecordLNLS1 lnls1=Db.getRecord("LNLS1","INCD=:INCD",1)
	
	type RecordLN ln4=Db.getRecord("LN","CID=:CID",1)
	
	/* 
	Primary CIF of account differs from that of investor ???
	Rejected. Contra account ~p1 not owned by investor ~p2.
	*/
	
	if lnls1.acn'=ln4.acn set ER=1 do Runtime.setErrMSG("LNLS4",2332,"X~lnls1.acn") quit
	
	type RecordLN ln5=Db.getRecord("LN","CID=:CID",1)
	
	/* 
	Account not processing as a contra account
	Account ~p1 rejected. Only credit balance accounts may perform the 
	contra role in loan sale processing.
	*/

	if ln5.trb set ER=1 do Runtime.setErrMSG("LNLS4",2350,CID) quit
	type RecordLNLS2 lnls2=Db.getRecord("LNLS2","INCD=:INCD,PL=:PL",1)
	if lnls2.getMode() set PRCSLD=lnls2.pp
		
	#if 'CUVAR.%MCP quit

	type RecordLN ln6=Db.getRecord("LN","CID=:AC1",1)
			
	type RecordLN ln7=Db.getRecord("LN","CID=:CID",1)
	
	/* Accounts must be of the same currency code
	Sale prohibited. Loan ~p1 and contra account xxx process in
	different currencies
	*/

	if ln6.crcd'=ln7.crcd set ER=1 do Runtime.setErrSTBLER("LNLS4","SAMECRCD") quit 
	
	type RecordLNLS2 lnls2a=Db.getRecord("LNLS2","INCD=:INCD,PL=:PL",1)
		
	type RecordDEP dep=Db.getRecord("DEP","CID=:lnls2a.wash",1)
	
	if dep.getMode() set ACT2=dep.crcd
	else  set ACT2=""

	if ln6.crcd=ACT2 quit 

	// Accounts must be of the same currency code
	set ER=1 do Runtime.setErrMSG("LNLS4",2352,"AC1~X")
	quit 


Public PP3(X,ACT2)	// sold amount post processor
	
	new CID,AVLBAL,LN

	/* 
	Amount sold exceeds loan balance
	Sale prohibited. Amount of loan ~p1 sold exceeds its principal balance.
	*/

	if X>SBAL set ER=1 do Runtime.setErrMSG("LNLS4",2351,X) quit 
	set CID=ACT2 quit:CID=""  do AVLBAL^LNCO(,CID)

	// Amount sold exceeds contra account available balance
	if X>AVLBAL set ER=1 do Runtime.setErrSTBLER("LNLS4","LNLS4A3") quit 
	quit 
	
PPDEL	//
	
	type public Boolean ER
	type public String GRP,INCD,PL,XCID

	type RecordLNLS4 lnls4=Db.getRecord("LNLS4","INCD=:INCD,PL=:PL,GRP=:GRP,CID=:XCID")
	if 'lnls4.getMode() set ER=1 do Runtime.setErrSTBLER("LNLS4","LNPRT4A1")
	quit 
 #OPTION ResultClass ON
Public String vSIG()	quit "60268^26186^Sanjay Chhrabria^6011"	// Signature - LTD^TIME^USER^SIZE
