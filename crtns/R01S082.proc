R01S082	// SCA011 - Retirement Tax Year Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:40 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number VIN1

	set RID="SCA011"
	set RN="Retirement Tax Year Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|4||[IRA]TAXYR|[IRA]TAXYR:DISTINCT:NOVAL||||N|Tax Year is equal to|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,MAX(),RID,RN,TAXWH,VL,VLOF,VRF(),VSTATS(),XC2,vCOL,vHDG,vc1,vc10,vc100,vc101,vc102,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85
	type String vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA011",RN="Retirement Tax Year Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA011","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Tax Year is equal to"_"|VIN1|"_VIN1.get()

		set VWHERE="IRA.TAXYR=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Retirement Tax Year Report"
		set VBNRINFO("PGM")="R01S082"
		set VBNRINFO("RID")="SCA011"
		set VBNRINFO("TABLES")="IRA,IRATYPE"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,IRA]ACN"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,IRA]RPASEQ"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,IRA]TAXYR"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vc100)=""
	set (vc101,vc102)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:96 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("IRA.ACN,IRA.RPASEQ,IRA.TAXYR,IRA.C1,IRA.D18,IRA.C2,IRA.D19,IRA.C7,IRA.D24,IRA.C3,IRA.D20,IRA.C5,IRA.D21,IRA.C4,IRA.D25,IRA.C8,IRA.D22,IRA.C9,IRA.D23,IRA.C10,IRA.C11,IRA.C13,IRA.C12,IRA.C14,IRA.C15,IRA.C17,IRA.D1,IRA.D49,IRA.D2,IRA.D70,IRA.D3,IRA.D50,IRA.D26,IRA.D71,IRA.D28,IRA.D63,IRA.D29,IRA.D59,IRA.D5,IRA.D85,IRA.D6,IRA.D60,IRA.D17,IRA.D87,IRA.D34,IRA.D68,IRA.D39,IRA.D51,IRA.D38,IRA.D77,IRA.D43,IRA.D52,IRA.D48,IRA.D81,IRA.D64,IRA.D10,IRA.D53,IRA.D12,IRA.D78,IRA.D13,IRA.D54,IRA.D14,IRA.D82,IRA.D7,IRA.D65,IRA.D15,IRA.D55,IRA.D16,IRA.D79,IRA.D4,IRA.D56,IRA.D8,IRA.D83,IRA.D27,IRA.D66,IRA.D44,IRA.D57,IRA.D94,IRA.D80,IRA.D74,IRA.D58,IRA.D84,IRA.D67,IRA.D61,IRA.D86,IRA.D62,IRA.D88,IRA.D69,IRA.D72,IRA.D73,IRA.D75,IRA.D76,IRA.D96,IRA.D98,IRA.D97,IRA.D99,IRA.D95,IRATYPE.RPASEQ,IRATYPE.IRATYP,IRATYPE.PLANID,IRA.SW9,IRA.D9","IRA,IRATYPE","IRA.TAXYR=:VIN1","IRA.ACN,IRA.RPASEQ,IRA.TAXYR","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vc100
	type Public String vc101,vc102
	set vc1=V.piece($C(9),1)			// IRA.ACN
	set vc2=V.piece($C(9),2)			// IRA.RPASEQ
	set vc3=V.piece($C(9),3)			// IRA.TAXYR
	set vc4=V.piece($C(9),4)			// IRA.C1
	set vc5=V.piece($C(9),5)			// IRA.D18
	set vc6=V.piece($C(9),6)			// IRA.C2
	set vc7=V.piece($C(9),7)			// IRA.D19
	set vc8=V.piece($C(9),8)			// IRA.C7
	set vc9=V.piece($C(9),9)			// IRA.D24
	set vc10=V.piece($C(9),10)			// IRA.C3
	set vc11=V.piece($C(9),11)			// IRA.D20
	set vc12=V.piece($C(9),12)			// IRA.C5
	set vc13=V.piece($C(9),13)			// IRA.D21
	set vc14=V.piece($C(9),14)			// IRA.C4
	set vc15=V.piece($C(9),15)			// IRA.D25
	set vc16=V.piece($C(9),16)			// IRA.C8
	set vc17=V.piece($C(9),17)			// IRA.D22
	set vc18=V.piece($C(9),18)			// IRA.C9
	set vc19=V.piece($C(9),19)			// IRA.D23
	set vc20=V.piece($C(9),20)			// IRA.C10
	set vc21=V.piece($C(9),21)			// IRA.C11
	set vc22=V.piece($C(9),22)			// IRA.C13
	set vc23=V.piece($C(9),23)			// IRA.C12
	set vc24=V.piece($C(9),24)			// IRA.C14
	set vc25=V.piece($C(9),25)			// IRA.C15
	set vc26=V.piece($C(9),26)			// IRA.C17
	set vc27=V.piece($C(9),27)			// IRA.D1
	set vc28=V.piece($C(9),28)			// IRA.D49
	set vc29=V.piece($C(9),29)			// IRA.D2
	set vc30=V.piece($C(9),30)			// IRA.D70
	set vc31=V.piece($C(9),31)			// IRA.D3
	set vc32=V.piece($C(9),32)			// IRA.D50
	set vc33=V.piece($C(9),33)			// IRA.D26
	set vc34=V.piece($C(9),34)			// IRA.D71
	set vc35=V.piece($C(9),35)			// IRA.D28
	set vc36=V.piece($C(9),36)			// IRA.D63
	set vc37=V.piece($C(9),37)			// IRA.D29
	set vc38=V.piece($C(9),38)			// IRA.D59
	set vc39=V.piece($C(9),39)			// IRA.D5
	set vc40=V.piece($C(9),40)			// IRA.D85
	set vc41=V.piece($C(9),41)			// IRA.D6
	set vc42=V.piece($C(9),42)			// IRA.D60
	set vc43=V.piece($C(9),43)			// IRA.D17
	set vc44=V.piece($C(9),44)			// IRA.D87
	set vc45=V.piece($C(9),45)			// IRA.D34
	set vc46=V.piece($C(9),46)			// IRA.D68
	set vc47=V.piece($C(9),47)			// IRA.D39
	set vc48=V.piece($C(9),48)			// IRA.D51
	set vc49=V.piece($C(9),49)			// IRA.D38
	set vc50=V.piece($C(9),50)			// IRA.D77
	set vc51=V.piece($C(9),51)			// IRA.D43
	set vc52=V.piece($C(9),52)			// IRA.D52
	set vc53=V.piece($C(9),53)			// IRA.D48
	set vc54=V.piece($C(9),54)			// IRA.D81
	set vc55=V.piece($C(9),55)			// IRA.D64
	set vc56=V.piece($C(9),56)			// IRA.D10
	set vc57=V.piece($C(9),57)			// IRA.D53
	set vc58=V.piece($C(9),58)			// IRA.D12
	set vc59=V.piece($C(9),59)			// IRA.D78
	set vc60=V.piece($C(9),60)			// IRA.D13
	set vc61=V.piece($C(9),61)			// IRA.D54
	set vc62=V.piece($C(9),62)			// IRA.D14
	set vc63=V.piece($C(9),63)			// IRA.D82
	set vc64=V.piece($C(9),64)			// IRA.D7
	set vc65=V.piece($C(9),65)			// IRA.D65
	set vc66=V.piece($C(9),66)			// IRA.D15
	set vc67=V.piece($C(9),67)			// IRA.D55
	set vc68=V.piece($C(9),68)			// IRA.D16
	set vc69=V.piece($C(9),69)			// IRA.D79
	set vc70=V.piece($C(9),70)			// IRA.D4
	set vc71=V.piece($C(9),71)			// IRA.D56
	set vc72=V.piece($C(9),72)			// IRA.D8
	set vc73=V.piece($C(9),73)			// IRA.D83
	set vc74=V.piece($C(9),74)			// IRA.D27
	set vc75=V.piece($C(9),75)			// IRA.D66
	set vc76=V.piece($C(9),76)			// IRA.D44
	set vc77=V.piece($C(9),77)			// IRA.D57
	set vc78=V.piece($C(9),78)			// IRA.D94
	set vc79=V.piece($C(9),79)			// IRA.D80
	set vc80=V.piece($C(9),80)			// IRA.D74
	set vc81=V.piece($C(9),81)			// IRA.D58
	set vc82=V.piece($C(9),82)			// IRA.D84
	set vc83=V.piece($C(9),83)			// IRA.D67
	set vc84=V.piece($C(9),84)			// IRA.D61
	set vc85=V.piece($C(9),85)			// IRA.D86
	set vc86=V.piece($C(9),86)			// IRA.D62
	set vc87=V.piece($C(9),87)			// IRA.D88
	set vc88=V.piece($C(9),88)			// IRA.D69
	set vc89=V.piece($C(9),89)			// IRA.D72
	set vc90=V.piece($C(9),90)			// IRA.D73
	set vc91=V.piece($C(9),91)			// IRA.D75
	set vc92=V.piece($C(9),92)			// IRA.D76
	set vc93=V.piece($C(9),93)			// IRA.D96
	set vc94=V.piece($C(9),94)			// IRA.D98
	set vc95=V.piece($C(9),95)			// IRA.D97
	set vc96=V.piece($C(9),96)			// IRA.D99
	set vc97=V.piece($C(9),97)			// IRA.D95
	set vc98=V.piece($C(9),98)			// IRATYPE.RPASEQ
	set vc99=V.piece($C(9),99)			// IRATYPE.IRATYP
	set vc100=V.piece($C(9),100)			// IRATYPE.PLANID
	set vc101=V.piece($C(9),101)			// IRA.SW9
	set vc102=V.piece($C(9),102)			// IRA.D9
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number MAX()

 set MAX(3)=MAX(3).get()+1

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),TAXWH,XC2,vc4,vc20,vc21,vc23,vc22,vc24,vc25,vc26,vc6,vc10,vc14,vc12,vc8,vc16,vc18,vc27,vc56,vc58,vc60,vc62,vc66,vc68,vc43,vc5,vc7,vc29,vc11,vc13,vc17,vc19,vc9,vc15,vc33,vc74,vc35,vc37,vc31,vc45,vc49,vc47,vc70,vc51,vc76,vc53,vc28,vc39,vc32,vc48,vc52,vc57,vc61,vc67,vc71,vc77,vc81,vc38,vc41,vc42,vc84,vc86,vc36,vc55,vc65,vc75,vc83,vc46,vc88,vc64,vc30,vc34,vc89,vc90,vc80,vc91,vc92,vc50,vc59,vc69,vc72,vc79,vc54,vc63,vc73,vc82,vc40,vc85,vc44,vc87,vc78,vc97,vc93,vc95,vc94,vc96
	type Public String VSTATS

	set VT(3)=VT(3)+1
	set VT(3,1,1)=VT(3,1,1)+TAXWH			// @TOT(<<TAXWH>>)
	set VT(3,2,1)=VT(3,2,1)+XC2			// @TOT(<<XC2>>)
	set VT(3,3,1)=VT(3,3,1)+vc4			// @TOT([IRA]C1)
	set VT(3,4,1)=VT(3,4,1)+vc20			// @TOT([IRA]C10)
	set VT(3,5,1)=VT(3,5,1)+vc21			// @TOT([IRA]C11)
	set VT(3,6,1)=VT(3,6,1)+vc23			// @TOT([IRA]C12)
	set VT(3,7,1)=VT(3,7,1)+vc22			// @TOT([IRA]C13)
	set VT(3,8,1)=VT(3,8,1)+vc24			// @TOT([IRA]C14)
	set VT(3,9,1)=VT(3,9,1)+vc25			// @TOT([IRA]C15)
	set VT(3,10,1)=VT(3,10,1)+vc26			// @TOT([IRA]C17)
	set VT(3,11,1)=VT(3,11,1)+vc6			// @TOT([IRA]C2)
	set VT(3,12,1)=VT(3,12,1)+vc10			// @TOT([IRA]C3)
	set VT(3,13,1)=VT(3,13,1)+vc14			// @TOT([IRA]C4)
	set VT(3,14,1)=VT(3,14,1)+vc12			// @TOT([IRA]C5)
	set VT(3,15,1)=VT(3,15,1)+vc8			// @TOT([IRA]C7)
	set VT(3,16,1)=VT(3,16,1)+vc16			// @TOT([IRA]C8)
	set VT(3,17,1)=VT(3,17,1)+vc18			// @TOT([IRA]C9)
	set VT(3,18,1)=VT(3,18,1)+vc27			// @TOT([IRA]D1)
	set VT(3,19,1)=VT(3,19,1)+vc56			// @TOT([IRA]D10)
	set VT(3,20,1)=VT(3,20,1)+vc58			// @TOT([IRA]D12)
	set VT(3,21,1)=VT(3,21,1)+vc60			// @TOT([IRA]D13)
	set VT(3,22,1)=VT(3,22,1)+vc62			// @TOT([IRA]D14)
	set VT(3,23,1)=VT(3,23,1)+vc66			// @TOT([IRA]D15)
	set VT(3,24,1)=VT(3,24,1)+vc68			// @TOT([IRA]D16)
	set VT(3,25,1)=VT(3,25,1)+vc43			// @TOT([IRA]D17)
	set VT(3,26,1)=VT(3,26,1)+vc5			// @TOT([IRA]D18)
	set VT(3,27,1)=VT(3,27,1)+vc7			// @TOT([IRA]D19)
	set VT(3,28,1)=VT(3,28,1)+vc29			// @TOT([IRA]D2)
	set VT(3,29,1)=VT(3,29,1)+vc11			// @TOT([IRA]D20)
	set VT(3,30,1)=VT(3,30,1)+vc13			// @TOT([IRA]D21)
	set VT(3,31,1)=VT(3,31,1)+vc17			// @TOT([IRA]D22)
	set VT(3,32,1)=VT(3,32,1)+vc19			// @TOT([IRA]D23)
	set VT(3,33,1)=VT(3,33,1)+vc9			// @TOT([IRA]D24)
	set VT(3,34,1)=VT(3,34,1)+vc15			// @TOT([IRA]D25)
	set VT(3,35,1)=VT(3,35,1)+vc33			// @TOT([IRA]D26)
	set VT(3,36,1)=VT(3,36,1)+vc74			// @TOT([IRA]D27)
	set VT(3,37,1)=VT(3,37,1)+vc35			// @TOT([IRA]D28)
	set VT(3,38,1)=VT(3,38,1)+vc37			// @TOT([IRA]D29)
	set VT(3,39,1)=VT(3,39,1)+vc31			// @TOT([IRA]D3)
	set VT(3,40,1)=VT(3,40,1)+vc45			// @TOT([IRA]D34)
	set VT(3,41,1)=VT(3,41,1)+vc49			// @TOT([IRA]D38)
	set VT(3,42,1)=VT(3,42,1)+vc47			// @TOT([IRA]D39)
	set VT(3,43,1)=VT(3,43,1)+vc70			// @TOT([IRA]D4)
	set VT(3,44,1)=VT(3,44,1)+vc51			// @TOT([IRA]D43)
	set VT(3,45,1)=VT(3,45,1)+vc76			// @TOT([IRA]D44)
	set VT(3,46,1)=VT(3,46,1)+vc53			// @TOT([IRA]D48)
	set VT(3,47,1)=VT(3,47,1)+vc28			// @TOT([IRA]D49)
	set VT(3,48,1)=VT(3,48,1)+vc39			// @TOT([IRA]D5)
	set VT(3,49,1)=VT(3,49,1)+vc32			// @TOT([IRA]D50)
	set VT(3,50,1)=VT(3,50,1)+vc48			// @TOT([IRA]D51)
	set VT(3,51,1)=VT(3,51,1)+vc52			// @TOT([IRA]D52)
	set VT(3,52,1)=VT(3,52,1)+vc57			// @TOT([IRA]D53)
	set VT(3,53,1)=VT(3,53,1)+vc61			// @TOT([IRA]D54)
	set VT(3,54,1)=VT(3,54,1)+vc67			// @TOT([IRA]D55)
	set VT(3,55,1)=VT(3,55,1)+vc71			// @TOT([IRA]D56)
	set VT(3,56,1)=VT(3,56,1)+vc77			// @TOT([IRA]D57)
	set VT(3,57,1)=VT(3,57,1)+vc81			// @TOT([IRA]D58)
	set VT(3,58,1)=VT(3,58,1)+vc38			// @TOT([IRA]D59)
	set VT(3,59,1)=VT(3,59,1)+vc41			// @TOT([IRA]D6)
	set VT(3,60,1)=VT(3,60,1)+vc42			// @TOT([IRA]D60)
	set VT(3,61,1)=VT(3,61,1)+vc84			// @TOT([IRA]D61)
	set VT(3,62,1)=VT(3,62,1)+vc86			// @TOT([IRA]D62)
	set VT(3,63,1)=VT(3,63,1)+vc36			// @TOT([IRA]D63)
	set VT(3,64,1)=VT(3,64,1)+vc55			// @TOT([IRA]D64)
	set VT(3,65,1)=VT(3,65,1)+vc65			// @TOT([IRA]D65)
	set VT(3,66,1)=VT(3,66,1)+vc75			// @TOT([IRA]D66)
	set VT(3,67,1)=VT(3,67,1)+vc83			// @TOT([IRA]D67)
	set VT(3,68,1)=VT(3,68,1)+vc46			// @TOT([IRA]D68)
	set VT(3,69,1)=VT(3,69,1)+vc88			// @TOT([IRA]D69)
	set VT(3,70,1)=VT(3,70,1)+vc64			// @TOT([IRA]D7)
	set VT(3,71,1)=VT(3,71,1)+vc30			// @TOT([IRA]D70)
	set VT(3,72,1)=VT(3,72,1)+vc34			// @TOT([IRA]D71)
	set VT(3,73,1)=VT(3,73,1)+vc89			// @TOT([IRA]D72)
	set VT(3,74,1)=VT(3,74,1)+vc90			// @TOT([IRA]D73)
	set VT(3,75,1)=VT(3,75,1)+vc80			// @TOT([IRA]D74)
	set VT(3,76,1)=VT(3,76,1)+vc91			// @TOT([IRA]D75)
	set VT(3,77,1)=VT(3,77,1)+vc92			// @TOT([IRA]D76)
	set VT(3,78,1)=VT(3,78,1)+vc50			// @TOT([IRA]D77)
	set VT(3,79,1)=VT(3,79,1)+vc59			// @TOT([IRA]D78)
	set VT(3,80,1)=VT(3,80,1)+vc69			// @TOT([IRA]D79)
	set VT(3,81,1)=VT(3,81,1)+vc72			// @TOT([IRA]D8)
	set VT(3,82,1)=VT(3,82,1)+vc79			// @TOT([IRA]D80)
	set VT(3,83,1)=VT(3,83,1)+vc54			// @TOT([IRA]D81)
	set VT(3,84,1)=VT(3,84,1)+vc63			// @TOT([IRA]D82)
	set VT(3,85,1)=VT(3,85,1)+vc73			// @TOT([IRA]D83)
	set VT(3,86,1)=VT(3,86,1)+vc82			// @TOT([IRA]D84)
	set VT(3,87,1)=VT(3,87,1)+vc40			// @TOT([IRA]D85)
	set VT(3,88,1)=VT(3,88,1)+vc85			// @TOT([IRA]D86)
	set VT(3,89,1)=VT(3,89,1)+vc44			// @TOT([IRA]D87)
	set VT(3,90,1)=VT(3,90,1)+vc87			// @TOT([IRA]D88)
	set VT(3,91,1)=VT(3,91,1)+vc78			// @TOT([IRA]D94)
	set VT(3,92,1)=VT(3,92,1)+vc97			// @TOT([IRA]D95)
	set VT(3,93,1)=VT(3,93,1)+vc93			// @TOT([IRA]D96)
	set VT(3,94,1)=VT(3,94,1)+vc95			// @TOT([IRA]D97)
	set VT(3,95,1)=VT(3,95,1)+vc94			// @TOT([IRA]D98)
	set VT(3,96,1)=VT(3,96,1)+vc96			// @TOT([IRA]D99)
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,IOSL,MAX(),RID,RN,TAXWH,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,XC2,vc1,vc10,vc100,vc101,vc102,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8
	type public String vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vcrt,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                     "_"ACCOUNT            RPASEQ     TYPE    PLAN ID"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set V=vc1,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,12) set VL="                "_V
	set VL=VL_$J("",29-VL.length())_$J(vc98,17)
	set VL=VL_$J("",47-VL.length())_$J(vc99,8)
	set V=vc100,VO=V do VP2 quit:VFMQ!verror.get()  set V=$E(V,1,12)
	set VL=VL_$J("",59-VL.length())_V		// [SYSDEV,IRATYPE]PLANID
	do VOM
	quit

VDTL3	// Detail
	type public String %TIM,IOSL,MAX(),TAXWH,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),XC2,vc1,vc10,vc100,vc101,vc102,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84
	type public String vc85,vc86,vc87,vc88,vc89,vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="    "_"<----------------------------CONTRIBUTIONS------------>"
	set VL=VL_$J("",65-VL.length())_"<---DISTRIBUTIONS FOR"
	set VL=VL_$J("",87-VL.length())_"EXCESS CONTRIBUTIONS---->"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="          "_"CYR RPT:"
	set VL=VL_$J("",19-VL.length())_$J(vc4,10,2)
	set VL=VL_$J("",38-VL.length())_"ALLOW TFR:"
	set VL=VL_$J("",49-VL.length())_$J(vc21,10,2)
	set VL=VL_$J("",83-VL.length())_"REP"
	set VL=VL_$J("",87-VL.length())_"CURR YR:"
	set VL=VL_$J("",96-VL.length())_$J(vc5,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="          "_"PYR RPT:"
	set VL=VL_$J("",19-VL.length())_$J(vc6,10,2)
	set VL=VL_$J("",40-VL.length())_"SEP RPT:"
	set VL=VL_$J("",49-VL.length())_$J(vc22,10,2)
	set VL=VL_$J("",82-VL.length())_"REP"
	set VL=VL_$J("",86-VL.length())_"PRIOR YR:"
	set VL=VL_$J("",96-VL.length())_$J(vc7,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="    "_"OTHER NON-RPT:"
	set VL=VL_$J("",19-VL.length())_$J(vc8,10,2)
	set VL=VL_$J("",37-VL.length())_"DTH TFR SP:"
	set VL=VL_$J("",49-VL.length())_$J(vc23,10,2)
	set VL=VL_$J("",81-VL.length())_"REP"
	set VL=VL_$J("",85-VL.length())_"PPRIOR YR:"
	set VL=VL_$J("",96-VL.length())_$J(vc9,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="          "_"INT TFR:"
	set VL=VL_$J("",19-VL.length())_$J(vc10,10,2)
	set VL=VL_$J("",35-VL.length())_"RECHAR FUNDS:"
	set VL=VL_$J("",49-VL.length())_$J(vc24,10,2)
	set VL=VL_$J("",79-VL.length())_"NON-REP"
	set VL=VL_$J("",87-VL.length())_"CURR YR:"
	set VL=VL_$J("",96-VL.length())_$J(vc11,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="       "_"TRSTEE TFR:"
	set VL=VL_$J("",19-VL.length())_$J(vc12,10,2)
	set VL=VL_$J("",32-VL.length())_"ROTH CONVERSION:"
	set VL=VL_$J("",49-VL.length())_$J(vc25,10,2)
	set VL=VL_$J("",78-VL.length())_"NON-REP"
	set VL=VL_$J("",86-VL.length())_"PRIOR YR:"
	set VL=VL_$J("",96-VL.length())_$J(vc13,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="         "_"ROLLOVER:"
	set VL=VL_$J("",19-VL.length())_$J(vc14,10,2)
	set VL=VL_$J("",39-VL.length())_"MILITARY: "
	set VL=VL_$J("",49-VL.length())_$J(vc26,10,2)
	set VL=VL_$J("",77-VL.length())_"NON-REP"
	set VL=VL_$J("",85-VL.length())_"PPRIOR YR:"
	set VL=VL_$J("",96-VL.length())_$J(vc15,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="         "_"EARNINGS:"
	set VL=VL_$J("",19-VL.length())_$J(vc16,10,2)
	set VL=VL_$J("",74-VL.length())_"INTEREST W/D"
	set VL=VL_$J("",87-VL.length())_"CURR YR:"
	set VL=VL_$J("",96-VL.length())_$J(vc17,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="      "_"CYR NON-DED:"
	set VL=VL_$J("",19-VL.length())_$J(vc18,10,2)
	set VL=VL_$J("",73-VL.length())_"INTEREST W/D"
	set VL=VL_$J("",86-VL.length())_"PRIOR YR:"
	set VL=VL_$J("",96-VL.length())_$J(vc19,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="      "_"PYR NON-DED:"
	set VL=VL_$J("",19-VL.length())_$J(vc20,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="      "_"NYR FOR CYR:"
	do VP3 quit:VFMQ!verror.get()  set V=$J(XC2,10,2)
	set VL=VL_$J("",19-VL.length())_V
	do VHDG0 quit:VFMQ				// <<#>>
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                     "_"ACCOUNT            RPASEQ     TYPE    PLAN ID"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="=================================================================================================================================="
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set V=vc1,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J(V,12) set VL="                "_V
	set VL=VL_$J("",29-VL.length())_$J(vc98,17)
	set VL=VL_$J("",47-VL.length())_$J(vc99,8)
	set V=vc100,VO=V do VP5 quit:VFMQ!verror.get()  set V=$E(V,1,12)
	set VL=VL_$J("",59-VL.length())_V		// [SYSDEV,IRATYPE]PLANID
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="    "_"<-------------"
	set VL=VL_$J("",18-VL.length())_"------------------------- DISTRIBUTIONS------------------------------------------------------------------>"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="          "_"NORMAL:"
	set VL=VL_$J("",18-VL.length())_$J(vc27,10,2)
	set VL=VL_$J("",37-VL.length())_"FIRST HOME:"
	set VL=VL_$J("",49-VL.length())_$J(vc49,10,2)
	set VL=VL_$J("",68-VL.length())_"OTHER REP:"
	set VL=VL_$J("",79-VL.length())_$J(vc66,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="       "_"TRSTE TFR:"
	set VL=VL_$J("",18-VL.length())_$J(vc29,10,2)
	set VL=VL_$J("",33-VL.length())_"RECHAR CURR YR:"
	set VL=VL_$J("",49-VL.length())_$J(vc51,10,2)
	set VL=VL_$J("",64-VL.length())_"OTHER NON-REP:"
	set VL=VL_$J("",79-VL.length())_$J(vc68,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="       "_"INTRN TFR:"
	set VL=VL_$J("",18-VL.length())_$J(vc31,10,2)
	set VL=VL_$J("",32-VL.length())_"RECHAR PRIOR YR: "
	set VL=VL_$J("",49-VL.length())_$J(vc53,10,2)
	set VL=VL_$J("",67-VL.length())_"EARLY NOEX:"
	set VL=VL_$J("",79-VL.length())_$J(vc70,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="    "_"DEATH TRF SP:"
	set VL=VL_$J("",18-VL.length())_$J(vc33,10,2)
	set VL=VL_$J("",40-VL.length())_"TAX W/H:"
	do VP6 quit:VFMQ!verror.get()  set V=$J(TAXWH,10,2)
	set VL=VL_$J("",49-VL.length())_V
	set VL=VL_$J("",70-VL.length())_"NON-DED:"
	set VL=VL_$J("",79-VL.length())_$J(vc72,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="     "_"TFR QLF PLN:"
	set VL=VL_$J("",18-VL.length())_$J(vc35,10,2)
	set VL=VL_$J("",38-VL.length())_"MANDATORY:"
	set VL=VL_$J("",49-VL.length())_$J(vc56,10,2)
	set VL=VL_$J("",66-VL.length())_"INT DOD-PMT: "
	set VL=VL_$J("",79-VL.length())_$J(vc74,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="        "_"ROLLOVER: "
	set VL=VL_$J("",18-VL.length())_$J(vc37,10,2)
	set VL=VL_$J("",36-VL.length())_"INT PENALTY:"
	set VL=VL_$J("",49-VL.length())_$J(vc58,10,2)
	set VL=VL_$J("",68-VL.length())_"INHERITED: "
	set VL=VL_$J("",79-VL.length())_$J(vc76,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="     "_" DISABILITY:"
	set VL=VL_$J("",18-VL.length())_$J(vc39,10,2)
	set VL=VL_$J("",40-VL.length())_"DED FEE:"
	set VL=VL_$J("",49-VL.length())_$J(vc60,10,2)
	set VL=VL_$J("",67-VL.length())_"EARLY ROTH: "
	set VL=VL_$J("",79-VL.length())_$J(vc78,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="           "_"DEATH:"
	set VL=VL_$J("",18-VL.length())_$J(vc41,10,2)
	set VL=VL_$J("",36-VL.length())_"NON-DED"
	set VL=VL_$J("",44-VL.length())_"FEE:"
	set VL=VL_$J("",49-VL.length())_$J(vc62,10,2)
	set VL=VL_$J("",61-VL.length())_"EARLY ROTH EXCEP:"
	set VL=VL_$J("",79-VL.length())_$J(vc80,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="      "_"EARLY EXCP:"
	set VL=VL_$J("",18-VL.length())_$J(vc43,10,2)
	set VL=VL_$J("",41-VL.length())_"PROHIB:"
	set VL=VL_$J("",49-VL.length())_$J(vc64,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="      "_"EARLY MEDI:"
	set VL=VL_$J("",18-VL.length())_$J(vc45,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="      "_"ED EXPENSE:"
	set VL=VL_$J("",18-VL.length())_$J(vc47,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	do VHDG0 quit:VFMQ				// <<#>>
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                     "_"ACCOUNT"
	set VL=VL_$J("",40-VL.length())_"RPASEQ"
	set VL=VL_$J("",51-VL.length())_"TYPE"
	set VL=VL_$J("",59-VL.length())_"PLAN ID"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="=================================================================================================================================="
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set V=vc1,VO=V do VP7 quit:VFMQ!verror.get()  set V=$J(V,12) set VL="                "_V
	set VL=VL_$J("",29-VL.length())_$J(vc98,17)
	set VL=VL_$J("",47-VL.length())_$J(vc99,8)
	set V=vc100,VO=V do VP8 quit:VFMQ!verror.get()  set V=$E(V,1,12)
	set VL=VL_$J("",59-VL.length())_V		// [SYSDEV,IRATYPE]PLANID
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="<------------------------------------------- COMBINED DISTRIBUTIONS --------------------------------------------------------------->"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="<----------------------------------- EXCESS CONTRIBUTIONS -------------------------------------------------------------------->"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="       "_"CYR/EAR NOEX: "
	set VL=VL_$J("",21-VL.length())_$J(vc28,10,2)
	set VL=VL_$J("",32-VL.length())_"INT WD PYR/EAR EXC: "
	set VL=VL_$J("",52-VL.length())_$J(vc54,10,2)
	set VL=VL_$J("",70-VL.length())_"PYR/1st HOME: "
	set VL=VL_$J("",84-VL.length())_$J(vc79,10,2)
	set VL=VL_$J("",100-VL.length())_"EARLY ROTH/EXCESS CY:"
	set VL=VL_$J("",122-VL.length())_$J(vc93,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="       "_"PYR/EAR NOEX:"
	set VL=VL_$J("",21-VL.length())_$J(vc30,10,2)
	set VL=VL_$J("",34-VL.length())_"PREV PYR/EAR EXC:"
	set VL=VL_$J("",52-VL.length())_$J(vc55,10,2)
	set VL=VL_$J("",63-VL.length())_"INT WD CYR/1st HOME:"
	set VL=VL_$J("",84-VL.length())_$J(vc81,10,2)
	set VL=VL_$J("",100-VL.length())_"EARLY ROTH/EXCESS PY:"
	set VL=VL_$J("",122-VL.length())_$J(vc94,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="INT WD CYR/EAR NOEX: "
	set VL=VL_$J("",21-VL.length())_$J(vc32,10,2)
	set VL=VL_$J("",39-VL.length())_"CYR/EAR MED: "
	set VL=VL_$J("",52-VL.length())_$J(vc57,10,2)
	set VL=VL_$J("",63-VL.length())_"INT WD PYR/1st HOME:"
	set VL=VL_$J("",84-VL.length())_$J(vc82,10,2)
	set VL=VL_$J("",96-VL.length())_"EARLY ROTH/EX INT W/D CY:"
	set VL=VL_$J("",122-VL.length())_$J(vc95,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="INT WD PYR/EAR NOEX: "
	set VL=VL_$J("",21-VL.length())_$J(vc34,10,2)
	set VL=VL_$J("",39-VL.length())_"PYR/EAR MED:"
	set VL=VL_$J("",52-VL.length())_$J(vc59,10,2)
	set VL=VL_$J("",65-VL.length())_"PREV PYR/1st HOME:"
	set VL=VL_$J("",84-VL.length())_$J(vc83,10,2)
	set VL=VL_$J("",96-VL.length())_"EARLY ROTH/EX INT W/D PY:"
	set VL=VL_$J("",122-VL.length())_$J(vc96,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_"PREV PYR/EAR NOEX: "
	set VL=VL_$J("",21-VL.length())_$J(vc36,10,2)
	set VL=VL_$J("",32-VL.length())_"INT WD CYR/EAR MED:"
	set VL=VL_$J("",52-VL.length())_$J(vc61,10,2)
	set VL=VL_$J("",71-VL.length())_"CYR/INHERIT:"
	set VL=VL_$J("",84-VL.length())_$J(vc84,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="          "_"CYR/DEATH:"
	set VL=VL_$J("",21-VL.length())_$J(vc38,10,2)
	set VL=VL_$J("",32-VL.length())_"INT WD PYR/EAR MED:"
	set VL=VL_$J("",52-VL.length())_$J(vc63,10,2)
	set VL=VL_$J("",71-VL.length())_"PYR/INHERIT:"
	set VL=VL_$J("",84-VL.length())_$J(vc85,10,2)
	set VL=VL_$J("",99-VL.length())_"<------- DISTRIBUTIONS --->"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="          "_"PYR/DEATH: "
	set VL=VL_$J("",21-VL.length())_$J(vc40,10,2)
	set VL=VL_$J("",34-VL.length())_"PREV PYR/EAR MED:"
	set VL=VL_$J("",52-VL.length())_$J(vc65,10,2)
	set VL=VL_$J("",64-VL.length())_"INT WD CYR/INHERIT:"
	set VL=VL_$J("",84-VL.length())_$J(vc86,10,2)
	set VL=VL_$J("",98-VL.length())_"EARLY ROTH/PROHIBITED:"
	set VL=VL_$J("",122-VL.length())_$J(vc97,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="   "_"INT WD CYR/DEATH: "
	set VL=VL_$J("",21-VL.length())_$J(vc42,10,2)
	set VL=VL_$J("",43-VL.length())_"CYR/INS:"
	set VL=VL_$J("",52-VL.length())_$J(vc67,10,2)
	set VL=VL_$J("",64-VL.length())_"INT WD PYR/INHERIT:"
	set VL=VL_$J("",84-VL.length())_$J(vc87,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="   "_"INT WD PYR/DEATH: "
	set VL=VL_$J("",21-VL.length())_$J(vc44,10,2)
	set VL=VL_$J("",43-VL.length())_"PYR/INS:"
	set VL=VL_$J("",52-VL.length())_$J(vc69,10,2)
	set VL=VL_$J("",66-VL.length())_"PREV PYR/INHERIT:"
	set VL=VL_$J("",84-VL.length())_$J(vc88,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="     "_"PREV PYR/DEATH:"
	set VL=VL_$J("",21-VL.length())_$J(vc46,10,2)
	set VL=VL_$J("",37-VL.length())_"IT WD CYR/INS:"
	set VL=VL_$J("",52-VL.length())_$J(vc71,10,2)
	set VL=VL_$J("",67-VL.length())_"PROHIB/EAR NOEX:"
	set VL=VL_$J("",84-VL.length())_$J(vc89,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="        "_"CYR/EAR EXC: "
	set VL=VL_$J("",21-VL.length())_$J(vc48,10,2)
	set VL=VL_$J("",37-VL.length())_"IT WD PYR/INS:"
	set VL=VL_$J("",52-VL.length())_$J(vc73,10,2)
	set VL=VL_$J("",68-VL.length())_"LOANS/EAR NOEX:"
	set VL=VL_$J("",84-VL.length())_$J(vc90,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="        "_"PYR/EAR EXC:"
	set VL=VL_$J("",21-VL.length())_$J(vc50,10,2)
	set VL=VL_$J("",38-VL.length())_"PREV PYR/INS:"
	set VL=VL_$J("",52-VL.length())_$J(vc75,10,2)
	set VL=VL_$J("",71-VL.length())_"LOANS/DEATH:"
	set VL=VL_$J("",84-VL.length())_$J(vc91,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL=" "_"INT WD CYR/EAR EXC:"
	set VL=VL_$J("",21-VL.length())_$J(vc52,10,2)
	set VL=VL_$J("",38-VL.length())_"CYR/1st HOME:"
	set VL=VL_$J("",52-VL.length())_$J(vc77,10,2)
	set VL=VL_$J("",69-VL.length())_"LOANS/INHERIT:"
	set VL=VL_$J("",84-VL.length())_$J(vc92,10,2)
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,MAX(),RID,RN,TAXWH,VL,XC2,vc1,vc10,vc100,vc101,vc102,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc77,vc78,vc79,vc8,vc80,vc81,vc82,vc83,vc84,vc85,vc86,vc87,vc88,vc89
	type public String vc9,vc90,vc91,vc92,vc93,vc94,vc95,vc96,vc97,vc98,vc99,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA011)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,MAX(),TAXWH,XC2,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+64>IOSL do VHDG0 quit:VFMQ

	set VL="                      "_"<------------TOTAL CONTRIBUTIONS----------->  <--------TOTAL EXCESS CONTRIBUTIONS------->"
	do VOM
	set VL="" do VOM
	set VL="                           "_"Total Current Year: "
	set V=0						// @TOT([IRA]C1,0)
	for I=0:1:3 set V=V+VT(I,3,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	set VL=VL_$J("",74-VL.length())_"Total Rep Curr YR: "
	set V=0						// @TOT([IRA]D18,0)
	for I=0:1:3 set V=V+VT(I,26,1)
	set VL=VL_$J("",93-VL.length())_$J(V,18,2)
	do VOM
	set VL="                             "_"Total Prior Year:"
	set V=0						// @TOT([IRA]C2,0)
	for I=0:1:3 set V=V+VT(I,11,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	set VL=VL_$J("",73-VL.length())_"Total Rep Prior YR: "
	set V=0						// @TOT([IRA]D19,0)
	for I=0:1:3 set V=V+VT(I,27,1)
	set VL=VL_$J("",93-VL.length())_$J(V,18,2)
	do VOM
	set VL="                          "_"Total Other Non-RPT:"
	set V=0						// @TOT([IRA]C7,0)
	for I=0:1:3 set V=V+VT(I,15,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	set VL=VL_$J("",73-VL.length())_"Total Rep Prior YR:"
	set V=0						// @TOT([IRA]D24,0)
	for I=0:1:3 set V=V+VT(I,33,1)
	set VL=VL_$J("",93-VL.length())_$J(V,18,2)
	do VOM
	set VL="                      "_"Total Internal Transfer:"
	set V=0						// @TOT([IRA]C3,0)
	for I=0:1:3 set V=V+VT(I,12,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	set VL=VL_$J("",70-VL.length())_"Total Non-Rep Curr YR:"
	set V=0						// @TOT([IRA]D20,0)
	for I=0:1:3 set V=V+VT(I,29,1)
	set VL=VL_$J("",93-VL.length())_$J(V,18,2)
	do VOM
	set VL="                       "_"Total Trustee Transfer:"
	set V=0						// @TOT([IRA]C5,0)
	for I=0:1:3 set V=V+VT(I,14,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	set VL=VL_$J("",69-VL.length())_"Total Non-Rep Prior YR: "
	set V=0						// @TOT([IRA]D21,0)
	for I=0:1:3 set V=V+VT(I,30,1)
	set VL=VL_$J("",93-VL.length())_$J(V,18,2)
	do VOM
	set VL="                               "_"Total Rollover:"
	set V=0						// @TOT([IRA]C4,0)
	for I=0:1:3 set V=V+VT(I,13,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	set VL=VL_$J("",68-VL.length())_"Total Non-Rep Pprior YR:"
	set V=0						// @TOT([IRA]D25,0)
	for I=0:1:3 set V=V+VT(I,34,1)
	set VL=VL_$J("",93-VL.length())_$J(V,18,2)
	do VOM
	set VL="                               "_"Total Earnings:"
	set V=0						// @TOT([IRA]C8,0)
	for I=0:1:3 set V=V+VT(I,16,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	set VL=VL_$J("",70-VL.length())_"Total Int W/D Curr YR:"
	set V=0						// @TOT([IRA]D22,0)
	for I=0:1:3 set V=V+VT(I,31,1)
	set VL=VL_$J("",93-VL.length())_$J(V,18,2)
	do VOM
	set VL="                        "_"Total Non-DED Curr YR:"
	set V=0						// @TOT([IRA]C9,0)
	for I=0:1:3 set V=V+VT(I,17,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	set VL=VL_$J("",69-VL.length())_"Total Int W/D Prior YR:"
	set V=0						// @TOT([IRA]D23,0)
	for I=0:1:3 set V=V+VT(I,32,1)
	set VL=VL_$J("",93-VL.length())_$J(V,18,2)
	do VOM
	set VL="                       "_"Total Non-DED Prior YR:"
	set V=0						// @TOT([IRA]C10,0)
	for I=0:1:3 set V=V+VT(I,4,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	do VOM
	set VL="                            "_"Total NYR For CYR:"
	set V=0						// @TOT(<<XC2>>,0)
	for I=0:1:3 set V=V+VT(I,2,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	do VOM
	set VL="                              "_"Total Allow TFR:"
	set V=0						// @TOT([IRA]C11,0)
	for I=0:1:3 set V=V+VT(I,5,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                "_"Total SEP RPT:"
	set V=0						// @TOT([IRA]C13,0)
	for I=0:1:3 set V=V+VT(I,7,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	do VOM
	set VL="                           "_"Total Death TFR Sp:"
	set V=0						// @TOT([IRA]C12,0)
	for I=0:1:3 set V=V+VT(I,6,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	do VOM
	set VL="                           "_"Total Rechar Funds:"
	set V=0						// @TOT([IRA]C14,0)
	for I=0:1:3 set V=V+VT(I,8,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	do VOM
	set VL="                        "_"Total Roth conversion:"
	set V=0						// @TOT([IRA]C15,0)
	for I=0:1:3 set V=V+VT(I,9,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	do VOM
	set VL="                               "_"Total Military: "
	set V=0						// @TOT([IRA]C17,0)
	for I=0:1:3 set V=V+VT(I,10,1)
	set VL=VL_$J("",47-VL.length())_$J(V,18,2)
	do VOM
	set VL="  "_"<------------------------------------------------------TOTAL DISTRIBUTIONS--------------------------------------------------->"
	do VOM
	set VL="" do VOM
	set VL="       "_"Total Normal Distribution:"
	set V=0						// @TOT([IRA]D1,0)
	for I=0:1:3 set V=V+VT(I,18,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",63-VL.length())_"Excess Contr Current Year/Early Dist No Exc:"
	set V=0						// @TOT([IRA]D49,0)
	for I=0:1:3 set V=V+VT(I,47,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="          "_"Total Trustee Transfer: "
	set V=0						// @TOT([IRA]D2,0)
	for I=0:1:3 set V=V+VT(I,28,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",65-VL.length())_"Excess Contr Prior Year/Early Dist No Exc:"
	set V=0						// @TOT([IRA]D70,0)
	for I=0:1:3 set V=V+VT(I,71,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="         "_"Total Internal Transfer:"
	set V=0						// @TOT([IRA]D3,0)
	for I=0:1:3 set V=V+VT(I,39,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",55-VL.length())_"Excess Contr Int W/D Current Year/Early Dist No Exc:"
	set V=0						// @TOT([IRA]D50,0)
	for I=0:1:3 set V=V+VT(I,49,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="              "_"Total Death Trf SP:"
	set V=0						// @TOT([IRA]D26,0)
	for I=0:1:3 set V=V+VT(I,35,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",57-VL.length())_"Excess Contr Int W/D Prior Year/Early Dist No Exc:"
	set V=0						// @TOT([IRA]D71,0)
	for I=0:1:3 set V=V+VT(I,72,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="       "_"Total Direct Trf QLF Plan:"
	set V=0						// @TOT([IRA]D28,0)
	for I=0:1:3 set V=V+VT(I,37,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",60-VL.length())_"Excess Contr Prev Prior Year/Early Dist No Exc:"
	set V=0						// @TOT([IRA]D63,0)
	for I=0:1:3 set V=V+VT(I,63,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                  "_"Total Rollover:"
	set V=0						// @TOT([IRA]D29,0)
	for I=0:1:3 set V=V+VT(I,38,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",75-VL.length())_"Excess Contr Current Year/Death:"
	set V=0						// @TOT([IRA]D59,0)
	for I=0:1:3 set V=V+VT(I,58,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                "_"Total Disability:"
	set V=0						// @TOT([IRA]D5,0)
	for I=0:1:3 set V=V+VT(I,48,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",77-VL.length())_"Excess Contr Prior Year/Death:"
	set V=0						// @TOT([IRA]D85,0)
	for I=0:1:3 set V=V+VT(I,87,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                     "_"Total Death:"
	set V=0						// @TOT([IRA]D6,0)
	for I=0:1:3 set V=V+VT(I,59,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",67-VL.length())_"Excess Contr Int W/D Current Year/Death:"
	set V=0						// @TOT([IRA]D60,0)
	for I=0:1:3 set V=V+VT(I,60,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="           "_"Total Early Exception:"
	set V=0						// @TOT([IRA]D17,0)
	for I=0:1:3 set V=V+VT(I,25,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",69-VL.length())_"Excess Contr Int W/D Prior Year/Death:"
	set V=0						// @TOT([IRA]D87,0)
	for I=0:1:3 set V=V+VT(I,89,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="       "_"Total Early Med Exception:"
	set V=0						// @TOT([IRA]D34,0)
	for I=0:1:3 set V=V+VT(I,40,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",72-VL.length())_"Excess Contr Prev Prior Year/Death:"
	set V=0						// @TOT([IRA]D68,0)
	for I=0:1:3 set V=V+VT(I,68,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="           "_"Total QLF Ed Expenses:"
	set V=0						// @TOT([IRA]D39,0)
	for I=0:1:3 set V=V+VT(I,42,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",66-VL.length())_"Excess Contr Current Year/Early Dist Exc:"
	set V=0						// @TOT([IRA]D51,0)
	for I=0:1:3 set V=V+VT(I,50,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="      "_"Total First Home Purchases:"
	set V=0						// @TOT([IRA]D38,0)
	for I=0:1:3 set V=V+VT(I,41,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",68-VL.length())_"Excess Contr Prior Year/Early Dist Exc:"
	set V=0						// @TOT([IRA]D77,0)
	for I=0:1:3 set V=V+VT(I,78,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="            "_"Total Rechar Curr YR:"
	set V=0						// @TOT([IRA]D43,0)
	for I=0:1:3 set V=V+VT(I,44,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",58-VL.length())_"Excess Contr Int W/D Current Year/Early Dist Exc:"
	set V=0						// @TOT([IRA]D52,0)
	for I=0:1:3 set V=V+VT(I,51,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="           "_"Total Rechar Prior YR:"
	set V=0						// @TOT([IRA]D48,0)
	for I=0:1:3 set V=V+VT(I,46,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",60-VL.length())_"Excess Contr Int W/D Pripr Year/Early Dist Exc:"
	set V=0						// @TOT([IRA]D81,0)
	for I=0:1:3 set V=V+VT(I,83,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                   "_"Total Tax W/H:"
	set V=0						// @TOT(<<TAXWH>>,0)
	for I=0:1:3 set V=V+VT(I,1,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",63-VL.length())_"Excess Contr Prev Prior Year/Early Dist Exc:"
	set V=0						// @TOT([IRA]D64,0)
	for I=0:1:3 set V=V+VT(I,64,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                 "_"Total Mandatory:"
	set V=0						// @TOT([IRA]D10,0)
	for I=0:1:3 set V=V+VT(I,19,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",62-VL.length())_"Excess Contr Current Year/Early Dist Medical:"
	set V=0						// @TOT([IRA]D53,0)
	for I=0:1:3 set V=V+VT(I,52,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="        "_"Total Interest Penalties:"
	set V=0						// @TOT([IRA]D12,0)
	for I=0:1:3 set V=V+VT(I,20,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",64-VL.length())_"Excess Contr Prior Year/Early Dist Medical:"
	set V=0						// @TOT([IRA]D78,0)
	for I=0:1:3 set V=V+VT(I,79,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="            "_"Total Deductible Fee:"
	set V=0						// @TOT([IRA]D13,0)
	for I=0:1:3 set V=V+VT(I,21,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",54-VL.length())_"Excess Contr Int W/D Current Year/Early Dist Medical:"
	set V=0						// @TOT([IRA]D54,0)
	for I=0:1:3 set V=V+VT(I,53,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="        "_"Total Non-deductible Fee:"
	set V=0						// @TOT([IRA]D14,0)
	for I=0:1:3 set V=V+VT(I,22,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",56-VL.length())_"Excess Contr Int W/D Prior Year/Early Dist Medical:"
	set V=0						// @TOT([IRA]D82,0)
	for I=0:1:3 set V=V+VT(I,84,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="       "_"Total Prohib Transactions:"
	set V=0						// @TOT([IRA]D7,0)
	for I=0:1:3 set V=V+VT(I,70,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",59-VL.length())_"Excess Contr Prev Prior Year/Early Dist Medical:"
	set V=0						// @TOT([IRA]D65,0)
	for I=0:1:3 set V=V+VT(I,65,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="          "_"Total Other Reportable:"
	set V=0						// @TOT([IRA]D15,0)
	for I=0:1:3 set V=V+VT(I,23,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",71-VL.length())_"Excess Contr Current Year/Insurance: "
	set V=0						// @TOT([IRA]D55,0)
	for I=0:1:3 set V=V+VT(I,54,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="      "_"Total Other Non-reportable:"
	set V=0						// @TOT([IRA]D16,0)
	for I=0:1:3 set V=V+VT(I,24,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",73-VL.length())_"Excess Contr Prior Year/Insurance:"
	set V=0						// @TOT([IRA]D79,0)
	for I=0:1:3 set V=V+VT(I,80,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="        "_"Total Early No Exception:"
	set V=0						// @TOT([IRA]D4,0)
	for I=0:1:3 set V=V+VT(I,43,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",63-VL.length())_"Excess Contr Int W/D Current Year/Insurance:"
	set V=0						// @TOT([IRA]D56,0)
	for I=0:1:3 set V=V+VT(I,55,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="            "_"Total Non-Deductible:"
	set V=0						// @TOT([IRA]D8,0)
	for I=0:1:3 set V=V+VT(I,81,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",65-VL.length())_"Excess Contr Int W/D Prior Year/Insurance:"
	set V=0						// @TOT([IRA]D83,0)
	for I=0:1:3 set V=V+VT(I,85,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="        "_"Total Int Earned DOD-Pmt:"
	set V=0						// @TOT([IRA]D27,0)
	for I=0:1:3 set V=V+VT(I,36,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",68-VL.length())_"Excess Contr Prev Prior Year/Insurance:"
	set V=0						// @TOT([IRA]D66,0)
	for I=0:1:3 set V=V+VT(I,66,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                 "_"Total Inherited: "
	set V=0						// @TOT([IRA]D44,0)
	for I=0:1:3 set V=V+VT(I,45,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",70-VL.length())_"Excess Contr Current Year/First Home:"
	set V=0						// @TOT([IRA]D57,0)
	for I=0:1:3 set V=V+VT(I,56,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                      "_"Early Roth:"
	set V=0						// @TOT([IRA]D94,0)
	for I=0:1:3 set V=V+VT(I,91,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",72-VL.length())_"Excess Contr Prior Year/First Home:"
	set V=0						// @TOT([IRA]D80,0)
	for I=0:1:3 set V=V+VT(I,82,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="          "_"Early Roth - Exception:"
	set V=0						// @TOT([IRA]D74,0)
	for I=0:1:3 set V=V+VT(I,75,1)
	set VL=VL_$J("",34-VL.length())_$J(V,18,2)
	set VL=VL_$J("",62-VL.length())_"Excess Contr Int W/D Current Year/First Home:"
	set V=0						// @TOT([IRA]D58,0)
	for I=0:1:3 set V=V+VT(I,57,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                "_"Excess Contr Int W/D Prior Year/First Home:"
	set V=0						// @TOT([IRA]D84,0)
	for I=0:1:3 set V=V+VT(I,86,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                   "_"Excess Contr Prev Prior Year/First Home:"
	set V=0						// @TOT([IRA]D67,0)
	for I=0:1:3 set V=V+VT(I,67,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                       "_"Excess Contr Current Year/Inherited:"
	set V=0						// @TOT([IRA]D61,0)
	for I=0:1:3 set V=V+VT(I,61,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                         "_"Excess Contr Prior Year/Inherited:"
	set V=0						// @TOT([IRA]D86,0)
	for I=0:1:3 set V=V+VT(I,88,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                               "_"Excess Contr Int W/D Current Year/Inherited:"
	set V=0						// @TOT([IRA]D62,0)
	for I=0:1:3 set V=V+VT(I,62,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                 "_"Excess Contr Int W/D Prior Year/Inherited:"
	set V=0						// @TOT([IRA]D88,0)
	for I=0:1:3 set V=V+VT(I,90,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                    "_"Excess Contr Prev Prior Year/Inherited:"
	set V=0						// @TOT([IRA]D69,0)
	for I=0:1:3 set V=V+VT(I,69,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                        "_"Prohibited Trans/Early Dist No Exc:"
	set V=0						// @TOT([IRA]D72,0)
	for I=0:1:3 set V=V+VT(I,73,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                                   "_"Loans/Early Dist No Exc:"
	set V=0						// @TOT([IRA]D73,0)
	for I=0:1:3 set V=V+VT(I,74,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                                               "_"Loans/Death:"
	set V=0						// @TOT([IRA]D75,0)
	for I=0:1:3 set V=V+VT(I,76,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                                           "_"Loans/Inherited:"
	set V=0						// @TOT([IRA]D76,0)
	for I=0:1:3 set V=V+VT(I,77,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                      "_"Early Roth/Excess Contr Current Year:"
	set V=0						// @TOT([IRA]D96,0)
	for I=0:1:3 set V=V+VT(I,93,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                        "_"Early Roth/Excess Contr Prior Year:"
	set V=0						// @TOT([IRA]D98,0)
	for I=0:1:3 set V=V+VT(I,95,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                              "_"Early Roth/Excess Contr Int W/D Current Year:"
	set V=0						// @TOT([IRA]D97,0)
	for I=0:1:3 set V=V+VT(I,94,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                "_"Early Roth/Excess Contr Int W/D Prior Year:"
	set V=0						// @TOT([IRA]D99,0)
	for I=0:1:3 set V=V+VT(I,96,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	set VL="                                                                                     "_"Early Roth/Prohibited:"
	set V=0						// @TOT([IRA]D95,0)
	for I=0:1:3 set V=V+VT(I,92,1)
	set VL=VL_$J("",108-VL.length())_$J(V,18,2)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,IRA]ACN

 type public Number ACN
 type public String V

 set ACN=+V

	quit

VP2	// Column pre-processor - [SYSDEV,IRATYPE]PLANID

 type public String V
 type public Number ACN

 if (V="?")!(+V=ACN) set V=""

	quit

VP3	// Column pre-processor - Variable: XC2

	type public String vc1,vc2
 type public Number MAX(),XC2
 type Number ACN,RPASEQ

 set XC2=0
 set ACN=vc1
 set RPASEQ=vc2

 if Db.isDefined("IRA","ACN=:ACN,RPASEQ=:RPASEQ,TAXYR=:MAX(3)") do {
	type RecordIRA iratype=Db.getRecord("IRA","ACN=:ACN,RPASEQ=:RPASEQ,TAXYR=:MAX(3)")
	set XC2=iratype.C2
 }

	quit

VP4	// Column pre-processor - [SYSDEV,IRA]ACN

  type public Number ACN
  type public String V
 
  set ACN=+V
	quit

VP5	// Column pre-processor - [SYSDEV,IRATYPE]PLANID

 type public String V
 type public Number ACN

 if (V="?")!(+V=ACN) set V=""
	quit

VP6	// Column pre-processor - Variable: TAXWH

	type public String vc101,vc102
 type public Number TAXWH

 set TAXWH=vc101+vc102

	quit

VP7	// Column pre-processor - [SYSDEV,IRA]ACN

  type public Number ACN
  type public String V
 
  set ACN=+V

	quit

VP8	// Column pre-processor - [SYSDEV,IRATYPE]PLANID

 type public String V
 type public Number ACN
 
 if (V="?")!(+V=ACN) set V=""
	quit
