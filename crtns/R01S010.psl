R01S010	// SCA620 - Automated Monthly Maintenance GCR Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:00 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA620"
	set RN="Automated Monthly Maintenance GCR Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[DTJFMMS]TJD|[DTJFMMS]TJD:DISTINCT:NOVAL||||D|System Processing Date is equal to|||||"
	set %TAB("VIN2")="|255||[DTJFMMS]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN3")="|255||[DTJFMMS]MSEQ|[DTJFMMS]MSEQ:DISTINCT:NOVAL||D EXT^DBSQRY||T|Transaction Sequence Number|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=37
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1
	type public String VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BNGCR(),BOGCR(),CONAM,RID,RN,RNGCR(),ROGCR(),TNGCR(),TOGCR(),VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA620",RN="Automated Monthly Maintenance GCR Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA620","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DTJFMMS]CID#1#12,[DTJFMMS]DTOP#15#10,[DTJFMMS]ORIGOPD#27#10,[DTJFMMS]TODCNT#44#3,[DTJFMMS]BAL#50#18,[DTJFMMS]GCRLBAL#71#18,[DTJFMMS]NEWGCR#97#2,[DTJFMMS]NGCRCOV#103#18,[DTJFMMS]DTPMNT#123#10\[DTJFMMS]OLDGCR#97#2,[DTJFMMS]OGCRCOV#103#18"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DTJFMMS]TJD = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DTJFMMS]CID "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DTJFMMS]MSEQ "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DTJFMMS") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"System Processing Date is equal to"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC2|"_"Account Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Transaction Sequence Number"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Automated Monthly Maintenance GCR Report"
		set VBNRINFO("PGM")="R01S010"
		set VBNRINFO("RID")="SCA620"
		set VBNRINFO("TABLES")="DTJFMMS"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DTJFMMS]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DTJFMMS]TYPE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DTJFMMS]BOO"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DTJFMMS]CID"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DTJFMMS]MSEQ"

		set VBNRINFO("DOC",1)="/*"
		set VBNRINFO("DOC",2)="   ---------- Revision History --------------------------------------------"
		set VBNRINFO("DOC",3)=""
		set VBNRINFO("DOC",4)="     12/11/06 - SWARNALP - 22716"
		set VBNRINFO("DOC",5)="                Converted to PSL"
		set VBNRINFO("DOC",6)=""
		set VBNRINFO("DOC",7)="   ------------------------------------------------------------------------"
		set VBNRINFO("DOC",8)="*/"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DTJFMMS.TJD,DTJFMMS.TYPE,DTJFMMS.BOO,DTJFMMS.CID,D"
	set VSELECT=VSELECT_"TJFMMS.MSEQ,DTJFMMS.DTOP,DTJFMMS.ORIGOPD,DTJFMMS.T"
	set VSELECT=VSELECT_"ODCNT,DTJFMMS.BAL,DTJFMMS.GCRLBAL,DTJFMMS.NEWGCR,D"
	set VSELECT=VSELECT_"TJFMMS.NGCRCOV,DTJFMMS.DTPMNT,DTJFMMS.OLDGCR,DTJFM"
	set VSELECT=VSELECT_"MS.OGCRCOV"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DTJFMMS",VWHERE,"DTJFMMS.TJD,DTJFMMS.TYPE,DTJFMMS.BOO,DTJFMMS.CID,DTJFMMS.MSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15
	set vc1=V.piece($C(9),1)			// DTJFMMS.TJD
	set vc2=V.piece($C(9),2)			// DTJFMMS.TYPE
	set vc3=V.piece($C(9),3)			// DTJFMMS.BOO
	set vc4=V.piece($C(9),4)			// DTJFMMS.CID
	set vc5=V.piece($C(9),5)			// DTJFMMS.MSEQ
	set vc6=V.piece($C(9),6)			// DTJFMMS.DTOP
	set vc7=V.piece($C(9),7)			// DTJFMMS.ORIGOPD
	set vc8=V.piece($C(9),8)			// DTJFMMS.TODCNT
	set vc9=V.piece($C(9),9)			// DTJFMMS.BAL
	set vc10=V.piece($C(9),10)			// DTJFMMS.GCRLBAL
	set vc11=V.piece($C(9),11)			// DTJFMMS.NEWGCR
	set vc12=V.piece($C(9),12)			// DTJFMMS.NGCRCOV
	set vc13=V.piece($C(9),13)			// DTJFMMS.DTPMNT
	set vc14=V.piece($C(9),14)			// DTJFMMS.OLDGCR
	set vc15=V.piece($C(9),15)			// DTJFMMS.OGCRCOV
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number RNGCR(), ROGCR(), TNGCR(), TOGCR(), BNGCR(), BOGCR()
 type Number I

 for I=0:1:9 set RNGCR(I) = 0
 for I=0:1:9 set ROGCR(I) = 0

 for I=0:1:9 set TNGCR(I) = 0
 for I=0:1:9 set TOGCR(I) = 0

 for I=0:1:9 set BNGCR(I) = 0
 for I=0:1:9 set BOGCR(I) = 0
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VSUM3	// Summary
	type public String %TIM,BNGCR(),BOGCR(),I,IOSL,RNGCR(),ROGCR(),TNGCR(),TOGCR(),V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+14>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="         "_"==========================================================================================================================="
	do VOM
	set VL="         "_"Subtotals:  "
	set VL=VL_$J("",23-VL.length())_"Type"
	set VL=VL_$J("",28-VL.length())_$E(vc2,1,5)
	set VL=VL_$J("",61-VL.length())_"GCR "
	set VL=VL_$J("",70-VL.length())_"New Mthly"
	set VL=VL_$J("",82-VL.length())_"Old"
	set VL=VL_$J("",86-VL.length())_"Mthly"
	do VOM
	set VL="                                                             "_"Code     Count       Count "
	do VOM
	set VL="" do VOM
	set VL="                                                             "_"GCR 0"
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(0),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(0),6)
	do VOM
	set VL="                                                             "_"GCR 1"
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(1),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(1),6)
	do VOM
	set VL="                                                             "_"GCR 2    "
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(2),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(2),6)
	do VOM
	set VL="                                                             "_"GCR 3    "
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(3),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(3),6)
	do VOM
	set VL="                                                             "_"GCR 4    "
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(4),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(4),6)
	do VOM
	set VL="                                                             "_"GCR 5    "
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(5),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(5),6)
	do VOM
	set VL="                                                             "_"GCR 6    "
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(6),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(6),6)
	do VOM
	set VL="                                                             "_"GCR 7    "
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(7),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(7),6)
	do VOM
	set VL="                                                             "_"GCR 8    "
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(8),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(8),6)
	do VOM
	set VL="                                                             "_"GCR 9    "
	set VL=VL_$J("",70-VL.length())_$J(TNGCR(9),6)
	set VL=VL_$J("",82-VL.length())_$J(TOGCR(9),6)
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,BNGCR(),BOGCR(),I,IOSL,RNGCR(),ROGCR(),TNGCR(),TOGCR(),V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+14>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="         "_"==========================================================================================================================="
	do VOM
	set VL="         "_"Subtotals:"
	set VL=VL_$J("",23-VL.length())_"Branch "
	set VL=VL_$J("",30-VL.length())_$E(vc3,1,5)
	set VL=VL_$J("",61-VL.length())_"GCR "
	set VL=VL_$J("",70-VL.length())_"New Mthly"
	set VL=VL_$J("",82-VL.length())_"Old"
	set VL=VL_$J("",86-VL.length())_"Mnthly"
	do VOM
	set VL="                                                             "_"Code"
	set VL=VL_$J("",70-VL.length())_"Count"
	set VL=VL_$J("",82-VL.length())_"Count"
	do VOM
	set VL="" do VOM
	set VL="                                                             "_"GCR 0"
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(0),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(0),6)
	do VOM
	set VL="                                                             "_"GCR 1"
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(1),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(1),6)
	do VOM
	set VL="                                                             "_"GCR 2    "
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(2),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(2),6)
	do VOM
	set VL="                                                             "_"GCR 3    "
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(3),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(3),6)
	do VOM
	set VL="                                                             "_"GCR 4    "
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(4),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(4),6)
	do VOM
	set VL="                                                             "_"GCR 5    "
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(5),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(5),6)
	do VOM
	set VL="                                                             "_"GCR 6    "
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(6),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(6),6)
	do VOM
	set VL="                                                             "_"GCR 7    "
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(7),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(7),6)
	do VOM
	set VL="                                                             "_"GCR 8    "
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(8),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(8),6)
	do VOM
	set VL="                                                             "_"GCR 9    "
	set VL=VL_$J("",70-VL.length())_$J(BNGCR(9),6)
	set VL=VL_$J("",82-VL.length())_$J(BOGCR(9),6)
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,BNGCR(),BOGCR(),IOSL,RNGCR(),ROGCR(),TNGCR(),TOGCR(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc4,12)
	set VL=VL_$J("",14-VL.length())_$J($$DAT^%ZM(vc6),10)
	set VL=VL_$J("",26-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",43-VL.length())_$J(vc8,3)
	set VL=VL_$J("",49-VL.length())_$J($FN(vc9,",",2),18)
	set VL=VL_$J("",70-VL.length())_$J($FN(vc10,",",2),18)
	set V=vc11,VO=V set V=$J(V,2) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V		// [SYSDEV,DTJFMMS]NEWGCR
	set VL=VL_$J("",102-VL.length())_$J($FN(vc12,",",2),18)
	set VL=VL_$J("",122-VL.length())_$J($$DAT^%ZM(vc13),10)
	do VOM
	set V=vc14,VO=V set V=$J(V,2) do VP2 quit:VFMQ!verror.get()  set VL="                                                                                                "_V
	set VL=VL_$J("",102-VL.length())_$J($FN(vc15,",",2),18)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BNGCR(),BOGCR(),CONAM,RID,RN,RNGCR(),ROGCR(),TNGCR(),TOGCR(),VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+11,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Branch: "
	set VL=VL_$J("",13-VL.length())_$J(vc3,6)
	do VOM
	set VL="" do VOM
	set VL="     "_"Product Type:"
	set VL=VL_$J("",19-VL.length())_$J(vc2,4)
	do VOM
	set VL="" do VOM
	set VL="     "_"Account   Opening    Original   Od's Last     Current Balance     Six-month Average    New Code        New Coverage  Date Prev."
	do VOM
	set VL="     "_"Number    Date       Opening    24 Months                        GCR Liability Pack    Old Code        Old Coverage  Maint"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,BNGCR(),BOGCR(),RNGCR(),ROGCR(),TNGCR(),TOGCR(),VPN,vc2,vc3,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+15>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="         "_"==========================================================================================================================="
	do VOM
	set VL="         "_"Report Totals:                                      GCR      New Mthly   Old Mthly"
	do VOM
	set VL="                                                             "_"Code     Count       Count"
	do VOM
	set VL="" do VOM
	set VL="                                                             "_"GCR 0"
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(0),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(0),6)
	do VOM
	set VL="                                                             "_"GCR 1"
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(1),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(1),6)
	do VOM
	set VL="                                                             "_"GCR 2    "
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(2),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(2),6)
	do VOM
	set VL="                                                             "_"GCR 3    "
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(3),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(3),6)
	do VOM
	set VL="                                                             "_"GCR 4    "
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(4),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(4),6)
	do VOM
	set VL="                                                             "_"GCR 5    "
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(5),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(5),6)
	do VOM
	set VL="                                                             "_"GCR 6    "
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(6),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(6),6)
	do VOM
	set VL="                                                             "_"GCR 7    "
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(7),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(7),6)
	do VOM
	set VL="                                                             "_"GCR 8    "
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(8),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(8),6)
	do VOM
	set VL="                                                             "_"GCR 9    "
	set VL=VL_$J("",70-VL.length())_$J(RNGCR(9),6)
	set VL=VL_$J("",82-VL.length())_$J(ROGCR(9),6)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,DTJFMMS]NEWGCR

	type public String vc11
 type Number NEWGCR
 type public Number TNGCR(), BNGCR(), RNGCR()
 
 set NEWGCR = vc11
 if NEWGCR = ""  quit
 set TNGCR(NEWGCR) = TNGCR(NEWGCR)+1
 set BNGCR(NEWGCR) = BNGCR(NEWGCR)+1
 set RNGCR(NEWGCR) = RNGCR(NEWGCR)+1
	quit

VP2	// Column post-processor - [SYSDEV,DTJFMMS]OLDGCR

	type public String vc14
  type Number OLDGCR
  type public Number TOGCR(), BOGCR(), ROGCR()
  
  set OLDGCR = vc14
  if OLDGCR = ""  quit
  set TOGCR(OLDGCR) = TOGCR(OLDGCR)+1
  set BOGCR(OLDGCR) = BOGCR(OLDGCR)+1
  set ROGCR(OLDGCR) = ROGCR(OLDGCR)+1
	quit
