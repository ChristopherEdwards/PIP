V01S004(Number %ProcessMode,RecordACH1 fACH1)   //PBS - DBS - SID= <ACHBCH2> ACH Batch Record Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:25 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fACH1.exists() set fACH1 = Class.new("RecordACH1")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="ACHBCH2",VPGM=$T(+0),VSNAME="ACH Batch Record Maintenance"
 set VFSN("ACH1")="zfACH1"
 set vPSL=1
 set KEYS(1)=fACH1.COID
 set KEYS(2)=fACH1.PTYPE
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fACH1),VDA1(.fACH1),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fACH1),VPR(.fACH1),VDA1(.fACH1)
 if %ProcessMode do VLOD(.fACH1) quit:$G(ER)  do VPR(.fACH1),VDA1(.fACH1)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fACH1)
	quit


VNEW(RecordACH1 fACH1) // Initialize arrays if %O=0
 
 do VDEF(.fACH1)
 do VLOD(.fACH1)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordACH1 fACH1)
 quit:fACH1.COID.isNull() ! fACH1.PTYPE.isNull() 
 quit:%ProcessMode  set ER=0 if (fACH1.COID="")!(fACH1.PTYPE="") set ER=1,RM=$$^MSG(1767,"COID,PTYPE") Q
 if Db.isDefined("ACH1","ACH1.COID=:fACH1.COID AND ACH1.PTYPE=:fACH1.PTYPE") S ER=1,RM=$$^MSG(2327) Q
 do fACH1.setAuditFlag(1)
 if fACH1.OCAGLFLG="" set fACH1.OCAGLFLG=0
 if fACH1.ODAGLFLG="" set fACH1.ODAGLFLG=0
 if fACH1.OSC="" set fACH1.OSC=1
 if fACH1.PREAUTH="" set fACH1.PREAUTH=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordACH1 fACH1) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordACH1 fACH1) // Display screen prompts
 set VO="18||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,25,31,1,0,0,0,0,0,0)_"01T ACH Originations Batch Record "
 set VO(2)=$C(3,5,19,0,0,0,0,0,0,0)_"01T Company ID Number:"
 set VO(3)=$C(3,50,14,0,0,0,0,0,0,0)_"01T Payment Type:"
 set VO(4)=$C(4,10,14,0,0,0,0,0,0,0)_"01T Company Name:"
 set VO(5)=$C(6,24,32,2,0,0,0,0,0,0)_"01TFile (Tape) Creation Information"
 set VO(6)=$C(8,7,17,1,0,0,0,0,0,0)_"01T File Originator:"
 set VO(7)=$C(8,46,18,1,0,0,0,0,0,0)_"01T File Destination:"
 set VO(8)=$C(9,46,18,1,0,0,0,0,0,0)_"01T Lead Time (Days):"
 set VO(9)=$C(11,30,20,2,0,0,0,0,0,0)_"01TTransaction Controls"
 set VO(10)=$C(13,8,16,1,0,0,0,0,0,0)_"01T Posting Source:"
 set VO(11)=$C(13,42,22,0,0,0,0,0,0,0)_"01T Maximum Debit Amount:"
 set VO(12)=$C(14,7,17,1,0,0,0,0,0,0)_"01T Perform Preauth:"
 set VO(13)=$C(14,41,23,0,0,0,0,0,0,0)_"01T Maximum Credit Amount:"
 set VO(14)=$C(16,26,28,2,0,0,0,0,0,0)_"01TBalancing Transaction Offset"
 set VO(15)=$C(18,27,7,0,0,0,0,0,0,0)_"01TGL Acct"
 set VO(16)=$C(18,40,26,2,0,0,0,0,0,0)_"01TAccount          Tran Code"
 set VO(17)=$C(20,10,14,1,0,0,0,0,0,0)_"01T Debit Offset:"
 set VO(18)=$C(21,9,15,1,0,0,0,0,0,0)_"01T Credit Offset:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordACH1 fACH1)  // Display screen data
 new V
 //
 set VO="34|19|13|"
 set VO(19)=$C(3,25,10,2,0,0,0,0,0,0)_"01T"_$E(fACH1.COID,1,10)
 set VO(20)=$C(3,65,10,2,0,0,0,0,0,0)_"01T"_$E(fACH1.PTYPE,1,10)
 set VO(21)=$C(4,25,16,2,0,0,0,0,0,0)_"01T"_$E(fACH1.CNAME,1,16)
 set VO(22)=$C(8,25,9,2,0,0,0,0,0,0)_"00T"_$E(fACH1.FORIG,1,9)
 set VO(23)=$C(8,65,9,2,0,0,0,0,0,0)_"00T"_$E(fACH1.FDEST,1,9)
 set VO(24)=$C(9,65,1,2,0,0,0,0,0,0)_"00N"_fACH1.LEAD
 set VO(25)=$C(13,25,8,2,0,0,0,0,0,0)_"00T"_$E(fACH1.SRC,1,8)
 set V=$S(fACH1.MAXAMTD="":"",1:$J(fACH1.MAXAMTD,0,2)) set VO(26)=$C(13,65,11,2,0,0,0,0,0,0)_"00$"_$S(fACH1.MAXAMTD="":"",1:$J(fACH1.MAXAMTD,0,2))
 set VO(27)=$C(14,25,1,2,0,0,0,0,0,0)_"00L"_$S(fACH1.PREAUTH:"Y",1:"N")
 set V=$S(fACH1.MAXAMTC="":"",1:$J(fACH1.MAXAMTC,0,2)) set VO(28)=$C(14,65,11,2,0,0,0,0,0,0)_"00$"_$S(fACH1.MAXAMTC="":"",1:$J(fACH1.MAXAMTC,0,2))
 set VO(29)=$C(20,30,1,2,0,0,0,0,0,0)_"00L"_$S(fACH1.ODAGLFLG:"Y",1:"N")
 set VO(30)=$C(20,38,12,2,0,0,0,0,0,0)_"00N"_fACH1.OFFDRCID
 set VO(31)=$C(20,56,12,2,0,0,0,0,0,0)_"00T"_$E(fACH1.OFFDRETC,1,12)
 set VO(32)=$C(21,30,1,2,0,0,0,0,0,0)_"00L"_$S(fACH1.OCAGLFLG:"Y",1:"N")
 set VO(33)=$C(21,38,12,2,0,0,0,0,0,0)_"00N"_fACH1.OFFCRCID
 set VO(34)=$C(21,56,12,2,0,0,0,0,0,0)_"00T"_$E(fACH1.OFFCRETC,1,12)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordACH1 fACH1)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=16,VPT=1,VPB=21,PGM=$T(+0),DLIB="SYSDEV",DFID="ACH1"
 set OLNTB=21056
 
 set VFSN("ACH1")="zfACH1"
 //
 // 
	
	
 set %TAB(1)=$C(2,24,10)_"21T12401|1|[ACH1]COID|[ACH]|if X?1""1""9n!(X?1""3""9N)!(X?1""9""9AN)"
 set %TAB(2)=$C(2,64,10)_"21T12402|1|[ACH1]PTYPE"
 set %TAB(3)=$C(3,24,16)_"20T12423|1|[ACH1]CNAME"
 set %TAB(4)=$C(7,24,9)_"01T12401|1|[ACH1]FORIG|[UTBLACHRT]||do VP1^V01S004(.fACH1)"
 set %TAB(5)=$C(7,64,9)_"01T12402|1|[ACH1]FDEST|[UTBLACHRT]||do VP2^V01S004(.fACH1)"
 set %TAB(6)=$C(8,64,1)_"01N12414|1|[ACH1]LEAD|||||1|7"
 set %TAB(7)=$C(12,24,8)_"01T12420|1|[ACH1]SRC|[UTBLSRC]KEY:QU ""[UTBLSRC]SRCTYP=""""ACHORIG"""""""
 set %TAB(8)=$C(12,64,11)_"00$12422|1|[ACH1]MAXAMTD|||do VP3^V01S004(.fACH1)||||2"
 set %TAB(9)=$C(13,24,1)_"00L12433|1|[ACH1]PREAUTH"
 set %TAB(10)=$C(13,64,11)_"00$12421|1|[ACH1]MAXAMTC|||do VP4^V01S004(.fACH1)||||2"
 set %TAB(11)=$C(19,29,1)_"00L12432|1|[ACH1]ODAGLFLG"
 set %TAB(12)=$C(19,37,12)_"01N12410|1|[ACH1]OFFDRCID|||do VP5^V01S004(.fACH1)"
 set %TAB(13)=$C(19,55,12)_"01T12411|1|[ACH1]OFFDRETC|||do VP6^V01S004(.fACH1)|do VP7^V01S004(.fACH1)"
 set %TAB(14)=$C(20,29,1)_"00L12431|1|[ACH1]OCAGLFLG"
 set %TAB(15)=$C(20,37,12)_"01N12412|1|[ACH1]OFFCRCID|||do VP8^V01S004(.fACH1)"
 set %TAB(16)=$C(20,55,12)_"01T12413|1|[ACH1]OFFCRETC|||do VP9^V01S004(.fACH1)|do VP10^V01S004(.fACH1)"
 do VTBL(.fACH1)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordACH1 fACH1) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 /*
  Ensure that the institution is a valid file originator (based upon
  data item [UTBLACHRT]FORIG).
 */

 type Public String ER,X

 quit:X=""

 type RecordUTBLACHRT achrt=Db.getRecord("UTBLACHRT","KEY=:X")

 if achrt.getMode()=0 quit

 if 'achrt.key quit
 
 // ~p1 is not a valid file originator 
 if 'achrt.forig do Runtime.setErrMSG("ACHBCH2","3046","X") quit:ER

 quit
VP2(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 /*
  Ensure that the institution is a valid destination (based upon data
  item [UTBLACHRT]FDEST) and is not the file originator.
 */

 type Public String ER,X

 quit:X=""

 type RecordUTBLACHRT achrt=Db.getRecord("UTBLACHRT","KEY=:X") 

 if achrt.getMode()=0 quit

 if 'achrt.key quit

 // ~p1 is not a valid destination
 if 'achrt.fdest do Runtime.setErrMSG("ACH1","3045","X") quit:ER

 // ~p1 is the file originator
 if X=fACH1.forig do Runtime.setErrMSG("ACH1","3051","X") quit:ER

 quit
VP3(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   --------------------------------------------------------------------- 
 */

 type Public String ER,X

 // Cannot be a negative amount
 if X<0 do Runtime.setErrMSG("ACH1","415") quit:ER

 quit
VP4(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */
 
 type Public String ER,X
 
 // Cannot be a negative amount
 if X<0 do Runtime.setErrMSG("ACH1","415") quit:ER
 
 quit
VP5(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */
 
 type Public String ER,RM,X

 quit:X=""

 if fACH1.odaglflg do {  quit:ER

	type RecordGLAD glad=Db.getRecord("GLAD","ACN=:X",1)
	
	// Invalid bank G/L account number
	if 'glad.acn do Runtime.setErrMSG("ACH1","1268") quit:ER
	else  set RM=glad.desc1
	}
 else  do {
	
	type Number CID

	do CID^UACN1 quit:ER
	
	type RecordACN acn=Db.getRecord("ACN","CID=:X")

	set RM=acn.title1
	}
 quit
VP6(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
	03/23/06 - RussellDS - CR16892
		   Move code from obsoleted DTYPE_DRTC post-processor
		   library in-line.

		   Remove old revision history.
   ---------------------------------------------------------------------
 */

 type Public String X

 type Number TRB
 type String X1

 quit:X.isNull()
 
 // Lowercase transaction codes protected
 if X?.E1L.E do Runtime.setErrMSG("TRN", 1663) quit
 
 // Debit/credit indicator
 type RecordTRN trn = Db.getRecord("TRN", "ETC=:X", 1)
 set X1 = trn.itc

 // Invalid transaction code ~p1
 if X1.isNull() do Runtime.setErrMSG("TRN", 1498, X) quit
 set X1 = trn.itc.extract()

 // TRB indicator from account type
 set TRB = $$TRB^UTRB(CID.get())
 
 // If this is an increase, is no good
 if $$DC^UTRB(X1,TRB) do { quit:ER
        //Transaction code for ~p1 must be a credit
        if TRB do Runtime.setErrMSG("TRN", 2695, X) quit
        // Transaction code for ~p1 must be a debit
        else  do Runtime.setErrMSG("TRN", 2696, X) quit
 }
 quit



VP7(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------

	05/31/06 - MBUIM - CR 21548
	           The column trn.ucls is a computed that expects a 
		   system variable (%UCLS) to be around. This is no 
 	           longer feasible in an oracle environment. Column will 
		   be obsolete and hence direct reference to the function.
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */

 /*
  If not a GL account (based on GL account flag (ODAGLFLG)), set class and
  group and build lookup table.  If GL account, set class to "M" and loop
  through TRN to build lookup table.
 */
 
 type String CLS,GRP
 type Number CID

 kill XETC
 set CID=fACH1.offdrcid

 if 'fACH1.ODAGLFLG do { quit
	type RecordACN acn=Db.getRecord("ACN","CID=:CID",1)
	set CLS=acn.cls
	set GRP=acn.grp
	do CHANGE^DBSMACRO("TBL","[TRN]")
	}
  
 type ResultSet rs=Db.select("ETC,SGT","TRN","CLS='M'")
 if rs.isEmpty() quit
 while rs.next() set XETC(rs.getCol(1))=rs.getCol(2)_"|"_$$XTRNUCLS^PROCOMP(ETC)

 do CHANGE^DBSMACRO("TBL","XETC(")

 quit
VP8(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */
 
 type Public String ER,RM,X
 
 quit:X=""
 
 if fACH1.ocaglflg do {  quit:ER
 
        type RecordGLAD glad=Db.getRecord("GLAD","ACN=:X",1)

        // Invalid bank G/L account number
        if 'glad.acn do Runtime.setErrMSG("ACH1","1268") quit:ER
        else  set RM=glad.desc1
        }
 else  do {
 
        type Number CID
 
        do CID^UACN1 quit:ER
 
        type RecordACN acn=Db.getRecord("ACN","CID=:X")
 
        set RM=acn.title1
        }
 quit

VP9(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
        03/23/06 - RussellDS - CR16892
                   Move code from obsoleted DTYPE_CRTC post-processor
                   library in-line.
 
                   Remove old revision history.
   ---------------------------------------------------------------------
 */
 
 type Public String X
 type Number DC, TRB
 type String X1

 if X.isNull() quit

 if X?.E1L.E do Runtime.setErrMSG("TRN", 1663) quit
 type RecordTRN trn=Db.getRecord("TRN", "ETC=:X", 1)
 set X1 = trn.itc

 // Invalid transaction code ~p1
 if X1.isNull() do Runtime.setErrMSG("TRN", 1498, X) quit
 set X1 = trn.itc.extract()

 // TRB field from the acct. def
 set TRB = $$TRB^UTRB(CID.get())

 // Increase/decrease indicator
 set DC = $$DC^UTRB(X1, TRB)
 
 // If this is a DECREASE, is no good
 if 'DC do { quit:ER
 
        // Transaction code for ~p1 must be a debit
        if TRB do Runtime.setErrMSG("TRN", 2696, X) quit
 
        // Transaction code for ~p1 must be a credit
        do Runtime.setErrMSG("TRN", 2695, X) quit
  }

  quit





VP10(RecordACH1 fACH1) //
 /*
 
   ---- Revision History------------------------------------------------
 
	05/31/06 - MBUIM - CR 21548
		   The column trn.ucls is a computed that expects a
		   system variable (%UCLS) to be around. This is no
		   longer feasible in an oracle environment. Column will
		   be obsolete and hence direct reference to the function.

        12/19/04 - KELLYP - CR 13662
                Converted to PSL
 
   ---------------------------------------------------------------------
 */
 
 /*
  If not a GL account (based on GL account flag (ODAGLFLG)), set class and
  group and build lookup table.  If GL account, set class to "M" and loop
  through TRN to build lookup table.
 */
 
 type String CLS,GRP
 type Number CID

 kill XETC
 set CID=fACH1.offcrcid
 
 if 'fACH1.OCAGLFLG do { quit
        type RecordACN acn=Db.getRecord("ACN","CID=:CID",1)
        set CLS=acn.cls
        set GRP=acn.grp
        do CHANGE^DBSMACRO("TBL","[TRN]")
        }

 type ResultSet rs=Db.select("ETC,SGT","TRN","CLS='M'")
 if rs.isEmpty() quit
 while rs.next() set XETC(rs.getCol(1))=rs.getCol(2)_"|"_$$XTRNUCLS^PROCOMP(ETC)
 
 do CHANGE^DBSMACRO("TBL","XETC(")
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordACH1 fACH1
 do VPR(.fACH1)
 do VDA1(.fACH1)
 do ^DBSPNT()
 quit

VW(RecordACH1 fACH1)
 do VDA1(.fACH1)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordACH1 fACH1)
 do VDA1(.fACH1)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordACH1 fACH1
 do VDA1(.fACH1)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordACH1 fACH1
 if sn="ACH1" do vSET1(.fACH1,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordACH1 fACH1,di,X)
 do fACH1.setAuditFlag(1)
 set fACH1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordACH1 fACH1
 if fid="ACH1" quit $$vREAD1(.fACH1,di)
 quit ""
vREAD1(RecordACH1 fACH1,di)
 quit fACH1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
