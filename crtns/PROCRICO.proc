PROCRICO
	/*
	 Procedure ID: EFTRICO
	 DESC: EFTRICO Utilities
	
	 This procedure creates a new EFTPAY record if the user corrects the
	 account number of an EFTPAY record or makes a partial payment.  This
	 section creates a new record for a changing account number.
	----------------------------------------------------------------------  

	----- Revision History -----------------------------------------------

	05/08/06 - KELLYP - CR 21134
		Modified NEWACCT section to set the mode of the eftpay2 (copied)
		object to 0 (create).  This prevents a "RECNOFL" error when the 
		object is saved.  Fixed a similar problem in section PP and 
		converted rest of procedure to current PSL standards.  Also 
		removed pre-2003 revision history.

	----------------------------------------------------------------------  
	*/
	quit

public NEWACCT(Number CID,Number SEQ,Number CRCTACCT,Number CRCTGL)

	/*
	 Create a new EFTPAY record with new account number
	*/

	type public Boolean ER

	type Number NEWCID

	// Get the changing account number
	if 'CRCTACCT.get().isNull() set NEWCID=CRCTACCT
	if 'CRCTGL.get().isNull() set NEWCID=CRCTGL

	// Do nothing if there is no new account number.
	if NEWCID.isNull() quit ""

	type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID=:CID,SEQ=:SEQ")
	type RecordEFTPAY eftpay2=eftpay.copy()
	
	// Set mode of copied object to "0" to force create mode
	do eftpay2.setMode(0)

	// Change account numbers and sequence
	set eftpay2.cid=NEWCID
	set eftpay2.origcid=CID
	set eftpay2.seq=Db.nextVal("EFTPAY","NEWCID")
	set eftpay2.origseq=SEQ

	// Update other fields
	set eftpay2.status="A"
	set eftpay2.repost=""
	set eftpay2.reject=""
	set eftpay2.crctacct=""
	set eftpay2.crctgl=""
	set eftpay2.efd=%SystemDate

	// Check if ttype changed
	if 'CRCTACCT.isNull() do {
		if eftpay2.ttype=2 set eftpay2.ttype=0
		if eftpay2.ttype=3 set eftpay2.ttype=1
		}
	else  do {
		if eftpay2.ttype=0 set eftpay2.ttype=2
		if eftpay2.ttype=1 set eftpay2.ttype=3
		}

	// Save the new record
	do eftpay2.save()

	if ER.get()=1 quit ""

	// Quit with account number and sequence.
	quit eftpay2.cid_"|"_eftpay2.seq 


public PP(Number CID,Number SEQ,Number PARTPMT)

	/*
	 Create new partial payment record
	*/

	type public Boolean ER

	type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID=:CID,SEQ=:SEQ")
	type RecordEFTPAY eftpay2=eftpay.copy()
	
	do eftpay2.setMode(0)

	if eftpay.rempay.isNull() set eftpay.rempay=eftpay.amount
	
	// Partial payment exceeds allowable amount
	if PARTPMT>(eftpay.rempay-eftpay.tpaawcmp) do Runtime.setErrMSG("EFTPAY","2504") quit ""

	// Change account numbers and sequence
	set eftpay2.cid=CID
	set eftpay2.seq=Db.nextVal("EFTPAY","CID")
	set eftpay2.origseq=SEQ

	// Set the amount and partial payment flag.
	set eftpay2.amount=PARTPMT
	set eftpay2.prtpmt=1

	// Some data items not needed for a partial payment. 
	set eftpay2.procdt=""
	set eftpay2.datecre=""
	set eftpay2.lppdate=""
	set eftpay2.totpaid=""
	set eftpay2.daysoutstndg=""
	set eftpay2.rempay=""
	set eftpay2.partamt=""
	set eftpay2.reject=""
	set eftpay2.repost=""
	set eftpay2.tpaawcmp=""			
	set eftpay2.status="A"
	set eftpay2.tries=""
	set eftpay2.efd=%SystemDate

	// Save the new record
	do eftpay2.save()
	if ER.get()=1 quit ""

	// Quit and return the sequence number.
	quit eftpay2.seq

vSIG()	quit "60393^46430^Pat Kelly^3178"	// Signature - LTD^TIME^USER^SIZE
