public	LNPTS12(RecordLN ln, RecordTTX ttx)

	/*
	---- Revision History -------------------------------------------------
	
	11/13/06 - KELLYP - CR 23888
		   Modified POSTADJ to properly set up the TSO fields for the
		   late charge adjustment transactions with the "OFFST" value
		   for reversing the late charge.  This enables the offset to
		   the adjustment to be reversed by LNUEFD which fixes an OOB.
		   
	09/15/06 - KELLYP - CR 23117
		   Modified POSTADJ to protect the %EffectiveDate reference
		   to prevent an UNDEFINED error.  Also modified the POSTADJ
		   section to return a more descriptive error message if a 
		   late charge trancode is missing from the product definition.
	
	01/27/06 - SmithCD - CR 19343 (16890)
		   Removed %NOREV references, which is no longer used and is 
		   invalid for late charges. Late charges should be reversed 
		   on subsequent backdated transactions. Removed initilization 
		   and passing of ttxpri to POST^LNTRB (ttx is the primary 
		   transaction in the context of ^LNTRB).

	05/23/05 - KUMARB - CR 16072
		   In section POSTADJ, added parameter %EffectiveDate in
		   all the calls to POST^LNTRB. Added parameter TSO in 
		   the second call to POST^LNTRB. Added empty parameter 
		   next to TSO in all the calls to POST^LNTRB.
	
	01/13/04 - CARROLJ - CR7901
		   Remove ttxpri object from POSTADJ section.

	-----------------------------------------------------------------------
	*/

	do INIT(.ln,.ttx)

	quit


INIT(RecordLN ln, RecordTTX ttx)

	// Initialization
	
	new LCHG,POPT,X
	
	set LCHG=$$FIELD^UTSO(ttx.tso,"LCEFDAMT")
	if LCHG="" set LCHG=ln.lchg
	if 'LCHG quit 
	
	// Interest Calc Principal Adjustments
	set ICPA=ln.icpa
	type RecordUTBLICPA utblicpa=Db.getRecord("UTBLICPA","KEY=:ICPA")

	/*
	The POPT section might adjust the late charge amount by
	interrogating the minimum and maximum values and generating
	transactions to increase or decrease LCHG.  The variable %LCHG
	will be the late charge value after any adustments.
	*/

	set %LCHG=LCHG
	if ln.popt'="" do POPT(.ln,.ttx,.%LCHG) quit:ER 

	set X=$S(ZAMT<%LCHG:ZAMT,1:%LCHG) if 'X set ln.lchg=ln.lchg-(LCHG-%LCHG) quit 
	
	do GL^LNPTSU(.ttx,X,4)
	
	set %LCHG=%LCHG-X
	
	do REDUCBL^LNPTS13(.ln,.ttx,"L",X)
	set ZAMT=ZAMT-X
	set ln.ppl=ln.ppl+X

	new FIN1,YEOFF,TAX1,TAXYEOFF
	set FIN1=$$BOFY^SCADAT(CUVAR2,1)
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set YEOFF=cuvar.yeoff
	set TAXYEOFF=cuvar.taxyeoff
	set TAX1=$$BOTY^SCADAT(CUVAR2,1)

	if (YEOFF)&(%EffectiveDate<FIN1)&(CUVAR2'>(FIN1+YEOFF-1)) set ln.ppy=ln.ppy+X
	else  set ln.pytd=ln.pytd+X
	if (TAXYEOFF)&(%EffectiveDate<TAX1)&(CUVAR2'>(TAX1+TAXYEOFF-1)) set ln.penpty=ln.penpty+X
	else  set ln.pentytd=ln.pentytd+X
	if $E(utblicpa.prio,6) set ln.balint=ln.balint-X
	
	// Add late charge entry into history sub record
	do %HSEQ^LNPTSU(.ttx,"*#L#"_X)
	
	set ln.lchg=ln.lchg-(LCHG-%LCHG)

	quit 

	
POPT(RecordLN ln, RecordTTX ttx, Number LCHG)

	// Process Penalty Option

	new LCHGADJ,TAMT
	
	// Calculate min/max adjustment
	set LCHGADJ=$$LCHGADJ^LNPO2(.ln,CID,LCHG)
	set TAMT=LCHGADJ-LCHG
	if 'TAMT quit 
	
	set LCHG=LCHG+TAMT
	
	// Make account late charge adj
	do POSTADJ(.ln,.ttx,TAMT)

	quit 

	
public	POSTADJ(RecordLN ln, RecordTTX ttx, Number TAMT)

	/*
	Arguments:
	. ln	Loan Object			/TYP=RecordLN/REQ/REF:RW
	. ttx	Original Transaction Object	/TYP=RecordTTX/REQ/REF:RW
	. TAMT	Transaction Amount		/TYP=N/REQ

	*/
	
	type Boolean DRCR,TRB
	type Number TYPE
	type String COL,GLTC,SAVOFFST,TC,TSO
	
	if %EffectiveDate.get().isNull() set %EffectiveDate=%SystemDate

	set TYPE=ln.type
	type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE")

	// DR Late Charge Tran Code
	if TAMT>0 do {
		set TC=prodctl.drtrpe 
		set DRCR=1
		set COL="[PRODCTL]DRTRPE"	// Needed for error below
		}
	// CR Late Charge Reduction Tran	
	else  if TAMT<0 do {
		set TC=prodctl.crtlcr
		set TAMT=-TAMT
		set DRCR=0
		set COL="[PRODCTL]CRTLCR"	// Needed for error below
		}

        // Product ~p1 missing transaction code - ~p2
        if TC.isNull() do ETCERR^TTXEXT(TYPE,COL) quit:ER

	set TSO="LCHGADJ#"

	set TRB=ln.trb
	set GLSC=ln.glsc

	type RecordUTBLGLSC utblglsc=Db.getRecord("UTBLGLSC","GLSC")
	if DRCR set GLTC=$select(TRB:"MCR",1:"MDR")
	else  set GLTC=$select(TRB:"MDR",1:"MCR")
	
	// Set OFFST info into Late Charge transaction
	set SAVOFFST=GLTC_":"_utblglsc.lgll
	set TSO=$$FIELDIN^UTSO(TSO,"OFFST",SAVOFFST)

	// Process Late Charge transaction
	do POST^LNTRB(.ttx,ln.cid,TC,TAMT,%EffectiveDate,%UserStation,TSO,"",ln.crcd) quit:ER
	
	/*
	 Save dummy OFFST value to offset transaction so HIS4^LNPTS1 doesn't 
	 create a HISTLST record. Reversing the late charge adjustment will
	 reverse the offset (LNUEFD processing) instead of reversing these
	 as true secondaries (REVSEC^LNPTSR processing).
	*/
	
	set TSO = ""
	set TSO = $$FIELDIN^UTSO(TSO,"OFFST","LCHGOFFSET")
	
	// Process Late Charge Income G/L transaction (	// Loan G/L # (Late Charge Inc))
	do POST^LNTRB(.ttx,utblglsc.lgll,GLTC,TAMT,%EffectiveDate,%UserStation,TSO,"",ln.crcd) quit:ER 

	quit 

vSIG()	quit "60582^61882^Pat Kelly^4849"	// Signature - LTD^TIME^USER^SIZE
