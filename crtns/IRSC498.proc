IRSC498		/*
	ORIG: titove - 11/04/2005
	DESC: IRS Processing - Form 5498 Correction

	---- Comments --------------------------------------------------------
			  THIS PROCEDURE IS TO BE COMPILED
			      DO NOT RUN STANDALONE

	I18N=QUIT: Excluded from I18N standards.

	---- Revision History ------------------------------------------------
	
	05/05/06 - TITOVE - CR 21146
		   Modified BRECBLD to ensure we have pieces in IRA(1) array
		   that directly correspond to columns in IRA table.

	04/19/06 - RussellDS - CR20209
		   Remove code related to obsoleted Mutual Funds/Securities.
		   
		   Modified BRECBLD section to append RPASEQ when building a 
		   value for CID, instead of IRATYP.

	04/07/06 - TITOVE - CR 20641	
		   Modified BRECBLD to initialize FMV and PYBAL to prevent
		   undefined errors.

	11/04/05 - TITOVE - CR 17287
		   Converted into PSL. Removed tags ACN, INV1, JD, RPASEQ
		   and pre-2005 revision history.

	07/05/05 - DHANALAKSHMI R - 14064
		   Modified the section RPASEQ by adding a loop through 
		   the RPAMCZC table on the MCZC and MCZYR levels to form 
		   the string BSPECMCZ in the format 
		   "<MCZC> <MCZYR> <AMT>  <MCZC> <MCZYR> <AMT>", only 
		   if the variable IRA(+1).C17 is not null. The string 
		   BSPECMCZ has been set to null if IRA(+1).C17 is null.
		   The string BSPECMCZ has been used to update the 
		   special format positions 663-722 in the output file
		   and the file B5498.

	*/
	
        // Accept "Dead code" warning during runtime of @IRSTAPE
        #ACCEPT Date=10/26/2005;PGM=Eugene Titov;CR=17287
        quit
        
	
MTRCNTRL	// Master control

	type public Number ER
	
	type Number PASSFLG

	do Db.delete("B5498")

	set PASSFLG = 1
		
	do ARECBLD quit:ER	// Build and write the "A" record - First pass
	do BRECBLD quit:ER	// Build and write the "B" records - First pass
	do CRECBLD quit:ER	// Build and write the "C" record - First pass
	
	set PASSFLG = 2
		
	do ARECBLD quit:ER	// Build and write the "A" record - Second pass
	do BRECBLD quit:ER	// Build and write the "B" records - Second pass
	do CRECBLD quit:ER	// Build and write the "C" record - Second pass
		
	do STORETOT		// Store the TTR report totals
		
	quit
	

ARECBLD	// "A" record builder

	type public String TAMT()

	type Number AMTIND, FORMCODE

	set FORMCODE = "L"		// IRS form code
	
	set AMTIND = "1234589A"		// IRS amount type indicators
	
	set TAMT(1).piece("|",2) = "Regular IRA Contributions"
	set TAMT(2).piece("|",2) = "Rollover Contributions"
	set TAMT(3).piece("|",2) = "Roth Conversion Contributions"
	set TAMT(4).piece("|",2) = "Recharacterized Contributions"
	set TAMT(5).piece("|",2) = "Fair Market Value"
	set TAMT(8).piece("|",2) = "SEP Contributions"	
	set TAMT(9).piece("|",2) = "SIMPLE Contribution"
	set TAMT("A").piece("|",2) = "Roth IRA Contributions"
	
	do ARECWRT			// Write the record to tape
	
	quit
	

BRECBLD	// "B" record builder

	type public Number AMT(), BRAMT(), IRATYP, PASSFLG, YEAR
	type public String FORM, FORMS()

	type Date JD
	type Number BSEQ, CID, FMV, I, IBAL, PYBAL, RPASEQ, STATEID, TAXYR, TAXYR1
	type Number TOT, ZACN
	type String ACN, ADDR, BSPECMCZ, CITY, CNTRY, CORRTN, DOCCODE, FORCNTY, IRA()
	type String IRAROLL, FULLADDR, LNAME, MCZC, NAME, RMDIND, ROIRAROLL, SIMPLEROLL
	type String SIN, SEPROLL, SPECIAL, STATE, TIN, TINTYPE, VAR, X, ZIP

	set JD = FORMS(FORM)-1
	
	type DbSet ds = Db.selectDbSet("IRSUPD","TJD>:JD AND FTYPE=6")

	while ds.next() do {
	
		type RecordIRSUPD irsupd = ds.getRecord("IRSUPD")
		
		set ZACN = irsupd.miscseq
		set RPASEQ = irsupd.bseq
		
		type RecordIRATYPE iratype = Db.getRecord("IRATYPE", "ACN = :ZACN,RPASEQ = :RPASEQ", 1)

		set IRATYP = iratype.iratyp
	
		if (IRATYP = 3)!(IRATYP = 12) quit	// Skip Keogh's and Coverdell
		
		// Skip duplicates when writting to tape
		if (irsupd.ccode = 1),(PASSFLG = 1) quit
		// Skip "New Entry" for first pass
		if (irsupd.ccode = 4),(PASSFLG = 1) quit
		// Skip "change amount" for second pass
		if (irsupd.ccode = 3),(PASSFLG = 2) quit

		set FMV = ""
		set PYBAL = ""

		// Original/New CIF number
		set ACN = $select(PASSFLG=1:irsupd.ocif,PASSFLG=2:ZACN)
		
		set TAXYR1 = YEAR + 1
		
		// Initialize IRA(1) array up to a total number of IRA columns
		for I = 1:1:17 set IRA(1).piece("|",I) = ""

		type RecordIRA ira = Db.getRecord("IRA","ACN = :ACN,RPASEQ = :RPASEQ,TAXYR = :YEAR", 1)
		
		for I = 1:1:5,7:1:17 do {
			
			set VAR = "C"_I
			set IRA(1).piece("|",I) = ira.@VAR
			}
				
		type RecordIRA ira1 = Db.getRecord("IRA", "ACN = :ACN,RPASEQ = :RPASEQ,TAXYR = :TAXYR1", 1)

		// Calculate IRA Balance at Year-End
		set TAXYR = YEAR		
		do ^IRAYEBAL

		type RecordCIF cif = Db.getRecord("CIF", "ACN = :ACN", 1)

		set CID = ACN_"-"_RPASEQ		// Account number (sequence number)
		
		set TIN = $select(PASSFLG=1:irsupd.otin,PASSFLG=2:cif.taxid) // Tax ID number
		
		set TINTYPE = $select(TIN?2N1"-"7N:1,TIN?3N1"-"2N1"-"4N:2,1:" ") // Type of TIN
		
		// The rest of AMT() entries are initialized at the top of template routine
		// Regular Contributions
		set AMT(1) = $select((PASSFLG=1)&(irsupd.ccode=2):0,1:IRA(1).piece("|",1)+ira1.c2+IRA(1).piece("|",9)+IRA(1).piece("|",13)+ira1.c10)
		
		// SEP Contributions
		if (IRATYP = 4) set AMT(1) = $select((PASSFLG=1)&(irsupd.ccode=2):0,1:IRA(1).piece("|",1)+IRA(1).piece("|",13)+IRA(1).piece("|",2)+IRA(1).piece("|",9)+IRA(1).piece("|",10))
	
		set AMT(1) = AMT(1)*100
		
		// Rollover Contributions
		set AMT(2) = $select(PASSFLG=1&(irsupd.ccode=2):0,1:IRA(1).piece("|",4))*100
		set AMT(3) = IRA(1).piece("|",15)*100	// Roth conversion
		set AMT(4) = IRA(1).piece("|",14)*100	// Recharacterized Contribution
		set AMT(5) = $select(PASSFLG=1&(irsupd.ccode=2):0,1:FMV*100) // Fair market value

		if (IRATYP = 4) set AMT(8) = AMT(1) set AMT(1) = 0     // SEP Contributions
		else  set AMT(8) = 0

		if (IRATYP = 11) set AMT(9) = AMT(1) set AMT(1) = 0    // SIMPLE Contribution
		else  set AMT(9) = 0

		if (IRATYP = 13) set AMT("A") = AMT(1) set AMT(1) = 0  // Roth IRA Contributions
		else  set AMT("A") = 0
	
		set (IRAROLL,ROIRAROLL,RMDIND,SEPROLL,SIMPLEROLL) = " "

		if ((IRATYP = 1)!(IRATYP = 2)!(IRATYP = 10)),((AMT(2) > 0)!(AMT(5) > 0)) set IRAROLL = 1
		if (IRATYP = 4),((AMT(2) > 0)!(AMT(5) > 0)) set SEPROLL = 1
		if (IRATYP = 11),((AMT(2) > 0)!(AMT(5) > 0)) set SIMPLEROLL = 1
		if (IRATYP = 13),((AMT(2) > 0)!(AMT(5) > 0)) set ROIRAROLL = 1
		
		if (IRATYP '=  13),(IRATYP '=  15) do {
			
			if ira.madamt set RMDIND = 1 quit

			if (cif.dob < $$DSJD^SCADAT("07/01/"_(YEAR-69))) set RMDIND = 1
			}

		set DOCCODE = "  "		// Document specific code
		set CORRTN = $select(PASSFLG=1:"G",PASSFLG=2:"C")
		set NAME = $select(PASSFLG=1:irsupd.oname,PASSFLG=2:cif.nam)
		set LNAME = $select(PASSFLG=1:irsupd.olnam,PASSFLG=2:cif.lnm)

		set FULLADDR = $$FULLADDR^RSPADD(ACN,RPASEQ)
		
		set ADDR = FULLADDR.piece("|",1)_" "_FULLADDR.piece("|",2)_" "_FULLADDR.piece("|",3)
		set CITY = FULLADDR.piece("|",4)	// Payee City
		set STATE = FULLADDR.piece("|",5)	// Payee State
		set ZIP = FULLADDR.piece("|",6).piece("-",1)_FULLADDR.piece("|",6).piece("-",2)  // Payee
		set CNTRY = FULLADDR.piece("|",7)	// Foreign country
		set FORCNTY = $select(FULLADDR.piece("|",7)="US":" ",1:1) // Foreign country indicator		

		// Military Combat Zone Contributions
		set BSPECMCZ = ""
		
		if 'ira1.c17.isNull() do {

			type ResultSet rs = Db.select("MCZC","UTBLMCZC")
			
			while rs.next() do {
				
				set MCZC = rs.getCol("MCZC")
				
				type DbSet dszc = Db.selectDbSet("RPAMCZC","ACN=:ACN AND RPASEQ=:RPASEQ AND TAXYR=:TAXYR1 AND MCZC=:MCZC")
				
				while dszc.next() do {
					
					type RecordRPAMCZC mczc = dszc.getRecord("RPAMCZC")
					
					set BSPECMCZ = BSPECMCZ_MCZC_" "_mczc.mczyr_" "_mczc.mczcamt_"  "
					}
				}
			}
				
		set BSPECMCZ = (BSPECMCZ_"".justify(60)).extract(1,60)

		// Special date position 544-750
		//; Blank |544|546
		set SPECIAL = "   "
		//; Individual Retirement Account (IRA) indicators|547
		set SPECIAL = SPECIAL_IRAROLL
		//; Simplified Employee Pension (SEP) Indicators|548
		set SPECIAL = SPECIAL_SEPROLL
		//; Saving Incentive Match PLan for Employee (SIMPLE) Indicator|549
		set SPECIAL = SPECIAL_SIMPLEROLL
		//; ROTH IRA Indicator|550
		set SPECIAL = SPECIAL_ROIRAROLL
		//; RMD Indicator|551
		set SPECIAL = SPECIAL_RMDIND
		//; Blank |552|662
		set SPECIAL = SPECIAL_"".justify(111)
		//; Special data entries|663|722
		set SPECIAL = SPECIAL_BSPECMCZ
		//; Blank |723|750
		set SPECIAL = SPECIAL_"".justify(28)
		
		// Skip duplicates
		if (irsupd.ccode '=  1) do BRECWRT

		// Insert B Record data into B5498 table

		// If change in taxid, check the entry with new taxid.
		// If zero amounts, skip the entry.
		set TOT = 0
		
		for I = 1,2,3,4,5,8,9,"A" set TOT = TOT + AMT(I)
		
		if 'TOT,(irsupd.ccode = 2),(PASSFLG = 2) quit

		set SIN = $select(PASSFLG=1:irsupd.otin,PASSFLG=2:cif.taxid)

		if (TINTYPE = 2) set X = LNAME
		else  set X = NAME
		
		do NAMCNTRL^IRSTPMTR		// Format name
		
		set BSEQ = Db.nextVal("B5498","PDATE=:JD,BACN=:ACN")
		
		// B Record-IRS 5498 Form Data
		type RecordB5498 b5498 = Db.getRecord("B5498", "PDATE = :JD, BACN = :ACN, BSEQ = :BSEQ", 1)
		
		set b5498.bnamcon = X
		set b5498.btintype = TINTYPE
		set b5498.btin = SIN.translate(" ","-")
		set b5498.bcid = CID
		set b5498.bamt1 = AMT(1) / 100
		set b5498.bamt2 = AMT(2) / 100
		set b5498.bamt3 = AMT(3) / 100
		set b5498.bamt4 = AMT(4) / 100
		set b5498.bamt8 = AMT(8) / 100
		set b5498.bamt9 = AMT(9) / 100
		set b5498.bamta = AMT("A") / 100
		set b5498.bname = NAME
		set b5498.baddr1 = ADDR.piece(" ",1)
		set b5498.baddr2 = ADDR.piece(" ",2)
		set b5498.baddr3 = ADDR.piece(" ",3)
		set b5498.bcity = CITY
		set b5498.bstate = STATE
		set b5498.bzip = FULLADDR.piece("|",6)
		set b5498.biraind = IRAROLL
		set b5498.bsepind = SEPROLL
		set b5498.bsimind = SIMPLEROLL
		set b5498.rothind = ROIRAROLL
		set b5498.rmd = RMDIND
		set b5498.bamt5 = AMT(5) / 100
		set b5498.bspecmcz = BSPECMCZ
		
		do b5498.save()
		}
	
	quit
	

CRECBLD	// "C" record builder

	do CRECWRT	// Write the record to tape

	quit


%STOPLOD	// Stop %ZRTNLOD from this point on down
	quit
TRECWRT	// Dummy line reference for GT.M
	quit
ARECWRT	// Dummy line reference for GT.M
	quit
BRECWRT	// Dummy line reference for GT.M
	quit
CRECWRT	// Dummy line reference for GT.M
	quit
STORETOT	// Dummy line reference for GT.M
	quit

vSIG()	quit "60390^50463^Eugene Titov^10041"	// Signature - LTD^TIME^USER^SIZE
