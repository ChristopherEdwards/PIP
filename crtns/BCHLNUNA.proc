BCHLNUNA //Batch BCHLNUNAPF - Unapplied Funds Reversal
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHLNUNAPF Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHLNUNAPF")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHLNUNAPF") quit
 do JOBMGR^BCHUTL(%FN,"BCHLNUNAPF",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHLNUNAPF")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(BNDT,CID) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHLNUNAPF","*","",BNDT.get()_","_CID.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHLNUNAPF",BNDT.get()_","_CID.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHLNUNAPF",BNDT.get()_","_CID.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,BNDT,CID)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHLNUNAPF","*","",BNDT.get()_","_CID.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHLNUNAPF",BNDT.get()_","_CID.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,BNDT,CID) //
 	do PROCESS
        quit

PROCESS //

	type RecordLN ln
	set ln=Db.getRecord("LN","CID")
	set UNAPF=ln.UNAPF	
	set DPMT=ln.DPMT	
	set PPA=ln.PPA		
	set TAMT=DPMT-PPA
	set CRCD=ln.CRCD
	set TYPE=ln.TYPE

	if UNAPF<TAMT quit  	//Not enough unapplied funds for a full payment
	if 'TAMT quit 

	type RecordPRODCTL prodctl
	set prodctl=Db.getRecord("PRODCTL","TYPE")
	
	// Debit tran code to reverse unapplied funds
	set ETC0=prodctl.drtrmu                         //JT/DR 8/20/99
	type RecordTRN trn
	set trn=Db.getRecord("TRN","ETC0")
	
	set ITC0=trn.ITC
	

	// Credit tran code to apply full payment
	set ETC1=prodctl.crtrgp
        type RecordTRN trn1
        set trn1=Db.getRecord("TRN","ETC1")
	set ITC1=trn1.ITC

	new ts,tts,TTXBLD
  	type TranSet ts
	set ts=Class.new("TranSet")
	type RecordTTX ttx()

        set TTXBLD("CID")=CID
        set TTXBLD("ETC")=ETC0
        set TTXBLD("TAMT")=TAMT
        set TTXBLD("EFD")=EFD
        set TTXBLD("TSO")=$G(TSO)
        I CRCD'="" set TTXBLD("CRCD")=CRCD
        else  set TTXBLD("CRCD")=%SystemCurrency
	set TTXBLD("TLO")=$G(TLO)
        set TTXBLD("ITC")=ITC0
        set ttx(1)=Class.new("RecordTTX")
        set x=ts.copyTran(ttx(1),.TTXBLD)
	
        set TTXBLD("ETC")=ETC1
	set TTXBLD("ITC")=ITC1	
        set ttx(2)=Class.new("RecordTTX")
        set x=ts.copyTran(ttx(2),.TTXBLD)
	         
        set par("IPMODE")=3             // System generated
        set par("OPTION")=2             // Process transactions; update databas^
	set TPD=TJD
        do ts.postTSet(TPD,BRCD,.par)
        quit

 
LOGERR  // Log error in exception file
        // Unapplied Funds Posting
        do LOG^UTLEXC($T(+0),"*",$$^MSG("4254"),$G(CID),$G(%ZTSEQ),$G(ET))
        kill ET,%ZTSEQ
        quit	
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,BNDT,CID
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set BNDT=vRECORD.piece($C(9),1)
 set CID=vRECORD.piece($C(9),2)
 do vPROC(BNDT,CID)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,BNDT,CID
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32767 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+26>32767 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("BNDT,CID","DAYENDUF","DAYENDUF.BNDT=:TJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	set EFD=%SystemDate
	// Check flag to post on non-business days and end-of-month posting option.
	do SOURCE^BCHSOURC("BOFF","UF",.%UserID,.BRCD,.%UserClass)

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
	new %UserID,BRCD,UCLS

	// Check flag to post on non-business days and end-of-month posting option.
	do SOURCE^BCHSOURC("BOFF","UF",.%UserID,.BRCD,.%UserClass)
        if ER quit

	set TPD=%SystemDate
	do ^TTXLOK
        if ER quit 
	
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
