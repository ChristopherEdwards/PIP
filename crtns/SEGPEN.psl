SEGPEN		/*
	    ---- Revision History ------------------------------------------------
	 	
	   05/04/07 - SANTHUMS - CR 26828
	  	      . Modified PEN section to add quit with 0, since section 
	  	        should return value while quitting.
	  	      . Modified PEN section to remove OR condition from while 
	  	        loop and added quit:(TOTAMT=0). 
	   
	   10/13/05 - RADHIKA - 16891 
                      .Eliminated PSL deprecated features and Warnings.
                      .Removed revision history prior to 2004.
	
	   LIBRARY
	   $$PEN	- Non-Matured Principal Withdrawal penalty calculation
	   $$CALC	- Calculate penalty amount 
	*/
	
	quit

private PEN(CID,TAMT,AUTNUM)	// Non-Matured Principal Withdrawal penalty calculation for segmented accounts
	
	/* This procedure will be used to calculate default penalty amount
	   for the Non-Matured Principal Withdrawal.
	
	   ARGUMENTS:
	       . CID	Account Number		/TYP=N/REQ/MECH=VAL
	
	       . TAMT	Total Amount		/TYP=N/REQ/MECH=VAL
	
	       . AUTNUM Authorization Number	/TYP=N/REQ/MECH=VAL
	
	   RETURNS:
	       . $$  	Returns the penalty	/TYP=N
			amount
	
	*/

	type RecordDEP dep
	type Number SEGMENT,SEGBAL,SEGPEN,SEGPOPT,TOTPEN,TOTAMT,WDPRIO
	type Date %EffectiveDate,SEGMDT,SEGSTART
	
	set dep=Db.getRecord("DEP","CID=:CID")
	set SEGPOPT=dep.segpopt
	set WDPRIO=dep.wdprio
	if SEGPOPT="" quit 0                   // No penalty option defined
	set CID=$G(CID) 
	set TAMT=$G(TAMT) 
	set AUTNUM=$G(AUTNUM)
	
	if (CID="")!(TAMT="")!(AUTNUM="") quit 0 
	type RecordWTHAUT wth=Db.getRecord("WTHAUT","CID=:CID,AUTNUM=:AUTNUM")
	set %EffectiveDate=wth.efd
	set TOTPEN=0
	set TOTAMT=TAMT 
	
	// FIFO
	if WDPRIO=0 do {
		type ResultSet rs=Db.select("SEGMENT,BAL,SEGMDT","DEPSEG","CID=:CID","SEGSTART ASC")
		if rs.isEmpty() quit
		while rs.next() do { quit:(TOTAMT=0)
			set SEGMENT=rs.getCol(1)
			set SEGBAL=rs.getCol(2)
			set SEGMDT=rs.getCol(3)
			if SEGMENT=0 quit                    // Quit if zero segment
			if SEGMDT'>%EffectiveDate quit                  // Quit if matured segment
	
			if TOTAMT>SEGBAL do {                // Withdrawal amount more than segment bal
				set TOTAMT=TOTAMT-SEGBAL
				set SEGPEN=$$CALC(SEGBAL,SEGMENT,.dep)
				set TOTPEN=TOTPEN+SEGPEN
				}
			else  do {
				set SEGPEN=$$CALC(TOTAMT,SEGMENT,.dep)
				set TOTPEN=TOTPEN+SEGPEN
				set TOTAMT=0
				}
			}
		}

	// LIFO
	if WDPRIO=1 do {
		type ResultSet rs=Db.select("SEGMENT,BAL,SEGMDT","DEPSEG","CID=:CID","SEGSTART DESC")
		if rs.isEmpty() quit
		while rs.next() do { quit:(TOTAMT=0) 
			set SEGMENT=rs.getCol(1)
			set SEGBAL=rs.getCol(2)
			set SEGMDT=rs.getCol(3)
			if SEGMENT=0 quit                    // Quit if zero segment
			if SEGMDT'>%EffectiveDate quit                  // Quit if matured segment
	
			if TOTAMT>SEGBAL do {                // Withdrawal amount more than segment bal
				set TOTAMT=TOTAMT-SEGBAL
				set SEGPEN=$$CALC(SEGBAL,SEGMENT,.dep)
				set TOTPEN=TOTPEN+SEGPEN
				}
			else  do {
				set SEGPEN=$$CALC(TOTAMT,SEGMENT,.dep)
				set TOTPEN=TOTPEN+SEGPEN
				set TOTAMT=0
				}
			}
		}
	
	quit $$^SCARND(TOTPEN,0,CID)
	
	
CALC(AMT,SEGMENT,RecordDEP dep)	// Calculate penalty amount

	/*
	   INPUT: AMT - Penalty Base for segment
	   SEGMENT - Segment Number
	
	   RETURNS: Penalty amount for segment
	*/
	
	type public Number CID,SEGPOPT
	type public Date SEGMDT
	type Boolean EXIT
	type Date ICHND
	type Number PRATE,PENGR
	type String IACM
	
	set EXIT=0
	set PRATE=dep.prate
	set IACM=dep.iacm
	set ICHND=dep.ichnd
	set PENGR=dep.pengr
	// Withdrawal amount for remaining term; grace period after interest change
	if SEGPOPT=2 do {
		if %EffectiveDate<ICHND!(%EffectiveDate>(ICHND+PENGR)) quit 
		set EXIT=1
		}
	if EXIT quit 0
	
	quit $$^UIC(AMT,%EffectiveDate,(SEGMDT-1),IACM,PRATE)
 #OPTION ResultClass ON
Public String vSIG()	quit "60754^10821^Sunitha Santhumayor^3637"	// Signature - LTD^TIME^USER^SIZE
