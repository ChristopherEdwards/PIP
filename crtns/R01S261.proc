R01S261	// SCA252 - Interest Rate/Payment Change Notice
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String ICHND
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA252"
	set RN="Interest Rate/Payment Change Notice"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNVRCHG]ICHND|[LNVRCHG]ICHND:DISTINCT:NOVAL||set ICHND=X D EXT^DBSQRY||T|Effective Date|||||"
	set %TAB("VIN2")="|255||[LN]INTOFFDT|||D EXT^DBSQRY||T|Interest Review Offset Date|||||"
	set %TAB("VIN3")="|255||[LN]PCOFFDT|||D EXT^DBSQRY||T|P&I Payment Change Offset Date|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=33
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String ICHND
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,ESCCP,LN1,LN2,LN3,LN4,LN5,LN6,N1,N2,N3,N4,N5,NAME,NEWP,NPNDD,PCCALBAL,PCNPMT,PCNUAP,PCPMTPI,RID,RN,TITL,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc8,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA252",RN="Interest Rate/Payment Change Notice"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA252","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=99999999			// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNVRCHG]ICHND "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]INTOFFDT "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]PCOFFDT "_VIN3,SEQ=SEQ+1
		set DQQRY(SEQ)="[LNVRCHG]CALBAL > 0 OR [LNVRCHG]CALBAL < 0",SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT = 0) ! ([LN]PCIDSTAT = """")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNVRCHG,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNVRCHG.ICHND,LN.CID,LN.PMTTRS,LN.INDEX,LNVRCHG.NR"
	set VSELECT=VSELECT_"ATE,LNVRCHG.IRN,LN.CRCD,LNVRCHG.CID,LNVRCHG.RATE,L"
	set VSELECT=VSELECT_"N.INVL,LNVRCHG.LINV,LNVRCHG.UPMT,LN.PCHND,LN.DIST1"
	set VSELECT=VSELECT_"FRE,LN.IRN,LN.EIRN,LNVRCHG.CALBAL,LN.INDO,LN.PMTPI"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNVRCHG,LN",VWHERE,"LNVRCHG.ICHND,LNVRCHG.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc8
	set vovc1="",vovc8=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc8,vc8
	set vovc1=vc1,vovc8=vc8
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19
	set vc1=V.piece($C(9),1)			// LNVRCHG.ICHND
	set vc2=V.piece($C(9),2)			// LN.CID
	set vc3=V.piece($C(9),3)			// LN.PMTTRS
	set vc4=V.piece($C(9),4)			// LN.INDEX
	set vc5=V.piece($C(9),5)			// LNVRCHG.NRATE
	set vc6=V.piece($C(9),6)			// LNVRCHG.IRN
	set vc7=V.piece($C(9),7)			// LN.CRCD
	set vc8=V.piece($C(9),8)			// LNVRCHG.CID
	set vc9=V.piece($C(9),9)			// LNVRCHG.RATE
	set vc10=V.piece($C(9),10)			// LN.INVL
	set vc11=V.piece($C(9),11)			// LNVRCHG.LINV
	set vc12=V.piece($C(9),12)			// LNVRCHG.UPMT
	set vc13=V.piece($C(9),13)			// LN.PCHND
	set vc14=V.piece($C(9),14)			// LN.DIST1FRE
	set vc15=V.piece($C(9),15)			// LN.IRN
	set vc16=V.piece($C(9),16)			// LN.EIRN
	set vc17=V.piece($C(9),17)			// LNVRCHG.CALBAL
	set vc18=V.piece($C(9),18)			// LN.INDO
	set vc19=V.piece($C(9),19)			// LN.PMTPI
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	/* Revision History

	07/14/05 - SmithCD - CR 16523
		   Completed task started with CR 14822 below, stripping out 
		   unnecessary code.

	04/10/05 - JERUCHIMC -  14822
		   Convert to DBI II - pull in REP252 library code and convert.

	*/

	type public String LN1, LN2, LN3, LN4, LN5, LN6
	type public String N1, N2, N3, N4, N5, TITL
	type public Number ESCCP, NEWP, PCCALBAL, PCNPMT, PCNUAP, PCPMTPI

	type Number CID, JUS, LP, PCALBAL
	type Date ICHND
	type String CO, CRCD, INDEX
	
	set ICHND = vc1
	set CID = vc2

	type RecordLNPTCHG lnptchg = Db.getRecord("LNPTCHG", "PCHND=:ICHND,CID=:CID", 1)
	type RecordLNAPCHG lnapchg = Db.getRecord("LNAPCHG", "APCND=:ICHND,CID=:CID", 1)

	set ESCCP = +(lnapchg.ntrs)
	if 'ESCCP set ESCCP = vc3

	// Following fields used on interest notice (SCA252)
	set PCCALBAL = lnptchg.calbal
	set PCNPMT = lnptchg.npmt
	set PCNUAP = lnptchg.upmt
	set PCPMTPI = lnptchg.pmtpi

	// For internationalization, translate English paragraph within this
	// processor

	if PCNUAP > PCNPMT do {
		set LN1 = "Your new payment will not be sufficient to cover"
		set LN2 = "the interest due and the difference will be"
		set LN3 = "added to the loan amount. The payment amount"
		set LN4 = "needed to pay your loan in full by the end of"
		set LN5 = "the term at the new interest rate is $"
		set LN6 = PCNUAP
		}
	else  set (LN1, LN2, LN3, LN4, LN5, LN6) = ""

	set NEWP = ESCCP + PCNPMT
	set PCALBAL = lnptchg.calbal

	if 'PCALBAL set TITL = "INTEREST RATE"
	else  set TITL = "INTEREST RATE AND PAYMENT"

	set INDEX = vc4

	if 'INDEX.isNull() do {
		type RecordINDEX index = Db.getRecord("INDEX", "INDEX=:INDEX")
		set N4 = "based on "_index.des_" index."
		}

	// Move excess on new line 4 to line 5
	if N4.length() > 35 for LP = 1:1:35 if N4.extract(36 - LP) = " " set N5 = N4.extract(37 - LP, 60), N4 = N4.extract(1, 36 - LP) quit

	// Interest only
	if 'PCALBAL do { quit
		if 'N4.isNull() do {
			set N1 = "The new rate was determined"
			set N2 = N4
			set N3 = N5
			}

		set N4 = "Your payment amount will"
		set N5 = "remain the same."

		if vc5 = vc6 do {
			set N1 = "Your interest rate will"
			set N2 = "remain the same."
			set N3 = ""
			}
		}

	// Interest and payment

	set CRCD =  vc7
	if CRCD.isNull() set CRCD = %SystemCurrency.get()
	if CRCD.isNull() set CRCD = CUVAR.%CRCD

	set CO = %CompanyName.get()
	if CO.isNull() set CO = CUVAR.CO

	type RecordCRCD crcd = Db.getRecord("CRCD", "CO,CRCD")
	set JUS = crcd.curdec
	if JUS.isNull() set JUS = 0

	if vc5 = vc6, (lnptchg.npmt = lnptchg.pmtpi) do {
		set N1 = "Using a balance of "_$$^SCARND(PCALBAL, JUS, CID)_" and"
		if 'N4.isNull() set N2 = N4
		if 'N5.isNull() set N3 = N5
		set N4 = "Your payment amount and rate"
		set N5 = "will remain the same."
		}
	else  do {
		set N1 = "The new payment was calculated"
		set N2 = "using a balance of "_$$^SCARND(PCALBAL,JUS,CID)
		set N3 = "(g) and "_lnptchg.caltrm_"(h) payments remaining"
		if N4.isNull() set N4 = "based on your loan's new rate."
		}

	quit


VPREBQ	// Pre-processor (before query)

	//Incoming=ICHND
	quit

VRPOST	// Report post-processor

	/* Revision History

	07/14/05 - SmithCD - CR 16523
		   Converted to PSL.  replaced %NOOPEN with setting of 
		   VRWOPT("NOOPEN") to correct undefined error on IO when 
		   SCA252A is called, and corrected %BLK to pass ICHND 
		   instead of t.

	*/
	
	type public Date ICHND

	type String %BLK, PGM, RID, VRWOPT()
	
	// Go to SCA252A to print any payment change notices that didn't get 
	// done combined with interest change notices

	// Use ICHND instead of prompting for effective date in SCA252A
	set %BLK = "/,"_ICHND

	// Do not prompt / open new output device
	set VRWOPT("NOOPEN") = 1

	set RID = "SCA252A"
	do ^URID

	do ^@PGM
	
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc8,vovc8
	set VH0=1					// Page break
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb2!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL3	// Detail
	type public String ESCCP,ICHND,IOSL,LN1,LN2,LN3,LN4,LN5,LN6,N1,N2,N3,N4,N5,NAME,NEWP,NPNDD,PCCALBAL,PCNPMT,PCNUAP,PCPMTPI,TITL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc8,vrundate

	if VLC+27>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$E(vrundate,1,10)
	do VOM
	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(NAME,1,35) set VL=V
	set VL=VL_$J("",36-VL.length())_$J(TITL,25)
	set VL=VL_$J("",62-VL.length())_"ADJUSTMENT NOTICE"
	do VOM
	set VL=$E(AD(1),1,35)
	do VOM
	set VL=$E(AD(2),1,35)
	set VL=VL_$J("",55-VL.length())_"LOAN NUMBER:"
	set VL=VL_$J("",68-VL.length())_$E(vc8,1,12)
	do VOM
	set VL=$E(AD(3),1,35)
	set VL=VL_$J("",45-VL.length())_"EFFECTIVE CHANGE DATE:"
	set VL=VL_$J("",68-VL.length())_$J($$DAT^%ZM(vc1),10)
	do VOM
	set VL="                                         "_"NEW PAYMENT NEXT DUE DATE: "
	do VP2 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(NPNDD),10)
	set VL=VL_$J("",68-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                       "_"CURRENT        UNADJUSTED               NEW"
	do VOM
	set VL="                    "_"--------------------------------------------------"
	do VOM
	set VL="     "_"INTEREST RATE"
	set V=vc6,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,8,5)
	set VL=VL_$J("",22-VL.length())_V		// [SYSDEV,LNVRCHG]IRN
	set VL=VL_$J("",31-VL.length())_"(a)"
	set V=vc9,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J(V,8,5)
	set VL=VL_$J("",40-VL.length())_V		// [SYSDEV,LNVRCHG]RATE
	set VL=VL_$J("",49-VL.length())_"(b)"
	set V=vc5,VO=V do VP5 quit:VFMQ!verror.get()  set V=$J(V,8,5)
	set VL=VL_$J("",58-VL.length())_V		// [SYSDEV,LNVRCHG]NRATE
	set V="(c)" do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",67-VL.length())_V
	do VOM
	set VL="           "_"INDEX"
	set V=vc10,VO=V do VP7 quit:VFMQ!verror.get()  set V=$J(V,8,5)
	set VL=VL_$J("",22-VL.length())_V		// [SYSDEV,LN]INVL
	set VL=VL_$J("",58-VL.length())_$J(vc11,8,5)
	do VOM
	set VL="           "_"PAYMENT"
	do VP8 quit:VFMQ!verror.get()  set V=$J($FN(PCPMTPI,",",2),12)
	set VL=VL_$J("",18-VL.length())_V
	set VL=VL_$J("",31-VL.length())_"(d)"
	set VL=VL_$J("",36-VL.length())_$J($FN(vc12,",",2),12)
	set VL=VL_$J("",49-VL.length())_"(e)"
	do VP9 quit:VFMQ!verror.get()  set V=$J($FN(PCNPMT,",",2),12)
	set VL=VL_$J("",54-VL.length())_V
	set VL=VL_$J("",67-VL.length())_"(f)"
	do VOM
	set VL="" do VOM
	set VL="                                              "_$E(N1,1,34)
	do VOM
	set VL="                                              "_$E(N2,1,34)
	do VOM
	set VL="                                              "_$E(N3,1,34)
	do VOM
	do VP10 quit:VFMQ!verror.get()  set V=$E(CAD(1),1,35) set VL="    "_V
	set VL=VL_$J("",46-VL.length())_$E(N4,1,34)
	do VOM
	set VL="    "_$E(CAD(2),1,35)
	set VL=VL_$J("",46-VL.length())_$E(N5,1,34)
	do VOM
	set VL="    "_$E(CAD(3),1,35)
	do VOM
	set VL="    "_$E(CAD(4),1,35)
	do VOM
	set V=$E(CAD(5),1,35) do VP11 quit:VFMQ!verror.get()  set VL="    "_V
	set VL=VL_$J("",46-VL.length())_"  P & I"
	set VL=VL_$J("",63-VL.length())_$J($FN(PCNPMT,",",2),10)
	set V="(e)" do VP12 quit:VFMQ!verror.get()
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="                                              "_"+ ESCROW PAYMENT"
	set VL=VL_$J("",63-VL.length())_$J($FN(ESCCP,",",2),10)
	set V="(j)" do VP13 quit:VFMQ!verror.get()
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="                                              "_"= NEW PAYMENT"
	set VL=VL_$J("",63-VL.length())_$J($FN(NEWP,",",2),10)
	set V="(k)" do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,ESCCP,ICHND,LN1,LN2,LN3,LN4,LN5,LN6,N1,N2,N3,N4,N5,NAME,NEWP,NPNDD,PCCALBAL,PCNPMT,PCNUAP,PCPMTPI,RID,RN,TITL,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	use IO if 'VLC,'vcrt set $Y=1
	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NAME

	type public String AD(), NAME

	type Number I, J

	set NAME = CUVAR.CNAME

	set AD(1) = CUVAR.CAD1
	set AD(2) = CUVAR.CAD2
	set AD(3) = CUVAR.CAD3

	set AD(4) = NAME.extract(1, 15)_", "_CUVAR.CSTATE_"  "_CUVAR.CZIP
	set AD(5) = CUVAR.TELEPHONE
	set AD(6) = CUVAR.POINST

	for I = 6:-1:2 do {
		if '$$RTB^%ZFUNC(AD(I-1)).isNull() quit
		for J = (I - 1):1:5 set AD(J) = AD(J + 1), AD(J + 1) = ""
		}

	quit

VP2	// Column pre-processor - Variable: NPNDD

	type public String vc13,vc14
	type public Date NPNDD, V
	type public Number VL

	if vc13.isNull() set (V, NPNDD, VL) = "" quit

	set (V, NPNDD) = {Date}vc13.nextFreqDate(vc14)

	quit

VP3	// Column pre-processor - [SYSDEV,LNVRCHG]IRN

	type public String vc4,vc15
	/* Revision History

	07/14/05 - SmithCD - CR 16523
		   Further cleane up changes for CR 14822 below.

	03/28/05 - JERUCHIMC - 14822
		Replace old data item references with rwrs syntax.

	*/ 

	type public Number V

	// Nominal Interest Rate
	if vc4.isNull(), V.isNull() set V = +(vc15)
	quit

VP4	// Column pre-processor - [SYSDEV,LNVRCHG]RATE

	type public String vc4,vc16
        /* Revision History

	07/14/05 - SmithCD - CR 16523
		   Further cleane up changes for CR 14822 below.

	03/28/05 - JERUCHIMC - 14822
           	   Replace old data item references with rwrs syntax.

        */

	type public Number V

	// Effective Interest Rate
	if vc4.isNull(), V.isNull() set V = vc16
	quit

VP5	// Column pre-processor - [SYSDEV,LNVRCHG]NRATE

	type public String vc4,vc16
	/* Revision History

	07/14/05 - SmithCD - CR 16523
		   Further cleane up changes for CR 14822 below.

	03/28/05 - JERUCHIMC - 14822
		Replace old data item references with rwrs syntax.

	*/

	type public Number V

	// Effective Interest Rate 
        if vc4.isNull(), V.isNull() set V = vc16
	quit

VP6	// Column post-processor - (c)

	type public String vc17
	type public Number V, VL

	if 'vc17 set (V, VL) = ""
	quit

VP7	// Column pre-processor - [SYSDEV,LN]INVL

	type public String vc10,vc18
	type public Number V

	if vc10.isNull() set V = vc18
	quit

VP8	// Column pre-processor - Variable: PCPMTPI

	type public String vc19
	type public Number V

	 // Principal and Interest Payment
	if V.isNull() set V = vc19
	quit

VP9	// Column pre-processor - Variable: PCNPMT

	type public String vc19
	type public String V

	// Principal and Interest Payment
	if V.isNull() set V = vc19
	quit

VP10	// Column pre-processor - Variable: CAD(1)

	type public String vc2
	type public String CID

	do ^UTLADDR(,"CAD", 5, 2, "ACN", vc2)
	quit

VP11	// Column post-processor - Variable: CAD(5)

	type public String TV, V

	set TV = V
	quit

VP12	// Column post-processor - (e)

	type public String PCCALBAL, TV, V, VL

	if 'PCCALBAL set V = "", VL = TV
	quit

VP13	// Column post-processor - (j)

	type public String PCCALBAL, V, VL

	if 'PCCALBAL set (V, VL) = ""
	quit

VP14	// Column post-processor - (k)

	type public String PCCALBAL, V, VL

	if 'PCCALBAL set (V, VL) = ""
	quit
