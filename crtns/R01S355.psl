R01S355	// SCA369B - FDIC Schedule RC-C Report, Part II
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DTL,TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DTL="N"

	set RID="SCA369B"
	set RN="FDIC Schedule RC-C Report, Part II"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DTL")="|1|||||||L|Print Detail|||||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,DTL#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DTL,TJD
	type public Number DTL
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,AMTREQ,BAL,CONAM,DESC1,DESC10,DESC11,DESC12,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,RCON,RID,RN,TITLE,VL,VLOF,VRF(),VSTATS(),ZHD1,ZHD2,ZLN(),ZTNOA1,ZTNOA1D,ZTNOA2,ZTNOA2D,ZTNOA3,ZTNOA3D,ZTNUM,ZTOT,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vcrt,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA369B",RN="FDIC Schedule RC-C Report, Part II"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA369B","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=58				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[TMPRPT3]KEY3#118#12"

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("TMPRPT3.PID,TMPRPT3.KEY1,TMPRPT3.KEY2,TMPRPT3.KEY3,TMPRPT2.DATA,TMPRPT3.DATA","TMPRPT3,TMPRPT2","TMPRPT3.PID=:%ProcessID AND TMPRPT3.KEY1=:TJD","TMPRPT3.PID,TMPRPT3.KEY1,TMPRPT3.KEY2,TMPRPT3.KEY3","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6
	set vc1=V.piece($C(9),1)			// TMPRPT3.PID
	set vc2=V.piece($C(9),2)			// TMPRPT3.KEY1
	set vc3=V.piece($C(9),3)			// TMPRPT3.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT3.KEY3
	set vc5=V.piece($C(9),5)			// TMPRPT2.DATA
	set vc6=V.piece($C(9),6)			// TMPRPT3.DATA
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public Boolean DTL
 type Public Date TJD
 type Public String ZHD1,ZHD2,ZLN()
 
 type Number CID, RCCL, ZTOT1, ZTOT2

 set ZHD1="",ZHD2=""
 if DTL.get() set ZHD1="Account",ZHD2="Number"

 set ZLN(1)="Secured By Nonfarm Nonresidential Properties|5562|"
 set ZLN(1)=ZLN(1)_"     Amounts of $100,000 or less|5564|5565|"
 set ZLN(1)=ZLN(1)_"     Amounts of more than $100,000 through $250,000|5566|5567|"
 set ZLN(1)=ZLN(1)_"     Amounts of more than $250,000 through $1,000,000|5568|5569"

 set ZLN(2)="Commercial & Industrial Loans|5563|"
 set ZLN(2)=ZLN(2)_"     Amounts of $100,000 or less|5570|5571|"
 set ZLN(2)=ZLN(2)_"     Amounts of more than $100,000 through $250,000|5572|5573|"
 set ZLN(2)=ZLN(2)_"     Amounts of more than $250,000 through $1,000,000|5574|5575"

 set ZLN(3)="Secured By Farmland|5576|"

 set ZLN(3)=ZLN(3)_"     Amounts of $100,000 or less|5578|5579|"
 set ZLN(3)=ZLN(3)_"     Amounts of more than $100,000 through $250,000|5580|5581|"
 set ZLN(3)=ZLN(3)_"     Amounts of more than $250,000 through $1,000,000|5582|5583"

 set ZLN(4)="Loans To Finance Agriculture & Other Loans To Farmers|5577|"
 set ZLN(4)=ZLN(4)_"     Amounts of $100,000 or less|5584|5585|"
 set ZLN(4)=ZLN(4)_"     Amounts of more than $100,000 through $250,000|5586|5587|"
 set ZLN(4)=ZLN(4)_"     Amounts of more than $250,000 through $1,000,000|5588|5589"

 set ZTOT1 = 0
 set ZTOT2 = 0

 type DbSet ds=Db.selectDbSet("LNFDC","TJD=:TJD")
 
 while ds.next() do {

 	type RecordLNFDC lnfdc=ds.getRecord()
	
	if lnfdc.rccl'=7 , lnfdc.rccl'=15 , lnfdc.rccl'=2 , lnfdc.rccl'=14 quit 	

	if lnfdc.rccl = 7 set RCCL = 1 , ZTOT1 = ZTOT1 + lnfdc.tnum
	
	else  if lnfdc.rccl = 15 set RCCL = 2 , ZTOT1 = ZTOT1 + lnfdc.tnum

	else  if lnfdc.rccl = 2 set RCCL = 3 , ZTOT2 = ZTOT2 + lnfdc.tnum

	else  if lnfdc.rccl = 14 set RCCL = 4 , ZTOT2 = ZTOT2 + lnfdc.tnum

	type RecordTMPRPT2 rpt2=Db.getRecord("TMPRPT2","PID=:%ProcessID,KEY1=:TJD,KEY2=:RCCL",1)

	if (RCCL = 1) ! (RCCL = 2) set rpt2.data = ZTOT1
	
	else  set rpt2.data = ZTOT2
	
	do rpt2.bypassSave()

 }

 type DbSet ds1=Db.selectDbSet("LNFDC1","TJD=:TJD")
 
 while ds1.next() do {

 	type RecordLNFDC1 lnfdc1=ds1.getRecord()

	set CID = lnfdc1.cid

        if lnfdc1.rccl'=7 , lnfdc1.rccl'=15 , lnfdc1.rccl'=2 , lnfdc1.rccl'=14 quit
 
        if lnfdc1.rccl = 7 set RCCL = 1 
 
        else  if lnfdc1.rccl = 15 set RCCL = 2 
 
        else  if lnfdc1.rccl = 2 set RCCL = 3 
 
        else  if lnfdc1.rccl = 14 set RCCL = 4

        type RecordTMPRPT3 rpt3=Db.getRecord("TMPRPT3","PID=:%ProcessID,KEY1=:TJD,KEY2=:RCCL,KEY3=:CID",1)
  
	type RecordLN ln=Db.getRecord("LN","CID=:CID",1)

	set rpt3.data = ln.amtreq_"|"_lnfdc1.bal
	
        do rpt3.bypassSave()
 }
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=TJD,DTL
	quit

VRPOST	// Report post-processor

 type Public Boolean VFMQ
 type public Number vcrt

 type Number PN
 type String %NOOPEN,%NOCLOSE,PGM,RID

 // Call to SCA369C RC-C MEMORANDA

 /*
 The following line is needed so that SCA369B will be fully 
 displayed prior to the other reports.
 */
 if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2) 
 
 set (%NOOPEN,%NOCLOSE)=""
 set RID="SCA369C"
 do ^URID if PGM.length() do V0^@PGM
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL3	// Detail
	type public String %TIM,AMTREQ,BAL,DESC1,DESC10,DESC11,DESC12,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,DTL,IOSL,RCON,TITLE,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZHD1,ZHD2,ZLN(),ZTNOA1,ZTNOA1D,ZTNOA2,ZTNOA2D,ZTNOA3,ZTNOA3D,ZTNUM,ZTOT,vc1,vc2,vc3,vc4,vc5,vc6,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+13>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(TITLE,1,55) set VL=V
	do VP2 quit:VFMQ!verror.get()  set V=$E(RCON,1,4)
	set VL=VL_$J("",64-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$J(ZTOT,9)
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(DESC1,1,55) set VL="  "_V
	set VL=VL_$J("",64-VL.length())_$E(DESC2,1,4)
	set VL=VL_$J("",74-VL.length())_$J(ZTNUM,9)
	do VOM
	set VL="" do VOM
	set VL="     "_"With Original Amounts"
	do VOM
	set VL="  "_$E(DESC3,1,55)
	set VL=VL_$J("",64-VL.length())_$E(DESC4,1,4)
	set VL=VL_$J("",74-VL.length())_$J(ZTNOA1,9)
	set VL=VL_$J("",93-VL.length())_$E(DESC5,1,4)
	set VL=VL_$J("",100-VL.length())_$J($FN(ZTNOA1D,",",2),15)
	do VOM
	set VL="  "_$E(DESC6,1,55)
	set VL=VL_$J("",64-VL.length())_$E(DESC7,1,4)
	set VL=VL_$J("",74-VL.length())_$J(ZTNOA2,9)
	set VL=VL_$J("",93-VL.length())_$E(DESC8,1,4)
	set VL=VL_$J("",100-VL.length())_$J($FN(ZTNOA2D,",",2),15)
	do VOM
	set VL="  "_$E(DESC9,1,55)
	set VL=VL_$J("",64-VL.length())_$E(DESC10,1,4)
	set VL=VL_$J("",74-VL.length())_$J(ZTNOA3,9)
	set VL=VL_$J("",93-VL.length())_$E(DESC11,1,4)
	set VL=VL_$J("",100-VL.length())_$J($FN(ZTNOA3D,",",2),15)
	do VOM
	set VL="" do VOM
	set VL=$E(DESC12,1,1)
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,AMTREQ,BAL,DESC1,DESC10,DESC11,DESC12,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,DTL,IOSL,RCON,TITLE,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZHD1,ZHD2,ZLN(),ZTNOA1,ZTNOA1D,ZTNOA2,ZTNOA2D,ZTNOA3,ZTNOA3D,ZTNUM,ZTOT,vc1,vc2,vc3,vc4,vc5,vc6,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP5 quit:VFMQ!verror.get()  set V=$J($FN(AMTREQ,",",0),12) set VL="                                            "_V
	do VP6 quit:VFMQ!verror.get()  set V=$J($FN(BAL,",",2),15)
	set VL=VL_$J("",100-VL.length())_V
	set V=vc4,VO=V do VP7 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",117-VL.length())_V		// [SYSDEV,TMPRPT3]KEY3
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AMTREQ,BAL,CONAM,DESC1,DESC10,DESC11,DESC12,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,DTL,RCON,RID,RN,TITLE,TJD,VL,ZHD1,ZHD2,ZLN(),ZTNOA1,ZTNOA1D,ZTNOA2,ZTNOA2D,ZTNOA3,ZTNOA3D,ZTNUM,ZTOT,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL=" "_"PART II                                        (Billion, Million, Thousand)"
	do VOM
	set VL="" do VOM
	set VL="                                                               "_"RCON      Number of          RCON   Amount Currently"
	set VL=VL_$J("",123-VL.length())_$E(ZHD1,1,7)
	do VOM
	set VL="                                                              "_"Number     Loans             NUMBER       Outstanding"
	set VL=VL_$J("",124-VL.length())_$E(ZHD2,1,6)
	do VOM
	set VL="==================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: TITLE

	type public String vc3
 type Public Number RCCL
 type Public String TITLE

 set RCCL=vc3
 
 if RCCL=2!(RCCL=4) set TITLE=""
 if RCCL=1 set TITLE=$$^MSG(8269)
 if RCCL=3 set TITLE=$$^MSG(8270)
	quit

VP2	// Column pre-processor - Variable: RCON

 type Public Number RCCL
 type Public String RCON

 
 if RCCL=2!(RCCL=4) set RCON=""
 if RCCL=1 set RCON="6999"
 if RCCL=3 set RCON="6860"
	quit

VP3	// Column pre-processor - Variable: ZTOT

	type public String vc5
 type Public Number RCCL,TNUM,ZTOT
 
 set TNUM=vc5
 

 if RCCL=2!(RCCL=4) set ZTOT=""
 if RCCL=1!(RCCL=3) set ZTOT=TNUM 
	quit

VP4	// Column pre-processor - Variable: DESC1

 type Public Date TJD
 type Public Number L,RCCL,ZTNOA1,ZTNOA2,ZTNOA3,ZTNOA1D,ZTNOA2D,ZTNOA3D,ZTNUM
 type Public String DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7,DESC8,DESC9,DESC10,DESC11,DESC12,X,ZLN()
 
 
 if RCCL = 1 set L = 7
 else  if RCCL = 2 set L = 15
 else  if RCCL = 3 set L = 2
 else  if RCCL = 4 set L = 14

 type RecordLNFDC lnfdc=Db.getRecord("LNFDC","TJD=:TJD,RCCL=:L",1)

 set ZTNOA1=+lnfdc.tnoa1
 set ZTNOA1D=+lnfdc.tnoa1d
 set ZTNOA2=+lnfdc.tnoa2
 set ZTNOA2D=+lnfdc.tnoa2d
 set ZTNOA3=+lnfdc.tnoa3
 set ZTNOA3D=+lnfdc.tnoa3d
 set ZTNUM=+lnfdc.tnum

 set X=ZLN(RCCL)

 set DESC1=X.piece("|",1),DESC2=X.piece("|",2),DESC3=X.piece("|",3)
 set DESC4=X.piece("|",4),DESC5=X.piece("|",5),DESC6=X.piece("|",6)
 set DESC7=X.piece("|",7),DESC8=X.piece("|",8),DESC9=X.piece("|",9)
 set DESC10=X.piece("|",10),DESC11=X.piece("|",11),DESC12=""
	quit

VP5	// Column pre-processor - Variable: AMTREQ

	type public String vc6
 type Public Number AMTREQ
 type Public String DATA

 set DATA = vc6
 set AMTREQ = DATA.piece("|",1)
	quit

VP6	// Column pre-processor - Variable: BAL

	type public String vc6
 type Public Number BAL
 type Public String DATA
 
 set DATA = vc6
 set BAL = DATA.piece("|",2)
 
	quit

VP7	// Column pre-processor - [SYSDEV,TMPRPT3]KEY3

	type public String vc4
 type Public Boolean DTL
 type Public String V,VL
 
 if 'DTL!(vc4=0) set (V,VL)=""
 
	quit
