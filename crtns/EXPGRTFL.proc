EXPGRTFL(RecordUTBLEXPGRTH utblexpgrth, String vpar, Boolean vparNorm) // UTBLEXPGRTH - Expected Growth User Table Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:24 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (4)              11/22/2003
	// Trigger Definition (2)                      12/17/2004
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = utblexpgrth.getMode()                 // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(utblexpgrth,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(utblexpgrth,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String GTBL = utblexpgrth.gtbl
	type String EOPBAL = utblexpgrth.eopbal

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("GTBL").exists()!vx("EOPBAL").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("UTBLEXPGRTH",.vx)
		set %O = 1 do vexec
		if vpar["/TRIGAFT/" do VAU                            // After update triggers
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("UTBLEXPGRTH","GTBL = :utblexpgrth.gtbl and EOPBAL = :utblexpgrth.eopbal") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String GTBL
	type public String EOPBAL

	type RecordUTBLEXPGRTH utblexpgrth = Db.getRecord("UTBLEXPGRTH","GTBL=:GTBL,EOPBAL=:EOPBAL")
	if (%ProcessMode = 2) do {
		do utblexpgrth.setMode(2)

		do EXPGRTFL(utblexpgrth,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordUTBLEXPGRTH utblexpgrth

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("UTBLEXPGRTH","GTBL = :utblexpgrth.gtbl and EOPBAL = :utblexpgrth.eopbal") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		if %O = 0, vpar'["/NOLOG/" do ^DBSLOGIT(utblexpgrth,%O,.vxins())
		if %O = 1, vpar'["/NOLOG/" do ^DBSLOGIT(utblexpgrth,%O,.vx())

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(utblexpgrth))  S ^UTBL("EXPGRTH",vobj(utblexpgrth,-3),vobj(utblexpgrth,-4))=vobj(utblexpgrth)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordUTBLEXPGRTH utblexpgrth

	if vpar'["/NOLOG/" do ^DBSLOGIT(utblexpgrth,3)

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	ZWI ^UTBL("EXPGRTH",vobj(utblexpgrth,-3),vobj(utblexpgrth,-4)) // Delete Record
	quit


vreqn // Validate required data items

	type public RecordUTBLEXPGRTH utblexpgrth

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordUTBLEXPGRTH utblexpgrth

	if utblexpgrth.gtbl.isNull() do vreqerr("GTBL") quit
	if utblexpgrth.eopbal.isNull() do vreqerr("EOPBAL") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("UTBLEXPGRTH","MSG",1767,"UTBLEXPGRTH."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VAI //
	type public Number ER = 0
	type public String vx(),RM
	do vai1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VAU //
	type public Number ER = 0
	type public String vx(),RM
	do vau1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vai1 // Trigger AFTER_INSERT - After Insert

	type public RecordUTBLEXPGRTH utblexpgrth
	/*-------------- Revision History --------------------
	
	
	08/09/01 - GORDONT - 46878
																Created/Conversion to PSL

	*/----------------------------------------------------

	//Either an Expected Growth amount or % should be defined
	if utblexpgrth.expgrth'="",utblexpgrth.exgrpct>0 set ER=1 set RM=$$^MSG(4890) quit
	quit

vau1 // Trigger AFTER_UPDATE - After_Update

	type public RecordUTBLEXPGRTH utblexpgrth
	/*-------------- Revision History --------------------
	
	
	08/09/01 - GORDONT - 46878
																Created/Conversion to PSL
	
								*/----------------------------------------------------
	
	// Either an Expected Growth amount or % should be defined
	if utblexpgrth.expgrth'="",utblexpgrth.exgrpct>0 set ER=1 set RM=$$^MSG(4890)
	quit


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordUTBLEXPGRTH utblexpgrth

	if utblexpgrth.gtbl.length()>12 set vRM = $$^MSG(1076,12) do vdderr("GTBL", vRM) quit
	set X = utblexpgrth.eopbal if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,1,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"UTBLEXPGRTH.EOPBAL"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = utblexpgrth.exgrpct if 'X.isNull() set vRM = $$VAL^DBSVER("N",8,0,,,,,5) if 'vRM.isNull() set vRM = $$^MSG(979,"UTBLEXPGRTH.EXGRPCT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = utblexpgrth.expgrth if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"UTBLEXPGRTH.EXPGRTH"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("UTBLEXPGRTH","MSG",979,"UTBLEXPGRTH."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordUTBLEXPGRTH utblexpgrth

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux
	type String voldpar = vpar.get()                       // Save filer switches

	if vx("GTBL").exists() set vux("GTBL") = vx("GTBL")
	if vx("EOPBAL").exists() set vux("EOPBAL") = vx("EOPBAL")
	do vkey(1) set voldkey = utblexpgrth.gtbl_","_utblexpgrth.eopbal // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = utblexpgrth.gtbl_","_utblexpgrth.eopbal // Copy new keys into object
	type RecordUTBLEXPGRTH vnewrec = utblexpgrth.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("UTBLEXPGRTH",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update
	set vpar = voldpar
	if vpar["/TRIGAFT/" do VAU

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordUTBLEXPGRTH utblexpgrth

	if vux("GTBL").exists() set utblexpgrth.gtbl = vux("GTBL").piece("|",i)
	if vux("EOPBAL").exists() set utblexpgrth.eopbal = vux("EOPBAL").piece("|",i)
	quit
