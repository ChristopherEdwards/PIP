R01S365	// SCA384 - CRA Summary Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String YEAR
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number VIN1

	set RID="SCA384"
	set RN="CRA Summary Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|4||[LNCRATOT]CYEAR|[LNCRATOT]CYEAR:DISTINCT:NOVAL||S YEAR=X||N|Calendar Year|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String YEAR
	type public Number VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,ANNREV,CONAM,LTYPE,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA384",RN="CRA Summary Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA384","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Calendar Year"_"|VIN1|"_VIN1.get()

		set VWHERE="LNCRATOT.CYEAR=:VIN1"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="CRA Summary Report"
		set VBNRINFO("PGM")="R01S365"
		set VBNRINFO("RID")="SCA384"
		set VBNRINFO("TABLES")="LNCRATOT"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNCRATOT]CYEAR"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNCRATOT]LFPC"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNCRATOT]MSACD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNCRATOT]CRASTCD"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNCRATOT]CRACNTCD"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LNCRATOT]CEN"

		set VBNRINFO("DOC",1)=" 08-09-05    - MUGILVANNAN CR 16732"
		set VBNRINFO("DOC",2)=" 	       Converted into PSL"
		set VBNRINFO("DOC",3)=" ------------------------------------------------------------------"
		set VBNRINFO("DOC",4)=""
		set VBNRINFO("DOC",5)=" CRA Totals Report displays summary information contained in the CRA Report"
		set VBNRINFO("DOC",6)=" Extract (LNCRATOT file) that selects data from LN file. Within the report, "
		set VBNRINFO("DOC",7)=" CRA Loan type appears as ""Small Business"", ""Small Farm"", or ""Community "
		set VBNRINFO("DOC",8)=" Development"". The CRA Loan type translates from the FDIC/OTS Primary Codes"
		set VBNRINFO("DOC",9)=" as follows:"
		set VBNRINFO("DOC",10)=" FDIC/OTS Primary Code = COM, display CRA Loan type as ""Small Business"""
		set VBNRINFO("DOC",11)=" FDIC/OTS Primary Code = AG, display CRA Loan type as ""Small Farm"""
		set VBNRINFO("DOC",12)=" FDIC/OTS Primary Code not equal COM or AG, then display CRA Loan type as"
		set VBNRINFO("DOC",13)=" ""Community Development""."
		set VBNRINFO("DOC",14)="   "
		set VBNRINFO("DOC",15)=" The query for the CRA Report will permit users to enter the calendar year"
		set VBNRINFO("DOC",16)=" that corresponds to the calendar year for which the CRA Report Extract function"
		set VBNRINFO("DOC",17)=" was executed. The CRA loans displayed for the calendar year are limited to "
		set VBNRINFO("DOC",18)=" those accounts compiled as of the system date for the most recent CRA Report "
		set VBNRINFO("DOC",19)=" Extract produced."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNCRATOT.CYEAR,LNCRATOT.LFPC,LNCRATOT.MSACD,LNCRATOT.CRASTCD,LNCRATOT.CRACNTCD,LNCRATOT.CEN,LNCRATOT.NUMORG1,LNCRATOT.NUMORG2,LNCRATOT.NUMORG3,LNCRATOT.NUMORG4,LNCRATOT.NUMORG5,LNCRATOT.AMTORG1,LNCRATOT.AMTORG2,LNCRATOT.AMTORG3,LNCRATOT.AMTORG4,LNCRATOT.AMTORG5,LNCRATOT.NUMPR2,LNCRATOT.NUMPR3,LNCRATOT.NUMPR4,LNCRATOT.NUMPR5,LNCRATOT.AMTPR1,LNCRATOT.AMTPR2,LNCRATOT.AMTPR3,LNCRATOT.AMTPR4,LNCRATOT.AMTPR5,LNCRATOT.TOTNUM,LNCRATOT.TOTNUMAF,LNCRATOT.TOTAMT,LNCRATOT.TOTAMTAF","LNCRATOT","LNCRATOT.CYEAR=:VIN1","LNCRATOT.CYEAR,LNCRATOT.LFPC,LNCRATOT.MSACD,LNCRATOT.CRASTCD,LNCRATOT.CRACNTCD,LNCRATOT.CEN","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29
	set vc1=V.piece($C(9),1)			// LNCRATOT.CYEAR
	set vc2=V.piece($C(9),2)			// LNCRATOT.LFPC
	set vc3=V.piece($C(9),3)			// LNCRATOT.MSACD
	set vc4=V.piece($C(9),4)			// LNCRATOT.CRASTCD
	set vc5=V.piece($C(9),5)			// LNCRATOT.CRACNTCD
	set vc6=V.piece($C(9),6)			// LNCRATOT.CEN
	set vc7=V.piece($C(9),7)			// LNCRATOT.NUMORG1
	set vc8=V.piece($C(9),8)			// LNCRATOT.NUMORG2
	set vc9=V.piece($C(9),9)			// LNCRATOT.NUMORG3
	set vc10=V.piece($C(9),10)			// LNCRATOT.NUMORG4
	set vc11=V.piece($C(9),11)			// LNCRATOT.NUMORG5
	set vc12=V.piece($C(9),12)			// LNCRATOT.AMTORG1
	set vc13=V.piece($C(9),13)			// LNCRATOT.AMTORG2
	set vc14=V.piece($C(9),14)			// LNCRATOT.AMTORG3
	set vc15=V.piece($C(9),15)			// LNCRATOT.AMTORG4
	set vc16=V.piece($C(9),16)			// LNCRATOT.AMTORG5
	set vc17=V.piece($C(9),17)			// LNCRATOT.NUMPR2
	set vc18=V.piece($C(9),18)			// LNCRATOT.NUMPR3
	set vc19=V.piece($C(9),19)			// LNCRATOT.NUMPR4
	set vc20=V.piece($C(9),20)			// LNCRATOT.NUMPR5
	set vc21=V.piece($C(9),21)			// LNCRATOT.AMTPR1
	set vc22=V.piece($C(9),22)			// LNCRATOT.AMTPR2
	set vc23=V.piece($C(9),23)			// LNCRATOT.AMTPR3
	set vc24=V.piece($C(9),24)			// LNCRATOT.AMTPR4
	set vc25=V.piece($C(9),25)			// LNCRATOT.AMTPR5
	set vc26=V.piece($C(9),26)			// LNCRATOT.TOTNUM
	set vc27=V.piece($C(9),27)			// LNCRATOT.TOTNUMAF
	set vc28=V.piece($C(9),28)			// LNCRATOT.TOTAMT
	set vc29=V.piece($C(9),29)			// LNCRATOT.TOTAMTAF
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 //Incoming=YEAR
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VDTL6	// Detail
	type public String %TIM,ANNREV,IOSL,LTYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+9>IOSL do VHDG0 quit:VFMQ

	set VL="             "_"<=100,000"
	set VL=VL_$J("",27-VL.length())_">100,000"
	set VL=VL_$J("",36-VL.length())_"but <=250,000"
	set VL=VL_$J("",67-VL.length())_">250,000"
	set VL=VL_$J("",82-VL.length())_"Annual Revenue "
	do VP1 quit:VFMQ!verror.get()  set V=$E(ANNREV,1,4)
	set VL=VL_$J("",97-VL.length())_V
	set VL=VL_$J("",118-VL.length())_"Affiliate"
	do VOM
	set VL="==================================================================================================================================="
	do VOM
	set VL="" do VOM
	set VL="# Originated"
	set VL=VL_$J("",15-VL.length())_$J(vc7,7)
	set VL=VL_$J("",27-VL.length())_"# Originated"
	set VL=VL_$J("",42-VL.length())_$J(vc8,7)
	set VL=VL_$J("",53-VL.length())_"# Originated"
	set VL=VL_$J("",68-VL.length())_$J(vc9,7)
	set VL=VL_$J("",79-VL.length())_"# Originated"
	set VL=VL_$J("",94-VL.length())_$J(vc10,7)
	set VL=VL_$J("",105-VL.length())_"# Originated"
	set VL=VL_$J("",120-VL.length())_$J(vc11,7)
	do VOM
	set VL="$ Originated"
	set VL=VL_$J("",14-VL.length())_$J($S(vc12<0:vc12-500,1:vc12+500)\1000,8,0)
	set VL=VL_$J("",27-VL.length())_"$ Originated"
	set VL=VL_$J("",41-VL.length())_$J($S(vc13<0:vc13-500,1:vc13+500)\1000,8,0)
	set VL=VL_$J("",53-VL.length())_"$ Originated"
	set VL=VL_$J("",67-VL.length())_$J($S(vc14<0:vc14-500,1:vc14+500)\1000,8,0)
	set VL=VL_$J("",79-VL.length())_"$ Originated"
	set VL=VL_$J("",93-VL.length())_$J($S(vc15<0:vc15-500,1:vc15+500)\1000,8,0)
	set VL=VL_$J("",105-VL.length())_"$ Originated"
	set VL=VL_$J("",119-VL.length())_$J($S(vc16<0:vc16-500,1:vc16+500)\1000,8,0)
	do VOM
	set VL="# Purchased"
	set VL=VL_$J("",15-VL.length())_$J(vc17,7)
	set VL=VL_$J("",27-VL.length())_"# Purchased"
	set VL=VL_$J("",42-VL.length())_$J(vc17,7)
	set VL=VL_$J("",53-VL.length())_"# Purchased"
	set VL=VL_$J("",68-VL.length())_$J(vc18,7)
	set VL=VL_$J("",79-VL.length())_"# Purchased"
	set VL=VL_$J("",94-VL.length())_$J(vc19,7)
	set VL=VL_$J("",105-VL.length())_"# Purchased"
	set VL=VL_$J("",120-VL.length())_$J(vc20,7)
	do VOM
	set VL="$ Purchased"
	set VL=VL_$J("",14-VL.length())_$J($S(vc21<0:vc21-500,1:vc21+500)\1000,8,0)
	set VL=VL_$J("",27-VL.length())_"$ Purchased"
	set VL=VL_$J("",41-VL.length())_$J($S(vc22<0:vc22-500,1:vc22+500)\1000,8,0)
	set VL=VL_$J("",53-VL.length())_"$ Purchased"
	set VL=VL_$J("",67-VL.length())_$J($S(vc23<0:vc23-500,1:vc23+500)\1000,8,0)
	set VL=VL_$J("",79-VL.length())_"$ Purchased"
	set VL=VL_$J("",93-VL.length())_$J($S(vc24<0:vc24-500,1:vc24+500)\1000,8,0)
	set VL=VL_$J("",105-VL.length())_"$ Purchased"
	set VL=VL_$J("",119-VL.length())_$J($S(vc25<0:vc25-500,1:vc25+500)\1000,8,0)
	do VOM
	set VL="                                                                                    "_"# Total"
	set VL=VL_$J("",94-VL.length())_$J(vc26,7)
	set VL=VL_$J("",109-VL.length())_"# Total"
	set VL=VL_$J("",120-VL.length())_$J(vc27,7)
	do VOM
	set VL="                                                                                    "_"$ Total"
	set VL=VL_$J("",93-VL.length())_$J($S(vc28<0:vc28-500,1:vc28+500)\1000,8,0)
	set VL=VL_$J("",109-VL.length())_"$ Total"
	set VL=VL_$J("",119-VL.length())_$J($S(vc29<0:vc29-500,1:vc29+500)\1000,8,0)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ANNREV,CONAM,LTYPE,RID,RN,VL,YEAR,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+13,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="Amounts in Thousands (000)"
	do VOM
	set VL="" do VOM
	set VL="Calendar Year"
	set VL=VL_$J("",14-VL.length())_$J(vc1,4)
	do VOM
	set VL="CRA Loan Type"
	do VP2 quit:VFMQ!verror.get()  set V=$E(LTYPE,1,22)
	set VL=VL_$J("",14-VL.length())_V
	do VOM
	set VL="MSA Code"
	set VL=VL_$J("",14-VL.length())_$J(vc3,4)
	do VOM
	set VL="State Code"
	set VL=VL_$J("",14-VL.length())_$J(vc4,2)
	do VOM
	set VL="County Code"
	set VL=VL_$J("",14-VL.length())_$J(vc5,3)
	do VOM
	set VL="Census Tract "
	set VL=VL_$J("",14-VL.length())_$E(vc6,1,7)
	do VOM
	set VL="" do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: ANNREV

	type public String vc2
 type public String ANNREV
 if (vc2="COM")!(vc2="AG") set ANNREV="<=1M"
 else  set ANNREV=">1M"
	quit

VP2	// Column pre-processor - Variable: LTYPE

	type public String vc2
 type public String LTYPE
 set LTYPE=vc2
 if LTYPE="AG" set LTYPE=" Small Farm"
 else  if LTYPE="COM" set LTYPE=" Small Business"
 else  set LTYPE=" Community Development"
	quit
