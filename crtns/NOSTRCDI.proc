NOSTRCDI	  /*
ORIG: SCOTTC - 08/12/2002
DESC: Computed Data items for ITNOSTRO table

---- Comments --------------------------------------------------------
	LIBRARY

        $$LNERC		Returns value taken from [ITNOSTRO]LNERC
	$$TAMTPCS	Compute the Charge-off Amount and Recovery amount.
	$$SIFPTRS	Returns a specific piece out of the data item ITNOSTRO.SIFPTRS
	$$EFDCMP	Returns Nostro effective date.
	$$ITC		Returns a specific piece from the ITC.
	$$SIF		Determines if there is a SIFPTRS entry in the TSO
	$$RECS		Returns the recovery source from the TSO			
	TTX2NOS		Copies the TTX object into NOSTRO 
	TTXF2NOS	Copies the TTXFDT object into NOSTRO 
			
	---- Revision History ------------------------------------------------
	
	01/30/06 Radhika - CR 17423
		 .Eliminated PSL deprecated features and warnings.
		 .Removed revision history prior to 2004.

 */
 quit

LNERC(Number CID,Number DTJD,Number TSEQ,Number PSQ)  //Returns value taken from [ITNOSTRO]LNERC
 
        /*
         ARGUMENTS:
	. CID	Account Number			/TYP=N/REQ/MECH=VAL
	. DTJD  Julian Date			/TYP=N/REQ/MECH=VAL
	. TSEQ Transaction Sequence		/TYP=N/REQ/MECH=VAL
	. PSQ  Piece Sequence			/TYP=N/REQ/MECH=VAL
 
         RETURNS:
	. $$   Error-Correcting amount		/TYP=$
 
	*/
 
	type String RESULT
	
	type RecordITNOSTRO nostro=Db.getRecord("ITNOSTRO","CID=:CID,DTJD=:DTJD,TSEQ=:TSEQ") 
        set RESULT=nostro.lnerc
        set RESULT=RESULT.piece("#",PSQ)
        quit RESULT

TAMTPCS(Number TAMT,Number PCS)

        /*
	Used to compute the Charge-off Amount (COA) and Recovery amount (REC)

	ARGUMENTS:
	. TAMT	Nostro Transaction amount	/TYP=N/REQ/MECH=VAL
	. PCS	Piece Sequence			/TYP=N/REQ/MECH=VAL
 
         RETURNS:
	. $$   Charge off amount/Recovery
		amount				/TYP=$
 
	*/

        quit TAMT.toString().piece("#",PCS)

SIFPTRS(String TSO,Number SIFPTRS,Number PCS)

        /*
	This extrinsic is used to extract a specific piece out of the data item
	ITNOSTRO.SIFPTRS


	ARGUMENTS:
	. TSO		Transaction Support Data/TYP=T/REQ/MECH=VAL
	. SIFPTRS	Supporting Information File 
			Pointers		/TYP=N/REQ/MECH=VAL
	. PCS		Piece Sequence		/TYP=N/REQ/MECH=VAL
 
         RETURNS:
	. $$   		Detail Sequence				/TYP=$
 
	*/
	
	if '($$SIF^NOSTRCDI(TSO)) quit ""
	quit SIFPTRS.toString().piece("^",PCS)

EFDCMP(Number CID,Number DTJD,Number TSEQ)

        /*
         ARGUMENTS:
	. CID	Account Number			/TYP=N/REQ/MECH=VAL
	. DTJD  Julian Date			/TYP=N/REQ/MECH=VAL
	. TSEQ  Transaction Sequence		/TYP=N/REQ/MECH=VAL
 
         RETURNS:
	. $$   Computed Effective Date		/TYP=$
 
	*/
 
	type RecordITNOSTRO nostro=Db.getRecord("ITNOSTRO","CID=:CID,DTJD=:DTJD,TSEQ=:TSEQ",1) 
	if 'nostro.getMode() quit ""
        quit $S(nostro.defd:nostro.defd,1:nostro.dtjd)

ITC(Number ITC,Number PCS)
	/*
	This function will pull a specific piece from the ITC.

	 ARGUMENT:
	. ITC	Internal transaction code	/TYP=N/REQ/MECH=VAL
	. PCS	Piece to be returned		/TYP=N/REQ/MECH=VAL

	 RETURNS:
	. $$	Selected piece from ITC		TYP=N

	*/

	quit $E(ITC,PCS)

SIF(String TSO)

	/*
	This function will determine if there is a SIFPTRS entry in the TSO


	ARGUMENTS:
	. TSO		Transaction Support Data/TYP=T/REQ/MECH=VAL
 
         RETURNS:
	. $$   		SIFPTRS exist		/TYP=L

	*/

	type String SIFP
	set SIFP=""
	set SIFP=$$FIELD^UTSO(TSO,"SIF")
	quit SIFP.exists()


RECS(String TSO)
	/*
	This function will return the recovery source from the TSO

        ARGUMENTS:
        . TSO           Transaction Support Data/TYP=T/REQ/MECH=VAL
 
         RETURNS:
        . $$            Recovery Source         /TYP=T
 
        */	

	type String RECS
	set RECS=""
	set RECS=$$FIELD^UTSO(TSO,"RECS").piece("~",1)
	quit RECS

TTX2NOS(RecordTTX ttx,RecordITNOSTRO itnostro)

	/* The function is used to take the values from TTX and copy them into ITNOSTRO.
	This function does not save the record to the data base.

	Arguments:

	. ttx	Future dated transaction		/TYP=RecordTTX/REQ/MECH=VAL
 
	. itnostro	Nostro transaction record
			unpopulated			/TYP=RecordITNOSTRO/REQ/MECH=VAL
	Returns:
 
	. itnostro	Nostro transaction record	/TYP=RecordITNOSTRO/REQ/MECH=VAL
 			populated

	Example:
 
	do TTXF2NOS^NOSTRCDI(.ttxfdt,.itnostro)
 
	*/
	
	set itnostro.cid=ttx.cid
        set itnostro.dtjd=ttx.tjd
        set itnostro.tseq=ttx.tseq
	set itnostro.defd=ttx.efd
	set itnostro.itc=ttx.itc
	set itnostro.etc=ttx.etc
	set itnostro.tamt=ttx.tamt
	set itnostro.tlo=ttx.tlo
	set itnostro.tso=ttx.tso
	set itnostro.tcmt=ttx.tcmt
	set itnostro.cdt=ttx.cdt
	set itnostro.tim=ttx.tim
	set itnostro.brcde=ttx.brcde
	set itnostro.trc=ttx.trc
	set itnostro.uidt=ttx.uidt
	set itnostro.spr=ttx.spr
	set itnostro.tsb=ttx.tsb
	set itnostro.lnerc=ttx.lnerc
	set itnostro.crcd=ttx.crcd
	set itnostro.rate=ttx.rate
	set itnostro.vdt=ttx.vdt
	set itnostro.cc=ttx.cc
	set itnostro.dir=ttx.dir
	set itnostro.chktyp=ttx.chktyp
	set itnostro.endbal=ttx.endbal
	set itnostro.bseamt=ttx.mult
	set itnostro.mult=ttx.bseamt
	set itnostro.custcd=ttx.custcd
	set itnostro.tresref=ttx.tresref
	set itnostro.rty=ttx.rty
	set itnostro.msd=ttx.msd
	set itnostro.glsc=ttx.glsc
	set itnostro.bcrcd=ttx.bcrcd

	quit 

TTXF2NOS(RecordTTXFDT ttxfdt,RecordITNOSTRO itnostro)
 
        /* The function is used to take the values from TTXFDT and copy them
	into ITNOSTRO
        This function does not save the record to the data base.
 
        Arguments:
 
        . ttxfdt        Future dated transaction	/TYP=RecordTTXFDT/REQ/MECH
 
        . itnostro      Nostro transaction record
                        unpopulated			/TYP=RecordITNOSTRO/REQ
        Returns:
 
        . itnostro      Nostro transaction record	/TYP=RecordITNOSTRO/REQ
                        populated
 
        Example:
 
        do TTXF2NOS^NOSTRCDI(.ttxfdt,.itnostro)
 
        */
 
        set itnostro.cid=ttxfdt.cid
        set itnostro.dtjd=ttxfdt.tjd
        set itnostro.tseq=ttxfdt.tseq
        set itnostro.defd=ttxfdt.efd
        set itnostro.itc=ttxfdt.itc
        set itnostro.etc=ttxfdt.etc
        set itnostro.tamt=ttxfdt.tamt
        set itnostro.tlo=ttxfdt.tlo
        set itnostro.tso=ttxfdt.tso
        set itnostro.tcmt=ttxfdt.tcmt
        set itnostro.cdt=ttxfdt.cdt
        set itnostro.tim=ttxfdt.tim
        set itnostro.brcde=ttxfdt.brcde
        set itnostro.trc=ttxfdt.trc
        set itnostro.uidt=ttxfdt.uidt
        set itnostro.spr=ttxfdt.spr
        set itnostro.tsb=ttxfdt.tsb
        set itnostro.lnerc=ttxfdt.lnerc
        set itnostro.crcd=ttxfdt.crcd
        set itnostro.rate=ttxfdt.rate
        set itnostro.vdt=ttxfdt.vdt
        set itnostro.cc=ttxfdt.cc
        set itnostro.dir=ttxfdt.dir
        set itnostro.chktyp=ttxfdt.chktyp
        set itnostro.endbal=ttxfdt.endbal
        set itnostro.bseamt=ttxfdt.mult
        set itnostro.mult=ttxfdt.bseamt
        set itnostro.custcd=ttxfdt.custcd
        set itnostro.tresref=ttxfdt.tresref
        set itnostro.rty=ttxfdt.rty
        set itnostro.msd=ttxfdt.msd
        set itnostro.glsc=ttxfdt.glsc
        set itnostro.bcrcd=ttxfdt.bcrcd
 
        quit

vSIG()	quit "60295^32048^Radhika Panchanathan^6729"	// Signature - LTD^TIME^USER^SIZE
