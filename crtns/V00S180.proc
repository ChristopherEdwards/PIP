V00S180(%ProcessMode,RecordUTBLFEETBL fUTBLFTBL)   // -  - SID= <FEETBL> Service Fee Tables
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:18 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="FEETBL",VPGM=$T(+0),VSNAME="Service Fee Tables"
 set VFSN("UTBLFEETBL")="zfUTBLFTBL"
 set vPSL=1
 set KEYS(1)=fUTBLFTBL.FEETBL
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLFTBL),VDA1(.fUTBLFTBL),^DBSPNT()

 if '%ProcessMode do VNEW(.fUTBLFTBL),VPR(.fUTBLFTBL),VDA1(.fUTBLFTBL)
 if %ProcessMode do VLOD(.fUTBLFTBL) quit:$G(ER)  do VPR(.fUTBLFTBL),VDA1(.fUTBLFTBL)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLFTBL)
	quit


VNEW(RecordUTBLFEETBL fUTBLFTBL) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLFTBL)
 do VLOD(.fUTBLFTBL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLFEETBL fUTBLFTBL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLFEETBL fUTBLFTBL) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLFEETBL fUTBLFTBL) // Display screen prompts
 set VO="22||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,22,31,1,0,0,0,0,0,0)_"01T Service Fee Table Maintenance "
 set VO(2)=$C(4,10,19,1,0,0,0,0,0,0)_"01T Service Fee Table:"
 set VO(3)=$C(6,16,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(4)=$C(8,19,10,1,0,0,0,0,0,0)_"01T Fee data:"
 set VO(5)=$C(10,5,15,1,0,0,0,0,0,0)_"01T File of Key#1:"
 set VO(6)=$C(10,63,7,1,0,0,0,0,0,0)_"01TSearch:"
 set VO(7)=$C(11,5,15,1,0,0,0,0,0,0)_"01T File of Key#2:"
 set VO(8)=$C(11,63,7,1,0,0,0,0,0,0)_"01TSearch:"
 set VO(9)=$C(12,5,15,1,0,0,0,0,0,0)_"01T File of Key#3:"
 set VO(10)=$C(12,63,7,1,0,0,0,0,0,0)_"01TSearch:"
 set VO(11)=$C(13,5,15,1,0,0,0,0,0,0)_"01T File of Key#4:"
 set VO(12)=$C(13,63,7,1,0,0,0,0,0,0)_"01TSearch:"
 set VO(13)=$C(14,5,15,1,0,0,0,0,0,0)_"01T File of Key#5:"
 set VO(14)=$C(14,63,7,1,0,0,0,0,0,0)_"01TSearch:"
 set VO(15)=$C(15,5,15,1,0,0,0,0,0,0)_"01T File of Key#6:"
 set VO(16)=$C(15,63,7,1,0,0,0,0,0,0)_"01TSearch:"
 set VO(17)=$C(16,5,15,1,0,0,0,0,0,0)_"01T File of Key#7:"
 set VO(18)=$C(16,63,7,1,0,0,0,0,0,0)_"01TSearch:"
 set VO(19)=$C(17,5,15,1,0,0,0,0,0,0)_"01T File of Key#8:"
 set VO(20)=$C(17,63,7,1,0,0,0,0,0,0)_"01TSearch:"
 set VO(21)=$C(18,5,15,1,0,0,0,0,0,0)_"01T File of Key#9:"
 set VO(22)=$C(18,63,7,1,0,0,0,0,0,0)_"01TSearch:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLFEETBL fUTBLFTBL)  // Display screen data
 new V
 //
 set VO="43|23|13|0"
 set VO(23)=$C(4,30,12,2,0,0,0,0,0,0)_"01T"_$E(fUTBLFTBL.FEETBL,1,12)
 set VO(24)=$C(6,30,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.DESC,1,40)
 set VO(25)=$C(8,30,12,2,0,0,0,0,0,0)_"00U"_$E(fUTBLFTBL.FEED,1,12)
 set VO(26)=$C(10,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE1,1,40)
 set VO(27)=$C(10,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH1,1,1)
 set VO(28)=$C(11,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE2,1,40)
 set VO(29)=$C(11,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH2,1,1)
 set VO(30)=$C(12,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE3,1,40)
 set VO(31)=$C(12,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH3,1,1)
 set VO(32)=$C(13,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE4,1,40)
 set VO(33)=$C(13,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH4,1,1)
 set VO(34)=$C(14,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE5,1,40)
 set VO(35)=$C(14,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH5,1,1)
 set VO(36)=$C(15,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE6,1,40)
 set VO(37)=$C(15,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH6,1,1)
 set VO(38)=$C(16,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE7,1,40)
 set VO(39)=$C(16,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH7,1,1)
 set VO(40)=$C(17,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE8,1,40)
 set VO(41)=$C(17,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH8,1,1)
 set VO(42)=$C(18,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.FILE9,1,40)
 set VO(43)=$C(18,71,1,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFTBL.SEARCH9,1,1)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLFEETBL fUTBLFTBL)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=21,VPT=1,VPB=18,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLFEETBL"
 set OLNTB=18071
 
 set VFSN("UTBLFEETBL")="zfUTBLFTBL"
 //
 // 
	
	
 set %TAB(1)=$C(3,29,12)_"21T12401|1|[UTBLFEETBL]FEETBL|[DBTBL1]"
 set %TAB(2)=$C(5,29,40)_"01T12401|1|[UTBLFEETBL]DESC||||do VP1^V00S180(.fUTBLFTBL)"
 set %TAB(3)=$C(7,29,12)_"01U12402|1|[UTBLFEETBL]FEED|@SELDI^DBSFUN(FEETBL,.X)"
 set %TAB(4)=$C(9,20,40)_"00T12403|1|[UTBLFEETBL]FILE1|||do VP2^V00S180(.fUTBLFTBL)|do VP3^V00S180(.fUTBLFTBL)"
 set %TAB(5)=$C(9,70,1)_"00T12412|1|[UTBLFEETBL]SEARCH1|SEARCH("
 set %TAB(6)=$C(10,20,40)_"00T12404|1|[UTBLFEETBL]FILE2||if (X?1""DEP""1""."".U)!(X?1""ZDEP""1""."".U)|do VP4^V00S180(.fUTBLFTBL)|do VP5^V00S180(.fUTBLFTBL)"
 set %TAB(7)=$C(10,70,1)_"00T12413|1|[UTBLFEETBL]SEARCH2|SEARCH("
 set %TAB(8)=$C(11,20,40)_"00T12405|1|[UTBLFEETBL]FILE3||if (X?1""DEP""1""."".U)!(X?1""ZDEP""1""."".U)|do VP6^V00S180(.fUTBLFTBL)|do VP7^V00S180(.fUTBLFTBL)"
 set %TAB(9)=$C(11,70,1)_"00T12414|1|[UTBLFEETBL]SEARCH3|SEARCH("
 set %TAB(10)=$C(12,20,40)_"00T12406|1|[UTBLFEETBL]FILE4||if (X?1""DEP""1""."".U)!(X?1""ZDEP""1""."".U)|do VP8^V00S180(.fUTBLFTBL)|do VP9^V00S180(.fUTBLFTBL)"
 set %TAB(11)=$C(12,70,1)_"00T12415|1|[UTBLFEETBL]SEARCH4|SEARCH("
 set %TAB(12)=$C(13,20,40)_"00T12407|1|[UTBLFEETBL]FILE5||if (X?1""DEP""1""."".U)!(X?1""ZDEP""1""."".U)|do VP10^V00S180(.fUTBLFTBL)|do VP11^V00S180(.fUTBLFTBL)"
 set %TAB(13)=$C(13,70,1)_"00T12416|1|[UTBLFEETBL]SEARCH5|SEARCH("
 set %TAB(14)=$C(14,20,40)_"00T12408|1|[UTBLFEETBL]FILE6||if (X?1""DEP""1""."".U)!(X?1""ZDEP""1""."".U)|do VP12^V00S180(.fUTBLFTBL)|do VP13^V00S180(.fUTBLFTBL)"
 set %TAB(15)=$C(14,70,1)_"00T12417|1|[UTBLFEETBL]SEARCH6|SEARCH("
 set %TAB(16)=$C(15,20,40)_"00T12409|1|[UTBLFEETBL]FILE7||if (X?1""DEP""1""."".U)!(X?1""ZDEP""1""."".U)|do VP14^V00S180(.fUTBLFTBL)|do VP15^V00S180(.fUTBLFTBL)"
 set %TAB(17)=$C(15,70,1)_"00T12418|1|[UTBLFEETBL]SEARCH7|SEARCH("
 set %TAB(18)=$C(16,20,40)_"00T12410|1|[UTBLFEETBL]FILE8||if (X?1""DEP""1""."".U)!(X?1""ZDEP""1""."".U)|do VP16^V00S180(.fUTBLFTBL)|do VP17^V00S180(.fUTBLFTBL)"
 set %TAB(19)=$C(16,70,1)_"00T12419|1|[UTBLFEETBL]SEARCH8|SEARCH("
 set %TAB(20)=$C(17,20,40)_"00T12411|1|[UTBLFEETBL]FILE9||if (X?1""DEP""1""."".U)!(X?1""ZDEP""1""."".U)|do VP18^V00S180(.fUTBLFTBL)|do VP19^V00S180(.fUTBLFTBL)"
 set %TAB(21)=$C(17,70,1)_"00T12420|1|[UTBLFEETBL]SEARCH9|SEARCH("
 do VTBL(.fUTBLFTBL)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLFEETBL fUTBLFTBL) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLFEETBL fUTBLFTBL) //
	type public String K

	type String DESC, FEETBL, FILETBL, KK()

	set FEETBL = fUTBLFTBL.feetbl

	if (FEETBL = "CRDTYP") set FILETBL = "CRDTYP"
	else  if (FEETBL = "UTBLSTPFEE") set FILETBL = "UTBLSTPFEE"
	else  set FILETBL = "DEP"

	type RecordDBTBL1 dbtbl1 = Db.getRecord("DBTBL1", "%LIBS='SYSDEV',FID=:FILETBL")
	set DESC = dbtbl1.des

	if fUTBLFTBL.desc.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]DESC", DESC)

	do fsn^DBSDD(.KK, FEETBL)
	set K = KK(FEETBL).piece("|", 3)

	if K.piece(",", 1).isNull() do {

		do PROTECT^DBSMACRO("[UTBLFEETBL]FILE1")
		do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH1")
	}
	else  if fUTBLFTBL.file1.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE1", FILETBL_"."_K.piece(",", 1))

        if K.piece(",", 2).isNull() do {
 
                do PROTECT^DBSMACRO("[UTBLFEETBL]FILE2")
                do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH2")
        }
        else  if fUTBLFTBL.file2.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE", FILETBL_"."_K.piece(",", 2))

        if K.piece(",", 3).isNull() do {
 
                do PROTECT^DBSMACRO("[UTBLFEETBL]FILE3")
                do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH3")
        }
        else  if fUTBLFTBL.file3.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE3", FILETBL_"."_K.piece(",", 3))

        if K.piece(",", 4).isNull() do {
 
                do PROTECT^DBSMACRO("[UTBLFEETBL]FILE4")
                do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH4")
        }
        else  if fUTBLFTBL.file4.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE4", FILETBL_"."_K.piece(",", 4))

        if K.piece(",", 5).isNull() do {
 
                do PROTECT^DBSMACRO("[UTBLFEETBL]FILE5")
                do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH5")
        }
        else  if fUTBLFTBL.file5.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE5", FILETBL_"."_K.piece(",", 5))

        if K.piece(",", 6).isNull() do {
 
                do PROTECT^DBSMACRO("[UTBLFEETBL]FILE6")
                do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH6")
        }
        else  if fUTBLFTBL.file6.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE6", FILETBL_"."_K.piece(",", 6))

        if K.piece(",", 7).isNull() do {
 
                do PROTECT^DBSMACRO("[UTBLFEETBL]FILE7")
                do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH7")
        }
        else  if fUTBLFTBL.file7.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE7", FILETBL_"."_K.piece(",", 7))

        if K.piece(",", 8).isNull() do {
 
                do PROTECT^DBSMACRO("[UTBLFEETBL]FILE8")
                do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH8")
        }
        else  if fUTBLFTBL.file8.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE8", FILETBL_"."_K.piece(",", 8))

        if K.piece(",", 9).isNull() do {
 
                do PROTECT^DBSMACRO("[UTBLFEETBL]FILE9")
                do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH9")
        }
        else  if fUTBLFTBL.file9.isNull() do DEFAULT^DBSMACRO("[UTBLFEETBL]FILE9", FILETBL_"."_K.piece(",", 9))

	quit
VP2(RecordUTBLFEETBL fUTBLFTBL) //
	type public Boolean ER
	type public String K, X, RM

	if (X.piece(".", 2) '= K.piece(",", 1)) do {
		set ER = 1
		// Key ~p1 not defined - cannot load data
		set RM = $$^MSG(7579)
	}

	else  if $$VER^DBSDD(X) do {
		type String TYPE

		set TYPE = $$TYP^DBSDD(X)

		if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH1")
	}

	else  do {
		set ER = 1
		// Invalid data item name - ~p1
		set RM = $$^MSG(1300, X)
	}

	quit
VP3(RecordUTBLFEETBL fUTBLFTBL) //
	type public String K

	if 'K.piece(",", 1).isNull() do CHANGE^DBSMACRO("REQ")

	quit
VP4(RecordUTBLFEETBL fUTBLFTBL) //
        type public Boolean ER
        type public String K, X, RM
 
	quit:K.piece(",", 2).isNull()

        if (X.piece(".", 2) '= K.piece(",", 2)) do {
                set ER = 1
                // Key ~p1 not defined - cannot load data
                set RM = $$^MSG(7579)
        }
 
        else  if $$VER^DBSDD(X) do {
                type String TYPE
 
                set TYPE = $$TYP^DBSDD(X)
 
                if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH2")
        }
 
        else  do {
                set ER = 1
                // Invalid data item name - ~p1
                set RM = $$^MSG(1300, X)
        }

	quit
VP5(RecordUTBLFEETBL fUTBLFTBL) //
        type public String K
 
        if 'K.piece(",", 2).isNull() do CHANGE^DBSMACRO("REQ")

	quit
VP6(RecordUTBLFEETBL fUTBLFTBL) //
        type public Boolean ER
        type public String K, X, RM
 
        quit:K.piece(",", 3).isNull()
 
        if (X.piece(".", 2) '= K.piece(",", 3)) do {
                set ER = 1
                // Key ~p1 not defined - cannot load data
                set RM = $$^MSG(7579)
        }
 
        else  if $$VER^DBSDD(X) do {
                type String TYPE
 
                set TYPE = $$TYP^DBSDD(X)
 
                if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH3")
        }
 
        else  do {
                set ER = 1
                // Invalid data item name - ~p1
                set RM = $$^MSG(1300, X)
        }

	quit
VP7(RecordUTBLFEETBL fUTBLFTBL) //
        type public String K
 
        if 'K.piece(",", 3).isNull() do CHANGE^DBSMACRO("REQ")

	quit
VP8(RecordUTBLFEETBL fUTBLFTBL) //
        type public Boolean ER
        type public String K, X, RM
 
        quit:K.piece(",", 4).isNull()
 
        if (X.piece(".", 2) '= K.piece(",", 4)) do {
                set ER = 1
                // Key ~p1 not defined - cannot load data
                set RM = $$^MSG(7579)
        }
 
        else  if $$VER^DBSDD(X) do {
                type String TYPE
 
                set TYPE = $$TYP^DBSDD(X)
 
                if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH4")
        }
 
        else  do {
                set ER = 1
                // Invalid data item name - ~p1
                set RM = $$^MSG(1300, X)
        }

	quit
VP9(RecordUTBLFEETBL fUTBLFTBL) //
        type public String K
 
        if 'K.piece(",", 4).isNull() do CHANGE^DBSMACRO("REQ")

	quit
VP10(RecordUTBLFEETBL fUTBLFTBL) //
        type public Boolean ER
        type public String K, X, RM
 
        quit:K.piece(",", 5).isNull()
 
        if (X.piece(".", 2) '= K.piece(",", 5)) do {
                set ER = 1
                // Key ~p1 not defined - cannot load data
                set RM = $$^MSG(7579)
        }
 
        else  if $$VER^DBSDD(X) do {
                type String TYPE
 
                set TYPE = $$TYP^DBSDD(X)
 
                if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH5")
        }
 
        else  do {
                set ER = 1
                // Invalid data item name - ~p1
                set RM = $$^MSG(1300, X)
        }

	quit
VP11(RecordUTBLFEETBL fUTBLFTBL) //
        type public String K
 
        if 'K.piece(",", 5).isNull() do CHANGE^DBSMACRO("REQ")

	quit
VP12(RecordUTBLFEETBL fUTBLFTBL) //
        type public Boolean ER
        type public String K, X, RM
 
        quit:K.piece(",", 6).isNull()
 
        if (X.piece(".", 2) '= K.piece(",", 6)) do {
                set ER = 1
                // Key ~p1 not defined - cannot load data
                set RM = $$^MSG(7579)
        }
 
        else  if $$VER^DBSDD(X) do {
                type String TYPE
 
                set TYPE = $$TYP^DBSDD(X)
 
                if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH6")
        }
 
        else  do {
                set ER = 1
                // Invalid data item name - ~p1
                set RM = $$^MSG(1300, X)
        }

	quit
VP13(RecordUTBLFEETBL fUTBLFTBL) //
        type public String K
 
        if 'K.piece(",", 6).isNull() do CHANGE^DBSMACRO("REQ")

	quit
VP14(RecordUTBLFEETBL fUTBLFTBL) //
        type public Boolean ER
        type public String K, X, RM
 
        quit:K.piece(",", 7).isNull()
 
        if (X.piece(".", 2) '= K.piece(",", 7)) do {
                set ER = 1
                // Key ~p1 not defined - cannot load data
                set RM = $$^MSG(7579)
        }
 
        else  if $$VER^DBSDD(X) do {
                type String TYPE
 
                set TYPE = $$TYP^DBSDD(X)
 
                if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH7")
        }
 
        else  do {
                set ER = 1
                // Invalid data item name - ~p1
                set RM = $$^MSG(1300, X)
        }

	quit
VP15(RecordUTBLFEETBL fUTBLFTBL) //
        type public String K
 
        if 'K.piece(",", 7).isNull() do CHANGE^DBSMACRO("REQ")

	quit
VP16(RecordUTBLFEETBL fUTBLFTBL) //
        type public Boolean ER
        type public String K, X, RM
 
        quit:K.piece(",", 8).isNull()
 
        if (X.piece(".", 2) '= K.piece(",", 8)) do {
                set ER = 1
                // Key ~p1 not defined - cannot load data
                set RM = $$^MSG(7579)
        }
 
        else  if $$VER^DBSDD(X) do {
                type String TYPE
 
                set TYPE = $$TYP^DBSDD(X)
 
                if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH8")
        }
 
        else  do {
                set ER = 1
                // Invalid data item name - ~p1
                set RM = $$^MSG(1300, X)
        }

	quit
VP17(RecordUTBLFEETBL fUTBLFTBL) //
        type public String K
 
        if 'K.piece(",", 8).isNull() do CHANGE^DBSMACRO("REQ")

	quit
VP18(RecordUTBLFEETBL fUTBLFTBL) //
        type public Boolean ER
        type public String K, X, RM
 
        quit:K.piece(",", 9).isNull()
 
        if (X.piece(".", 2) '= K.piece(",", 9)) do {
                set ER = 1
                // Key ~p1 not defined - cannot load data
                set RM = $$^MSG(7579)
        }
 
        else  if $$VER^DBSDD(X) do {
                type String TYPE
 
                set TYPE = $$TYP^DBSDD(X)
 
                if ((TYPE = "L") ! (TYPE = "T") ! (TYPE = "U") ! (TYPE = "F")) do PROTECT^DBSMACRO("[UTBLFEETBL]SEARCH9")
        }
 
        else  do {
                set ER = 1
                // Invalid data item name - ~p1
                set RM = $$^MSG(1300, X)
        }

	quit
VP19(RecordUTBLFEETBL fUTBLFTBL) //
        type public String K
 
        if 'K.piece(",", 9).isNull() do CHANGE^DBSMACRO("REQ")

	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLFEETBL fUTBLFTBL
 do VPR(.fUTBLFTBL)
 do VDA1(.fUTBLFTBL)
 do ^DBSPNT()
 quit

VW(RecordUTBLFEETBL fUTBLFTBL)
 do VDA1(.fUTBLFTBL)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLFEETBL fUTBLFTBL)
 do VDA1(.fUTBLFTBL)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLFEETBL fUTBLFTBL
 do VDA1(.fUTBLFTBL)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLFEETBL fUTBLFTBL
 if sn="UTBLFEETBL" do vSET1(.fUTBLFTBL,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLFEETBL fUTBLFTBL,di,X)
 do fUTBLFTBL.setAuditFlag(1)
 set fUTBLFTBL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLFEETBL fUTBLFTBL
 if fid="UTBLFEETBL" quit $$vREAD1(.fUTBLFTBL,di)
 quit ""
vREAD1(RecordUTBLFEETBL fUTBLFTBL,di)
 quit fUTBLFTBL.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
