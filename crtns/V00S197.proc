V00S197(%ProcessMode,RecordINDEX1 INDEX1,RecordINDEX fINDEX)   // -  - SID= <INDEX2A> Interest Index Rate - Investment/Sweep
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:19 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,RATE",VSID="INDEX2A",VPGM=$T(+0),VSNAME="Interest Index Rate - Investment/Sweep"
 set VFSN("INDEX")="zfINDEX",VFSN("INDEX1")="zINDEX1"
 set vPSL=1
 set KEYS(1)=fINDEX.INDEX
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=11 do VPR(.INDEX1,.fINDEX),VDA1(.INDEX1,.fINDEX),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.INDEX1,.fINDEX),VPR(.INDEX1,.fINDEX),VDA1(.INDEX1,.fINDEX)
 if %ProcessMode do VLOD(.INDEX1,.fINDEX) quit:$G(ER)  do VPR(.INDEX1,.fINDEX),VDA1(.INDEX1,.fINDEX)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.INDEX1,.fINDEX)
	quit


VNEW(RecordINDEX1 INDEX1,RecordINDEX fINDEX) // Initialize arrays if %O=0
 
 do VLOD(.INDEX1,.fINDEX)
 do VDEF(.INDEX1,.fINDEX)
 do VLOD(.INDEX1,.fINDEX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VNEWDQ(RecordINDEX1 INDEX1,RecordINDEX fINDEX) // Original VNEW section
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VLOD(RecordINDEX1 INDEX1,RecordINDEX fINDEX) // User defined access section
 //
 if '$D(%REPEAT) set %REPEAT=11
 if '$D(%MODS) set %MODS=1
 ;  S %MODS=0
 ;
 #ACCEPT date=11/05/03;pgm=Screen compiler
 quit
VLODDQ(RecordINDEX1 INDEX1,RecordINDEX fINDEX) //Original VLOD section
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordINDEX1 INDEX1,RecordINDEX fINDEX) // Display screen prompts
 set VO="11||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,12,12,0,0,0,0,0,0,0)_"01T Index Name:"
 set VO(2)=$C(2,11,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(4,25,28,1,0,0,0,0,0,0)_"01T Comparative Interest Index "
 set VO(4)=$C(7,25,16,0,0,0,0,0,0,0)_"01T Effective Date:"
 set VO(5)=$C(8,21,20,0,0,0,0,0,0,0)_"01TOperator & Rounding:"
 set VO(6)=$C(10,3,7,2,0,0,0,0,0,0)_"01T Level "
 set VO(7)=$C(10,12,4,2,0,0,0,0,0,0)_"01TType"
 set VO(8)=$C(10,18,10,2,0,0,0,0,0,0)_"01TDaily Rate"
 set VO(9)=$C(10,31,5,2,0,0,0,0,0,0)_"01TValue"
 set VO(10)=$C(10,53,11,2,0,0,0,0,0,0)_"01T7 Day Yield"
 set VO(11)=$C(10,65,12,2,0,0,0,0,0,0)_"01T30 Day Yield"
 if '$D(%MODS) set %MODS=1
 set DY=12 for I=%MODS:1:%REPEAT+%MODS-1 do VRPR(.INDEX1,.fINDEX)
 set VO=(+VO)_"|"_(VO+1)_"|13" quit  // BOD pointer
 
VRPR(RecordINDEX1 INDEX1,RecordINDEX fINDEX)  // Display prompts %REPEAT times
 
 set VO(VO+1)=$C(DY,8,1,2,0,0,0,0,0,0)_"01T)"
 set VO=VO+1,DY=DY+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordINDEX1 INDEX1,RecordINDEX fINDEX)  // Display screen data
 new V
 s RATE=$G(RATE)
 //
 set VX=$P(VO,"|",2)
 set VO(VX+0)=$C(1,25,6,2,0,0,0,0,0,0)_"01T"_$E(INDEX1.INDEX,1,6)
 set VO(VX+1)=$C(2,25,40,2,0,0,0,0,0,0)_"01T"_$E(fINDEX.DES,1,40)
 set VO(VX+2)=$C(7,42,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(INDEX1.EFD)
 set VO(VX+3)=$C(8,42,20,2,0,0,0,0,0,0)_"01T"_$E(fINDEX.EXTENSION,1,20)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+3,DY=12 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.INDEX1,.fINDEX)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordINDEX1 INDEX1,RecordINDEX fINDEX)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,RATE(I))=$G(RATE(I))
 
 set VO(VX+1)=$C(DY,6,2,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",3)
 set VO(VX+2)=$C(DY,14,1,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",4)
 set V=$P(v1,"|",6) set VO(VX+3)=$C(DY,18,11,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,9))
 set VO(VX+4)=$C(DY,31,20,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",2)
 set V=$P(v1,"|",7) set VO(VX+5)=$C(DY,53,9,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,7))
 set V=$P(v1,"|",8) set VO(VX+6)=$C(DY,65,9,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,7))
 set DY=DY+1,VX=VX+6
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %REPREQ=10 set %MODGRP=1
 set %MODOFF=4,%MOD=6,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=11+%REPEAT,BLKSIZ=(52*%REPEAT)+76,PGM=$T(+0),DLIB="SYSDEV",DFID="INDEX1,INDEX",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("INDEX")="zfINDEX",VFSN("INDEX1")="zINDEX1"
 //
 for I=11:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,24,6)_"21T12401|1|[INDEX1]INDEX|[INDEX]"
 set %TAB(2)=$C(1,24,40)_"21T12401||[INDEX]DES"
 set %TAB(3)=$C(6,41,10)_"21D12402|1|[INDEX1]EFD"
 set %TAB(4)=$C(7,41,20)_"20T12412||[INDEX]EXTENSION"
 set %TAB(5)=$C(11,5,2)_"20N12403|*RATE(1)|[*]@RATE"
 set %TAB(6)=$C(11,13,1)_"00T12404|*RATE(1)|[*]@RATE|[STBLTIERTYP]||do VP1^V00S197(.INDEX1,.fINDEX)"
 set %TAB(7)=$C(11,17,11)_"00N12406|*RATE(1)|[*]@DRATE|||do VP2^V00S197(.INDEX1,.fINDEX)||||9"
 set %TAB(8)=$C(11,30,20)_"00T12402|*RATE(1)|[*]@RATE1||||do VP3^V00S197(.INDEX1,.fINDEX)"
 set %TAB(9)=$C(11,52,9)_"00N12407|*RATE(1)|[*]@YLD7|||||||7"
 set %TAB(10)=$C(11,64,9)_"00N12408|*RATE(1)|[*]@YLD30|||||||7"
 do VTBL(.INDEX1,.fINDEX)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordINDEX1 INDEX1,RecordINDEX fINDEX) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordINDEX1 INDEX1
 type Public RecordINDEX fINDEX
 do VSPP1(.INDEX1,.fINDEX)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 // Remove any blank records from array
 for I=1:1:%REPEAT-1 for TI=1:1:%REPEAT-1 if $P(RATE(TI),"|",2)="" set RATE(TI)=RATE(TI+1) set RATE(TI+1)=""

 // Re-number pieces #1 & #3 to match level#
 for TI=1:1:%REPEAT set $P(RATE(TI),"|",1)=TI set $P(RATE(TI),"|",3)=TI

 quit

 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordINDEX1 INDEX1,RecordINDEX fINDEX) //
 if X="" do DEL1 do DEL2 quit

 do TYPE^INDX1

 if X do {
 	do DEL1

 	do PROTECT^DBSMACRO("@DRATE")

 	do PROTECT^DBSMACRO("@YLD7")

 	do PROTECT^DBSMACRO("@YLD30")
 	}
 
else  do {
 	do UNPROT^DBSMACRO("@DRATE")

 	do UNPROT^DBSMACRO("@YLD7")

 	do UNPROT^DBSMACRO("@YLD30")
 	}

 quit 

DEL1	//

 do DELETE^DBSMACRO("@DRATE","1","0")

 do DELETE^DBSMACRO("@YLD7","1","0")

 do DELETE^DBSMACRO("@YLD30","1","0")

 quit 

DEL2	//

 do DELETE^DBSMACRO("@RATE1","1","0")

 do GOTO^DBSMACRO("NEXT")

 quit 

VP2(RecordINDEX1 INDEX1,RecordINDEX fINDEX) //
 /* 
  --------- Revision History ------------------------------------------------
 
  05/03/00 - HAYMANP - 39841
             Modified rate conversion calculation to account for dates in a
             leap year after 2/29 and to use the EFD value as the basis.
 
  ----------------------------------------------------------------------------
 */

 if X="" do UNPROT^DBSMACRO("@RATE1")

 if X="" quit 
 
 new ANN,DAYS,DEC31,JAN1,NJD
 set NJD=INDEX1.efd	

 set JAN1=$$BOYJD^SCADAT(NJD,1)

 set DEC31=$$EOYJD^SCADAT(NJD,1)
 set DAYS=(DEC31-JAN1)+1
 
 set ANN=X*DAYS
 set ANN=$$^SCARND(ANN,"","","",5)

 do DEFAULT^DBSMACRO("@RATE1",ANN,"1","0","0")

 do PROTECT^DBSMACRO("@RATE1")

 quit

VP3(RecordINDEX1 INDEX1,RecordINDEX fINDEX) //
 // 10/24/02 - DATTAR - 49451
 if $P(RATE(z1),"|",4)=1 set I(3)="[INDEX]INDEX,[INDEX]DES"

 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordINDEX1 INDEX1
 type Public RecordINDEX fINDEX
 do VPR(.INDEX1,.fINDEX)
 do VDA1(.INDEX1,.fINDEX)
 do ^DBSPNT()
 quit

VW(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 do VDA1(.INDEX1,.fINDEX)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordINDEX1 INDEX1,RecordINDEX fINDEX)
 do VDA1(.INDEX1,.fINDEX)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordINDEX1 INDEX1
 type Public RecordINDEX fINDEX
 do VDA1(.INDEX1,.fINDEX)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordINDEX1 INDEX1
 if sn="INDEX1" do vSET1(.INDEX1,di,X)
 type Public RecordINDEX fINDEX
 if sn="INDEX" do vSET2(.fINDEX,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordINDEX1 INDEX1,di,X)
 do INDEX1.setAuditFlag(1)
 set INDEX1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordINDEX fINDEX,di,X)
 do fINDEX.setAuditFlag(1)
 set fINDEX.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordINDEX1 INDEX1
 if fid="INDEX1" quit $$vREAD1(.INDEX1,di)
 type Public RecordINDEX fINDEX
 if fid="INDEX" quit $$vREAD2(.fINDEX,di)
 quit ""
vREAD1(RecordINDEX1 INDEX1,di)
 quit INDEX1.@di
vREAD2(RecordINDEX fINDEX,di)
 quit fINDEX.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
