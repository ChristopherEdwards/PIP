BTTPP		/*
	This procedure provides a template for the user defined exits that
	are executed by the accrual process.

	Subroutine INIT is executed once by the scheduler_init and once in
	the thread_init subroutines.

	Subroutine DEP is executed after each deposit account is processed
	in the thread_exec subroutine.

	Subroutine LN is executed after each loan account is processed
	in the thread_exec subroutine.
	
	***** Notes regarding restrictions on use of this procedure:
	
	If ZBTTPP is used to update columns in the DEP or LN records care must
	be taken to follow these rules:
	
		- Do not reinstantiate new objects - use those passed into
		  the procedure
		  
		- The accrual process files DEP and LN records using the
		  bypassSave() method.  Therefore triggers, column validation,
		  journal files, and any other functions of the filers will
		  not be executed.  Therefore, it is the responsibility of the
		  developer to ensure that the data being placed into DEP or
		  LN columns is correct (right data type, length, etc.) and to
		  manually create any required journal entries.
		  
		- If a history (HIST) entry is required for an update, this
		  should be done by calling HISTBLD^ACNFUNCS.  The fourth
		  parameter, vpar, MUST be set to "/NOVALRI" to avoid creation
		  of the vfkeys array that is used for foreign key checking.
	
	
	---- Revision History ------------------------------------------------
	10/25/04 - RussellDS - CR11497
		   Add documentation as to restrictions on use.
	*/
	quit

	//---------------------------------------------------------------------
Public DEP(RecordDEP dep)	//Execute deposit account post-processor
	//---------------------------------------------------------------------

	/*
	ARGUMENTS:
	     . dep	Deposit object (class RecordDEP)

	Sample code:

		new x
		set x=dep.bal_"|"_dep.acr
		set ^ZEXTRACT(TJD,dep.cid)=x
	*/

	catch error {
		do ZE^UTLERR
	}

	// Begin custom user deposit code


	// End custom user deposit code

	quit

	//---------------------------------------------------------------------
Public LN(RecordLN ln)	//Execute loan account post-processor
	//---------------------------------------------------------------------

	/*
	ARGUMENTS:
	     . ln	Loan object (class RecordLN)

	Sample code:

		new x
		set x=ln.bal_"|"_ln.acr
		set ^ZEXTRACT(TJD,ln.cid)=x
	*/

	catch error {
		do ZE^UTLERR
	}

	// Begin custom user loan code


	// End custom user loan code


	quit
	
	//---------------------------------------------------------------------
Public INIT	// User post-processor initialization
	//---------------------------------------------------------------------

	catch error {
		do ZE^UTLERR
	}

	// Begin custom user init code


	// End custom user init code

	quit

	//---------------------------------------------------------------------
Public EXIT	// User post-processor exit
	//---------------------------------------------------------------------

	catch error {
		do ZE^UTLERR
	}

	// Begin custom user exit code


	// End custom user exit code

	quit

vSIG()	quit "59886^75063^Dan Russell^2918"	// Signature - LTD^TIME^USER^SIZE
