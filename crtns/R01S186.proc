R01S186	// SCA117 - IRS 5498 Report by Tax Identification
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:44 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA117"
	set RN="IRS 5498 Report by Tax Identification"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,CONT,CONV,EDCONT,FMV,IRATYP,MCZCCONT,NAM,RECHAR,RID,RN,ROLL,ROTHCONT,SEPCONT,SIMPCONT,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA117",RN="IRS 5498 Report by Tax Identification"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA117","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[TMPRPT5]KEY2#1#11,[TMPRPT5]KEY4#44#4,[TMPRPT5]KEY3#52#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="TMPRPT5.PID=:%ProcessID"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="IRS 5498 Report by Tax Identification"
		set VBNRINFO("PGM")="R01S186"
		set VBNRINFO("RID")="SCA117"
		set VBNRINFO("TABLES")="TMPRPT5"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TMPRPT5]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TMPRPT5]KEY1"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TMPRPT5]KEY2"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TMPRPT5]KEY3"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,TMPRPT5]KEY4"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,TMPRPT5]KEY5"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:10 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("TMPRPT5.PID,TMPRPT5.KEY1,TMPRPT5.KEY2,TMPRPT5.KEY3,TMPRPT5.KEY4,TMPRPT5.KEY5,TMPRPT5.DATA","TMPRPT5","TMPRPT5.PID=:%ProcessID","TMPRPT5.PID,TMPRPT5.KEY1,TMPRPT5.KEY2,TMPRPT5.KEY3,TMPRPT5.KEY4,TMPRPT5.KEY5","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// TMPRPT5.PID
	set vc2=V.piece($C(9),2)			// TMPRPT5.KEY1
	set vc3=V.piece($C(9),3)			// TMPRPT5.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT5.KEY3
	set vc5=V.piece($C(9),5)			// TMPRPT5.KEY4
	set vc6=V.piece($C(9),6)			// TMPRPT5.KEY5
	set vc7=V.piece($C(9),7)			// TMPRPT5.DATA
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 /*
  ---- Revision History ------------------------------------------------

	04/19/06 - RussellDS - CR20209
		   Remove code related to obsoleted Mutual Funds/Securities.
 
        11/29/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type Date BEGYR, ENDYR
 type Number BENSEQ, TAXYR
 
 // Beginning of tax year
 set BEGYR = $$BOTY^SCADAT($$BOTY^SCADAT(%SystemDate,1)-1,1)
 
 // End of tax year
 set ENDYR = $$EOTY^SCADAT(BEGYR,1)
 
 set TAXYR = ENDYR.year()
  
 type DbSet ds = Db.selectDbSet("IRA", "TAXYR = :TAXYR")
 
 while ds.next() do {
 	
 	type RecordIRA ira = ds.getRecord("IRA")
 	
 	type RecordIRATYPE iratype = Db.getRecord("IRATYPE", "ACN = :ira.acn, RPASEQ = :ira.rpaseq")
 
 	// Skip Keogh and Coverdell
 	if (iratype.iratyp = 3)!(iratype.iratyp = 12) quit
 	
 	type RecordCIF cif = Db.getRecord("CIF", "ACN = :ira.acn", 1)
 	
 	if cif.dod,((cif.dod < BEGYR)!(cif.dod > ENDYR)) quit
 	
 	do BLDTMP(.cif,.ira,ira.acn,TAXYR,iratype.iratyp,0,0)
 	
 	// Check for beneficiary data
 	type ResultSet rs = Db.select("BENSEQ", "IRABEN", "ACN = :ira.acn AND RPASEQ = :ira.rpaseq")
 	
 	while rs.next() do {
 		
 		set BENSEQ = rs.getCol("BENSEQ")
 	
	 	type RecordIRABEN1 iraben1 = Db.getRecord("IRABEN1", "ACN = :ira.acn, RPASEQ = :ira.rpaseq, BENSEQ = :BENSEQ, CYR = :TAXYR", 1)
	 	
	 	if 'iraben1.getMode() quit
 
 		do BLDTMP(.cif,.ira,BENSEQ,TAXYR,iratype.iratyp,ira.acn,iraben1.benfair)
 		}
 	}
 		
 quit
 
 
BLDTMP(RecordCIF cif,	// Customer Information Record
       RecordIRA ira,	// Retirement Plan Record
       Number ACN,	// Customer Number or Beneficiary Sequence
       Number TAXYR,	// Tax Year
       Number IRATYP,	// RPA Type
       Number BENE,	// Customer Number for Beneficiary
       Number FMV)	// Fair Market Value
 
 type Number CONT, EDCONT, PYBAL, ROTHCONT, RPASEQ, SAVACN, SEQ, SEPCONT, SIMPCONT, TAXYR1
 type String CNUM
 
 set RPASEQ = ira.rpaseq
 set SAVACN = ACN
 set SEQ = ira.seq
 set TAXYR1=TAXYR+1
 set (CONT,EDCONT,PYBAL,ROTHCONT,SEPCONT,SIMPCONT) = ""
 
 if BENE set ACN = BENE,CNUM = BENE_"-"_ACN
 else  set CNUM = ACN

 // Calculate FMV (Fair Market Value)
 if 'BENE do ^IRAYEBAL
 
 set ACN = SAVACN
 
 type RecordIRA ira1 = Db.getRecord("IRA", "ACN = :ira.acn, RPASEQ = :ira.rpaseq, TAXYR = :TAXYR1", 1)
 
 if (IRATYP = 4) set CONT = ira.c1 + ira.c2 + ira.c9 + ira.c10 + ira.c13
 else  set CONT = ira.c1 + ira1.c2 + ira.c9 + ira1.c10 + ira.c13
 
 if (IRATYP = 4) set SEPCONT = CONT,CONT = ""
 if (IRATYP = 11) set SIMPCONT = CONT,CONT = ""
 if (IRATYP = 12) set EDCONT = CONT,CONT = ""
 if (IRATYP = 13) set ROTHCONT = CONT,CONT = ""
  
 // Nothing to report
 if ((FMV+CONT+ira.c4+SEPCONT+SIMPCONT+ROTHCONT+EDCONT+ira.c15+ira.c14+ira1.c17) = 0) quit
 
 type RecordTMPRPT5 rpt5
 
 if BENE do {
 		
 	type RecordIRABEN iraben = Db.getRecord("IRABEN", "ACN = :BENE, RPASEQ = :RPASEQ, BENSEQ = :ACN", 1)
 		
 	set rpt5 = Db.getRecord("TMPRPT5", "PID = :%ProcessID, KEY1 = :TAXYR, KEY2 = :iraben.bentaxid, KEY3 = :CNUM, KEY4 = :RPASEQ, KEY5 = :SEQ", 1)
 		
 	set rpt5.data = iraben.benname_"|"_IRATYP_"|"_"|"_CONT_"|"_ira.c4_"|"_ira.c15_"|"_ROTHCONT_"|"_SIMPCONT_"|"_SEPCONT_"|"_EDCONT_"|"_ira.c14_"|"_FMV_"|"_ira1.c17
 	}
 	
 else  do {
 	
 	set rpt5 = Db.getRecord("TMPRPT5", "PID = :%ProcessID, KEY1 = :TAXYR, KEY2 = :cif.taxid, KEY3 = :CNUM, KEY4 = :RPASEQ, KEY5 = :SEQ", 1)
 		
 	set rpt5.data = cif.nam_"|"_IRATYP_"|"_CONT_"|"_ira.c4_"|"_ira.c15_"|"_ROTHCONT_"|"_SIMPCONT_"|"_SEPCONT_"|"_EDCONT_"|"_ira.c14_"|"_FMV_"|"_ira1.c17
 	}
 	
 do rpt5.save()














	quit

VRPOST	// Report post-processor

 /*
  ---- Revision History ------------------------------------------------
 
        11/29/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 
 do Db.delete("TMPRPT5","PID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(6)=1		// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),CONT,CONV,EDCONT,FMV,MCZCCONT,RECHAR,ROLL,ROTHCONT,SEPCONT,SIMPCONT
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+CONT			// @TOT(<<CONT>>)
	set VT(6,2,1)=VT(6,2,1)+CONV			// @TOT(<<CONV>>)
	set VT(6,3,1)=VT(6,3,1)+EDCONT			// @TOT(<<EDCONT>>)
	set VT(6,4,1)=VT(6,4,1)+FMV			// @TOT(<<FMV>>)
	set VT(6,5,1)=VT(6,5,1)+MCZCCONT		// @TOT(<<MCZCCONT>>)
	set VT(6,6,1)=VT(6,6,1)+RECHAR			// @TOT(<<RECHAR>>)
	set VT(6,7,1)=VT(6,7,1)+ROLL			// @TOT(<<ROLL>>)
	set VT(6,8,1)=VT(6,8,1)+ROTHCONT		// @TOT(<<ROTHCONT>>)
	set VT(6,9,1)=VT(6,9,1)+SEPCONT			// @TOT(<<SEPCONT>>)
	set VT(6,10,1)=VT(6,10,1)+SIMPCONT		// @TOT(<<SIMPCONT>>)
	quit

VDTL6	// Detail
	type public String %TIM,CONT,CONV,EDCONT,FMV,IOSL,IRATYP,MCZCCONT,NAM,RECHAR,ROLL,ROTHCONT,SEPCONT,SIMPCONT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$E(vc3,1,11)
	do VP1 quit:VFMQ!verror.get()  set V=$E(NAM,1,30)
	set VL=VL_$J("",12-VL.length())_V
	set VL=VL_$J("",43-VL.length())_$J(vc5,4)
	do VP2 quit:VFMQ!verror.get()  set V=$J(IRATYP,2)
	set VL=VL_$J("",48-VL.length())_V
	set VL=VL_$J("",51-VL.length())_$J(vc4,12)
	do VP3 quit:VFMQ!verror.get()  set V=$J(CONT,12,2)
	set VL=VL_$J("",66-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J(CONV,12,2)
	set VL=VL_$J("",79-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V=$J(SIMPCONT,12,2)
	set VL=VL_$J("",92-VL.length())_V
	do VP6 quit:VFMQ!verror.get()  set V=$J(EDCONT,12,2)
	set VL=VL_$J("",105-VL.length())_V
	do VP7 quit:VFMQ!verror.get()  set V=$J(FMV,12,2)
	set VL=VL_$J("",118-VL.length())_V
	do VOM
	do VP8 quit:VFMQ!verror.get()  set V=$J(ROLL,12,2) set VL="                                                                  "_V
	do VP9 quit:VFMQ!verror.get()  set V=$J(ROTHCONT,12,2)
	set VL=VL_$J("",79-VL.length())_V
	do VP10 quit:VFMQ!verror.get()  set V=$J(SEPCONT,12,2)
	set VL=VL_$J("",92-VL.length())_V
	do VP11 quit:VFMQ!verror.get()  set V=$J(RECHAR,12,2)
	set VL=VL_$J("",105-VL.length())_V
	do VP12 quit:VFMQ!verror.get()  set V=$J(MCZCCONT,12,2)
	set VL=VL_$J("",118-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,CONT,CONV,EDCONT,FMV,IRATYP,MCZCCONT,NAM,RECHAR,RID,RN,ROLL,ROTHCONT,SEPCONT,SIMPCONT,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Tax ID Name                            Seq Plan   Cust Nbr       IRA Cont    Roth Conv  SIMPLE Cont     ESA Cont    Mkt Value"
	do VOM
	set VL="                                                                 "_"Rollover Cont    Roth Cont     SEP Cont  Rechar Cont     Military"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,CONT,CONV,EDCONT,FMV,IRATYP,MCZCCONT,NAM,RECHAR,ROLL,ROTHCONT,SEPCONT,SIMPCONT,VPN,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Report Totals:"
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4)+VT(5)+VT(6))	// @CNT(0,N,4)
	set VL=VL_$J("",16-VL.length())_$J(V,4)
	set VL=VL_$J("",21-VL.length())_"Customers"
	set V=0						// @TOT(<<CONT>>,0)
	for I=0:1:6 set V=V+VT(I,1,1)
	set VL=VL_$J("",66-VL.length())_$J(V,12,2)
	set V=0						// @TOT(<<CONV>>,0)
	for I=0:1:6 set V=V+VT(I,2,1)
	set VL=VL_$J("",79-VL.length())_$J(V,12,2)
	set V=0						// @TOT(<<SIMPCONT>>,0)
	for I=0:1:6 set V=V+VT(I,10,1)
	set VL=VL_$J("",92-VL.length())_$J(V,12,2)
	set V=0						// @TOT(<<EDCONT>>,0)
	for I=0:1:6 set V=V+VT(I,3,1)
	set VL=VL_$J("",105-VL.length())_$J(V,12,2)
	set V=0						// @TOT(<<FMV>>,0)
	for I=0:1:6 set V=V+VT(I,4,1)
	set VL=VL_$J("",118-VL.length())_$J(V,12,2)
	do VOM
	set V=0						// @TOT(<<ROLL>>,0)
	for I=0:1:6 set V=V+VT(I,7,1)
	set VL="                                                                  "_$J(V,12,2)
	set V=0						// @TOT(<<ROTHCONT>>,0)
	for I=0:1:6 set V=V+VT(I,8,1)
	set VL=VL_$J("",79-VL.length())_$J(V,12,2)
	set V=0						// @TOT(<<SEPCONT>>,0)
	for I=0:1:6 set V=V+VT(I,9,1)
	set VL=VL_$J("",92-VL.length())_$J(V,12,2)
	set V=0						// @TOT(<<RECHAR>>,0)
	for I=0:1:6 set V=V+VT(I,6,1)
	set VL=VL_$J("",105-VL.length())_$J(V,12,2)
	set V=0						// @TOT(<<MCZCCONT>>,0)
	for I=0:1:6 set V=V+VT(I,5,1)
	set VL=VL_$J("",118-VL.length())_$J(V,12,2)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NAM

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public String NAM = vc7.piece("|",1)
	quit

VP2	// Column pre-processor - Variable: IRATYP

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number IRATYP = vc7.piece("|",2)
	quit

VP3	// Column pre-processor - Variable: CONT

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number CONT = vc7.piece("|",3)
	quit

VP4	// Column pre-processor - Variable: CONV

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number CONV = vc7.piece("|",5)
	quit

VP5	// Column pre-processor - Variable: SIMPCONT

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number SIMPCONT = vc7.piece("|",7)
	quit

VP6	// Column pre-processor - Variable: EDCONT

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number EDCONT = vc7.piece("|",9)
	quit

VP7	// Column pre-processor - Variable: FMV

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number FMV = vc7.piece("|",11)
	quit

VP8	// Column pre-processor - Variable: ROLL

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number ROLL = vc7.piece("|",4)
	quit

VP9	// Column pre-processor - Variable: ROTHCONT

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number ROTHCONT = vc7.piece("|",6)
	quit

VP10	// Column pre-processor - Variable: SEPCONT

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number SEPCONT = vc7.piece("|",8)
	quit

VP11	// Column pre-processor - Variable: RECHAR

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number RECHAR = vc7.piece("|",10)
	quit

VP12	// Column pre-processor - Variable: MCZCCONT

	type public String vc7
 /*
  ---- Revision History ------------------------------------------------
 
        11/22/05 - TITOVE - CR 17287
                   Converted into PSL.
 */
 type public Number MCZCCONT = vc7.piece("|",12)
	quit
