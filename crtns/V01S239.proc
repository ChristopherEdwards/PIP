V01S239(%ProcessMode,RecordDEAL1 fDEAL1)   // -  - SID= <DEAL1SI3> Deal Settlement Instruction Screen 3
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="DEAL1SI3",VPGM=$T(+0),VSNAME="Deal Settlement Instruction Screen 3"
 set VFSN("DEAL1")="zfDEAL1"
 set vPSL=1
 set KEYS(1)=fDEAL1.NOINT
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fDEAL1),VDA1(.fDEAL1),^DBSPNT()

 if '%ProcessMode do VNEW(.fDEAL1),VPR(.fDEAL1),VDA1(.fDEAL1)
 if %ProcessMode do VLOD(.fDEAL1) quit:$G(ER)  do VPR(.fDEAL1),VDA1(.fDEAL1)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDEAL1)
	quit


VNEW(RecordDEAL1 fDEAL1) // Initialize arrays if %O=0
 
 do VDEF(.fDEAL1)
 do VLOD(.fDEAL1)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordDEAL1 fDEAL1)
 if fDEAL1.EDT="" set fDEAL1.EDT=TJD
 if fDEAL1.MT202PRI="" set fDEAL1.MT202PRI="N"
 if fDEAL1.MT210PRI="" set fDEAL1.MT210PRI="N"
 if fDEAL1.MT300PRI="" set fDEAL1.MT300PRI="N"
 if fDEAL1.STATUS="" set fDEAL1.STATUS=2
 if fDEAL1.TDT="" set fDEAL1.TDT=TJD
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordDEAL1 fDEAL1) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDEAL1 fDEAL1) // Display screen prompts
 set VO="8||13|"
 set VO(0)="|"
 set VO(1)=$C(3,10,24,0,0,0,0,0,0,0)_"01TScope of Operation(94A):"
 set VO(2)=$C(4,7,27,0,0,0,0,0,0,0)_"01TBlock Trade Indicator(17T):"
 set VO(3)=$C(5,2,32,0,0,0,0,0,0,0)_"01TSplit Settlement Indicator(17U):"
 set VO(4)=$C(7,31,16,2,0,0,0,0,0,0)_"01TInvolved Parties"
 set VO(5)=$C(9,2,12,0,0,0,0,0,0,0)_"01TParty A(82):"
 set VO(6)=$C(9,30,4,0,0,0,0,0,0,0)_"01TOpt:"
 set VO(7)=$C(15,2,12,0,0,0,0,0,0,0)_"01TParty B(87):"
 set VO(8)=$C(15,30,4,0,0,0,0,0,0,0)_"01TOpt:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordDEAL1 fDEAL1)  // Display screen data
 new V
 //
 set VO="26|9|13|"
 set VO(9)=$C(1,1,80,3,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(10)=$C(3,35,4,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.SCOPOP,1,4)
 set VO(11)=$C(4,35,1,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BLTDIN,1,1)
 set VO(12)=$C(5,35,1,2,0,0,0,0,0,0)_"01L"_$S(fDEAL1.SPLITI:"Y",1:"N")
 set VO(13)=$C(9,15,11,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYA,1,11)
 set VO(14)=$C(9,35,1,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYAOPT,1,1)
 set VO(15)=$C(9,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYA1,1,40)
 set VO(16)=$C(10,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYA2,1,40)
 set VO(17)=$C(11,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYA3,1,40)
 set VO(18)=$C(12,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYA4,1,40)
 set VO(19)=$C(13,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYA5,1,40)
 set VO(20)=$C(15,15,11,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYB,1,11)
 set VO(21)=$C(15,35,1,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYBOPT,1,1)
 set VO(22)=$C(15,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYB1,1,40)
 set VO(23)=$C(16,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYB2,1,40)
 set VO(24)=$C(17,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYB3,1,40)
 set VO(25)=$C(18,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYB4,1,40)
 set VO(26)=$C(19,38,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.PARTYB5,1,40)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordDEAL1 fDEAL1)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=17,VPT=1,VPB=19,PGM=$T(+0),DLIB="SYSDEV",DFID="DEAL1"
 set OLNTB=19038
 
 set VFSN("DEAL1")="zfDEAL1"
 //
 // 
	
	
 set %TAB(1)=$C(2,34,4)_"00T12401|1|[DEAL1]SCOPOP|,AGNT#Third Party,BILA#Bilateral Confirmation,BROK#Broker"
 set %TAB(2)=$C(3,34,1)_"00T12401|1|[DEAL1]BLTDIN|,N#No,Y#Yes"
 set %TAB(3)=$C(4,34,1)_"20L12402|1|[DEAL1]SPLITI"
 set %TAB(4)=$C(8,14,11)_"00T12401|1|[DEAL1]PARTYA|[UTBLCORRE]||do VP1^V01S239(.fDEAL1)"
 set %TAB(5)=$C(8,34,1)_"00T12407|1|[DEAL1]PARTYAOPT|,D#Name and Address,J#J,A#Institution and account||do VP2^V01S239(.fDEAL1)"
 set %TAB(6)=$C(8,37,40)_"00T12402|1|[DEAL1]PARTYA1|||do VP3^V01S239(.fDEAL1)"
 set %TAB(7)=$C(9,37,40)_"00T12403|1|[DEAL1]PARTYA2|||do VP4^V01S239(.fDEAL1)"
 set %TAB(8)=$C(10,37,40)_"00T12404|1|[DEAL1]PARTYA3|||do VP5^V01S239(.fDEAL1)"
 set %TAB(9)=$C(11,37,40)_"00T12405|1|[DEAL1]PARTYA4|||do VP6^V01S239(.fDEAL1)"
 set %TAB(10)=$C(12,37,40)_"00T12406|1|[DEAL1]PARTYA5|||do VP7^V01S239(.fDEAL1)"
 set %TAB(11)=$C(14,14,11)_"00T12401|1|[DEAL1]PARTYB|[UTBLCORRE]||do VP8^V01S239(.fDEAL1)"
 set %TAB(12)=$C(14,34,1)_"00T12407|1|[DEAL1]PARTYBOPT|,D#Name and Address,J#J,A#Institution and account||do VP9^V01S239(.fDEAL1)"
 set %TAB(13)=$C(14,37,40)_"00T12402|1|[DEAL1]PARTYB1|||do VP10^V01S239(.fDEAL1)"
 set %TAB(14)=$C(15,37,40)_"00T12403|1|[DEAL1]PARTYB2|||do VP11^V01S239(.fDEAL1)"
 set %TAB(15)=$C(16,37,40)_"00T12404|1|[DEAL1]PARTYB3|||do VP12^V01S239(.fDEAL1)"
 set %TAB(16)=$C(17,37,40)_"00T12405|1|[DEAL1]PARTYB4|||do VP13^V01S239(.fDEAL1)"
 set %TAB(17)=$C(18,37,40)_"00T12406|1|[DEAL1]PARTYB5|||do VP14^V01S239(.fDEAL1)"
 do VTBL(.fDEAL1)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordDEAL1 fDEAL1) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordDEAL1 fDEAL1) //
	/* If this field is filled in, default the option field to A, and set 
	   the information lines to blanks.  This is done so that if the user
	   had filled in information using option D or J, and then goes back 
	   to use this field (and change the option to A), they will see that
	   that the information fields are not used with option A, except 
	   possibly the first one, for an account number.

	*/

	type public String X
	type public Boolean ER

	if X.isNull() quit

	type String line1, line2, line3, line4, line5, SAVX

	set (line1,line2,line3,line4,line5)=""

	set fDEAL1.partya1=line1
	set fDEAL1.partya2=line2
	set fDEAL1.partya3=line3
	set fDEAL1.partya4=line4
	set fDEAL1.partya5=line5

	do DEFAULT^DBSMACRO("DEAL1.PARTYA1",line1)
	do DEFAULT^DBSMACRO("DEAL1.PARTYA2",line2)
	do DEFAULT^DBSMACRO("DEAL1.PARTYA3",line3)
	do DEFAULT^DBSMACRO("DEAL1.PARTYA4",line4)
	do DEFAULT^DBSMACRO("DEAL1.PARTYA5",line5)	

	do DISPLAY^DBSMACRO("DEAL1.PARTYA1")
	do DISPLAY^DBSMACRO("DEAL1.PARTYA2")
	do DISPLAY^DBSMACRO("DEAL1.PARTYA3")
	do DISPLAY^DBSMACRO("DEAL1.PARTYA4")
	do DISPLAY^DBSMACRO("DEAL1.PARTYA5")

	set SAVX=X

	set X=fDEAL1.partya1 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYA1") quit
	set X=fDEAL1.partya2 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYA2") quit
	set X=fDEAL1.partya3 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYA3") quit
	set X=fDEAL1.partya4 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYA4") quit
	set X=fDEAL1.partya5 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYA5") quit

	set X=SAVX
	
	do DEFAULT^DBSMACRO("DEAL1.PARTYAOPT","A")
	do GOTO^DBSMACRO("DEAL1.PARTYA1")

	quit
VP2(RecordDEAL1 fDEAL1) //
	type public String X
	type public Boolean ER

	// Complete previous field to select option A
	if (X="A") & (fDEAL1.partya.isNull()) do Runtime.setErrMSG("DEAL1",2746) quit:ER

	quit

VP3(RecordDEAL1 fDEAL1) //
	/* Check for the presence of option A for Party A, and ensure that 
	   if option A is being used, this field must begin with a slash /
	   or must be empty.
	   If the user does fill in something for this field, and option A is 
	   being used, skip the rest of the information lines by jumping 
	   to Party B.
	*/
	
	type public String X
	type public Boolean ER
	
	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	// When using this line for option A, enter an account number beginning with /
	if (fDEAL1.partyaopt="A") & ('X.extract()="/") & ('X.isNull()) do Runtime.setErrMSG("DEAL1",2631) quit:ER

	if fDEAL1.partyaopt="A" do GOTO^DBSMACRO("DEAL1.PARTYB")

	quit

VP4(RecordDEAL1 fDEAL1) //
	// Checks for the presence of invalid characters for SWIFT and 
	// prevent the field from being used with option A.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if fDEAL1.partyaopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.PARTYA2")
		do GOTO^DBSMACRO("DEAL1.PARTYB")
		}

	quit

VP5(RecordDEAL1 fDEAL1) //
	// Check for the presence of invalid characters for SWIFT and 
	// prevent the field from being used with option A.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if fDEAL1.partyaopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.PARTYA3")
		do GOTO^DBSMACRO("DEAL1.PARTYB")
		}
 
	quit
VP6(RecordDEAL1 fDEAL1) //
	// Checks for the presence of invalid characters for SWIFT and
	// prevent the field from being used with option A.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if fDEAL1.partyaopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.PARTYA4")
		do GOTO^DBSMACRO("DEAL1.PARTYB")
		}

	quit
VP7(RecordDEAL1 fDEAL1) //
	/* Check for the presence of invalid characters for SWIFT and 
	   prevents the field from being used with option A or D.
	   Also, if the option field for Party A is left blank, but the 
	   information lines have been filled in, the option field will be 
	   defaulted to option D, or option J, depending on whether the 
	   last line has been filled in.
	   If the last line has been filled in, the option is defaulted to J.
	   If option J is used or defaulted, this post-processor will check for
	   the presence of mandatory qualifiers /ABIC/ and /NAME/ on any of the
	   five information lines.
	*/

	type public String X
	type public Boolean ER

	type String BIGSTRING

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if (fDEAL1.partyaopt="D") ! (fDEAL1.partyaopt="A") do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.PARTYA5")
		do GOTO^DBSMACRO("DEAL1.PARTYB")
		}

	if (fDEAL1.partyaopt="J") do QUALIFYCHECK(.fDEAL1)

	set BIGSTRING=fDEAL1.partya1_fDEAL1.partya2_fDEAL1.partya3_fDEAL1.partya4

	if (fDEAL1.partyaopt.isNull()) & (X.isNull()) & ('BIGSTRING.isNull()) do {
		set fDEAL1.partyaopt="D"
		do DISPLAY^DBSMACRO("DEAL1.PARTYAOPT")
		}

	if (fDEAL1.partyaopt.isNull()) & ('X.isNull()) do {
		set fDEAL1.partyaopt="J"
		do DISPLAY^DBSMACRO("DEAL1.PARTYAOPT")

		do QUALIFYCHECK(.fDEAL1)
		}

	quit

QUALIFYCHECK(RecordDEAL1 fDEAL1)  // DEAL1 record

	// Concatenate five data fields together to one big string.

	type String BIGSTRING

	set BIGSTRING=fDEAL1.partya1_fDEAL1.partya2_fDEAL1.partya3_fDEAL1.partya4_X

	// Must contain /NAME/ and /ABIC/ qualifiers for option J
	if '((BIGSTRING["/NAME/") & (BIGSTRING["/ABIC/")) do Runtime.setErrMSG("DEAL1",5368) quit:ER 

	quit
	
VP8(RecordDEAL1 fDEAL1) //
	/* If this field is filled in, default the option field to A, and set 
	   the information lines to blanks.  This is done so that if the user
	   had filled in information using option D or J, and then goes back to
	   use this field (and change the option to A), they will see that 
	   the information fields are not used with option A, except possibly 
	   the first one, for an account number.
	*/

	type public String X
	type public Boolean ER

	if X.isNull() quit

	type String line1, line2, line3, line4, line5, SAVX

	set (line1,line2,line3,line4,line5)=""

	set fDEAL1.partyb1=line1
	set fDEAL1.partyb2=line2
	set fDEAL1.partyb3=line3
	set fDEAL1.partyb4=line4
	set fDEAL1.partyb5=line5

	do DEFAULT^DBSMACRO("DEAL1.PARTYB1",line1)
	do DEFAULT^DBSMACRO("DEAL1.PARTYB2",line2)
	do DEFAULT^DBSMACRO("DEAL1.PARTYB3",line3)
	do DEFAULT^DBSMACRO("DEAL1.PARTYB4",line4)
	do DEFAULT^DBSMACRO("DEAL1.PARTYB5",line5)
	
	do DISPLAY^DBSMACRO("DEAL1.PARTYB1")
	do DISPLAY^DBSMACRO("DEAL1.PARTYB2")
	do DISPLAY^DBSMACRO("DEAL1.PARTYB3")
	do DISPLAY^DBSMACRO("DEAL1.PARTYB4")
	do DISPLAY^DBSMACRO("DEAL1.PARTYB5")

	set SAVX=X

	set X=fDEAL1.partyb1 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYB1") quit
	set X=fDEAL1.partyb2 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYB2") quit
	set X=fDEAL1.partyb3 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYB3") quit
	set X=fDEAL1.partyb4 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYB4") quit
	set X=fDEAL1.partyb5 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.PARTYB5") quit
	
	set X=SAVX
 
	do DEFAULT^DBSMACRO("DEAL1.PARTYBOPT","A")
	do GOTO^DBSMACRO("DEAL1.PARTYB1")

	quit
VP9(RecordDEAL1 fDEAL1) //
	type public String X
	type public Boolean ER
 
	// Complete previous field to select option A
	if (X="A") & (fDEAL1.partyb.isNull()) do Runtime.setErrMSG("DEAL1",2746) quit:ER

	quit

VP10(RecordDEAL1 fDEAL1) //
	/* Check for the presence of option A for Party B, and ensure that 
	   if option A is being used, this field must begin with a slash / 
	   or must be empty.
	   If the user does fill in something for this field, and option A is 
	   being used, skip the rest of the information lines by jumping 
	   to the end of the page.
	*/

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	// When using this line for option A, enter an account number beginning with /
	if (fDEAL1.partybopt="A") & ('X.extract()="/") & ('X.isNull()) do Runtime.setErrMSG("DEAL1",2631) quit:ER

	if (fDEAL1.partybopt="A") do GOTO^DBSMACRO("END")

	quit

VP11(RecordDEAL1 fDEAL1) //
	// Check for the presence of invalid characters for SWIFT and 
	// prevent the field from being used with option A.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER
	
	if fDEAL1.partybopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.PARTYB2")
		do GOTO^DBSMACRO("END")
		}

	quit

VP12(RecordDEAL1 fDEAL1) //
	// Check for the presence of invalid characters for SWIFT and 
	// prevent the field from being used with option A.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if fDEAL1.partybopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.PARTYB3")
		do GOTO^DBSMACRO("END")
		}

	quit
VP13(RecordDEAL1 fDEAL1) //
	// Check for the presence of invalid characters for SWIFT and 
	// prevent the field from being used with option A.
	
	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if fDEAL1.partybopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.PARTYB4")
		do GOTO^DBSMACRO("END")
		}

	quit
VP14(RecordDEAL1 fDEAL1) //
	/* Check for the presence of invalid characters for SWIFT and 
	   prevent the field from being used with option A or D.
	   Also, if the option field for Party B is left blank, but the 
	   information lines have been filled in, the option field will be 
	   defaulted to option D, or option J, depending on whether the 
	   last line has been filled in.	
	   If the last line has been filled in, the option is defaulted to J.
	   If option J is used or defaulted, this post-processor will check for
	   the presence of mandatory qualifiers /ABIC/ and /NAME/ on any of the 
	   five information lines.
	*/

	type public String X
	type public Boolean ER

	type String BIGSTRING2

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if (fDEAL1.partybopt="D") ! (fDEAL1.partybopt="A") do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.PARTYB5")
		do GOTO^DBSMACRO("END")
		}

	if (fDEAL1.partybopt="J") do QUALIFYBCHECK(.fDEAL1)

	set BIGSTRING2=fDEAL1.partyb1_fDEAL1.partyb2_fDEAL1.partyb3_fDEAL1.partyb4

	if (fDEAL1.partybopt.isNull()) & (X.isNull()) & ('BIGSTRING2.isNull()) do {
		set fDEAL1.partybopt="D"
		do DISPLAY^DBSMACRO("DEAL1.PARTYBOPT")
		}

	if (fDEAL1.partybopt.isNull()) & ('X.isNull()) do {
		set fDEAL1.partybopt="J"
		do DISPLAY^DBSMACRO("DEAL1.PARTYBOPT")

		do QUALIFYBCHECK(.fDEAL1)
		}

	quit


QUALIFYBCHECK(RecordDEAL1 fDEAL1)

	// Concatenate five data fields together to one big string.

	type String BIGSTRING2
	set BIGSTRING2=fDEAL1.partyb1_fDEAL1.partyb2_fDEAL1.partyb3_fDEAL1.partyb4_X

	// Must contain /NAME/ and /ABIC/ qualifiers for option J
	if '((BIGSTRING2["/NAME/") & (BIGSTRING2["/ABIC/")) do Runtime.setErrMSG("DEAL1",5368) quit:ER

	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDEAL1 fDEAL1
 do VPR(.fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT()
 quit

VW(RecordDEAL1 fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDEAL1 fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDEAL1 fDEAL1
 do VDA1(.fDEAL1)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordDEAL1 fDEAL1
 if sn="DEAL1" do vSET1(.fDEAL1,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordDEAL1 fDEAL1,di,X)
 do fDEAL1.setAuditFlag(1)
 set fDEAL1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordDEAL1 fDEAL1
 if fid="DEAL1" quit $$vREAD1(.fDEAL1,di)
 quit ""
vREAD1(RecordDEAL1 fDEAL1,di)
 quit fDEAL1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
