R01S015	// DATADIFFRPT - Directory Data Difference Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:40 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="DATADIFFRPT"
	set RN="Directory Data Difference Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,COLDESC(),COLUMNS,CONAM,DI,JOB,KEYDESC,KEYDESC(),KEYS,RECORD,RID,RN,SRC,TABLE,VL,VLOF,VRF(),VSTATS(),X,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="DATADIFFRPT",RN="Directory Data Difference Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","DATADIFFRPT","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DATADIFFRPT]PRIMVAL#47#40,[DATADIFFRPT]SECONDVAL#90#40"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Directory Data Difference Report"
		set VBNRINFO("PGM")="R01S015"
		set VBNRINFO("RID")="DATADIFFRPT"
		set VBNRINFO("TABLES")="DATADIFFRPT"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DATADIFFRPT]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DATADIFFRPT]SRC"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DATADIFFRPT]KEYS"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DATADIFFRPT]DI"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DATADIFFRPT.SRC,DATADIFFRPT.PRIMVAL,DATADIFFRPT.SECONDVAL,DATADIFFRPT.JOB,DATADIFFRPT.KEYS,DATADIFFRPT.DI","DATADIFFRPT","","DATADIFFRPT.JOB,DATADIFFRPT.SRC,DATADIFFRPT.KEYS,DATADIFFRPT.DI","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc4,vovc1,vovc5,vovc6
	set vovc4="",vovc1="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc4,vc4,vovc1,vc1,vovc5,vc5,vovc6,vc6
	set vovc4=vc4,vovc1=vc1,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6
	set vc1=V.piece($C(9),1)			// DATADIFFRPT.SRC
	set vc2=V.piece($C(9),2)			// DATADIFFRPT.PRIMVAL
	set vc3=V.piece($C(9),3)			// DATADIFFRPT.SECONDVAL
	set vc4=V.piece($C(9),4)			// DATADIFFRPT.JOB
	set vc5=V.piece($C(9),5)			// DATADIFFRPT.KEYS
	set vc6=V.piece($C(9),6)			// DATADIFFRPT.DI
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3
 type Public String COLUMNS,COLDESC(),DI,KEYS,KEYDESC(),TABLE,RECORD,X
 type Number I
 type Public Number JOB,SRC
 type Boolean EXIT
 type String DIFFHDR,DATADIF
 kill KEYDESC,COLDESC
 set EXIT=1
 while EXIT do { quit:EXIT=0

	set JOB=%ProcessID
	set SRC=vc1
	type RecordTMPRPT1 tmprpt1=Db.getRecord("TMPRPT1","PID=:JOB,KEY1=:SRC",1)	
	set RECORD=tmprpt1.data
	set TABLE=RECORD.piece("|",1)
	set KEYS=RECORD.piece("|",2)
	for I=1:1:1 do { quit:KEYS.piece(",",I).isNull()

		set DI=KEYS.piece(",",I)
		type ResultSet rs=Db.select("DES","DBTBL1D","FID=:TABLE AND %LIBS='SYSDEV' AND DI=:DI") 	
		while rs.next() do {
			set KEYDESC(I)=rs.getCol("DES")
			}
		}

	if I<10 do {

	 for I=I:1:10 set KEYDESC(I)=""

		}
	set DIFFHDR="DIFFHDR"
	type RecordTMPRPT2 tmprpt2=Db.getRecord("TMPRPT2","PID=:JOB,KEY1=:SRC,KEY2=:DIFFHDR",1)
	set COLUMNS=tmprpt2.data
	type Boolean EXIT1
	set EXIT1=0
	for I=1:1 do { quit:EXIT1=1 
		if 'Db.isDefined("DATADIFFRPT","JOB=:JOB,SRC=:SRC,KEYS=:DIFFHDR,DI=:I") set EXIT1=1 quit
		set COLUMNS=COLUMNS_vc2_vc3
		}
	set DATADIF="DATADIF"
	do Db.fastDelete("TMPRPT2","PID=:JOB,KEY1=:SRC,KEY2=:DATADIF")
	
	for I=1:1 do { quit:COLUMNS.piece($C(9),I).isNull()

		set DI=COLUMNS.piece($C(9),I)
		type ResultSet rs2=Db.select("DES","DBTBL1D","FID=:TABLE AND %LIBS='SYSDEV' AND DI=:DI")
		while rs2.next() do {
			set COLDESC(DI)=rs2.getCol("DES")
			}
		
	}
	
	set COLDESC("PRIVALID")=""
	set COLDESC("SECVALID")=""
	set EXIT=0
	
 	}
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc4,vovc4,vc1,vovc1,vc5,vovc5,vc6,vovc6
	set VH0=1					// Page break
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc4'=+vc4) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc1'=+vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc5'=vc5) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,COLDESC(),COLUMNS,CONAM,DI,ER,IOSL,JOB,KEYDESC,KEYDESC(),KEYS,RECORD,RID,RN,SRC,TABLE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,X,vc1,vc2,vc3,vc4,vc5,vc6,vcrt,verror,vh(),vovc1,vovc4,vovc5,vovc6,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(KEYDESC,1,80) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$E(KEYDESC,1,80) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$E(KEYDESC,1,80) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(KEYDESC,1,80) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL4	// Detail
	type public String %TIM,COLDESC(),COLUMNS,DI,IOSL,JOB,KEYDESC,KEYDESC(),KEYS,RECORD,SRC,TABLE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),X,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	do VP5 quit:VFMQ!verror.get()  set V=$E(COLDESC(DI),1,35) set VL="     "_V
	set VL=VL_$J("",46-VL.length())_$E(vc2,1,40)
	set V=vc3,VO=V set V=$E(V,1,40) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",89-VL.length())_V		// [SYSDEV,DATADIFFRPT]SECONDVAL
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,COLDESC(),COLUMNS,CONAM,DI,JOB,KEYDESC,KEYDESC(),KEYS,RECORD,RID,RN,SRC,TABLE,VL,X,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="                                              "_"Primary System                             Secondary System"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: KEYDESC

 type Public String KEYDESC(),KEYS
 if KEYDESC(1).get().isNull() set KEYDESC="" quit
 set KEYDESC=KEYDESC(1)_"="_KEYS.piece(",",1)
	quit

VP2	// Column pre-processor - Variable: KEYDESC

 type Public String KEYDESC(),KEYS

 if KEYDESC(2).get().isNull() set KEYDESC="" quit
 set KEYDESC=KEYDESC(2)_"="_KEYS.piece(",",2)
	quit

VP3	// Column pre-processor - Variable: KEYDESC

  type Public String KEYDESC(),KEYS

  if KEYDESC(3).get().isNull() set KEYDESC="" quit
  set KEYDESC=KEYDESC(3)_"="_KEYS.piece(",",3) 
	quit

VP4	// Column pre-processor - Variable: KEYDESC

  type Public String KEYDESC(),KEYS

  if KEYDESC(4).get().isNull() set KEYDESC="" quit
  set KEYDESC=KEYDESC(4)_"="_KEYS.piece(",",4) 
	quit

VP5	// Column pre-processor - Variable: COLDESC(DI)


  type Public String COLDESC()
  type Public Number DI
  
  if COLDESC(DI).get().isNull() set COLDESC(DI)="" quit

	quit

VP6	// Column post-processor - [SYSDEV,DATADIFFRPT]SECONDVAL

 type Public String DI,VL
 
 if DI="PRIVALID" set VL=$$^MSG(3642)
 if DI="SECVALID" set VL=$$^MSG(3643)
	quit
