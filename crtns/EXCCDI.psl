EXCCDI		/*
        Public;All the assignment expressions for computed data items in EXC
	
	ORIG: ofaltr - 06/29/2000
	DESC: Computed Feilds for EXC
	
	 LIBRARY:
	 $$ LNERC 	LNERC loan error correct pieces
	 $$ PRETRES	Primary Return Reason
	 $$ FEE		Amount of Fee
	 $$ TRXBAL	Balance at Time of Transaction
	 $$ AVAILBAL	Available Balance at Time of Transaction
	 $$ REVIEW	Account Review Completion
	 $$ RET		Return Flag
	 $$ PRETRESD	Primary Return Reason Description
	 $$ EODBAL	The End of Day Ledger Balance on the date of the 
			exception
	 $$ EODBALCO	The End of Day Collected Balance on the date of the
			exception
	 $$ EODBALAV	The End of Day Available Balance on the date of the
			exception
	 $$ EODHLDAM	The End of Day Hold Amount on the date of the exception

        ---- Revision History------------------------------------------------

	08/30/01 - JERUCHIMC - 47204
	          Add section LNERC to return pieces of EXC.LNERC	          

	12/07/00  OFALTR - 43095
		  o Change to use EXC.BRCD instead of ACN.BOO when accessing
		    the Return Items File.(sections: FEE,REVIEW,PRETRES,PRETRESD)
		   
	10/25/00  OFALTR - 42478
		  o Removed logic to use Accounts branch code in RET section.

	10/02/00  MYERSK - 41700
		  o Added logic to all EODxxxxx routines to quit if CID is null

	09/19/00  MYERSK - 41700
		  o Added EODBAL,EODBALCO,EODBALAV,EODHLDAM for Rejected Item 
		    Letter Processing
	---------------------------------------------------------------------
	*/

	quit

LNERC(TJD,BRCD,UID,TSEQ,PSQ)  //Returns value taken from [EXC]LNERC depending on PSQ
 
        /*
         ARGUMENTS:
         . TJD  Julian Date                  /TYP=N/REQ/MECH=VAL
         . BRCD Branch Code                  /TYP=N/REQ/MECH=VAL
         . UID  User Id                      /TYP=N/REQ/MECH=VAL
         . TSEQ Transaction Sequence         /TYP=N/REQ/MECH=VAL
         . PSQ  Piece Sequence               /TYP=N/REQ/MECH=VAL
 
         RETURNS:
         . $$   Error-Correcting amount   /TYP=$
 
        */
 
        new LNERC
        set LNERC=Db.getOneRow("LNERC","EXC","TJD,BRCD,UID,TSEQ")
 
        new RESULT
        set RESULT=$P(LNERC,"#",PSQ)
        quit RESULT

PRETRES(XTJD,XBRCD,XUID,XTSEQ)	//Reject Reason
	/*
        The function is used to compute [EXC]PRETRES field.
        
        ARGUMENTS:
		TJD	System Processing Date	/TYPE=D/REQ/MECH=VAL
		BRCD	Branch code		/TYPE=N/REQ/MECH=VAL
		UID	User ID			/TYPE=N/REQ/MECH=VAL
		TSEQ	Transaction Seq Number	/TYPE=N/REQ/MECH=VAL
	
         RETURNS: Reject Reason
		  Will return one of following:
		
                  - RET.PRETRES 
		  - if ACN.BOO="" STBLER.KEY Where RM=TCMT
		  - if ACN.BOO="",STBLER.KEY="" then $E(TCMT,1,12)
		  - EXC1.OVR 
		  - STBLER.KEY where RM=TCMT
		  - $E(TCMT,1,12)
 	
         EXAMPLE: $$PRETRES^EXCCDI(TJD,BRCD,UID,TSEQ)
	*/
	
	new OVR,OVRFLG,TCMT,XBOO,XCID,XPRETRES,XRET
	
	set XCID=Db.getOneRow("CID,TCMT","EXC","XTJD,XBRCD,XUID,XTSEQ")
	set TCMT=$P(XCID,$C(9),2)
	set XCID=$P(XCID,$C(9),1)
	if 'XCID quit ""

	set XBOO=Db.getOneRow("BOO","ACN","XCID")

	set XRET=""
        if $E(TCMT)="#" set TCMT=$P(TCMT," ",2,99)
	type ResultSet rs=Db.select("KEY","STBLER","RM=:TCMT")
	if 'rs.isEmpty(),(rs.next()) set XRET=rs.getCol(1)
	set TCMT=$S(XRET'="":XRET,1:$E(TCMT,1,12))

	if XBOO="" quit TCMT

	set XPRETRES=Db.getOneRow("PRETRES","RET","XTJD,XBRCD,XCID,XUID,XTSEQ")
	if XPRETRES'="" quit XPRETRES

	for OVRFLG="OVR","RFLG" do {  quit:OVR'=""
		set OVR=""
		set OVR=Db.nextKey("EXC1","XTJD,XBRCD,XUID,XTSEQ,XCID,OVRFLG,OVR")
		}
	if OVR'="" quit OVR

	quit TCMT
	

FEE(XTJD,XBRCD,XUID,XTSEQ)	//Amount of FEE
	/*
        The function is used to compute [EXC]FEE field.
        
        ARGUMENTS:
		TJD	System Processing Date	/TYPE=D/REQ/MECH=VAL
		BRCD	Branch code		/TYPE=N/REQ/MECH=VAL
		UID	User ID			/TYPE=N/REQ/MECH=VAL
		TSEQ	Transaction Seq Number	/TYPE=N/REQ/MECH=VAL
        
         RETURNS: Amount of Fee
        
         EXAMPLE: $$FEE^EXCCDI(TJD,BRCD,UID,TSEQ)
	*/
	
	new DATA1,DATA3,XCID,XETC,XFEE,XPRETRES,XTYPE
	
	set DATA1=Db.getOneRow("CID,ETC","EXC","XTJD,XBRCD,XUID,XTSEQ")
	set XCID=$P(DATA1,$C(9),1)
	set XETC=$P(DATA1,$C(9),2)
	if 'XCID quit ""

	set XTYPE=Db.getOneRow("TYPE","ACN","XCID")
	if XTYPE="" quit ""

	set DATA3=Db.getOneRow("INDFEE,PRETRES","RET","XTJD,XBRCD,XCID,XUID,XTSEQ")
	
	if '$P(DATA3,$C(9),1) quit ""
	set XPRETRES=$P(DATA3,$C(9),2)
	
 	set XFEE=Db.getOneRow("FEEAMT","UTBLRETFEE","XPRETRES,XTYPE,XETC")
	quit XFEE
	

TRXBAL(XTJD,XBRCD,XUID,XTSEQ)	//Balance at time of Transaction
	/*
        The function is used to compute [EXC]TRXBAL field.
        
        ARGUMENTS:
		TJD	System Processing Date	/TYPE=D/REQ/MECH=VAL
		BRCD	Branch code		/TYPE=N/REQ/MECH=VAL
		UID	User ID			/TYPE=N/REQ/MECH=VAL
		TSEQ	Transaction Seq Number	/TYPE=N/REQ/MECH=VAL
        
         RETURNS: Balance at Time of Transaction
        
         EXAMPLE: $$TRXBAL^EXCCDI(TJD,BRCD,UID,TSEQ)
	*/
        
        new DATA,OVER,XAMT,XBAL,XCID
	
	set XCID=Db.getOneRow("CID","EXC","XTJD,XBRCD,XUID,XTSEQ")
	if 'XCID quit ""

	set XOVRFLG="OVR",XOVR="BAL"
	set XAMT=Db.getOneRow("AMT","EXC1","XTJD,XBRCD,XUID,XTSEQ,XCID,XOVRFLG,XOVR")

        quit XAMT
	
AVAILBAL(XTJD,XBRCD,XUID,XTSEQ)	//Available Balance at time of Transaction
	/*
        The function is used to compute [EXC]AVAILBAL field.
        
        ARGUMENTS:
               TJD     System Processing Date  /TYPE=D/REQ/MECH=VAL
               BRCD    Branch code             /TYPE=N/REQ/MECH=VAL
               UID     User ID                 /TYPE=N/REQ/MECH=VAL
               TSEQ    Transaction Seq Number  /TYPE=N/REQ/MECH=VAL
        
         RETURNS: Available Balance at Time of Transaction
	
	 EXAMPLE: $$AVAILBAL^EXCCDI(TJD,BRCD,UID,TSEQ)
	*/
	
	new AVAILBAL,DATA,OVER,XCID
	
	set XCID=Db.getOneRow("CID","EXC","XTJD,XBRCD,XUID,XTSEQ")
	if 'XCID quit ""

	set XOVRFLG="OVR",XOVR="BALAVL"
	set XAMT=Db.getOneRow("AMT","EXC1","XTJD,XBRCD,XUID,XTSEQ,XCID,XOVRFLG,XOVR")

        quit XAMT
	
REVIEW(XTJD,XBRCD,XUID,XTSEQ)	//Account Review Completion
	/*
        The function is used to compute [EXC]REVIEW field.
        
        ARGUMENTS:
               TJD     System Processing Date  /TYPE=D/REQ/MECH=VAL
               BRCD    Branch code             /TYPE=N/REQ/MECH=VAL
               UID     User ID                 /TYPE=N/REQ/MECH=VAL
               TSEQ    Transaction Seq Number  /TYPE=N/REQ/MECH=VAL
        
         RETURNS: Account Review Completion
	
	 EXAMPLE: $$REVIEW^EXCCDI(TJD,BRCD,UID,TSEQ)
	*/
	
	new XCID,XREV
	
	set XCID=Db.getOneRow("CID","EXC","XTJD,XBRCD,XUID,XTSEQ")
	if 'XCID quit ""
	
	set XREV=Db.getOneRow("REVIEW","RET","XTJD,XBRCD,XCID,XUID,XTSEQ")
	
	quit XREV
	
RET(XTJD,XBRCD,XUID,XTSEQ)	//Return Flag
	/*
        The function is used to compute [EXC]RET field.
        
        ARGUMENTS:
               TJD     System Processing Date  /TYPE=D/REQ/MECH=VAL
               BRCD    Branch code             /TYPE=N/REQ/MECH=VAL
               UID     User ID                 /TYPE=N/REQ/MECH=VAL
               TSEQ    Transaction Seq Number  /TYPE=N/REQ/MECH=VAL
        
         RETURNS: Return Flag
	
	 EXAMPLE: $$RET^EXCCDI(TJD,BRCD,UID,TSEQ)
	*/

	new XCID,XRET
	
	set XCID=Db.getOneRow("CID","EXC","XTJD,XBRCD,XUID,XTSEQ")
	if 'XCID quit ""

	set XRET=Db.getOneRow("RET","RET","XTJD,XBRCD,XCID,XUID,XTSEQ")
	
	quit XRET
	

PRETRESD(XTJD,XBRCD,XUID,XTSEQ)	;Primary Return Reason Description
	/*
        The function is used to compute [EXC]PRETRESD field.
        
        ARGUMENTS:
               TJD     System Processing Date  /TYPE=D/REQ/MECH=VAL
               BRCD    Branch code             /TYPE=N/REQ/MECH=VAL
               UID     User ID                 /TYPE=N/REQ/MECH=VAL
               TSEQ    Transaction Seq Number  /TYPE=N/REQ/MECH=VAL
        
         RETURNS: Primary Return Reason Description
	
	 EXAMPLE: $$PRETRESD^EXCCDI(TJD,BRCD,UID,TSEQ)
	*/

	new GRP,OVR,OVRFLG,TCMT,XCID,XPRETRES,XPRETRESD
	
	set XCID=Db.getOneRow("CID,TCMT","EXC","XTJD,XBRCD,XUID,XTSEQ")
	set TCMT=$P(XCID,$C(9),2)
	set XCID=$P(XCID,$C(9),1)
	if 'XCID quit ""
	
	set GRP=Db.getOneRow("GRP","ACN","XCID")

        if $E(TCMT)="#" set TCMT=$P(TCMT," ",2,99)

	if GRP="" quit TCMT

	set XPRETRESD=""
	set XPRETRES=Db.getOneRow("PRETRES","RET","XTJD,XBRCD,XCID,XUID,XTSEQ")
	if XPRETRES'="" set XPRETRESD=Db.getOneRow("DESC","UTBLRETIRCD","XPRETRES")
	if XPRETRESD'="" quit XPRETRESD

	for OVRFLG="OVR","RFLG" do {  if XPRETRESD'="" quit
		set OVR=""
		set OVR=Db.nextKey("EXC1","XTJD,XBRCD,XUID,XTSEQ,XCID,OVRFLG,OVR")
		if OVR="" quit
		if OVRFLG="OVR" set XPRETRESD=Db.getOneRow("DESC","UTBLOVR","GRP,OVR")
		else  set XPRETRESD=Db.getOneRow("DESC","UTBLRFLG","GRP,OVR")
		}
	if XPRETRESD'="" set XPRETRESD=$P(XPRETRESD," of $<",1) quit $E(XPRETRESD,1,40)

	quit TCMT

EODBAL(XTJD,XBRCD,XUID,XTSEQ) // Ledger Balance on date of exception
        /*
        The function is used to compute [EXC]EODBAL field.

 	This function will only return a value if the account is a deposit
	account and the date of the exception is within five days of the
	system date.

	Otherwise it returns null.

        ARGUMENTS:
               XTJD     System Processing Date  /TYPE=D/REQ/MECH=VAL
               XBRCD    Branch code             /TYPE=N/REQ/MECH=VAL
               XUID     User ID                 /TYPE=N/REQ/MECH=VAL
               XTSEQ    Transaction Seq Number  /TYPE=N/REQ/MECH=VAL
 
         RETURNS: 
	       $$	End of Day Ledger Balance on Date of Exception
 
         EXAMPLE: $$EODBAL^EXCCDI(TJD,BRCD,UID,TSEQ)
        */
	new CID,CLS,DATA,OFFSET

	set OFFSET=%SystemDate-XTJD
	quit:((OFFSET>5)!(OFFSET<0)) ""

	set CID=Db.getOneRow("CID","EXC","XTJD,XBRCD,XUID,XTSEQ")
	if 'CID quit ""
	if 'Db.isDefined("DEP","CID") quit "" 

	set DATA=Db.getOneRow("BAL,EODBAL,EODBAL2,EODBAL3,EODBAL4,EODBAL5","DEP","CID")
	quit $P(DATA,$C(9),OFFSET+1)

EODBALCO(XTJD,XBRCD,XUID,XTSEQ) // Collected Balance on date of exception
        /*
        The function is used to compute [EXC]EODBALCO field.
 
        This function will only return a value if the account is a deposit
        account and the date of the exception is within five days of the
        system date.
 
        Otherwise it returns null.
 
        ARGUMENTS:
               XTJD     System Processing Date  /TYPE=D/REQ/MECH=VAL
               XBRCD    Branch code             /TYPE=N/REQ/MECH=VAL
               XUID     User ID                 /TYPE=N/REQ/MECH=VAL
               XTSEQ    Transaction Seq Number  /TYPE=N/REQ/MECH=VAL
 
         RETURNS:
               $$       End of Day Collected Balance on Date of Exception
 
         EXAMPLE: $$EODBALCO^EXCCDI(TJD,BRCD,UID,TSEQ)
        */
        new CID,CLS,DATA,OFFSET
 
        set OFFSET=%SystemDate-XTJD
        quit:((OFFSET>5)!(OFFSET<0)) ""
 
        set CID=Db.getOneRow("CID","EXC","XTJD,XBRCD,XUID,XTSEQ")
	if 'CID quit ""
	if 'Db.isDefined("DEP","CID") quit "" 
 
        set DATA=Db.getOneRow("BALCOL,EODBALCO,EODBALCOL2,EODBALCOL3,EODBALCOL4,EODBALCOL5","DEP","CID")
        quit $P(DATA,$C(9),OFFSET+1)

EODBALAV(XTJD,XBRCD,XUID,XTSEQ) // Available Balance on date of exception
        /*
        The function is used to compute [EXC]EODBALAV field.
 
        This function will only return a value if the account is a deposit
        account and the date of the exception is within five days of the
        system date.
 
        Otherwise it returns null.
 
        ARGUMENTS:
               XTJD     System Processing Date  /TYPE=D/REQ/MECH=VAL
               XBRCD    Branch code             /TYPE=N/REQ/MECH=VAL
               XUID     User ID                 /TYPE=N/REQ/MECH=VAL
               XTSEQ    Transaction Seq Number  /TYPE=N/REQ/MECH=VAL
 
         RETURNS:
               $$       End of Day Available Balance on Date of Exception
 
         EXAMPLE: $$EODBALAV^EXCCDI(TJD,BRCD,UID,TSEQ)
        */
        new CID,CLS,DATA,OFFSET
 
        set OFFSET=%SystemDate-XTJD
        quit:((OFFSET>5)!(OFFSET<0)) ""
 
        set CID=Db.getOneRow("CID","EXC","XTJD,XBRCD,XUID,XTSEQ")
	if 'CID quit ""
	if 'Db.isDefined("DEP","CID") quit "" 

	if OFFSET=0 quit Db.getOneRow("BALAVL","DEP","CID") 
        set DATA=Db.getOneRow("EODBALAV,EODBALAVL2,EODBALAVL3,EODBALAVL4,EODBALAVL5","DEP","CID")
        quit $P(DATA,$C(9),OFFSET)

EODHLDAM(XTJD,XBRCD,XUID,XTSEQ) // Check Hold Amount on date of exception
        /*
        The function is used to compute [EXC]EODHLDAM field.
 
        This function will only return a value if the account is a deposit
        account and the date of the exception is within five days of the
        system date.
 
        Otherwise it returns null.
 
        ARGUMENTS:
               XTJD     System Processing Date  /TYPE=D/REQ/MECH=VAL
               XBRCD    Branch code             /TYPE=N/REQ/MECH=VAL
               XUID     User ID                 /TYPE=N/REQ/MECH=VAL
               XTSEQ    Transaction Seq Number  /TYPE=N/REQ/MECH=VAL
 
         RETURNS:
               $$       End of Day Check Hold Amount on Date of Exception
 
         EXAMPLE: $$EODHLDAM^EXCCDI(TJD,BRCD,UID,TSEQ)
        */
        new CID,CLS,DATA,OFFSET
 
        set OFFSET=%SystemDate-XTJD
        quit:((OFFSET>5)!(OFFSET<0)) ""
 
        set CID=Db.getOneRow("CID","EXC","XTJD,XBRCD,XUID,XTSEQ")
	if 'CID quit ""
	if 'Db.isDefined("DEP","CID") quit "" 

        set DATA=Db.getOneRow("CHKHLD,EODHLDAM,EODHLDAM2,EODHLDAM3,EODHLDAM4,EODHLDAM5","DEP","CID")
        quit $P(DATA,$C(9),OFFSET+1)
 #OPTION ResultClass ON
Public String vSIG()	quit "59886^43516^Sanchez SCM Administrator^13073"	// Signature - LTD^TIME^USER^SIZE
