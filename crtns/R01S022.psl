R01S022	// Z325DTL - Batch 325 File Detail Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:06 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String DCNTTOT,DTOTAMT,TCNTTOT,TTOTAMT
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1
	type Number VIN2

	set RID="Z325DTL"
	set RN="Batch 325 File Detail Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[Z325DTL]DATE|[Z325DTL]DATE:DISTINCT:NOVAL||||D|Process Date|||||"
	set %TAB("VIN2")="|1||[Z325DTL]SEQ|[Z325DTL]SEQ:DISTINCT:NOVAL||||N|File Sequence|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DCNTTOT,DTOTAMT,TCNTTOT,TTOTAMT
	type public Date VIN1
	type public Number VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="Z325DTL",RN="Batch 325 File Detail Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","Z325DTL","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Process Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC1|"_"File Sequence"_"|VIN2|"_VIN2.get()

		set VWHERE="Z325DTL.DATE=:VIN1 AND Z325DTL.SEQ=:VIN2"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Batch 325 File Detail Report"
		set VBNRINFO("PGM")="R01S022"
		set VBNRINFO("RID")="Z325DTL"
		set VBNRINFO("TABLES")="Z325DTL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,Z325DTL]DATE"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,Z325DTL]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("Z325DTL.DATE,Z325DTL.SEQ,Z325DTL.FILENM,Z325DTL.TSALECNT,Z325DTL.TSALETOT,Z325DTL.DSALECNT,Z325DTL.DSALETOT,Z325DTL.TWITHCNT,Z325DTL.TWITHTOT,Z325DTL.DWITHCNT,Z325DTL.DWITHTOT,Z325DTL.TDEBCNT,Z325DTL.TDEBTOT,Z325DTL.DDEBCNT,Z325DTL.DDEBTOT,Z325DTL.TCARDCNT,Z325DTL.TCARDTOT,Z325DTL.DCARDCNT,Z325DTL.DCARDTOT,Z325DTL.TUTILCNT,Z325DTL.TUTILTOT,Z325DTL.DUTILCNT,Z325DTL.DUTILTOT,Z325DTL.TPAYCNT,Z325DTL.TPAYTOT,Z325DTL.DPAYCNT,Z325DTL.DPAYTOT,Z325DTL.TREFCNT,Z325DTL.TREFTOT,Z325DTL.DREFCNT,Z325DTL.DREFTOT,Z325DTL.TCREDCNT,Z325DTL.TCREDTOT,Z325DTL.DCREDCNT,Z325DTL.DCREDTOT","Z325DTL","Z325DTL.DATE=:VIN1 AND Z325DTL.SEQ=:VIN2","Z325DTL.DATE,Z325DTL.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35
	set vc1=V.piece($C(9),1)			// Z325DTL.DATE
	set vc2=V.piece($C(9),2)			// Z325DTL.SEQ
	set vc3=V.piece($C(9),3)			// Z325DTL.FILENM
	set vc4=V.piece($C(9),4)			// Z325DTL.TSALECNT
	set vc5=V.piece($C(9),5)			// Z325DTL.TSALETOT
	set vc6=V.piece($C(9),6)			// Z325DTL.DSALECNT
	set vc7=V.piece($C(9),7)			// Z325DTL.DSALETOT
	set vc8=V.piece($C(9),8)			// Z325DTL.TWITHCNT
	set vc9=V.piece($C(9),9)			// Z325DTL.TWITHTOT
	set vc10=V.piece($C(9),10)			// Z325DTL.DWITHCNT
	set vc11=V.piece($C(9),11)			// Z325DTL.DWITHTOT
	set vc12=V.piece($C(9),12)			// Z325DTL.TDEBCNT
	set vc13=V.piece($C(9),13)			// Z325DTL.TDEBTOT
	set vc14=V.piece($C(9),14)			// Z325DTL.DDEBCNT
	set vc15=V.piece($C(9),15)			// Z325DTL.DDEBTOT
	set vc16=V.piece($C(9),16)			// Z325DTL.TCARDCNT
	set vc17=V.piece($C(9),17)			// Z325DTL.TCARDTOT
	set vc18=V.piece($C(9),18)			// Z325DTL.DCARDCNT
	set vc19=V.piece($C(9),19)			// Z325DTL.DCARDTOT
	set vc20=V.piece($C(9),20)			// Z325DTL.TUTILCNT
	set vc21=V.piece($C(9),21)			// Z325DTL.TUTILTOT
	set vc22=V.piece($C(9),22)			// Z325DTL.DUTILCNT
	set vc23=V.piece($C(9),23)			// Z325DTL.DUTILTOT
	set vc24=V.piece($C(9),24)			// Z325DTL.TPAYCNT
	set vc25=V.piece($C(9),25)			// Z325DTL.TPAYTOT
	set vc26=V.piece($C(9),26)			// Z325DTL.DPAYCNT
	set vc27=V.piece($C(9),27)			// Z325DTL.DPAYTOT
	set vc28=V.piece($C(9),28)			// Z325DTL.TREFCNT
	set vc29=V.piece($C(9),29)			// Z325DTL.TREFTOT
	set vc30=V.piece($C(9),30)			// Z325DTL.DREFCNT
	set vc31=V.piece($C(9),31)			// Z325DTL.DREFTOT
	set vc32=V.piece($C(9),32)			// Z325DTL.TCREDCNT
	set vc33=V.piece($C(9),33)			// Z325DTL.TCREDTOT
	set vc34=V.piece($C(9),34)			// Z325DTL.DCREDCNT
	set vc35=V.piece($C(9),35)			// Z325DTL.DCREDTOT
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

	type public Number DCNTTOT,DTOTAMT
	type public Number TCNTTOT,TTOTAMT

	S (DCNTTOT,DTOTAMT)=0
	S (TCNTTOT,TTOTAMT)=0

	Q
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		do VTRL0
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1		// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VDTL2	// Detail
	type public String DCNTTOT,DTOTAMT,IOSL,TCNTTOT,TTOTAMT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2

	if VLC+11>IOSL do VHDG0 quit:VFMQ

	set VL="               "_"SALES"
	set VL=VL_$J("",27-VL.length())_$J(vc4,6)
	set VL=VL_$J("",45-VL.length())_$J($FN(vc5,",",2),15)
	set VL=VL_$J("",73-VL.length())_$J(vc6,6)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc7,",",2),15)
	do VOM
	set VL="         "_"WITHDRAWALS     "
	set VL=VL_$J("",27-VL.length())_$J(vc8,6)
	set VL=VL_$J("",45-VL.length())_$J($FN(vc9,",",2),15)
	set VL=VL_$J("",73-VL.length())_$J(vc10,6)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc11,",",2),15)
	do VOM
	set VL="  "_"DEBIT TRANSACTIONS       "
	set VL=VL_$J("",27-VL.length())_$J(vc12,6)
	set VL=VL_$J("",45-VL.length())_$J($FN(vc13,",",2),15)
	set VL=VL_$J("",73-VL.length())_$J(vc14,6)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc15,",",2),15)
	do VOM
	set VL="        "_"CARD CHARGES"
	set VL=VL_$J("",27-VL.length())_$J(vc16,6)
	set VL=VL_$J("",45-VL.length())_$J($FN(vc17,",",2),15)
	set VL=VL_$J("",73-VL.length())_$J(vc18,6)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc19,",",2),15)
	do VOM
	set VL=" "_"UTILITIES PAYEMENTS"
	set VL=VL_$J("",27-VL.length())_$J(vc20,6)
	set VL=VL_$J("",45-VL.length())_$J($FN(vc21,",",2),15)
	set VL=VL_$J("",73-VL.length())_$J(vc22,6)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc23,",",2),15)
	do VOM
	set VL="            "_"PAYMENTS"
	set VL=VL_$J("",27-VL.length())_$J(vc24,6)
	set VL=VL_$J("",45-VL.length())_$J($FN(vc25,",",2),15)
	set VL=VL_$J("",73-VL.length())_$J(vc26,6)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc27,",",2),15)
	do VOM
	set VL="             "_"REFUNDS"
	set VL=VL_$J("",27-VL.length())_$J(vc28,6)
	set VL=VL_$J("",45-VL.length())_$J($FN(vc29,",",2),15)
	set VL=VL_$J("",73-VL.length())_$J(vc30,6)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc31,",",2),15)
	do VOM
	set VL="             "_"CREDITS      "
	set VL=VL_$J("",27-VL.length())_$J(vc32,6)
	set VL=VL_$J("",45-VL.length())_$J($FN(vc33,",",2),15)
	set VL=VL_$J("",73-VL.length())_$J(vc34,6)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc35,",",2),15)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DCNTTOT,DTOTAMT,RID,RN,TCNTTOT,TTOTAMT,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if VPN do VTRL0
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="                                             "_$E(RN,1,30)
	do VOM
	set VL="          "_"Process Date:"
	set VL=VL_$J("",25-VL.length())_$J($$DAT^%ZM(vc1),10)
	do VOM
	set VL="        "_"Daily Sequence:"
	set VL=VL_$J("",25-VL.length())_$J(vc2,1)
	do VOM
	set VL="             "_"File Name: "
	set VL=VL_$J("",25-VL.length())_$E(vc3,1,40)
	do VOM
	set VL="---------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="                                     "_"TRAILER                                      DETAIL"
	do VOM
	set VL="---------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL=" "_"TYPE OF TRANSACTION     TOTAL VOLUME             TOTAL AMOUNT          TOTAL VOLUME            TOTAL AMOUNT"
	do VOM
	set VL="---------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VTRL0	// Page Trailer
	type Public Number IOSL,verror,vh,VFMQ,VLC,VT(),VX()
	type Public String DCNTTOT,DTOTAMT,TCNTTOT,TTOTAMT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2
	type Number I
	type String VL

	set VL=""
	for I=VLC:1:IOSL-3 do VOM

	set VL="---------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="        "_"File Totals"
	do VP1 quit:VFMQ!verror.get()  set V=$J(TCNTTOT,7)
	set VL=VL_$J("",26-VL.length())_V
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(TTOTAMT,",",2),16)
	set VL=VL_$J("",44-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$J(DCNTTOT,7)
	set VL=VL_$J("",73-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$J($FN(DTOTAMT,",",2),16)
	set VL=VL_$J("",91-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: TCNTTOT

	type public String vc16,vc32,vc12,vc24,vc28,vc4,vc20,vc8
	type public Number TCNTTOT

	set TCNTTOT=TCNTTOT+vc16
	set TCNTTOT=TCNTTOT+vc32
	set TCNTTOT=TCNTTOT+vc12
	set TCNTTOT=TCNTTOT+vc24
	set TCNTTOT=TCNTTOT+vc28
	set TCNTTOT=TCNTTOT+vc4
	set TCNTTOT=TCNTTOT+vc20
	set TCNTTOT=TCNTTOT+vc8
	
	Q

	quit

VP2	// Column pre-processor - Variable: TTOTAMT

	type public String vc17,vc33,vc13,vc25,vc29,vc5,vc21,vc9

	type public Number TTOTAMT

	set TTOTAMT=TTOTAMT+vc17
	set TTOTAMT=TTOTAMT+vc33
	set TTOTAMT=TTOTAMT+vc13
	set TTOTAMT=TTOTAMT+vc25
	set TTOTAMT=TTOTAMT+vc29
	set TTOTAMT=TTOTAMT+vc5
	set TTOTAMT=TTOTAMT+vc21
	set TTOTAMT=TTOTAMT+vc9

	Q

	quit

VP3	// Column pre-processor - Variable: DCNTTOT

	type public String vc18,vc34,vc14,vc26,vc30,vc6,vc10,vc22
	type public Number DCNTTOT

	set DCNTTOT=DCNTTOT+vc18
	set DCNTTOT=DCNTTOT+vc34
	set DCNTTOT=DCNTTOT+vc14
	set DCNTTOT=DCNTTOT+vc26
	set DCNTTOT=DCNTTOT+vc30
	set DCNTTOT=DCNTTOT+vc6
	set DCNTTOT=DCNTTOT+vc10
	set DCNTTOT=DCNTTOT+vc22
	
	Q

	quit

VP4	// Column pre-processor - Variable: DTOTAMT

	type public String vc19,vc35,vc15,vc27,vc31,vc7,vc23,vc11

	type public Number DTOTAMT

	set DTOTAMT=DTOTAMT+vc19
	set DTOTAMT=DTOTAMT+vc35
	set DTOTAMT=DTOTAMT+vc15
	set DTOTAMT=DTOTAMT+vc27
	set DTOTAMT=DTOTAMT+vc31
	set DTOTAMT=DTOTAMT+vc7
	set DTOTAMT=DTOTAMT+vc23
	set DTOTAMT=DTOTAMT+vc11
	
	Q
	quit
