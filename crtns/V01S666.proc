V01S666(%ProcessMode,RecordUTBLFORMVAR fUTBLFOR)   // -  - SID= <UTBLFORMVAR> Form Variation Input Screen
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLFORMVAR",VPGM=$T(+0),VSNAME="Form Variation Input Screen"
 set VFSN("UTBLFORMVAR")="zfUTBLFOR"
 set vPSL=1
 set KEYS(1)=fUTBLFOR.CO
 set KEYS(2)=fUTBLFOR.FORM
 set KEYS(3)=fUTBLFOR.VAR
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLFOR),VDA1(.fUTBLFOR),^DBSPNT()

 set ER=0 do VSCRPRE(.fUTBLFOR) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLFOR),VPR(.fUTBLFOR),VDA1(.fUTBLFOR)
 if %ProcessMode do VLOD(.fUTBLFOR) quit:$G(ER)  do VPR(.fUTBLFOR),VDA1(.fUTBLFOR)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLFOR)
	quit


VNEW(RecordUTBLFORMVAR fUTBLFOR) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLFOR)
 do VLOD(.fUTBLFOR)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLFORMVAR fUTBLFOR)
 if fUTBLFOR.ADDRFLG="" set fUTBLFOR.ADDRFLG=0
 if fUTBLFOR.QFLG="" set fUTBLFOR.QFLG=1
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLFORMVAR fUTBLFOR) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLFORMVAR fUTBLFOR) // Display screen prompts
 set VO="16||13|0"
 set VO(0)="|0"
 set VO(1)=$C(4,21,14,1,0,0,0,0,0,0)_"01T Company Code:"
 set VO(2)=$C(5,19,16,1,0,0,0,0,0,0)_"01T Letter/Form ID:"
 set VO(3)=$C(6,30,5,1,0,0,0,0,0,0)_"01T VAR:"
 set VO(4)=$C(8,23,12,1,0,0,0,0,0,0)_"01TDescription:"
 set VO(5)=$C(10,21,14,0,0,0,0,0,0,0)_"01TValue of XTJD:"
 set VO(6)=$C(11,26,9,0,0,0,0,0,0,0)_"01TCalendar:"
 set VO(7)=$C(13,21,14,0,0,0,0,0,0,0)_"01T Address Flag:"
 set VO(8)=$C(14,14,21,0,0,0,0,0,0,0)_"01TCustomer Sort Option:"
 set VO(9)=$C(15,15,20,0,0,0,0,0,0,0)_"01TConsolidate Records:"
 set VO(10)=$C(16,25,10,0,0,0,0,0,0,0)_"01TQuit Flag:"
 set VO(11)=$C(17,15,20,0,0,0,0,0,0,0)_"01TCustom Routine Name:"
 set VO(12)=$C(18,20,15,0,0,0,0,0,0,0)_"01TParameter Flag:"
 set VO(13)=$C(19,25,10,0,0,0,0,0,0,0)_"01TSub-Query:"
 set VO(14)=$C(20,26,9,0,0,0,0,0,0,0)_"01TOMR Code:"
 set VO(15)=$C(22,1,14,1,0,0,0,0,0,0)_"01T Record Types:"
 set VO(16)=$C(23,4,11,0,0,0,0,0,0,0)_"01TTest Logic:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLFORMVAR fUTBLFOR)  // Display screen data
 new V
 s ZDESC=$G(ZDESC)
 s ZFID=$G(ZFID)
 //
 set VO="34|17|13|0"
 set VO(17)=$C(1,1,80,3,0,0,0,0,0,0)_"01T"_$$VRV($$CTR^%ZM($G(ZDESC),80),80)
 set VO(18)=$C(4,36,12,2,0,0,0,0,0,0)_"01T"_$E(fUTBLFOR.CO,1,12)
 set VO(19)=$C(5,36,12,2,0,0,0,0,0,0)_"01T"_$E(fUTBLFOR.FORM,1,12)
 set VO(20)=$C(5,50,20,2,0,0,0,0,0,0)_"01T"_$G(ZFID)
 set VO(21)=$C(6,36,12,2,0,0,0,0,0,0)_"01N"_fUTBLFOR.VAR
 set VO(22)=$C(8,36,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFOR.DES,1,40)
 set VO(23)=$C(10,36,12,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFOR.TJDVAL,1,12)
 set VO(24)=$C(11,36,6,2,0,0,0,0,0,0)_"00U"_$E(fUTBLFOR.CAL,1,6)
 set VO(25)=$C(13,36,1,2,0,0,0,0,0,0)_"00N"_fUTBLFOR.ADDRFLG
 set VO(26)=$C(14,36,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLFOR.ACNSORT:"Y",1:"N")
 set VO(27)=$C(15,36,45,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFOR.CONFLG,1,60)
 set VO(28)=$C(16,36,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLFOR.QFLG:"Y",1:"N")
 set VO(29)=$C(17,36,40,2,0,0,0,0,0,0)_"00U"_$E(fUTBLFOR.CPROC,1,40)
 set VO(30)=$C(18,36,1,2,0,0,0,0,0,0)_"00L"_$S(fUTBLFOR.PARMFLG:"Y",1:"N")
 set VO(31)=$C(19,36,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFOR.SUBQRY,1,40)
 set VO(32)=$C(20,36,8,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFOR.OMR,1,8)
 set VO(33)=$C(22,16,65,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFOR.RECTYPES,1,100)
 set VO(34)=$C(23,16,65,2,0,0,0,0,0,0)_"00T"_$E(fUTBLFOR.TEST,1,200)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLFORMVAR fUTBLFOR)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=18,VPT=1,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLFORMVAR"
 set OLNTB=23016
 
 set VFSN("UTBLFORMVAR")="zfUTBLFOR"
 //
 // 
	
	
 set %TAB(1)=$C(0,0,80)_"20JC|*ZDESC|[*]@ZDESC"
 set %TAB(2)=$C(3,35,12)_"21T12401|1|[UTBLFORMVAR]CO|[UTBLCO]"
 set %TAB(3)=$C(4,35,12)_"21T12402|1|[UTBLFORMVAR]FORM|[UTBLFORMS]"
 set %TAB(4)=$C(4,49,20)_"20T|*ZFID|[*]@ZFID"
 set %TAB(5)=$C(5,35,12)_"21N12403|1|[UTBLFORMVAR]VAR"
 set %TAB(6)=$C(7,35,40)_"01T12411|1|[UTBLFORMVAR]DES|||do VP1^V01S666(.fUTBLFOR)"
 set %TAB(7)=$C(9,35,12)_"00T12410|1|[UTBLFORMVAR]TJDVAL|||do VP2^V01S666(.fUTBLFOR)"
 set %TAB(8)=$C(10,35,6)_"00U12414|1|[UTBLFORMVAR]CAL|[UTBLNBD]||do VP3^V01S666(.fUTBLFOR)"
 set %TAB(9)=$C(12,35,1)_"00N12406|1|[UTBLFORMVAR]ADDRFLG|[STBLFORMVAR]||do VP4^V01S666(.fUTBLFOR)|do VP5^V01S666(.fUTBLFOR)"
 set %TAB(10)=$C(13,35,1)_"00L12412|1|[UTBLFORMVAR]ACNSORT"
 set %TAB(11)=$C(14,35,45)_"00T12407|1|[UTBLFORMVAR]CONFLG|||do VP6^V01S666(.fUTBLFOR)||||||60"
 set %TAB(12)=$C(15,35,1)_"00L12408|1|[UTBLFORMVAR]QFLG"
 set %TAB(13)=$C(16,35,40)_"00U12405|1|[UTBLFORMVAR]CPROC|||do VP7^V01S666(.fUTBLFOR)"
 set %TAB(14)=$C(17,35,1)_"00L12413|1|[UTBLFORMVAR]PARMFLG"
 set %TAB(15)=$C(18,35,40)_"00T12404|1|[UTBLFORMVAR]SUBQRY"
 set %TAB(16)=$C(19,35,8)_"00T12409|1|[UTBLFORMVAR]OMR"
 set %TAB(17)=$C(21,15,65)_"01T12402|1|[UTBLFORMVAR]RECTYPES|||do VP8^V01S666(.fUTBLFOR)||||||100"
 set %TAB(18)=$C(22,15,65)_"00T12401|1|[UTBLFORMVAR]TEST|||do VP9^V01S666(.fUTBLFOR)||||||200"
 do VTBL(.fUTBLFOR)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLFORMVAR fUTBLFOR) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLFORMVAR fUTBLFOR) //
 if XDCOL="" do GOTO^DBSMACRO("[UTBLFORMVAR]ADDRFLG")

 if fUTBLFOR.form.extract(1,4)="STMT" do GOTO^DBSMACRO("[UTBLFORMVAR]QFLG")
VP2(RecordUTBLFORMVAR fUTBLFOR) //
 type Number CAL,SN
 type public String X
 if XDCOL="", X=""  quit
 set X=X.upperCase()
 set CAL=X.extract(1,1)
 // Use one of the following forms: P, T, T-n, or T+n
 if CAL'="P",CAL'="T" do Runtime.setErrMSG("UTBLFORMVAR","4453") quit:ER

 // Use one of the following forms: P, T, T-n, or T+n
 if CAL="P",fUTBLFOR.form'="REJITEMS" do Runtime.setErrMSG("UTBLFORMVAR","4453") quit:ER

 // Use one of the following forms: P, T, T-n, or T+n
 if CAL="P",(X.length()>1) do Runtime.setErrMSG("UTBLFORMVAR","4453") quit:ER
 set SN=X.extract(1,2)

 // Use one of the following forms: P, T, T-n, or T+n
 if SN'="+",SN'="-",SN="" do Runtime.setErrMSG("UTBLFORMVAR","4453") quit:ER
 if CAL'="P" do {
	do DEFAULT^DBSMACRO("[UTBLFORMVAR]CAL","")   	
	do GOTO^DBSMACRO("[UTBLFORMVAR]ADDRFLG")
	}
VP3(RecordUTBLFORMVAR fUTBLFOR) //
 if (fUTBLFOR.tjdval="P"),X="" set X="IBS"
VP4(RecordUTBLFORMVAR fUTBLFOR) //
 if 'XACNSORT do GOTO^DBSMACRO("[UTBLFORMVAR]CONFLG")
VP5(RecordUTBLFORMVAR fUTBLFOR) //
 do CHANGE^DBSMACRO("TBL","ACCT(")
VP6(RecordUTBLFORMVAR fUTBLFOR) //
 type String rec,XVA
 type Number HIT,ICNT
 if X="" quit
 set HIT=0
 set rec=""
 set XVA=""
 
 for ICNT=1:1:RECTYPES.length(",") set rec(RECTYPES.piece(",",ICNT))=""
 for ICNT=1:1:X.length(",") do {  quit:HIT
	set XVA=X.piece(",",ICNT)
 	if 'XVA.exists() set HIT=1
 	}
 
 // Only record type(s): ~p1 for form ~p2
 if HIT do Runtime.setErrMSG("UTBLFORMBCH","4454","RECTYPES,FORM") quit:ER
VP7(RecordUTBLFORMVAR fUTBLFOR) //
 type public String X,Z
 if X="" do GOTO^DBSMACRO("[UTBLFORMVAR]SUBQRY") quit
 set Z=X.piece("^",2)
 set Z=Z.piece("(",1)
 if '$$VALID^%ZRTNS(Z) do {  quit:ER
	// Invalid routine name ~p1
 	do Runtime.setErrMSG("UTBLFORMVAR","1454") 
 	}
 if X.find("(") do {  quit
 	do DEFAULT^DBSMACRO("[UTBLFORMVAR]PARMFLG","0")
 	do GOTO^DBSMACRO("[UTBLFORMVAR]SUBQRY") quit
 	}
 if fUTBLFOR.form.extract(1,4)="STMT" do DEFAULT^DBSMACRO("[UTBLFORMVAR]PARMFLG","1")
VP8(RecordUTBLFORMVAR fUTBLFOR) //
 type String rec,XVA
 type Number CNT,HIT,I
 set CNT=0
 set HIT=0
 set rec=""
 set XVA=""

 for I=1:1:RECTYPES.length(",") set rec(RECTYPES.piece(",",I))=""
 for I=1:1:X.length(",") do {  quit:HIT
	set XVA=rec(X.piece(",",I)).get()
 	if XVA.isNull() set HIT=1
 	if X.piece(",",I)=201 set CNT=CNT+1
 	}
 // Only record type(s): ~p1 for form ~p2
 if HIT do Runtime.setErrMSG("UTBLFORMBCH","4454","RECTYPES~FORM") quit:ER
 // Only allow up to 3 secondary customers
 if CNT>3 do Runtime.setErrMSG("UTBLFORMBCH","4456") quit:ER

VP9(RecordUTBLFORMVAR fUTBLFOR) //
 type public Boolean ER
 type public Number cnt,i,let,seq,DI
 type public String CNT,Q,arycnt,pk,FILES,HOLD,NC,NEED,P1,XLIBS,PKEYS

 if X=""  quit
 set ZX=X
 if X["LETTJD" do {
 	set HOLD=""
 	for let=1:1:X.length("LETTJD") set HOLD.piece("|",let)=X.piece("LETTJD",let)
 	set X=HOLD.translate("|","T")
 	}
 set FILES=XFID
 do ^DBSQRY
 if ER,RM.isNull() set RM=$$^MSG(1434)
 if ER quit

 set XLIBS="SYSDEV"
 
 type ResultSet rsdbtbl=Db.select("ACCKEYS","DBTBL1","%LIBS=:XLIBS AND FID=:XFID")
 if rsdbtbl.next() set PKEYS=rsdbtbl.getCol("acckeys")
 for i=1:1:PKEYS.length(",") set pk(PKEYS.piece(",",i))=""
 set cnt=""
 set CNT=""
 set NC=""
 
 for  set cnt=Q(cnt).order() quit:cnt.isNull()  do { quit:ER
 	set seq=""
 	for  set seq=Q(cnt,seq).order() quit:seq.isNull()  do { quit:ER
 		set P1=(Q(cnt,seq).piece("|",1)).piece($C(1),2)
 		set elem="SYSDEV."_XFID_"."
 		set DI=P1.piece(elem,2)
		// Only allow up to 3 secondary customers
 		if DI="" do Runtime.setErrMSG("DBTBL1","4456",Q(cnt,seq).piece("|",1)) quit:ER
		set NEED(DI)=DI
 		}
 	}
 do ^DBSQRYA quit:ER
 for  set cnt=NEED(cnt).order() quit:cnt.isNull()  if 'pk(NEED(cnt)).exists(),NEED(cnt)'="" set NC=NC_NEED(cnt)_","
 set fUTBLFOR.needcol=NC.piece(",",1,NC.length(",")-1)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLFORMVAR fUTBLFOR
 do VPR(.fUTBLFOR)
 do VDA1(.fUTBLFOR)
 do ^DBSPNT()
 quit

VW(RecordUTBLFORMVAR fUTBLFOR)
 do VDA1(.fUTBLFOR)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLFORMVAR fUTBLFOR)
 do VDA1(.fUTBLFOR)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLFORMVAR fUTBLFOR
 do VDA1(.fUTBLFOR)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLFORMVAR fUTBLFOR
 if sn="UTBLFORMVAR" do vSET1(.fUTBLFOR,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLFORMVAR fUTBLFOR,di,X)
 do fUTBLFOR.setAuditFlag(1)
 set fUTBLFOR.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLFORMVAR fUTBLFOR
 if fid="UTBLFORMVAR" quit $$vREAD1(.fUTBLFOR,di)
 quit ""
vREAD1(RecordUTBLFORMVAR fUTBLFOR,di)
 quit fUTBLFOR.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLFORMVAR fUTBLFOR)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type public Boolean ER
 type Number X,XCT,XVAR
 type String XFORM,XCO
 type public String ACCT()
 type public String ZFID
 
 set XFORM=fUTBLFOR.form
 set XCO=fUTBLFOR.co
 set XVAR=fUTBLFOR.var
 set ER=0
 
 if OPT.get()=0 &((XFORM="IRAMADNOT")!(XFORM="IRAMADMIN")) do {
 	type ResultSet rsutfmvr=Db.select("VAR","UTBLFORMVAR","CO=:XCO AND FORM=:XFORM")
 	set XVAR=rsutfmvr.getCol("var")
	// Form already created
	if 'XVAR="" do Runtime.setErrMSG("UTBLFORMVAR","4474","FORM") quit:ER
 	}
 type ResultSet rsfrmbch=Db.select("RECTYPES,FID,DCOL,ACNSORT","UTBLFORMBCH","FORM=:XFORM")
 if rsfrmbch.next() do {
 	set RECTYPES=rsfrmbch.getCol("rectypes")
	set XFID=rsfrmbch.getCol("fid")
 	set XDCOL=rsfrmbch.getCol("dcol")
 	set XACNSORT=rsfrmbch.getCol("acnsort")
 	do DISPLAY^DBSMACRO("UTBLFORMVAR.RECTYPES")
 	}
 set XFN=%FN.get()
 if XFN'="" do {
	type RecordSCATBL scatbl=Db.getRecord("SCATBL","FN=:XFN")
	set ZDESC=scatbl.desc
 	}
 else  set ZDESC=""
 
 set ZFID="("_XFID_")"
 set XCT=1
 set X=1
 if XFORM="CIFMAINT" set XCT=0
 if XFORM="ADDRCHG" set XCT=3
 for X=0:1:XCT do {
        type ResultSet rstblfvr=Db.select("DESCP","STBLFORMVAR","FLG=:X")
        if rstblfvr.next() set ACCT(X)=rstblfvr.getCol("descp")
 	}
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
