V00S416(%ProcessMode,)   // -  - SID= <MTMSVSTATS> Display MTM Server Stats
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:55 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="MTMSVSTATS",VPGM=$T(+0),VSNAME="Display MTM Server Stats"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=17 do VPR(),VDA1(),V5^DBSPNT quit

 if '%ProcessMode do VNEW(),VPR(),VDA1()
 if %ProcessMode do VLOD() quit:$G(ER)  do VPR(),VDA1()

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB()
	quit


VNEW() // Initialize arrays if %O=0
 
 do VDEF()
 do VLOD()
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF()
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD() // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=17
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR() // Display screen prompts
 set VO="16||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,1,25,0,0,0,0,0,0,0)_"01TServer Statistics for MTM"
 set VO(2)=$C(3,22,7,2,0,0,0,0,0,0)_"01TTracked"
 set VO(3)=$C(3,31,7,2,0,0,0,0,0,0)_"01T#Active"
 set VO(4)=$C(3,41,1,2,0,0,0,0,0,0)_"01T#"
 set VO(5)=$C(3,42,7,2,0,0,0,0,0,0)_"01TRequest"
 set VO(6)=$C(3,50,1,2,0,0,0,0,0,0)_"01T#"
 set VO(7)=$C(3,51,8,2,0,0,0,0,0,0)_"01TResponse"
 set VO(8)=$C(3,61,20,2,0,0,0,0,0,0)_"01TResponse Time (Secs)"
 set VO(9)=$C(4,1,11,2,0,0,0,0,0,0)_"01TServer Type"
 set VO(10)=$C(4,22,8,2,0,0,0,0,0,0)_"01T(hhh:mm)"
 set VO(11)=$C(4,33,5,2,0,0,0,0,0,0)_"01T/Slot"
 set VO(12)=$C(4,43,6,2,0,0,0,0,0,0)_"01T/State"
 set VO(13)=$C(4,52,7,2,0,0,0,0,0,0)_"01T/Status"
 set VO(14)=$C(4,61,8,2,0,0,0,0,0,0)_"01TMin/%CPU"
 set VO(15)=$C(4,71,3,2,0,0,0,0,0,0)_"01TMax"
 set VO(16)=$C(4,78,3,2,0,0,0,0,0,0)_"01TAvg"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1()  // Display screen data
 new V
 s DATA=$G(DATA)
 s MTMID=$G(MTMID)
 //
 set VO="19|17|13|"
 set VO(17)=$C(1,27,10,2,0,0,0,0,0,0)_"01T"_$G(MTMID)
 set VO(18)=$C(1,62,10,2,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$DAT^%ZM(DATE))
 set VO(19)=$C(1,73,8,2,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$TIM^%ZM(TIME))
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=6 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA()
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA()  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,DATA(I))=$G(DATA(I))
 
 set VO(VX+1)=$C(DY,1,20,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,23,6,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,32,6,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",3)
 set VO(VX+4)=$C(DY,40,9,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",4)
 set VO(VX+5)=$C(DY,50,9,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",5)
 set VO(VX+6)=$C(DY,61,6,2,0,0,0,0,0,0)_"01T"_$J($FN($P(v1,"|",6),",",3),6)
 set VO(VX+7)=$C(DY,68,6,2,0,0,0,0,0,0)_"01T"_$J($FN($P(v1,"|",7),",",3),6)
 set VO(VX+8)=$C(DY,75,6,2,0,0,0,0,0,0)_"01T"_$J($FN($P(v1,"|",8),",",3),6)
 set DY=DY+1,VX=VX+8
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB()
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=1,%MOD=8,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=5+%REPEAT,BLKSIZ=(68*%REPEAT)+10,PGM=$T(+0),DLIB="SYSDEV",DFID=""
 set OLNTB=VPB*1000
 
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,26,10)_"20T|*MTMID|[*]@MTMID"
 set %TAB(2)=$C(5,0,20)_"20T12401|*DATA(1)|[*]@DATA"
 set %TAB(3)=$C(5,22,6)_"20T12402|*DATA(1)|[*]@DATA"
 set %TAB(4)=$C(5,31,6)_"20N12403|*DATA(1)|[*]@DATA"
 set %TAB(5)=$C(5,39,9)_"20N12404|*DATA(1)|[*]@DATA|||||||0"
 set %TAB(6)=$C(5,49,9)_"20N12405|*DATA(1)|[*]@DATA|||||||0"
 set %TAB(7)=$C(5,60,6)_"20N12406|*DATA(1)|[*]@DATA|||||||3"
 set %TAB(8)=$C(5,67,6)_"20N12407|*DATA(1)|[*]@DATA|||||||3"
 set %TAB(9)=$C(5,74,6)_"20N12408|*DATA(1)|[*]@DATA|||||||3"
 do VTBL()
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL() //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 do VPR()
 do VDA1()
 do ^DBSPNT()
 quit

VW()
 do VDA1()
 do ^DBSPNT(10)
 quit

VDAPNT()
 do VDA1()
 do ^DBSPNT(0,2)
 quit

VDA
 do VDA1()
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 quit ""
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
