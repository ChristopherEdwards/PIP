BCHCHKH7 //Batch BCHCHKHLD7 - HOLD CHECK REMOVAL
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:07 - joynerd
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHCHKHLD7 Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHCHKHLD7")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHCHKHLD7") quit
 do JOBMGR^BCHUTL(%FN,"BCHCHKHLD7",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHCHKHLD7")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(CID,EXPDT) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHCHKHLD7","*","",CID.get()_","_EXPDT.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHCHKHLD7",CID.get()_","_EXPDT.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHCHKHLD7",CID.get()_","_EXPDT.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,CID,EXPDT)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHCHKHLD7","*","",CID.get()_","_EXPDT.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHCHKHLD7",CID.get()_","_EXPDT.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,CID,EXPDT) //
	type RecordACN acn
	
	set acn=Db.getRecord("ACN","CID")

        do EXEC(.acn)
        
	quit	


	// Processing account

EXEC(RecordACN acn)	// 
	
	type String CRCD,TYPE
	type Number HLD,TOTAMT,X
	type Date DATE
	type Public Number CID
	type Public Date EXPDT

 	type ResultSet rs
 	
	set rs=Db.select("AMT","HLD7","CID=:CID AND EXPDT>:%SystemDate")
	 
 	set HLD=0   				// sum of a specific account   
        
	if 'rs.isEmpty() while rs.next() do {
        	set HLD=HLD+rs.getCol(1)
 	}
 
	type RecordHLD7 hld7
 	type RecordPRODCTL dtype

 	set hld7=Db.getRecord("HLD7","CID,EXPDT")

	set X=HLD

	set TYPE=acn.type
	set CRCD=acn.crcd

	set dtype=Db.getRecord("PRODCTL","TYPE")
 
	if dtype.trb set X=-HLD  		// transaction to reduce balance
 	
	if acn.bal-acn.balcol-X do {
		set acn.balcol=acn.bal-X
 		do acn.bypassSave()
	}

	type ResultSet rs1=Db.select("EXPDT","HLD7","CID=:CID AND EXPDT<:%SystemDate+1","EXPDT DESC")
	if rs1.next() set DATE=rs1.getCol("EXPDT")
	type RecordHLD7 temp7

	set TOTAMT=0
 	if DATE do {
		set temp7=Db.getRecord("HLD7","CID,DATE")
		set TOTAMT=temp7.totamt
	}
						
 	if HLD-TOTAMT do {
		set hld7.totamt=HLD
		set hld7.expdt=%SystemDate
		set hld7.cid=CID
		do hld7.bypassSave()
	}

	quit
	
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,CID,EXPDT
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set CID=vRECORD.piece($C(9),1)
 set EXPDT=vRECORD.piece($C(9),2)
 do vPROC(CID,EXPDT)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,CID,EXPDT
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32767 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+24>32767 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("DISTINCT CID,EXPDT","HLD7","HLD7.EXPDT=:TJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
