V00S627(%ProcessMode,RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)   // -  - SID= <UTBLRELMAT2> Customer Relationship Status Matrix 2D
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:39 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,MPAGES,MATRIX",VSID="UTBLRELMAT2",VPGM=$T(+0),VSNAME="Customer Relationship Status Matrix 2D"
 set VFSN("UTBLRELMAT")="zfUTBLREM",VFSN("UTBLRELMAT2")="zfUTBLREL"
 set vPSL=1
 set KEYS(1)=fUTBLREM.MATRIX
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=12 do VPR(.fUTBLREM,.fUTBLREL),VDA1(.fUTBLREM,.fUTBLREL),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fUTBLREM,.fUTBLREL) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLREM,.fUTBLREL),VPR(.fUTBLREM,.fUTBLREL),VDA1(.fUTBLREM,.fUTBLREL)
 if %ProcessMode do VLOD(.fUTBLREM,.fUTBLREL) quit:$G(ER)  do VPR(.fUTBLREM,.fUTBLREL),VDA1(.fUTBLREM,.fUTBLREL)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLREM,.fUTBLREL)
	quit


VNEW(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLREM,.fUTBLREL)
 do VLOD(.fUTBLREM,.fUTBLREL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=12
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) // Display screen prompts
 set VO="5||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,6,39,1,0,0,0,0,0,0)_"01T Cust. Relationship Status Matrix Name:"
 set VO(2)=$C(3,26,19,1,0,0,0,0,0,0)_"01TMatrix Description:"
 set VO(3)=$C(5,49,11,0,0,0,0,0,0,0)_"01TMore Pages:"
 set VO(4)=$C(7,12,47,0,0,0,0,0,0,0)_"01TCustomer Relationship Status Matrix Maintenance"
 set VO(5)=$C(9,59,6,0,0,0,0,0,0,0)_"01TStatus"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)  // Display screen data
 new V
 s DESC1=$G(DESC1)
 s DESC2=$G(DESC2)
 s MATRIX=$G(MATRIX)
 s MPAGES=$G(MPAGES)
 //
 set VO="10|6|13|0"
 set VO(6)=$C(2,46,12,2,0,0,0,0,0,0)_"01T"_$E(fUTBLREL.MATRIX,1,12)
 set VO(7)=$C(3,46,35,2,0,0,0,0,0,0)_"01T"_$E(fUTBLREM.MATDESC,1,40)
 set VO(8)=$C(5,61,1,2,0,0,0,0,0,0)_"00L"_$S($G(MPAGES):"Y",1:"N")
 set VO(9)=$C(9,4,25,2,0,0,0,0,0,0)_"01T"_$G(DESC1)
 set VO(10)=$C(9,31,25,2,0,0,0,0,0,0)_"01T"_$G(DESC2)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+4,DY=11 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLREM,.fUTBLREL)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,MATRIX(I))=$G(MATRIX(I))
 
 set V=$P(v1,"|",1) set VO(VX+1)=$C(DY,4,25,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,2))
 set V=$P(v1,"|",2) set VO(VX+2)=$C(DY,31,25,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,2))
 set VO(VX+3)=$C(DY,59,2,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",3)
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=5,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=2,VPB=10+%REPEAT,BLKSIZ=(52*%REPEAT)+103,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLRELMAT",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("UTBLRELMAT")="zfUTBLREM",VFSN("UTBLRELMAT2")="zfUTBLREL"
 //
 for I=9:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(1,45,12)_"21T12401|1|[UTBLRELMAT2]MATRIX|[UTBLRELMAT]"
 set %TAB(2)=$C(2,45,35)_"21T12401||[UTBLRELMAT]MATDESC|||||||||40"
 set %TAB(3)=$C(4,60,1)_"00L|*MPAGES|[*]@MPAGES|||do VP1^V00S627(.fUTBLREM,.fUTBLREL)"
 set %TAB(4)=$C(8,3,25)_"21T|*DESC1|[*]@DESC1"
 set %TAB(5)=$C(8,30,25)_"20T|*DESC2|[*]@DESC2"
 set %TAB(6)=$C(10,3,25)_"00N12401|*MATRIX(1)|[*]@MATRIX|^UTBL(""RELMAT"",MATRIX,:NOVAL||do VP2^V00S627(.fUTBLREM,.fUTBLREL)||||2"
 set %TAB(7)=$C(10,30,25)_"00N12402|*MATRIX(1)|[*]@MATRIX1|||do VP3^V00S627(.fUTBLREM,.fUTBLREL)||||2"
 set %TAB(8)=$C(10,58,2)_"00N12403|*MATRIX(1)|[*]@STATUS|||do VP4^V00S627(.fUTBLREM,.fUTBLREL)|do VP5^V00S627(.fUTBLREM,.fUTBLREL)"
 do VTBL(.fUTBLREM,.fUTBLREL)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordUTBLRELMAT fUTBLREM
 type Public RecordUTBLRELMAT2 fUTBLREL
 do VSPP1(.fUTBLREM,.fUTBLREL)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)
 type Public String MATRIX()
 type String TI
 set TI=""
 for  set TI=MATRIX(TI).order() quit:TI.isNull()  do {  quit:ER
	 if MATRIX(TI).piece("|",1)?1"-".N1".".N!(MATRIX(TI).piece("|",1)?.N1".".N) set MARIX(TI).piece("|",1)=+MARIX(TI).piece("|",1)
	 if MATRIX(TI).piece("|",2)?1"-".N1".".N!(MATRIX(TI).piece("|",2)?.N1".".N) set MARIX(TI).piece("|",2)=+MARIX(TI).piece("|",2)
 }
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) //
 type Public Number X
 if X set %PAGE=%PAGE+1 quit
 
VP2(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) //
 if X-V=0 quit
 
 if X="" do {
	do DELETE^DBSMACRO("@MATRIX1","1","0")
	do DELETE^DBSMACRO("@STATUS","1","0")
  }

 set DEC1=STBL1.piece("|",2)
 if DEC1="" set DEC1=STBL1.piece("|",3)
 else {
  set TBL=DEC1.piece(".",1)
  set DI=DEC1.piece(".",2)
  type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS='SYSDEV',FID=:TBL, DI=:DI",1)
  set TYP=dbtbl1d.typ
    if 'TYP="$" do {
           if X?.N!(X?.N1".".N) set X=$$^SCARND(+X,,,%CRCD,0) quit
        }
  quit
VP3(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) //
 type Public String MATRIX(),RM,MATRIX1
 type String DEC1,DI,TYP,TBL,DEC,%CRCD
 type Public Number ER,X,R,z1
 type Number I

 if X.isNull() quit
 set R=""
 set DEC1=STBL2.piece("|",2)
 if DEC1.isNull() set DEC1=STBL2.piece("|",3)
 if 'DEC1.isNull() do {
 	set TBL=DEC1.piece(".",1)
 	set DI=DEC1.piece(".",2)
 	type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS='SYSDEV',FID=:TBL, DI=:DI",1)
	set TYP=dbtbl1d.typ
	if 'TYP="$",X?.N!(X?.N1".".N) set X=$$^SCARND(+X,,,%CRCD,0)
	}
 if X.isNull(),('MATRIX(z1).piece("|",1)=""),('MATRIX(z1).piece("|",3)="") set ER=1,RM=$$^MSG(741) quit
 for I=1:1 set z1=MATRIX(z1).order() quit:z1.isNull()  do {  quit:R
 	 if MATRIX(z1).piece("|",1)=X set ER=1 quit
	 if ER set RM=$$^MSG(7609) quit
  }
VP4(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) //
 if X="",('MATRIX(z1).piece("|",2)=""),('MATRIX(z1).piece("|",1)="") set ER=1,RM=$$^MSG(741) quit
VP5(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL) //
 set I(3)="[UTBLRELSTAT]RELCODE,[UTBLRELSTAT]RELDESC"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLRELMAT fUTBLREM
 type Public RecordUTBLRELMAT2 fUTBLREL
 do VPR(.fUTBLREM,.fUTBLREL)
 do VDA1(.fUTBLREM,.fUTBLREL)
 do ^DBSPNT()
 quit

VW(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)
 do VDA1(.fUTBLREM,.fUTBLREL)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)
 do VDA1(.fUTBLREM,.fUTBLREL)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLRELMAT fUTBLREM
 type Public RecordUTBLRELMAT2 fUTBLREL
 do VDA1(.fUTBLREM,.fUTBLREL)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLRELMAT fUTBLREM
 if sn="UTBLRELMAT" do vSET1(.fUTBLREM,di,X)
 type Public RecordUTBLRELMAT2 fUTBLREL
 if sn="UTBLRELMAT2" do vSET2(.fUTBLREL,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLRELMAT fUTBLREM,di,X)
 do fUTBLREM.setAuditFlag(1)
 set fUTBLREM.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLRELMAT2 fUTBLREL,di,X)
 do fUTBLREL.setAuditFlag(1)
 set fUTBLREL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLRELMAT fUTBLREM
 if fid="UTBLRELMAT" quit $$vREAD1(.fUTBLREM,di)
 type Public RecordUTBLRELMAT2 fUTBLREL
 if fid="UTBLRELMAT2" quit $$vREAD2(.fUTBLREL,di)
 quit ""
vREAD1(RecordUTBLRELMAT fUTBLREM,di)
 quit fUTBLREM.@di
vREAD2(RecordUTBLRELMAT2 fUTBLREL,di)
 quit fUTBLREL.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLRELMAT fUTBLREM,RecordUTBLRELMAT2 fUTBLREL)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type Public String MATRIX(),STBL1,STBL2,DESC1,DESC2
 type Number ITEM1,ITEM2
 type Number R
 set MATRIX=NAME
 type RecordUTBLRELMAT utblrelmat=Db.getRecord("UTBLRELMAT","MATRIX=:NAME",1)
 set ITEM1=utblrelmat.rowatt
 set ITEM2=utblrelmat.colatt
 type RecordSTBLRELATT stblrelatt1=Db.getRecord("STBLRELATT","ATTRIB=:ITEM1",1)
 set DESC1=stblrelatt1.attdesc
 type RecordSTBLRELATT stblrelatt2=Db.getRecord("STBLRELATT","ATTRIB=:ITEM2",1)
 set DESC2=stblrelatt2.attdesc
 set STBL1=DESC1_"|"_stblrelatt1.depdi_"|"_stblrelatt1.lndi
 set STBL2=stblrelatt2.attdesc_"|"_stblrelatt2.depdi_"|"_stblrelatt2.lndi 
 if %O=0 set %O=1
 set MPAGES=0
 if '(MATRIX(%MODS).get()).isNull(),'(MATRIX(%MODS+%REPEAT-1).get()).isNull() do {
 	set R=""
   	set R=MATRIX(R).order(-1)
   	if 'R.isNull() set %PAGE=$$^SCARND(R/%REPEAT,,,,0,"+")
   	if '(MATRIX(%MODS+%REPEAT-1).get()).isNull(),(R.isNull()),((%PAGE-%PG)=1) set %PAGE=%PAGE-1
 	}
 if (MATRIX(%MODS+%REPEAT-1).get()).isNull() set %PAGE=%PG  quit
 
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
