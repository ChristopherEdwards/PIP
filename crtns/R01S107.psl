R01S107	// SCA036 - Dealer Trial Balance Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:38 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String PAYEE
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"

	set RID="SCA036"
	set RN="Dealer Trial Balance Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNCYCDLD]PAYEE|[LNAOP]:NOVAL||S PAYEE=X D EXT^DBSQRY||T|Payee Code|||||"
	set %TAB("VIN2")="|255||[LNCYCDLD]PLAN|[AOAMO]:NOVAL||D EXT^DBSQRY||T|Payee Plan|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String PAYEE
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,DNBAL,DNCNT,DNCOLL,DNDELDOL,DNDUE,DYBAL,DYCNT,DYCOLL,DYDELDOL,DYDUE,DYEARN,EFD,METH,PLAN,PNBAL,PNCNT,PNCOLL,PNDELDOL,PNDUE,PT,PYBAL,PYCNT,PYCOLL,PYDELDOL,PYDUE,PYEARN,RID,RN,STAR,TYP,VL,VLOF,VRF(),VSTATS(),XPLAN,fAOAMO,fLNCDLD,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA036",RN="Dealer Trial Balance Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA036","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNCYCDLD]PAYEE "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LNCYCDLD]PLAN "_VIN2,SEQ=SEQ+1
		set DQQRY(SEQ)="[LNCYCDLD]TYP=""DLD""",SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNCYCDLD,LN,AOAMO") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Payee Code"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Payee Plan"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Dealer Trial Balance Report"
		set VBNRINFO("PGM")="R01S107"
		set VBNRINFO("RID")="SCA036"
		set VBNRINFO("TABLES")="LNCYCDLD,LN,AOAMO"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNCYCDLD]CID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNCYCDLD]TYP"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNCYCDLD.CID,LNCYCDLD.TYP,AOAMO.PDES,LN.LNM,LN.PCO"
	set VSELECT=VSELECT_"LDES,LN.BAL,LN.ODD,LN.PMTPI,LNCYCDLD.DCP,LNCYCDLD."
	set VSELECT=VSELECT_"DACR,LNCYCDLD.LSADT,LNCYCDLD.DELDOL,LN.DP1,LN.IRN,"
	set VSELECT=VSELECT_"LN.DIST1ND,LNCYCDLD.PBAL,LNCYCDLD.CALTD,LNCYCDLD.C"
	set VSELECT=VSELECT_"NTR,LNCYCDLD.DRCDD,LNCYCDLD.NDDEL,LNCYCDLD.RCM"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNCYCDLD,LN,AOAMO",VWHERE,"LNCYCDLD.CID,LNCYCDLD.TYP","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21
	set vc1=V.piece($C(9),1)			// LNCYCDLD.CID
	set vc2=V.piece($C(9),2)			// LNCYCDLD.TYP
	set vc3=V.piece($C(9),3)			// AOAMO.PDES
	set vc4=V.piece($C(9),4)			// LN.LNM
	set vc5=V.piece($C(9),5)			// LN.PCOLDES
	set vc6=V.piece($C(9),6)			// LN.BAL
	set vc7=V.piece($C(9),7)			// LN.ODD
	set vc8=V.piece($C(9),8)			// LN.PMTPI
	set vc9=V.piece($C(9),9)			// LNCYCDLD.DCP
	set vc10=V.piece($C(9),10)			// LNCYCDLD.DACR
	set vc11=V.piece($C(9),11)			// LNCYCDLD.LSADT
	set vc12=V.piece($C(9),12)			// LNCYCDLD.DELDOL
	set vc13=V.piece($C(9),13)			// LN.DP1
	set vc14=V.piece($C(9),14)			// LN.IRN
	set vc15=V.piece($C(9),15)			// LN.DIST1ND
	set vc16=V.piece($C(9),16)			// LNCYCDLD.PBAL
	set vc17=V.piece($C(9),17)			// LNCYCDLD.CALTD
	set vc18=V.piece($C(9),18)			// LNCYCDLD.CNTR
	set vc19=V.piece($C(9),19)			// LNCYCDLD.DRCDD
	set vc20=V.piece($C(9),20)			// LNCYCDLD.NDDEL
	set vc21=V.piece($C(9),21)			// LNCYCDLD.RCM
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number DNBAL,DNCNT,DYBAL,DYCNT,PNBAL,PYBAL,PNCNT,PYCNT,PNDUE,PYDUE
 type public Number DNDELDOL,DNDUE,DYDELDOL,DYDUE,PNDELDOL,PYDELDOL
 type public Number DNCOLL,DYCOLL,DYEARN,PNCOLL,PT,PYEARN,PYCOLL
 type public String EFD,fAOAMO,fLNCDLD,PAYEE,PLAN,TYP,XPLAN

 set TYP="DLD"

 // No plan on file for payee.
 if PAYEE'="ALL" do {
	 type ResultSet rs=Db.select("PLAN","AOAMO","TYP=:TYP AND PAYEE=:PAYEE")

	// No plan on file for payee
	 if rs.isEmpty() do Runtime.setErrMSG("AOAMO",4875) quit

	 while rs.next() do {
		set XPLAN=rs.getCol("PLAN")
	 	}
	}

 set (PNCNT,PYCNT,DNCNT,DYCNT,PNBAL,PYBAL,DNBAL,DYBAL,PNDUE,PYDUE)=0
 set (DNDUE,DYDUE,PNDELDOL,PYDELDOL,DNDELDOL,DYDELDOL)=0
 set (PYEARN,DYEARN,PNCOLL,DNCOLL,PYCOLL,DYCOLL,PT)=0
 set (PAYEE,PLAN,EFD,fAOAMO,fLNCDLD)=""


 
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=PAYEE
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DNBAL,DNCNT,DNCOLL,DNDELDOL,DNDUE,DYBAL,DYCNT,DYCOLL,DYDELDOL,DYDUE,DYEARN,EFD,METH,PAYEE,PLAN,PNBAL,PNCNT,PNCOLL,PNDELDOL,PNDUE,PT,PYBAL,PYCNT,PYCOLL,PYDELDOL,PYDUE,PYEARN,RID,RN,STAR,TYP,VL,XPLAN,fAOAMO,fLNCDLD,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+18,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",97-VL.length())_"System Date:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set V="Dealer "_PAYEE_"  Plan "_PLAN_" - "_vc3 do VP1 quit:VFMQ!verror.get()  set VL=V
	do VOM
	set VL="                                                                  "_"Loan Date    Payment  Dlr Rate    Earn TD  Last Date   Del Amt DP1"
	do VOM
	set VL="   "_"Account #  Account Title         Collateral           Balance      Rate    Next Due  Dlr %Bal   Col Life   #Pd  Met  Mxd  Dys"
	do VOM
	set V="====================================================================================================================================" do VP2 quit:VFMQ!verror.get()  set VL=V
	do VOM
	set VL="" do VOM
	set V=vc1,VO=V set V=$J(V,12) do VP3 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",14-VL.length())_$E(vc4,1,20)
	set VL=VL_$J("",36-VL.length())_$E(vc5,1,15)
	set V=vc6,VO=V set V=$J($FN(V,",",2),11) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",53-VL.length())_V		// [SYSDEV,LN]BAL
	set VL=VL_$J("",65-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",76-VL.length())_$S(vc8="":"",1:$J(vc8,0,2))
	set VL=VL_$J("",88-VL.length())_$J(vc9,8,5)
	set V=vc10,VO=V set V=$J($FN(V,",",2),9) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",98-VL.length())_V		// [SYSDEV,LNCYCDLD]DACR
	set VL=VL_$J("",108-VL.length())_$J($$DAT^%ZM(vc11),10)
	set V=vc12,VO=V set V=$J($FN(V,",",2),9) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",119-VL.length())_V		// [SYSDEV,LNCYCDLD]DELDOL
	set VL=VL_$J("",130-VL.length())_$J(vc13,2)
	do VOM
	set VL="                                                                  "_$J(vc14,8,5)
	set VL=VL_$J("",76-VL.length())_$J($$DAT^%ZM(vc15),10)
	set VL=VL_$J("",87-VL.length())_$J(vc16,9,5)
	set V=vc17,VO=V set V=$J($FN(V,",",2),9) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",98-VL.length())_V		// [SYSDEV,LNCYCDLD]CALTD
	set VL=VL_$J("",110-VL.length())_$J(vc18,3)
	do VP8 quit:VFMQ!verror.get()  set V=$E(METH,1,1)
	set VL=VL_$J("",116-VL.length())_V
	set V=vc19,VO=V set V=$J(V,3) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V		// [SYSDEV,LNCYCDLD]DRCDD
	set V=vc20,VO=V set V=$J(V,3) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",125-VL.length())_V		// [SYSDEV,LNCYCDLD]NDDEL
	do VP11 quit:VFMQ!verror.get()  set V=$E(STAR,1,1)
	set VL=VL_$J("",131-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="Cycled:"
	set VL=VL_$J("",12-VL.length())_$J(PNCNT,5)
	set VL=VL_$J("",20-VL.length())_"Bal:"
	set VL=VL_$J("",27-VL.length())_$J($FN(PNBAL,",",2),12)
	set VL=VL_$J("",42-VL.length())_"#Del:"
	set VL=VL_$J("",50-VL.length())_$J(PNDUE,4)
	set VL=VL_$J("",57-VL.length())_"$Del:"
	set VL=VL_$J("",65-VL.length())_$J($FN(PNDELDOL,",",2),11)
	set VL=VL_$J("",107-VL.length())_"$ Col Life:"
	set VL=VL_$J("",121-VL.length())_$J($FN(PNCOLL,",",2),11)
	do VOM
	set VL="As Col:"
	set VL=VL_$J("",12-VL.length())_$J(PYCNT,5)
	set VL=VL_$J("",20-VL.length())_"Bal:"
	set VL=VL_$J("",27-VL.length())_$J($FN(PYBAL,",",2),12)
	set VL=VL_$J("",42-VL.length())_"#Del:"
	set VL=VL_$J("",50-VL.length())_$J(PYDUE,4)
	set VL=VL_$J("",57-VL.length())_"$Del:"
	set VL=VL_$J("",65-VL.length())_$J($FN(PYDELDOL,",",2),11)
	set VL=VL_$J("",80-VL.length())_"$ Earn TD:"
	set VL=VL_$J("",93-VL.length())_$J($FN(PYEARN,",",2),11)
	set VL=VL_$J("",107-VL.length())_"$ Col Life:"
	set VL=VL_$J("",121-VL.length())_$J($FN(PYCOLL,",",2),11)
	do VOM
	set VL="" do VOM
	set VL="Totals:"
	set V=$J((PNCNT+PYCNT),5) do VP12 quit:VFMQ!verror.get()
	set VL=VL_$J("",12-VL.length())_V
	set VL=VL_$J("",20-VL.length())_"Bal:"
	set V=$J($FN((PNBAL+PYBAL),",",2),12) do VP13 quit:VFMQ!verror.get()
	set VL=VL_$J("",27-VL.length())_V
	set VL=VL_$J("",42-VL.length())_"#Del:"
	set V=$J((PNDUE+PYDUE),4) do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",50-VL.length())_V
	set VL=VL_$J("",57-VL.length())_"$Del:"
	set V=$J($FN((PNDELDOL+PYDELDOL),",",2),11) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",65-VL.length())_V
	set VL=VL_$J("",80-VL.length())_"$ Earn TD:"
	set V=$J($FN(PYEARN,",",2),11) do VP16 quit:VFMQ!verror.get()
	set VL=VL_$J("",93-VL.length())_V
	set VL=VL_$J("",107-VL.length())_"$ Col Life:"
	set V=$J($FN((PNCOLL+PYCOLL),",",2),11) do VP17 quit:VFMQ!verror.get()
	set VL=VL_$J("",121-VL.length())_V
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,DNBAL,DNCNT,DNCOLL,DNDELDOL,DNDUE,DYBAL,DYCNT,DYCOLL,DYDELDOL,DYDUE,DYEARN,EFD,METH,PAYEE,PLAN,PNBAL,PNCNT,PNCOLL,PNDELDOL,PNDUE,PT,PYBAL,PYCNT,PYCOLL,PYDELDOL,PYDUE,PYEARN,STAR,TYP,VPN,XPLAN,fAOAMO,fLNCDLD,vc3,vovc1,vovc2,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="                                                            "_"Report Summary"
	do VOM
	set VL="                                                            "_"______________"
	do VOM
	set VL="" do VOM
	set VL="Cycled:"
	set VL=VL_$J("",12-VL.length())_$J(DNCNT,5)
	set VL=VL_$J("",20-VL.length())_"Bal:"
	set VL=VL_$J("",27-VL.length())_$J($FN(DNBAL,",",2),12)
	set VL=VL_$J("",42-VL.length())_"#Del:"
	set VL=VL_$J("",50-VL.length())_$J(DNDUE,4)
	set VL=VL_$J("",57-VL.length())_"$Del:"
	set VL=VL_$J("",65-VL.length())_$J($FN(DNDELDOL,",",2),11)
	set VL=VL_$J("",107-VL.length())_"$ Col Life:"
	set VL=VL_$J("",121-VL.length())_$J($FN(DNCOLL,",",2),11)
	do VOM
	set VL="As Col:"
	set VL=VL_$J("",12-VL.length())_$J(DYCNT,5)
	set VL=VL_$J("",20-VL.length())_"Bal:"
	set VL=VL_$J("",27-VL.length())_$J($FN(DYBAL,",",2),12)
	set VL=VL_$J("",42-VL.length())_"#Del:"
	set VL=VL_$J("",50-VL.length())_$J(DYDUE,4)
	set VL=VL_$J("",57-VL.length())_"$Del:"
	set VL=VL_$J("",65-VL.length())_$J($FN(DYDELDOL,",",2),11)
	set VL=VL_$J("",80-VL.length())_"$ Earn TD:"
	set VL=VL_$J("",93-VL.length())_$J($FN(DYEARN,",",2),11)
	set VL=VL_$J("",107-VL.length())_"$ Col Life:"
	set VL=VL_$J("",121-VL.length())_$J($FN(DYCOLL,",",2),11)
	do VOM
	set VL="Totals:"
	set V=$J((DNCNT+DYCNT),5) do VP18 quit:VFMQ!verror.get()
	set VL=VL_$J("",12-VL.length())_V
	set VL=VL_$J("",20-VL.length())_"Bal:"
	set V=$J($FN((DNBAL+DYBAL),",",2),12) do VP19 quit:VFMQ!verror.get()
	set VL=VL_$J("",27-VL.length())_V
	set VL=VL_$J("",42-VL.length())_"#Del:"
	set V=$J((DNDUE+DYDUE),4) do VP20 quit:VFMQ!verror.get()
	set VL=VL_$J("",50-VL.length())_V
	set VL=VL_$J("",57-VL.length())_"$Del:"
	set V=$J($FN((DNDELDOL+DYDELDOL),",",2),11) do VP21 quit:VFMQ!verror.get()
	set VL=VL_$J("",65-VL.length())_V
	set VL=VL_$J("",80-VL.length())_"$ Earn TD:"
	set V=$J($FN(DYEARN,",",2),11) do VP22 quit:VFMQ!verror.get()
	set VL=VL_$J("",93-VL.length())_V
	set VL=VL_$J("",107-VL.length())_"$ Col Life:"
	set V=$J($FN((DNCOLL+DYCOLL),",",2),11) do VP23 quit:VFMQ!verror.get()
	set VL=VL_$J("",121-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - Dealer <<PAYEE>>  Plan <<PLAN>> - <<[AOAMO]PDES>>

 type public String PT,VL,V

 if PT set (VL,V)=""
	quit

VP2	// Column post-processor - @CHR(=,132)

 type public String PT,VL
 if PT set VL=""
	quit

VP3	// Column post-processor - [SYSDEV,LNCYCDLD]CID

	type public String vc21
 type public Number DNCNT,DYCNT,PNCNT,PYCNT
 type public String CID
 type Boolean RCM

 if 'CID.get() quit

 set RCM=vc21

 if 'RCM set PNCNT=PNCNT+1,DNCNT=DNCNT+1

 if RCM=1 set PYCNT=PYCNT+1,DYCNT=DYCNT+1
	quit

VP4	// Column post-processor - [SYSDEV,LN]BAL

	type public String vc21
 type public Number DNBAL,DYBAL,PNBAL,PYBAL,VO
 type public String CID
 type Boolean RCM

 if 'CID.get() quit 

 set RCM=vc21

 if 'RCM set PNBAL=PNBAL+VO,DNBAL=DNBAL+VO

 if RCM=1 set PYBAL=PYBAL+VO,DYBAL=DYBAL+VO
	quit

VP5	// Column post-processor - [SYSDEV,LNCYCDLD]DACR

	type public String vc21
 type public Number DYEARN,PYEARN,VO
 type public String CID
 type Boolean RCM

 if 'CID.get() quit

 set RCM=vc21

 if RCM=1 set PYEARN=PYEARN+VO,DYEARN=DYEARN+VO
	quit

VP6	// Column post-processor - [SYSDEV,LNCYCDLD]DELDOL

	type public String vc21
 type public Number DNDELDOL,DYDELDOL,PNDELDOL,PYDELDOL,VO
 type public String CID
 type Boolean RCM

 if 'CID.get() quit

 set RCM=vc21

 if 'RCM set PNDELDOL=PNDELDOL+VO,DNDELDOL=DNDELDOL+VO

 if RCM=1 set PYDELDOL=PYDELDOL+VO,DYDELDOL=DYDELDOL+VO
	quit

VP7	// Column post-processor - [SYSDEV,LNCYCDLD]CALTD

	type public String vc21
 type public Number DNCOLL,DYCOLL,PNCOLL,PYCOLL,VO
 type public String CID
 type Boolean RCM

 if 'CID.get() quit

 set RCM=vc21

 if 'RCM set PNCOLL=PNCOLL+VO,DNCOLL=DNCOLL+VO

 if RCM=1 set PYCOLL=PYCOLL+VO,DYCOLL=DYCOLL+VO
	quit

VP8	// Column pre-processor - Variable: METH

	type public String vc21
 type public Number CID
 type public String METH
 
 if 'CID.get() set METH="" quit

 set METH=vc21
 set METH=$S(METH=1:"Y",1:"N")
	quit

VP9	// Column post-processor - [SYSDEV,LNCYCDLD]DRCDD

 type public Number DRCDD,VO

 set DRCDD=VO
	quit

VP10	// Column post-processor - [SYSDEV,LNCYCDLD]NDDEL

	type public String vc21
 type public Number DNDUE,DYDUE,NDDEL,PNDUE,PYDUE,VO
 type public String CID
 type Boolean RCM

 set NDDEL=VO

 if 'CID.get() quit

 set RCM=vc21

 if NDDEL>0,'(RCM) set PNDUE=PNDUE+1,DNDUE=DNDUE+1

 if NDDEL>0,RCM=1 set PYDUE=PYDUE+1,DYDUE=DYDUE+1
	quit

VP11	// Column pre-processor - Variable: STAR

 type public String STAR,CID
 type public Number DRCDD,NDDEL

 set STAR="" if CID.get(),(DRCDD-NDDEL)<32 set STAR="*"
	quit

VP12	// Column post-processor - Variable: (PNCNT+PYCNT)

 type public Number PNCNT,PYCNT

 set (PNCNT,PYCNT)=0
	quit

VP13	// Column post-processor - Variable: (PNBAL+PYBAL)

 type public Number PNBAL,PYBAL

 set (PNBAL,PYBAL)=0
	quit

VP14	// Column post-processor - Variable: (PNDUE+PYDUE)

 type public Number PNDUE,PYDUE

 set (PNDUE,PYDUE)=0
	quit

VP15	// Column post-processor - Variable: (PNDELDOL+PYDELDOL)

 type public Number PNDELDOL,PYDELDOL

 set (PNDELDOL,PYDELDOL)=0
	quit

VP16	// Column post-processor - Variable: PYEARN

 type public Number PYEARN 

 set PYEARN=0
	quit

VP17	// Column post-processor - Variable: (PNCOLL+PYCOLL)

 type public Number PNCOLL,PYCOLL

 set (PNCOLL,PYCOLL)=0
	quit

VP18	// Column post-processor - Variable: (DNCNT+DYCNT)

 type public Number DNCNT,DYCNT

 set (DNCNT,DYCNT)=0
	quit

VP19	// Column post-processor - Variable: (DNBAL+DYBAL)

 type public Number DNBAL,DYBAL

 set (DNBAL,DYBAL)=0
	quit

VP20	// Column post-processor - Variable: (DNDUE+DYDUE)

 type public Number DNDUE,DYDUE

 set (DNDUE,DYDUE)=0
	quit

VP21	// Column post-processor - Variable: (DNDELDOL+DYDELDOL)

 type public Number DNDELDOL,DYDELDOL

 set (DNDELDOL,DYDELDOL)=0
	quit

VP22	// Column post-processor - Variable: DYEARN

 type public Number DYEARN

 set DYEARN=0
	quit

VP23	// Column post-processor - Variable: (DNCOLL+DYCOLL)

 type public Number DNCOLL,DYCOLL

 set (DNCOLL,DYCOLL)=0
	quit
