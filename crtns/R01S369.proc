R01S369	// SCA394 - Device Attribute/Authorization Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:48 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="SCA394"
	set RN="Device Attribute/Authorization Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[TMPRPT3]KEY1|[TMPRPT3]KEY1:DISTINCT:NOVAL||D EXT^DBSQRY||T|Device Name|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CNT,CONAM,DEVNAME,INST,JOB,RID,RN,T(),UCLS,UCLS1,UCLS2,UCLS3,UCLS4,UCLS5,UCLS6,UCLS7,UCLS8,UCLS9,VL,VLOF,VRF(),VSTATS(),ZLOC,ZPORT,ZSTYPE,ZTYPE,vCOL,vHDG,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA394",RN="Device Attribute/Authorization Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA394","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[TMPRPT3]KEY1 "_VIN1,SEQ=SEQ+1
		set DQQRY(SEQ)="[TMPRPT3]PID = <<$J>>",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("TMPRPT3") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Device Name"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Device Attribute/Authorization Report"
		set VBNRINFO("PGM")="R01S369"
		set VBNRINFO("RID")="SCA394"
		set VBNRINFO("TABLES")="TMPRPT3"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TMPRPT3]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TMPRPT3]KEY1"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TMPRPT3]KEY2"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TMPRPT3]KEY3"

		set VBNRINFO("DOC",1)="This report provides information about the devices defined in the Device"
		set VBNRINFO("DOC",2)="Definition file [DEVICE].  For each device, the report includes the device"
		set VBNRINFO("DOC",3)="name, port (physical device name), device type, and device sub-type.  It also"
		set VBNRINFO("DOC",4)="lists the userclasses authorized to access the device."
		set VBNRINFO("DOC",5)=""
		set VBNRINFO("DOC",6)="See the Devices Reference Manual for more information."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT="TMPRPT3.KEY1,TMPRPT3.PID,TMPRPT3.KEY2,TMPRPT3.KEY3"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"TMPRPT3",VWHERE,"TMPRPT3.PID,TMPRPT3.KEY1,TMPRPT3.KEY2,TMPRPT3.KEY3","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc1,vovc3,vovc4
	set vovc2="",vovc1="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc1,vc1,vovc3,vc3,vovc4,vc4
	set vovc2=vc2,vovc1=vc1,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4
	set vc1=V.piece($C(9),1)			// TMPRPT3.KEY1
	set vc2=V.piece($C(9),2)			// TMPRPT3.PID
	set vc3=V.piece($C(9),3)			// TMPRPT3.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT3.KEY3
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1
 type public String DEVNAME,ZTYPE,ZSTYPE,ZLOC,ZPORT
 type public String UCLS1,UCLS2,UCLS3,UCLS4,UCLS5
 type public String UCLS,UCLS6,UCLS7,UCLS8,UCLS9 
 type public Number CNT

 set DEVNAME=vc1 

 type RecordDEVICE device1=Db.getRecord("DEVICE","DEVNAME=:DEVNAME")
 
 set ZTYPE=device1.type
 set ZPORT=device1.device 
 set ZSTYPE=device1.subtype 
 set ZLOC=device1.loccode

 set CNT=0
 set (UCLS1,UCLS2,UCLS3,UCLS4,UCLS5,UCLS6,UCLS7,UCLS8,UCLS9)=""
 set CNT=CNT+1
 if CNT<5 set UCLS1=UCLS1_UCLS_$J("",12-$L(UCLS))
 if (CNT>4),(CNT<9) set UCLS2=UCLS2_UCLS_$J("",12-$L(UCLS))
 if (CNT>8),(CNT<13) set UCLS3=UCLS3_UCLS_$J("",12-$L(UCLS))
 if (CNT>12),(CNT<17) set UCLS4=UCLS4_UCLS_$J("",12-$L(UCLS))
 if (CNT>16),(CNT<21) set UCLS5=UCLS5_UCLS_$J("",12-$L(UCLS))
 if (CNT>20),(CNT<25) set UCLS6=UCLS6_UCLS_$J("",12-$L(UCLS))
 if (CNT>24),(CNT<29) set UCLS7=UCLS7_UCLS_$J("",12-$L(UCLS))
 if (CNT>28),(CNT<33) set UCLS8=UCLS8_UCLS_$J("",12-$L(UCLS))
 if (CNT>32),(CNT<37) set UCLS9=UCLS9_UCLS_$J("",12-$L(UCLS))
	quit

VPREAQ	// Pre-processor (after query)

 type public Number JOB
 type public String DEVNAME,INST,T(),UCLS
 type Boolean FINISH2,FINISH3
 do Db.delete("TMPRPT0","PID=:%ProcessID")
 set JOB=$J set T("DEVNAME")=""
 set (DEVNAME,INST,UCLS)=""
 set FINISH2=0
 type ResultSet rs=Db.select("DEVNAME","DEVICE")
 while rs.next() do {
        set DEVNAME=rs.getCol("DEVNAME")
        if DEVNAME.isNull() quit
	set FINISH2=0
        type ResultSet rs1=Db.select("INST","DEVICER","DEVNAME=:DEVNAME") 
	if rs1.next() do { quit:FINISH2
	        set INST=rs1.getCol("INST")
		if INST.isNull(),Db.isDefined("TMPRPT1","PID=:%ProcessID,KEY1=:DEVNAME") do {
		type RecordTMPRPT3 tmprpt3=Db.getRecord("TMPRPT3","PID=:%ProcessID,KEY1=:DEVNAME,KEY2='*',KEY3='ALL'",1)
		set tmprpt3.data=0
		do tmprpt3.save()
		set FINISH2=1 quit
			}
		set FINISH3=0
		type ResultSet rs2=Db.select("UCLS,REST","DEVICER","DEVNAME=:DEVNAME AND INST=:INST")
		if rs2.next() do { quit:FINISH3
			set UCLS=rs2.getCol("UCLS")
			if UCLS.isNull(),Db.isDefined("TMPRPT2","PID=:%ProcessID,KEY1=:DEVNAME,KEY2='*'") set (FINISH2,FINISH3)=1 quit
			if UCLS.isNull(),'Db.isDefined("TMPRPT2","PID=:%ProcessID,KEY1=:DEVNAME,KEY2='*'") set FINISH3=1 quit
			type RecordTMPRPT3 tmprpt3=Db.getRecord("TMPRPT3","PID=:%ProcessID,KEY1=:DEVNAME,KEY2=:INST,KEY3=:UCLS",1)
			set tmprpt3.data= rs2.getCol("REST")
			do tmprpt3.save()
				}
			}
		} 
	quit

VRPOST	// Report post-processor

 do Db.delete("TMPRPT0","PID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc2,vovc2,vc1,vovc1,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc2'=+vc2) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VSUM4	// Summary
	type public String %TIM,CNT,DEVNAME,I,INST,IOSL,JOB,T(),UCLS,UCLS1,UCLS2,UCLS3,UCLS4,UCLS5,UCLS6,UCLS7,UCLS8,UCLS9,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),ZLOC,ZPORT,ZSTYPE,ZTYPE,vc1,vc2,vc3,vc4,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+9>IOSL do VHDG0 quit:VFMQ

	set VL=$E(DEVNAME,1,12)
	set VL=VL_$J("",17-VL.length())_$E(ZTYPE,1,10)
	do VP1 quit:VFMQ!verror.get()  set V=$E(UCLS1,1,50)
	set VL=VL_$J("",29-VL.length())_V
	do VOM
	set VL=$E(ZPORT,1,15)
	set VL=VL_$J("",17-VL.length())_$E(ZSTYPE,1,10)
	set VL=VL_$J("",29-VL.length())_$E(UCLS2,1,50)
	do VOM
	set VL="                             "_$E(UCLS3,1,50)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                             "_$E(UCLS4,1,50)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                             "_$E(UCLS5,1,50)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                             "_$E(UCLS6,1,50)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                             "_$E(UCLS7,1,50)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                             "_$E(UCLS8,1,50)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                             "_$E(UCLS9,1,50)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CNT,CONAM,DEVNAME,INST,JOB,RID,RN,T(),UCLS,UCLS1,UCLS2,UCLS3,UCLS4,UCLS5,UCLS6,UCLS7,UCLS8,UCLS9,VL,ZLOC,ZPORT,ZSTYPE,ZTYPE,vc1,vc2,vc3,vc4,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,40)
	set VL=VL_$J("",48-VL.length())_"Run Date:"
	set VL=VL_$J("",58-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",50-VL.length())_"System:"
	set VL=VL_$J("",58-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL=" "
	do VOM
	set VL="Device Name      Type"
	do VOM
	set VL="Port Name        Sub-Type    Authorized Userclasses"
	do VOM
	set VL="================================================================================"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: UCLS1


	quit
