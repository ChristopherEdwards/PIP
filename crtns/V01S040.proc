V01S040(%ProcessMode,RecordDEAL1 fDEAL1)   // -  - SID= <DEAL1A> Deal Processing (Sell)
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="DEAL1A",VPGM=$T(+0),VSNAME="Deal Processing (Sell)"
 set VFSN("DEAL1")="zfDEAL1"
 set vPSL=1
 set KEYS(1)=fDEAL1.NOINT
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fDEAL1),VDA1(.fDEAL1),^DBSPNT()

 set ER=0 do VSCRPRE(.fDEAL1) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fDEAL1),VPR(.fDEAL1),VDA1(.fDEAL1)
 if %ProcessMode do VLOD(.fDEAL1) quit:$G(ER)  do VPR(.fDEAL1),VDA1(.fDEAL1)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDEAL1)
	quit


VNEW(RecordDEAL1 fDEAL1) // Initialize arrays if %O=0
 
 do VDEF(.fDEAL1)
 do VLOD(.fDEAL1)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordDEAL1 fDEAL1)
 if fDEAL1.EDT="" set fDEAL1.EDT=TJD
 if fDEAL1.MT202PRI="" set fDEAL1.MT202PRI="N"
 if fDEAL1.MT210PRI="" set fDEAL1.MT210PRI="N"
 if fDEAL1.MT300PRI="" set fDEAL1.MT300PRI="N"
 if fDEAL1.STATUS="" set fDEAL1.STATUS=2
 if fDEAL1.TDT="" set fDEAL1.TDT=TJD
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordDEAL1 fDEAL1) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDEAL1 fDEAL1) // Display screen prompts
 set VO="27||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,5,16,0,0,0,0,0,0,0)_"01TContract Number:"
 set VO(2)=$C(2,47,11,0,0,0,0,0,0,0)_"01TEntered by:"
 set VO(3)=$C(3,5,16,0,0,0,0,0,0,0)_"01TContract Status:"
 set VO(4)=$C(5,13,8,1,0,0,0,0,0,0)_"01T Trader:"
 set VO(5)=$C(5,45,13,0,0,0,0,0,0,0)_"01T Cost Center:"
 set VO(6)=$C(6,7,14,0,0,0,0,0,0,0)_"01TTrader's Memo:"
 set VO(7)=$C(6,43,15,0,0,0,0,0,0,0)_"01T Reference No.:"
 set VO(8)=$C(8,7,14,1,0,0,0,0,0,0)_"01T Counterparty:"
 set VO(9)=$C(10,6,15,1,0,0,0,0,0,0)_"01T Sell Currency:"
 set VO(10)=$C(10,27,5,1,0,0,0,0,0,0)_"01T Amt:"
 set VO(11)=$C(10,54,9,1,0,0,0,0,0,0)_"01T Deal Rt:"
 set VO(12)=$C(11,7,14,1,0,0,0,0,0,0)_"01T Buy Currency:"
 set VO(13)=$C(11,27,5,0,0,0,0,0,0,0)_"01T Amt:"
 set VO(14)=$C(13,6,15,0,0,0,0,0,0,0)_"01T Base Currency:"
 set VO(15)=$C(13,27,5,0,0,0,0,0,0,0)_"01T Amt:"
 set VO(16)=$C(13,55,8,0,0,0,0,0,0,0)_"01TBase Rt:"
 set VO(17)=$C(15,9,12,1,0,0,0,0,0,0)_"01T Trade Date:"
 set VO(18)=$C(15,46,12,1,0,0,0,0,0,0)_"01T Value Date:"
 set VO(19)=$C(16,10,11,1,0,0,0,0,0,0)_"01T Spot Date:"
 set VO(20)=$C(16,44,14,0,0,0,0,0,0,0)_"01T Date Entered:"
 set VO(21)=$C(18,11,10,0,0,0,0,0,0,0)_"01TDeal Type:"
 set VO(22)=$C(18,48,10,0,0,0,0,0,0,0)_"01TSwap Flag:"
 set VO(23)=$C(19,7,14,0,0,0,0,0,0,0)_"01T Confirmation:"
 set VO(24)=$C(19,44,14,0,0,0,0,0,0,0)_"01T Instructions:"
 set VO(25)=$C(21,11,10,0,0,0,0,0,0,0)_"01T Pay(202):"
 set VO(26)=$C(21,44,14,0,0,0,0,0,0,0)_"01T Receive(210):"
 set VO(27)=$C(22,2,19,0,0,0,0,0,0,0)_"01T Confirmation(300):"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordDEAL1 fDEAL1)  // Display screen data
 new V
 //
 set VO="57|28|13|0"
 set VO(28)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(29)=$C(2,22,12,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.NOINT,1,12)
 set VO(30)=$C(2,59,20,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.UID,1,20)
 set VO(31)=$C(3,22,3,2,0,0,0,0,0,0)_"01N"_fDEAL1.STATUS
 set VO(32)=$C(3,27,12,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.STATDSC,1,12)
 set VO(33)=$C(5,22,10,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.TRADER,1,10)
 set VO(34)=$C(5,59,6,2,0,0,0,0,0,0)_"01N"_fDEAL1.CC
 set VO(35)=$C(6,22,6,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.NOEXT,1,6)
 set VO(36)=$C(6,59,14,2,0,0,0,0,0,0)_"01N"_fDEAL1.TRREFNO
 set VO(37)=$C(8,22,12,2,0,0,0,0,0,0)_"00N"_fDEAL1.ACN
 set VO(38)=$C(8,36,40,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.ACNNAM,1,40)
 set VO(39)=$C(10,22,3,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.CRCDS,1,3)
 set V=$S(fDEAL1.AMTS="":"",1:$J(fDEAL1.AMTS,0,2)) set VO(40)=$C(10,33,19,2,0,0,0,0,0,0)_"00$"_$S(fDEAL1.AMTS="":"",1:$J(fDEAL1.AMTS,0,2))
 set V=$S(fDEAL1.RATE="":"",1:$J(fDEAL1.RATE,0,7)) set VO(41)=$C(10,64,12,2,0,0,0,0,0,0)_"00N"_$S(fDEAL1.RATE="":"",1:$J(fDEAL1.RATE,0,7))
 set VO(42)=$C(11,22,3,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.CRCDB,1,3)
 set V=$S(fDEAL1.AMTB="":"",1:$J(fDEAL1.AMTB,0,2)) set VO(43)=$C(11,33,19,2,0,0,0,0,0,0)_"01$"_$S(fDEAL1.AMTB="":"",1:$J(fDEAL1.AMTB,0,2))
 set VO(44)=$C(13,22,3,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.CRCDBASE,1,3)
 set V=$S(fDEAL1.AMTBASE="":"",1:$J(fDEAL1.AMTBASE,0,2)) set VO(45)=$C(13,33,19,2,0,0,0,0,0,0)_"01$"_$S(fDEAL1.AMTBASE="":"",1:$J(fDEAL1.AMTBASE,0,2))
 set V=$S(fDEAL1.RATEBASE="":"",1:$J(fDEAL1.RATEBASE,0,7)) set VO(46)=$C(13,64,12,2,0,0,0,0,0,0)_"00N"_$S(fDEAL1.RATEBASE="":"",1:$J(fDEAL1.RATEBASE,0,7))
 set VO(47)=$C(15,22,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fDEAL1.TDT)
 set VO(48)=$C(15,59,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fDEAL1.VDT)
 set VO(49)=$C(16,22,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fDEAL1.SDT)
 set VO(50)=$C(16,59,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fDEAL1.EDT)
 set VO(51)=$C(18,22,12,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.TYPE,1,12)
 set VO(52)=$C(18,59,1,2,0,0,0,0,0,0)_"00L"_$S(fDEAL1.SWAP:"Y",1:"N")
 set VO(53)=$C(19,22,1,2,0,0,0,0,0,0)_"01L"_$S(fDEAL1.CNFRM:"Y",1:"N")
 set VO(54)=$C(19,59,1,2,0,0,0,0,0,0)_"01L"_$S(fDEAL1.INSTRFLG:"Y",1:"N")
 set VO(55)=$C(21,22,22,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.MSG202CMP,1,22)
 set VO(56)=$C(21,59,22,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.MSG210CMP,1,22)
 set VO(57)=$C(22,22,22,2,0,0,0,0,0,0)_"01T"_$E(fDEAL1.MSG300CMP,1,22)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordDEAL1 fDEAL1)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=29,VPT=1,VPB=22,PGM=$T(+0),DLIB="SYSDEV",DFID="DEAL1"
 set OLNTB=22022
 
 set VFSN("DEAL1")="zfDEAL1"
 //
 // 
	
	
 set %TAB(1)=$C(1,21,12)_"21T12401|1|[DEAL1]NOINT"
 set %TAB(2)=$C(1,58,20)_"20T12410|1|[DEAL1]UID"
 set %TAB(3)=$C(2,21,3)_"20N12421|1|[DEAL1]STATUS|[STBLDSTAT]"
 set %TAB(4)=$C(2,26,12)_"20T12400|*STATDSC|[DEAL1]STATDSC"
 set %TAB(5)=$C(4,21,10)_"01T12408|1|[DEAL1]TRADER|[UTBLRADR]||do VP1^V01S040(.fDEAL1)"
 set %TAB(6)=$C(4,58,6)_"20N12409|1|[DEAL1]CC"
 set %TAB(7)=$C(5,21,6)_"00T12401|1|[DEAL1]NOEXT|||do VP2^V01S040(.fDEAL1)"
 set %TAB(8)=$C(5,58,14)_"20N12434|1|[DEAL1]TRREFNO"
 set %TAB(9)=$C(7,21,12)_"01N12406|1|[DEAL1]ACN|||do VP3^V01S040(.fDEAL1)"
 set %TAB(10)=$C(7,35,40)_"20T12407|1|[DEAL1]ACNNAM"
 set %TAB(11)=$C(9,21,3)_"01T12413|1|[DEAL1]CRCDS|[CRCD]:QU ""[CRCD]CO=<<CO>>""||do VP4^V01S040(.fDEAL1)"
 set %TAB(12)=$C(9,32,19)_"01$12415|1|[DEAL1]AMTS|||do VP5^V01S040(.fDEAL1)||||2"
 set %TAB(13)=$C(9,63,12)_"01N12416|1|[DEAL1]RATE|||||||7"
 set %TAB(14)=$C(10,21,3)_"01T12412|1|[DEAL1]CRCDB|[CRCD]:QU ""[CRCD]CO=<<CO>>""||do VP6^V01S040(.fDEAL1)"
 set %TAB(15)=$C(10,32,19)_"21$12414|1|[DEAL1]AMTB|||||||2"
 set %TAB(16)=$C(12,21,3)_"20T12435|1|[DEAL1]CRCDBASE"
 set %TAB(17)=$C(12,32,19)_"21$12436|1|[DEAL1]AMTBASE|||||||2"
 set %TAB(18)=$C(12,63,12)_"00N12437|1|[DEAL1]RATEBASE|||do VP7^V01S040(.fDEAL1)||||7"
 set %TAB(19)=$C(14,21,10)_"01D12402|1|[DEAL1]TDT|||do VP8^V01S040(.fDEAL1)|do VP9^V01S040(.fDEAL1)"
 set %TAB(20)=$C(14,58,10)_"01D12404|1|[DEAL1]VDT|||do VP10^V01S040(.fDEAL1)|do VP11^V01S040(.fDEAL1)"
 set %TAB(21)=$C(15,21,10)_"01D12403|1|[DEAL1]SDT|||do VP12^V01S040(.fDEAL1)|do VP13^V01S040(.fDEAL1)"
 set %TAB(22)=$C(15,58,10)_"21D12439|1|[DEAL1]EDT"
 set %TAB(23)=$C(17,21,12)_"21T12405|1|[DEAL1]TYPE|[STBLDEALTYPE]"
 set %TAB(24)=$C(17,58,1)_"00L12423|1|[DEAL1]SWAP|||do VP14^V01S040(.fDEAL1)"
 set %TAB(25)=$C(18,21,1)_"20L12426|1|[DEAL1]CNFRM"
 set %TAB(26)=$C(18,58,1)_"20L12425|1|[DEAL1]INSTRFLG"
 set %TAB(27)=$C(20,21,22)_"20T|*MSG202CMP|[DEAL1]MSG202CMP"
 set %TAB(28)=$C(20,58,22)_"21T|*MSG210CMP|[DEAL1]MSG210CMP"
 set %TAB(29)=$C(21,21,22)_"21T|*MSG300CMP|[DEAL1]MSG300CMP"
 do VTBL(.fDEAL1)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordDEAL1 fDEAL1) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordDEAL1 fDEAL1) //
	do VPO1(.fDEAL1) quit
VPO1(RecordDEAL1 fDEAL1)  // user library DEAL1_TRDPOS
	type public String V, X
	if (X.isNull()) ! (X=V) quit
	type RecordUTBLRADR utblradr=Db.getRecord("UTBLRADR","KEY=:X",1)
	// Invalid table value
	if 'utblradr.getMode() do Runtime.setErrMSG("DEAL1",1485) quit:ER
 
	set fDEAL1.cc=utblradr.tdrctr
	do DISPLAY^DBSMACRO("DEAL1.CC")
	quit
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP2(RecordDEAL1 fDEAL1) //
	type public String X

	// SWIFT Character Checking & Editing
	do CHECKUP^SWFTEDIT quit:ER

	if X.isNull() set X=fDEAL1.noint

	quit:V=X

	// Trader memo already exists
	if 'fDEAL1.noext.isNull() do Runtime.setErrMSG("DEAL1",7636,X) quit:ER	

	do DISPLAY^DBSMACRO("DEAL1.NOEXT",fDEAL1.noext)

	quit
VP3(RecordDEAL1 fDEAL1) //
	type public Number X
	type public Boolean ER
	
	do CUS^UACN1 if (ER)!(X.isNull()) quit

	do VPO3(.fDEAL1)

	quit

VPO3(RecordDEAL1 fDEAL1)  // user library DEAL1_ACNPOS
	type public Number X
	if X.isNull() quit
	type RecordCIF cif=Db.getRecord("CIF","ACN=:X",1)
	
	set fDEAL1.acnnam=cif.nam
	
	do DISPLAY^DBSMACRO("DEAL1.ACNNAM")
	quit
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP4(RecordDEAL1 fDEAL1) //
	type Number OPPN    // Nostro Account
	type String PAY     // Correspondent
	type Boolean INTBL  // In currency table indicator

	set (OPPN,PAY)=""
	set INTBL=1

	do CCYSPP^DEAL(fDEAL1.acn,X,.OPPN,.PAY,.INTBL)

	if ('INTBL) ! (OPPN.isNull()) quit

	if fDEAL1.corrercv.isNull() set fDEAL1.corrercv=PAY
	if fDEAL1.nostros.isNull() set fDEAL1.nostros=OPPN
	if fDEAL1.paidbys.isNull() set fDEAL1.paidbys=PAY

	quit
VP5(RecordDEAL1 fDEAL1) //
	type public Number CO, X
	type public String RM=""
	type public Boolean ER
	
	type Number CNT, LEN, TEMP

	do PAMTPP^DEAL quit:ER

	type RecordCRCD crcd=Db.getRecord("CRCD","CRCD=:fDEAL1.crcds,CO=:CUVAR.CO",1)

	set TEMP=X.piece(".",2)
	set TEMP="0"_TEMP
	set LEN=TEMP.length()
	
	if LEN for CNT=1:1 quit:(CNT=LEN)!(TEMP.extract(LEN-CNT+1))
	if  set LEN=LEN-CNT

	// Decimal error, ~p1 decimal places for ~p2
	if (LEN > +crcd.curdec) set ER=1,RM=$$^MSG(7638,crcd.curdec,fDEAL1.crcds) quit

	quit
VP6(RecordDEAL1 fDEAL1) //
	/*  First verify that the rate entered is valid, and Buy and Sell 
	    currency are not the same.
	    If one of the 2 currencies is %CRCD, then it's a normal deal and 
	    we can use the rate directly out of the CRCD table.

	    If neither currency is the system base, then it's a cross deal.
	    In this case we have to divide buy midrate by sell midrate to get 
	    the cross rate.  Apply the variance, if there is one, and verify 
	    the rate entered.
	*/

	type public String CO, X
	type public Boolean ER

	type Boolean CROSS, NORM
	type Number AMT, MIDS

	if X.isNull() quit
	
	set (CROSS,NORM)=0

	type RecordCRCD crcd=Db.getRecord("CRCD","CRCD=:X,CO=:CO",1)

	// Invalid currency code
	if 'crcd.getMode() do Runtime.setErrMSG("CRCD",1293) quit:ER

	// Buy and Sell Currencies cannot be the same
	if X=fDEAL1.crcds do Runtime.setErrMSG("CRCD",4000) quit:ER		

	if (X'=%CRCD) , (fDEAL1.crcds'=%CRCD) do CROSS(.CROSS,.NORM,CO,.fDEAL1,.MIDS)
	else  do NORM(.NORM,.CROSS,CO,.fDEAL1)

	if ER do GOTO^DBSMACRO("DEAL1.RATE")

	// Now default the rate in BASE RATE field based on whether this 
	// is a normal deal or a cross deal.

	// Cross deal
	if CROSS,'fDEAL1.recp do {
		set AMT=$$^SCARND((fDEAL1.rate*fDEAL1.amts),"","",X)
		do DEFAULT^DBSMACRO("DEAL1.AMTB",AMT)
		do DISPLAY^DBSMACRO("DEAL1.AMTB",AMT)		
		}
	if CROSS,fDEAL1.recp do {
		set AMT=$$^SCARND(fDEAL1.amts/fDEAL1.rate,"","",X)
		do DEFAULT^DBSMACRO("DEAL1.AMTB",AMT)
		do DISPLAY^DBSMACRO("DEAL1.AMTB",AMT)
		}

	if CROSS do DEFAULT^DBSMACRO("DEAL1.RATEBASE",MIDS)

	if  set fDEAL1.amtbase=fDEAL1.amts * fDEAL1.ratebase
	if  do DISPLAY^DBSMACRO("DEAL1.AMTBASE")

	// Normal deal
	if NORM,'fDEAL1.recp do {
		set AMT=$$^SCARND((fDEAL1.rate*fDEAL1.amts),"","",X)
		do DEFAULT^DBSMACRO("DEAL1.AMTB",AMT)		
		do DISPLAY^DBSMACRO("DEAL1.AMTB",AMT)
		}
	if NORM,fDEAL1.recp do {
		set AMT=$$^SCARND((fDEAL1.amts/fDEAL1.rate),"","",X)	
		do DEFAULT^DBSMACRO("DEAL1.AMTB",AMT)
		do DISPLAY^DBSMACRO("DEAL1.AMTS",AMT)
		}

	if NORM do DEFAULT^DBSMACRO("DEAL1.RATEBASE",fDEAL1.rate)
	if  do PROTECT^DBSMACRO("DEAL1.RATEBASE")

	if NORM,(fDEAL1.crcds'=%CRCD) set fDEAL1.amtbase=fDEAL1.amtb
	if NORM,(fDEAL1.crcds=%CRCD) set fDEAL1.amtbase=fDEAL1.amts

	if NORM do DISPLAY^DBSMACRO("DEAL1.AMTBASE")

	type String CORRCV	// Bank ID Code
	type Number OURN	// Nostro Account
	
	do CCYBPP^DEAL(.CORRCV,X,.OURN)

	if OURN.isNull() quit
  
	if fDEAL1.corrercv.isNull() set fDEAL1.corrercv=CORRCV
	if fDEAL1.nostrob.isNull() set fDEAL1.nostrob=OURN
	
	quit


NORM(Boolean NORM,       // Normal Deal Indicator
     Boolean CROSS,      // Cross Deal Indicator
     String CO,          // Company
     RecordDEAL1 fDEAL1) // DEAL1 Record

	// Normal deal

	type public Boolean ER
	type public String RM
	type Number HIGH, LOW, MID, VAR, Y
	
	set CROSS=0
	set NORM=1	

	if fDEAL1.crcds'=%CRCD do { quit:ER

		type RecordCRCD crcd=Db.getRecord("CRCD","CRCD=:fDEAL1.crcds,CO=:CO",1)

		set VAR=crcd.fxvar
		if VAR.isNull() set VAR=5

		set MID=crcd.midrate
		// No midrate is defined for ~p1
		if MID.isNull() do Runtime.setErrMSG("CRCD",7639,fDEAL1.crcds) quit:ER
		}
	else  do { quit:ER
		
		type RecordCRCD crcd=Db.getRecord("CRCD","CRCD=:X,CO=:CO",1)		

		set VAR=crcd.fxvar
		if VAR.isNull() set VAR=5
		
		if crcd.midrate.isNull() set MID=0
		else  set MID=1/crcd.midrate		

		// No midrate is defined for ~p1
		if (MID.isNull()) ! (MID=0) do Runtime.setErrMSG("CRCD",7639,X) quit:ER
		}
		
	set LOW=$J(MID-(MID*VAR/100),0,5)
	set HIGH=$J(MID+(MID*VAR/100),0,5)

	if 'VAR.isNull() do {
		
		// Invalid range. The valid rate is between ~p1 and ~p2
		if (fDEAL1.rate<LOW) ! (fDEAL1.rate>HIGH) set ER=1,RM=$$^MSG(7637,LOW,HIGH)

		if 'ER set fDEAL1.recp=0

		quit:('ER)!('fDEAL1.rate)

		set Y=1/fDEAL1.rate

		// Reciprocal rate is within valid range
		if (Y'<LOW),(Y'>HIGH) do Runtime.setErrMSG("CRCD",7640) set ER="W"
		if  set fDEAL1.recp=1
		}

	quit


CROSS(Boolean CROSS,   		// Cross Deal Indicator
      Boolean NORM,    		// Normal Deal Indicator
      String CO,        	// Company
      RecordDEAL1 fDEAL1,	// DEAL1 Record
      Number MIDS)		// Retail Mid-Rate

	// Cross deal
	
	type public Boolean ER=0
	type public String RM
	type Number HIGH, HIGHB, HIGHS, LOW, LOWB, LOWS, MIDB, VARB, VARS, Y

	set CROSS=1
	set NORM=0

	type RecordCRCD crcds=Db.getRecord("CRCD","CRCD=:fDEAL1.crcds,CO=:CO",1)
	
	set VARS=crcds.fxvar
	if VARS.isNull() set VARS=5

	set MIDS=crcds.midrate
	// No midrate is defined for ~p1
	if MIDS.isNull() do Runtime.setErrMSG("CRCD",7639,fDEAL1.crcds) quit:ER

	// Calculate the low and the high sell rate
	set LOWS=MIDS-(MIDS*VARS/100)
	set HIGHS=MIDS+(MIDS*VARS/100)


	type RecordCRCD crcdb=Db.getRecord("CRCD","CRCD=:X,CO=:CO",1)
	
	set VARB=crcdb.fxvar
	if VARB.isNull() set VARB=5

	set MIDB=crcdb.midrate
	// No midrate is defined for ~p1
	if MIDS.isNull() do Runtime.setErrMSG("CRCD",7639,X) quit:ER

	// Calculate the low and the high buy rate
	set LOWB=MIDB-(MIDB*VARB/100)
	set HIGHB=MIDB+(MIDB*VARB/100)

	// Calculate the low and the high cross rate
	set LOW=$J(LOWS/HIGHB,0,5)
	set HIGH=$J(HIGHS/LOWB,0,5)

	// Invalid rate. The valid range is between ~p1 and ~p2
	if (fDEAL1.rate<LOW) ! (fDEAL1.rate>HIGH) set ER=1,RM=$$^MSG(7641,LOW,HIGH)

	if 'ER set fDEAL1.recp=0
	
	quit:('ER)!(fDEAL1.rate.isNull())

	set Y=1/fDEAL1.rate
	
	// Reciprocal rate is within valid range
	if (Y'<LOW) , (Y'>HIGH) do Runtime.setErrMSG("CRCD",7640) set ER="W"
	if  set fDEAL1.recp=1

	quit

VP7(RecordDEAL1 fDEAL1) //
	// Protection for cross deal base rate
	
	type public Boolean ER
	type public String CO, ER, X

	type Number HIGH, LOW, MID, VAR

	type RecordCRCD crcd=Db.getRecord("CRCD","CRCD=:fDEAL1.crcds,CO=:CO",1)
	
	set VAR=crcd.fxvar
	if VAR.isNull() set VAR=5
	
	set MID=fDEAL1.ratebase	
	
	set LOW=MID-(MID*VAR/100)
	set HIGH=MID+(MID*VAR/100)

	// Invalid rate. The valid range is between ~p1 and ~p2
	if (X<LOW) ! (X>HIGH) set ER=1,RM=$$^MSG(7641,LOW,HIGH) quit:ER
	else  set RM=" "

	quit

VP8(RecordDEAL1 fDEAL1) //
	do VPO5(.fDEAL1) quit
VPO5(RecordDEAL1 fDEAL1)  // user library DEAL1_TDTPOS
	type public String CO, RM
	type public String ER
	type RecordSCAU0 scau0=Db.getRecord("SCAU0","UCLS=:%UserClass",1)
	// Date must be less than or equal to current system date
	if X>%SystemDate do Runtime.setErrMSG("DEAL1",8090) quit:ER
	// Userclass ~p1 not allowed to effective date more than ~p2 days
	if X < (%SystemDate-scau0.maxefd) set ER=1,RM=$$^MSG(8091,%UserClass,scau0.maxefd) quit:ER
	// Userclass ~p1 not permitted for backdated deals
	if (X<%SystemDate)&('scau0.dealefd) do Runtime.setErrMSG("DEAL1",8092,%UserClass) quit:ER
	// Date must be a valid business date
	if '($$BD^UNBD(X)) do Runtime.setErrMSG("DEAL1",8093) quit:ER
	type RecordCRCD crcdb=Db.getRecord("CRCD","CRCD=:fDEAL1.crcdb,CO=:CO",1)
	// Warning - date is not a valid business date in ~p1
	if '($$BD^UNBD(X,crcdb.calendar)) do Runtime.setErrMSG("DEAL1",8684,fDEAL1.crcdb) quit:ER
	type RecordCRCD crcds=Db.getRecord("CRCD","CRCD=:fDEAL1.crcds,CO=:CO",1)
	// Warning - date is not a valid business date in ~p1
	if '($$BD^UNBD(X,crcds.calendar)) do Runtime.setErrMSG("DEAL1",8684,fDEAL1.crcds) quit:ER
	quit
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP9(RecordDEAL1 fDEAL1) //
	if %ProcessMode quit

	do DEFAULT^DBSMACRO("DEAL1.TDT",%SystemDate)

VP10(RecordDEAL1 fDEAL1) //
	do VPO7(.fDEAL1) quit
VPO7(RecordDEAL1 fDEAL1)  // user library DEAL1_VDTPOS
	type public Date X
	type public String CO
	type Number SPDB, SPDS, VAL
	type String TYPE
	// Date cannot be less than trade date
	if X<fDEAL1.tdt do Runtime.setErrMSG("DEAL1",8104) quit:ER
	type RecordCRCD crcdb=Db.getRecord("CRCD","CRCD=:fDEAL1.crcdb,CO=:CO",1)
	set SPDB=crcdb.sptdys
	if SPDB.isNull() set SPDB=2
	// Date must be a valid business date for ~p1
	if '($$BD^UNBD(X,crcdb.calendar)) do Runtime.setErrMSG("DEAL1",8105,fDEAL1.crcdb) quit:ER
	type RecordCRCD crcds=Db.getRecord("CRCD","CRCD=:fDEAL1.crcds,CO=:CO",1)
	
	set SPDS=crcds.sptdys 
	if SPDS.isNull() set SPDS=2 
	// Date must be a valid business date for ~p1
	if '($$BD^UNBD(X,crcds.calendar)) do Runtime.setErrMSG("DEAL1",8105,fDEAL1.crcds) quit:ER
	// spot date for buy currency
	set SPDB=$$NBD^UNBD(X-1,-SPDB,0,crcdb.calendar)            
	// spot date for sell currency
	set SPDS=$$NBD^UNBD(X-1,-SPDS,0,crcds.calendar)           
	set VAL=$S(SPDB<SPDS:SPDB,1:SPDS)               // final spot date
	set TYPE=$S(VAL>fDEAL1.tdt:"FORWARD",1:"SPOT")
	set fDEAL1.type=TYPE
	set fDEAL1.typeol=TYPE
	do DISPLAY^DBSMACRO("DEAL1.TYPE")
	do DISPLAY^DBSMACRO("DEAL1.TYPEOL")
	quit
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP11(RecordDEAL1 fDEAL1) //
	quit:%ProcessMode

	type public String CO
	type Date SPD, SPDB, SPDS, VAL

	// Buy currency
	type RecordCRCD crcdb=Db.getRecord("CRCD","CRCD=:fDEAL1.crcdb,CO=:CO",1)		

	set SPD=crcdb.sptdys
	if SPD.isNull() set SPD=2

	// Spot Date for buy
	set SPDB=$$NBD^UNBD(fDEAL1.tdt+1,SPD,0,crcdb.calendar)

	// Sell currency
	type RecordCRCD crcds=Db.getRecord("CRCD","CRCD=:fDEAL1.crcds,CO=:CO",1)
	
	set SPD=crcds.sptdys
	if SPD.isNull() set SPD=2

	// Spot date for sell
	set SPDS=$$NBD^UNBD(fDEAL1.tdt+1,SPD,0,crcds.calendar)

	set VAL=$S(SPDB>SPDS:SPDB,1:SPDS)             // Final Spot Date

	do DEFAULT^DBSMACRO("DEAL1.VDT",VAL)
	do DISPLAY^DBSMACRO("DEAL1.VDT",VAL)

	quit

VP12(RecordDEAL1 fDEAL1) //
	do VPO9(.fDEAL1) quit
VPO9(RecordDEAL1 fDEAL1)  // user library DEAL1_SDTPOS
	type public Date X
	// Date cannot be less than the trade date
	if X<fDEAL1.tdt do Runtime.setErrMSG("DEAL1",8101) quit:ER
	// Date cannot be greater than the value date
	if X>fDEAL1.vdt do Runtime.setErrMSG("DEAL1",8102) quit:ER
	// Date must be a valid business date
	if '($$BD^UNBD(X)) do Runtime.setErrMSG("DEAL1",8093) quit:ER
	quit
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP13(RecordDEAL1 fDEAL1) //
	do VPO11(.fDEAL1) quit
VPO11(RecordDEAL1 fDEAL1)  // user library DEAL1_SDTPRE
	type public String CO
	type Number SPDB, SPDS
	type Date VAL
	type RecordCRCD crcdb=Db.getRecord("CRCD","CRCD=:fDEAL1.crcdb,CO=:CO",1)
	
	set SPDB=crcdb.sptdys 
	if SPDB.isNull() set SPDB=2
	if fDEAL1.type="SPOT" set VAL=fDEAL1.tdt
	if fDEAL1.type="FORWARD" do {
		set VAL=fDEAL1.vdt-1
		type RecordCRCD crcds=Db.getRecord("CRCD","CRCD=:fDEAL1.crcds,CO=:CO",1)
		
		set SPDS=crcds.sptdys 
		if SPDS.isNull() set SPDS=2
		set SPDB=$$NBD^UNBD(VAL,-SPDB,0,crcdb.calendar)
		set SPDS=$$NBD^UNBD(VAL,-SPDS,0,crcds.calendar)
		set VAL=$S(SPDB<SPDS:SPDB,1:SPDS)
		}	
	if VAL.get()<fDEAL1.tdt set VAL=fDEAL1.tdt
	do DEFAULT^DBSMACRO("DEAL1.SDT",VAL)
	quit
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP14(RecordDEAL1 fDEAL1) //
	if %ProcessMode=0 do PROTECT^DBSMACRO("DEAL1.REFLG") quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDEAL1 fDEAL1
 do VPR(.fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT()
 quit

VW(RecordDEAL1 fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDEAL1 fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDEAL1 fDEAL1
 do VDA1(.fDEAL1)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordDEAL1 fDEAL1
 if sn="DEAL1" do vSET1(.fDEAL1,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordDEAL1 fDEAL1,di,X)
 do fDEAL1.setAuditFlag(1)
 set fDEAL1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordDEAL1 fDEAL1
 if fid="DEAL1" quit $$vREAD1(.fDEAL1,di)
 quit ""
vREAD1(RecordDEAL1 fDEAL1,di)
 quit fDEAL1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordDEAL1 fDEAL1)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
	if '%ProcessMode set fDEAL1.edt=%SystemDate
	
	if 'fDEAL1.uid.isNull() do GOTO^DBSMACRO("DEAL1.NOEXT") quit
	set fDEAL1.uid=%UserID
	do DEFAULT^DBSMACRO("DEAL1.UID",%UserID,"1","0","0")
	do GOTO^DBSMACRO("DEAL1.NOEXT") quit
	
	quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
