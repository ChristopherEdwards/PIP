R01S492	// SCA548 - Minimum Annual Distribution Analysis Rep
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:59 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA548"
	set RN="Minimum Annual Distribution Analysis Rep"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[MADCALC]ACN|[MADCALC]ACN:DISTINCT:NOVAL||S ACN=X I X'=""ALL"" S %EXT=1 D ^UCIF I 'ER D EXT^DBSQRY D EXT^DBSQRY||T|Customer Number|||||"
	set %TAB("VIN2")="|255||[MADCALC]RPASEQ|[IRATYPE]RPASEQ:DISTINCT:QU ""[IRATYPE]ACN=<<ACN>>""||D EXT^DBSQRY||T|RPA Sequence|||||"
	set %TAB("VIN3")="|255||[MADCALC]IRATYP|[STBLIRA]:NOVAL||D EXT^DBSQRY||T|RPA Type|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ARUNDT,CONAM,RID,RN,RUN,VL,VLOF,VRF(),VSTATS(),fMADCALC,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vp5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA548",RN="Minimum Annual Distribution Analysis Rep"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA548","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[MADCALC]ACN#11#12,[MADCALC]NAM#31#20,[MADCALC]TAXID#62#11,[IRATYPE]PLANMAN#85#4,[MADCALC]DOB#110#10,[IRATYPE]MADSDOB#121#10\[MADCALC]RPASEQ#1#12,[IRATYPE]PLANID#15#12,[MADCALC]PVMAD#28#12,[MADCALC]ORIGMAD#42#10,[MADCALC]MADAMT#54#10,[MADCALC]RSPMADO#67#2,[IRATYPE]RSPMADB#72#2,[IRATYPE]MADPCT#78#2,[MADCALC]AUTUPD#83#2,[MADCALC]AUTDND#87#10,[MADCALC]AUTFRE#98#12,[MADCALC]AUTAMT#111#9,[IRATYPE]DISCID#121#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[MADCALC]ACN "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[MADCALC]RPASEQ "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[MADCALC]IRATYP "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("MADCALC,IRATYPE") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Customer Number"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"RPA Sequence"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"RPA Type"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Minimum Annual Distribution Analysis Rep"
		set VBNRINFO("PGM")="R01S492"
		set VBNRINFO("RID")="SCA548"
		set VBNRINFO("TABLES")="MADCALC,IRATYPE"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,MADCALC]IRATYP"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,MADCALC]ACN"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,MADCALC]RPASEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vp5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"MADCALC.IRATYP,MADCALC.ACN,MADCALC.RPASEQ,MADCALC."
	set VSELECT=VSELECT_"NAM,MADCALC.TAXID,IRATYPE.PLANMAN,MADCALC.DOB,IRAT"
	set VSELECT=VSELECT_"YPE.MADSDOB,IRATYPE.PLANID,MADCALC.PVMAD,MADCALC.O"
	set VSELECT=VSELECT_"RIGMAD,MADCALC.MADAMT,MADCALC.RSPMADO,IRATYPE.RSPM"
	set VSELECT=VSELECT_"ADB,IRATYPE.MADPCT,MADCALC.AUTUPD,MADCALC.AUTDND,M"
	set VSELECT=VSELECT_"ADCALC.AUTFRE,MADCALC.AUTAMT,IRATYPE.DISCID"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"MADCALC,IRATYPE",VWHERE,"MADCALC.IRATYP,MADCALC.ACN,MADCALC.RPASEQ","","DQMODE=1/PROTECTION=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=rwrs.getRowProt()		// Data item protection
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vp5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20
	set vc1=V.piece($C(9),1)			// MADCALC.IRATYP
	set vc2=V.piece($C(9),2)			// MADCALC.ACN
	set vc3=V.piece($C(9),3)			// MADCALC.RPASEQ
	set vc4=V.piece($C(9),4)			// MADCALC.NAM
	set vc5=V.piece($C(9),5)			// MADCALC.TAXID
	set vp5=VI.extract(5)				// Protection indicator
	set vc6=V.piece($C(9),6)			// IRATYPE.PLANMAN
	set vc7=V.piece($C(9),7)			// MADCALC.DOB
	set vc8=V.piece($C(9),8)			// IRATYPE.MADSDOB
	set vc9=V.piece($C(9),9)			// IRATYPE.PLANID
	set vc10=V.piece($C(9),10)			// MADCALC.PVMAD
	set vc11=V.piece($C(9),11)			// MADCALC.ORIGMAD
	set vc12=V.piece($C(9),12)			// MADCALC.MADAMT
	set vc13=V.piece($C(9),13)			// MADCALC.RSPMADO
	set vc14=V.piece($C(9),14)			// IRATYPE.RSPMADB
	set vc15=V.piece($C(9),15)			// IRATYPE.MADPCT
	set vc16=V.piece($C(9),16)			// MADCALC.AUTUPD
	set vc17=V.piece($C(9),17)			// MADCALC.AUTDND
	set vc18=V.piece($C(9),18)			// MADCALC.AUTFRE
	set vc19=V.piece($C(9),19)			// MADCALC.AUTAMT
	set vc20=V.piece($C(9),20)			// IRATYPE.DISCID
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public String fMADCALC
 set fMADCALC=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL3	// Detail
	type public String %TIM,ARUNDT,IOSL,RUN,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),fMADCALC,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vp5,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="Cust Nbr:"
	set VL=VL_$J("",10-VL.length())_$J(vc2,12)
	set VL=VL_$J("",24-VL.length())_"Name: "
	set VL=VL_$J("",30-VL.length())_$E(vc4,1,20)
	set VL=VL_$J("",52-VL.length())_"TIN/SIN:"
	set V=vc5,VO=V set V=$S(vp5=3:"***********",1:$E(V,1,11)) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",61-VL.length())_V		// [SYSDEV,MADCALC]TAXID
	set VL=VL_$J("",74-VL.length())_"Plan Mgr: "
	set VL=VL_$J("",84-VL.length())_$E(vc6,1,4)
	set VL=VL_$J("",92-VL.length())_"Cust/Spouse DOB:"
	set VL=VL_$J("",109-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",120-VL.length())_$J($$DAT^%ZM(vc8),10)
	do VOM
	set VL=$J(vc3,12)
	set VL=VL_$J("",14-VL.length())_$E(vc9,1,12)
	set VL=VL_$J("",27-VL.length())_$J($FN(vc10,",",2),12)
	set VL=VL_$J("",41-VL.length())_$J($FN(vc11,",",2),10)
	set VL=VL_$J("",53-VL.length())_$J($FN(vc12,",",2),10)
	set VL=VL_$J("",66-VL.length())_$J(vc13,2)
	set VL=VL_$J("",71-VL.length())_$J(vc14,2)
	set VL=VL_$J("",77-VL.length())_$J(vc15,2)
	set VL=VL_$J("",82-VL.length())_$J(vc16,2)
	set VL=VL_$J("",86-VL.length())_$J($$DAT^%ZM(vc17),10)
	set VL=VL_$J("",97-VL.length())_$E(vc18,1,12)
	set VL=VL_$J("",110-VL.length())_$J($FN(vc19,",",2),9)
	set VL=VL_$J("",120-VL.length())_$J(vc20,12)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ARUNDT,CONAM,RID,RN,RUN,VL,fMADCALC,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vp5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Calculation Date:"
	do VP2 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(ARUNDT),10)
	set VL=VL_$J("",19-VL.length())_V
	set VL=VL_$J("",38-VL.length())_"Plan Type: "
	set VL=VL_$J("",50-VL.length())_$J(vc1,2)
	set VL=VL_$J("",55-VL.length())_$E(RUN,1,12)
	do VOM
	set VL="" do VOM
	set VL="                             "_"-------------- Min Annual Distribution ----------------  -------------- Auto Distribution -------------"
	do VOM
	set VL="        "_"Plan                               Prior Yr              MAD  Age  Calc  Upd  Next          Dist         Dist         Tfr To"
	do VOM
	set VL="         "_"Seq  Plan ID        Plan Value    Dist Amt      Amount  Opt  Base   %   A/D  Date          Freq        Amount       Account"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,MADCALC]TAXID

 type public Number ACN,SACN,V,VL,VO

 if ACN=SACN.get() set (V,VL,VO)=""
	quit

VP2	// Column pre-processor - Variable: ARUNDT

 type public String ARUNDT,Q,RUN

 type RecordMADCALCH madcalch=Db.getRecord("MADCALCH","HEAD='*'",1)

 if 'ARUNDT.exists() do {

	if madcalch.getMode() set ARUNDT=madcalch.tjd
	else  set ARUNDT=""
	}

 if 'RUN.exists() do { 

	set RUN=""
	if 'Q.exists(),madcalch.getMode() do {
		if madcalch.live set RUN=$$^MSG(976)
		else  set RUN=$$^MSG(978)
		}
	}
	quit
