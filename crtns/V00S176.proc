V00S176(%ProcessMode,RecordUTBLEXTSMC1 fEXTINT4)   // -  - SID= <EXTINTSMC> Ext Interface Stmt Message Codes
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:18 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="EXTINTSMC",VPGM=$T(+0),VSNAME="Ext Interface Stmt Message Codes"
 set VFSN("UTBLEXTSMC1")="zfEXTINT4"
 set vPSL=1
 set KEYS(1)=fEXTINT4.INTRFACE
 set KEYS(2)=fEXTINT4.CODE
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fEXTINT4),VDA1(.fEXTINT4),^DBSPNT()

 if '%ProcessMode do VNEW(.fEXTINT4),VPR(.fEXTINT4),VDA1(.fEXTINT4)
 if %ProcessMode do VLOD(.fEXTINT4) quit:$G(ER)  do VPR(.fEXTINT4),VDA1(.fEXTINT4)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEXTINT4)
	quit


VNEW(RecordUTBLEXTSMC1 fEXTINT4) // Initialize arrays if %O=0
 
 do VDEF(.fEXTINT4)
 do VLOD(.fEXTINT4)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLEXTSMC1 fEXTINT4)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLEXTSMC1 fEXTINT4) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLEXTSMC1 fEXTINT4) // Display screen prompts
 set VO="4||13|"
 set VO(0)="9|0"
 set VO(1)=$C(9,17,42,2,0,0,0,0,0,0)_"01TExternal Interface Statement Message Codes"
 set VO(2)=$C(11,5,20,0,0,0,0,0,0,0)_"01TGeneral Description:"
 set VO(3)=$C(13,6,19,0,0,0,0,0,0,0)_"01TCredit Description:"
 set VO(4)=$C(14,7,18,0,0,0,0,0,0,0)_"01TDebit Description:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLEXTSMC1 fEXTINT4)  // Display screen data
 new V
 //
 set VO="7|5|13|"
 set VO(5)=$C(11,26,40,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT4.DESC,1,40)
 set VO(6)=$C(13,26,40,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT4.CRDESC,1,40)
 set VO(7)=$C(14,26,40,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT4.DRDESC,1,40)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLEXTSMC1 fEXTINT4)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=3,VPT=9,VPB=14,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLEXTSMC1"
 set OLNTB=14026
 
 set VFSN("UTBLEXTSMC1")="zfEXTINT4"
 //
 // 
	
	
 set %TAB(1)=$C(10,25,40)_"00T12403|1|[UTBLEXTSMC1]DESC"
 set %TAB(2)=$C(12,25,40)_"00T12401|1|[UTBLEXTSMC1]CRDESC"
 set %TAB(3)=$C(13,25,40)_"00T12402|1|[UTBLEXTSMC1]DRDESC"
 do VTBL(.fEXTINT4)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLEXTSMC1 fEXTINT4) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLEXTSMC1 fEXTINT4
 do VPR(.fEXTINT4)
 do VDA1(.fEXTINT4)
 do ^DBSPNT()
 quit

VW(RecordUTBLEXTSMC1 fEXTINT4)
 do VDA1(.fEXTINT4)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLEXTSMC1 fEXTINT4)
 do VDA1(.fEXTINT4)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLEXTSMC1 fEXTINT4
 do VDA1(.fEXTINT4)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLEXTSMC1 fEXTINT4
 if sn="UTBLEXTSMC1" do vSET1(.fEXTINT4,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLEXTSMC1 fEXTINT4,di,X)
 do fEXTINT4.setAuditFlag(1)
 set fEXTINT4.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLEXTSMC1 fEXTINT4
 if fid="UTBLEXTSMC1" quit $$vREAD1(.fEXTINT4,di)
 quit ""
vREAD1(RecordUTBLEXTSMC1 fEXTINT4,di)
 quit fEXTINT4.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
