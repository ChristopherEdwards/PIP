OVRINI	// Initialize Override User Table
	/*
	 ORIG:MATTSON - 11 APR 1990

	 Utility used to initialize transaction processing overrides.This
	 utility will not impact any user-class authorization(s) that may
	 exist.Its intent is to ensure all transaction overrides have been
	 installed.

	 I18N=QUIT

	---- Revision History ------------------------------------------------
	
	 10/03/05 - RussellDS - CR16911
	 	    Modified GRP to call returned FILE section, which had been
	 	    removed.  We still need to set up a row for the UTBLOVR
	 	    table, otherwise it won't exist and we won't be able to
	 	    compute the description on Oracle.
	 	    
	 	    Removed old revision history.

	 09/02/05 - ARPAVC - CR17084
		    Modified GRP section to use a Db.getRecord instead Class.new.
		    This allows new records to be created as well as existing
		    entries to be updated, preventing a problem with inserting 
		    restrictions that were a part of more than one class.  
		    
	 02/20/05 - TITOVE - CR 13291
	 	    Cleaned up as part of DBI2 project. Removed FILE section.
	*/

	type String CLS

	do Db.fastDelete("OVRLIT")

	set CLS="*"
	do GRP("CSHLIM;;Transaction amount exceeds institution's check cashing limit")
	do GRP("EURLIM;;User may not exchange currencies outside the EMU")
	do GRP("EURRATE;;Fixed notional rate involved; overall exchange rate will be overridden")
	do GRP("INVBRCC;;Branch cost center differs from transaction cost center")
	do GRP("INVGLCC;;Cost center not valid for G/L account <CID>")
	do GRP("MAXEFD;;Exceeds maximum days allowed for EFD transactions")
	do GRP("MAXFT;;Exceeds maximum days for future-dated transactions")
	do GRP("MXUCLSTR;;Transaction exceeds maximum userclass limit")
	do GRP("NOBOOK;;No-book transaction")
	do GRP("PMTEXCDS;;Payment exceeds amount due")
	do GRP("SBNR;;Host is not responding")
	do GRP("STP2;;Stop payment of account <STP2>")
	do GRP("STP20;;Stop warning of account <STP20>")
	do GRP("STP3;;Stop payment of check number <STP3>")
	do GRP("STP30;;Stop warning of check number <STP30>")
	do GRP("STP6;;Stop payment of document <STP6>")
	do GRP("STP60;;Stop warning of document <STP60>")

	set CLS="D"
	do GRP("ACR;;Account has an accrual balance of $<ACR>")
	do GRP("AECOUT;;Outstanding anticipated int/div check <AECOUT>")
	do GRP("AUTHNUM;;Invalid withdrawal authorization number")
	do GRP("BAL;;Transaction exceeds ledger balance of $<BAL>")
	do GRP("BALAVL;;Transaction exceeds available balance of $<BALAVL>")
	do GRP("BALCOL;;Transaction exceeds collected balance of $<BALCOL>")
	do GRP("BALMIN;;Below minimum balance of $<BALMIN>")
	do GRP("BGTARR;;Budget account in arrears")
	do GRP("BGTPMT;;Budget payment exceeds annual budget amount")
	do GRP("BILLNBR;;Billing account and sequence number mismatch")
	do GRP("CHGOPT;;System-calculated service fee")
	do GRP("CHGOPT1;;No amount is required for this service")
	do GRP("CHGOPT2;;Unapplied transaction fee of $<CHGOPT2>")
	do GRP("CHGOPT3;;Fee lookup table returned no service fee")
	do GRP("COMCUS;;Commitment amount exceeds customer limit of $<COMCUS>")
	do GRP("COMGRP;;Commitment amount exceeds group limit of $<COMGRP>")
	do GRP("COMLEG;;Commitment amount exceeds legal lending limit of $<COMLEG>")
	do GRP("COMPRD;;Commitment amount exceeds product type limit of $<COMPRD>")
	do GRP("DISTAGE;;Dist valid only year after mandatory age")
	do GRP("EFT;;Standing collection/payment order attached to account")
	do GRP("FLG1;;Debit transaction requires approval")
	do GRP("FLG2;;Credit transaction requires approval")
	do GRP("FLG3;;All transactions require approval")
	do GRP("FLG4;;Withdrawals outside grace period require approval")
	do GRP("FLG5;;Deposits outside grace period require approval")
	do GRP("FLG6;;Deposits/withdrawals outside grace period require approval")
	do GRP("FLG7;;Debit transaction after initial debit requires approval")
	do GRP("FLG8;;Credit transaction after initial credit requires approval")
	do GRP("FLG9;;Notice day violation")
	do GRP("FUNDSTW;;Funds transfer warning")
	do GRP("INCCR;;Deposit amount must be in increment of $<INCCR>")
	do GRP("INCDR;;Debit amount must be in increment of $<INCDR>")
	do GRP("INDXEFD;;Effective-dated index change is in process for <INDXEFD>")
	do GRP("INTAVL;;Transaction exceeds available int/div of $<INTAVL>")
	do GRP("INVCHK;;Transaction against check <INVCHK> cannot be processed")
	do GRP("IPND;;Int/div paid but not disbursed of $<IPND>")
	do GRP("IPYADJ;;Prior-year int/div adjustment for $<IPYADJ> - potential tax consideration")
	do GRP("IPYADJCY;;Amount exceeds current-year int/div")
	do GRP("IPYADJNC;;Amount exceeds current-year negative interest")
	do GRP("IPYADJNP;;Amount exceeds prior-year negative interest")
	do GRP("IPYADJPR;;Amount exceeds prior-year int/div")
	do GRP("IRA70;;Retirement plan account deposit restricted - age 70 1/2")
	do GRP("IRADFTBN;;Default beneficiary invoked")
	do GRP("IRADTH0;;Plan owner not deceased - death benefits do not apply")
	do GRP("IRADTH1;;Plan owner deceased - death benefits apply")
	do GRP("IRALATE;;Prior-year contribution past deadline of <IRALATE>")
	do GRP("IRAMLTBN;;Multiple benficiaries exist")
	do GRP("IRANOBEN;;Death distribution - beneficiary not defined")
	do GRP("IRAOVR;;Contribution is greater than maximum of $<IRAOVR>")
	do GRP("LNMBAL1;;Below computed minimum balance #1 of $<LNMBAL1>")
	do GRP("LNMBAL2;;Below computed minimum balance #2 of $<LNMBAL2>")
	do GRP("LOCK;;Plan is locked in. Override required for withdrawals.")
	do GRP("LSP;;Lease Admin. Fee & Paid Int\Div may need manual adjusting")
	do GRP("MATBAL;;Transaction results in negative matured principal balance")
	do GRP("MAXAMT;;Transaction exceeds maximum amount in advance of $<MAXAMT>")
	do GRP("MAXBAL;;New balance would exceed maximum of $<MAXBAL>")
	do GRP("MAXCR;;Deposit amount is greater than maximum of $<MAXCR>")
	do GRP("MAXDLY;;Exceeds maximum daily total of $<MAXDLY>")
	do GRP("MAXDR;;Withdrawal amount is greater than maximum of $<MAXDR>")
	do GRP("MAXDRCT;;Number of debits exceeds maximum of <MAXDRCT>")
	do GRP("MAXEMP;;Transaction exceeds max employee contribution for <MAXEMP>")
	do GRP("MAXEMPY;;Transaction exceeds max employer contribution for <MAXEMPY>")
	do GRP("MAXFHW;;Total First Home Purchase distribution exceeds $10,000")
	do GRP("MAXNUM;;Transaction exceeds maximum number in advance of <MAXNUM>")
	do GRP("MAXPAY;;Set up for Max Annual Dist. Max amount will be exceeded")
	do GRP("MINACR;;New balance is less than minimum to accrue $<MINACR>")
	do GRP("MINBAL;;New balance is less than minimum allowed of $<MINBAL>")
	do GRP("MINCR;;Deposit amount is less than minimum of $<MINCR>")
	do GRP("MINDR;;Withdrawal amount is less than minimum of $<MINDR>")
	do GRP("MININT;;New balance is less than minimum required to pay $<MININT>")
	do GRP("MINODA;;Initial opening deposit requirement is $<MINODA>")
	do GRP("MMDA;;Exceeds MMDA monthly transaction limit")
	do GRP("MXUCLSTR;;Transaction exceeds maximum userclass limit")
	do GRP("NBODPLM;;Amt exceeds neg bal limit due to OPD")
	do GRP("NEGBW;;Negative backup withholding of $<NEGBW>")
	do GRP("NEGIPTY;;Negative interest prior tax year of $<NEGIPTY>")
	do GRP("NEGITYTD;;Negative interest tax YTD of $<NEGITYTD>")
	do GRP("NEGIYTD;;Negative interest financial YTD of $<NEGIYTD>")
	do GRP("NEGPYTD;;Negative interest prior financial year of $<NEGPYTD>")
	do GRP("NMWITH;;Non-matured principal withdrawals restricted by transaction code")
	do GRP("NOBILL;;Billing account number not defined in budget record")
	do GRP("NOTATR;;Not an allowable transaction")
	do GRP("NTODPINV;;Insufficient O/D funds. Account will be forced negative.")
	do GRP("NTODPLM;;Amt exceeds neg tran limit on overdraft protection")
	do GRP("ODAMSG;;Transaction will invoke overdraft processing")
	do GRP("ODAVLF;;Transaction exceeds total available for overdraft $<ODAVLF>")
	do GRP("ODEXP;;Account w/ unauthorized int/div. Overdraft term expired.")
	do GRP("ODLIM;;Balance is within authorized overdraft limit $<ODLIM>")
	do GRP("ODLINK;;Account linked to loan(s) <ODLINK>")
	do GRP("ODUNAMT;;Balance exceeds authorized overdraft limit $<ODUNAMT>")
	do GRP("OFFERBAL;;Segment balance does not match offer amount")
	do GRP("OUTCUS;;Outstanding balance exceeds customer limit of $<OUTCUS>")
	do GRP("OUTGRP;;Outstanding balance exceeds group limit of $<OUTGRP>")
	do GRP("OUTLEG;;Outstanding balance exceeds legal lending limit of $<OUTLEG>")
	do GRP("OUTPRD;;Outstanding balance exceeds product type limit of $<OUTPRD>")
	do GRP("PAT;;Linked to preauthorization source(s) <PAT>")
	do GRP("PHLD;;Balance less permanent holds is $<PHLD>")
	do GRP("PLDGPAY;;Insufficient funds to pay off loan account")
	do GRP("PLDGPCF;;Posting transaction to a pledged account")
	do GRP("PRYRBKD;;Prior-year backdate deadline expired as of <PRYRBKD>")
	do GRP("PWTRA;;Partial withdrawals require approval")
	do GRP("RATE;;Rate entered was not the calculated rate")
	do GRP("RECPROT;;Record protected")
	do GRP("RELATED;;User is related to CIF <RELATED>")
	do GRP("RPAMNDIS;;Customer has not attained the minimum age <RPAMNDIS>")
	do GRP("RPAMXAGE;;Plan owner's age exceeds maximum limit of <RPAMXAGE>")
	do GRP("RPANODOB;;Invalid birthdate. Unable to verify age limitations.")
	do GRP("RPANP;;Death withdrawal. Non-spouse beneficiary not defined.")
	do GRP("RPASP;;Transfer to spouse. Spouse beneficiary not defined.")
	do GRP("RSKAVL;;Transaction exceeds available balance after risk analysis")
	do GRP("SBNR;;Host is not responding")
	do GRP("SEGBAL;;Segment has balance but no offer date or offer amount")
	do GRP("STAT1;;Account is inactive")
	do GRP("STAT2;;Account is dormant")
	do GRP("STAT3;;Account is in escheat")
	do GRP("STAT4;;Account is closed")
	do GRP("STAT5;;Close-out in process")
	do GRP("STP1;;Customer stop payment exists")
	do GRP("STP10;;Customer stop warning exists")
	do GRP("STP2;;Stop payment of account <STP2>")
	do GRP("STP20;;Stop warning of account <STP20>")
	do GRP("STP3;;Stop payment of check number <STP3>")
	do GRP("STP30;;Stop warning of check number <STP30>")
	do GRP("STP4;;Stop payment of check amount $<STP4>")
	do GRP("STP40;;Stop warning of check amount $<STP40>")
	do GRP("STP5;;ACH stop payment")
	do GRP("STP50;;ACH stop warning")
	do GRP("STP6;;Stop payment of document <STP6>")
	do GRP("STP60;;Stop warning of document <STP60>")
	do GRP("TAMTDIF;;Transaction amount is different from authorized amount")
	do GRP("VDTFWD;;Value date forward offset limit exceeded")
	do GRP("WITHHOLD;;Must manually calculate prior period int/div witholding adjustment")
	do GRP("WITHTELL;;Non-matured principal withdrawal teller must differ from auth teller")

	set CLS="L"
	do GRP("AVLBAL;;New balance exceeds available credit of $<AVLBAL>")
	do GRP("BAL;;Transaction exceeds ledger balance of $<BAL>")
	do GRP("BALAVL;;Transaction exceeds available balance of $<BALAVL>")
	do GRP("BALMIN;;Below minimum balance of $<BALMIN>")
	do GRP("BILLFM;;Intervening bill record maint. Verify bill records.")
	do GRP("CHGOF;;Charge-off balance exists")
	do GRP("COMCUS;;Commitment amount exceeds customer limit of $<COMCUS>")
	do GRP("COMGRP;;Commitment amount exceeds group limit of $<COMGRP>")
	do GRP("COMLEG;;Commitment amount exceeds legal lending limit of $<COMLEG>")
	do GRP("COMPRD;;Commitment amount exceeds product type limit of $<COMPRD>")
	do GRP("CPF;;Direct disbursements to commitment accounts require approval")
	do GRP("DARCLS;;This account is <DARCLS>")
	do GRP("DEL1;;Delinquent account - loan advance requires approval")
	do GRP("DEL2;;Delinquent account - transaction requires approval")
	do GRP("DR1;;Disburse entire loan amount of $<DR1>")
	do GRP("EAB;;Advances due date past escrow analysis date")
	do GRP("EFT;;Standing collection/payment order attached to account")
	do GRP("ENTAVL;;Exceeds use code availability of $<ENTAVL>")
	do GRP("EPA;;Excess payments require approval")
	do GRP("EPPEN;;Account will incur a $<EPPEN> early payment penalty")
	do GRP("FEEPYOFF;;Payoff ignores potential fees on payments due of $<FEEPYOFF>")
	do GRP("FMB;;Front money balance exists")
	do GRP("FUNDSTW;;Funds transfer warning")
	do GRP("INCDR;;Debit amount must be in increment of $<INCDR>")
	do GRP("INDXEFD;;Effective-dated index change is in process for <INDXEFD>")
	do GRP("INVSCH;;Invalid penalty rate schedule")
	do GRP("INVRPIRT;;RPI rate is not defined for PCM, Term and Payment Frequency")
	do GRP("IRNC;;Variable rate loan - new rate not in record")
	do GRP("LCHG;;Payment ignores late charge of $<LCHG>")
	do GRP("LCWEB;;Escrow accounts will be closed despite payoff flag")
	do GRP("LNNA;;Loan is in nonaccrual status. Transaction requires approval.")
	do GRP("LNTRV;;Intervening transactions are being reversed and reposted")
	do GRP("MAXAGGR;;Maximum aggregate draw amount exceeded")
	do GRP("MAXDRCT;;Number of debits exceeds maximum of <MAXDRCT>")
	do GRP("MCHG;;Payment ignores miscellaneous charge of $<MCHG>")
	do GRP("MINBAL;;Balance of $0 or less requires approval")
	do GRP("MINDR;;Advance is less than minimum of $<MINDR>")
	do GRP("MXUCLSTR;;Transaction exceeds maximum userclass limit")
	do GRP("NOTATR;;Not an allowable transaction")
	do GRP("OLIMIT;;Extent of due date advance requires approval")
	do GRP("OUTCUS;;Outstanding balance exceeds customer limit of $<OUTCUS>")
	do GRP("OUTGRP;;Outstanding balance exceeds group limit of $<OUTGRP>")
	do GRP("OUTLEG;;Outstanding balance exceeds legal lending limit of $<OUTLEG>")
	do GRP("OUTPRD;;Outstanding balance exceeds product type limit of $<OUTPRD>")
	do GRP("PAYOFF;;Calculated payoff amount is $<PAYOFF>")
	do GRP("PAYREC;;Recovery amount indicates payoff of $<PAYREC>")
	do GRP("PINC;;Variable payment loan - new payment not in record")
	do GRP("PMTSCH;;Payment schedule needs to be manually updated")
	do GRP("PMTUPD;;Advance payments updated payment schedule")
	do GRP("POLO;;Locked for payoff - transaction requires approval")
	do GRP("PPA;;Partial payment requires approval")
	do GRP("PPF;;Principal prepayment requires approval")
	do GRP("PPFDL;;Loan is not current - prepayment requires approval")
	do GRP("PPFLG;;Loan is in a purchased pool")
	do GRP("PRLOAN;;Direct transaction to sub-account")
	do GRP("RATE;;Rate entered was not the calculated rate")
	do GRP("RDTNVD;;Not a valid return date - repayment penalty required")
	do GRP("RECPROT;;Record protected")
	do GRP("RELATED;;User is related to CIF <RELATED>")
	do GRP("REMDIF;;Trans + partial differs from total remittance of $<REMDIF>")
	do GRP("RNFNVD;;No notification received - repayment penalty required")
	do GRP("SBNR;;Host is not responding")
	do GRP("STAT4;;Account is closed")
	do GRP("STP2;;Stop payment of account <STP2>")
	do GRP("STP20;;Stop warning of account <STP20>")
	do GRP("STP3;;Stop payment of check number <STP3>")
	do GRP("STP30;;Stop warning of check number <STP30>")
	do GRP("STP4;;Stop payment of check amount $<STP4>")
	do GRP("STP40;;Stop warning of check amount $<STP40>")
	do GRP("STP5;;ACH stop payment")
	do GRP("STP50;;ACH stop warning")
	do GRP("TEB;;Total escrow balance equals or exceeds loan balance")
	do GRP("TMINBAL;;Escrow account below minimum balance of $<TMINBAL>")
	do GRP("TPART;;Sale in process - balance change requires approval")

	// Clean-up obsolete overrides
	do CLEAN
	
	quit
	

GRP(X)	// Initialize override for each group within class

	type public String CLS
	type String GRP, OVR
	
        set OVR=X.piece(";;",1)
        type RecordOVRLIT ovrlit = Db.getRecord("OVRLIT","OVR=:OVR",1)
 
        // Deposit restrictions
	if CLS = "D" do {
		set ovrlit.desc = X.piece(";;",2)
		
		for GRP = "CD", "DDA", "ESC", "SAV", "WASH" do FILE(GRP, OVR)
	}
	
	// Loan restrictions
	else  if CLS = "L" do {
		set ovrlit.desc1 = X.piece(";;",2)
		
		for GRP = "CBL", "COM", "DM", "LN", "MTG", "RC" do FILE(GRP, OVR)
	}
	// Group Independent restrictions
	else  if CLS = "*" do {
		set ovrlit.desc2 = X.piece(";;",2)
		
		do FILE("*", OVR)
	}	
	
	do ovrlit.bypassSave()
	
	quit
	

FILE(String GRP, String OVR)	// Add UTBLOVR records

	type RecordUTBLOVR utblovr = Db.getRecord("UTBLOVR", "GRP=:GRP,OVR=:OVR", 1)
	
	do utblovr.save()
	
	quit
	

CLEAN	// Delete user table entries not contained in OVRLIT table

	type String GRP, OVR

	type ResultSet rs = Db.select("GRP,OVR","UTBLOVR")
	if rs.isEmpty() quit
	while rs.next() do {
		set GRP = rs.getCol(1)
		set OVR = rs.getCol(2)
		if 'Db.isDefined("OVRLIT","OVR = :OVR") do Db.delete("UTBLOVR","GRP = :GRP AND OVR = :OVR")
		}

	quit

vSIG()	quit "60176^49615^Dan Russell^16126"	// Signature - LTD^TIME^USER^SIZE
