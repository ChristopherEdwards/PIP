V01S515(Number %ProcessMode,RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ)   //SCA - PBS - SID= <QUEUED> Dependency Level Maintenance (Queuing)
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:34 - joynerd
 //  /*
 //  This screen identifies the dependencies defined for a Queuing System job.  For
 //  each dependent job, the screen lists the jobs that have been defined as
 //  conditionals (that is, the jobs that must be completed in order for the
 //  dependent job to begin running).  This screen is used by the Create Batch/Job
 //  (QUECRE), Modify Batch/Job (QUEUPD), and Delete Batch/Job (QUEDEL) functions.
 //  */
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fQUEUED(1).exists() set fQUEUED(1) = Class.new("RecordQUEUED")
  if 'fQUEUEJ.exists() set fQUEUEJ = Class.new("RecordQUEUEJ")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="QUEUED",VPGM=$T(+0),VSNAME="Dependency Level Maintenance (Queuing)"
 set VFSN("QUEUED")="zfQUEUED",VFSN("QUEUEJ")="zfQUEUEJ"
 set vPSL=1
 set KEYS(1)=fQUEUEJ.BCHNUM
 set KEYS(2)=fQUEUEJ.JOBNUM
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=14 do VPR(.fQUEUED(),.fQUEUEJ),VDA1(.fQUEUED(),.fQUEUEJ),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fQUEUED(),.fQUEUEJ),VPR(.fQUEUED(),.fQUEUEJ),VDA1(.fQUEUED(),.fQUEUEJ)
 if %ProcessMode do VLOD(.fQUEUED(),.fQUEUEJ) quit:$G(ER)  do VPR(.fQUEUED(),.fQUEUEJ),VDA1(.fQUEUED(),.fQUEUEJ)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fQUEUED(),.fQUEUEJ)
 type Number ptr
 set ptr=""
 for  set ptr = fQUEUED(ptr).order() quit:ptr.isNull()  do {
     if fQUEUED(ptr).JOB="" kill fQUEUED(ptr)
     }
	quit


VNEW(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ) // Initialize arrays if %O=0
 
 do VDEF(.fQUEUED(),.fQUEUEJ)
 do VLOD(.fQUEUED(),.fQUEUEJ)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=14
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ) // Display screen prompts
 set VO="9||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,22,28,2,0,0,0,0,0,0)_"01TDependency Level Maintenance"
 set VO(2)=$C(3,5,14,0,0,0,0,0,0,0)_"01T Batch Number:"
 set VO(3)=$C(3,51,12,0,0,0,0,0,0,0)_"01T Job Number:"
 set VO(4)=$C(4,4,15,0,0,0,0,0,0,0)_"01T Function Name:"
 set VO(5)=$C(5,6,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(6)=$C(7,9,62,0,0,0,0,0,0,0)_"01T- Enter jobs which must complete before this job can execute -"
 set VO(7)=$C(8,14,12,0,0,0,0,0,0,0)_"01TBatch Number"
 set VO(8)=$C(8,31,10,0,0,0,0,0,0,0)_"01TJob Number"
 set VO(9)=$C(8,49,10,0,0,0,0,0,0,0)_"01TTime Limit"
 if '%MODS.exists() set %MODS=1
 set DY=9 for I=%MODS:1:%REPEAT+%MODS-1 do VRPR(.fQUEUED(),.fQUEUEJ)
 set VO=(+VO)_"|"_(VO+1)_"|13" quit  // BOD pointer
 
VRPR(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ)  // Display prompts %REPEAT times
 
 set VO(VO+1)=$C(DY,60,7,0,0,0,0,0,0,0)_"01Tminutes"
 set VO=VO+1,DY=DY+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ)  // Display screen data
 new V
 //
 set VX=$P(VO,"|",2)
 set VO(VX+0)=$C(3,20,4,2,0,0,0,0,0,0)_"01N"_fQUEUEJ.BCHNUM
 set VO(VX+1)=$C(3,64,3,2,0,0,0,0,0,0)_"01N"_fQUEUEJ.JOBNUM
 set VO(VX+2)=$C(4,20,20,2,0,0,0,0,0,0)_"01T"_$E(fQUEUEJ.FUN,1,20)
 set VO(VX+3)=$C(5,20,50,2,0,0,0,0,0,0)_"01T"_$E(fQUEUEJ.DESC,1,50)
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+3,DY=9 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fQUEUED(),.fQUEUEJ)
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ)  // Display data %REPEAT times
 //instantiate new object if necessary
  #ACCEPT;DATE=08/08/06; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEPRECATED
  if 'fQUEUED(I).getPointer() do {
     set fQUEUED(I)=Class.new("RecordQUEUED","$G(KEYS(1)),$G(KEYS(2))")
     }
 set VO(VX+1)=$C(DY,19,7,2,0,0,0,0,0,0)_"00N"_fQUEUED(I).BCHPRMT
 set VO(VX+2)=$C(DY,38,3,2,0,0,0,0,0,0)_"00N"_fQUEUED(I).JOBPRMT
 set VO(VX+3)=$C(DY,51,8,2,0,0,0,0,0,0)_"00N"_fQUEUED(I).LIMIT
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=4,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=8+%REPEAT,BLKSIZ=(18*%REPEAT)+77,PGM=$T(+0),DLIB="SYSDEV",DFID="QUEUED,QUEUEJ"
 set OLNTB=VPB*1000
 
 set VFSN("QUEUED")="zfQUEUED",VFSN("QUEUEJ")="zfQUEUEJ"
 //
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,19,4)_"21N12401|1|[QUEUEJ]BCHNUM"
 set %TAB(2)=$C(2,63,3)_"21N12402|1|[QUEUEJ]JOBNUM"
 set %TAB(3)=$C(3,19,20)_"21T12402||[QUEUEJ]FUN|[SCATBL]DESC,QUEUE"
 set %TAB(4)=$C(4,19,50)_"21T12401||[QUEUEJ]DESC"
 set %TAB(5)=$C(8,18,7)_"00N12404|1|[QUEUED]BCHPRMT|[QUEUEB]||do VP1^V01S515(.fQUEUED,.fQUEUEJ)"
 set %TAB(6)=$C(8,37,3)_"00N12405|1|[QUEUED]JOBPRMT|||do VP2^V01S515(.fQUEUED,.fQUEUEJ)|do VP3^V01S515(.fQUEUED,.fQUEUEJ)"
 set %TAB(7)=$C(8,50,8)_"00N12401|1|[QUEUED]LIMIT"
 do VTBL(.fQUEUED(),.fQUEUEJ)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ) //

	if X = fQUEUEJ.bchnum do {
		set ER = 1
		// Illegal batch number
		set RM = $$^MSG(1196)
	}

	set fQUEUED(I(1)).BATCH = X

	quit
VP2(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ) //
	type Public Boolean E5
	type Public Number %REPEAT

	type Number J

	if fQUEUED(I(1)).bchprmt.isNull() do { quit
		if 'X.isNull() do {
			set X = ""
			set ER = 1
			// Invalid without batch number
			set RM = $$^MSG(1509)
		}
		else  set fQUEUED(I(1)).JOB = ""
	}

	else  set E5 = 1

	if X.isNull() set fQUEUED(I(1)).JOB = "" quit

	for J = 1:1:I(1)-1, I(1)+1:1:%REPEAT do {
		if fQUEUED(I(1)).bchprmt = fQUEUED(J).bchprmt, X = fQUEUED(J).jobprmt do {
			set ER = 1
			// Duplicate job previously entered
			set RM = $$^MSG(869)
		}
	}

	set J = fQUEUED(I(1)).bchprmt
	if Db.isDefined("QUEUEC","BCHNUM=:fQUEUEJ.bchnum,JOBNUM=:fQUEUEJ.jobnum,BATCH=:J,JOB=:X") do {
		set ER = 1
		// Jobs cannot be dependent upon each other
		set RM = $$^MSG("1582")
	}

	set fQUEUED(I(1)).JOB = X

	quit
VP3(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ) //

	set I(3) = "[QUEUEJ]JOBNUM,DESC:QU ""[QUEUEJ]BCHNUM="""""_fQUEUED(I(1)).bchprmt_""""""""
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordQUEUED fQUEUED()
 type Public RecordQUEUEJ fQUEUEJ
 do VPR(.fQUEUED(),.fQUEUEJ)
 do VDA1(.fQUEUED(),.fQUEUEJ)
 do ^DBSPNT()
 quit

VW(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ)
 do VDA1(.fQUEUED(),.fQUEUEJ)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordQUEUED fQUEUED(),RecordQUEUEJ fQUEUEJ)
 do VDA1(.fQUEUED(),.fQUEUEJ)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordQUEUED fQUEUED()
 type Public RecordQUEUEJ fQUEUEJ
 do VDA1(.fQUEUED(),.fQUEUEJ)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordQUEUED fQUEUED()
 if sn="QUEUED" do vSET1(fQUEUED(I(1)),di,X)
 type Public RecordQUEUEJ fQUEUEJ
 if sn="QUEUEJ" do vSET2(.fQUEUEJ,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordQUEUED fQUEUED,di,X)
 do fQUEUED.setAuditFlag(1)
 set fQUEUED.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordQUEUEJ fQUEUEJ,di,X)
 do fQUEUEJ.setAuditFlag(1)
 set fQUEUEJ.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordQUEUED fQUEUED()
 if fid="QUEUED" quit $$vREAD1(fQUEUED(I(1)),di)
 type Public RecordQUEUEJ fQUEUEJ
 if fid="QUEUEJ" quit $$vREAD2(.fQUEUEJ,di)
 quit ""
vREAD1(RecordQUEUED fQUEUED,di)
 quit fQUEUED.@di
vREAD2(RecordQUEUEJ fQUEUEJ,di)
 quit fQUEUEJ.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
