SUSFIL(RecordSUSPENSE suspense, String vpar, Boolean vparNorm) // SUSPENSE - Month-End Interest Suspense / Provision Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:24 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (14)             11/22/2003
	// Trigger Definition (6)                      08/16/2005
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = suspense.getMode()                    // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(suspense,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(suspense,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String EOM = suspense.eom
	type String CID = suspense.cid

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/TRIGBEF/" do VBI                            // Before insert triggers
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("EOM").exists()!vx("CID").exists() do vkchged quit // Primary key changed
		if vpar["/TRIGBEF/" do VBU                            // Before update triggers
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("SUSPENSE",.vx)
		set %O = 1 do vexec
		if vpar["/TRIGAFT/" do VAU                            // After update triggers
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
		if vpar["/TRIGAFT/" do VAI                            // After insert triggers
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("SUSPENSE","EOM = :suspense.eom and CID = :suspense.cid") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String EOM
	type public String CID

	type RecordSUSPENSE suspense = Db.getRecord("SUSPENSE","EOM=:EOM,CID=:CID")
	if (%ProcessMode = 2) do {
		do suspense.setMode(2)

		do SUSFIL(suspense,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordSUSPENSE suspense

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("SUSPENSE","EOM = :suspense.eom and CID = :suspense.cid") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(suspense))  S ^SUSP(vobj(suspense,-3),vobj(suspense,-4))=vobj(suspense)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordSUSPENSE suspense


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	ZWI ^SUSP(vobj(suspense,-3),vobj(suspense,-4))         // Delete Record
	quit


vreqn // Validate required data items

	type public RecordSUSPENSE suspense

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordSUSPENSE suspense

	if suspense.eom.isNull() do vreqerr("EOM") quit
	if suspense.cid.isNull() do vreqerr("CID") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("SUSPENSE","MSG",1767,"SUSPENSE."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VAI //
	type public Number ER = 0
	type public String vx(),RM
	do vai1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VAU //
	type public Number ER = 0
	type public String vx(),RM
	if vx("").order().isNull() quit
	if vx("PROVEOM").exists() do vau1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	if vx("SUSEOM").exists() do vau2 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VBI //
	type public Number ER = 0
	type public String vx(),RM
	do vbi1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VBU //
	type public Number ER = 0
	type public String vx(),RM
	type public RecordSUSPENSE suspense
	if vx("").order().isNull() do AUDIT^UCUTILN(suspense,.vx(),1,"|") quit
	if vx("PROVDMTH").exists()!vx("PROVWB").exists()!vx("PROVWO").exists() do vbu2 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	if vx("SUSDMTH").exists()!vx("SUSWB").exists()!vx("SUSWO").exists() do vbu1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	do AUDIT^UCUTILN(suspense,.vx(),1,"|")
	quit


vai1 // Trigger AFTER_INSERT - After Insert Suspense Information

	type public RecordSUSPENSE suspense
	/*
								-----Revision History--------------------------------------------------
	
 	08/10/05 - TITOVE - CR 16844
		   Cleaned up as part of DBI3 project. 
		   
	*/	

	type public Number CID

	type Date XBOM = $$EOMJD^SCADAT(suspense.eom+1,1)	

	// Update provision beginning of next month
	if suspense.proveom do {

		type RecordSUSPENSE suspense = Db.getRecord("SUSPENSE", "EOM = :XBOM, CID = :CID", 1)
		
		set suspense.provbom = suspense.proveom
		
		do suspense.bypassSave()
		}
	
	// Update suspense beginning of next month
	if suspense.suseom do {

		type RecordSUSPENSE suspense = Db.getRecord("SUSPENSE", "EOM = :XBOM, CID = :CID", 1)
		
		set suspense.susbom = suspense.suseom
		
		do suspense.bypassSave()		
		}
	quit

vau1 // Trigger AU_PROVEOM - After Update Provision End of Month

	type public RecordSUSPENSE suspense
	/*
	-----Revision History--------------------------------------------------

 	08/10/05 - TITOVE - CR 16844
		   Cleaned up as part of DBI3 project. 
	*/

	type public Number CID

	// Update provision beginning of next month
	type Date XBOM = $$EOMJD^SCADAT(suspense.eom+1,1)

	type RecordSUSPENSE suspense = Db.getRecord("SUSPENSE", "EOM = :XBOM, CID = :CID", 1)
		
	set suspense.provbom = suspense.proveom
		
	do suspense.bypassSave()
	
	quit

vau2 // Trigger AU_SUSEOM - After Update Suspense End of Month

	type public RecordSUSPENSE suspense
	/*
	
 	08/10/05 - TITOVE - CR 16844
		   Cleaned up as part of DBI3 project.
		   
	*/

	type public Number CID

	// Update suspense beginning of next month
	type Date XBOM = $$EOMJD^SCADAT(suspense.eom+1,1)
	
	type RecordSUSPENSE suspense = Db.getRecord("SUSPENSE", "EOM = :XBOM, CID = :CID", 1)
		
	set suspense.susbom = suspense.suseom
		
	do suspense.bypassSave()
	
	quit

vbi1 // Trigger BEFORE_INSERT - Before Insert Interest Suspense

	type public RecordSUSPENSE suspense
	/*
	
 	08/11/05 - TITOVE - CR 16844
		   Cleaned up as part of DBI3 project.
		   
	*/
	
	// Update Interest/Provision Suspense end of month
	if 'CUVAR.MRPT quit

	if suspense.susdmth set suspense.suseom = suspense.susbom+suspense.susdmth-suspense.suswb-suspense.suswo
	
	if suspense.provdmth!suspense.provwb!suspense.provwo set suspense.proveom = suspense.provbom+suspense.provdmth-suspense.provwb-suspense.provwo

	quit

vbu1 // Trigger BU_INTSUS - Before Update Interest Suspense

	type public RecordSUSPENSE suspense
	do suspense.setAuditFlag(1)
	/*
	
 	08/11/05 - TITOVE - CR 16844
		   Cleaned up as part of DBI3 project.
		   
	*/
		
	// Update Interest Suspense end of month
	if CUVAR.MRPT set suspense.suseom = suspense.susbom+suspense.susdmth-suspense.suswb-suspense.suswo

	quit

vbu2 // Trigger BU_PROV - Before Update Provision

	type public RecordSUSPENSE suspense
	do suspense.setAuditFlag(1)
	/*
	
 	08/11/05 - TITOVE - CR 16844
		   Cleaned up as part of DBI3 project.
		   
	*/
		
	// Update Provision Suspense end of month
	if CUVAR.MRPT set suspense.proveom = suspense.provbom+suspense.provdmth-suspense.provwb-suspense.provwo

	quit


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordSUSPENSE suspense

	set X = suspense.eom if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("EOM", vRM) quit
	set X = suspense.cid if 'X.isNull(),'Db.isDefined("ACN","X") set vRM = $$^MSG(1485,X) do vdderr("CID", vRM) quit
	set X = suspense.provbom if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.PROVBOM"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.provdmth if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.PROVDMTH"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.proveom if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.PROVEOM"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.provwb if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.PROVWB"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.provwo if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.PROVWO"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.susbom if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.SUSBOM"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.susdmth if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.SUSDMTH"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.suseom if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.SUSEOM"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.suswb if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.SUSWB"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.suswbr if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.SUSWBR"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.suswo if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.SUSWO"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = suspense.suswor if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"SUSPENSE.SUSWOR"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("SUSPENSE","MSG",979,"SUSPENSE."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordSUSPENSE suspense

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux
	type String voldpar = vpar.get()                       // Save filer switches

	if vx("EOM").exists() set vux("EOM") = vx("EOM")
	if vx("CID").exists() set vux("CID") = vx("CID")
	do vkey(1) set voldkey = suspense.eom_","_suspense.cid // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/TRIGBEF/" do VBU
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = suspense.eom_","_suspense.cid // Copy new keys into object
	type RecordSUSPENSE vnewrec = suspense.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("SUSPENSE",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update
	set vpar = voldpar
	if vpar["/TRIGAFT/" do VAU

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordSUSPENSE suspense

	if vux("EOM").exists() set suspense.eom = vux("EOM").piece("|",i)
	if vux("CID").exists() set suspense.cid = vux("CID").piece("|",i)
	quit
