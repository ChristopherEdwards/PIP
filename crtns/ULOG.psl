ULOG	// Math functions
	/*
	       ORIG:  Chuck Hardy (6721)

	    Provides a series of calculations

	      . Natural (base e) and common (base 10) logarithms,  exponents;
	      . Square roots.
	      . Factorials

	   All calculations are accurate to a minimum of 16 decimal places.

	   LIBRARY: . $$LN   - Compute the base e log of X
	            . $$EXP  - Compute the base e anti-log of X
	            . $$LOG  - Compute the base 10 log of X
	            . $$ALOG - Compute the base 10 anti-log of X
	            . $$SQRT - Compute the square root of X
	            . $$FACT - Compute the factorial of X

	  ---- Revision History ------------------------------------------------

	   08/02/06 - KELLYP - CR 22048
	   	      Modified SQRT section to eliminate PRECEDENCE warning.

	   05/29/02 - TELIV - 49794
		      Converted to PSL

	   06/21/00 - MATTSONA - 40083
	              Corrected infinite loop in section L.

	*/
	quit

LN(X)	// Natural log of X

	/*
	   Computes the LOG base e (X)
	   (0.69314718055994531 = nat log of 2)

	   KEYWORDS: Calculations, Math

	   ARGUMENTS:
	       . X  The mantissa for which the               /TYP=$/REQ
	            natural log is to be computed.

	   RETURNS:
	       . $$  Natural Log of X                        /TYP=$

	*/
	new A,B,C,D,I,L,bignum

	set L=X 
	set (C,D)=0
	
	do L

	set bignum="0.69314718055994531"
	
	set L=L+(D*bignum)
	
	if C set L=-L

	quit L

L	//
	if L<.75 for  set L=1/L set C=C+1 quit:L'<.75 

	if L>1.5 for  set L=L/2 set D=D+1 quit:L'>1.5

	set A=L-1 
	set L=A 
	set B=-A

	for I=2:20:62 do {
		set A=A*B set L=A/I+L
		set A=A*B set L=A/(I+1)+L
		set A=A*B set L=A/(I+2)+L
		set A=A*B set L=A/(I+3)+L
		set A=A*B set L=A/(I+4)+L
		set A=A*B set L=A/(I+5)+L
		set A=A*B set L=A/(I+6)+L
		set A=A*B set L=A/(I+7)+L
		set A=A*B set L=A/(I+8)+L
		set A=A*B set L=A/(I+9)+L
		set A=A*B set L=A/(I+10)+L
		set A=A*B set L=A/(I+11)+L
		set A=A*B set L=A/(I+12)+L
		set A=A*B set L=A/(I+13)+L
		set A=A*B set L=A/(I+14)+L
		set A=A*B set L=A/(I+15)+L
		set A=A*B set L=A/(I+16)+L
		set A=A*B set L=A/(I+17)+L
		set A=A*B set L=A/(I+18)+L
		set A=A*B set L=A/(I+19)+L
		}
	quit


EXP(X)	// Natural Anti-log of X

	/*
	   E=e^X  i.e., e to the Xth power

	   KEYWORDS: Calculations, Math

	   ARGUMENTS:
	       . X  The exponent for which the mantissa      /TYP=$/REQ
	            is to be computed.

	   RETURNS:
	       . $$  Natural Anti-log of X                   /TYP=$

	*/
	new A,B,C,E,I
	quit $$E(X)

E(E)	//
	if E*E>.05 set E=E/2 set E=$$E(E) set E=E*E quit E
	set A=E 
	set (E,B,C)=1

	for I=1:2:11 set B=B*A set C=C*I set E=B/C+E set B=B*A set C=C*(I+1) set E=B/C+E

	quit E


LOG(X)	// Calculate Log to the base 10

	/*
	   2.30258509299404568 = 1 / log of e to the base 10

	   KEYWORDS: Calculations, Math

	   ARGUMENTS:
	       . X   The mantissa for which the              /TYP=$/REQ
	             base 10 log is to be computed.

	   RETURNS:
	       . $$  Base 10 Log of X                        /TYP=$

	*/

	do LN(X)

	quit L/2.30258509299404568


ALOG(X)	// Calculate the Anti-Log to the base 10

	/*
	   0.434294481903251808 = log of e to the base 10

	   KEYWORDS: Calculations, Math

	   ARGUMENTS:
	       . X   The exponent for which the mantissa     /TYP=$/REQ
	             is to be computed.

	   RETURNS:
	       . $$  Natural Anti-log of X                   /TYP=$

	*/
	set X=X/.434294481903251808
	do EXP(X)

	quit X/2.30258509299404568


SQRT(X)	// Calculate square root

	/*
	    input = X (greater than zero)
	   output = Y

	   KEYWORDS: Calculations, Math

	   ARGUMENTS:
	       . X   The number for which the square root    /TYP=$/REQ
	             is to be computed.

	   RETURNS:
	       . $$  The square root of X                    /TYP=$

	*/
	new F,Y

	if X'>0 quit ""

	set Y=(X+1)/2

	for  set F=Y set Y=(X/F+F)/2 quit:Y'<F

	quit Y


FACT(X)	// Calculate factorials

	/*

	   KEYWORDS: Calculations, Math

	   ARGUMENTS:
	       . X   The number for which the factorial      /TYP=N/REQ
	             is to be computed.

	   RETURNS:
	       . $$  Factorial of X                          /TYP=N

	*/
	new I,Y

	if X<1 quit ""

	if X>40 quit ""
	set Y=1

	for I=1:1:X set Y=Y*I

	quit Y
 #OPTION ResultClass ON
Public String vSIG()	quit "60479^60364^Pat Kelly^3968"	// Signature - LTD^TIME^USER^SIZE
