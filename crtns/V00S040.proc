V00S040(%ProcessMode,RecordCTBLMATATT fCTBLMAT)   // -  - SID= <CTBLMAT> Interest Matrix Attributes
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:05 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="CTBLMAT",VPGM=$T(+0),VSNAME="Interest Matrix Attributes"
 set VFSN("CTBLMATATT")="zfCTBLMAT"
 set vPSL=1
 set KEYS(1)=fCTBLMAT.MATATT
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fCTBLMAT),VDA1(.fCTBLMAT),^DBSPNT()

 set ER=0 do VSCRPRE(.fCTBLMAT) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fCTBLMAT),VPR(.fCTBLMAT),VDA1(.fCTBLMAT)
 if %ProcessMode do VLOD(.fCTBLMAT) quit:$G(ER)  do VPR(.fCTBLMAT),VDA1(.fCTBLMAT)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCTBLMAT)
	quit


VNEW(RecordCTBLMATATT fCTBLMAT) // Initialize arrays if %O=0
 
 do VDEF(.fCTBLMAT)
 do VLOD(.fCTBLMAT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCTBLMATATT fCTBLMAT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCTBLMATATT fCTBLMAT) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCTBLMATATT fCTBLMAT) // Display screen prompts
 set VO="5||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,7,19,1,0,0,0,0,0,0)_"01T Matrix Attributes:"
 set VO(2)=$C(2,13,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(3,8,18,1,0,0,0,0,0,0)_"01T User Description:"
 set VO(4)=$C(4,9,10,0,0,0,0,0,0,0)_"01TValid Row:"
 set VO(5)=$C(4,31,13,0,0,0,0,0,0,0)_"01TValid Column:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCTBLMATATT fCTBLMAT)  // Display screen data
 new V
 //
 set VO="10|6|13|0"
 set VO(6)=$C(1,27,6,2,0,0,0,0,0,0)_"01N"_fCTBLMAT.MATATT
 set VO(7)=$C(2,27,50,2,0,0,0,0,0,0)_"01T"_$E(fCTBLMAT.DESC,1,50)
 set VO(8)=$C(3,27,50,2,0,0,0,0,0,0)_"00T"_$E(fCTBLMAT.USERDESC,1,50)
 set VO(9)=$C(4,20,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLMAT.VALROW:"Y",1:"N")
 set VO(10)=$C(4,45,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLMAT.VALCOL:"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCTBLMATATT fCTBLMAT)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=5,VPT=1,VPB=4,PGM=$T(+0),DLIB="SYSDEV",DFID="CTBLMATATT"
 set OLNTB=4045
 
 set VFSN("CTBLMATATT")="zfCTBLMAT"
 //
 // 
	
	
 set %TAB(1)=$C(0,26,6)_"21N12401|1|[CTBLMATATT]MATATT|[STBLMATATT]ITEM,DESC"
 set %TAB(2)=$C(1,26,50)_"21T12401|1|[CTBLMATATT]DESC"
 set %TAB(3)=$C(2,26,50)_"00T12402|1|[CTBLMATATT]USERDESC"
 set %TAB(4)=$C(3,19,1)_"00L12403|1|[CTBLMATATT]VALROW"
 set %TAB(5)=$C(3,44,1)_"00L12404|1|[CTBLMATATT]VALCOL"
 do VTBL(.fCTBLMAT)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCTBLMATATT fCTBLMAT) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCTBLMATATT fCTBLMAT
 do VPR(.fCTBLMAT)
 do VDA1(.fCTBLMAT)
 do ^DBSPNT()
 quit

VW(RecordCTBLMATATT fCTBLMAT)
 do VDA1(.fCTBLMAT)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCTBLMATATT fCTBLMAT)
 do VDA1(.fCTBLMAT)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCTBLMATATT fCTBLMAT
 do VDA1(.fCTBLMAT)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCTBLMATATT fCTBLMAT
 if sn="CTBLMATATT" do vSET1(.fCTBLMAT,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCTBLMATATT fCTBLMAT,di,X)
 do fCTBLMAT.setAuditFlag(1)
 set fCTBLMAT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCTBLMATATT fCTBLMAT
 if fid="CTBLMATATT" quit $$vREAD1(.fCTBLMAT,di)
 quit ""
vREAD1(RecordCTBLMATATT fCTBLMAT,di)
 quit fCTBLMAT.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordCTBLMATATT fCTBLMAT)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 /* Revision History
 
    04/11/05 - SmithCD - CR 13305
               Convert to PSL.
 
 */
 
 type Number ITEM
 
 set ITEM = fCTBLMAT.matatt
 
 type ResultSet rs = Db.select("DESC", "STBLMATATT", "ITEM=:ITEM")
 if 'rs.next() quit
 
 do DEFAULT^DBSMACRO("CTBLMATATT.DESC", rs.getCol("DESC"), "1", "0", "0")
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
