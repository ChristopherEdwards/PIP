V01S048(%ProcessMode,RecordTRN %A)   // -  - SID= <TRN3D> Tran Code Processing Control Flags 
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
 // This screen only displays if the transaction class associated with the
 // transaction code on the request screen is D (deposit).
 // 
 // This screen indicates whether (Y) or not (N) the system includes the processing
 // linked to specific deposit processing control flags when posting transactions
 // with the associated transaction code.  These flags are set by Sanchez at
 // the time of installation and upgrade for the standard set of transaction codes.
 // 
 // The institution may change the values of the following deposit flags without
 // affecting the standard processing associated with a transaction code.  However,
 // if the institution modifies the settings of any other processing control flags,
 // the system may not produce the appropriate processing results for a specified
 // transaction.
 // 
 // *  Update Tran Code Counter
 // *  Update Last Customer Contact Date
 // *  Consider MMDA Limitations
 // *  Do Not Calculate Penalty on Notice Accounts
 // *  Prompt for Check Number
 // 
 // For further information, refer to the "Transaction Code Maintenance Reference
 // Manual."
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="TRN3D",VPGM=$T(+0),VSNAME="Tran Code Processing Control Flags "
 set VFSN("TRN")="zA"
 set vPSL=1
 set KEYS(1)=%A.ETC
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.%A),VDA1(.%A),^DBSPNT()

 if '%ProcessMode do VNEW(.%A),VPR(.%A),VDA1(.%A)
 if %ProcessMode do VLOD(.%A) quit:$G(ER)  do VPR(.%A),VDA1(.%A)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.%A)
	quit


VNEW(RecordTRN %A) // Initialize arrays if %O=0
 
 do VDEF(.%A)
 do VLOD(.%A)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordTRN %A)
 if %A.PCFD32="" set %A.PCFD32=0
 if %A.PCFD33="" set %A.PCFD33=0
 if %A.STPNT="" set %A.STPNT=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordTRN %A) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordTRN %A) // Display screen prompts
 set VO="40||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,3,17,0,0,0,0,0,0,0)_"01TTransaction Code:"
 set VO(2)=$C(1,58,6,0,0,0,0,0,0,0)_"01TClass:"
 set VO(3)=$C(2,8,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(4)=$C(2,58,6,0,0,0,0,0,0,0)_"01TGroup:"
 set VO(5)=$C(4,8,25,2,0,0,0,0,0,0)_"01TProcessing Control Flags "
 set VO(6)=$C(4,59,15,2,0,0,0,0,0,0)_"01TConsiderations "
 set VO(7)=$C(6,1,2,0,0,0,0,0,0,0)_"01T16"
 set VO(8)=$C(6,8,67,0,0,0,0,0,0,0)_"01TPrompt for Segment Number                          Segment Int Adjs"
 set VO(9)=$C(7,1,4,0,0,0,0,0,0,0)_"01T17  "
 set VO(10)=$C(7,8,33,0,0,0,0,0,0,0)_"01TUpdate GCR Check Deposit Returned"
 set VO(11)=$C(7,59,11,0,0,0,0,0,0,0)_"01TDebit Codes"
 set VO(12)=$C(8,1,2,0,0,0,0,0,0,0)_"01T18"
 set VO(13)=$C(8,8,27,0,0,0,0,0,0,0)_"01TUpdate Net Same Day Deposit"
 set VO(14)=$C(9,1,4,0,0,0,0,0,0,0)_"01T19  "
 set VO(15)=$C(9,7,38,0,0,0,0,0,0,0)_"01T Non-Matured Principal Withdrawal Flag"
 set VO(16)=$C(9,59,18,0,0,0,0,0,0,0)_"01TSegmented Accounts"
 set VO(17)=$C(10,1,4,0,0,0,0,0,0,0)_"01T20  "
 set VO(18)=$C(10,8,69,0,0,0,0,0,0,0)_"01TRestrict Cash Withdrawal for Non-Matured Prin      Segmented Accounts"
 set VO(19)=$C(11,1,4,0,0,0,0,0,0,0)_"01T21  "
 set VO(20)=$C(11,8,36,0,0,0,0,0,0,0)_"01TValue Date to Next Accrual Calc Date"
 set VO(21)=$C(12,1,3,0,0,0,0,0,0,0)_"01T23 "
 set VO(22)=$C(12,8,28,0,0,0,0,0,0,0)_"01TUse Negative Interest Fields"
 set VO(23)=$C(13,1,2,0,0,0,0,0,0,0)_"01T30"
 set VO(24)=$C(13,8,27,0,0,0,0,0,0,0)_"01TPledged Deposit Transaction"
 set VO(25)=$C(14,1,4,0,0,0,0,0,0,0)_"01T31  "
 set VO(26)=$C(14,8,62,0,0,0,0,0,0,0)_"01TConsider Computed Minimum Balance                  Debit Codes"
 set VO(27)=$C(15,1,4,0,0,0,0,0,0,0)_"01T32  "
 set VO(28)=$C(15,8,68,0,0,0,0,0,0,0)_"01TUpdate Nonresident Alien Columns                   Int/Withhold Adjs"
 set VO(29)=$C(16,1,2,0,0,0,0,0,0,0)_"01T33"
 set VO(30)=$C(16,8,14,0,0,0,0,0,0,0)_"01TBudget Payment"
 set VO(31)=$C(16,59,11,0,0,0,0,0,0,0)_"01TDebit Codes"
 set VO(32)=$C(17,1,2,0,0,0,0,0,0,0)_"01T34"
 set VO(33)=$C(17,8,33,0,0,0,0,0,0,0)_"01TMiscellaneous Budget Contribution"
 set VO(34)=$C(17,59,12,0,0,0,0,0,0,0)_"01TCredit Codes"
 set VO(35)=$C(18,1,4,0,0,0,0,0,0,0)_"01T35  "
 set VO(36)=$C(18,7,74,0,0,0,0,0,0,0)_"01T Do Not Update Prior Tax Year buckets               Prior Year Adjustments"
 set VO(37)=$C(19,1,4,0,0,0,0,0,0,0)_"01T36  "
 set VO(38)=$C(19,8,63,0,0,0,0,0,0,0)_"01TDisable Reg CC Processing                          ATM Deposits"
 set VO(39)=$C(20,1,4,0,0,0,0,0,0,0)_"01T42  "
 set VO(40)=$C(20,8,30,0,0,0,0,0,0,0)_"01TWeb Consumer Suppression Flag:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordTRN %A)  // Display screen data
 new V
 //
 set VO="59|41|13|"
 set VO(41)=$C(1,21,12,2,0,0,0,0,0,0)_"01T"_$E(%A.ETC,1,12)
 set VO(42)=$C(1,65,1,2,0,0,0,0,0,0)_"01T"_$E(%A.CLS,1,1)
 set VO(43)=$C(2,21,35,2,0,0,0,0,0,0)_"01T"_$E(%A.DES,1,35)
 set VO(44)=$C(2,65,6,2,0,0,0,0,0,0)_"01T"_$E(%A.GRP,1,6)
 set VO(45)=$C(6,5,1,2,0,0,0,0,0,0)_"00N"_%A.PCFD16
 set VO(46)=$C(7,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD17:"Y",1:"N")
 set VO(47)=$C(8,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD18:"Y",1:"N")
 set VO(48)=$C(9,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD19:"Y",1:"N")
 set VO(49)=$C(10,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD20:"Y",1:"N")
 set VO(50)=$C(11,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD21:"Y",1:"N")
 set VO(51)=$C(12,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD23:"Y",1:"N")
 set VO(52)=$C(13,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD30:"Y",1:"N")
 set VO(53)=$C(14,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD31:"Y",1:"N")
 set VO(54)=$C(15,5,1,2,0,0,0,0,0,0)_"00N"_%A.PCFD32
 set VO(55)=$C(16,5,1,2,0,0,0,0,0,0)_"00N"_%A.PCFD33
 set VO(56)=$C(17,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD34:"Y",1:"N")
 set VO(57)=$C(18,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD35:"Y",1:"N")
 set VO(58)=$C(19,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD36:"Y",1:"N")
 set VO(59)=$C(20,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFD42:"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordTRN %A)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=19,VPT=1,VPB=20,PGM=$T(+0),DLIB="SYSDEV",DFID="TRN"
 set OLNTB=20008
 
 set VFSN("TRN")="zA"
 //
 // 
	
	
 set %TAB(1)=$C(0,20,12)_"21T12401|1|[TRN]ETC"
 set %TAB(2)=$C(0,64,1)_"21T12403|1|[TRN]CLS|[STBLTRNCLS]"
 set %TAB(3)=$C(1,20,35)_"21T12406|1|[TRN]DES"
 set %TAB(4)=$C(1,64,6)_"21T12404|1|[TRN]GRP|[STBLLIBS]"
 set %TAB(5)=$C(5,4,1)_"00N12416|1|[TRN]PCFD16|[STBLPCFD16]"
 set %TAB(6)=$C(6,4,1)_"00L12417|1|[TRN]PCFD17"
 set %TAB(7)=$C(7,4,1)_"00L12418|1|[TRN]PCFD18"
 set %TAB(8)=$C(8,4,1)_"00L12419|1|[TRN]PCFD19"
 set %TAB(9)=$C(9,4,1)_"00L12420|1|[TRN]PCFD20"
 set %TAB(10)=$C(10,4,1)_"00L12421|1|[TRN]PCFD21"
 set %TAB(11)=$C(11,4,1)_"00L12423|1|[TRN]PCFD23"
 set %TAB(12)=$C(12,4,1)_"00L12430|1|[TRN]PCFD30"
 set %TAB(13)=$C(13,4,1)_"00L12431|1|[TRN]PCFD31"
 set %TAB(14)=$C(14,4,1)_"00N12432|1|[TRN]PCFD32|[STBLNRACTU]"
 set %TAB(15)=$C(15,4,1)_"00N12433|1|[TRN]PCFD33|[STBLBGTPMT]"
 set %TAB(16)=$C(16,4,1)_"00L12434|1|[TRN]PCFD34"
 set %TAB(17)=$C(17,4,1)_"00L12435|1|[TRN]PCFD35"
 set %TAB(18)=$C(18,4,1)_"00L12436|1|[TRN]PCFD36"
 set %TAB(19)=$C(19,4,1)_"00L12442|1|[TRN]PCFD42"
 do VTBL(.%A)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordTRN %A) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordTRN %A
 do VPR(.%A)
 do VDA1(.%A)
 do ^DBSPNT()
 quit

VW(RecordTRN %A)
 do VDA1(.%A)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordTRN %A)
 do VDA1(.%A)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordTRN %A
 do VDA1(.%A)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordTRN %A
 if sn="TRN" do vSET1(.%A,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordTRN %A,di,X)
 do %A.setAuditFlag(1)
 set %A.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordTRN %A
 if fid="TRN" quit $$vREAD1(.%A,di)
 quit ""
vREAD1(RecordTRN %A,di)
 quit %A.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
