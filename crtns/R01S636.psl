R01S636	// SCA814 - Deposit Interest/Dividend Adjustment
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:02 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1
	type Date VIN2=%SystemDate-1
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA814"
	set RN="Deposit Interest/Dividend Adjustment"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[DEPIA]TRNJD|[DEPIA]TRNJD:DISTINCT:NOVAL||||D|Posting Start Date|||"_(TJD-1)_"||"
	set %TAB("VIN2")="|10||[DEPIA]TRNJD|[DEPIA]TRNJD:DISTINCT:NOVAL||||D|Posting End Date|||"_(TJD-1)_"||"
	set %TAB("VIN3")="|255||[DEP]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Deposit Product Type|||||"
	set %TAB("VIN4")="|255||[DEP]CID|[DEP]CID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Account|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#1,VIN3#0,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1,VIN2
	type public String VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %CRCD,%TIM,ACRCR,ACRCRTOT,ACRDR,ACRDRTOT,CONAM,INTCR,INTCRTOT,INTDR,INTDRTOT,PRIMTAMT,RID,RN,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA814",RN="Deposit Interest/Dividend Adjustment"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA814","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DEPIA]CID#1#12,[DEPIA]TRNJD#15#10,[HIST]EFD#27#10,[DEPIA]TSEQ#39#9"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DEPIA]TRNJD '< "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		set DQQRY(SEQ)="[DEPIA]TRNJD '> "_$$addqts^DBSRWUTL(VIN2),SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]TYPE "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DEP]CID "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DEPIA,DEP,HIST") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Posting Start Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC1|"_"Posting End Date"_"|VIN2|"_$$DAT^%ZM(VIN2.get(),%MSKD)
		set VBNRINFO("PROMPTS",3)="WC2|"_"Deposit Product Type"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Account"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Deposit Interest/Dividend Adjustment"
		set VBNRINFO("PGM")="R01S636"
		set VBNRINFO("RID")="SCA814"
		set VBNRINFO("TABLES")="DEPIA,DEP,HIST"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]TYPE"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEPIA]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEPIA]TRNJD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DEPIA]TSEQ"

		set VBNRINFO("DOC",1)="---- Revision History ------------------------------------------------"
		set VBNRINFO("DOC",2)=""
		set VBNRINFO("DOC",3)="12/07/05 - S.Krishnan - CR18434"
		set VBNRINFO("DOC",4)="         . Converted to PSL."
		set VBNRINFO("DOC",5)=""
		set VBNRINFO("DOC",6)="----------------------------------------------------------------------"
		set VBNRINFO("DOC",7)=""
		set VBNRINFO("DOC",8)="The Interest/Dividend Adjustment Report (SCA814) displays Int/Div accrual and"
		set VBNRINFO("DOC",9)="posted adjustments caused by backdated transactions to deposit accounts that"
		set VBNRINFO("DOC",10)="were posted within a specified date range, regardless of the effective date of"
		set VBNRINFO("DOC",11)="the transactions. It runs off of the Dep Int/Div Adj Relationship  Primary"
		set VBNRINFO("DOC",12)="(DEPIA) and DepInt/Div Adj Relationship - Secondary (DEPIAS) tables."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DEP.TYPE,DEPIA.CID,DEPIA.TRNJD,DEPIA.TSEQ,HIST.EFD"
	set VSELECT=VSELECT_",DEP.CID,DEP.CRCD,HIST.TOT"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DEPIA,DEP,HIST",VWHERE,"DEP.TYPE,DEPIA.CID,DEPIA.TRNJD,DEPIA.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8
	set vc1=V.piece($C(9),1)			// DEP.TYPE
	set vc2=V.piece($C(9),2)			// DEPIA.CID
	set vc3=V.piece($C(9),3)			// DEPIA.TRNJD
	set vc4=V.piece($C(9),4)			// DEPIA.TSEQ
	set vc5=V.piece($C(9),5)			// HIST.EFD
	set vc6=V.piece($C(9),6)			// DEP.CID
	set vc7=V.piece($C(9),7)			// DEP.CRCD
	set vc8=V.piece($C(9),8)			// HIST.TOT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number ACRCRTOT,ACRDRTOT,INTCRTOT,INTDRTOT
 type public String %CRCD
 if %CRCD.get().isNull() set %CRCD=CUVAR.%CRCD
 set (ACRCRTOT,ACRDRTOT,INTCRTOT,INTDRTOT)=0
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VSUM2	// Summary
	type public String %CRCD,%TIM,ACRCR,ACRCRTOT,ACRDR,ACRDRTOT,I,INTCR,INTCRTOT,INTDR,INTDRTOT,IOSL,PRIMTAMT,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL="                                   "_"Product"
	set VL=VL_$J("",43-VL.length())_"Type:"
	set VL=VL_$J("",49-VL.length())_$J(vc1,4)
	set VL=VL_$J("",55-VL.length())_"Totals: "
	set V=$J($FN(ACRDRTOT,",",2),14) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",65-VL.length())_V
	set V=$J($FN(ACRCRTOT,",",2),14) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",81-VL.length())_V
	set V=$J($FN(INTDRTOT,",",2),14) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",97-VL.length())_V
	set V=$J($FN(INTCRTOT,",",2),14) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",113-VL.length())_V
	do VOM
	quit

VDTL4	// Detail
	type public String %CRCD,%TIM,ACRCR,ACRCRTOT,ACRDR,ACRDRTOT,INTCR,INTCRTOT,INTDR,INTDRTOT,IOSL,PRIMTAMT,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc2,12)
	set VL=VL_$J("",14-VL.length())_$J($$DAT^%ZM(vc3),10)
	set VL=VL_$J("",26-VL.length())_$J($$DAT^%ZM(vc5),10)
	set V=vc4,VO=V set V=$J(V,9) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",38-VL.length())_V		// [SYSDEV,DEPIA]TSEQ
	set VL=VL_$J("",49-VL.length())_$J($FN(PRIMTAMT,",",2),14)
	set V=$J($FN(ACRDR,",",2),14) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",65-VL.length())_V
	set V=$J($FN(ACRCR,",",2),14) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",81-VL.length())_V
	set V=$J($FN(INTDR,",",2),14) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",97-VL.length())_V
	set V=$J($FN(INTCR,",",2),14) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",113-VL.length())_V
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %CRCD,%MSKD,%TIM,ACRCR,ACRCRTOT,ACRDR,ACRDRTOT,CONAM,INTCR,INTCRTOT,INTDR,INTDRTOT,PRIMTAMT,RID,RN,TYPE,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+10,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="Product Type:"
	set VL=VL_$J("",14-VL.length())_$J(vc1,4)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="     "_"Account   Post Date    Eff Date   Sequence     Transaction  -------Accrued Interest-------  -------Posted Interest--------"
	do VOM
	set VL="                                                         "_"Amount          Debits         Credits          Debits         Credits"
	do VOM
	set VL="================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - Variable: ACRDRTOT

 type public Number ACRDRTOT
 set ACRDRTOT=0
	quit

VP2	// Column post-processor - Variable: ACRCRTOT

 type public Number ACRCRTOT
 set ACRCRTOT=0
	quit

VP3	// Column post-processor - Variable: INTDRTOT

 type public Number INTDRTOT
 set INTDRTOT=0
	quit

VP4	// Column post-processor - Variable: INTCRTOT

 type public Number INTCRTOT
 set INTCRTOT=0
	quit

VP5	// Column post-processor - [SYSDEV,DEPIA]TSEQ

	type public String vc6,vc3,vc4,vc7,vc8
  type public Date TRNJD
 type public Number ACRCR,ACRDR,CID,INTCR,INTDR,PRIMTAMT,TSEQ
 type public String %CRCD
 type String CRCD

 set CID=vc6
 set TRNJD=vc3
 set TSEQ=vc4 
 set (ACRCR,ACRDR,INTCR,INTDR)=0
 set CRCD=vc7
 // Invalid currency code
 if CRCD.isNull() do Runtime.setErrMSG("DEP",1293) quit
 set PRIMTAMT=vc8		// Primary Transaction amount
 // If accounts currency is different than System Currency convert the amount
 // to System's Currency 
 if CRCD'=%CRCD do CAMT^CRCDUTL(%CRCD,CRCD,.PRIMTAMT)

 do DETAIL(CID,CRCD,TRNJD,TSEQ,.ACRDR,.ACRCR,.INTDR,.INTCR)
 quit
 //
 // Accumulate Int/div adjustments transaction detail
DETAIL(Number CID,
       String CRCD,
       Date TRNJD,
       Number TSEQ,
       Number ACRDR,
       Number ACRCR,
       Number INTDR,
       Number INTCR)
  /*
  This section calculates the report detail variables. It retrieves all the 
  history records for the Secondary Transactions associated with a backdated
  Primary Transaction.
  ARGUMENTS:
 
 	CID                     /TYP=N/REQ/MECH=VAL
 	Account Number
 
 	CRCD			/TYP=T/REQ/MECH=VAL
 	Currency code	 
 
 	TRNJD                     /TYP=D/REQ/MECH=VAL
 	System Processing Date
 
 	TSEQ                    /TYP=N/REQ/MECH=VAL
 	Primary Transaction Sequence
 
 	ACRDR                   /TYP=N/REQ/MECH=REFNAM:W
 	Secondary Int/Div accrual adj debit total
 
 	ACRCR                   /TYP=N/REQ/MECH=REFNAM:W
 	Secondary Int/Div accrual adj credit total
 
 	INTDR                   /TYP=N/REQ/MECH=REFNAM:W
 	Secondary Int/Div posting adj debit total
 
 	INTCR                   /TYP=N/REQ/MECH=REFNAM:W
 	Secondary Int/Div posting adj credit total
 	
  EXAMPLE:
 	 D DETAIL^(CID,CRCD,TRNJD,TSEQ,.ACRDR,.ACRCR,.INTDR,.INTCR)
 */

 type Number INT,ITC,ITC1,ITC4,MISC,NEGPB,REC,SECTAMT,UNCINT
 type public String %CRCD
 type ResultSet rs=Db.select("SSEQ","DEPIAS","CID=:CID AND TRNJD=:TRNJD AND TSEQ=:TSEQ","SSEQ ASC")
 while rs.next() do {
 	type Number SSEQ
 	set SSEQ=rs.getCol("SSEQ")		// Secondary Sequence number  	

	type RecordHIST hist=Db.getRecord("HIST","CID=:CID,TSEQ=:SSEQ",1)
 	if 'hist.getMode() quit
 	
 	set SECTAMT=hist.tamt			// Secondary Transaction amount
 	set ITC=hist.itc			// Internal Transaction code
 	set ITC1=ITC.extract(1)			// Debit or Credit
 	set ITC4=ITC.extract(4)			// Interest Posting
 	set INT=SECTAMT.piece("#",3)		// Accrued Interest
 	set MISC=SECTAMT.piece("#",6)		// Neg Accrued - Authorized
 	set REC=SECTAMT.piece("#",11)		// Negative Accrued - Unauthorized
 	set UNCINT=SECTAMT.piece("#",18)	// Uncollected Accrued Interest
 	set NEGPB=SECTAMT.piece("#",14)		// Accr Int on available interest

 	// total all the secondary interest accrual debit adjustments
 	if 'ITC4,'ITC1 set ACRDR=ACRDR+INT+MISC+REC+UNCINT+NEGPB
 	
 	// total all the secondary interest accrual credit adjustments
 	if 'ITC4,ITC1 set ACRCR=ACRCR+INT+MISC+REC+UNCINT+NEGPB
 	
 	// total all the secondary interest posting debit adjustments
 	if ITC4,'ITC1 set INTDR=INTDR+SECTAMT
 	
 	// total all the secondary interest posting credit adjustments
 	if ITC4,ITC1 set INTCR=INTCR+SECTAMT
	} 	
 
 // If transactions currency code is not same as System Base curr code then 
 // convert the amount into System Base Currency.
 if CRCD'=%CRCD do {
 	do CAMT^CRCDUTL(%CRCD,CRCD,.ACRDR) 
 	do CAMT^CRCDUTL(%CRCD,CRCD,.ACRCR) 
 	do CAMT^CRCDUTL(%CRCD,CRCD,.INTDR) 
 	do CAMT^CRCDUTL(%CRCD,CRCD,.INTCR)
 	}
 
 set ACRCR=ACRCR.roundDec(2)
 set ACRDR=ACRDR.roundDec(2)
	quit

VP6	// Column post-processor - Variable: ACRDR

 type public Number ACRDR,ACRDRTOT
 set ACRDRTOT=ACRDRTOT+ACRDR
	quit

VP7	// Column post-processor - Variable: ACRCR

 type public Number ACRCR,ACRCRTOT
 set ACRCRTOT=ACRCRTOT+ACRCR
	quit

VP8	// Column post-processor - Variable: INTDR

 type public Number INTDR,INTDRTOT
 set INTDRTOT=INTDRTOT+INTDR
	quit

VP9	// Column post-processor - Variable: INTCR

 type public Number INTCR,INTCRTOT
 set INTCRTOT=INTCRTOT+INTCR
	quit
