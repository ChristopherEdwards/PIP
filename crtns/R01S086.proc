R01S086	// SCA015 - Escrow Trial Balance
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String GRP="ALL"
	type String TYPE="ALL"
	type Number YES

	set RID="SCA015"
	set RN="Escrow Trial Balance"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("GRP")="|255|||[STBLGRP]:NOVAL:QU ""[STBLGRP]CLS=""""L""""""||||T|Loan Group|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("TYPE")="|255|||[PRODDFTL]:NOVAL||||T|Loan Type|||||"
	set %TAB("YES")="|1|||||||L|Exclude if Closed Before Start of Tax|||||"

	set %READ="IO/REQ,YES#1,GRP#0,TYPE#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=40
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number YES
	type public String GRP,TYPE
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,ACOLL,ACR,ANFLG,ASMT,BAL,CONAM,CRCD,IRN,KVAR,LDREM,LNM,NUM(),NumberTOTESBAL,PAYID,PGM,PMT,PREMA,RAMTD,RAMTP,RBMET,REMIPF,REMLD,REMND,REMPTP,REMYTD,RID,RN,ROEA,SPF,SRF,TOTESACR,TOTESBAL,TOTESNUM,TY,VL,VLC,VLOF,VRF(),VRG,VSTATS(),X,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA015",RN="Escrow Trial Balance"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA015","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[TMPRPT4]KEY4#59#6"

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("TMPRPT4.PID,TMPRPT4.KEY1,TMPRPT4.KEY2,TMPRPT4.KEY3,TMPRPT4.KEY4,TMPRPT4.DATA","TMPRPT4","TMPRPT4.PID=:%ProcessID","TMPRPT4.PID,TMPRPT4.KEY1,TMPRPT4.KEY2,TMPRPT4.KEY3,TMPRPT4.KEY4","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6
	set vc1=V.piece($C(9),1)			// TMPRPT4.PID
	set vc2=V.piece($C(9),2)			// TMPRPT4.KEY1
	set vc3=V.piece($C(9),3)			// TMPRPT4.KEY2
	set vc4=V.piece($C(9),4)			// TMPRPT4.KEY3
	set vc5=V.piece($C(9),5)			// TMPRPT4.KEY4
	set vc6=V.piece($C(9),6)			// TMPRPT4.DATA
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Boolean ANFLG
 type Number LCID,DCID
 type String TRTYPE,TYP

 type public  Number TOTESBAL,TOTESACR,TOTESNUM
 type public String TYPE,GRP

 type ResultSet rs1

 if GRP="ALL",TYPE="ALL" set rs1 = Db.select("CID","LN","CLS='L'")
 else  if GRP="ALL",TYPE'="ALL" set rs1 = Db.select("CID","LN","CLS='L' AND TYPE=:TYPE")
 else  if GRP'="ALL",TYPE="ALL" set rs1 = Db.select("CID","LN","CLS='L' AND GRP=:GRP")
 else  if GRP'="ALL",TYPE'="ALL" set rs1 = Db.select("CID","LN","CLS='L' AND GRP=:GRP AND TYPE=:TYPE")
 while rs1.next() do {
	set LCID=rs1.getCol("CID")
	type ResultSet rs2 = Db.select("CID,ANFLG","DEP","AREF=:LCID")
	if rs2.next() do {
		set DCID=rs2.getCol("CID")
		set ANFLG=rs2.getCol("ANFLG")
  		type DbSet dstrty=Db.selectDbSet("TRTYPE","CID=:DCID")
 		while dstrty.next() do {
 			type RecordTRTYPE trtype=dstrty.getRecord("TRTYPE")
 			set TYP=trtype.typ
 			set TRTYPE=trtype.trtype
 			type RecordTMPRPT4 tmprpt4 = Db.getRecord("TMPRPT4","PID=:%ProcessID,KEY1=:LCID,KEY2=:DCID,KEY3=TYP,KEY4=TRTYPE",1)
 			set tmprpt4.data=trtype.remptp_"|"_trtype.ldrem_"|"_trtype.asmt_"|"_trtype.acoll_"|"_trtype.rbmet_"|"_trtype.spf
 			set tmprpt4.data=tmprpt4.data_"|"_trtype.ramtd_"|"_trtype.srf_"|"_trtype.payid_"|"_trtype.remytd_"|"_trtype.remld
 			set tmprpt4.data=tmprpt4.data_"|"_trtype.prema_"|"_trtype.remipf_"|"_trtype.roea_"|"_trtype.remnd_"|"_trtype.ramtp_"|"_ANFLG
			do tmprpt4.save()
	 		}
		}
 	}
 set TOTESBAL=0
 set TOTESACR=0
 set TOTESNUM=0
	quit

VPREBQ	// Pre-processor (before query)

 do Db.fastDelete("TMPRPT4","PID=:%ProcessID")
	quit

VRPOST	// Report post-processor

 type public String IOTYP,KVAR,NUM(),TY,VFMQ,VL,VLC,PGM
 type public Number CRCD,IOSL,TOTESACR,TOTESBAL,TOTESNUM,VRG,X

 type Number ZNUM,ZTY,Z1,Z2,Z3
 type String RID

 set TY=""
 do Db.delete("LESTBREP")
 do Db.delete("TOTESC")
 set CRCD=1 

 type RecordLESTBREP lestbrep

 for  set TY=NUM(TY).order()  quit:TY=""  do {
 set lestbrep =Db.getRecord("LESTBREP","TY=:TY",1)
 set lestbrep.num=NUM(TY)
 set lestbrep.ty=TY
 do lestbrep.save()
 }

 type RecordTOTESC totesc=Db.getRecord("TOTESC","CRCD=1",1)
 set totesc.totesbal=TOTESBAL.get()
 set totesc.totesacr=TOTESACR.get()
 set totesc.totesnum=TOTESNUM.get()
 do totesc.save()

 
 if IOTYP="TRM" do {
 	set VL="" for X=VLC+1:1:IOSL do VOM // SCROLL SCREEN UP
	do ^DBSRWBR(2)
	set VLC=0,VRG=0 // SOM page break logic
	}
 if VFMQ="Q" do VEXIT()
 else  do {
	// Do report summary SCA015B
	set RID="SCA015B" do ^URID
	do @("V0^"_PGM)
	}
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VDTL2	// Detail
	type public String %TIM,ACOLL,ACR,ANFLG,ASMT,BAL,CRCD,GRP,IOSL,IOTYP,IRN,KVAR,LDREM,LNM,NUM(),NumberTOTESBAL,PAYID,PGM,PMT,PREMA,RAMTD,RAMTP,RBMET,REMIPF,REMLD,REMND,REMPTP,REMYTD,ROEA,SPF,SRF,TOTESACR,TOTESBAL,TOTESNUM,TY,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),X,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc2,12)
	set VL=VL_$J("",17-VL.length())_"Borrower:  "
	do VP1 quit:VFMQ!verror.get()  set V=$E(LNM,1,17)
	set VL=VL_$J("",28-VL.length())_V
	do VOM
	quit

VDTL3	// Detail
	type public String %TIM,ACOLL,ACR,ANFLG,ASMT,BAL,CRCD,GRP,IOSL,IOTYP,IRN,KVAR,LDREM,LNM,NUM(),NumberTOTESBAL,PAYID,PGM,PMT,PREMA,RAMTD,RAMTP,RBMET,REMIPF,REMLD,REMND,REMPTP,REMYTD,ROEA,SPF,SRF,TOTESACR,TOTESBAL,TOTESNUM,TY,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),X,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="       "_$J(vc3,12)
	set VL=VL_$J("",20-VL.length())_$J(BAL,8,2)
	set VL=VL_$J("",29-VL.length())_$J(ACR,10,5)
	set VL=VL_$J("",40-VL.length())_$J(IRN,8,5)
	set VL=VL_$J("",49-VL.length())_$J(PMT,6,2)
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,ACOLL,ACR,ANFLG,ASMT,BAL,CRCD,GRP,IOSL,IOTYP,IRN,KVAR,LDREM,LNM,NUM(),NumberTOTESBAL,PAYID,PGM,PMT,PREMA,RAMTD,RAMTP,RBMET,REMIPF,REMLD,REMND,REMPTP,REMYTD,ROEA,SPF,SRF,TOTESACR,TOTESBAL,TOTESNUM,TY,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),X,vc1,vc2,vc3,vc4,vc5,vc6,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set V=vc5,VO=V do VP2 quit:VFMQ!verror.get()  set V=$E(V,1,6) set VL="                                                          "_V
	set VL=VL_$J("",69-VL.length())_$J(REMPTP,8,2)
	set VL=VL_$J("",79-VL.length())_$J($$DAT^%ZM(LDREM),10)
	set VL=VL_$J("",92-VL.length())_$J(ASMT,8,2)
	set VL=VL_$J("",102-VL.length())_$J(ACOLL,8)
	set VL=VL_$J("",112-VL.length())_$J(RBMET,2)
	set VL=VL_$J("",116-VL.length())_$S(SPF:"Y",1:"N")
	set VL=VL_$J("",119-VL.length())_$J(RAMTD,2,0)
	set VL=VL_$J("",124-VL.length())_$S(SRF:"Y",1:"N")
	do VOM
	set VL="                                                          "_$E(PAYID,1,6)
	set VL=VL_$J("",69-VL.length())_$J(REMYTD,8,2)
	set VL=VL_$J("",79-VL.length())_$J($$DAT^%ZM(REMLD),10)
	set VL=VL_$J("",90-VL.length())_$S(PREMA:"Y",1:"N")
	set VL=VL_$J("",94-VL.length())_$S(REMIPF:"Y",1:"N")
	set VL=VL_$J("",98-VL.length())_$S(ROEA:"Y",1:"N")
	set VL=VL_$J("",101-VL.length())_$J($$DAT^%ZM(REMND),10)
	set VL=VL_$J("",113-VL.length())_$J(RAMTP,8,5)
	set VL=VL_$J("",124-VL.length())_$S(ANFLG:"Y",1:"N")
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ACOLL,ACR,ANFLG,ASMT,BAL,CONAM,CRCD,GRP,IOTYP,IRN,KVAR,LDREM,LNM,NUM(),NumberTOTESBAL,PAYID,PGM,PMT,PREMA,RAMTD,RAMTP,RBMET,REMIPF,REMLD,REMND,REMPTP,REMYTD,RID,RN,ROEA,SPF,SRF,TOTESACR,TOTESBAL,TOTESNUM,TY,TYPE,VL,X,vc1,vc2,vc3,vc4,vc5,vc6,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",99-VL.length())_"Run Date:"
	set VL=VL_$J("",109-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",101-VL.length())_"System:"
	set VL=VL_$J("",109-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"Loan     Escrow    Escrow        Acr      Int    Esc   Transfer   Pt Remit   Last Rem  Assessment  Coll Num  RM SP RI    SR  "
	do VOM
	set VL="  "_"Account   Account  Balance        Int      Rat    Pmt    Payee     Rem  YTD  Effective  PRA RIP RE  Next Rem  RB % Inc    AN "
	do VOM
	set VL="=============================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: LNM

	type public String vc3
 type Number DCID,POSACR
 
 type public String LNM
 type public Number ACR,BAL,IRN,PMT,TOTESACR,TOTESBAL,TOTESNUM
 
 set DCID=vc3

 type RecordDEP dep = Db.getRecord("DEP","CID=:DCID")
 set LNM=dep.lnm
 set BAL=dep.bal
 set ACR=dep.acr
 set IRN=dep.irn
 set PMT=dep.curramt
 set POSACR=dep.posacr

 set TOTESBAL=TOTESBAL+BAL
 set TOTESACR=TOTESACR+POSACR
 set TOTESNUM=TOTESNUM+1
	quit

VP2	// Column pre-processor - [SYSDEV,TMPRPT4]KEY4

	type public String vc6,vc4
 type public Boolean ANFLG,PREMA,REMIPF,ROEA,SPF,SRF
 type public Date LDREM,REMLD,REMND
 type public Number ACOLL,ASMT,RAMTD,RAMTP,RBMET,REMPTP,REMYTD
 type public String NUM(),PAYID,TY
 
 type String DATA,TYP
 
 set DATA=vc6
 set REMPTP=DATA.piece("|",1)
 set LDREM=DATA.piece("|",2)
 set ASMT=DATA.piece("|",3)
 set ACOLL=DATA.piece("|",4)
 set RBMET=DATA.piece("|",5)
 set SPF=DATA.piece("|",6)
 set RAMTD=DATA.piece("|",7)
 set SRF=DATA.piece("|",8)
 set PAYID=DATA.piece("|",9)
 set REMYTD=DATA.piece("|",10)
 set REMLD=DATA.piece("|",11)
 set PREMA=DATA.piece("|",12)
 set REMIPF=DATA.piece("|",13)
 set ROEA=DATA.piece("|",14)
 set REMND=DATA.piece("|",15)
 set RAMTP=DATA.piece("|",16)
 set ANFLG=DATA.piece("|",17)

 set TYP=vc4
 set TY=$$TT^LNU(TYP)
 if NUM(TY).get().isNull() set NUM(TY)=0
 set NUM(TY)=NUM(TY)+1
	quit
