V01S378(Number %ProcessMode,RecordLNFEEP fLNFEEP)   //PBS - LN - SID= <LNFEEPB> Loan Fee Plan Maintenance (Page 2)
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:30 - joynerd
 // This screen supports the Loan Fee Plans user table (LNFEE).
 // The LNFEEPB screen contains deferred fee information, including
 // data about amortization frequencies and cycles.  The user accesses
 // this screen via the Loan Fee Plan functions (LNFEEP1, LNFEEP2,
 // LNFEEP3, and LNFEEP4).
 // 
 // For further information, refer to the Loan Fee Processing Reference
 // Manual.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fLNFEEP.exists() set fLNFEEP = Class.new("RecordLNFEEP")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNFEEPB",VPGM=$T(+0),VSNAME="Loan Fee Plan Maintenance (Page 2)"
 set VFSN("LNFEEP")="zfLNFEEP"
 set vPSL=1
 set KEYS(1)=fLNFEEP.FEETYP
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fLNFEEP),VDA1(.fLNFEEP),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fLNFEEP),VPR(.fLNFEEP),VDA1(.fLNFEEP)
 if %ProcessMode do VLOD(.fLNFEEP) quit:$G(ER)  do VPR(.fLNFEEP),VDA1(.fLNFEEP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fLNFEEP)
	quit


VNEW(RecordLNFEEP fLNFEEP) // Initialize arrays if %O=0
 
 do VDEF(.fLNFEEP)
 do VLOD(.fLNFEEP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordLNFEEP fLNFEEP)
 quit:fLNFEEP.FEETYP.isNull() 
 quit:%ProcessMode  set ER=0 if (fLNFEEP.FEETYP="") set ER=1,RM=$$^MSG(1767,"FEETYP") Q
 if Db.isDefined("LNFEEP","LNFEEP.FEETYP=:fLNFEEP.FEETYP") S ER=1,RM=$$^MSG(2327) Q
 do fLNFEEP.setAuditFlag(1)
 if fLNFEEP.DTST="" set fLNFEEP.DTST=TJD
 if fLNFEEP.SUBTOVAT="" set fLNFEEP.SUBTOVAT=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordLNFEEP fLNFEEP) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNFEEP fLNFEEP) // Display screen prompts
 set VO="11||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,11,10,0,0,0,0,0,0,0)_"01T Fee Type:"
 set VO(2)=$C(2,9,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(3)=$C(5,23,32,1,0,0,0,0,0,0)_"01T Deferred Fee Income Parameters "
 set VO(4)=$C(7,7,14,1,0,0,0,0,0,0)_"01T Defer Income:"
 set VO(5)=$C(9,4,23,0,0,0,0,0,0,0)_"01TAmortization Frequency:"
 set VO(6)=$C(9,47,16,0,0,0,0,0,0,0)_"01TUse Actual Days:"
 set VO(7)=$C(10,16,11,0,0,0,0,0,0,0)_"01TNext Cycle:"
 set VO(8)=$C(10,46,17,0,0,0,0,0,0,0)_"01TNumber of Cycles:"
 set VO(9)=$C(11,16,11,0,0,0,0,0,0,0)_"01TLast Cycle:"
 set VO(10)=$C(11,41,22,0,0,0,0,0,0,0)_"01TCycle Beyond Maturity:"
 set VO(11)=$C(12,43,20,0,0,0,0,0,0,0)_"01TDef Income G/L Acct:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordLNFEEP fLNFEEP)  // Display screen data
 new V
 //
 set VO="21|12|13|0"
 set VO(12)=$C(1,22,8,2,0,0,0,0,0,0)_"01T"_$E(fLNFEEP.FEETYP,1,8)
 set VO(13)=$C(2,22,30,2,0,0,0,0,0,0)_"01T"_$E(fLNFEEP.DESC,1,30)
 set VO(14)=$C(7,22,1,2,0,0,0,0,0,0)_"00L"_$S(fLNFEEP.DEFINC:"Y",1:"N")
 set VO(15)=$C(9,28,12,2,0,0,0,0,0,0)_"00F"_$E(fLNFEEP.AMOFRE,1,12)
 set VO(16)=$C(9,64,1,2,0,0,0,0,0,0)_"00L"_$S(fLNFEEP.ANDF:"Y",1:"N")
 set VO(17)=$C(10,28,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fLNFEEP.AMOND)
 set VO(18)=$C(10,64,3,2,0,0,0,0,0,0)_"00N"_fLNFEEP.AMONUM
 set VO(19)=$C(11,28,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fLNFEEP.AMOLD)
 set VO(20)=$C(11,64,1,2,0,0,0,0,0,0)_"00L"_$S(fLNFEEP.CBMF:"Y",1:"N")
 set VO(21)=$C(12,64,12,2,0,0,0,0,0,0)_"00N"_fLNFEEP.GLFDI
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordLNFEEP fLNFEEP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=10,VPT=1,VPB=12,PGM=$T(+0),DLIB="SYSDEV",DFID="LNFEEP"
 set OLNTB=12064
 
 set VFSN("LNFEEP")="zfLNFEEP"
 //
 // 
	
	
 set %TAB(1)=$C(0,21,8)_"20T12401|1|[LNFEEP]FEETYP||if X?1A.AN"
 set %TAB(2)=$C(1,21,30)_"20T12401|1|[LNFEEP]DESC"
 set %TAB(3)=$C(6,21,1)_"00L12440|1|[LNFEEP]DEFINC|||do VP1^V01S378(.fLNFEEP)"
 set %TAB(4)=$C(8,27,12)_"00F12445|1|[LNFEEP]AMOFRE|||do VP2^V01S378(.fLNFEEP)"
 set %TAB(5)=$C(8,63,1)_"00L12409|1|[LNFEEP]ANDF|||do VP3^V01S378(.fLNFEEP)"
 set %TAB(6)=$C(9,27,10)_"00D12442|1|[LNFEEP]AMOND|||do VP4^V01S378(.fLNFEEP)"
 set %TAB(7)=$C(9,63,3)_"00N12444|1|[LNFEEP]AMONUM|||do VP5^V01S378(.fLNFEEP)"
 set %TAB(8)=$C(10,27,10)_"00D12443|1|[LNFEEP]AMOLD"
 set %TAB(9)=$C(10,63,1)_"00L12420|1|[LNFEEP]CBMF"
 set %TAB(10)=$C(11,63,12)_"00N12424|1|[LNFEEP]GLFDI|[GLAD]||do VP6^V01S378(.fLNFEEP)"
 do VTBL(.fLNFEEP)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordLNFEEP fLNFEEP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordLNFEEP fLNFEEP) //
 ; If linked fee, may not defer income.  This is because we would have no
 ; way of designating the sequence when Bill Record Maintenance function is
 ; used.
 I fLNFEEP.LFEE S ER=1,RM=$$^MSG(1206)
 ;
 ; If deferred income flag is turned off, bypass all other fields
 ;
 do UNPROT^DBSMACRO("ALL")
 if 'X do PROT quit
 if X do UNPROT quit
 quit
 ;
PROT ;
 do DELETE^DBSMACRO("LNFEEP.AMOND","1","0")
 do DELETE^DBSMACRO("LNFEEP.AMONUM","1","0")
 do DELETE^DBSMACRO("LNFEEP.AMOFRE","1","0")
 do DELETE^DBSMACRO("LNFEEP.ANDF","1","0")
 do DELETE^DBSMACRO("LNFEEP.CBMF","1","0")
 do PROTECT^DBSMACRO("ALL")
 do UNPROT^DBSMACRO("LNFEEP.DEFINC")
 quit
 ;
UNPROT ;
 do UNPROT^DBSMACRO("ALL")
 quit
 ;
VP2(RecordLNFEEP fLNFEEP) //
 if fLNFEEP.DEFINC do CHANGE^DBSMACRO("REQ","")
 if X=V quit
 ;
 if X="" do DELETE^DBSMACRO("LNFEEP.AMOND","1","0") quit
 ;
 N AMOND,AF
 set AMOND=$$NJD^UFRE(TJD,X,.AF) quit:ER
 ;
 ; Field ANDF should only be enabled for input when daily amortization
 ; frequency.
 if AF.get()'>360 do PROTECT^DBSMACRO("LNFEEP.ANDF")
 if AF.get()>360 do UNPROT^DBSMACRO("LNFEEP.ANDF")
 ;
 do DEFAULT^DBSMACRO("LNFEEP.AMOND",AMOND)
 ;
VP3(RecordLNFEEP fLNFEEP) //
 if fLNFEEP.DEFINC do CHANGE^DBSMACRO("REQ","")
VP4(RecordLNFEEP fLNFEEP) //
 if fLNFEEP.DEFINC do CHANGE^DBSMACRO("REQ","")
 if X=V quit
 if X="" quit
 ;
 ; Return error message is date entered precedes system date
 if X'<TJD quit
 set ER=1,RM=$$^MSG(1878)
VP5(RecordLNFEEP fLNFEEP) //
 if fLNFEEP.DEFINC do CHANGE^DBSMACRO("REQ","")

VP6(RecordLNFEEP fLNFEEP) //
 if fLNFEEP.DEFINC do CHANGE^DBSMACRO("REQ","")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNFEEP fLNFEEP
 do VPR(.fLNFEEP)
 do VDA1(.fLNFEEP)
 do ^DBSPNT()
 quit

VW(RecordLNFEEP fLNFEEP)
 do VDA1(.fLNFEEP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNFEEP fLNFEEP)
 do VDA1(.fLNFEEP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNFEEP fLNFEEP
 do VDA1(.fLNFEEP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordLNFEEP fLNFEEP
 if sn="LNFEEP" do vSET1(.fLNFEEP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordLNFEEP fLNFEEP,di,X)
 do fLNFEEP.setAuditFlag(1)
 set fLNFEEP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordLNFEEP fLNFEEP
 if fid="LNFEEP" quit $$vREAD1(.fLNFEEP,di)
 quit ""
vREAD1(RecordLNFEEP fLNFEEP,di)
 quit fLNFEEP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
