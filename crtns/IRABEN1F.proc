IRABEN1F(RecordIRABEN1 iraben1, String vpar, Boolean vparNorm) // IRABEN1 - RPA Beneficiary Information Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:25 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (27)             02/01/2006
	// Trigger Definition (1)                      12/17/2004
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = iraben1.getMode()                     // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(iraben1,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(iraben1,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String ACN = iraben1.acn
	type String RPASEQ = iraben1.rpaseq
	type String BENSEQ = iraben1.benseq
	type String CYR = iraben1.cyr

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("ACN").exists()!vx("RPASEQ").exists()!vx("BENSEQ").exists()!vx("CYR").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("IRABEN1",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("IRABEN1","ACN = :iraben1.acn and RPASEQ = :iraben1.rpaseq and BENSEQ = :iraben1.benseq and CYR = :iraben1.cyr") // No record exists
		if vpar["/TRIGBEF/" do VBD                            // Before delete triggers
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String ACN
	type public String RPASEQ
	type public String BENSEQ
	type public String CYR

	type RecordIRABEN1 iraben1 = Db.getRecord("IRABEN1","ACN=:ACN,RPASEQ=:RPASEQ,BENSEQ=:BENSEQ,CYR=:CYR")
	if (%ProcessMode = 2) do {
		do iraben1.setMode(2)

		do IRABEN1F(iraben1,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordIRABEN1 iraben1

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("IRABEN1","ACN = :iraben1.acn and RPASEQ = :iraben1.rpaseq and BENSEQ = :iraben1.benseq and CYR = :iraben1.cyr") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(iraben1))  S ^IRABEN(vobj(iraben1,-3),vobj(iraben1,-4),vobj(iraben1,-5),vobj(iraben1,-6))=vobj(iraben1)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordIRABEN1 iraben1


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	ZWI ^IRABEN(vobj(iraben1,-3),vobj(iraben1,-4),vobj(iraben1,-5),vobj(iraben1,-6)) // Delete Record
	quit


vreqn // Validate required data items

	type public RecordIRABEN1 iraben1

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordIRABEN1 iraben1

	if iraben1.acn.isNull() do vreqerr("ACN") quit
	if iraben1.rpaseq.isNull() do vreqerr("RPASEQ") quit
	if iraben1.benseq.isNull() do vreqerr("BENSEQ") quit
	if iraben1.cyr.isNull() do vreqerr("CYR") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("IRABEN1","MSG",1767,"IRABEN1."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordIRABEN1 iraben1
	if 'iraben1.benseq.isNull() set vfkey("^IRABEN("_""""_iraben1.acn_""""_","_""""_iraben1.rpaseq_""""_","_""""_iraben1.benseq_""""_")")="IRABEN1(ACN,RPASEQ,BENSEQ) -> IRABEN"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordIRABEN1 iraben1
	type public Number %O
	type String vERRMSG

	if 'Db.isDefined("IRABEN",":iraben1.acn,:iraben1.rpaseq,:iraben1.benseq") set vERRMSG = $$^MSG(8563,"IRABEN1(ACN,RPASEQ,BENSEQ) -> IRABEN") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit


VBD //
	type public Number ER = 0
	type public String vx(),RM
	do vbd1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vbd1 // Trigger BEFORE_DELETE - Check TAMT and WTH

	type public RecordIRABEN1 iraben1
	/* 
	   Revision History
	
	   02/26/02 - ANTONOVS - 46454
		      Trigger was modified to check if there is a value in 
		      TOTSTWH column.

	   09/14/99 - CHOK - 31126
		      Converted to PSL.

	*/


	// Check TAMT and WTH
	
	// Unable to delete.  Beneficiary has received dist.
	
	if iraben1.tamt do Runtime.setErrMSG("IRABEN1",439) quit:ER 
	if iraben1.wth do Runtime.setErrMSG("IRABEN1",439) quit:ER 
	if iraben1.totstwh do Runtime.setErrMSG("IRABEN1",439) quit:ER
	quit
	


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordIRABEN1 iraben1

	set X = iraben1.acn if 'X.isNull(),'Db.isDefined("CIF","X") set vRM = $$^MSG(1485,X) do vdderr("ACN", vRM) quit
	set X = iraben1.rpaseq if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("RPASEQ", vRM) quit
	set X = iraben1.benseq if 'X.isNull(),X'?1.2N,X'?1"-"1.1N set vRM=$$^MSG(742,"N") do vdderr("BENSEQ", vRM) quit
	set X = iraben1.cyr if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("CYR", vRM) quit
	set X = iraben1.benacn if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("BENACN", vRM) quit
	set X = iraben1.benfair if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.BENFAIR"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.tamt if 'X.isNull() set vRM = $$VAL^DBSVER("$",12,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TAMT"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.tamt59 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TAMT59"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.tamt60 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TAMT60"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.tamt68 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TAMT68"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.tamt75 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TAMT75"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.tamt85 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TAMT85"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.tamt87 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TAMT87"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.totstwh if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TOTSTWH"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.totswh59 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TOTSWH59"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.totswh60 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TOTSWH60"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.totswh68 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TOTSWH68"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.totswh75 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TOTSWH75"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.totswh85 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TOTSWH85"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.totswh87 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.TOTSWH87"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.wth if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.WTH"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.wth59 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.WTH59"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.wth60 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.WTH60"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.wth68 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.WTH68"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.wth75 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.WTH75"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.wth85 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.WTH85"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	set X = iraben1.wth87 if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"IRABEN1.WTH87"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("IRABEN1","MSG",979,"IRABEN1."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordIRABEN1 iraben1

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("ACN").exists() set vux("ACN") = vx("ACN")
	if vx("RPASEQ").exists() set vux("RPASEQ") = vx("RPASEQ")
	if vx("BENSEQ").exists() set vux("BENSEQ") = vx("BENSEQ")
	if vx("CYR").exists() set vux("CYR") = vx("CYR")
	do vkey(1) set voldkey = iraben1.acn_","_iraben1.rpaseq_","_iraben1.benseq_","_iraben1.cyr // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = iraben1.acn_","_iraben1.rpaseq_","_iraben1.benseq_","_iraben1.cyr // Copy new keys into object
	type RecordIRABEN1 vnewrec = iraben1.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("IRABEN1",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordIRABEN1 iraben1

	if vux("ACN").exists() set iraben1.acn = vux("ACN").piece("|",i)
	if vux("RPASEQ").exists() set iraben1.rpaseq = vux("RPASEQ").piece("|",i)
	if vux("BENSEQ").exists() set iraben1.benseq = vux("BENSEQ").piece("|",i)
	if vux("CYR").exists() set iraben1.cyr = vux("CYR").piece("|",i)
	quit
