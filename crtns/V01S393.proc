V01S393(%ProcessMode,RecordPDAG fPDAG)   //PBS - LN - SID= <LNPDAG1> Payment Due Action Grid
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:58 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNPDAG1",VPGM=$T(+0),VSNAME="Payment Due Action Grid"
 set VFSN("PDAG")="zfPDAG"
 set vPSL=1
 set KEYS(1)=fPDAG.GRP
 set KEYS(2)=fPDAG.TABLE
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fPDAG),VDA1(.fPDAG),^DBSPNT()

 if '%ProcessMode do VNEW(.fPDAG),VPR(.fPDAG),VDA1(.fPDAG)
 if %ProcessMode do VLOD(.fPDAG) quit:$G(ER)  do VPR(.fPDAG),VDA1(.fPDAG)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fPDAG)
	quit


VNEW(RecordPDAG fPDAG) // Initialize arrays if %O=0
 
 do VDEF(.fPDAG)
 do VLOD(.fPDAG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordPDAG fPDAG)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordPDAG fPDAG) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordPDAG fPDAG) // Display screen prompts
 set VO="5||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,22,23,0,0,0,0,0,0,0)_"01TPayment Due Action Grid"
 set VO(2)=$C(6,10,19,1,0,0,0,0,0,0)_"01T Table Description:"
 set VO(3)=$C(7,17,12,1,0,0,0,0,0,0)_"01T Start Date:"
 set VO(4)=$C(8,19,10,0,0,0,0,0,0,0)_"01T End Date:"
 set VO(5)=$C(10,3,26,1,0,0,0,0,0,0)_"01T Link to Due Status Table:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordPDAG fPDAG)  // Display screen data
 new V
 if %ProcessMode=5 new GRP,TABLE
 if  set (GRP,TABLE)=""
 else  set GRP=$G(GRP),TABLE=$G(TABLE)
 
 //
 set VO="11|6|13|"
 set VO(6)=$C(3,22,0,2,0,0,0,0,0,0)_"01T"_" Group: "_GRP
 set VO(7)=$C(4,22,0,2,0,0,0,0,0,0)_"01T"_" Table: "_TABLE
 set VO(8)=$C(6,30,40,2,0,0,0,0,0,0)_"00T"_$E(fPDAG.TDES,1,40)
 set VO(9)=$C(7,30,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fPDAG.STDT)
 set VO(10)=$C(8,30,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fPDAG.EDDT)
 set VO(11)=$C(10,30,12,2,0,0,0,0,0,0)_"00T"_$E(fPDAG.PDST,1,12)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordPDAG fPDAG)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=4,VPT=1,VPB=10,PGM=$T(+0),DLIB="SYSDEV",DFID="PDAG"
 set OLNTB=10030
 
 set VFSN("PDAG")="zfPDAG"
 //
 // 
	
	
 set %TAB(1)=$C(5,29,40)_"01T12401|1|[PDAG]TDES|||do VP1^V01S393(.fPDAG)"
 set %TAB(2)=$C(6,29,10)_"01D12402|1|[PDAG]STDT|||do VP2^V01S393(.fPDAG)"
 set %TAB(3)=$C(7,29,10)_"00D12403|1|[PDAG]EDDT|||do VP3^V01S393(.fPDAG)"
 set %TAB(4)=$C(9,29,12)_"01T12404|1|[PDAG]PDST|[LNPDS]||do VP4^V01S393(.fPDAG)"
 do VTBL(.fPDAG)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordPDAG fPDAG) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordPDAG fPDAG) //
 set TDES=X
 quit

VP2(RecordPDAG fPDAG) //
 
 set STDT=$$^SCAJD(X) 

 // Invalid date ~p1 
 if STDT<0 set ER=1 set RM=$$^MSG(1308)    

 quit

VP3(RecordPDAG fPDAG) //
 set EDDT=X 
 if X="" quit
 set EDDT=$$^SCAJD(X) 

 // Invalid date ~p1
 if EDDT<0 set ER=1,RM=$$^MSG(1308) // Invalid date ~p1
 else  if EDDT'>STDT set ER=1 set RM=$$^MSG(891) // End date must be after start date
 
 quit
VP4(RecordPDAG fPDAG) //
 set PDST=X
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordPDAG fPDAG
 do VPR(.fPDAG)
 do VDA1(.fPDAG)
 do ^DBSPNT()
 quit

VW(RecordPDAG fPDAG)
 do VDA1(.fPDAG)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordPDAG fPDAG)
 do VDA1(.fPDAG)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordPDAG fPDAG
 do VDA1(.fPDAG)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordPDAG fPDAG
 if sn="PDAG" do vSET1(.fPDAG,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordPDAG fPDAG,di,X)
 do fPDAG.setAuditFlag(1)
 set fPDAG.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordPDAG fPDAG
 if fid="PDAG" quit $$vREAD1(.fPDAG,di)
 quit ""
vREAD1(RecordPDAG fPDAG,di)
 quit fPDAG.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
