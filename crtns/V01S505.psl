V01S505(Number %ProcessMode,RecordPAT fPAT)   // -  - SID= <PATCHK> PAT Checks
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:33 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fPAT.exists() set fPAT = Class.new("RecordPAT")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="PATCHK",VPGM=$T(+0),VSNAME="PAT Checks"
 set VFSN("PAT")="zfPAT"
 set vPSL=1
 set KEYS(1)=fPAT.SRC
 set KEYS(2)=fPAT.ACN
 set KEYS(3)=fPAT.BATCH
 set KEYS(4)=fPAT.SEQ
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fPAT),VDA1(.fPAT),^DBSPNT() quit

 set ER=0 do VSCRPRE(.fPAT) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fPAT),VPR(.fPAT),VDA1(.fPAT)
 if %ProcessMode do VLOD(.fPAT) quit:$G(ER)  do VPR(.fPAT),VDA1(.fPAT)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fPAT)
	quit


VNEW(RecordPAT fPAT) // Initialize arrays if %O=0
 
 do VDEF(.fPAT)
 do VLOD(.fPAT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordPAT fPAT)
 quit:fPAT.SRC.isNull() ! fPAT.ACN.isNull() ! fPAT.BATCH.isNull() ! fPAT.SEQ.isNull() 
 quit:%ProcessMode  set ER=0 if (fPAT.SRC="")!(fPAT.ACN="")!(fPAT.BATCH="")!(fPAT.SEQ="") set ER=1,RM=$$^MSG(1767,"SRC,ACN,BATCH,SEQ") Q
 if Db.isDefined("PAT","PAT.SRC=:fPAT.SRC AND PAT.ACN=:fPAT.ACN AND PAT.BATCH=:fPAT.BATCH AND PAT.SEQ=:fPAT.SEQ") S ER=1,RM=$$^MSG(2327) Q
 do fPAT.setAuditFlag(1)
 if fPAT.CNTRY="" set fPAT.CNTRY=CUVAR.CNTRY
 if fPAT.START="" set fPAT.START=+$H
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordPAT fPAT) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordPAT fPAT) // Display screen prompts
 set VO="12||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,15,42,1,0,0,0,0,0,0)_"01T Pre-authorized Transfer Check Processing "
 set VO(2)=$C(3,11,13,0,0,0,0,0,0,0)_"01T Transaction:"
 set VO(3)=$C(3,48,13,0,0,0,0,0,0,0)_"01T G/L Account:"
 set VO(4)=$C(4,17,7,0,0,0,0,0,0,0)_"01TAmount:"
 set VO(5)=$C(6,8,16,0,0,0,0,0,0,0)_"01T Account Number:"
 set VO(6)=$C(8,16,8,1,0,0,0,0,0,0)_"01T Name 1:"
 set VO(7)=$C(11,15,9,1,0,0,0,0,0,0)_"01T Address:"
 set VO(8)=$C(14,18,6,1,0,0,0,0,0,0)_"01T City:"
 set VO(9)=$C(14,52,9,1,0,0,0,0,0,0)_"01T Country:"
 set VO(10)=$C(15,8,16,0,0,0,0,0,0,0)_"01T State/Province:"
 set VO(11)=$C(15,44,17,0,0,0,0,0,0,0)_"01T ZIP/Postal Code:"
 set VO(12)=$C(17,19,5,0,0,0,0,0,0,0)_"01TMemo:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordPAT fPAT)  // Display screen data
 new V
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set v1=$G(PP(%PG))
 
 //
 set VO="27|13|13|"
 set VO(13)=$C(3,25,12,2,0,0,0,0,0,0)_"01T"_$E(fPAT.TRNCD,1,12)
 set VO(14)=$C(3,62,12,2,0,0,0,0,0,0)_"01N"_fPAT.CID
 set VO(15)=$C(4,25,12,2,0,0,0,0,0,0)_"01T"_$E(fPAT.AMOUNT,1,12)
 set VO(16)=$C(6,25,15,2,0,0,0,0,0,0)_"00N"_fPAT.CKACN
 set VO(17)=$C(6,44,0,0,0,0,0,0,0,0)_"01T"_" Transaction Seq: "_v1
 set VO(18)=$C(8,25,40,2,0,0,0,0,0,0)_"00T"_$E(fPAT.CKNAM1,1,40)
 set VO(19)=$C(9,25,40,2,0,0,0,0,0,0)_"00T"_$E(fPAT.CKNAM2,1,40)
 set VO(20)=$C(11,25,40,2,0,0,0,0,0,0)_"00T"_$E(fPAT.CKADDR1,1,40)
 set VO(21)=$C(12,25,40,2,0,0,0,0,0,0)_"00T"_$E(fPAT.CKADDR2,1,40)
 set VO(22)=$C(13,25,40,2,0,0,0,0,0,0)_"00T"_$E(fPAT.CKADDR3,1,40)
 set VO(23)=$C(14,25,28,2,0,0,0,0,0,0)_"00T"_$E(fPAT.CITY,1,40)
 set VO(24)=$C(14,62,2,2,0,0,0,0,0,0)_"00T"_$E(fPAT.CNTRY,1,2)
 set VO(25)=$C(15,25,2,2,0,0,0,0,0,0)_"00T"_$E(fPAT.STATE,1,2)
 set VO(26)=$C(15,62,9,2,0,0,0,0,0,0)_"00T"_$E(fPAT.MZIP,1,9)
 set VO(27)=$C(17,25,40,2,0,0,0,0,0,0)_"00T"_$E(fPAT.CKMEMO,1,40)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordPAT fPAT)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=14,VPT=1,VPB=17,PGM=$T(+0),DLIB="SYSDEV",DFID="PAT"
 set OLNTB=17025
 
 set VFSN("PAT")="zfPAT"
 //
 // 
	
	
 set %TAB(1)=$C(2,24,12)_"21T12401|1|[PAT]TRNCD|[TRN]"
 set %TAB(2)=$C(2,61,12)_"21N12402|1|[PAT]CID"
 set %TAB(3)=$C(3,24,12)_"21T12403|1|[PAT]AMOUNT|||||||2"
 set %TAB(4)=$C(5,24,15)_"00N12406|1|[PAT]CKACN|||do VP1^V01S505(.fPAT)"
 set %TAB(5)=$C(7,24,40)_"01T12407|1|[PAT]CKNAM1"
 set %TAB(6)=$C(8,24,40)_"00T12408|1|[PAT]CKNAM2"
 set %TAB(7)=$C(10,24,40)_"01T12409|1|[PAT]CKADDR1"
 set %TAB(8)=$C(11,24,40)_"00T12410|1|[PAT]CKADDR2"
 set %TAB(9)=$C(12,24,40)_"00T12411|1|[PAT]CKADDR3"
 set %TAB(10)=$C(13,24,28)_"01T12412|1|[PAT]CITY|||||||||40"
 set %TAB(11)=$C(13,61,2)_"01T12417|1|[PAT]CNTRY|[STBLCNTRY]||do VP2^V01S505(.fPAT)"
 set %TAB(12)=$C(14,24,2)_"00T12413|1|[PAT]STATE|[STBLCNTRY1]||do VP3^V01S505(.fPAT)"
 set %TAB(13)=$C(14,61,9)_"00T12414|1|[PAT]MZIP|||do VP4^V01S505(.fPAT)"
 set %TAB(14)=$C(16,24,40)_"00T12415|1|[PAT]CKMEMO"
 do VTBL(.fPAT)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordPAT fPAT) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordPAT fPAT) //
	type public Boolean ER
	type public String X
 	type String XCID,ZCLS,ZGRP

 	if X.get().isNull() quit

 	do CID^UACN1 if ER quit

 	set (CID,XCID)=X

 	type RecordACN acn=Db.getRecord("ACN","CID=:CID",1)
	type RecordACNADDR acnaddr=Db.getRecord("ACNADDR","CID=:CID",1)

 	do DEFAULT^DBSMACRO("PAT.CKNAM1",acn.title1)
 	do DEFAULT^DBSMACRO("PAT.CKNAM2",acn.title2)
 	do DEFAULT^DBSMACRO("PAT.CKADDR1",acnaddr.ad1)
 	do DEFAULT^DBSMACRO("PAT.CKADDR2",acnaddr.ad2)
 	do DEFAULT^DBSMACRO("PAT.CKADDR3",acnaddr.ad3)
 	do DEFAULT^DBSMACRO("PAT.CITY",acnaddr.city)
 	do DEFAULT^DBSMACRO("PAT.CNTRY",acnaddr.cntry)
 	do DEFAULT^DBSMACRO("PAT.STATE",acnaddr.state)
 	do DEFAULT^DBSMACRO("PAT.MZIP",acnaddr.mzip)

	quit

VP2(RecordPAT fPAT) //
	type public String CNTRY,X

	set CNTRY=X
 	quit
VP3(RecordPAT fPAT) //
	type public Boolean ER
 	type public String CNTRY,RM,SPROV,X
 
 	if (CNTRY="CA") set PROV=X

	type RecordSTBLCNTRY stblcntry=Db.getRecord("STBLCNTRY","CNTRY=:CNTRY",1)
 	if (stblcntry.cntry'=11) quit
 
	if X.isNull() set ER=1,RM=$$^MSG(2385)	// Required
	
	quit
VP4(RecordPAT fPAT) //
	type public String ST,ZIP

	set ST=fPAT.STATE
 	do VPO1(.fPAT)

	quit

VPO1(RecordPAT fPAT)  // user library ZIP
 ; The code previously found in this routine has been moved to the new filer
 ; processer library.  This library contains code shared by the filers and by
 ; DQ screens. ; code removed 12/9/96 Spier
 ; Zip Code Verification
 ;
 D ZIP^PROCZIP($G(CNTRY),$G(ST),$G(X))
 Q
 #ACCEPT DATE=11/05/03;pgm=screen compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordPAT fPAT
 do VPR(.fPAT)
 do VDA1(.fPAT)
 do ^DBSPNT()
 quit

VW(RecordPAT fPAT)
 do VDA1(.fPAT)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordPAT fPAT)
 do VDA1(.fPAT)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordPAT fPAT
 do VDA1(.fPAT)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordPAT fPAT
 if sn="PAT" do vSET1(.fPAT,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordPAT fPAT,di,X)
 do fPAT.setAuditFlag(1)
 set fPAT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordPAT fPAT
 if fid="PAT" quit $$vREAD1(.fPAT,di)
 quit ""
vREAD1(RecordPAT fPAT,di)
 quit fPAT.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 //
VSCRPRE(RecordPAT fPAT)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
	type public String PS,PZ
	
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 	
	// Postal Code:
	if (cuvar.ccntry="CA") set PS="Province:",PZ=$$^MSG(6009) quit
 	set PS=$$^MSG(6012)	// State 
	set PZ=$$^MSG(6015)	// Zip Code:
	quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
