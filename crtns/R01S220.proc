R01S220	// SCA167 - Account Service Fee/ Usage Credit Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA167"
	set RN="Account Service Fee/ Usage Credit Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[SRVD]CID|[ACN]:NOVAL||I X'=""ALL"" S %EXT=1 D ^UACN D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN2")="|255||[SRVD]PLTP|[STBLPLTP]:NOVAL||D EXT^DBSQRY||T|Plan Type|||||"
	set %TAB("VIN3")="|255||[SRVD]SCND|[SRVD]SCND:DISTINCT:NOVAL||D EXT^DBSQRY||T|Service Charge Next Date|||||"
	set %TAB("VIN4")="|255||[SRVD]FEECAT|[STBLFEEFC]:NOVAL||D EXT^DBSQRY||T|Service Fee Category|||||"
	set %TAB("VIN5")="|255||[SRVD]FEETYP|[SRVD]FEETYP:DISTINCT:NOVAL||D EXT^DBSQRY||T|Type Of Service Fee|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,FEEDESC,PLTPD,RID,RN,TITLE1,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA167",RN="Account Service Fee/ Usage Credit Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA167","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[SRVD]FEETYP#1#8,[SRVD]SRVCNTD#12#6,[SRVD]SRVCSTD#26#12,[SRVD]SRVDLR#48#10,[SRVD]SRVDLY#64#12,[SRVD]SRVCNTA#93#6,[SRVD]SRVADJ#109#6,[SRVD]SRVCSTA#121#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[SRVD]CID "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[SRVD]PLTP "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[SRVD]SCND "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[SRVD]FEECAT "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[SRVD]FEETYP "_VIN5,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("SRVD,SRV,SRV0") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Account Number"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Plan Type"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Service Charge Next Date"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Service Fee Category"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Type Of Service Fee"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Account Service Fee/ Usage Credit Report"
		set VBNRINFO("PGM")="R01S220"
		set VBNRINFO("RID")="SCA167"
		set VBNRINFO("TABLES")="SRVD,SRV,SRV0"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,SRVD]CID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SRVD]PLTP"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,SRVD]SCND"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,SRVD]FEECAT"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,SRVD]FEETYP"

		set VBNRINFO("DOC",1)="This report provides information about the service fees that were assessed on"
		set VBNRINFO("DOC",2)="accounts for selected service fee periods and the usage credits on accounts for"
		set VBNRINFO("DOC",3)="the selected usage credit period.  Typically, this report is run at the end of"
		set VBNRINFO("DOC",4)="each service fee period and at the end of each usage credit period following"
		set VBNRINFO("DOC",5)="the service fee and usage credit processing."
		set VBNRINFO("DOC",6)="For each account, the report lists the total fees and credits assessed; the"
		set VBNRINFO("DOC",7)="account balances used to compute the fees and credits; and detail information"
		set VBNRINFO("DOC",8)="about the fees and the credits assessed by fee category. Note that the report"
		set VBNRINFO("DOC",9)="includes fee and credit detail for category 1, category 2, and category 3 fees"
		set VBNRINFO("DOC",10)="being charged directly at the time of service only if IBS is maintaining fee"
		set VBNRINFO("DOC",11)="counters for those items.  (IBS maintains fee counters only if a maximum daily"
		set VBNRINFO("DOC",12)="amount has been specified for a fee item or if the account is subject to"
		set VBNRINFO("DOC",13)="earnings analysis.)"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"SRVD.CID,SRVD.PLTP,SRVD.SCND,SRVD.FEECAT,SRVD.FEET"
	set VSELECT=VSELECT_"YP,SRV.FEECHG,SRV.FEEANL,SRV.FEEOFF,SRV.ERNALL,SRV"
	set VSELECT=VSELECT_".ERNADJ,SRV0.FEEBAL,SRV0.AVGBAL,SRV0.AVGCOL,SRV0.A"
	set VSELECT=VSELECT_"VGRES,SRV0.LWBAL1,SRV0.LWBAL2,SRVD.SRVCNTD,SRVD.SR"
	set VSELECT=VSELECT_"VCSTD,SRVD.SRVDLR,SRVD.SRVDLY,SRVD.SRVCNTA,SRVD.SR"
	set VSELECT=VSELECT_"VADJ,SRVD.SRVCSTA"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"SRVD,SRV,SRV0",VWHERE,"SRVD.CID,SRVD.PLTP,SRVD.SCND,SRVD.FEECAT,SRVD.FEETYP","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// SRVD.CID
	set vc2=V.piece($C(9),2)			// SRVD.PLTP
	set vc3=V.piece($C(9),3)			// SRVD.SCND
	set vc4=V.piece($C(9),4)			// SRVD.FEECAT
	set vc5=V.piece($C(9),5)			// SRVD.FEETYP
	set vc6=V.piece($C(9),6)			// SRV.FEECHG
	set vc7=V.piece($C(9),7)			// SRV.FEEANL
	set vc8=V.piece($C(9),8)			// SRV.FEEOFF
	set vc9=V.piece($C(9),9)			// SRV.ERNALL
	set vc10=V.piece($C(9),10)			// SRV.ERNADJ
	set vc11=V.piece($C(9),11)			// SRV0.FEEBAL
	set vc12=V.piece($C(9),12)			// SRV0.AVGBAL
	set vc13=V.piece($C(9),13)			// SRV0.AVGCOL
	set vc14=V.piece($C(9),14)			// SRV0.AVGRES
	set vc15=V.piece($C(9),15)			// SRV0.LWBAL1
	set vc16=V.piece($C(9),16)			// SRV0.LWBAL2
	set vc17=V.piece($C(9),17)			// SRVD.SRVCNTD
	set vc18=V.piece($C(9),18)			// SRVD.SRVCSTD
	set vc19=V.piece($C(9),19)			// SRVD.SRVDLR
	set vc20=V.piece($C(9),20)			// SRVD.SRVDLY
	set vc21=V.piece($C(9),21)			// SRVD.SRVCNTA
	set vc22=V.piece($C(9),22)			// SRVD.SRVADJ
	set vc23=V.piece($C(9),23)			// SRVD.SRVCSTA
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VHDG5 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VDTL4	// Detail
	type public String %TIM,FEEDESC,IOSL,PLTPD,TITLE1,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                 "_"SERVICE FEE CATEGORY"
	do VP1 quit:VFMQ!verror.get()  set V=$E(FEEDESC,1,10)
	set VL=VL_$J("",70-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VHDG5	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,FEEDESC,IOSL,PLTPD,RID,RN,TITLE1,TYPE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="            "_"-----------------------  Direct Charges -----------------------           ------------- Accumulated Charges ------------"
	do VOM
	set VL="Fee Type    Count     Cost of Service  Date Last Rendered    Last Date Cost           System Count   Manual Adjust   Cost of Service"
	do VOM
	set VL="" do VOM
	quit

VDTL5	// Detail
	type public String %TIM,FEEDESC,IOSL,PLTPD,TITLE1,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(5)=0 do VHDG5 quit:VFMQ

	set VL=$E(vc5,1,8)
	set VL=VL_$J("",11-VL.length())_$S(+vc17=0:$J("",6),1:$J(vc17,6))
	set VL=VL_$J("",25-VL.length())_$S(+vc18=0:$J("",12),1:$J(vc18,12,2))
	set VL=VL_$J("",47-VL.length())_$J($$DAT^%ZM(vc19),10)
	set VL=VL_$J("",63-VL.length())_$S(+vc20=0:$J("",12),1:$J(vc20,12,2))
	set VL=VL_$J("",92-VL.length())_$S(+vc21=0:$J("",6),1:$J(vc21,6))
	set VL=VL_$J("",108-VL.length())_$S(+vc22=0:$J("",6),1:$J(vc22,6))
	set V=vc23,VO=V set V=$J(V,17,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",115-VL.length())_V		// [SYSDEV,SRVD]SRVCSTA
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,FEEDESC,PLTPD,RID,RN,TITLE1,TYPE,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+14,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA167)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"PLAN TYPE: "
	do VP3 quit:VFMQ!verror.get()  set V=$E(PLTPD,1,40)
	set VL=VL_$J("",16-VL.length())_V
	do VOM
	set VL="ACCOUNT NUMBER:"
	set VL=VL_$J("",16-VL.length())_$J(vc1,12)
	set VL=VL_$J("",32-VL.length())_"PRODUCT TYPE:"
	do VP4 quit:VFMQ!verror.get()  set V=$E(TYPE,1,4)
	set VL=VL_$J("",46-VL.length())_V
	set VL=VL_$J("",55-VL.length())_"TITLE: "
	set VL=VL_$J("",62-VL.length())_$E(TITLE1,1,40)
	do VOM
	set VL="" do VOM
	set VL="                      "_"-------------------- TOTAL FEES -------------------"
	do VOM
	set VL="Charge Date           Direct at Service     On Analysis   Offset Earnings          Earnings Allowance   Earn Allow Adjustment"
	do VOM
	set VL=" "_$J($$DAT^%ZM(vc3),10)
	set VL=VL_$J("",25-VL.length())_$J($FN(vc6,"P"_",",2),14)
	set VL=VL_$J("",41-VL.length())_$J($FN(vc7,"P"_",",2),14)
	set VL=VL_$J("",59-VL.length())_$J($FN(vc8,"P"_",",2),14)
	set VL=VL_$J("",87-VL.length())_$J($FN(vc9,"P"_",",2),14)
	set VL=VL_$J("",111-VL.length())_$J($FN(vc10,"P"_",",2),14)
	do VOM
	set VL="" do VOM
	set VL="---------------------------------------------------- SERVICE FEE BALANCE DATA ------------------------------------------------------"
	do VOM
	set VL="      "_"Fee Computation       Average Ledger    Average Collected      Average Reserve      Low - Intra-Day      Low - End of Day"
	do VOM
	set VL="       "_$J($FN(vc11,"P"_",",2),14)
	set VL=VL_$J("",28-VL.length())_$J($FN(vc12,"P"_",",2),14)
	set VL=VL_$J("",49-VL.length())_$J($FN(vc13,"P"_",",2),14)
	set VL=VL_$J("",70-VL.length())_$J($FN(vc14,"P"_",",2),14)
	set VL=VL_$J("",91-VL.length())_$J($FN(vc15,"P"_",",2),14)
	set VL=VL_$J("",113-VL.length())_$J($FN(vc16,"P"_",",2),14)
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: FEEDESC

	type public String vc4
	type public String FEEDESC

	type String FEECAT = vc4

	type RecordSTBLFEEFC feefc = Db.getRecord("STBLFEEFC", "OPT=:FEECAT", 1)

	set FEEDESC = FEECAT_" - "_feefc.desc
	quit

VP2	// Column post-processor - [SYSDEV,SRVD]SRVCSTA

	type public String vc18,vc23
	type public String V, VL

	if (vc18 '> 0) & (vc23 '> 0) set (V, VL) = ""
	else  if (+vc23 = 0) set V = ""
	quit

VP3	// Column pre-processor - Variable: PLTPD

	type public String vc2
	type public String PLTPD

	type String PLTP = vc2

	if PLTP.isNull() set PLTPD = ""
	else  do {
		type RecordSTBLPLTP stblpltp = Db.getRecord("STBLPLTP", "PLTP=:PLTP")

		set PLTPD = stblpltp.desc
	}
	quit

VP4	// Column pre-processor - Variable: TYPE

	type public String vc1
	type public String TITLE1, TYPE

	type Number CID = vc1

	if CID.isNull() set (TYPE, TITLE1) = ""
	else  do {

		type RecordDEP dep = Db.getRecord("DEP", "CID=:CID")

		set TYPE = dep.type
		set TITLE1 = dep.title1
	}
	quit
