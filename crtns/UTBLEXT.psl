UTBLEXT	// Maintain External Interface Tables
	/*
	 ORIG: 	Phil Chenard
	 DESC: 	This utility houses several function calls used for
		maintaining external interfaces.	 
	
	 ---- Comments --------------------------------------------------------
	
	 ---- Revision History ------------------------------------------------
	 
	05/08/07 - KUMARB - CR 26991
		   Modified section TRN to initialize %ProcessMode only if it
		   is not defined.
	
	01/23/07 - MBUIM - CR 25007
		   Retrofited the CR below.
		   01/11/07 - CR 23530
		   Migrated from V70 and cleaned up PSL errors.
	
	09/25/02 - SRIVASTAVAN - 49451
		   Converted to PSL
	
	*/

	do NEW
	quit
	
NEW	// New
	type public Number LV

	set LV=1
	do INIT(0)
	
	quit

UPD	// Update

	type public Number LV
	
	set LV=1
	do INIT(1)
	
	quit

INQ	// Inquiry

	type public Number LV
	
	set LV=1
	do INIT(2)
	
	quit

OVR	// User Override level

	type public String TBL
	
	type Number LV
	type String KEY,PRMT
	
	set PRMT="[UTBLEXTOVR1]CODE"
 	
	if $G(TBL)="" set PRMT=PRMT_"/TBL=[UTBLEXTOVR1]"
	
	else  set PRMT=PRMT_TBL
	
	set KEY="OVR"
	set LV=2
	do INIT(1)
	
	quit
	
SMC	// Statement Message Code

	type public String TBL

	type Number LV
	type String KEY,PRMT

 	set PRMT="[UTBLEXTSMC1]CODE"
	if $G(TBL)="" set PRMT=PRMT_"/TBL=[UTBLEXTSMC1]"
	
 	else  set PRMT=PRMT_TBL

	set KEY="SMC"
	set LV=2
	do INIT(1)

 	quit

TRN	// Tran code level

	type public String TBL
	
	type Number LV
	type String KEY,PRMT

	set PRMT="[UTBLEXTTRN1]CODE"
	if $G(TBL)="" set PRMT=PRMT_"/TBL=[UTBLEXTTRN1]"
	
	else  set PRMT=PRMT_TBL
	
	set KEY="TRN"
	set LV=2
	
	if %ProcessMode.get().isNull() set %ProcessMode=1
	do INIT(%ProcessMode)

	quit

TLR	// Teller code

	type public String PRMT,TBL
	
	type Number LV
	type String KEY

	set PRMT="[UTBLEXTTLR1]CODE"
	if $G(TBL)="" set PRMT=PRMT_"/TBL=[UTBLEXTTLR1]"
	
	else  set PRMT=PRMT_TBL
	
	set KEY="TLR"
	set LV=2
	do INIT(1)

 	quit

INIT(Number %ProcessMode)	//

	type public Number %PG,%PAGE
	type public String VFMQ
	
	type Number OLNTB

 	type RecordUTBLEXTINT fEXTINT
	type RecordUTBLEXTOVR1 fEXTINT2
	type RecordUTBLEXTSMC1 fEXTINT4
	type RecordUTBLEXTTLR1 fEXTINT6
	type RecordUTBLEXTTRN1 fEXTINT8
	
	set %PG=0
	set %PAGE=1
	do VPG(.fEXTINT,.fEXTINT2,.fEXTINT4,.fEXTINT6,.fEXTINT8)
	
        quit

VPG(RecordUTBLEXTINT fEXTINT,RecordUTBLEXTOVR1 fEXTINT2,RecordUTBLEXTSMC1 fEXTINT4,RecordUTBLEXTTLR1 fEXTINT6,RecordUTBLEXTTRN1 fEXTINT8) // Page control

	type public Number %PG,%PAGE
	type public Boolean ER
	type public String VFMQ
	
	type Boolean FINISH

	set FINISH=0

 	for  do { quit:FINISH
		if %PG=0 do VPG00 if ER set FINISH=1 quit

 		if %PG>0 do VPG01(.fEXTINT,.fEXTINT2,.fEXTINT4,.fEXTINT6,.fEXTINT8) if ER set FINISH=1 quit

		if "DFQ"[VFMQ do VER(.fEXTINT,.fEXTINT2,.fEXTINT4,.fEXTINT6,.fEXTINT8) set FINISH=1 quit

		set %PG=%PG+1
		}

	quit

VPG00   // Set up input screen

	type public Number LV
	type public String %NOPRMT,%PG,%READ,%TAB,PRMT,VFMQ
	type public Boolean ER
	
 	set %READ="@@%FN,,,[UTBLEXTINT]INTRFACE/REQ/TBL=[UTBLEXTINT]"
	if LV=1 set %READ=%READ_":NOVAL"
	if LV=2,%ProcessMode=0 set PRMT=PRMT_":NOVAL"
	if LV=2 set %READ=%READ_","_PRMT_"/REQ"
	if %ProcessMode=2 do {
		set %TAB("IO")=$$IO^SCATAB($I)
		set %READ=%READ_",IO/REQ"
		}
	set %NOPRMT="N"
	do ^UTLREAD
	if VFMQ="Q" set ER=1

	quit

VPG01(RecordUTBLEXTINT fEXTINT,RecordUTBLEXTOVR1 fEXTINT2,RecordUTBLEXTSMC1 fEXTINT4,RecordUTBLEXTTLR1 fEXTINT6,RecordUTBLEXTTRN1 fEXTINT8)	// Get input screen

	type public Number LV
	type public String CODE,INTRFACE,KEY,VFMQ
	type public IO IO
	type public Boolean ER
	
	if LV=2 do {
		// Transaction code
		if KEY="TRN" do { quit
		set fEXTINT8=Db.getRecord("UTBLEXTTRN1","INTRFACE=:INTRFACE,CODE=:CODE",1)
		if %ProcessMode=2,IO'=$I do OPEN^SCAIO if ER set VFMQ="Q" quit
		do DRV^USID(%ProcessMode,"EXTINTTRN",.fEXTINT8)
		}
		// Override table
		if KEY="OVR" do { quit
			set fEXTINT2=Db.getRecord("UTBLEXTOVR1","INTRFACE=:INTRFACE,CODE=:CODE",1)
			if %ProcessMode=2,IO'=$I do OPEN^SCAIO if ER set VFMQ="Q" quit
			do DRV^USID(%ProcessMode,"EXTINTOVR",.fEXTINT2)
			}
             	// Statement message
		if KEY="SMC" do { quit
			set fEXTINT4=Db.getRecord("UTBLEXTSMC1","INTRFACE=:INTRFACE,CODE=:CODE",1)
			if %ProcessMode=2,IO'=$I do OPEN^SCAIO if ER set VFMQ="Q" quit
			do DRV^USID(%ProcessMode,"EXTINTSMC",fEXTINT4)
			}
		// Teller information
		if KEY="TLR" do { quit
			set fEXTINT6=Db.getRecord("UTBLEXTTLR1","INTRFACE=:INTRFACE,CODE=:CODE",1)
			if %ProcessMode=2,IO'=$I do OPEN^SCAIO if ER set VFMQ="Q" quit
			do DRV^USID(%ProcessMode,"EXTINTTLR",fEXTINT6)
			}
		}
	// Interface screen
	else  do {
		set fEXTINT=Db.getRecord("UTBLEXTINT","INTRFACE=:INTRFACE",1)
		if %ProcessMode=2,IO'=$I do OPEN^SCAIO if ER set VFMQ="Q" quit
		do DRV^USID(%ProcessMode,"EXTINT",.fEXTINT)
		}

        quit

VER(RecordUTBLEXTINT fEXTINT,RecordUTBLEXTOVR1 fEXTINT2,RecordUTBLEXTSMC1 fEXTINT4,RecordUTBLEXTTLR1 fEXTINT6,RecordUTBLEXTTRN1 fEXTINT8) //

	type public String VFMQ
	
        if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit
	do FILE(.fEXTINT,.fEXTINT2,.fEXTINT4,.fEXTINT6,.fEXTINT8)
	do END

	quit

FILE(RecordUTBLEXTINT fEXTINT,RecordUTBLEXTOVR1 fEXTINT2,RecordUTBLEXTSMC1 fEXTINT4,RecordUTBLEXTTLR1 fEXTINT6,RecordUTBLEXTTRN1 fEXTINT8) // File data

	type public Number LV
	type public String KEY
	
        if LV=1 do fEXTINT.save()
	if LV=2 do {
		if KEY="OVR" do fEXTINT2.save()
		if KEY="SMC" do fEXTINT4.save()
		if KEY="TLR" do fEXTINT6.save()
		if KEY="TRN" do fEXTINT8.save()
		}

	quit

END	// Exit function with message
	
	type public String INTRFACE,RM,VFMQ
	type public Boolean ER
	
	if (%ProcessMode=2)!(%ProcessMode=4) quit
	// External interface ~p1 not modified
	if VFMQ="Q" set RM=$$^MSG(1050,$G(INTRFACE))
	// External interface ~p1 modified
	else  set RM=$$^MSG(1049,$G(INTRFACE))
	set ER="W"
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60758^2877^Balasubramonian Sankar^5541"	// Signature - LTD^TIME^USER^SIZE
