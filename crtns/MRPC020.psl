MRPC020(return,versn,tbltyp,range)	//Public;Get account/CIF block
	/*
	   ORIG: ROTELLA - 07/12/96

	   This functions returns the next block of avaiable
	   CIF/Account numbers to be allocated to a branch

	   [SCATBL5]RPCID=20

	   KEYWORDS: Client/Server, Transaction Processing

	   ARGUMENTS:
	       . return 	Range of allocated numbers /TYP=T/REQ
	        				/MECH=REFNAM:W

	       . versn 		^MRPC020 version number  /TYP=N/REQ
		 	Current version = 1  /MECH=VAL

	       . tbltyp 	Type of numbers being fetched  /TYP=N/REQ
	    		0 = CIF numbers   /MECH=VAL
	    		1 = Account Numbers
	    		2 = Application Number

	       . range 		Size of range to be returned /TYP=N/REQ
	        				/MEH=VAL

	   RETURNS:
	       . $$ 	Error message   	/TYP=T
	    		Null = No error

	   RELATED:
	       . $$^PBSMRPC - MRPC Service Class Driver

	-------Revision History------------------------------------------

	12/12/03 - CARROLLJ - CR7239
		   Added #ACCEPT prior to xecute command to correct compile
		   errors.

	02/11/03 - GRAY - 51349
		   Corrected RECNOFL,vDb2+5^MRPC020 error from occurring
		   when there are no entries in the file, UTBLNCIDT.

	04/10/02 - TELIV - 49794
                   Converted to PSL
 
	*/


	// Version number of client message is not compatible with server
	if $G(versn)'=1 quit $$ERRMSG^PBSUTL($$^MSG(2951))

	new KEY,nv,ov,v,i,pgm,errmsg

	set errmsg="" 
	set ER=0

	//  Get ACN or CIF Numbers
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	if tbltyp=1 set KEY="ACN" set pgm=cuvar.acnmrpc
	if tbltyp=0 set KEY="CIF" set pgm=cuvar.cifmrpc
	if tbltyp=2 set KEY="APP" set pgm=""

	//  Execute custom PGM and return list
	if $L(pgm) do { quit errmsg
		set pgm="S v="_pgm
		#ACCEPT DATE=12/12/03;PGM=John Carroll
		xecute pgm
		if ER set return="" set errmsg=$$ERRMSG^PBSUTL(errmsg) quit
		set return=$$V2LV^MSG(v) set errmsg=""
		}

	// Error with account number allocation table
	lock +UTBL("NCID",KEY):5 else  quit $$ERRMSG^PBSUTL($$^MSG(8418))
	
	type RecordUTBLNCIDT utblncidt=Db.getRecord("UTBLNCIDT","TYPE=:KEY",1)
	set ov=utblncidt.nnum
	set nv=ov+range
	set v=""

	for i=ov:1:nv set v=$S(v="":i,1:v_","_i)
	set utblncidt.nnum=nv+1
	do utblncidt.bypassSave()

	lock -UTBL("NCID",KEY)

	set return=$$V2LV^MSG(v)
	quit ""
 #OPTION ResultClass ON
Public String vSIG()	quit "59877^41937^Pat Kelly^2111"	// Signature - LTD^TIME^USER^SIZE
