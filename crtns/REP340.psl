REP340	// Report SCA340 Sort Routine
	/*
	ORIG:  Marty Ronky (3623) - 11/20/89

	---- Revision History ------------------------------------------------
	02/26/06 - RussellDS - CR19065
		   Add missing closing bracket in OPT2.
	
	01/12/05 - RussellDS - CR13817
		   Correct logic and call to report.
	       
	----------------------------------------------------------------------
	*/
	
	type public Number ER

	type Date JD
	type Number GLACN, PID
	type String %NOCLOSE, %NOOPEN, %READ, %TAB(), IO, OPT(), PGM, RID, RN, VFMQ

	// Unmatched DRs and CRs
	set OPT(1)=$$^MSG(4639)

	// Unbalanced DRs and CRs within screen
	set OPT(2)=$$^MSG(4638)

	set %TAB("JD")=".LPDATE1/TBL=[TTXTJD]TPD"
	set JD=%SystemDate
	set %TAB("GLACN")=".ACN5/TBL=[GLAD]"
	set %TAB("OPT")=".OPT1/TBL=OPT("
	set %TAB("IO")=$$IO^SCATAB($I)

	set %READ="@@%FN,,,JD/REQ,GLACN/REQ,OPT/REQ,IO/REQ"

	do ^UTLREAD 

	if VFMQ="Q" quit
	
	if IO'=$I do OPEN^SCAIO quit:ER

	do Db.fastDelete("REP340","JOB=:%ProcessID")
	do Db.fastDelete("TMPRPT5","PID=:%ProcessID")
	
	if OPT = 1 do OPT1(JD, GLACN)
	if OPT = 2 do OPT2(JD, GLACN)

	// Unmatched DRs and CRs
	if OPT=1 set RN=$$^MSG(4639)

	// Unbalanced DRs and CRs within screen
	else  set RN=$$^MSG(4638)
	
	set PID = %ProcessID		// Needed by report
	set RID="SCA340" do ^URID
	// Invalid report linkage <<RID>>
	if ER do { quit
		type String ET = "INVLDRPT"
		do ^UTLERR
	}
	
	do V0^@PGM
	
	do Db.fastDelete("REP340","JOB=:%ProcessID")
	do Db.fastDelete("TMPRPT5","PID=:%ProcessID")
	
	quit


OPT1(Date JD, Number GLACN)	// Match Debits and credits one to one

	/*
	For each debit for GLACN, there should be a matching
	credit for GLACN.  Report exceptions.
	*/

	type Number ITCN,SQ,TSEQ
	type String CRCD,ITC,TAMT,UID,X

	type DbSet ds=Db.selectDbSet("DMJ","TJD=:JD AND CID=:GLACN","TSEQ")

	while ds.next() do {
		type RecordDMJ dmj=ds.getRecord("DMJ")
		set ITC=(dmj.itc).extract()
		set ITCN='ITC
		set TAMT=+(dmj.tamt)
		set TSEQ=dmj.tseq
		set SQ=dmj.trc
		set CRCD=dmj.crcd
		if CRCD="" set CRCD=%SystemCurrency

		set UID=dmj.uid

		type ResultSet rs= Db.select("KEY5","TMPRPT5","PID=:%ProcessID AND KEY1=:CRCD AND KEY2=:UID AND KEY3=:ITCN AND KEY4=:TAMT","KEY5 ASC")
		if rs.next() do {
			set X=rs.getCol("KEY5")
			do Db.delete("TMPRPT5","PID=:%ProcessID AND KEY1=:CRCD AND KEY2=:UID AND KEY3=:ITCN AND KEY4=:TAMT AND KEY5=:X")
		}
		else  do {
			type RecordTMPRPT5 fTMPRPT5=Db.getRecord("TMPRPT5","PID=:%ProcessID,KEY1=:CRCD,KEY2=:UID,KEY3=:ITC,KEY4=:TAMT,KEY5=:TSEQ",1)
			set fTMPRPT5.data=SQ_"|"_dmj.brcd_"|"_UID
			do fTMPRPT5.save()
		}
	}

	// File into REP340

	type DbSet ds2=Db.selectDbSet("TMPRPT5","PID=:%ProcessID")
        while ds2.next() do {
        	
        	type String BRCD, SUID
        	
                type RecordTMPRPT5 fTMPRPT5=ds2.getRecord("TMPRPT5")
		set CRCD=fTMPRPT5.key1
		set X=fTMPRPT5.data
		set SQ=X.piece("|",1)
		set BRCD=X.piece("|",2)
		set SUID=X.piece("|",3)

		type RecordREP340 rep340 = Db.getRecord("REP340","JOB=:%ProcessID,CRCD=:CRCD,TJD=:JD,BRCD=:BRCD,UID=:SUID,TSEQ=:SQ",1)
		set rep340.rcrcd = CRCD
		do rep340.save()
	}
	
	quit


OPT2(Date JD, Number GLACN)	// DRs, CRs balance on screen

	/*
	Collate through the TTX file, skipping batches,
	to find screens of transactions where the total
	debits of GLACN '= total credits of GLACN.

	Exclude all MCR, MDR transactions, per Gareth 02/28/90
	*/
	
	type Number SAVSEQ, SEQ, TOT()
	type String BRCD, CRCD, INFO(), UID
	
	set (TOT(0), TOT(1)) = 0
	
	type ResultSet rs=Db.select("BRCD,UID", "TTXUID", "TJD=:JD AND TIME IS NULL")	// Skip batches
	while rs.next() do {
		
		set BRCD = rs.getCol("BRCD")
		set UID = rs.getCol("UID")
		
		type DbSet ds = Db.selectDbSet("TTX", "TJD=:JD AND BRCD=:BRCD AND UID=:UID AND CID=:GLACN AND ETC <> 'MDR' AND ETC <> 'MCR'", "TSEQ ASC")
		
		set SAVSEQ = 0
		while ds.next() do {
			
			type RecordTTX ttx = ds.getRecord("TTX")
			
			set SEQ = ttx.tseq
			
			if ((SEQ \ 1000) '= (SAVSEQ \ 1000)) do {	// New screen
			
				if (TOT(0) - TOT(1) '= 0) do {
				
					type Number XSEQ = ""
					
					for  set XSEQ = INFO(XSEQ).order() quit:XSEQ.isNull()  do {
						
						set CRCD = INFO(XSEQ)
				
						type RecordREP340 rep340 = Db.getRecord("REP340","JOB=:%ProcessID,CRCD=:CRCD,TJD=:JD,BRCD=:BRCD,UID=:UID,TSEQ=:XSEQ",1)
						set rep340.rcrcd = CRCD
						do rep340.save()
					}
				}
				
				// Re-init for new screen
				set (TOT(0), TOT(1)) = 0
				kill INFO
				set SAVSEQ = SEQ
			}
			
			set TOT(ttx.itc.extract(1)) = TOT(ttx.itc.extract(1)) + ttx.tamt
			set CRCD = ttx.crcd
			if CRCD.isNull() set CRCD = %SystemCurrency
			
			set INFO(ttx.tseq) = CRCD
		}
	}
		
	// Deal with last one
	if (TOT(0) - TOT(1) '= 0) do {
				
		type Number XSEQ = ""
				
		for  set XSEQ = INFO(XSEQ).order() quit:XSEQ.isNull()  do {
						
			set CRCD = INFO(XSEQ)
				
			type RecordREP340 rep340 = Db.getRecord("REP340","JOB=:%ProcessID,CRCD=:CRCD,TJD=:JD,BRCD=:BRCD,UID=:UID,TSEQ=:XSEQ",1)
			set rep340.rcrcd = CRCD
			do rep340.save()
		}
	}

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60322^63143^Dan Russell^4778"	// Signature - LTD^TIME^USER^SIZE
