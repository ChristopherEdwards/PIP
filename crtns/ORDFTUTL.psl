public ORDFTUTL
	/*
	 ORIG: KELLYP - 2/01/2006
	 DESC: Oracle Defaulting Utilities

	---- Comments --------------------------------------------------------

	This utility may be used to synchronize the ISNULL and DEFAULT 
	properties of Oracle DB schema with the corresponding DataQWIK schema.
	For example, if a column was modified and DBTBL1D.NULLIND was reset 
	from 1 to 0, indicating that a null value for a column will be handled 
	differently than a value of zero, the Oracle DB schema needs to be 
	modified to default a value of null and to not require a value for that 
	column.  Similarly, if NULLIND was reset from 0 to 1, the Oracle DB 
	schema needs to be modified to require a value and to default a value.
	
	EXAMPLE:
		D ^ORDFTUTL

	---- Revision History ------------------------------------------------

	02/23/06 - KELLYP - CR 19542
		Modified UPDSCHEMA section to force logicals to be required
		and to have a default of zero.  Also modified UPDSCHEMA to
		use a new EXE section so that all SQL messages for a FID/DI
		are processed at the end instead of as they're constructed.
		Also modified UPDSCHEMA section to reset all NULL values in
		the database to the appropriate default value if a default
		value is being supplied.

	02/01/06 - KELLYP - CR 19117
		Initial revision.
		
	----------------------------------------------------------------------
	*/

	write #,"Preparing to synchronize...",!

	// Check to ensure that there is an Oracle back-end DB	
	if $$SCAU^%TRNLNM("DB")'="ORACLE" write !,"No Oracle DB!",!! quit
	
	// Retrieve all DBTBL1 records
	type DbSet dsfid=Db.selectDbSet("DBTBL1","%LIBS='SYSDEV'")
	while dsfid.next() do {
		
		type RecordDBTBL1 dbtbl1=dsfid.getRecord("DBTBL1")
		
		// Rebuild data item control files for this table
		do BLDINDX^DBSDF9(dbtbl1.fid)
		
		// Rebuild DBMAP for this table
		do FILE^DBMAP(dbtbl1.fid,"ORACLE")
		
		// Table stored on GTM side, not in Oracle, no need to continue
		if '$$rdb^UCDBRT(dbtbl1.fid) quit
	
		// Get all columns for this table
		type DbSet dsdi=Db.selectDbSet("DBTBL1D","%LIBS='SYSDEV' AND FID=:dbtbl1.fid")
		while dsdi.next() do {
			type RecordDBTBL1D dbtbl1d=dsdi.getRecord("DBTBL1D")
			do UPDSCHEMA(.dbtbl1d)
			}
		}

	write !,"Synchronization complete!",!!

	quit

	
UPDSCHEMA(RecordDBTBL1D dbtbl1d)

	type Number I
	type String DFT,DI,FID,SQLMSG()

	// Only proceed for non-literal/non-computed columns
	if dbtbl1d.di.isLiteral() quit
	if 'dbtbl1d.cmp.isNull() quit

	set FID=dbtbl1d.fid
	set DI=dbtbl1d.di

	// Translate DQ FID and DI names to Oracle FID and DI names
	type RecordDBMAP dbmap=Db.getRecord("DBMAP","DB='ORACLE',TBL=:FID,COL=:DI",1)
	if 'dbmap.getMode() quit	// No DBMAP record, do not proceed
	set FID=dbmap.rtbl
	set DI=dbmap.rcol

	if DI.isNull() quit	// Masterfield reference (pseudo-computed)

	// Change the NULL property (e.g., Required vs. Non-Required)
	set SQLMSG(1)="ALTER TABLE "_FID_" MODIFY "_DI
	// Column is required (may not be null)
	if (dbtbl1d.nullind)!(dbtbl1d.req)!(dbtbl1d.typ="L") set SQLMSG(1)=SQLMSG(1)_" NOT NULL"
	// Otherwise, column is not required (may be null)
	else  set SQLMSG(1)=SQLMSG(1)_" NULL"

	// Only modify Oracle defaults for Currency, Numeric, or Logical type columns
	if ("$-N-L"[dbtbl1d.typ) do {

		// Change the default value for the column
		set SQLMSG(2)="ALTER TABLE "_FID_" MODIFY "_DI_" DEFAULT "

		// Default value defined, use that
		if 'dbtbl1d.dft.isNull() set DFT=dbtbl1d.dft
		// No default value defined, use zero if NULLIND=1
		else  if (dbtbl1d.nullind)!(dbtbl1d.typ="L") set DFT="0"
		// No default value and NULLIND is not enabled, use NULL
		else  set DFT="NULL"

		// Default value for logical fields defined as yes/no, change accordingly
		if dbtbl1d.typ="L",DFT="Y" set DFT=1
		if dbtbl1d.typ="L",DFT="N" set DFT=0

		// Default non-numeric (e.g., could be an extrinsic or
		// column reference) so we shouldn't proceed further.
		if 'DFT.isNumber() kill SQLMSG(2) quit

		set SQLMSG(2)=SQLMSG(2)_DFT
		
		/*
		 At this point we know that the default value will be changing to something
		 other than null, so the table should be updated to replace NULL values with
		 the appropriate default values.  This needs to happen before the other two
		 statements get processed so a subscript of "0" is used.
		*/
		if DFT'="NULL" set SQLMSG(0)="UPDATE "_FID_" SET "_DI_"="_DFT_" WHERE "_DI_" IS NULL"
		}

	do EXE(.SQLMSG())

	quit
	
EXE(String SQLMSG())

	type Number I = ""
	type String RM,X

	for  set I=SQLMSG(I).order() quit:I.isNull()  do {
		write SQLMSG(I),!
		set X=$$EXECUTE^%DBAPI(,SQLMSG(I),,,.RM)
		set X=$$COMMIT^%DBAPI(,.RM)
		}
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60319^66839^Pat Kelly^4479"	// Signature - LTD^TIME^USER^SIZE
