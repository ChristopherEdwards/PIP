R01S339	// SCA350 - Loan Asset Classification Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA350"
	set RN="Loan Asset Classification Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|255||[LN]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""L"""""":NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN3")="|255||[LN]TYPE|[PRODDFTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"

	set %READ="IO/REQ,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,C(),CONAM,I,RID,RN,TGRP,TTYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA350",RN="Loan Asset Classification Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA350","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LN]CID#1#12,[LN]BALCMP#17#12,[LN]ACB#32#12,[LN]ACAM1#49#12,[LN]ACAM2#65#12,[LN]ACAM3#81#12,[LN]ACAM4#97#12,[LN]ACAM5#113#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[LN]CLS=""L""",SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]GRP "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN3,SEQ=SEQ+1
		set DQQRY(SEQ)="([LN]PCIDSTAT=0)!([LN]PCIDSTAT="""")",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:7 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LN.CLS,LN.GRP,LN.TYPE,LN.CID,LN.BALCMP,LN.ACB,LN.A"
	set VSELECT=VSELECT_"CAM1,LN.ACAM2,LN.ACAM3,LN.ACAM4,LN.ACAM5"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LN",VWHERE,"LN.CLS,LN.GRP,LN.TYPE,LN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece($C(9),1)			// LN.CLS
	set vc2=V.piece($C(9),2)			// LN.GRP
	set vc3=V.piece($C(9),3)			// LN.TYPE
	set vc4=V.piece($C(9),4)			// LN.CID
	set vc5=V.piece($C(9),5)			// LN.BALCMP
	set vc6=V.piece($C(9),6)			// LN.ACB
	set vc7=V.piece($C(9),7)			// LN.ACAM1
	set vc8=V.piece($C(9),8)			// LN.ACAM2
	set vc9=V.piece($C(9),9)			// LN.ACAM3
	set vc10=V.piece($C(9),10)			// LN.ACAM4
	set vc11=V.piece($C(9),11)			// LN.ACAM5
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public String C()
	type public Number I

	for I=1:1:5 do {
		type ResultSet rs=Db.select("DESCR","UTBLACCD","AC=:I")
		if rs.isEmpty() set C(I)="" quit
		while rs.next() do {
			set C(I)=rs.getCol(1)
			set C(I)=$J(C(I),12)
			}
		}
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc7,vc8,vc9,vc10,vc11,vc6,vc5
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc7			// @TOT([LN]ACAM1)
	set VT(4,2,1)=VT(4,2,1)+vc8			// @TOT([LN]ACAM2)
	set VT(4,3,1)=VT(4,3,1)+vc9			// @TOT([LN]ACAM3)
	set VT(4,4,1)=VT(4,4,1)+vc10			// @TOT([LN]ACAM4)
	set VT(4,5,1)=VT(4,5,1)+vc11			// @TOT([LN]ACAM5)
	set VT(4,6,1)=VT(4,6,1)+vc6			// @TOT([LN]ACB)
	set VT(4,7,1)=VT(4,7,1)+vc5			// @TOT([LN]BALCMP)
	quit

VSUM3	// Summary
	type public String %TIM,C(),I,IOSL,TGRP,TTYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="GROUP "
	do VP1 quit:VFMQ!verror.get()  set V=$E(TGRP,1,3)
	set VL=VL_$J("",6-VL.length())_V
	set VL=VL_$J("",9-VL.length())_":"
	set V=VT(3,7,1)					// @TOT([LN]BALCMP,)
	set VL=VL_$J("",14-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,6,1)					// @TOT([LN]ACB,)
	set VL=VL_$J("",29-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,1,1)					// @TOT([LN]ACAM1,)
	set VL=VL_$J("",46-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,2,1)					// @TOT([LN]ACAM2,)
	set VL=VL_$J("",62-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,3,1)					// @TOT([LN]ACAM3,)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,4,1)					// @TOT([LN]ACAM4,)
	set VL=VL_$J("",94-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,5,1)					// @TOT([LN]ACAM5,)
	set VL=VL_$J("",110-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,C(),I,IOSL,TGRP,TTYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc4,12)
	set VL=VL_$J("",16-VL.length())_$J($FN(vc5,",",2),12)
	set VL=VL_$J("",31-VL.length())_$J($FN(vc6,",",2),12)
	set VL=VL_$J("",48-VL.length())_$J($FN(vc7,",",2),12)
	set VL=VL_$J("",64-VL.length())_$J($FN(vc8,",",2),12)
	set VL=VL_$J("",80-VL.length())_$J($FN(vc9,",",2),12)
	set VL=VL_$J("",96-VL.length())_$J($FN(vc10,",",2),12)
	set VL=VL_$J("",112-VL.length())_$J($FN(vc11,",",2),12)
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,C(),I,IOSL,TGRP,TTYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="TYPE "
	do VP2 quit:VFMQ!verror.get()  set V=$J(TTYPE,4)
	set VL=VL_$J("",5-VL.length())_V
	set VL=VL_$J("",9-VL.length())_":"
	set V=VT(4,7,1)					// @TOT([LN]BALCMP,)
	set VL=VL_$J("",14-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,6,1)					// @TOT([LN]ACB,)
	set VL=VL_$J("",29-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,1,1)					// @TOT([LN]ACAM1,)
	set VL=VL_$J("",46-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,2,1)					// @TOT([LN]ACAM2,)
	set VL=VL_$J("",62-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,3,1)					// @TOT([LN]ACAM3,)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,4,1)					// @TOT([LN]ACAM4,)
	set VL=VL_$J("",94-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,5,1)					// @TOT([LN]ACAM5,)
	set VL=VL_$J("",110-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,C(),CONAM,I,RID,RN,TGRP,TTYPE,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Group: "_vc2_"  Type: "_vc3
	do VOM
	set VL="" do VOM
	set VL="                   "_"Principal     Balance To"
	do VOM
	set VL="      "_"Account        Balance      Allocate"
	set VL=VL_$J("",48-VL.length())_$E(C(1),1,12)
	set VL=VL_$J("",64-VL.length())_$E(C(2),1,12)
	set VL=VL_$J("",80-VL.length())_$E(C(3),1,12)
	set VL=VL_$J("",96-VL.length())_$E(C(4),1,12)
	set VL=VL_$J("",112-VL.length())_$E(C(5),1,12)
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,C(),TGRP,TTYPE,VPN,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="REPORT TOT: "
	set V=0						// @TOT([LN]BALCMP,0)
	for I=0:1:4 set V=V+VT(I,7,1)
	set VL=VL_$J("",14-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LN]ACB,0)
	for I=0:1:4 set V=V+VT(I,6,1)
	set VL=VL_$J("",29-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LN]ACAM1,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	set VL=VL_$J("",46-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LN]ACAM2,0)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VL=VL_$J("",62-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LN]ACAM3,0)
	for I=0:1:4 set V=V+VT(I,3,1)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LN]ACAM4,0)
	for I=0:1:4 set V=V+VT(I,4,1)
	set VL=VL_$J("",94-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LN]ACAM5,0)
	for I=0:1:4 set V=V+VT(I,5,1)
	set VL=VL_$J("",110-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: TGRP

	type public String TGRP,vovc2

	// Reset Group to the value saved in the report buffer, otherwise it
	// will be reset to the newly fetched value

	set TGRP=vovc2
	quit

VP2	// Column pre-processor - Variable: TTYPE

	type public Number TTYPE,vovc3

	// Reset Type to the value saved in the report buffer, otherwise it
        // will be reset to the newly fetched value

	set TTYPE=vovc3
 
	quit
