R01S152	// SCA085 - IRS M1099-INT Bonds Redeemed Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:52 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String NOGO
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date DATE
	type Number INT
	type String VIN4="ALL"
	type String VIN6="ALL"

	set RID="SCA085"
	set RN="IRS M1099-INT Bonds Redeemed Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DATE")="|10|||||||D|From Date|||||"
	set %TAB("INT")="|6||||||S INT=0|$|Interest Paid Exceeds||||2|"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN4")="|255||[M1099]TYPE|[STBLM1099]:NOVAL||D EXT^DBSQRY||T|Transaction Type|||||"
	set %TAB("VIN6")="|255||[M1099]CC|[UTBLCCNTR]:NOVAL||D EXT^DBSQRY||T|Cost Center|||||"

	set %READ="IO/REQ,INT#0,DATE#1,VIN4#0,VIN6#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String NOGO
	type public Date DATE
	type public Number INT
	type public String VIN4,VIN6
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,AD(),CONAM,RDATE,RID,RN,SKIP,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,vovc1,vovc2,vovc3,vp2,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA085",RN="IRS M1099-INT Bonds Redeemed Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA085","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[M1099]SEQ#50#3,[M1099]ODAT#54#10,[M1099]UPDT#65#10,[M1099]ACN#76#12,[M1099]TYPE#91#2,[M1099]DESC#95#18,[M1099]INT#115#8,[M1099]INTWH#125#8"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[M1099]TD'<<<DATE>>",SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[M1099]TYPE "_VIN4,SEQ=SEQ+1
		set DQQRY(SEQ)="[M1099]FORMTYP=1",SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[M1099]CC "_VIN6,SEQ=SEQ+1
		set DQQRY(SEQ)="[M1099]INT><<INT>>",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("M1099") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vp2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"M1099.FORMTYP,M1099.TAXID,M1099.SEQ,M1099.INT,M109"
	set VSELECT=VSELECT_"9.INTWH,M1099.ODAT,M1099.UPDT,M1099.ACN,M1099.TYPE"
	set VSELECT=VSELECT_",M1099.DESC,M1099.NAM,M1099.AD1,M1099.AD2,M1099.AD"
	set VSELECT=VSELECT_"3,M1099.CITY,M1099.STATE,M1099.MZIP"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"M1099",VWHERE,"M1099.FORMTYP,M1099.TAXID,M1099.SEQ","","DQMODE=1/PROTECTION=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=rwrs.getRowProt()		// Data item protection
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vp2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17
	set vc1=V.piece($C(9),1)			// M1099.FORMTYP
	set vc2=V.piece($C(9),2)			// M1099.TAXID
	set vp2=VI.extract(2)				// Protection indicator
	set vc3=V.piece($C(9),3)			// M1099.SEQ
	set vc4=V.piece($C(9),4)			// M1099.INT
	set vc5=V.piece($C(9),5)			// M1099.INTWH
	set vc6=V.piece($C(9),6)			// M1099.ODAT
	set vc7=V.piece($C(9),7)			// M1099.UPDT
	set vc8=V.piece($C(9),8)			// M1099.ACN
	set vc9=V.piece($C(9),9)			// M1099.TYPE
	set vc10=V.piece($C(9),10)			// M1099.DESC
	set vc11=V.piece($C(9),11)			// M1099.NAM
	set vc12=V.piece($C(9),12)			// M1099.AD1
	set vc13=V.piece($C(9),13)			// M1099.AD2
	set vc14=V.piece($C(9),14)			// M1099.AD3
	set vc15=V.piece($C(9),15)			// M1099.CITY
	set vc16=V.piece($C(9),16)			// M1099.STATE
	set vc17=V.piece($C(9),17)			// M1099.MZIP
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type public Boolean NOGO
	type public String AD()
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=NOGO
	quit

VPRNT	// PRINT pre-processor

	type public Boolean SKIP
	type public String vc2,vovc2

	// if old TAXID is not equal to current TAXID
	if vovc2'=vc2 set SKIP=0 quit
	set SKIP=1
	quit

VRPOST	// Report post-processor

	// I18N=OFF
	type public Boolean NOGO,VFMQ
	type public Number vcrt

	type Number PN
	type String PGM,RID,VRWOPT()

	// If called by @REP085A, quit
	if NOGO.exists() quit

	/*
	The following line is needed so that SCA085 will be fully 
	displayed prior to the other reports.
	*/
	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)

	set VRWOPT("NOCLOSE")=1,VRWOPT("NOOPEN")=1

	set RID="SCA139" do ^URID if PGM.length() do V0^@PGM
	set RID="SCA140" do ^URID if PGM.length() do V0^@PGM
	set RID="SCA149" do ^URID if PGM.length() do V0^@PGM
	set RID="SCA156" do ^URID if PGM.length() do V0^@PGM

	// I18N=ON
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	do VPRNT quit:VFMQ				// Print pre-processor
	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc4,vc5
	type Public String VSTATS

	set VT(3)=VT(3)+1
	set VT(3,1,1)=VT(3,1,1)+vc4			// @TOT([M1099]INT)
	set VT(3,2,1)=VT(3,2,1)+vc5			// @TOT([M1099]INTWH)
	quit

VDTL2	// Detail
	type public String %TIM,AD(),IOSL,NOGO,RDATE,SKIP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vp2,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set V=vc2,VO=V set V=$S(vp2=3:"***********",1:$E(V,1,11)) do VP1 quit:VFMQ!verror.get()  set VL=V
	set V=vc11,VO=V set V=$E(V,1,34) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",13-VL.length())_V		// [SYSDEV,M1099]NAM
	if 'VL.translate(" ").isNull() do VOM
	set V=$E(AD(1),1,34) do VP3 quit:VFMQ!verror.get()  set VL="             "_V
	if 'VL.translate(" ").isNull() do VOM
	set V=$E(AD(2),1,34) do VP4 quit:VFMQ!verror.get()  set VL="             "_V
	if 'VL.translate(" ").isNull() do VOM
	set V=$E(AD(3),1,34) do VP5 quit:VFMQ!verror.get()  set VL="             "_V
	if 'VL.translate(" ").isNull() do VOM
	set V=$E(AD(4),1,34) do VP6 quit:VFMQ!verror.get()  set VL="             "_V
	do VOM
	quit

VDTL3	// Detail
	type public String %TIM,AD(),IOSL,NOGO,RDATE,SKIP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vp2,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                                                 "_$J(vc3,3)
	set VL=VL_$J("",53-VL.length())_$J($$DAT^%ZM(vc6),10)
	set VL=VL_$J("",64-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",75-VL.length())_$J(vc8,12)
	set VL=VL_$J("",90-VL.length())_$E(vc9,1,2)
	set VL=VL_$J("",94-VL.length())_$E(vc10,1,18)
	set VL=VL_$J("",114-VL.length())_$J($FN(vc4,",",2),8)
	set VL=VL_$J("",124-VL.length())_$J($FN(vc5,",",2),8)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AD(),CONAM,NOGO,RDATE,RID,RN,SKIP,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vp2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA085)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Transactions From Date:"
	do VP7 quit:VFMQ!verror.get()  set V=$E(RDATE,1,10)
	set VL=VL_$J("",25-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="     "_"Tax ID                                          Orig       Date Last       Related Tran                         Trans    Amount"
	do VOM
	set VL="     "_"Number  Name/Address                        Seq Date       Activity       Customer Type  Description           Ammount Withheld"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,AD(),NOGO,RDATE,SKIP,vc2,vcrt,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                 "_"Report Totals:"
	set V=0						// @TOT([M1099]INT,0)
	for I=0:1:3 set V=V+VT(I,1,1)
	set VL=VL_$J("",110-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([M1099]INTWH,0)
	for I=0:1:3 set V=V+VT(I,2,1)
	set VL=VL_$J("",122-VL.length())_$J($FN(V,",",2),10)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,M1099]TAXID

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP2	// Column post-processor - [SYSDEV,M1099]NAM

	type public String vc12,vc13,vc14,vc15,vc16,vc17
	type public Boolean SKIP
	type public String AD(),V

	type Number I

	if SKIP set V="" quit

	for I=1:1:4 set AD(I)=""

	set I=1
	if 'vc12.isNull() set AD(I)=vc12,I=I+1
	if 'vc13.isNull() set AD(I)=vc13,I=I+1
	if 'vc14.isNull() set AD(I)=vc14,I=I+1
	set AD(I)=vc15_", "_vc16_"  "_vc17

	quit

VP3	// Column post-processor - Variable: AD(1)

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP4	// Column post-processor - Variable: AD(2)

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP5	// Column post-processor - Variable: AD(3)

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP6	// Column post-processor - Variable: AD(4)

	type public Boolean SKIP
	type public String V

	if SKIP set V=""
	quit

VP7	// Column pre-processor - Variable: RDATE

	type public Date DATE
	type public String %MSKD,RDATE

	set RDATE=DATE.toString(%MSKD)
	quit
