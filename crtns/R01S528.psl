R01S528	// SCA608A - Investment Sweep Transaction Export File
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:00 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="SCA608A"
	set RN="Investment Sweep Transaction Export File"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DAYENDSWPF]TJD|[DAYENDSWPF]TJD:DISTINCT:NOVAL||D EXT^DBSQRY||T|System Processing Date|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,CSAMT1,CSAMT2,CSAMT3,CSAMT4,CSCNT1,CSCNT2,CSCNT3,CSCNT4,PSAMT1,PSAMT2,PSAMT3,PSAMT4,PSAMTT,PSCNT1,PSCNT2,PSCNT3,PSCNT4,PSCNTT,RID,RN,SAMT1,SAMT2,SAMT3,SAMT4,SCNT1,SCNT2,SCNT3,SCNT4,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA608A",RN="Investment Sweep Transaction Export File"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA608A","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DAYENDSWPF]TJD "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DAYENDSWPF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:7 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DAYENDSWPF.TJD,DAYENDSWPF.CRCD,DAYENDSWPF.TYPE,DAY"
	set VSELECT=VSELECT_"ENDSWPF.CC,DAYENDSWPF.SWTYPE,DAYENDSWPF.SEQ,DAYEND"
	set VSELECT=VSELECT_"SWPF.SDESC,DAYENDSWPF.ACN,DAYENDSWPF.CID,DAYENDSWP"
	set VSELECT=VSELECT_"F.TAMT"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DAYENDSWPF",VWHERE,"DAYENDSWPF.TJD,DAYENDSWPF.CRCD,DAYENDSWPF.TYPE,DAYENDSWPF.CC,DAYENDSWPF.SWTYPE,DAYENDSWPF.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10
	set vc1=V.piece($C(9),1)			// DAYENDSWPF.TJD
	set vc2=V.piece($C(9),2)			// DAYENDSWPF.CRCD
	set vc3=V.piece($C(9),3)			// DAYENDSWPF.TYPE
	set vc4=V.piece($C(9),4)			// DAYENDSWPF.CC
	set vc5=V.piece($C(9),5)			// DAYENDSWPF.SWTYPE
	set vc6=V.piece($C(9),6)			// DAYENDSWPF.SEQ
	set vc7=V.piece($C(9),7)			// DAYENDSWPF.SDESC
	set vc8=V.piece($C(9),8)			// DAYENDSWPF.ACN
	set vc9=V.piece($C(9),9)			// DAYENDSWPF.CID
	set vc10=V.piece($C(9),10)			// DAYENDSWPF.TAMT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public String CSAMT1,CSAMT2,CSAMT3,CSAMT4,CSCNT1
 type public String CSCNT2,CSCNT3,CSCNT4,PSAMT1,PSAMT2
 type public String PSAMT3,PSAMT4,PSAMTT,PSCNT1,PSCNT2
 type public String PSCNT3,PSCNT4,PSCNTT,SAMT1,SAMT2
 type public String SAMT3,SAMT4,SCNT1,SCNT2,SCNT3,SCNT4

 set (SAMT1,SCNT1,PSAMT1,PSCNT1,CSAMT1,CSCNT1)=0
 set (SAMT2,SCNT2,PSAMT2,PSCNT2,CSAMT2,CSCNT2)=0
 set (SAMT3,SCNT3,PSAMT3,PSCNT3,CSAMT3,CSCNT3)=0
 set (SAMT4,SCNT4,PSAMT4,PSCNT4,CSAMT4,CSCNT4)=0
 set (PSAMTT,PSCNTT)=0

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0,vs(7)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1,vskp(7)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(7).get() do VDTL7 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(7)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6,vb7
	set (vb1,vb2,vb3,vb4,vb5,vb6,vb7)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,vb7=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,vb7=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,vb7=1
	if vb5!(+vovc4'=+vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,vb7=1
	if vb6!(vovc5'=vc5) set vs(7)=0,vh(7)=0,VD(6)=0,vb7=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(7) set vs(7)=1 do stat^DBSRWUTL(7)
	if 'vs(6) set vs(6)=1 do VSUM6 quit:VFMQ  do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(7)=VT(7)+1
	quit

VSUM4	// Summary
	type public String CSAMT1,CSAMT2,CSAMT3,CSAMT4,CSCNT1,CSCNT2,CSCNT3,CSCNT4,I,IOSL,PSAMT1,PSAMT2,PSAMT3,PSAMT4,PSAMTT,PSCNT1,PSCNT2,PSCNT3,PSCNT4,PSCNTT,SAMT1,SAMT2,SAMT3,SAMT4,SCNT1,SCNT2,SCNT3,SCNT4,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6

	if 'VT(4) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"5"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 1"
	set VL=VL_$J("",69-VL.length())_"1"
	set VL=VL_$J("",76-VL.length())_"CURRENCY TOTALS"
	set V=$J(SCNT1,9) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(SAMT1,",",2),12) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"5"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 2"
	set VL=VL_$J("",69-VL.length())_"2"
	set VL=VL_$J("",76-VL.length())_"CURRENCY TOTALS"
	set V=$J(SCNT2,9) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(SAMT2,",",2),12) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"5"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 3"
	set VL=VL_$J("",69-VL.length())_"3"
	set VL=VL_$J("",76-VL.length())_"CURRENCY TOTALS"
	set V=$J(SCNT3,9) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(SAMT3,",",2),12) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"5"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 4"
	set VL=VL_$J("",69-VL.length())_"4"
	set VL=VL_$J("",76-VL.length())_"CURRENCY TOTALS"
	set V=$J(SCNT4,9) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(SAMT4,",",2),12) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	quit

VSUM5	// Summary
	type public String CSAMT1,CSAMT2,CSAMT3,CSAMT4,CSCNT1,CSCNT2,CSCNT3,CSCNT4,I,IOSL,PSAMT1,PSAMT2,PSAMT3,PSAMT4,PSAMTT,PSCNT1,PSCNT2,PSCNT3,PSCNT4,PSCNTT,SAMT1,SAMT2,SAMT3,SAMT4,SCNT1,SCNT2,SCNT3,SCNT4,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6

	if 'VT(5) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"3"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 1"
	set VL=VL_$J("",69-VL.length())_"1"
	set VL=VL_$J("",76-VL.length())_"TYPE SUBTOTALS"
	set V=$J(PSCNT1,9) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(PSAMT1,",",2),12) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"3"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 2"
	set VL=VL_$J("",69-VL.length())_"2"
	set VL=VL_$J("",76-VL.length())_"TYPE SUBTOTALS"
	set V=$J(PSCNT2,9) do VP11 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(PSAMT2,",",2),12) do VP12 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"3"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 3"
	set VL=VL_$J("",69-VL.length())_"3"
	set VL=VL_$J("",76-VL.length())_"TYPE SUBTOTALS"
	set V=$J(PSCNT3,9) do VP13 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(PSAMT3,",",2),12) do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"3"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 4"
	set VL=VL_$J("",69-VL.length())_"4"
	set VL=VL_$J("",76-VL.length())_"TYPE SUBTOTALS"
	set V=$J(PSCNT4,9) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(PSAMT4,",",2),12) do VP16 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"4"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"NET TOTAL-PRODUCT"
	set VL=VL_$J("",76-VL.length())_"TYPE NET TOTAL"
	set V=$J(PSCNTT,9) do VP17 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(PSAMTT,",",2),12) do VP18 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	quit

VSUM6	// Summary
	type public String CSAMT1,CSAMT2,CSAMT3,CSAMT4,CSCNT1,CSCNT2,CSCNT3,CSCNT4,I,IOSL,PSAMT1,PSAMT2,PSAMT3,PSAMT4,PSAMTT,PSCNT1,PSCNT2,PSCNT3,PSCNT4,PSCNTT,SAMT1,SAMT2,SAMT3,SAMT4,SCNT1,SCNT2,SCNT3,SCNT4,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6

	if 'VT(6) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"2"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 1"
	set VL=VL_$J("",58-VL.length())_$J(vc4,6)
	set VL=VL_$J("",69-VL.length())_"1"
	set VL=VL_$J("",76-VL.length())_"CC SUBTOTALS"
	set V=$J(CSCNT1,9) do VP19 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(CSAMT1,",",2),12) do VP20 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"2"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 2"
	set VL=VL_$J("",58-VL.length())_$J(vc4,6)
	set VL=VL_$J("",69-VL.length())_"2"
	set VL=VL_$J("",76-VL.length())_"CC SUBTOTALS"
	set V=$J(CSCNT2,9) do VP21 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(CSAMT2,",",2),12) do VP22 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"2"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 3"
	set VL=VL_$J("",58-VL.length())_$J(vc4,6)
	set VL=VL_$J("",69-VL.length())_"3"
	set VL=VL_$J("",76-VL.length())_"CC SUBTOTALS"
	set V=$J(CSCNT3,9) do VP23 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(CSAMT3,",",2),12) do VP24 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	set VL=" "_"2"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_"TOTALS-SWEEP TYPE 4"
	set VL=VL_$J("",58-VL.length())_$J(vc4,6)
	set VL=VL_$J("",69-VL.length())_"4"
	set VL=VL_$J("",76-VL.length())_"CC SUBTOTALS"
	set V=$J(CSCNT4,9) do VP25 quit:VFMQ!verror.get()
	set VL=VL_$J("",96-VL.length())_V
	set V=$J($FN(CSAMT4,",",2),12) do VP26 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V
	do VOM
	quit

VDTL7	// Detail
	type public String CSAMT1,CSAMT2,CSAMT3,CSAMT4,CSCNT1,CSCNT2,CSCNT3,CSCNT4,IOSL,PSAMT1,PSAMT2,PSAMT3,PSAMT4,PSAMTT,PSCNT1,PSCNT2,PSCNT3,PSCNT4,PSCNTT,SAMT1,SAMT2,SAMT3,SAMT4,SCNT1,SCNT2,SCNT3,SCNT4,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "_"1"
	set VL=VL_$J("",4-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",17-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",24-VL.length())_$J(vc3,4)
	set VL=VL_$J("",33-VL.length())_$E(vc7,1,20)
	set VL=VL_$J("",58-VL.length())_$J(vc4,6)
	set VL=VL_$J("",69-VL.length())_$E(vc5,1,2)
	set VL=VL_$J("",76-VL.length())_$J(vc8,12)
	set VL=VL_$J("",93-VL.length())_$J(vc9,12)
	set V=vc10,VO=V set V=$J($FN(V,",",2),12) do VP27 quit:VFMQ!verror.get()
	set VL=VL_$J("",109-VL.length())_V		// [SYSDEV,DAYENDSWPF]TAMT
	do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,CSAMT1,CSAMT2,CSAMT3,CSAMT4,CSCNT1,CSCNT2,CSCNT3,CSCNT4,PSAMT1,PSAMT2,PSAMT3,PSAMT4,PSAMTT,PSCNT1,PSCNT2,PSCNT3,PSCNT4,PSCNTT,RID,RN,SAMT1,SAMT2,SAMT3,SAMT4,SCNT1,SCNT2,SCNT3,SCNT4,VL,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number VLC
	type Public String IO,VL

	use IO
	write VL_$J("",132-VL.length()),!
	set VL="",VLC=VLC+1
	quit

	// Pre/post-processors

VP1	// Column post-processor - Variable: SCNT1

	type Public String SCNT1

	set SCNT1=0
	quit

VP2	// Column post-processor - Variable: SAMT1

	type Public String SAMT1

	set SAMT1=0
	quit

VP3	// Column post-processor - Variable: SCNT2

	type Public String SCNT2

	set SCNT2=0
	quit

VP4	// Column post-processor - Variable: SAMT2

	type Public String SAMT2

	set SAMT2=0
	quit

VP5	// Column post-processor - Variable: SCNT3

	type Public String SNCT3

	set SNCT3=0
	quit

VP6	// Column post-processor - Variable: SAMT3

	type Public String SAMT

	set SAMT=0
	quit

VP7	// Column post-processor - Variable: SCNT4

	type Public String SCNT4

	set SCNT4=0
	quit

VP8	// Column post-processor - Variable: SAMT4

	type Public String SAMT4

	set SAMT4=0
	quit

VP9	// Column post-processor - Variable: PSCNT1

	type Public String PSCNT1

	set PSCNT1=0
	quit

VP10	// Column post-processor - Variable: PSAMT1

	type Public String PSAMT1

	set PSAMT1=0
	quit

VP11	// Column post-processor - Variable: PSCNT2

	type Public String PSCNT2

	set PSCNT2=0
	quit

VP12	// Column post-processor - Variable: PSAMT2

	type Public String PSAMT2

	set PSAMT2=0
	quit

VP13	// Column post-processor - Variable: PSCNT3

	type Public String PSCNT3

	set PSCNT3=0
	quit

VP14	// Column post-processor - Variable: PSAMT3

	type Public String PSAMT3

	set PSAMT3=0
	quit

VP15	// Column post-processor - Variable: PSCNT4

	type Public String PSCNT4

	set PSCNT4=0
	quit

VP16	// Column post-processor - Variable: PSAMT4

	type Public String PSAMT4

	set PSAMT4=0
	quit

VP17	// Column post-processor - Variable: PSCNTT

	type Public String PSCNTT

	set PSCNTT=0
	quit

VP18	// Column post-processor - Variable: PSAMTT

	type Public String PSAMTT

	set PSAMTT=0
	quit

VP19	// Column post-processor - Variable: CSCNT1

	type Public String CSCNT1

	set CSCNT1=0
	quit

VP20	// Column post-processor - Variable: CSAMT1

	type Public String CSAMT1

	set CSAMT1=0
	quit

VP21	// Column post-processor - Variable: CSCNT2

	type Public String CSCNT2

	set CSCNT2=0
	quit

VP22	// Column post-processor - Variable: CSAMT2

	type Public String CSAMT2

	set CSAMT2=0
	quit

VP23	// Column post-processor - Variable: CSCNT3

	type Public String CSCNT3

	set CSCNT3=0
	quit

VP24	// Column post-processor - Variable: CSAMT3

	type Public String CSAMT3

	set CSAMT3=0
	quit

VP25	// Column post-processor - Variable: CSCNT4

	type Public String CSCNT4

	set CSCNT4=0
	quit

VP26	// Column post-processor - Variable: CSAMT4

	type Public String CSAMT4

	set CSAMT4=0
	quit

VP27	// Column post-processor - [SYSDEV,DAYENDSWPF]TAMT

	type public String vc5,vc10
	type Public String CSAMT1,CSAMT2,CSAMT3,CSAMT4,CSCNT1,CSCNT2,CSCNT3,CSCNT4,DAYENDSWPF,PSAMT1,PSAMT2,PSAMT3,PSAMT4,PSAMTT,PSCNT1,PSCNT2,PSCNT3,PSCNT4,PSCNTT,SAMT1,SAMT2,SAMT3,SAMT4,SCNT1,SCNT2,SCNT3,SCNT4,SWTYPE,TAMT

	if vc5=1 do {
		set SAMT1=SAMT1+vc10 set SCNT1=SCNT1+1
		set PSAMT1=PSAMT1+vc10 set PSCNT1=PSCNT1+1
		set CSAMT1=CSAMT1+vc10 set CSCNT1=CSCNT1+1
		set PSAMTT=PSAMTT+vc10
		}
	if vc5=2 do {
		set SAMT2=SAMT2+vc10 set SCNT2=SCNT2+1
		set PSAMT2=PSAMT2+vc10 set PSCNT2=PSCNT2+1
		set CSAMT2=CSAMT2+vc10 set CSCNT2=CSCNT2+1
		set PSAMTT=PSAMTT-vc10
		}
	if vc5=3 do {
		set SAMT3=SAMT3+vc10 set SCNT3=SCNT3+1
		set PSAMT3=PSAMT3+vc10 set PSCNT3=PSCNT3+1
		set CSAMT3=CSAMT3+vc10 set CSCNT3=CSCNT3+1
		set PSAMTT=PSAMTT+vc10
		}
	if vc5=4 do {
		set SAMT4=SAMT4+vc10 set SCNT4=SCNT4+1
		set PSAMT4=PSAMT4+vc10 set PSCNT4=PSCNT4+1
		set CSAMT4=CSAMT4+vc10 set CSCNT4=CSCNT4+1
		set PSAMTT=PSAMTT-vc10
		}
	set PSCNTT=PSCNTT+1
	quit
