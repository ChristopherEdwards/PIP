R01S227	// SCA176 - Credit Bureau File Create
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/28/2007 01:20 - dasarav

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String DEV

	set RID="SCA176"
	set RN="Credit Bureau File Create"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DEV")="|40|||[DEVICE]||S SIO=IO,%EXT=1 D ^SCAIO I 'ER S IO=SIO,IOPAR=SIOPAR,IOTYP=SIOTYP|S RM=$I_%_2,DEV=$I,SIOPAR=$G(IOPAR),SIOTYP=$G(IOTYP)|T|Device for summary report|||||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,DEV#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD
	type public String DEV
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %NOCLOSE,%TIM,A1,A3,A7,AMTFLD,CBDOO,CBST,CID,CONAM,CRCTRL,CRID,CRLRD,CRSHRT,CRSTUD,D14,D15,D20,D29,D5,D7,D8,DIST1AF,DIST1ND,DLCO,DOO,DSEQ,FCLD,GRP,LNCRBS(),LNCRBT(),LPDT,RID,RN,SCHSEQ,SECSSN,STAT,TBAL,TPST,TREC,VL,VLOF,VRF(),VSKIPREC,VSTATS(),X,ZIP2,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc20,vovc21,vovc22,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA176",RN="Credit Bureau File Create"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA176","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=99999999			// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=321")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LN]CID#12#12,[LN]CBC#29#2,[LN]ODT#48#6,[LN]LPDT#60#6,[LN]BAL#73#7,[CIF]TAXID#94#9,[CIF]MAR#105#1,[CIF]PZIP#106#6,[CIF]NAM#115#32,[CIF]PAD1#148#32,[CIF]PCITY#180#30,[CIF]PSTATE#210#2,[CIF]PAD2#212#32,[CIF]OWN#244#1,[LN]CRLMT#245#7,[LN]DTC#254#6,[LN]DIST1LD#265#1"

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LN.GRP,LN.CBST,LN.CBDOO,LN.STAT,LN.LPDT,LN.FCLD,LN.DLCO,LN.SCHSEQ,LN.DSEQ,LN.DIST1AF,LN.DIST1ND,LN.DTC,LN.CNTDR,CIF.TAXID,LN.ONP,LN.CBC,LN.ODT,LN.TDUE,LN.PMT,LN.CLS,LN.TYPE,LN.CID,LN.BAL,CIF.MAR,CIF.PZIP,CIF.NAM,CIF.PAD1,CIF.PCITY,CIF.PSTATE,CIF.PAD2,CIF.OWN,LN.CRLMT,LN.DIST1LD,LN.ACN,LN.COA,LN.ORG,LN.HABL1","LN,CIF,PRODDFTL","LN.CLS='L' AND LN.CBC NOT ='99' AND PRODDFTL.CBC NOT ='99' AND PRODDFTL.CPF NOT =1","LN.CLS,LN.GRP,LN.TYPE,LN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc20,vovc1,vovc21,vovc22
	set vovc20="",vovc1="",vovc21="",vovc22=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc20,vc20,vovc1,vc1,vovc21,vc21,vovc22,vc22
	set vovc20=vc20,vovc1=vc1,vovc21=vc21,vovc22=vc22
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37
	set vc1=V.piece($C(9),1)			// LN.GRP
	set vc2=V.piece($C(9),2)			// LN.CBST
	set vc3=V.piece($C(9),3)			// LN.CBDOO
	set vc4=V.piece($C(9),4)			// LN.STAT
	set vc5=V.piece($C(9),5)			// LN.LPDT
	set vc6=V.piece($C(9),6)			// LN.FCLD
	set vc7=V.piece($C(9),7)			// LN.DLCO
	set vc8=V.piece($C(9),8)			// LN.SCHSEQ
	set vc9=V.piece($C(9),9)			// LN.DSEQ
	set vc10=V.piece($C(9),10)			// LN.DIST1AF
	set vc11=V.piece($C(9),11)			// LN.DIST1ND
	set vc12=V.piece($C(9),12)			// LN.DTC
	set vc13=V.piece($C(9),13)			// LN.CNTDR
	set vc14=V.piece($C(9),14)			// CIF.TAXID
	set vc15=V.piece($C(9),15)			// LN.ONP
	set vc16=V.piece($C(9),16)			// LN.CBC
	set vc17=V.piece($C(9),17)			// LN.ODT
	set vc18=V.piece($C(9),18)			// LN.TDUE
	set vc19=V.piece($C(9),19)			// LN.PMT
	set vc20=V.piece($C(9),20)			// LN.CLS
	set vc21=V.piece($C(9),21)			// LN.TYPE
	set vc22=V.piece($C(9),22)			// LN.CID
	set vc23=V.piece($C(9),23)			// LN.BAL
	set vc24=V.piece($C(9),24)			// CIF.MAR
	set vc25=V.piece($C(9),25)			// CIF.PZIP
	set vc26=V.piece($C(9),26)			// CIF.NAM
	set vc27=V.piece($C(9),27)			// CIF.PAD1
	set vc28=V.piece($C(9),28)			// CIF.PCITY
	set vc29=V.piece($C(9),29)			// CIF.PSTATE
	set vc30=V.piece($C(9),30)			// CIF.PAD2
	set vc31=V.piece($C(9),31)			// CIF.OWN
	set vc32=V.piece($C(9),32)			// LN.CRLMT
	set vc33=V.piece($C(9),33)			// LN.DIST1LD
	set vc34=V.piece($C(9),34)			// LN.ACN
	set vc35=V.piece($C(9),35)			// LN.COA
	set vc36=V.piece($C(9),36)			// LN.ORG
	set vc37=V.piece($C(9),37)			// LN.HABL1
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19
 type public Date CRLRD,DOO,TJD
 type public Number D5,D7,D8,D14,TREC,VSKIPREC,X
 type public String GRP
 
 type Date CBDOO,DLCO,FCLD,LPDT
 type Number A,CBST,DIST1AF,DIST1ND,DSEQ,SCHSEQ,STAT
 type String B
                          
 set TREC=TREC+1
 set GRP=vc1
 set CBST=vc2
 set CBDOO=vc3
 set STAT=vc4
 set LPDT=vc5
 set FCLD=vc6
 set DLCO=vc7
 set SCHSEQ=vc8
 set DSEQ=vc9
 set DIST1AF=vc10
 set DIST1ND=vc11
 
 if (STAT=4),(vc12<(TJD-360)) set VSKIPREC=1 quit
 if (GRP'="RC"),('vc13) set VSKIPREC=1 quit
 if 'DIST1AF set VSKIPREC=1 quit
 set (D5,DOO)=""
 set vc14=vc14.translate("-","")
 kill D7

 do D5
 
 set X=vc15
 set B=vc16
 if (X.isNull())!(DIST1AF.isNull()) set D7="010"
 if (B="07")!(B=15)!(B=18)!(B=47)!(B=89) set D7="010"
 if 'D7.exists() do {
 	set X=(X*12)/DIST1AF,A=0 
 	if (B="08")!(B=19)!(B=25)!(B=26)!(B="5A") set A=1
 	set D7=$S(A:(X/12),1:X)
 	if (D7\1)>10 set D7=D7.roundDec(0)
 	else  set D7=D7.roundDec(1)
 	}
 
 set D8=4
 if vc17>CRLRD set D8=1
 if (D5=11)!(D5=13) set D14=0
 else  set D14=vc18-vc19 if D14<0 set D14=0
 
 quit
 
D5 //

 type public Date CBDOO,DOO,DLCO,FCLD,LPDT,TJD
 type public Number CBST,D5,DIST1AF,DIST1ND,DSEQ,SCHSEQ,STAT
                          
 set D5=CBST
 if 'D5.isNull() set DOO=CBDOO quit
 if STAT=4 set D5=13,DOO=LPDT quit
 set DOO=FCLD
 if 'DOO.isNull() set D5=94 quit
 set DLCO=DLCO
 //  check last action file - problem loan sub-system
 do D5A
 if 'DLCO.isNull() set DOO=DLCO,D5=97 quit
 if 'DOO.isNull() quit
 set DOO=TJD
 set D5=SCHSEQ-DSEQ
 set D5=(12*D5)/DIST1AF
 set D5=$S(D5<1:11,D5<2:71,D5<3:78,D5<4:80,D5<5:82,D5<6:83,1:84)
 // 30 day delinquency date
 if D5>11 set DOO=DIST1ND+30
 /* Catagories:
       11 = Current
       13 = Closed account
       71 = 30 days past due
       78 = 60 days past due
       80 = 90 days past due
       82 = 120 days past due
       83 = 150 days past due
       84 = 180 days past due
 */
 
 quit
 
D5A //
 
 type public Date DLCO
 type public Number CID
                          
 type String X
                          
 type ResultSet rs=Db.select("CAD","LNPL2","CID=:CID","CAD DESC")
 // not in restructuring file
 if rs.isEmpty() quit
 
 if rs.next() set X=rs.getCol("CAD")
 if ('DLCO.isNull()),(X.isNull()) quit
 if X>DLCO set DLCO=X
 
 quit
	quit

VPREAQ	// Pre-processor (after query)

 type public Date CRLRD,TJD
 type public Number CRID,CRSTUD,LNCRBS(),LNCRBT(),TBAL,TPST,TREC
 type public String CRCTRL,CRSHRT
 
 set (LNCRBS(1),LNCRBS(2),TREC,TBAL,TPST)=0
 kill LNCRBT
 set TJD=CUVAR.tjd
 set CRCTRL=CUVAR.crctrl
 set CRSHRT=CUVAR.crshrt
 set CRID=CUVAR.crid
 set CRSTUD=CUVAR.crstud
 set CRLRD=CUVAR.crlrd
	quit

VPREBQ	// Pre-processor (before query)

  //Incoming=TJD
	quit

VRPOST	// Report post-processor

 type public Date TJD
 type public String IO,%NOCLOSE
 
 type String RID,SIO
 
 if (TJD.get()).isNull() set TJD=CUVAR.tjd
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 set cuvar.crlrd=TJD
 do cuvar.save()
 
 do CLOSE^SCAIO
 set SIO=IO
 set RID="SCA179"
 do DRV^URID 
 set IO=SIO
 set %NOCLOSE=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(4)=1		// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc20,vovc20,vc1,vovc1,vc21,vovc21,vc22,vovc22
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc20'=vc20) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb2!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc21'=+vc21) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %NOCLOSE,A1,A3,A7,AMTFLD,CBDOO,CBST,CID,CRCTRL,CRID,CRLRD,CRSHRT,CRSTUD,D14,D15,D20,D29,D5,D7,D8,DIST1AF,DIST1ND,DLCO,DOO,DSEQ,FCLD,GRP,IO,IOSL,LNCRBS(),LNCRBT(),LPDT,SCHSEQ,SECSSN,STAT,TBAL,TJD,TPST,TREC,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VSKIPREC,VT(),X,ZIP2,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc20,vovc21,vovc22

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="0320"
	set VL=VL_$J("",4-VL.length())_$E(10E30_CRID,26+$L(CRID),99)
	set V=vc22,VO=V set V=$J(V,11) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",12-VL.length())_V		// [SYSDEV,LN]CID
	set V=vc16,VO=V set V=$J(V,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",28-VL.length())_V		// [SYSDEV,LN]CBC
	set VL=VL_$J("",30-VL.length())_$E(D5,1,2)
	set VL=VL_$J("",32-VL.length())_"00000000000"
	set VL=VL_$J("",43-VL.length())_$E(10E30_D7,30+$L(D7),99)
	set VL=VL_$J("",46-VL.length())_$E(D8,1,1)
	set VL=VL_$J("",47-VL.length())_$$^%ZD(vc17,"MM")_$$^%ZD(vc17,"DD")_$$^%ZD(vc17,"YY")
	set VL=VL_$J("",53-VL.length())_$$^%ZD(DOO,"MM")_$$^%ZD(DOO,"DD")_$$^%ZD(DOO,"YY")
	set V=vc5,VO=V set V=$$^%ZD(V,"MM")_$$^%ZD(vc5,"DD")_$$^%ZD(vc5,"YY") do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V		// [SYSDEV,LN]LPDT
	do VP4 quit:VFMQ!verror.get()  set V=$E(10E30_(AMTFLD*10E-1\1),26+$L(AMTFLD*10E-1\1),99)
	set VL=VL_$J("",65-VL.length())_V
	set VL=VL_$J("",72-VL.length())_$E(10E30_(vc23*10E-1\1),26+$L(vc23*10E-1\1),99)
	set VL=VL_$J("",79-VL.length())_$E(10E30_(D14*10E-1\1),26+$L(D14*10E-1\1),99)
	set VL=VL_$J("",86-VL.length())_$E(10E30_(D15*10E-1\1),26+$L(D15*10E-1\1),99)
	set VL=VL_$J("",93-VL.length())_$J(vc14,9)
	set VL=VL_$J("",102-VL.length())_"  "
	set VL=VL_$J("",104-VL.length())_$E(vc24,1,1)
	set V=vc25,VO=V set V=$J(V,6) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",105-VL.length())_V		// [SYSDEV,CIF]PZIP
	set VL=VL_$J("",111-VL.length())_$E(D20,1,1)
	set VL=VL_$J("",112-VL.length())_"  "
	set VL=VL_$J("",114-VL.length())_$E(vc26,1,32)
	set VL=VL_$J("",146-VL.length())_" "
	set VL=VL_$J("",147-VL.length())_$E(vc27,1,32)
	set VL=VL_$J("",179-VL.length())_$E(vc28,1,30)
	set VL=VL_$J("",209-VL.length())_$E(vc29,1,2)
	set VL=VL_$J("",211-VL.length())_$E(vc30,1,32)
	set VL=VL_$J("",243-VL.length())_$E(vc31,1,1)
	set VL=VL_$J("",244-VL.length())_$E(10E30_(vc32*10E-1\1),26+$L(vc32*10E-1\1),99)
	set VL=VL_$J("",251-VL.length())_$E(D29,1,1)
	set VL=VL_$J("",252-VL.length())_"U"
	set VL=VL_$J("",253-VL.length())_$$^%ZD(vc12,"MM")_$$^%ZD(vc12,"DD")_$$^%ZD(vc12,"YY")
	set VL=VL_$J("",259-VL.length())_$E(ZIP2,1,4)
	set V=vc33,VO=V set V=$E(V,1,1) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",264-VL.length())_V		// [SYSDEV,LN]DIST1LD
	set VL=VL_$J("",272-VL.length())_$E(A1,1,3)
	set VL=VL_$J("",275-VL.length())_$E(A3,1,32)
	set VL=VL_$J("",307-VL.length())_$E(10E30_SECSSN,24+$L(SECSSN),99)
	set VL=VL_$J("",318-VL.length())_$E(A7,1,1)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%NOCLOSE,%TIM,A1,A3,A7,AMTFLD,CBDOO,CBST,CID,CONAM,CRCTRL,CRID,CRLRD,CRSHRT,CRSTUD,D14,D15,D20,D29,D5,D7,D8,DIST1AF,DIST1ND,DLCO,DOO,DSEQ,FCLD,GRP,IO,LNCRBS(),LNCRBT(),LPDT,RID,RN,SCHSEQ,SECSSN,STAT,TBAL,TJD,TPST,TREC,VL,VSKIPREC,X,ZIP2,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc20,vovc21,vovc22,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+1,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="0320HEADERD"
	set VL=VL_$J("",11-VL.length())_$E(CRCTRL,1,4)
	set VL=VL_$J("",15-VL.length())_$E(10E30_CRSHRT,31+$L(CRSHRT),99)
	set VL=VL_$J("",17-VL.length())_$$^%ZD(TJD,"MM")_$$^%ZD(TJD,"DD")_$$^%ZD(TJD,"YY")
	set VL=VL_$J("",23-VL.length())_$$^%ZD(TJD,"MM")_$$^%ZD(TJD,"DD")_$$^%ZD(TJD,"YY")
	set VL=VL_$J("",29-VL.length())_"00"
	set VL=VL_$J("",31-VL.length())_$E(10E30_CRSTUD,29+$L(CRSTUD),99)
	set VL=VL_$J("",35-VL.length())_"8105"
	set VL=VL_$J("",39-VL.length())_$E(CRSTUD,1,4)
	set VL=VL_$J("",59-VL.length())_$$^%ZD(TJD,"MM")_$$^%ZD(TJD,"DD")_$$^%ZD(TJD,"YY")
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %NOCLOSE,A1,A3,A7,AMTFLD,CBDOO,CBST,CID,CRCTRL,CRID,CRLRD,CRSHRT,CRSTUD,D14,D15,D20,D29,D5,D7,D8,DIST1AF,DIST1ND,DLCO,DOO,DSEQ,FCLD,GRP,IO,LNCRBS(),LNCRBT(),LPDT,SCHSEQ,SECSSN,STAT,TBAL,TJD,TPST,TREC,VSKIPREC,X,ZIP2,vovc1,vovc20,vovc21,vovc22
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="0320TRAILER"
	set VL=VL_$J("",11-VL.length())_$E(10E30_(TBAL*10E-1\1),22+$L(TBAL*10E-1\1),99)
	set VL=VL_$J("",22-VL.length())_$E(10E30_(TPST*10E-1\1),22+$L(TPST*10E-1\1),99)
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4))		// @CNT(0,N,9)
	do VP7 quit:VFMQ!verror.get()  set V=$J(V,9)
	set VL=VL_$J("",33-VL.length())_V		// @CNT(0,N,9)
	set VL=VL_$J("",42-VL.length())_"0000"
	set VL=VL_$J("",51-VL.length())_$$^%ZD(TJD,"MM")_$$^%ZD(TJD,"DD")_$$^%ZD(TJD,"YY")
	do VOM
	quit

VOM	// Output print line
	type Public Number VLC
	type Public String IO,VL

	use IO
	write VL_$J("",320-VL.length()),!
	set VL="",VLC=VLC+1
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,LN]CID

	type public String vc34,vc22,vc19,vc10,vc1,vc23
 type public Number ACN,CID,D14,D15,TBAL,TPST
 type public String A7,D8,D29
 
 set ACN=vc34
 set CID=vc22
 set D15=(vc19*vc10)/12
 set D29=$S(vc1="RC":"R",1:"I")
 
 set TBAL=TBAL+vc23,TPST=TPST+D14
 
 set A7=D8

 do SPOUSE
 
 quit
                          
SPOUSE // Find spouse - If there's a spouse, report the spouse
 
 type public Number ACN,CID,D5,D8,D20,LNCRBS,LNCRBT(,)
 type public String A1,A3,SECSSN
 
 type Number N,SACN
 type String SP
 
 set (A1,A3,SACN,SP)=""
 type ResultSet rs=Db.select("ACN","RELCIF","CID=:CID")
 while rs.next() do {
 	set SACN=rs.getCol("ACN")
 	set SP=$$SPOUSE^UCO1(CID,SACN)
 	if SP do {
 		set A1="A12"
 		type RecordCIF cif=Db.getRecord("CIF","ACN=:SACN",1)
 		set A3=cif.nam
 		set D20=2
 		set SECSSN=cif.xname.translate("-","")
 		}
 	}
 
 // If no spouse, report another borrower
 if A1.isNull() do {
 	type ResultSet rs1=Db.select("ACN","RELCIF","CID=:CID")
 	if rs1.next() do {
 		set N=rs1.getCol("ACN")
 		// If primary, see if there's another
 		if N=ACN do {
 			type ResultSet rs2=Db.select("ACN","RELCIF","CID=:CID AND ACN>:N","ACN")
 			if rs2.next() set N=rs2.getCol("ACN")
 			}
   		type RecordCIF cif=Db.getRecord("CIF","ACN=:N",1)
 		set A3=cif.nam,A1="A12"
 		set D20=2,SECSSN=cif.xname.translate("-","")
 		}
 	else  set A3="",A1="All",SECSSN="",D20=1
 	}
 
 if 'LNCRBT(D5,D8).exists() set (LNCRBT(D5,1),LNCRBT(D5,4),LNCRBT(D5,7))=0
 set LNCRBT(D5,D8)=LNCRBT(D5,D8)+1
 
 if 'LNCRBS(D20).exists() set LNCRBS(D20)=0
 set LNCRBS(D20)=LNCRBS(D20)+1
	quit

VP2	// Column post-processor - [SYSDEV,LN]CBC

 type public Number V
 
 if 'V set V=31
	quit

VP3	// Column post-processor - [SYSDEV,LN]LPDT

	type public String vc5
 type public String V
 
 // If the field is null, zero fill
 if vc5.isNull() set V="000000"
	quit

VP4	// Column pre-processor - Variable: AMTFLD

	type public String vc2,vc35,vc1,vc36,vc37
 type public Number AMTFLD
 
 set AMTFLD=""
 if (vc2=64)!(vc2=97) set AMTFLD=vc35 quit
 if (vc1="LN")!(vc1="MTG") set AMTFLD=vc36 quit
 set AMTFLD=vc37
	quit

VP5	// Column post-processor - [SYSDEV,CIF]PZIP

 type public Number ZIP2
 type public String V
 
 set ZIP2=V.piece("-",2)
 set V=V.piece("-",1)
	quit

VP6	// Column post-processor - [SYSDEV,LN]DIST1LD

 type public String V
 
 // This field should never display, included so that the data item is
 // defined for calculations on the User Defined sections

 set V=" "
	quit

VP7	// Column pre-processor - @CNT(0,N,9)

 type public Number CNT,V
 
 set CNT=V,V=V*2
	quit
