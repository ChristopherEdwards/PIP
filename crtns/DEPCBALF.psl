DEPCBALF(RecordDEPCBAL depcbal, String vpar, Boolean vparNorm) // DEPCBAL - Combined Acct Bal For Interest Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:16 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (2)              11/22/2003
	// Journal File Definition (2)                 12/17/2004
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = depcbal.getMode()                     // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(depcbal,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(depcbal,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("CID").exists()!vx("CBCID").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("DEPCBAL",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("DEPCBAL","CID = :depcbal.cid and CBCID = :depcbal.cbcid") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String CID
	type public String CBCID

	type RecordDEPCBAL depcbal = Db.getRecord("DEPCBAL","CID=:CID,CBCID=:CBCID")
	if (%ProcessMode = 2) do {
		do depcbal.setMode(2)

		do DEPCBALF(depcbal,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordDEPCBAL depcbal

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("DEPCBAL","CID = :depcbal.cid and CBCID = :depcbal.cbcid") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(depcbal)) S ^ACN(vobj(depcbal,-3),410,vobj(depcbal,-4))=vobj(depcbal)
		#ENDBYPASS

		if vpar["/JOURNAL/" do VJOURNAL(.depcbal)             // Create journal files
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordDEPCBAL depcbal

	if vpar["/JOURNAL/" do VJOURNAL(.depcbal)              // Create journal entries

	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^ACN(vobj(depcbal,-3),410,vobj(depcbal,-4))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordDEPCBAL depcbal

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordDEPCBAL depcbal

	if depcbal.cid.isNull() do vreqerr("CID") quit
	if depcbal.cbcid.isNull() do vreqerr("CBCID") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DEPCBAL","MSG",1767,"DEPCBAL."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordDEPCBAL depcbal

	set X = depcbal.cid if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("CID", vRM) quit
	set X = depcbal.cbcid if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("CBCID", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DEPCBAL","MSG",979,"DEPCBAL."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VJOURNAL(RecordDEPCBAL depcbal)	//DEPCBAL Journal file entries

	type Public Date %EffectiveDate
	type Public String %TSRC,vpar,vx()
	type String TSRC,vdi,vdx()

	if %TSRC.get().isNull() set TSRC="O"
	else  set TSRC=%TSRC

	if TSRC="B" do {
		if 'EFD.get() do {
			do vj1(.depcbal)	// Mode=I,U,D Tran=B EFD=N Seq=1 JRNID=HIST_CBCID
			do vj2(.depcbal)	// Mode=I,U,D Tran=B EFD=N Seq=1 JRNID=HIST_I
			}
		}
	else  if TSRC="O" do {
		if 'EFD.get() do {
			do vj1(.depcbal)	// Mode=I,U,D Tran=O EFD=N Seq=1 JRNID=HIST_CBCID
			do vj2(.depcbal)	// Mode=I,U,D Tran=O EFD=N Seq=1 JRNID=HIST_I
			}
		}

	quit


vj1(RecordDEPCBAL depcbal)	// HIST_CBCID  Table HIST  Linked account change

	type Public String EFD,%IDENT,%O,%UID,TJD,TLO
	type String v1,vlastkey
	set v1=depcbal.cbcid
	set vlastkey=Db.nextVal("HIST","CID=:v1")
	type RecordHIST hist=Db.getRecord("HIST","CID=:v1,TSEQ=:vlastkey",1)
	set hist.cdt=+$H
	set hist.efd=$G(EFD)
	set hist.ident=%IDENT
	set hist.tcmt=$$^MSG($S(%O=0:2373,1:2374),depcbal.cid)
	set hist.time=$P($H,",",2)
	set hist.tjd=TJD
	set hist.tlo=TLO
	set hist.uid=%UID

	do hist.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj2(RecordDEPCBAL depcbal)	// HIST_I  Table HIST  Primary account

	type Public String EFD,%IDENT,%O,%UID,TJD,TLO
	type String v1,vlastkey
	set v1=depcbal.cid
	set vlastkey=Db.nextVal("HIST","CID=:v1")
	type RecordHIST hist=Db.getRecord("HIST","CID=:v1,TSEQ=:vlastkey",1)
	set hist.cdt=+$H
	set hist.efd=$G(EFD)
	set hist.ident=%IDENT
	set hist.tcmt=$$^MSG($S(%O=0:2375,1:2376),depcbal.cbcid)
	set hist.time=$P($H,",",2)
	set hist.tjd=TJD
	set hist.tlo=TLO
	set hist.uid=%UID

	do hist.save("/NOVALFK/NOVALDD/NOVALRI")

	quit



vkchged // Access key changed

	type public RecordDEPCBAL depcbal

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("CID").exists() set vux("CID") = vx("CID")
	if vx("CBCID").exists() set vux("CBCID") = vx("CBCID")
	do vkey(1) set voldkey = depcbal.cid_","_depcbal.cbcid // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = depcbal.cid_","_depcbal.cbcid // Copy new keys into object
	type RecordDEPCBAL vnewrec = depcbal.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("DEPCBAL",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordDEPCBAL depcbal

	if vux("CID").exists() set depcbal.cid = vux("CID").piece("|",i)
	if vux("CBCID").exists() set depcbal.cbcid = vux("CBCID").piece("|",i)
	quit
