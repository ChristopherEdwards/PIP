R01S128	// SCA059 - Retirement/Savings Rpt by Owner's DoB
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:39 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date ASOF=TJD.get()
	type Number MAXAGE
	type Number MINAGE

	set RID="SCA059"
	set RN="Retirement/Savings Rpt by Owner's DoB"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("ASOF")="|10|||||||D|Calculation date for age|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("MAXAGE")="|5|||||||$|Plan Owner's Maximum Age (years)||||2|"
	set %TAB("MINAGE")="|5|||||||$|Plan Owner's Minimum Age (years)||||2|"

	set %READ="IO/REQ,ASOF#1,MINAGE#1,MAXAGE#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=35
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD
	type public Date ASOF
	type public Number MINAGE,MAXAGE
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,DESC,EMAGE(),EMDATE,IRAEM,PLANID,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vp9,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA059",RN="Retirement/Savings Rpt by Owner's DoB"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA059","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DEP]RPASEQ#12#12,[DEP]CID#74#12,[DEP]TYPE#90#4,[DEP]BAL#109#12,[DEP]IRN#123#8"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"DEP.STAT NOT =4 AND DEP.IRA>0 AND CIF.DOB IS NOT N"
		set VWHERE=VWHERE_"ULL AND (:ASOF-CIF.DOB)/365.25 NOT <:MINAGE AND (:"
		set VWHERE=VWHERE_"MAXAGE IS NULL OR ((:ASOF-CIF.DOB)/365.25 NOT >(:M"
		set VWHERE=VWHERE_"AXAGE)))"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Retirement/Savings Rpt by Owner's DoB"
		set VBNRINFO("PGM")="R01S128"
		set VBNRINFO("RID")="SCA059"
		set VBNRINFO("TABLES")="DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]ACN"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEP]IRA"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEP]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vp9,vc10)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DEP.ACN,DEP.IRA,DEP.CID,DEP.BAL,DEP.RPASEQ,DEP.TYPE,DEP.IRN,CIF.LNM,CIF.TAXID,CIF.DOB","DEP,CIF","DEP.STAT NOT =4 AND DEP.IRA>0 AND CIF.DOB IS NOT NULL AND (:ASOF-CIF.DOB)/365.25 NOT <:MINAGE AND (:MAXAGE IS NULL OR ((:ASOF-CIF.DOB)/365.25 NOT >(:MAXAGE)))","DEP.ACN,DEP.IRA,DEP.CID","","DQMODE=1/PROTECTION=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=rwrs.getRowProt()		// Data item protection
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vp9,vc10
	set vc1=V.piece($C(9),1)			// DEP.ACN
	set vc2=V.piece($C(9),2)			// DEP.IRA
	set vc3=V.piece($C(9),3)			// DEP.CID
	set vc4=V.piece($C(9),4)			// DEP.BAL
	set vc5=V.piece($C(9),5)			// DEP.RPASEQ
	set vc6=V.piece($C(9),6)			// DEP.TYPE
	set vc7=V.piece($C(9),7)			// DEP.IRN
	set vc8=V.piece($C(9),8)			// CIF.LNM
	set vc9=V.piece($C(9),9)			// CIF.TAXID
	set vp9=VI.extract(9)				// Protection indicator
	set vc10=V.piece($C(9),10)			// CIF.DOB
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public String EMAGE()
 type Number I

 // Build array of E/M Ages for each IRATYP
 // I18N=OFF
 type ResultSet rs=Db.select("MINADIS,DISAGE,KEY","UTBLRSPDEF")

 while rs.next() do {

	set I=rs.getCol("KEY")
	set EMAGE(I)=rs.getCol("MINADIS")_rs.getCol("DISAGE")
	}
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),WTIRN,vc4
	type Public String VSTATS

	set VT(3)=VT(3)+1
	set VT(3,1,1)=VT(3,1,1)+WTIRN			// @TOT(<<WTIRN>>)
	set VT(3,2,1)=VT(3,2,1)+vc4			// @TOT([DEP]BAL)
	quit

VHDG2	// Group Header
	type public String %MSKD,%TIM,CONAM,DESC,EMAGE(),EMDATE,ER,IOSL,IRAEM,PLANID,RID,RN,TJD,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vp9,vrundate,vsysdate

	quit:vh(2)  set vh(2)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc1,12)
	set VL=VL_$J("",15-VL.length())_$E(vc8,1,20)
	set VL=VL_$J("",38-VL.length())_$S(vp9=3:"***********",1:$E(vc9,1,11))
	set VL=VL_$J("",52-VL.length())_$J($$DAT^%ZM(vc10),10)
	do VOM
	set VL="" do VOM
	quit

VSUM2	// Summary
	type public String %TIM,DESC,EMAGE(),EMDATE,I,IOSL,IRAEM,PLANID,TJD,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vp9,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                                                            "_"="
	set VL=VL_$J("",109-VL.length())_"==========="
	set VL=VL_$J("",122-VL.length())_"========"
	do VOM
	set VL="                                            "_"Customer Subtotal:"
	set V=VT(2,2,1)					// @TOT([DEP]BAL,)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),12)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=VT(2,1,1)/VT(2,2,1)		// @TOT(<<WTIRN>>)/@TOT([DEP]BAL,)
		}
	set VL=VL_$J("",122-VL.length())_$J(V,8,5)
	do VOM
	set VL="" do VOM
	quit

VDTL3	// Detail
	type public String %TIM,DESC,EMAGE(),EMDATE,IOSL,IRAEM,PLANID,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vp9,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="           "_$J(vc5,12)
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC,1,10)
	set VL=VL_$J("",27-VL.length())_V
	do VP2 quit:VFMQ!verror.get()  set V=$E(PLANID,1,12)
	set VL=VL_$J("",41-VL.length())_V
	do VP3 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(EMDATE),10)
	set VL=VL_$J("",57-VL.length())_V
	set VL=VL_$J("",68-VL.length())_$E(IRAEM,1,1)
	set VL=VL_$J("",73-VL.length())_$J(vc3,12)
	set VL=VL_$J("",89-VL.length())_$J(vc6,4)
	set VL=VL_$J("",108-VL.length())_$J($FN(vc4,",",2),12)
	set V=vc7,VO=V do VP4 quit:VFMQ!verror.get()  set V=$J(V,8,5)
	set VL=VL_$J("",122-VL.length())_V		// [SYSDEV,DEP]IRN
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,DESC,EMAGE(),EMDATE,I,IOSL,IRAEM,PLANID,TJD,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vp9,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                                                            "_"="
	set VL=VL_$J("",109-VL.length())_"==========="
	set VL=VL_$J("",122-VL.length())_"========"
	do VOM
	set VL="                                                "_"Plan Subtotal:"
	set V=VT(3,2,1)					// @TOT([DEP]BAL,)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),12)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=VT(3,1,1)/VT(3,2,1)		// @TOT(<<WTIRN>>)/@TOT([DEP]BAL,)
		}
	set VL=VL_$J("",122-VL.length())_$J(V,8,5)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DESC,EMAGE(),EMDATE,IRAEM,PLANID,RID,RN,TJD,VL,vc1,vc10,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vp9,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="         "_"CIF   Name                   TIN/SIN       Birth Date"
	do VOM
	set VL="          "_"Plan Sequence    Ret Type      Plan ID          Retire Dt E/M       Account    Type                    Balance      Rate"
	do VOM
	set VL="=================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,DESC,EMAGE(),EMDATE,IRAEM,PLANID,VPN,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                                                            "_"============  ========"
	do VOM
	set VL="                                                   "_"Report Total:"
	set V=0						// @TOT([DEP]BAL,0)
	for I=0:1:3 set V=V+VT(I,2,1)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT(<<WTIRN>>)
	for I=0:1:3 set V=V+VT(I,1,1)
	set VX(2)=0					// @TOT([DEP]BAL)
	for I=0:1:3 set VX(2)=VX(2)+VT(I,2,1)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=V/VX(2)				// @TOT(<<WTIRN>>)/@TOT([DEP]BAL)
		}
	set VL=VL_$J("",122-VL.length())_$J(V,8,5)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC

	type public String vc2
 type public String DESC
 
 set DESC=""

 type RecordSTBLIRA stblira=Db.getRecord("STBLIRA","IRA=:vc2",1)

 if stblira.getMode() set DESC=stblira.mnemonic
	quit

VP2	// Column pre-processor - Variable: PLANID

	type public String vc1,vc5
 type public String PLANID

 set PLANID=""
 type RecordIRATYPE iratype=Db.getRecord("IRATYPE","ACN=:vc1,RPASEQ=:vc5",1)
 if iratype.getMode() set PLANID=iratype.planid
	quit

VP3	// Column pre-processor - Variable: EMDATE

	type public String vc2,vc10
 type public Date DOB
 type public Number AGE,DISAGE,MINADIS
 type public String EMAGE(),EMDATE,IRAEM,RETAGE
 type Number T

 // Determine if Eligible/Mandatory Retirement Age
 set (EMDATE,IRAEM)=""
 set T=vc2
 set DOB=vc10
 if 'EMAGE(T).exists() quit
 set MINADIS=EMAGE(T).piece("|",1)
 set DISAGE=EMAGE(T).piece("|",2)
 if MINADIS="",(DISAGE="") quit
 if MINADIS="",(DISAGE'="") set IRAEM="M",RETAGE=DISAGE do EMDATE(DOB,.EMDATE,RETAGE) quit
 if MINADIS'="",(DISAGE="") set IRAEM="E",RETAGE=MINADIS do EMDATE(DOB,.EMDATE,RETAGE) quit
 if AGE'<DISAGE set IRAEM="M",RETAGE=DISAGE
 else  set IRAEM="E",RETAGE=MINADIS
 do EMDATE(DOB,.EMDATE,RETAGE) quit

 // Determine EMDATE=DOB plus RETAGE.
EMDATE( Date DOB, String EMDATE, String RETAGE)

 type Date TEMPDT
 set EMDATE=DOB.toString("MM/DD/YEAR")
 set EMDATE.piece("/",3)=EMDATE.piece("/",3)+RETAGE.piece(".",1)
 set TEMPDT=EMDATE
 set EMDATE=TEMPDT.toString("MM/DD/YEAR")+(RETAGE.piece(".",2)*365.25).roundDec(,,0)
	quit

VP4	// Column pre-processor - [SYSDEV,DEP]IRN

	type public String vc4,vc7
 type public Number WTIRN

 set WTIRN=vc4*vc7
	quit
