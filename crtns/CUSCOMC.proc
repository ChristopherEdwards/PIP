CUSCOMC		/*
	Procedure ID: CUSCOMCALC
	ORIG: MALHOTRAV - 04/23/2001
	DESC: Custom Commission Calculation

	This procedure will calculate the growth bonus commission.
	The procedure will be compiled to a routine which can be linked
	to the commission plan through the Function Call column 
	(UTBLCOMPLN.FCALL) on the commission plan definition. 
	This procedure will use the portfolio balances linked to the 
	commission plan, regardless of whether they are normal or 
	weighted portfolio balances. 

	ARGUMENTS:  None
	

	INPUT:
		. CID     - Always set to "*" for portfolio
		. AGENT   - Agent Number
		. PFT     - Portfolio
		. CPLAN   - Commission Plan
		. YEBALPY - Previous prior year portfolio balance
		. YEBALLY - Prior year portfolio balance	
		. RATE    - Commission Rate
		. GTBL    - Growth Table
		. EOPBAL  - End of Period Balance
	
	Return:
		.COMAMT  - Calculated annual commission amount
 
 	*/

	/*---- Revision History ----------------------------------------------

	12/02/03 - CARROLLJ - CR7239
		   Removed agent object from EXPGR linetag.

	04/23/00 - MALHOTRAV - 40339  
		   Created 

	*/
	
	new agentcom,agentpft,compln,COMPPER
	new ACAGTHQ,COMPYTD,EAGAMTP,PEXAGTH1,PYEBALLY,PYEBALPY
	
	set COMAMT=0
	set COMPPER=0           	// Number of quarters completed

	// Load commission plan data
	type RecordUTBLCOMPLN compln
	set compln=Db.getRecord("UTBLCOMPLN","CPLAN")

	// Load Commission Plan - Agent Level Data
	type RecordAGENTCOM agentcom
	set agentcom=Db.getRecord("AGENTCOM","AGENT,CPLAN")
	
	type RecordAGENTPFT agentpft
	set agentpft=Db.getRecord("AGENTPFT","AGENT,PFT")
	set PYEBALLY=agentpft.yebally	// previous year portfolio bal
	set PYEBALPY=agentpft.yebalpy	// previous prior year portfolio bal

	if PYEBALPY="" quit

	// Find no. of completed (satisfied) periods
	set NJD=$$BOYJD^SCADAT(%SystemDate,1)   // Start at beginning of year
	for  set NJD=$$NJD^UFRE(NJD,"1QAE") quit:NJD>%SystemDate!(ER)  set COMPPER=COMPPER+1

	// If COMPPER is 0, it is end of the 4th quarter(Dec. 31st)
	if COMPPER=0 do YEAREND(.compln,.agentpft,.agentcom)  quit
	else  do ENDOP(.compln,.agentpft,.agentcom)		

	quit

	//---------------------------------------------------------------------
ENDOP(RecordUTBLCOMPLN compln,RecordAGENTPFT agentpft,RecordAGENTCOM agentcom)	
	//End of the quarter calculation
	//---------------------------------------------------------------------

	if agentcom.acagrth<agentcom.expagrth quit 0
	else  do ACAPGTH(.compln,.agentpft,COMPPER,PYEBALLY)
	do COMPDA(.agentcom)

	quit

	//-------------------------------------------------------------------
YEAREND(RecordUTBLCOMPLN compln,RecordAGENTPFT agentpft,RecordAGENTCOM agentcom) 
	/* 
	Close out the current year. The current year is closed only 
	after start of the new year when current becomes the prior year.
	*/   
	//--------------------------------------------------------------------

	// Calculate the commission for the fourth quarter(end of the year)
	if agentcom.ecomamt'=0 do { 
		do ACAPGTH(.compln,.agentpft,4,PYEBALPY)
		do COMPDA(.agentcom)
		// Calculate final commission amount to be paid to the agent
		do FACOMAMT(.agentcom)
			}


	// At the start of the Year
	do EXPAGTH(.compln,.agentcom)	// Expected Annual Growth
	do ACOMAMT(.compln,.agentcom)	// Calculate Eligible Commission Amt.

	quit

	//--------------------------------------------------------------------
EXPAGTH(RecordUTBLCOMPLN compln,RecordAGENTCOM agentcom)
	//--------------------------------------------------------------------	

	// Calculate Expected Annual Growth amount
	
	new EXGAMT,EXGPCT,PEXAGTH
	set EXGAMT=""
	set EXGPCT=""
	
	do EXPGR(PYEBALPY,.EXGAMT,.EXGPCT,.compln)  
	
	// If fixed expected growth amount is assigned calculate the expected 
	// growth %age
	if EXGAMT'="" set EXGPCT=(EXGAMT/PYEBALPY)*100

	// Calculate the annual growth amount and assign it to commission plan
	set PEXAGTH=PYEBALPY*(EXGPCT/100)	// Expec annual growth amount
	set agentcom.expagrth=PEXAGTH

	quit   

	//---------------------------------------------------------------------
ACOMAMT(RecordUTBLCOMPLN compln,RecordAGENTCOM agentcom) 
	//---------------------------------------------------------------------

	// Calculate annual commission amount
	new ACOMAMT
	
	// Actual annual portfolio growth amount
 	set agentcom.acagrth=PYEBALLY-PYEBALPY

	/* If actual annual growth amount does not meet or exceed the
	   expected annual growth amount stop commission calculation;
	   otherwise calculate the annual commission amount
	*/
	
   	if agentcom.acagrth<agentcom.expagrth set agentcom.ecomamt=0
	else  do {
		// Agent's annual commission amount
		set ACOMAMT=(compln.rate/100)*agentcom.acagrth
		// Eligible commission amount
		set agentcom.ecomamt=ACOMAMT
		}

	quit

	//--------------------------------------------------------------------
ACAPGTH(RecordUTBLCOMPLN compln,RecordAGENTPFT agentpft,COMPPER,PFTBAL)
	//--------------------------------------------------------------------

	/* 
	Description:

	This routine will calculate the actual annual portfolio growth for the
	period.
	
	Arguments:

		COMPPER:	No of completed quarters
				(when COMPPER is 0, the no. of actual
				 quarters completed will be 4)

		PFTBAL:		Year end portfolio balances.

	*/

 	new EXGAMT,EXGPCT
 	
        set EXGAMT=""
        set EXGPCT=""

	// Get the expected growth amount or %age from exp grth table  
        do EXPGR(PFTBAL,.EXGAMT,.EXGPCT,.compln)	

	if EXGPCT="" set EXGPCT=(EXGAMT/PFTBAL)*100 
	set PEXAGTH1=PFTBAL*(EXGPCT/100) //Expected Annual Growth

	// Expected annual growth for this period
	set EAGAMTP=(PEXAGTH1/4)*COMPPER

 	// Actual annual growth for this period
	set ACAGTHQ=agentpft.qeballq-PFTBAL	

	quit

	//-------------------------------------------------------------------
COMPDA(RecordAGENTCOM agentcom)	
	//-------------------------------------------------------------------

 	/* Calculate the commission paid to the agent depending upon 
	   the actual portfolio growth
	*/

	new QCOMAMT
	set QCOMAMT=0

 	/* If agent achieves the annual growth for this period, agent
	   gets one quarter of the annual commission amount
	*/
	if ACAGTHQ'<EAGAMTP set QCOMAMT=agentcom.ecomamt/4
	else  set QCOMAMT=agentcom.ecomamt/8

	set COMAMT=COMAMT+QCOMAMT
	set agentcom.compytd=agentcom.compytd+COMAMT   

	quit 
	
	//--------------------------------------------------------------------
FACOMAMT(RecordAGENTCOM agentcom)
	//--------------------------------------------------------------------

	/* Final annual commission amount after the fourth quarter(Dec. 31st)
	   This calculation is performed at the start of the new year when the 
	   year that has just concluded becomes the prior year. The prior is 
	   now the previous prior.
	*/ 

	new PBALEXGT

	// Agent got the eligible comm amt
	if agentcom.compytd=agentcom.ecomamt quit

	// If agent did not achieve the annual expected growth
	if PYEBALLY<(PYEBALPY+PEXAGTH1) quit	 
	
	if agentcom.compytd<agentcom.ecomamt set COMAMT=COMAMT+(agentcom.ecomamt-agentcom.compytd)
	set agentcom.compytd=agentcom.compytd+(agentcom.ecomamt-agentcom.compytd)

	quit

	//--------------------------------------------------------------------
EXPGR(XBAL,expgramt,expgrpct,RecordUTBLCOMPLN compln)
	//--------------------------------------------------------------------

	/*

	Description:
 
		This routine will look up the portfolio balance passed in as
		XBAL and return the corresponding expected growth amount or
		%age as defined in the expected growth table.
 
	Arguments:
 
		XBAL : Temporary balance used to determine the
			commission calculation balance CBAL.
	Returns:
 
		: Expected growth ammount

		: Expected growth percentage

        */
 
	new expgrth,expgrcrcd,GTBL
 
	set GTBL=compln.gtbl

	// Check for multicurrency before evaluating and convert
	set expgrcrcd=Db.getOneRow("CRCD","UTBLEXPGRTHT","GTBL")
	if CRCD'=expgrcrcd set XBAL=$$MC^COMPFT(XBAL,CRCD,expgrcrcd)
 
	// End of period balance
	set EOPBAL=Db.prevVal("UTBLEXPGRTH","GTBL,XBAL+.00001")
	if EOPBAL="" quit

	// Expected growth amount
	set data=Db.getOneRow("EXPGRTH,EXGRPCT","UTBLEXPGRTH","GTBL,EOPBAL")

	set expgramt=data.piece($C(9),1)
	set expgrpct=data.piece($C(9),2)

	// Now set the currency back if necessary
	if (CRCD'=expgrcrcd),(expgramt) set expgramt=$$MC^COMPFT(expgramt,expgrcrcd,CRCD)

	quit

vSIG()	quit "59886^43501^Sanchez SCM Administrator^8029"	// Signature - LTD^TIME^USER^SIZE
