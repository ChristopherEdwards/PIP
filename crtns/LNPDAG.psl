LNPDAG	//;PAYMENT DUE ACTION GRID MAINTENANCE
	/*
	       ORIG:  Kathie Jalbuena (7070) - 10/09/87

	---- Revision History ------------------------------------------------
	
	06/12/06 - KUMARB - CR 21668
		   Modifed FILE section to remove the setting of processmode=0.
		   Modified VARB section to sort LNPDS2 records numerically by
		   UPLIMIT by using an intermediate array.  This prevents the
		   LNPDS2 records from being sorted in ASCII order by UPLIMIT
		   in Oracle environments.
	
	05/19/06 - GIRIDHAL - CR 21367
		   Modified FILE section to set mode to zero for LNPDAG before
		   calling bypassSave() so that an Insert is issued instead of
		   an Update.
		   	
	01/07/04 - RussellDS - CR7514
		   Eliminated the use of table PDAG1 (obsoleted) and replaced
		   with variables.
	
	03/21/03 - SRIVASTAVAN - 49451
		   Converted to PSL.	       
	 
	----------------------------------------------------------------------
	*/

CREATE 	//

	do INIT(0) 
	quit


UPD 	//

	do INIT(1) 
	quit


INQ 	//

	do INIT(2) 
	quit


DEL 	//

	do INIT(3) 
	quit


INIT(%ProcessMode) //

	new VFMQ,OLNTB
	set %PG=0 
	set %PAGE=$S(%ProcessMode>1:1,1:2)

	type RecordPDAG fPDAG
        do VPG(.fPDAG)
        quit


VPG(RecordPDAG fPDAG) // Page control

 	new FINISH,PDAGDATA
        set FINISH=0
        for  do { quit:FINISH
		if (%PG=1)&((%ProcessMode=2)!(%ProcessMode=3)) do { quit:ER
			do VARB(.fPDAG,.PDAGDATA())
			do VPG02(.fPDAG,.PDAGDATA)
			if ER set FINISH=1
			}
			
		else  if %PG=0 do {
			do VPG00(.fPDAG,.PDAGDATA)
			}
			
		else  if %PG=2 do {  quit:ER
			do VARB(.fPDAG,.PDAGDATA)
			do VPG02(.fPDAG,.PDAGDATA)
			if ER set FINISH=1
			}
			
		else  if %PG>0 do VPG01(.fPDAG)	
			
                if "DFQ"[VFMQ do VER(.fPDAG,.PDAGDATA) set FINISH=1 quit
                set %PG=%PG+1
                }
        quit


VPG00(RecordPDAG fPDAG,String PDAGDATA()) 	//

	if %ProcessMode=0 do {
		set %TAB("GRP")=".GRP1/TBL=[STBLGRP]GRP:QU ""[STBLGRP]CLS=L"""
		set %TAB("TABLE")=".UTBL1/XPP=D RET^LNPDAG"
		}
	if %ProcessMode do {
		set %TAB("GRP")=".GRP1/TBL=[PDAG]GRP:DISTINCT"
		set %TAB("TABLE")=".UTBL1/TBL=[PDAG]TABLE:QU ""[PDAG]GRP=<<GRP>>"""
		if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)
		}

	set %READ="@@%FN,,,GRP/REQ,TABLE/REQ"
	if %ProcessMode=2 set %READ=%READ_",IO/REQ"

	do ^UTLREAD 
	
	if VFMQ="Q" SET ER=1 quit

	if %ProcessMode=2,IO'=$I do OPEN^SCAIO quit:ER

	do VPG00A(.fPDAG,.PDAGDATA)

	quit


VPG00A(RecordPDAG fPDAG,String PDAGDATA()) // set up local array

	set fPDAG=Db.getRecord("PDAG","GRP=:GRP,TABLE=:TABLE",1)
	if fPDAG.getMode()=0 set (CNT,OPDST)=""
	else  set CNT=1,OPDST=fPDAG.pdst
	
	if %ProcessMode=2 do VARB(.fPDAG,.PDAGDATA) 
	quit


VPG01(RecordPDAG fPDAG) // Screen

	set fPDAG=Db.getRecord("PDAG","GRP=:GRP,TABLE=:TABLE",1)
	do DRV^USID(%ProcessMode,"LNPDAG1",.fPDAG) 

	do fPDAG.setAuditFlag(1) 

	if VFMQ="Q" set ER=1 quit

	// Force a second page.  This gets all data loaded.
	if VFMQ=+VFMQ quit
	set VFMQ=1 
	set %PG=1
	quit


VPG02(RecordPDAG fPDAG,String PDAGDATA()) // Screen I INQ

	do DRV^USID(%ProcessMode,"LNPDAG2",.fPDAG,.PDAGDATA) 

	if VFMQ="P" do VPG00A(.fPDAG,.PDAGDATA)

	quit


ERR	//

	set ER=1 

	do ^UTLERR

	set VFMQ="Q"
	quit


VER(RecordPDAG fPDAG,String PDAGDATA()) //

	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit
	do FILE(.fPDAG,.PDAGDATA)

	do END 

	quit


FILE(RecordPDAG fPDAG,String PDAGDATA()) // File data

	if %ProcessMode=3 do { quit
		type RecordLNPDS lnpds=Db.getRecord("LNPDS","TABLE=:OPDST")
		set X=lnpds.ct-1
		set lnpds.ct=X
		do Db.delete("PDAG","GRP=:GRP AND TABLE=:TABLE")
		do Db.delete("LNPDAG","GRP=:GRP AND TABLE=:TABLE")
		}

	do CHECK

	if '$D(PDAGDATA(1)),OPDST'=PDST do NULL
	else  do {
		do Db.delete("PDAG","GRP=:GRP AND TABLE=:TABLE")
		do Db.delete("LNPDAG","GRP=:GRP AND TABLE=:TABLE")
		do fPDAG.setMode(0)		
		}
	
	do fPDAG.bypassSave()

	if $D(PDAGDATA(1)) do {
		for I=1:1:%REPEAT do {
			set UL=$P(PDAGDATA(I),"|",4)
			type RecordLNPDAG lnpdag=Db.getRecord("LNPDAG","GRP=:GRP,TABLE=:TABLE,PFF=0,LIMIT=:UL",1)
			set lnpdag.pymt=$P(PDAGDATA(I),"|",2)
			do lnpdag.bypassSave()
			type RecordLNPDAG lnpdag=Db.getRecord("LNPDAG","GRP=:GRP,TABLE=:TABLE,PFF=1,LIMIT=:UL",1)
			set lnpdag.pymt=$P(PDAGDATA(I),"|",3)
			do lnpdag.bypassSave()
			set NEWARR(0,UL)=$P(PDAGDATA(I),"|",2)
			set NEWARR(1,UL)=$P(PDAGDATA(I),"|",3)
			}
		}

	quit

END	//
	if ER!(%ProcessMode=2)!(%ProcessMode=4) quit
	set TABLE=$G(TABLE)

	if VFMQ="Q" do {
		
		// Table ~p1 not created
		if %ProcessMode=0 set RM=$$^MSG(2593,TABLE) quit
		
		// Table ~p1 not modified
		if %ProcessMode=1 set RM=$$^MSG(2596,TABLE) quit
		
		// Table ~p1 not deleted
		set RM=$$^MSG(2595,TABLE)
		}
	else  do {
		
		// Table ~p1 created
		if %ProcessMode=0 set RM=$$^MSG(2590,TABLE) quit
 
		// Table ~p1 modified
		if %ProcessMode=1 set RM=$$^MSG(2592,TABLE) quit
 
		// Table ~p1 deleted
		set RM=$$^MSG(2591,TABLE)
                }
	set ER="W"
	quit


NULL	//

	do Db.delete("PDAG","GRP=:GRP AND TABLE=:TABLE")
	do Db.delete("LNPDAG","GRP=:GRP AND TABLE=:TABLE")
	for I=1:1:%REPEAT do {
		for J=0,1 do {
			set UL=PDAG(I)			
			type RecordLNPDAG lnpdag=Db.getRecord("LNPDAG","GRP=:GRP,TABLE=:TABLE,PFF=:J,LIMIT=:UL",1)
			set lnpdag.pymt=""
			do lnpdag.bypassSave()
			}
		}
	quit


CHECK	//

	if '%ProcessMode do UPDAT quit
	if OPDST=PDST quit
	type RecordLNPDS lnpds=Db.getRecord("LNPDS","TABLE=:OPDST")
	set CT=lnpds.ct
	set CT=CT-1
	set lnpds.ct=CT
	//do lnpds.bypassSave()
	do UPDAT
	quit


UPDAT	//
	type RecordLNPDS lnpds=Db.getRecord("LNPDS","TABLE=:PDST")
	set CT=lnpds.ct
	set CT=CT+1
	set lnpds.ct=CT
	//do lnpds.bypassSave()
	quit


VARB(RecordPDAG fPDAG,String PDAGDATA()) // init variables

	type String TMPARR(),UPLIMIT
	type Number I

	set PDST=fPDAG.pdst
	if '%ProcessMode set NEW=""
	if %ProcessMode set NEW=$S(OPDST=PDST:0,1:1)
	
	type ResultSet rs=Db.select("UPLIMIT","LNPDS2","TABLE=:PDST")
	while rs.next() do {
		set UPLIMIT=rs.getCol("UPLIMIT")
		set TMPARR(UPLIMIT)=""
		}
	
	set I=0
	set UPLIMIT=""
	for  set UPLIMIT=TMPARR(UPLIMIT).order() quit:UPLIMIT.isNull()  do {
		set I=I+1
		set $P(PDAGDATA(I),"|",1)=$J("",12-$L(UPLIMIT))_UPLIMIT	// Formatted upper limit
		set $P(PDAGDATA(I),"|",4)=UPLIMIT			// Upper limit
		set $P(PDAGDATA(I),"|",2)=""				// Partial
		type RecordLNPDAG lnpdag=Db.getRecord("LNPDAG","GRP=:GRP,TABLE=:TABLE,PFF=0,LIMIT=:UPLIMIT",1)
		if lnpdag.getMode()=1 set $P(PDAGDATA(I),"|",2)=lnpdag.pymt
		type RecordLNPDAG lnpdag=Db.getRecord("LNPDAG","GRP=:GRP,TABLE=:TABLE,PFF=1,LIMIT=:UPLIMIT",1)	
		if lnpdag.getMode()=1 set $P(PDAGDATA(I),"|",3)=lnpdag.pymt	// Full
		else  set $P(PDAGDATA(I),"|",3)=""
		}
		set %REPEAT=I
	quit


RET	//
	if Db.isDefined("PDAG","GRP=:GRP,TABLE=:X") set ET="LNONFIL" do ERR
	quit

			
 #OPTION ResultClass ON
Public String vSIG()	quit "60429^10262^Balasubramonian Sankar^6406"	// Signature - LTD^TIME^USER^SIZE
