R01S496	// SCA552 - Consolidated RPA Deposit Notice
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:51 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date CUTOFF=%SystemDate
	type Number REPR=0
	type Date STRT=%SystemDate
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"

	set RID="SCA552"
	set RN="Consolidated RPA Deposit Notice"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("CUTOFF")="|10|||||D CUTOFF^IRADBS||D|Cutoff Date|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("REPR")="|1|||[STBLREPR]||||N|Reprint|||||"
	set %TAB("STRT")="|10||||||K vhdg|D|Start Date|||||"
	set %TAB("VIN4")="|255||[RSPDNOT]ACN|[RSPDNOT]ACN:DISTINCT:NOVAL||S ACN=X I X'=""ALL"" S %EXT=1 D ^UCIF D EXT^DBSQRY D EXT^DBSQRY||T|Customer Number|||||"
	set %TAB("VIN5")="|255||[RSPDNOT]RPASEQ|^RSPDNOT(ACN,||S RPASEQ=X D EXT^DBSQRY||T|RPA Sequence|||||"
	set %TAB("VIN6")="|255||[RSPDNOT]CID|[RSPDNOT]CID:DISTINCT:NOVAL||S %EXT=1 D CIDPP^IRADBS D EXT^DBSQRY|D CID552^IRADBS|T|Account Number|||||"
	set %TAB("VIN7")="|255||[RSPDNOT]TSEQ|ARRAY(||K vhdg D EXT^DBSQRY|D SCA551^IRADBS|T|History Sequence|||||"

	set %READ="IO/REQ,STRT#0,CUTOFF#0,REPR#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date STRT,CUTOFF
	type public Number REPR
	type public String VIN4,VIN5,VIN6,VIN7
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ACN,AD(),CID,CONAM,CONT,CONTAX,DEP1,DEP2,EDAT,NAM,PER1,PER1S,PLANID,REPNOT,RID,RN,RPASEQ,TAXID,TSEQ,VL,VLOF,VRF(),VSTATS(),YR60,YREND,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA552",RN="Consolidated RPA Deposit Notice"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA552","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=99999999			// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[RSPDNOT]ACN "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[RSPDNOT]RPASEQ "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[RSPDNOT]CID "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[RSPDNOT]TSEQ "_VIN7,SEQ=SEQ+1
		set DQQRY(SEQ)="[RSPDNOT]EFD '< <<STRT>>",SEQ=SEQ+1
		set DQQRY(SEQ)="[RSPDNOT]EFD '> <<CUTOFF>>",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("RSPDNOT,IRATYPE,HIST,DEP,ACNADDR,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"RSPDNOT.EFD,IRATYPE.ACN,IRATYPE.RPASEQ,DEP.CID,RSP"
	set VSELECT=VSELECT_"DNOT.ACN,RSPDNOT.RPASEQ,RSPDNOT.CID,RSPDNOT.TSEQ,R"
	set VSELECT=VSELECT_"SPDNOT.NDATE,RSPDNOT.TAMT,CIF.TAXID,IRATYPE.PLANID"
	set VSELECT=VSELECT_",CIF.NAM,IRATYPE.SPOUSEID"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"RSPDNOT,IRATYPE,HIST,DEP,ACNADDR,CIF",VWHERE,"RSPDNOT.ACN,RSPDNOT.RPASEQ,RSPDNOT.CID,RSPDNOT.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc5,vovc6,vovc7,vovc8
	set vovc5="",vovc6="",vovc7="",vovc8=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc5,vc5,vovc6,vc6,vovc7,vc7,vovc8,vc8
	set vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// RSPDNOT.EFD
	set vc2=V.piece($C(9),2)			// IRATYPE.ACN
	set vc3=V.piece($C(9),3)			// IRATYPE.RPASEQ
	set vc4=V.piece($C(9),4)			// DEP.CID
	set vc5=V.piece($C(9),5)			// RSPDNOT.ACN
	set vc6=V.piece($C(9),6)			// RSPDNOT.RPASEQ
	set vc7=V.piece($C(9),7)			// RSPDNOT.CID
	set vc8=V.piece($C(9),8)			// RSPDNOT.TSEQ
	set vc9=V.piece($C(9),9)			// RSPDNOT.NDATE
	set vc10=V.piece($C(9),10)			// RSPDNOT.TAMT
	set vc11=V.piece($C(9),11)			// CIF.TAXID
	set vc12=V.piece($C(9),12)			// IRATYPE.PLANID
	set vc13=V.piece($C(9),13)			// CIF.NAM
	set vc14=V.piece($C(9),14)			// IRATYPE.SPOUSEID
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10
 type public Date EDAT,PER1,PER1S
 type public Number ACN,CID,DEP1,DEP2,REPR,RPASEQ,TSEQ

 type Date E=vc1

 if ((EDAT>E)!(EDAT.isNull())) set EDAT=E
 if '(DEP1.exists()) set DEP1=0
 if '(DEP2.exists()) set DEP2=0

 if REPR do {
        set ACN=vc2
        set RPASEQ=vc3
        set CID=vc4
        }
 else  do {
        set ACN=vc5
        set RPASEQ=vc6
        set CID=vc7
        }

 set TSEQ=vc8  

 // Generate original notice before reprint for tran~p1, acct#~p2, RPA seq#~p3 and cust#~p4
 if REPR,((vc9).isNull()) do {

	type String MSG
	set MSG=$$^MSG(987,TSEQ,CID,RPASEQ,ACN)
	write $$MSG^%TRMVT(MSG,1,0,1,22,5)
	hang 2
 }

 if E'<PER1S,E<PER1 set DEP1=DEP1+vc10
 else  set DEP2=DEP2+vc10

	quit

VPREAQ	// Pre-processor (after query)

 /*
 09/21/05 - DHANALAKSHMI R - 16851
             Converted to PSL

 **************************************************************************
  Use the cutoff date to calculate the 60 day period.
 **************************************************************************
 */

 type public String AD()
 type public Date CUTOFF
 type String %DS 
 type public Date EDAT,PER1,PER1S

 set %DS="1/1/"_$$YEAR^SCADAT(CUTOFF,1) 
 set PER1S=%DS.toDate(),EDAT=""
 set PER1=%DS.toDate()+60
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc5,vovc5,vc6,vovc6,vc7,vovc7,vc8,vovc8
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc5'=+vc5) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb2!(+vovc6'=+vc6) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc7'=+vc7) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String ACN,AD(),CID,CONT,CONTAX,CUTOFF,DEP1,DEP2,EDAT,IOSL,NAM,PER1,PER1S,PLANID,REPNOT,REPR,RPASEQ,TAXID,TSEQ,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),YR60,YREND,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc5,vovc6,vovc7,vovc8

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc7,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()  set VL=V
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM4	// Summary
	type public String ACN,AD(),CID,CONT,CONTAX,CUTOFF,DEP1,DEP2,EDAT,I,IOSL,NAM,PER1,PER1S,PLANID,REPNOT,REPR,RPASEQ,TAXID,TSEQ,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),YR60,YREND,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc5,vovc6,vovc7,vovc8

	if 'VT(4) quit
	if VLC+20>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$E(REPNOT,1,50) set VL="                        "_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="        "_$E(vc11,1,11)
	set VL=VL_$J("",20-VL.length())_$E(vc12,1,12)
	do VP3 quit:VFMQ!verror.get()  set V=$E(YR60,1,4)
	set VL=VL_$J("",33-VL.length())_V
	set V=$S(+DEP1=0:$J("",12),1:$J($FN(DEP1,",",2),12)) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",38-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V=$E(YREND,1,4)
	set VL=VL_$J("",51-VL.length())_V
	set V=$S(+DEP2=0:$J("",12),1:$J($FN(DEP2,",",2),12)) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",56-VL.length())_V
	do VOM
	set VL="" do VOM
	do VP7 quit:VFMQ!verror.get()  set V=$E(CONT,1,30) set VL="                                                 "_V
	do VOM
	set VL="      "_$E(vc13,1,40)
	do VOM
	do VP8 quit:VFMQ!verror.get()  set V=$E(AD(1),1,40) set VL="      "_V
	set VL=VL_$J("",49-VL.length())_$E(CONTAX,1,11)
	do VOM
	set VL="      "_$E(AD(2),1,40)
	do VOM
	set VL="      "_$E(AD(3),1,40)
	do VOM
	set VL="      "_$E(AD(4),1,40)
	do VOM
	set VL="      "_$E(AD(5),1,40)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ACN,AD(),CID,CONAM,CONT,CONTAX,CUTOFF,DEP1,DEP2,EDAT,NAM,PER1,PER1S,PLANID,REPNOT,REPR,RID,RN,RPASEQ,TAXID,TSEQ,VL,YR60,YREND,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc5,vovc6,vovc7,vovc8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	use IO if 'VLC,'vcrt set $Y=1
	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,RSPDNOT]CID

 type public Number ACN,CID,REPR,RPASEQ,TSEQ
 type public String V,VL,VO
 
 // Deposit Notice Enhancement Retrofit-AMT 01/10/97

 type RecordRSPDNOT rspdnot=Db.getRecord("RSPDNOT","ACN=:ACN,RPASEQ=:RPASEQ,CID=:CID,TSEQ=:TSEQ",1)

 if REPR set rspdnot.RDATE=%SystemDate       // Set RDATE
 else  set rspdnot.NDATE=%SystemDate       // Set NDATE

 set rspdnot.UID=%UserID.get()       // Set UID
 do rspdnot.save()

 set (V,VL,VO)=""
	quit

VP2	// Column pre-processor - Variable: REPNOT

 type public String REPNOT
 type public Number REPR

 // I18N=OFF
 set REPNOT=$S(REPR=1:"Replacement/Amendment of Receipt #__________",1:"")

 // I18N=ON
	quit

VP3	// Column pre-processor - Variable: YR60

 type public Number DEP1,YR60
 type public Date EDAT

 set YR60=""
 quit:+DEP1=0
 set YR60=$ZD(EDAT,"YEAR")
	quit

VP4	// Column post-processor - Variable: DEP1

 type public Number DEP1
 type public String V

 if +DEP1=0 set (DEP1,V)="" quit
	quit

VP5	// Column pre-processor - Variable: YREND

 type public Number DEP2,YREND
 type public Date EDAT

 set YREND=""
 quit:DEP2=0
 set YREND=$ZD(EDAT,"YEAR")
	quit

VP6	// Column post-processor - Variable: DEP2

 type public Number DEP2
 type public String V

 if +DEP2=0 set (DEP2,V)="" quit
	quit

VP7	// Column pre-processor - Variable: CONT

	type public String vc14
 type public String CONT,CONTAX
 type public Number ACN

 type String C

 set C=vc14
 set CONTAX="",CONT=""

 if 'C.isNull() do {
        type RecordCIF cif=Db.getRecord("CIF","ACN=:C")
        set CONT=cif.NAM
        set CONTAX=cif.TAXID
        }

	quit

VP8	// Column pre-processor - Variable: AD(1)

 type public Number ACN,ER,RPASEQ

 do ^UTLADDR(1,"AD",5,0,"IRATYPE",ACN,RPASEQ)
 set ER=0
	quit
