V01S381(%ProcessMode,RecordLNICNV LNICNV(),RecordLN LN)   //PBS - LN - SID= <LNICNV1> Interim-to-Permanent Loan Conversion
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:58 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNICNV1",VPGM=$T(+0),VSNAME="Interim-to-Permanent Loan Conversion"
 set VFSN("LNICNV")="zLNICNV"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=17 do VPR(.LNICNV(),.LN),VDA1(.LNICNV(),.LN),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.LNICNV(),.LN),VPR(.LNICNV(),.LN),VDA1(.LNICNV(),.LN)
 if %ProcessMode do VLOD(.LNICNV(),.LN) quit:$G(ER)  do VPR(.LNICNV(),.LN),VDA1(.LNICNV(),.LN)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.LNICNV(),.LN)
	quit


VNEW(RecordLNICNV LNICNV(),RecordLN LN) // Initialize arrays if %O=0
 
 do VDEF(.LNICNV(),.LN)
 do VLOD(.LNICNV(),.LN)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordLNICNV LNICNV(),RecordLN LN)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordLNICNV LNICNV(),RecordLN LN) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=17
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNICNV LNICNV(),RecordLN LN) // Display screen prompts
 set VO="8||13|0"
 set VO(0)="|0"
 set VO(1)=$C(3,2,12,2,0,0,0,0,0,0)_"01TInterim Loan"
 set VO(2)=$C(3,16,8,2,0,0,0,0,0,0)_"01TPmt Freq"
 set VO(3)=$C(3,29,9,2,0,0,0,0,0,0)_"01TFirst Pmt"
 set VO(4)=$C(3,41,4,2,0,0,0,0,0,0)_"01TTerm"
 set VO(5)=$C(3,51,8,2,0,0,0,0,0,0)_"01TInt Rate"
 set VO(6)=$C(3,66,12,2,0,0,0,0,0,0)_"01TPerm Acc't #"
 set VO(7)=$C(4,16,8,2,0,0,0,0,0,0)_"01TPymt Amt"
 set VO(8)=$C(4,51,9,2,0,0,0,0,0,0)_"01TInt Index"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordLNICNV LNICNV(),RecordLN LN)  // Display screen data
 new V
 s DESC=$G(DESC)
 //
 set VO="9|9|13|0"
 set VO(9)=$C(1,2,0,2,0,0,0,0,0,0)_"01T"_$G(DESC)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+0,DY=6 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.LNICNV(),.LN)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNICNV LNICNV(),RecordLN LN)  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'LNICNV(I).getPointer() do {
     set LNICNV(I)=Class.new("RecordLNICNV","")
     }
 set VO(VX+1)=$C(DY,1,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).CID
 set VO(VX+2)=$C(DY,15,12,2,0,0,0,0,0,0)_"00F"_$E(LNICNV(I).DIST1FRE,1,12)
 set VO(VX+3)=$C(DY,29,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(LNICNV(I).DIST1ND)
 set VO(VX+4)=$C(DY,41,8,2,0,0,0,0,0,0)_"00T"_$E(LNICNV(I).TRM,1,8)
 set V=$S(LNICNV(I).IRN="":"",1:$J(LNICNV(I).IRN,0,5)) set VO(VX+5)=$C(DY,51,8,2,0,0,0,0,0,0)_"00N"_$S(LNICNV(I).IRN="":"",1:$J(LNICNV(I).IRN,0,5))
 set VO(VX+6)=$C(DY,66,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).PCID
 set V=$S(LNICNV(I).PMTPI="":"",1:$J(LNICNV(I).PMTPI,0,2)) set VO(VX+7)=$C(DY+1,12,12,2,0,0,0,0,0,0)_"00$"_$S(LNICNV(I).PMTPI="":"",1:$J(LNICNV(I).PMTPI,0,2))
 set VO(VX+8)=$C(DY+1,51,15,2,0,0,0,0,0,0)_"00T"_$E(LNICNV(I).INDEX,1,15)
 set DY=DY+2,VX=VX+8
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordLNICNV LNICNV(),RecordLN LN)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=2
 set %MODOFF=1,%MOD=8,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=5+(%REPEAT*2),BLKSIZ=(89*%REPEAT)+0,PGM=$T(+0),DLIB="SYSDEV",DFID="LNICNV,LN",VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("LNICNV")="zLNICNV"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,1,0)_"21T|*DESC|[*]@T1"
 set %TAB(2)=$C(5,0,12)_"00N12401|1|[LNICNV]CID|||do VP1^V01S381(.LNICNV,.LN)"
 set %TAB(3)=$C(5,14,12)_"00F12402|1|[LNICNV]DIST1FRE|||do VP2^V01S381(.LNICNV,.LN)"
 set %TAB(4)=$C(5,28,10)_"00D12407|1|[LNICNV]DIST1ND|||do VP3^V01S381(.LNICNV,.LN)"
 set %TAB(5)=$C(5,40,8)_"00T12403|1|[LNICNV]TRM|||do VP4^V01S381(.LNICNV,.LN)"
 set %TAB(6)=$C(5,50,8)_"00N12404|1|[LNICNV]IRN|||||||5"
 set %TAB(7)=$C(5,65,12)_"00N12406|1|[LNICNV]PCID|||do VP5^V01S381(.LNICNV,.LN)"
 set %TAB(8)=$C(6,11,12)_"00$12408|1|[LNICNV]PMTPI|||||||2"
 set %TAB(9)=$C(6,50,15)_"00T12405|1|[LNICNV]INDEX|||do VP6^V01S381(.LNICNV,.LN)"
 do VTBL(.LNICNV(),.LN)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordLNICNV LNICNV(),RecordLN LN) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit



 quit

VSPP

 do VSPPREQ(.LNICNV(),.LN) if ER quit


VSPPREQ(RecordLNICNV LNICNV(),RecordLN LN) 
 //_______________________________________________________
 //  User Defined Required Data Item Definitions
 //_______________________________________________________

 set ER=0

 for I=%MODS:1:%REPEAT+%MODS-1 do VR1(.LNICNV(),.LN) if ER set NI=((I-1)*8)+(1+%MODOFF) quit
 quit

VR1(RecordLNICNV LNICNV(),RecordLN LN) 

 // ([LNICNV]CID,[LNICNV]DIST1FRE,[LNICNV]DIST1ND,[LNICNV]TRM,[LNICNV]IRN)

 I (LNICNV(I).CID'=""),(LNICNV(I).DIST1FRE'=""),(LNICNV(I).DIST1ND'=""),(LNICNV(I).TRM'=""),(LNICNV(I).IRN'="") quit


 // ([LNICNV]CID-,[LNICNV]DIST1FRE-,[LNICNV]DIST1ND-,[LNICNV]TRM-,[LNICNV]IRN-)

 I (LNICNV(I).CID=""),(LNICNV(I).DIST1FRE=""),(LNICNV(I).DIST1ND=""),(LNICNV(I).TRM=""),(LNICNV(I).IRN="") quit

 do VR99 quit

VR99 
 set RM="Missing required field(s)/data item set definition error"
 set ER=1 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordLNICNV LNICNV(),RecordLN LN) //
	type public Boolean ER
	type public Number CID
	type public String ET,X,Y

	type Number A

	do CK1^LNICFE1(.LN) quit:ER

	if 'X.length() quit

	if X '= Y quit

	set A = LN.relcid
 
	if +A,Db.isDefined("ACN","CID=:A") do {  quit
		set ER = 1
		set ET = "RECOF" 
		do ^UTLERR 
	 	}

	if +A do {  quit
		do DEFAULT^DBSMACRO("LNICNV.PCID", A)
		do DEFAULT^DBSMACRO("LNICNV.CID", LNICNV(I(1)).cid)
		do DEFAULT^DBSMACRO("LNICNV.INDEX", LN.index)
		do DEFAULT^DBSMACRO("LNICNV.IRN", LN.irn)
		}

	if (LNICNV(I(1)).pcid).length() set A = LNICNV(I(1)).pcid do {
		do DEFAULT^DBSMACRO("LNICNV.CID", LNICNV(I(1)).cid)
		do DEFAULT^DBSMACRO("LNICNV.INDEX", LN.index)
		do DEFAULT^DBSMACRO("LNICNV.IRN", LN.irn)
		}

	kill CID
	do @UCID 
	set A = CID 
	kill CID 
	set X = Y 
	do DEFAULT^DBSMACRO("LNICNV.PCID", A)
VP2(RecordLNICNV LNICNV(),RecordLN LN) //
        type public Number CTYPE, X
	
	type Number TYPE
	type String FRE
 
	if 'X.length() quit
	set FRE = X
	set TYPE=CTYPE

	do CK5^LNICFE1(.LN)

	do DEFAULT^DBSMACRO("LNICNV.DIST1ND", LN.DIST1ND)

	quit

VP3(RecordLNICNV LNICNV(),RecordLN LN) //
	do CK4^LNICFE1 
	
	quit
  
VP4(RecordLNICNV LNICNV(),RecordLN LN) //
	type public Number X

	type Number TRM

	set TRM = X 
	do ^UMDT quit 

VP5(RecordLNICNV LNICNV(),RecordLN LN) //
	type String UCID

	set UCID = "^UCIDSCA"

	do CK1B^LNICFE1 
	
	quit
VP6(RecordLNICNV LNICNV(),RecordLN LN) //
	do ^UINDX 
	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNICNV LNICNV()
 type Public RecordLN LN
 do VPR(.LNICNV(),.LN)
 do VDA1(.LNICNV(),.LN)
 do ^DBSPNT()
 quit

VW(RecordLNICNV LNICNV(),RecordLN LN)
 do VDA1(.LNICNV(),.LN)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNICNV LNICNV(),RecordLN LN)
 do VDA1(.LNICNV(),.LN)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNICNV LNICNV()
 type Public RecordLN LN
 do VDA1(.LNICNV(),.LN)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordLNICNV LNICNV()
 if sn="LNICNV" do vSET1(LNICNV(I(1)),di,X)
 type Public RecordLN LN
 if sn="LN" do vSET2(.LN,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordLNICNV LNICNV,di,X)
 do LNICNV.setAuditFlag(1)
 set LNICNV.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordLN LN,di,X)
 do LN.setAuditFlag(1)
 set LN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordLNICNV LNICNV()
 if fid="LNICNV" quit $$vREAD1(LNICNV(I(1)),di)
 type Public RecordLN LN
 if fid="LN" quit $$vREAD2(.LN,di)
 quit ""
vREAD1(RecordLNICNV LNICNV,di)
 quit LNICNV.@di
vREAD2(RecordLN LN,di)
 quit LN.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
