V01S578(%ProcessMode,RecordTRN %A)   //PBS -  - SID= <TRN> Tran Code Maintenance - General 
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
 // This screen displays the attributes common to all types of transactions.  These
 // attributes include the characteristics of the code, associated processing
 // routines, and other indicators that control the tracking and usage of the code.
 // 
 // For further information, refer to the "Transaction Code Maintenance Reference
 // Manual."
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="TRN",VPGM=$T(+0),VSNAME="Tran Code Maintenance - General "
 set VFSN("TRN")="zA"
 set vPSL=1
 set KEYS(1)=%A.ETC
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.%A),VDA1(.%A),^DBSPNT()

 if '%ProcessMode do VNEW(.%A),VPR(.%A),VDA1(.%A)
 if %ProcessMode do VLOD(.%A) quit:$G(ER)  do VPR(.%A),VDA1(.%A)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.%A)
	quit


VNEW(RecordTRN %A) // Initialize arrays if %O=0
 
 do VDEF(.%A)
 do VLOD(.%A)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordTRN %A)
 if %A.PCFD32="" set %A.PCFD32=0
 if %A.PCFD33="" set %A.PCFD33=0
 if %A.STPNT="" set %A.STPNT=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordTRN %A) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordTRN %A) // Display screen prompts
 set VO="37||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,6,18,0,0,0,0,0,0,0)_"01T Transaction Code:"
 set VO(2)=$C(1,52,7,0,0,0,0,0,0,0)_"01T Class:"
 set VO(3)=$C(1,62,7,1,0,0,0,0,0,0)_"01T Group:"
 set VO(4)=$C(2,6,18,1,0,0,0,0,0,0)_"01T Code Description:"
 set VO(5)=$C(3,2,22,0,0,0,0,0,0,0)_"01TStatement Description:"
 set VO(6)=$C(5,7,17,0,0,0,0,0,0,0)_"01T Posting Program:"
 set VO(7)=$C(6,3,21,0,0,0,0,0,0,0)_"01T E/C Posting Program:"
 set VO(8)=$C(7,9,15,0,0,0,0,0,0,0)_"01TDefault Amount:"
 set VO(9)=$C(7,43,16,0,0,0,0,0,0,0)_"01TDefault Account:"
 set VO(10)=$C(8,8,16,0,0,0,0,0,0,0)_"01TVariable Amount:"
 set VO(11)=$C(8,44,15,0,0,0,0,0,0,0)_"01TMaximum Amount:"
 set VO(12)=$C(9,4,20,0,0,0,0,0,0,0)_"01TDefault Cost Center:"
 set VO(13)=$C(9,45,14,0,0,0,0,0,0,0)_"01TType of Check:"
 set VO(14)=$C(10,2,22,0,0,0,0,0,0,0)_"01TDefault Currency Code:"
 set VO(15)=$C(10,49,10,0,0,0,0,0,0,0)_"01TBin Group:"
 set VO(16)=$C(11,1,23,0,0,0,0,0,0,0)_"01T Debit (0), Credit (1):"
 set VO(17)=$C(11,37,22,0,0,0,0,0,0,0)_"01TTransaction Type Code:"
 set VO(18)=$C(12,19,5,0,0,0,0,0,0,0)_"01TType:"
 set VO(19)=$C(12,32,16,0,0,0,0,0,0,0)_"01TSBN Transaction:"
 set VO(20)=$C(12,55,14,0,0,0,0,0,0,0)_"01TSBN Tran Type:"
 set VO(21)=$C(13,14,10,0,0,0,0,0,0,0)_"01TEnclosure:"
 set VO(22)=$C(13,31,17,0,0,0,0,0,0,0)_"01TValidate Voucher:"
 set VO(23)=$C(13,53,16,0,0,0,0,0,0,0)_"01TDetail Transfer:"
 set VO(24)=$C(14,10,14,0,0,0,0,0,0,0)_"01TPrint Receipt:"
 set VO(25)=$C(14,28,20,0,0,0,0,0,0,0)_"01TProhibit Teller Use:"
 set VO(26)=$C(14,52,8,0,0,0,0,0,0,0)_"01TProhibit"
 set VO(27)=$C(14,60,9,0,0,0,0,0,0,0)_"01T Offline:"
 set VO(28)=$C(15,8,16,0,0,0,0,0,0,0)_"01TSkip Stmt Print:"
 set VO(29)=$C(15,41,18,0,0,0,0,0,0,0)_"01TStmt Print Option:"
 set VO(30)=$C(16,7,17,0,0,0,0,0,0,0)_"01TStatement Detail:"
 set VO(31)=$C(16,41,18,0,0,0,0,0,0,0)_"01TStatement Summary:"
 set VO(32)=$C(17,7,17,0,0,0,0,0,0,0)_"01TC/S Misc Field 1:"
 set VO(33)=$C(18,7,17,0,0,0,0,0,0,0)_"01TC/S Misc Field 2:"
 set VO(34)=$C(19,8,16,0,0,0,0,0,0,0)_"01TTransaction Set:"
 set VO(35)=$C(20,3,4,0,0,0,0,0,0,0)_"01TPre:"
 set VO(36)=$C(21,2,5,0,0,0,0,0,0,0)_"01TPost:"
 set VO(37)=$C(22,1,6,0,0,0,0,0,0,0)_"01TBatch:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordTRN %A)  // Display screen data
 new V
 //
 set VO="73|38|13|0"
 set VO(38)=$C(1,25,12,2,0,0,0,0,0,0)_"01T"_$E(%A.ETC,1,12)
 set VO(39)=$C(1,60,1,2,0,0,0,0,0,0)_"01T"_$E(%A.CLS,1,1)
 set VO(40)=$C(1,70,6,2,0,0,0,0,0,0)_"00T"_$E(%A.GRP,1,6)
 set VO(41)=$C(2,25,35,2,0,0,0,0,0,0)_"00T"_$E(%A.DES,1,35)
 set VO(42)=$C(3,25,40,2,0,0,0,0,0,0)_"00T"_$E(%A.PRDES,1,40)
 set VO(43)=$C(5,25,40,2,0,0,0,0,0,0)_"00T"_$E(%A.PGM,1,40)
 set VO(44)=$C(6,25,40,2,0,0,0,0,0,0)_"00T"_$E(%A.PGMEC,1,40)
 set V=$S(%A.AMT="":"",1:$J(%A.AMT,0,2)) set VO(45)=$C(7,25,12,2,0,0,0,0,0,0)_"00$"_$S(%A.AMT="":"",1:$J(%A.AMT,0,2))
 set VO(46)=$C(7,60,12,2,0,0,0,0,0,0)_"00N"_%A.ACN
 set VO(47)=$C(8,25,15,2,0,0,0,0,0,0)_"00T"_$E(%A.VARTAMT,1,15)
 set V=$S(%A.TRMAX="":"",1:$J(%A.TRMAX,0,2)) set VO(48)=$C(8,60,12,2,0,0,0,0,0,0)_"00$"_$S(%A.TRMAX="":"",1:$J(%A.TRMAX,0,2))
 set VO(49)=$C(9,25,6,2,0,0,0,0,0,0)_"00N"_%A.DFTCC
 set VO(50)=$C(9,60,6,2,0,0,0,0,0,0)_"00T"_$E(%A.CKTYP,1,6)
 set VO(51)=$C(10,25,3,2,0,0,0,0,0,0)_"00T"_$E(%A.CRCD,1,3)
 set VO(52)=$C(10,60,4,2,0,0,0,0,0,0)_"00N"_%A.BINGRP
 set VO(53)=$C(11,25,1,2,0,0,0,0,0,0)_"00N"_%A.DC
 set VO(54)=$C(11,60,6,2,0,0,0,0,0,0)_"00T"_$E(%A.TCODE,1,6)
 set VO(55)=$C(12,25,1,2,0,0,0,0,0,0)_"00N"_%A.TRNTYP
 set VO(56)=$C(12,49,1,2,0,0,0,0,0,0)_"00L"_$S(%A.SBTRN:"Y",1:"N")
 set VO(57)=$C(12,70,2,2,0,0,0,0,0,0)_"00N"_%A.SBTRNTYP
 set VO(58)=$C(13,25,1,2,0,0,0,0,0,0)_"00L"_$S(%A.ENC:"Y",1:"N")
 set VO(59)=$C(13,49,1,2,0,0,0,0,0,0)_"00L"_$S(%A.VOUCHER:"Y",1:"N")
 set VO(60)=$C(13,70,1,2,0,0,0,0,0,0)_"00L"_$S(%A.DTL:"Y",1:"N")
 set VO(61)=$C(14,25,1,2,0,0,0,0,0,0)_"00L"_$S(%A.RECEIPT:"Y",1:"N")
 set VO(62)=$C(14,49,1,2,0,0,0,0,0,0)_"00L"_$S(%A.SGT:"Y",1:"N")
 set VO(63)=$C(14,70,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PROHOFF:"Y",1:"N")
 set VO(64)=$C(15,25,1,2,0,0,0,0,0,0)_"00L"_$S(%A.SKPP:"Y",1:"N")
 set VO(65)=$C(15,60,1,2,0,0,0,0,0,0)_"00T"_$E(%A.STPNT,1,1)
 set VO(66)=$C(16,25,12,2,0,0,0,0,0,0)_"00T"_$E(%A.STMTRD,1,12)
 set VO(67)=$C(16,60,12,2,0,0,0,0,0,0)_"00T"_$E(%A.STMTRS,1,12)
 set VO(68)=$C(17,25,40,2,0,0,0,0,0,0)_"00T"_$E(%A.SVMSC1,1,40)
 set VO(69)=$C(18,25,40,2,0,0,0,0,0,0)_"00T"_$E(%A.SVMSC2,1,40)
 set VO(70)=$C(19,25,12,2,0,0,0,0,0,0)_"00T"_$E(%A.TRNSET,1,12)
 set VO(71)=$C(20,8,73,2,0,0,0,0,0,0)_"00T"_$E(%A.PP,1,74)
 set VO(72)=$C(21,8,73,2,0,0,0,0,0,0)_"00T"_$E(%A.POP,1,74)
 set VO(73)=$C(22,8,73,2,0,0,0,0,0,0)_"00T"_$E(%A.PPB,1,74)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordTRN %A)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=36,VPT=1,VPB=22,PGM=$T(+0),DLIB="SYSDEV",DFID="TRN"
 set OLNTB=22008
 
 set VFSN("TRN")="zA"
 //
 // 
	
	
 set %TAB(1)=$C(0,24,12)_"20T12401|1|[TRN]ETC"
 set %TAB(2)=$C(0,59,1)_"21T12403|1|[TRN]CLS|[STBLTRNCLS]"
 set %TAB(3)=$C(0,69,6)_"01T12404|1|[TRN]GRP|[STBLLIBS]||do VP1^V01S578(.%A)"
 set %TAB(4)=$C(1,24,35)_"01T12406|1|[TRN]DES"
 set %TAB(5)=$C(2,24,40)_"00T12401|1|[TRN]PRDES"
 set %TAB(6)=$C(4,24,40)_"00T12405|1|[TRN]PGM|||do VP2^V01S578(.%A)"
 set %TAB(7)=$C(5,24,40)_"00T12408|1|[TRN]PGMEC|||do VP3^V01S578(.%A)"
 set %TAB(8)=$C(6,24,12)_"00$12407|1|[TRN]AMT|||||||2"
 set %TAB(9)=$C(6,59,12)_"00N12413|1|[TRN]ACN|||do VP4^V01S578(.%A)"
 set %TAB(10)=$C(7,24,15)_"00T12431|1|[TRN]VARTAMT|||do VP5^V01S578(.%A)"
 set %TAB(11)=$C(7,59,12)_"00$12412|1|[TRN]TRMAX|||do VP6^V01S578(.%A)||||2"
 set %TAB(12)=$C(8,24,6)_"00N12418|1|[TRN]DFTCC|[UTBLCCNTR]"
 set %TAB(13)=$C(8,59,6)_"00T12419|1|[TRN]CKTYP|[UTBLCHKS]"
 set %TAB(14)=$C(9,24,3)_"00T12424|1|[TRN]CRCD|[UTBLCRCDX]|||do VP7^V01S578(.%A)"
 set %TAB(15)=$C(9,59,4)_"00N12420|1|[TRN]BINGRP|[UTBLBING]"
 set %TAB(16)=$C(10,24,1)_"00N12402|1|[TRN]DC|[STBLDC]||||0|1|0"
 set %TAB(17)=$C(10,59,6)_"00T12415|1|[TRN]TCODE|[STBLVCODE]"
 set %TAB(18)=$C(11,24,1)_"00N12426|1|[TRN]TRNTYP|[STBLTRNTYP]||do VP8^V01S578(.%A)||||||2"
 set %TAB(19)=$C(11,48,1)_"00L12432|1|[TRN]SBTRN"
 set %TAB(20)=$C(11,69,2)_"00N12433|1|[TRN]SBTRNTYP|[STBLSBTSD]||do VP9^V01S578(.%A)"
 set %TAB(21)=$C(12,24,1)_"00L12404|1|[TRN]ENC|||||0|1"
 set %TAB(22)=$C(12,48,1)_"00L12411|1|[TRN]VOUCHER||||||1"
 set %TAB(23)=$C(12,69,1)_"00L12410|1|[TRN]DTL|||do VP10^V01S578(.%A)"
 set %TAB(24)=$C(13,24,1)_"00L12425|1|[TRN]RECEIPT|||do VP11^V01S578(.%A)|||1"
 set %TAB(25)=$C(13,48,1)_"00L12417|1|[TRN]SGT"
 set %TAB(26)=$C(13,69,1)_"00L12418|1|[TRN]PROHOFF"
 set %TAB(27)=$C(14,24,1)_"00L12406|1|[TRN]SKPP"
 set %TAB(28)=$C(14,59,1)_"00T12414|1|[TRN]STPNT|[STBLSTPNT]"
 set %TAB(29)=$C(15,24,12)_"00T12419|1|[TRN]STMTRD|[UTBLSTMTR]"
 set %TAB(30)=$C(15,59,12)_"00T12420|1|[TRN]STMTRS|[UTBLSTMTR]"
 set %TAB(31)=$C(16,24,40)_"00T12428|1|[TRN]SVMSC1"
 set %TAB(32)=$C(17,24,40)_"00T12429|1|[TRN]SVMSC2"
 set %TAB(33)=$C(18,24,12)_"00T12417|1|[TRN]TRNSET|[UTBLTRNSET]TRNSET:DISTINCT"
 set %TAB(34)=$C(19,7,73)_"00T12402|1|[TRN]PP|||||||||74"
 set %TAB(35)=$C(20,7,73)_"00T12401|1|[TRN]POP|||||||||74"
 set %TAB(36)=$C(21,7,73)_"00T12403|1|[TRN]PPB|||||||||74"
 do VTBL(.%A)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordTRN %A) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordTRN %A) //
 /*
 
   ---- Revision History------------------------------------------------
 
	06/07/04 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public String GRP,X

 set GRP=X

 quit
VP2(RecordTRN %A) //
 /*
 
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 
 */
 
 type Public String ER,X
 
 if 'X.isNull() set ER=$$DQ^%ZRTNS(X.piece("("))

 quit
VP3(RecordTRN %A) //
 /*
 
   ---- Revision History------------------------------------------------
 
	06/07/04 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 
 */
 
 type Public String ER,X

 if 'X.isNull() set ER=$$DQ^%ZRTNS(X.piece("("))

 quit
VP4(RecordTRN %A) //
 /*
 
   ---- Revision History------------------------------------------------
 
	03/09/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public String ER,RM,X

 if X.isNull() quit

 if %A.cls="M" do { quit
	// Invalid G/L account
	if 'Db.isDefined("GLAD","X") do Runtime.setErrMSG("TRN",1364) quit:ER
	}

 // Invalid ~p1 account
 if 'Db.isDefined("ACN","X") do Runtime.setErrMSG("TRN",1512,%A.grp) quit

 quit
VP5(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type String DI,FID
 type Public String ER,RM,X

 if X.isNull() quit
 
 // Invalid data item ~p1
 if X.piece(".",3)'="" do Runtime.setErrMSG("TRN",1298,X) quit:ER
 if X.piece(".",2)="" do Runtime.setErrMSG("TRN",1298,X) quit:ER

 set FID=X.piece(".",1)

 // Primary file must be DEP or LN
 if (FID'="LN")&(FID'="DEP") do Runtime.setErrMSG("TRN",8246) quit:ER

 set DI=X.piece(".",2)

 // Invalid data item ~p1
 if 'Db.isDefined("DBTBL1D","FID=:FID AND %LIBS=:%LIBS AND DI=:DI") do Runtime.setErrMSG("TRN",1298,X) quit:ER

 quit
VP6(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String ER,RM,X

 if X.isNull() quit

 // Default amount must be less than or equal to the maximum amount
 if X<%A.amt do Runtime.setErrMSG("TRN",777) quit:ER

 quit
VP7(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	06/07/04 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 if %A.cls'="M" do GOTO^DBSMACRO("[TRN]BINGRP")

 quit
VP8(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String ER,GRP,RM,X

 if X.isNull() set X=0
 quit:X=0

 /* 
    GRP is defined by a post-processor on [TRN]GRP.  If the transaction
    type entered is either a cash or check and the GRP is not IBS, an
    error will be returned.  This will prevent situations where a MISC
    transaction could be set up as a cash in, for example.
 */
 
 // Transaction type ~p1 may only be defined for group IBS
 if X=1!(X=2) if GRP'="IBS" do Runtime.setErrMSG("TRN",8618,X) quit:ER

 quit
VP9(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String ER,RM,X
 
 // Cannot define SBN type if SBN flag is disabled
 if ('X.isNull()),(%A.sbtrn="0") do Runtime.setErrMSG("TRN",4889) quit:ER

 quit
VP10(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	01/11/05 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String ER,RM,X

 // Must be miscellaneous transaction code
 if X,%A.cls'="M" do Runtime.setErrMSG("TRN",1813) quit:ER

 quit
VP11(RecordTRN %A) //
 /*
   ---- Revision History------------------------------------------------
 
	06/07/04 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 */

 type Public String ER,RM,X
 
 // Cannot define form ID if print receipt is disabled
 if (X="0"),(%A.formid'="") do Runtime.setErrMSG("TRN",4996) quit:ER

 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordTRN %A
 do VPR(.%A)
 do VDA1(.%A)
 do ^DBSPNT()
 quit

VW(RecordTRN %A)
 do VDA1(.%A)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordTRN %A)
 do VDA1(.%A)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordTRN %A
 do VDA1(.%A)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordTRN %A
 if sn="TRN" do vSET1(.%A,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordTRN %A,di,X)
 do %A.setAuditFlag(1)
 set %A.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordTRN %A
 if fid="TRN" quit $$vREAD1(.%A,di)
 quit ""
vREAD1(RecordTRN %A,di)
 quit %A.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
