R01S161	// SCA095 - Commercial Loan Trial Balance Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:44 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA095"
	set RN="Commercial Loan Trial Balance Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,GRP,RDES,RID,RN,RTDES,TRAIL,TTDES,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA095",RN="Commercial Loan Trial Balance Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA095","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"LN.CLS='L' AND LN.GRP='COM' AND ((LN.PCIDSTAT='0')"
		set VWHERE=VWHERE_" OR (LN.PCIDSTAT=''))"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Commercial Loan Trial Balance Report"
		set VBNRINFO("PGM")="R01S161"
		set VBNRINFO("RID")="SCA095"
		set VBNRINFO("TABLES")="LN,COL"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LN]TYPE"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LN]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:8 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LN.TYPE,LN.CID,LN.IRN,LN.BALCMP,LN.SUBT,COL.PROPCD,LN.CC,LN.PDSLD,LN.PDHLD,LN.INDEX,LN.ACR,LN.LCHG,LN.PSIA,LN.IYTD,LN.MCHG,LN.NCOA,LN.LNM,LN.ODT,LN.ONP,LN.TLD,LN.PMT,LN.INTFRE,LN.ORG,LN.DIST1ND,LN.PMTPI,LN.ICHND,LN.FSINV","LN,COL","LN.CLS='L' AND LN.GRP='COM' AND ((LN.PCIDSTAT='0') OR (LN.PCIDSTAT=''))","LN.TYPE,LN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27
	set vc1=V.piece($C(9),1)			// LN.TYPE
	set vc2=V.piece($C(9),2)			// LN.CID
	set vc3=V.piece($C(9),3)			// LN.IRN
	set vc4=V.piece($C(9),4)			// LN.BALCMP
	set vc5=V.piece($C(9),5)			// LN.SUBT
	set vc6=V.piece($C(9),6)			// COL.PROPCD
	set vc7=V.piece($C(9),7)			// LN.CC
	set vc8=V.piece($C(9),8)			// LN.PDSLD
	set vc9=V.piece($C(9),9)			// LN.PDHLD
	set vc10=V.piece($C(9),10)			// LN.INDEX
	set vc11=V.piece($C(9),11)			// LN.ACR
	set vc12=V.piece($C(9),12)			// LN.LCHG
	set vc13=V.piece($C(9),13)			// LN.PSIA
	set vc14=V.piece($C(9),14)			// LN.IYTD
	set vc15=V.piece($C(9),15)			// LN.MCHG
	set vc16=V.piece($C(9),16)			// LN.NCOA
	set vc17=V.piece($C(9),17)			// LN.LNM
	set vc18=V.piece($C(9),18)			// LN.ODT
	set vc19=V.piece($C(9),19)			// LN.ONP
	set vc20=V.piece($C(9),20)			// LN.TLD
	set vc21=V.piece($C(9),21)			// LN.PMT
	set vc22=V.piece($C(9),22)			// LN.INTFRE
	set vc23=V.piece($C(9),23)			// LN.ORG
	set vc24=V.piece($C(9),24)			// LN.DIST1ND
	set vc25=V.piece($C(9),25)			// LN.PMTPI
	set vc26=V.piece($C(9),26)			// LN.ICHND
	set vc27=V.piece($C(9),27)			// LN.FSINV
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number TRAIL,TYPE
 type public String GRP

 set TRAIL=1
 set (GRP,TYPE)=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		do VTRL0
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		set PN=VPN
		do ^DBSRWSTS(.VSTATS)			// Print statistics
		quit:VFMQ

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1		// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc11,vc4,vc14,vc12,vc15,vc16,vc8,vc13,vc3,vc5,vc6,vc7,vc9,vc10
	type Public String VSTATS

	set VT(2)=VT(2)+1
	set VT(2,1,1)=VT(2,1,1)+vc11			// @TOT([LN]ACR)
	set VT(2,2,1)=VT(2,2,1)+vc4			// @TOT([LN]BALCMP)
	set VT(2,3,1)=VT(2,3,1)+vc14			// @TOT([LN]IYTD)
	set VT(2,4,1)=VT(2,4,1)+vc12			// @TOT([LN]LCHG)
	set VT(2,5,1)=VT(2,5,1)+vc15			// @TOT([LN]MCHG)
	set VT(2,6,1)=VT(2,6,1)+vc16			// @TOT([LN]NCOA)
	set VT(2,7,1)=VT(2,7,1)+vc8			// @TOT([LN]PDSLD)
	set VT(2,8,1)=VT(2,8,1)+vc13			// @TOT([LN]PSIA)
	if VRWOPT("NOSTAT").get() quit
	do vstats^DBSRWUTL(1,vc3,vc4,"[LN]IRN|N|[LN]BALCMP|",.VSTATS)
	do vstats^DBSRWUTL(2,vc5,vc4,"[LN]SUBT|T|[LN]BALCMP|",.VSTATS)
	do vstats^DBSRWUTL(3,vc6,vc4,"[COL]PROPCD|N|[LN]BALCMP|",.VSTATS)
	do vstats^DBSRWUTL(4,vc7,vc4,"[LN]CC|N|[LN]BALCMP|",.VSTATS)
	do vstats^DBSRWUTL(5,vc3,vc8,"[LN]IRN|N|[LN]PDSLD|",.VSTATS)
	do vstats^DBSRWUTL(6,vc5,vc8,"[LN]SUBT|T|[LN]PDSLD|",.VSTATS)
	do vstats^DBSRWUTL(7,vc6,vc8,"[COL]PROPCD|N|[LN]PDSLD|",.VSTATS)
	do vstats^DBSRWUTL(8,vc7,vc8,"[LN]CC|N|[LN]PDSLD|",.VSTATS)
	do vstats^DBSRWUTL(9,vc3,vc9,"[LN]IRN|N|[LN]PDHLD|",.VSTATS)
	do vstats^DBSRWUTL(10,vc5,vc9,"[LN]SUBT|T|[LN]PDHLD|",.VSTATS)
	do vstats^DBSRWUTL(11,vc6,vc9,"[COL]PROPCD|N|[LN]PDHLD|",.VSTATS)
	do vstats^DBSRWUTL(12,vc7,vc9,"[LN]CC|N|[LN]PDHLD|",.VSTATS)
	do vstats^DBSRWUTL(13,vc10,vc4,"[LN]INDEX|T|[LN]BALCMP|",.VSTATS)
	quit

VDTL2	// Detail
	type public String %TIM,GRP,IOSL,RDES,RTDES,TRAIL,TTDES,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate

	if VLC+10>IOSL do VHDG0 quit:VFMQ

	set V=vc2,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,12) set VL=" "_V
	set VL=VL_$J("",14-VL.length())_$E(vc17,1,14)
	set VL=VL_$J("",29-VL.length())_$J(vc4,11,2)
	set VL=VL_$J("",41-VL.length())_$J($$DAT^%ZM(vc18),10)
	set VL=VL_$J("",52-VL.length())_$J(vc6,2)
	set VL=VL_$J("",55-VL.length())_$E(vc5,1,5)
	set VL=VL_$J("",61-VL.length())_$J(vc19,3)
	set VL=VL_$J("",65-VL.length())_$J($$DAT^%ZM(vc20),10)
	set V=vc11,VO=V set V=$J(V,8,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",76-VL.length())_V		// [SYSDEV,LN]ACR
	set VL=VL_$J("",85-VL.length())_$J(vc21,7,2)
	set VL=VL_$J("",93-VL.length())_$J(vc12,6,2)
	set VL=VL_$J("",100-VL.length())_$E(vc22,1,12)
	set VL=VL_$J("",113-VL.length())_$E(vc10,1,9)
	set VL=VL_$J("",123-VL.length())_$J(vc13,8,2)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                            "_$J(vc8,12,2)
	set VL=VL_$J("",41-VL.length())_$J(vc23,9,2)
	set VL=VL_$J("",51-VL.length())_$J(vc3,9,2)
	set VL=VL_$J("",65-VL.length())_$J($$DAT^%ZM(vc24),10)
	set VL=VL_$J("",76-VL.length())_$J(vc14,8,2)
	set VL=VL_$J("",85-VL.length())_$J(vc25,7,2)
	set VL=VL_$J("",93-VL.length())_$J(vc15,6,2)
	set VL=VL_$J("",100-VL.length())_$J($$DAT^%ZM(vc26),10)
	set VL=VL_$J("",113-VL.length())_$E(vc27,1,5)
	set VL=VL_$J("",119-VL.length())_$J(vc16,12,2)
	do VOM
	set VL="" do VOM
	quit

VSUM2	// Summary
	type public String %TIM,GRP,I,IOSL,RDES,RTDES,TRAIL,TTDES,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate

	if 'VT(2) quit
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	do VP3 quit:VFMQ!verror.get()  set V=TTDES_":" set VL=V
	set V=VT(2,2,1)					// @TOT([LN]BALCMP,)
	set VL=VL_$J("",25-VL.length())_$J(V,15,2)
	set V=VT(2,1,1)					// @TOT([LN]ACR,)
	set VL=VL_$J("",75-VL.length())_$J(V,9,2)
	set V=VT(2,4,1)					// @TOT([LN]LCHG,)
	set VL=VL_$J("",91-VL.length())_$J(V,8,2)
	set V=VT(2,8,1)					// @TOT([LN]PSIA,)
	set VL=VL_$J("",123-VL.length())_$J(V,8,2)
	do VOM
	set V=VT(2,7,1)					// @TOT([LN]PDSLD,)
	set VL="                         "_$J(V,15,2)
	set V=VT(2,3,1)					// @TOT([LN]IYTD,)
	set VL=VL_$J("",75-VL.length())_$J(V,9,2)
	set V=VT(2,5,1)					// @TOT([LN]MCHG,)
	set VL=VL_$J("",91-VL.length())_$J(V,8,2)
	set V=VT(2,6,1)					// @TOT([LN]NCOA,)
	set VL=VL_$J("",116-VL.length())_$J(V,15,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,GRP,RDES,RID,RN,RTDES,TRAIL,TTDES,TYPE,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if VPN do VTRL0
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA095)"
	set VL=VL_$J("",97-VL.length())_"System Date:"
	set VL=VL_$J("",110-VL.length())_$E($$DAT^%ZM(TJD,$G(%MSKD)),1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(RDES,1,30) set VL=V
	do VOM
	set VL="" do VOM
	set VL="    "_"Account # Account Title      Balance  Org Date  PC Subt  Pmt  Last Trn   Acr Int Payment LC Due  Intc Fre    Index       Invacr"
	do VOM
	set VL="                                "_"Bal Sold  Org Bal   Int Rate      Next Due   Int YTD P&I Amt MC Due  Next Chg    Invnm      Chg-Off"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VTRL0	// Page Trailer
	type Public Number IOSL,verror,vh,VFMQ,VLC,VT(),VX()
	type Public String %TIM,GRP,RDES,RTDES,TRAIL,TTDES,TYPE,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate
	type Number I
	type String VL

	set VL=""
	for I=VLC:1:IOSL-4 do VOM

	do VP5 quit:VFMQ!verror.get()  set V=RTDES_":" do VP6 quit:VFMQ!verror.get()  set VL=V
	do VOM
	set V=0						// @TOT([LN]BALCMP,)
	for I=0:1:2 set V=V+VT(I,2,1)
	set VL="                         "_$J(V,15,2)
	set V=0						// @TOT([LN]ACR,)
	for I=0:1:2 set V=V+VT(I,1,1)
	set VL=VL_$J("",75-VL.length())_$J(V,9,2)
	set V=0						// @TOT([LN]LCHG,)
	for I=0:1:2 set V=V+VT(I,4,1)
	set V=$J(V,8,2) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",91-VL.length())_V		// @TOT([LN]LCHG,)
	set V=0						// @TOT([LN]PSIA,)
	for I=0:1:2 set V=V+VT(I,8,1)
	set V=$J(V,8,2) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",123-VL.length())_V		// @TOT([LN]PSIA,)
	do VOM
	set V=0						// @TOT([LN]PDSLD,)
	for I=0:1:2 set V=V+VT(I,7,1)
	set VL="                         "_$J(V,15,2)
	set V=0						// @TOT([LN]IYTD,)
	for I=0:1:2 set V=V+VT(I,3,1)
	set VL=VL_$J("",75-VL.length())_$J(V,9,2)
	set V=0						// @TOT([LN]MCHG,)
	for I=0:1:2 set V=V+VT(I,5,1)
	set VL=VL_$J("",91-VL.length())_$J(V,8,2)
	set V=0						// @TOT([LN]NCOA,)
	for I=0:1:2 set V=V+VT(I,6,1)
	set VL=VL_$J("",116-VL.length())_$J(V,15,2)
	do VOM
	quit

VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,GRP,RDES,RTDES,TRAIL,TTDES,TYPE,vovc1,vovc2,vrundate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	do VP9 quit:VFMQ!verror.get()  set V="====================================================================================================================================" set VL=V
	do VOM
	set VL="Report Totals:"
	set V=0						// @TOT([LN]BALCMP,0)
	for I=0:1:2 set V=V+VT(I,2,1)
	set VL=VL_$J("",25-VL.length())_$J(V,15,2)
	set V=0						// @TOT([LN]ACR,0)
	for I=0:1:2 set V=V+VT(I,1,1)
	set VL=VL_$J("",75-VL.length())_$J(V,9,2)
	set V=0						// @TOT([LN]LCHG,0)
	for I=0:1:2 set V=V+VT(I,4,1)
	set VL=VL_$J("",91-VL.length())_$J(V,8,2)
	set V=0						// @TOT([LN]PSIA,0)
	for I=0:1:2 set V=V+VT(I,8,1)
	set VL=VL_$J("",123-VL.length())_$J(V,8,2)
	do VOM
	set V=0						// @TOT([LN]PDSLD,0)
	for I=0:1:2 set V=V+VT(I,7,1)
	set VL="                         "_$J(V,15,2)
	set V=0						// @TOT([LN]IYTD,0)
	for I=0:1:2 set V=V+VT(I,3,1)
	set VL=VL_$J("",75-VL.length())_$J(V,9,2)
	set V=0						// @TOT([LN]MCHG,0)
	for I=0:1:2 set V=V+VT(I,5,1)
	set VL=VL_$J("",91-VL.length())_$J(V,8,2)
	set V=0						// @TOT([LN]NCOA,0)
	for I=0:1:2 set V=V+VT(I,6,1)
	set VL=VL_$J("",116-VL.length())_$J(V,15,2)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,LN]CID

 type public Number TRAIL
 set TRAIL=1
	quit

VP2	// Column post-processor - [SYSDEV,LN]ACR

 // S $P(LN(54),"|",1)=VO
	quit

VP3	// Column pre-processor - Variable: TTDES:

 type public Number TRAIL,TTDES,TYPE
 // Totals - Type
 set TTDES=$$^MSG(6307,TYPE)
 set TRAIL=0
	quit

VP4	// Column pre-processor - Variable: RDES

 type public Number TYPE
 type public String GRP,RDES

 // Report Totals
 if 'TYPE.length() set RDES=$$^MSG(6304) quit

 // Group  Product Type
 set RDES=$$^MSG(6309,GRP,TYPE)

 type RecordPRODDFTL proddftl=Db.getRecord("PRODDFTL","TYPE=:TYPE")

 set RDES=RDES_" - "_proddftl.des
	quit

VP5	// Column pre-processor - Variable: RTDES:

 type public Number TYPE
 type public String RTDES

 // Running Totals -
 set RTDES=$$^MSG(6308,TYPE)
	quit

VP6	// Column post-processor - Variable: RTDES:

 type public Number TRAIL
 type public String V,VL
 if TRAIL quit
 set V="",VL=""
	quit

VP7	// Column post-processor - @TOT([LN]LCHG,,$,8)

 I TRAIL Q
 S V="",VL=""
	quit

VP8	// Column post-processor - @TOT([LN]PSIA,,$,8)

 I TRAIL Q
 S V="",VL=""
	quit

VP9	// Column pre-processor - @CHR(=,132)

 I VLC>10 D VHDG0
	quit
