V00S553(%ProcessMode,RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1())   // -  - SID= <UTBLBING1> Document Control Bin Group
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:20 - kini
 // The Document Control Bin Group screen (UTBLBING1) displays a bin number,
 // the bin's description, cut indicator, and code and bin data.  This screen
 // displays when running the following functions:
 // 
 //     New Document Control Bin Group (BIN001)
 //     Document Control Bin Group Maintenance (BIN002)
 //     Document Control Bin Group Inquiry (BIN003)
 //     Document Control Bin Group Deletion (BIN004)
 // 
 // The information entered in this screen is stored in the Document Control Bin
 // Group Data user table (UTBLBING1) and is used by the Document Control Bin Cut
 // (BINCUT) function when accumulating transactions.
 // 
 // Refer to the Document Control Reference Manual for further reference.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLBING1",VPGM=$T(+0),VSNAME="Document Control Bin Group"
 set VFSN("UTBLBING")="zfUTBLBIN",VFSN("UTBLBING1")="zfUTBLBI1"
 set vPSL=1
 set KEYS(1)=fUTBLBIN.BINGRP
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=14 do VPR(.fUTBLBIN,.fUTBLBI1()),VDA1(.fUTBLBIN,.fUTBLBI1()),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fUTBLBIN,.fUTBLBI1()) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLBIN,.fUTBLBI1()),VPR(.fUTBLBIN,.fUTBLBI1()),VDA1(.fUTBLBIN,.fUTBLBI1())
 if %ProcessMode do VLOD(.fUTBLBIN,.fUTBLBI1()) quit:$G(ER)  do VPR(.fUTBLBIN,.fUTBLBI1()),VDA1(.fUTBLBIN,.fUTBLBI1())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLBIN,.fUTBLBI1())
 type Number ptr
 set ptr=""
 for  set ptr = fUTBLBI1(ptr).order() quit:ptr.isNull()  do {
     if fUTBLBI1(ptr).CODE="" kill fUTBLBI1(ptr)
     }
	quit


VNEW(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1()) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLBIN,.fUTBLBI1())
 do VLOD(.fUTBLBIN,.fUTBLBI1())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=14
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1()) // Display screen prompts
 set VO="4||13|"
 set VO(0)="|0"
 set VO(1)=$C(3,10,10,0,0,0,0,0,0,0)_"01TBin Group:"
 set VO(2)=$C(4,7,13,1,52,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(5,5,15,1,52,0,0,0,0,0)_"01T Cut Indicator:"
 set VO(4)=$C(7,21,17,0,52,0,0,0,0,0)_"01TCode          Bin"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1())  // Display screen data
 new V
 //
 set VO="8|5|13|"
 set VO(5)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(6)=$C(3,21,4,2,0,0,0,0,0,0)_"01N"_fUTBLBIN.BINGRP
 set VO(7)=$C(4,21,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLBIN.DESC,1,40)
 set VO(8)=$C(5,21,4,2,0,0,0,0,0,0)_"00T"_$E(fUTBLBIN.CUT,1,4)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+3,DY=9 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLBIN,.fUTBLBI1())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'fUTBLBI1(I).getPointer() do {
     set fUTBLBI1(I)=Class.new("RecordUTBLBING1","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY,21,6,2,0,0,0,0,0,0)_"00T"_$E(fUTBLBI1(I).CODE,1,6)
 set VO(VX+2)=$C(DY,36,4,2,0,0,0,0,0,0)_"00N"_fUTBLBI1(I).BIN
 set DY=DY+1,VX=VX+2
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=2,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=8+%REPEAT,BLKSIZ=(10*%REPEAT)+48,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLBING"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLBING")="zfUTBLBIN",VFSN("UTBLBING1")="zfUTBLBI1"
 //
 for I=6:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,20,4)_"21N12401|1|[UTBLBING]BINGRP"
 set %TAB(2)=$C(3,20,40)_"01T12401||[UTBLBING]DESC"
 set %TAB(3)=$C(4,20,4)_"01T12402||[UTBLBING]CUT|[STBLBINCUT]||do VP1^V00S553(.fUTBLBIN,.fUTBLBI1)"
 set %TAB(4)=$C(8,20,6)_"00T12402|1|[UTBLBING1]CODE|||do VP2^V00S553(.fUTBLBIN,.fUTBLBI1)|do VP3^V00S553(.fUTBLBIN,.fUTBLBI1)"
 set %TAB(5)=$C(8,35,4)_"00N12401|1|[UTBLBING1]BIN|[UTBLBIN]||do VP4^V00S553(.fUTBLBIN,.fUTBLBI1)"
 do VTBL(.fUTBLBIN,.fUTBLBI1())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1()) //
 type public Number NI

 set NI=NI+1

 if %ProcessMode=0 set fUTBLBI1(1).code="*"
 do DISPLAY^DBSMACRO("ALL")
VP2(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1()) //
 type public Boolean ER
 type public String X

 if X.isNull() do { quit
 	do GOTO^DBSMACRO("NEXT")
 	}             

 if fUTBLBIN.cut="ETC",'X.isNull() do { quit:ER
	type RecordTRN trn=Db.getRecord("TRN", "ETC=:X",1)
 	if 'trn.getMode() quit 
 	if trn.cls'="*" quit
 	
	// Miscellaneous transactions not allowed
	do Runtime.setErrMSG("STBLMSG",8356)
 	}

 if X="*" do CHANGE^DBSMACRO("TBL","") quit

 if fUTBLBIN.cut="CRCD" quit

 type ResultSet rs=Db.select("BINGRP","UTBLBING1","CODE=:X AND BINGRP<>:fUTBLBIN.bingrp")

 // ~p1 already exists in group ~p2
 if rs.next() do Runtime.setErrMSG("UTBLBING1","3020",X_"~"_rs.getCol(1)) 

 quit
VP3(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1()) //
 if fUTBLBIN.cut="ETC" do CHANGE^DBSMACRO("TBL","[TRN]")
 else  do CHANGE^DBSMACRO("TBL","[CRCD]") 
VP4(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1()) //
 type public Boolean ER
 type public String X

 // Data required
 if 'fUTBLBI1(I(1)).code.isNull(),X.isNull() do Runtime.setErrMSG("UTBLBING1","741") quit:ER
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLBING fUTBLBIN
 type Public RecordUTBLBING1 fUTBLBI1()
 do VPR(.fUTBLBIN,.fUTBLBI1())
 do VDA1(.fUTBLBIN,.fUTBLBI1())
 do ^DBSPNT()
 quit

VW(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1())
 do VDA1(.fUTBLBIN,.fUTBLBI1())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1())
 do VDA1(.fUTBLBIN,.fUTBLBI1())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLBING fUTBLBIN
 type Public RecordUTBLBING1 fUTBLBI1()
 do VDA1(.fUTBLBIN,.fUTBLBI1())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLBING fUTBLBIN
 if sn="UTBLBING" do vSET1(.fUTBLBIN,di,X)
 type Public RecordUTBLBING1 fUTBLBI1()
 if sn="UTBLBING1" do vSET2(fUTBLBI1(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLBING fUTBLBIN,di,X)
 do fUTBLBIN.setAuditFlag(1)
 set fUTBLBIN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLBING1 fUTBLBI1,di,X)
 do fUTBLBI1.setAuditFlag(1)
 set fUTBLBI1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLBING fUTBLBIN
 if fid="UTBLBING" quit $$vREAD1(.fUTBLBIN,di)
 type Public RecordUTBLBING1 fUTBLBI1()
 if fid="UTBLBING1" quit $$vREAD2(fUTBLBI1(I(1)),di)
 quit ""
vREAD1(RecordUTBLBING fUTBLBIN,di)
 quit fUTBLBIN.@di
vREAD2(RecordUTBLBING1 fUTBLBI1,di)
 quit fUTBLBI1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLBING fUTBLBIN,RecordUTBLBING1 fUTBLBI1())  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type public String ER
 // Cannot delete bin group 0 (zero)
 if fUTBLBIN.BINGRP="0",%ProcessMode=3 do Runtime.setErrMSG("STBLMSG",432) quit:ER
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
