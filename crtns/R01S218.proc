R01S218	// SCA164 - Internal Bill Detail Purge Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number NOKIL=1
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA164"
	set RN="Internal Bill Detail Purge Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("NOKIL")="|1|||||||L|Anticipated|||||"
	set %TAB("VIN2")="|255||[LN]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""L"""""":NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN3")="|255||[LN]TYPE|[PRODDFTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN4")="|255||[LNBIL1]CID|[LNBIL1]CID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Account Number|||||"

	set %READ="IO/REQ,NOKIL#1,VIN2#0,VIN3#0,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Number NOKIL
	type public String VIN2,VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ANTICPRUN,BILTOT,CID,CIDTOT,CLS,CNT,CONAM,PRNTFLG,PRODUCT(),RET,RID,RN,SCHSEQ,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA164",RN="Internal Bill Detail Purge Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA164","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[LNBIL1]CID#1#12,[LN]CRCD#15#3,[LN]TYPE#20#4,[LNBIL1]SCHSEQ#26#3,[LNBIL1]CTAB#31#12,[LNBIL1]CBCD#45#10,[LNBIL1]CDPD#57#10,[LNBIL1]CPID#69#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LN]GRP "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[LNBIL1]CID "_VIN4,SEQ=SEQ+1
		set DQQRY(SEQ)="[LNBIL1]SCHSEQ>0",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNBIL1,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Group"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Product Type"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Account Number"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Internal Bill Detail Purge Report"
		set VBNRINFO("PGM")="R01S218"
		set VBNRINFO("RID")="SCA164"
		set VBNRINFO("TABLES")="LNBIL1,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LN]GRP"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LN]TYPE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNBIL1]CID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNBIL1]SCHSEQ"

		set VBNRINFO("DOC",1)="The Internal Bill Detail Purge Report (SCA164) lists all satisfied internal"
		set VBNRINFO("DOC",2)="bills to be purged from the Internal Bill Detail file LNBIL1 for the "
		set VBNRINFO("DOC",3)="specified accounts, product types, and/or product groups.  The system does"
		set VBNRINFO("DOC",4)="not purge unsatisfied bills or any other related information from other files"
		set VBNRINFO("DOC",5)="(e.g., the system does not purge escrow account information)."
		set VBNRINFO("DOC",6)=""
		set VBNRINFO("DOC",7)="This report allows the institution to preview the entries prior to actually "
		set VBNRINFO("DOC",8)="removing them.  This report also verifies entries that are actually purged."
		set VBNRINFO("DOC",9)=""
		set VBNRINFO("DOC",10)="Refer to the Payment Due Processing Reference Manual for further information."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNBIL1.CID,LNBIL1.SCHSEQ,LN.TYPE,LN.GRP,LN.CRCD,LN"
	set VSELECT=VSELECT_"BIL1.CTAB,LNBIL1.CBCD,LNBIL1.CDPD,LNBIL1.CPID"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNBIL1,LN",VWHERE,"LN.GRP,LN.TYPE,LNBIL1.CID,LNBIL1.SCHSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc4,vovc3,vovc1,vovc2
	set vovc4="",vovc3="",vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc4,vc4,vovc3,vc3,vovc1,vc1,vovc2,vc2
	set vovc4=vc4,vovc3=vc3,vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
	set vc1=V.piece($C(9),1)			// LNBIL1.CID
	set vc2=V.piece($C(9),2)			// LNBIL1.SCHSEQ
	set vc3=V.piece($C(9),3)			// LN.TYPE
	set vc4=V.piece($C(9),4)			// LN.GRP
	set vc5=V.piece($C(9),5)			// LN.CRCD
	set vc6=V.piece($C(9),6)			// LNBIL1.CTAB
	set vc7=V.piece($C(9),7)			// LNBIL1.CBCD
	set vc8=V.piece($C(9),8)			// LNBIL1.CDPD
	set vc9=V.piece($C(9),9)			// LNBIL1.CPID
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3
	type public String ER, PRODUCT()
	type public Number CID, CNT, SCHSEQ, RET, TYPE
	type public Boolean NOKIL, PRNTFLG

	set PRNTFLG = 0  // purged bill seq print flag
	set CNT = 0	 // bill counter

	set CID = vc1
	set SCHSEQ = vc2
	set TYPE = vc3

	// RET, the number of bills to retain 
	set RET = PRODUCT(TYPE).get() if (RET = "") set RET = 12		
	
	set CNT = CNT + 1
	
	set PRNTFLG = $$BILCHK^LNBLPRG(CID,SCHSEQ,RET,CNT)

	// Purge the bill if not Anticipated run and bill qualifies for purge
	if PRNTFLG = 1,NOKIL = 0 do BILPRG^LNBLPRG(CID,SCHSEQ)	

	quit

VPREAQ	// Pre-processor (after query)

	type public Number BILTOT, CIDTOT, TYPE
	type public String CLS, PRODUCT()

	set CLS = "L"

	set BILTOT = 0
	set CIDTOT = 0
	set TYPE = ""

	// Build PRODUCT(TYPE) array containing the number of satisfied bill 
	// sequences that should be left on file after bill file purge is run

	type ResultSet rs = Db.select("TYPE,BILSAV","PRODCTL","CLS=:CLS")
	while rs.next() do {
		set PRODUCT(rs.getCol("TYPE"))=rs.getCol("BILSAV")
		}
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc4,vovc4,vc3,vovc3,vc1,vovc1,vc2,vovc2
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc4'=vc4) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb2!(+vovc3'=+vc3) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc1'=+vc1) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %TIM,ANTICPRUN,BILTOT,CID,CIDTOT,CLS,CNT,ER,IOSL,NOKIL,PRNTFLG,PRODUCT(),RET,SCHSEQ,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc1,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()  set VL=V
	set V=vc5,VO=V set V=$E(V,1,3) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",14-VL.length())_V		// [SYSDEV,LN]CRCD
	set V=vc3,VO=V set V=$J(V,5) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",18-VL.length())_V		// [SYSDEV,LN]TYPE
	set V=vc2,VO=V set V=$J(V,4) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",24-VL.length())_V		// [SYSDEV,LNBIL1]SCHSEQ
	set VL=VL_$J("",29-VL.length())_$J($FN(vc6,",",2),13)
	set VL=VL_$J("",44-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",56-VL.length())_$J($$DAT^%ZM(vc8),10)
	set V=vc9,VO=V set V=$J($FN(V,",",2),13) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",67-VL.length())_V		// [SYSDEV,LNBIL1]CPID
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ANTICPRUN,BILTOT,CID,CIDTOT,CLS,CNT,CONAM,NOKIL,PRNTFLG,PRODUCT(),RET,RID,RN,SCHSEQ,TYPE,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",46-VL.length())_"Run Date:"
	set VL=VL_$J("",56-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA164)"
	set VL=VL_$J("",48-VL.length())_"System:"
	set VL=VL_$J("",56-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	do VP6 quit:VFMQ!verror.get()  set V=$E(ANTICPRUN,1,11) set VL=" "_V
	do VOM
	set VL="" do VOM
	do VP7 quit:VFMQ!verror.get()  set V="Account" set VL="     "_V
	set VL=VL_$J("",13-VL.length())_"Curr  Type  Seq  Total Billed  Bill Date   Due Date       Remaining"
	do VOM
	set VL="================================================================================"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,ANTICPRUN,BILTOT,CID,CIDTOT,CLS,CNT,ER,NOKIL,PRNTFLG,PRODUCT(),RET,SCHSEQ,TYPE,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Total Accounts:"
	set VL=VL_$J("",20-VL.length())_$J(CIDTOT,12)
	do VOM
	set VL="Total Bill Entries: "
	set VL=VL_$J("",20-VL.length())_$J(BILTOT,12)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,LNBIL1]CID

	type public Number CID, CIDTOT, TCID, TTYPE
	type public String TCRCD, V, VL
	type public Boolean PRNTFLG

	// Don't print the same CID for multiple bill sequences
	if (TCID = CID) set V = "" set VL = ""
	else  do {
		set TCRCD = "" 
		set TTYPE = ""
		if (PRNTFLG = 1) set CIDTOT = CIDTOT + 1
		}

	set TCID = CID

	quit

VP2	// Column post-processor - [SYSDEV,LN]CRCD

	type public String vc5
	type public String TCRCD,V,VL

	if TCRCD=vc5 set (V,VL)=""
	set TCRCD=vc5
	quit

VP3	// Column post-processor - [SYSDEV,LN]TYPE

	type public String vc3
	type public String TTYPE, V, VL

	if TTYPE=vc3 set (V,VL)=""
	set TTYPE=vc3
 
	quit

VP4	// Column post-processor - [SYSDEV,LNBIL1]SCHSEQ

	type public Number BILTOT
	type public Boolean PRNTFLG

	// The bill qualifies for purging, sum it to the total
	if PRNTFLG set BILTOT = BILTOT + 1

	quit

VP5	// Column post-processor - [SYSDEV,LNBIL1]CPID

	type public Boolean PRNTFLG
	type public String V, VL

	// The bill is not qualifying for purging, suppress the line
	if 'PRNTFLG set V="" set VL="" quit

	quit

VP6	// Column pre-processor - Variable: ANTICPRUN

	type public String ANTICPRUN
	type public Boolean NOKIL

	set ANTICPRUN=$S(NOKIL:"Anticipated",1:"Actual")
 
	quit

VP7	// Column pre-processor - Account

	type public Number TCID = ""
	type public String TCRCD = ""	
	type public Number TTYPE = ""	
	quit
