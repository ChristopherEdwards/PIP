PURGE	  	/*
	ORIG: satyanas - 12/06/2005
	DESC: Utility to purge globals

	---- Comments --------------------------------------------------------

	---- Revision History ------------------------------------------------

	12/06/05 - chhabris - 18155
		   Converted to PSL.
	
	----------------------------------------------------------------------
 	*/
 
        type public Boolean ER,KILL
        type public Number %PG
        type public String COLLIST(),HDG(),RM,VFMQ
        type Date EXP
        type String DESC,EXT,FILE,IO,OUT,REP,SPL,SPLFILE
        type Number CNT,LNCT
        
        type RecordPRGINI PRGINI
 
        set (%ProcessMode,%PG,ER)=0
        set SPL=CUVAR.spldir
 
	if SPL.isNull() set SPL=$$SCAU^%TRNLNM("DIR")
 
        set SPLFILE=$$FILE^%TRNLNM("PURGE.REP",SPL)
 
        set PRGINI=Db.getRecord("PRGINI",,1)
        set PRGINI.dev=SPLFILE
        set PRGINI.ant=1
 
        do DRV^USID(%ProcessMode,"PRGINI",.PRGINI)
 
        if VFMQ="Q" quit

	if 'PRGINI.exists() quit

	set FILE=PRGINI.file
        set REP=PRGINI.dev
        set EXP=PRGINI.exp

        if PRGINI.ant set KILL=0
        else  set KILL=1
 
        type RecordPRG PRG=Db.getRecord("PRG","FILE=:FILE",1)
        set DESC=PRG.desc
        set EXT=PRG.ext
       
        set HDG(1)=PRG.hdg1
         	
 	set LNCT=0
        set OUT="SAVE."_EXT
        set OUT=SPL_OUT
        
        type IO out
	if KILL do { quit:ER
        
                set IO=OUT
                set out=Class.new("IO")
                set out.fileName=OUT
                set out.openParams="NEWV/WRITE"
                do out.open()
 		do out.write($$^MSG(6969, out.fileName))
 		
                // Error opening ~p1
                if ER set RM=$$^MSG(989,OUT) quit
               
                }
 
        if REP.isNull() set REP=$I
        set IO=REP
 
        type IO rep=Class.new("IO")
        set rep.fileName=REP
        set rep.openParams="WRITE"
        do rep.open()
 
        // Error opening ~p1
        if ER set RM=$$^MSG(989,REP) quit
 
        do HDG
        set CNT=0
 
        // Writing to ~p1
        if KILL use 0 write !!,$$^MSG(5734,OUT) do ^%T write !
        
        do EXEC(.rep,.out)
 
        quit
 
 
EXEC( IO rep, 
      IO out)    

        type public Boolean KILL
	type public String FILE

	if FILE="CHECK" do CHECK(.rep,.out)
	if FILE="EUROCHK" do EUROCHK(.rep,.out)
	if FILE="FLOAT" do FLOAT(.rep,.out)
	if FILE="PERM" do PERM(.rep,.out)
	if FILE="REST" do REST(.rep,.out)
	if FILE="STOP1" do STOP1(.rep,.out)
	if FILE="STOP2" do STOP2(.rep,.out)
	if FILE="STOP3" do STOP3(.rep,.out)
	if FILE="STOP4" do STOP4(.rep,.out)
	if FILE="STOP5" do STOP5(.rep,.out)
	if FILE="STOP6" do STOP6(.rep,.out)
	if FILE="STOP7" do STOP7(.rep,.out)
	if FILE="STOP8" do STOP8(.rep,.out)
	if FILE="STOP9" do STOP9(.rep,.out)

	if KILL do {
		do out.write("EOD")
		do out.close()		
		}

        do END(.rep)

        quit


CHECK( IO rep,
       IO out)        
	
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),%JD,PNTX
	type Date EXPDT
	type String KEYVAL
	type String KEY1,KEY2

	if KILL do {
		do out.write($$HEADER("HLD8",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("HLD8")
  	while rs.next() do {
                type RecordHLD8 hld=rs.getRecord("HLD8")
		set EXPDT=hld.expdt
		if EXPDT'>%JD do {
			set PNTX=$J(hld.cid,12)_"      "_EXPDT.toString("MM/DD/YEAR")_"     "_$J(hld.totamt,12,2)
			do PSDLOOP(.rep)
			if KILL do {
				set KEY1=hld.cid
				set KEY2=hld.expdt
				set KEYVAL=" "_KEY1_","_KEY2_" "
				do DATA(COLLIST("HLD8"),"HLD8","CID=:KEY1 AND EXPDT=:KEY2",KEYVAL)
				do Db.delete("HLD8","CID=:KEY1 AND EXPDT=:KEY2")
				}
  			}	
		}
	quit


EUROCHK( IO rep,
	 IO out)
	 
	type public Boolean ER,KILL
	type public Date EXP
	type public String COLLIST(),PNTX,RM,STSNEW
	type Date ISSD
	type String KEY1,KEY2,KEYVAL
	
	if KILL do {
		do out.write($$HEADER("CHECK",.COLLIST()))
		do out.write("EOH") 
		}

	type DbSet rs=Db.selectDbSet("CHECK","ISSD<=:EXP")
	while rs.next() do {

                type RecordCHECK check=rs.getRecord("CHECK")
                do CHKACT^CHKPROC("CHKPRG",check.chknum,,check.chks,,.STSNEW) set:ER (ER,RM)=""
               
                type RecordACN acn=Db.getRecord("ACN","CID=:check.cid")
                set ISSD=check.issd
             	
             	set PNTX=$J(check.cid,12)_"            "_acn.lnm_"          "_$J(acn.type,7)_"          "_check.chks_"          "_check.chknum_"         "_ISSD.toString("MM/DD/YEAR")_"        "_check.chksts
             		
		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=check.chks
			set KEY2=check.chknum
			set KEYVAL=" "_check.chks_","_check.chknum_" "
			do DATA(COLLIST("CHECK"),"CHECK","CHKS=:KEY1 AND CHKNUM=:KEY2",KEYVAL)
			do Db.delete("CHECK","CID=:KEY1 AND chknum=:KEY2")
			}                                   	 	 	
  		}	
	
	quit
	
	
FLOAT( IO rep,
       IO out)        
	
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),%JD,PNTX
	type Date EXPDT
	type String KEYVAL
	type String KEY1,KEY2

	if KILL do {
		do out.write($$HEADER("HLD7",.COLLIST())) 
		do out.write("EOH")
		}

        type DbSet rs=Db.selectDbSet("HLD7")
  	while rs.next() do {
                type RecordHLD7 hld=rs.getRecord("HLD7")
                set EXPDT=hld.expdt
                if EXPDT'>%JD do { 
			set PNTX=$J(hld.cid,12)_"      "_EXPDT.toString("MM/DD/YEAR")_"     "_$J(hld.totamt,12,2)
			do PSDLOOP(.rep)
			if KILL do {
				set KEY1=hld.cid
				set KEY2=hld.expdt
				set KEYVAL=" "_KEY1_","_KEY2_" "
				do DATA(COLLIST("HLD7"),"HLD7","CID=:KEY1 AND EXPDT=:KEY2",KEYVAL)
				do Db.delete("HLD7","CID=:KEY1 AND EXPDT=:KEY2")
				}
  			}
		}
	quit

						      
PERM( IO rep,
      IO out) 	

	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL
	type String KEY1,KEY2
	
	if KILL do {
		do out.write($$HEADER("PHLD",.COLLIST()))
		do out.write("EOH")
		}
		
	type DbSet rs=Db.selectDbSet("PHLD","EXPDT<=:EXP")
        while rs.next() do {
                type RecordPHLD phld=rs.getRecord("PHLD")

		set EXPDT=phld.expdt
		set PNTX=$J(phld.cid,12)_"      "_EXPDT.toString("MM/DD/YEAR")_"     "_$J(phld.amt,12,2)
		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=phld.cid
			set KEY2=phld.seq
			set KEYVAL=" "_KEY1_","_KEY2_" "
			do DATA(COLLIST("PHLD"),"PHLD","CID=:KEY1 AND SEQ=:KEY2",KEYVAL)
			do Db.delete("PHLD","CID=:KEY1 AND SEQ=:KEY2")
			}
		}   
	          
        quit
        

REST( IO rep,
      IO out)
      
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String GRP,KEYVAL,REST,RFLG
	type String KEY1,KEY2
	type Number CID
	
	if KILL do {
		do out.write($$HEADER("RFLG",.COLLIST()))
		do out.write("EOH")
		}
        
        type DbSet rs=Db.selectDbSet("RFLG","EXDT<=:EXP")
  	while rs.next() do {

		set (REST,GRP)=""

		type RecordRFLG rflg=rs.getRecord("RFLG")
		set EXPDT=rflg.exdt
		set RFLG=rflg.rflg
		set CID=rflg.cid
	
		type ResultSet rs=Db.select("GRP","ACN","CID=:CID")
		if rs.next() set GRP=rs.getCol("GRP")
		
		type ResultSet rs1=Db.select("DESC","UTBLRFLG","GRP=:GRP and RFLG=:RFLG")
		if rs1.next() set REST=rs1.getCol("DESC")
		set REST=rflg.rflg_" - "_REST
		
		set PNTX=$J(rflg.cid,12)_"        "_EXPDT.toString("MM/DD/YEAR")_"      "_REST.get()

		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=rflg.cid
			set KEY2=rflg.rflg
			set KEYVAL=" "_KEY1_","_KEY2_" "
			do DATA(COLLIST("RFLG"),"RFLG","CID=:KEY1 AND RFLG=:KEY2",KEYVAL)
			do Db.delete("RFLG","CID=:KEY1 AND RFLG=:KEY2")
			}
  		}
	quit


STOP1( IO rep,
       IO out)        
	
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL,KEYVAL1
	type String KEY1,KEY2,KEY3

	if KILL do {
		do out.write($$HEADER("STOP1",.COLLIST()))
		do out.write($$HEADER("STOP1A",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP1","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP1 stop1=rs.getRecord("STOP1")
		set EXPDT=stop1.exp

		set PNTX="     1"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"1 , "_stop1.acn_" , "_stop1.seq
		
		do PSDLOOP(.rep)

		if KILL do {
			set KEY1=stop1.acn
			set KEY2=stop1.seq
			set KEYVAL=" "_KEY1_","_KEY2_" "

			do DATA(COLLIST("STOP1"),"STOP1","ACN=:KEY1 AND SEQ=:KEY2",KEYVAL)
			do Db.delete("STOP1","ACN=:KEY1 AND SEQ=:KEY2")

			type DbSet rsa=Db.selectDbSet("STOP1A","ACN=:KEY1 AND SEQ=:KEY2")
			while rsa.next() do {
        		        type RecordSTOP1A stop1a=rsa.getRecord("STOP1A")
				set KEY3=stop1a.ter

				set PNTX="     1"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"1 , "_stop1.acn_" , "_stop1.seq_" , "_stop1a.ter
				do PSDLOOP(.rep)

				set KEYVAL1=" "_KEY1_","_KEY2_","_KEY3_" "
				do DATA(COLLIST("STOP1A"),"STOP1A","ACN=:KEY1 AND SEQ=:KEY2 AND TER=:KEY3",KEYVAL1)
				do Db.delete("STOP1A","ACN=:KEY1 AND SEQ=:KEY2 AND TER=:KEY3")
				}
			}
		}
	quit


STOP2( IO rep,
       IO out)        

	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL,KEYVAL1
	type String KEY1,KEY2,KEY3

	if KILL do {
		do out.write($$HEADER("STOP2",.COLLIST()))
		do out.write($$HEADER("STOP2A",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP2","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP2 stop2=rs.getRecord("STOP2")
		set EXPDT=stop2.exp

		set PNTX="     2"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"2 , "_stop2.cid_" , "_stop2.seq

		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=stop2.cid
			set KEY2=stop2.seq
			set KEYVAL=" "_KEY1_","_KEY2_" "
			do DATA(COLLIST("STOP2"),"STOP2","CID=:KEY1 AND SEQ=:KEY2",KEYVAL)
			do Db.delete("STOP2","CID=:stop2.cid AND SEQ=:stop2.seq")
			
			type DbSet rsa=Db.selectDbSet("STOP2A","CID=:KEY1 AND SEQ=:KEY2")
			while rsa.next() do {
        		        type RecordSTOP2A stop2a=rsa.getRecord("STOP2A")
				set KEY3=stop2a.ter
				set PNTX="     2"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"2 , "_stop2.cid_" , "_stop2.seq_" , "_stop2a.ter
				do PSDLOOP(.rep)

				set KEYVAL1=" "_KEY1_","_KEY2_","_KEY3_" "
				do DATA(COLLIST("STOP2A"),"STOP2A","CID=:KEY1 AND SEQ=:KEY2 AND TER=:KEY3",KEYVAL1)
				do Db.delete("STOP2A","CID=:KEY1 AND SEQ=:KEY2 AND TER=:KEY3")
				}			
			}
		}
	quit


STOP3( IO rep,
       IO out)        

	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL,KEYVAL1
	type String KEY1,KEY2,KEY3,KEY4

	if KILL do {
		do out.write($$HEADER("STOP3",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP3","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP3 stop3=rs.getRecord("STOP3")
		set EXPDT=stop3.exp

		set PNTX="     3"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"3 , "_stop3.cid_" , "_stop3.chkhi_" , "_stop3.seq

		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=stop3.cid
			set KEY2=stop3.chkhi
			set KEY3=stop3.seq
			set KEYVAL=" "_KEY1_","_KEY2_","_KEY3_" "
			do DATA(COLLIST("STOP3"),"STOP3","CID=:KEY1 AND CHKHI=:KEY2 AND SEQ=:KEY3",KEYVAL)
			do Db.delete("STOP3","CID=:KEY1 AND CHKHI=:KEY2 AND SEQ=:KEY3")

			type DbSet rsa=Db.selectDbSet("STOP3A","CID=:KEY1 AND CHKHI=:KEY2 AND SEQ=:KEY3")
			while rsa.next() do {
        		        type RecordSTOP3A stop3a=rsa.getRecord("STOP3A")
				set KEY4=stop3a.ter
				set PNTX="     3"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"3 , "_stop3.cid_" , "_stop3.chkhi_" , "_stop3.seq_" , "_stop3a.ter
				do PSDLOOP(.rep)

				set KEYVAL1=" "_KEY1_","_KEY2_","_KEY3_","_KEY4_" "
				do DATA(COLLIST("STOP3A"),"STOP3A","CID=:KEY1 AND CHKHI=:KEY2 AND SEQ=:KEY3 AND TER=:KEY4",KEYVAL1)
				do Db.delete("STOP3A","CID=:KEY1 AND CHKHI=:KEY2 AND SEQ=:KEY3 AND TER=:KEY4")
				}			
			}
		}

	quit


STOP4( IO rep,
       IO out)        
	
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL
	type String KEY1,KEY2,KEY3

	if KILL do {
		do out.write($$HEADER("STOP4",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP4","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP4 stop4=rs.getRecord("STOP4")
		set EXPDT=stop4.exp

		set PNTX="     4"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"4 , "_stop4.cid_" , "_stop4.amt_" , "_stop4.seq

		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=stop4.cid
			set KEY2=stop4.amt
			set KEY3=stop4.seq
			set KEYVAL=" "_KEY1_","_KEY2_","_KEY3_" "
			do DATA(COLLIST("STOP4"),"STOP4","CID=:KEY1 AND AMT=:KEY2 AND SEQ=:KEY3",KEYVAL)
			do Db.delete("STOP4","CID=:KEY1 AND AMT=:KEY2 AND SEQ=:KEY3")
			}
		}
	quit


STOP5( IO rep,
       IO out)        
	
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL
	type String KEY1,KEY2,KEY3

	if KILL do {
		do out.write($$HEADER("STOP5",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP5","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP5 stop5=rs.getRecord("STOP5")
		set EXPDT=stop5.exp

		set PNTX="     5"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"5 , "_stop5.cid_" , "_stop5.ach_" , "_stop5.seq

		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=stop5.cid
			set KEY2=stop5.ach
			set KEY3=stop5.seq
			set KEYVAL=" "_KEY1_","_KEY2_","_KEY3_" "
			do DATA(COLLIST("STOP5"),"STOP5","CID=:KEY1 AND ACH=:KEY2 AND SEQ=:KEY3",KEYVAL)
			do Db.delete("STOP5","CID=:KEY1 AND ACH=:KEY2 AND SEQ=:KEY3")
			}
		}
	quit


STOP6( IO rep,
       IO out)        
	
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL
	type String KEY1,KEY2

	if KILL do {
		do out.write($$HEADER("STOP6",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP6","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP6 stop6=rs.getRecord("STOP6")
		set EXPDT=stop6.exp

		set PNTX="     6"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"6 , "_stop6.inst_" , "_stop6.outacc

		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=stop6.inst
			set KEY2=stop6.outacc
			set KEYVAL=" "_KEY1_","_KEY2_" "
			do DATA(COLLIST("STOP6"),"STOP6","INST=:KEY1 AND OUTACC=:KEY2",KEYVAL)
			do Db.delete("STOP6","INST=:KEY1 AND OUTACC=:KEY2")
			}
		}
	quit


STOP7( IO rep,
       IO out)        
	
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL
	type String KEY1,KEY2,KEY3

	if KILL do {
		do out.write($$HEADER("STOP7",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP7","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP7 stop7=rs.getRecord("STOP7")
		set EXPDT=stop7.exp

		set PNTX="     7"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"7 , "_stop7.inst_" , "_stop7.outacc_" , "_stop7.outchk

		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=stop7.inst
			set KEY2=stop7.outacc
			set KEY3=stop7.outchk
			set KEYVAL=" "_KEY1_","_KEY2_","_KEY3_" "
			do DATA(COLLIST("STOP7"),"STOP7","INST=:KEY1 AND OUTACC=:KEY2 AND OUTCHK=:KEY3",KEYVAL)
			do Db.delete("STOP7","INST=:KEY1 AND OUTACC=:KEY2 AND OUTCHK=:KEY3")
			}
		}
	quit


STOP8( IO rep,
       IO out)        
	
	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL,KEYVAL1
	type String KEY1,KEY2,KEY3,KEY4

	if KILL do {
		do out.write($$HEADER("STOP8",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP8","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP8 stop8=rs.getRecord("STOP8")
		set EXPDT=stop8.exp

		set PNTX="     8"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"8 , "_stop8.doctyp_" , "_stop8.docnum_" , "_stop8.seq

		do PSDLOOP(.rep)
		if KILL do {
			set KEY1=stop8.doctyp
			set KEY2=stop8.docnum
			set KEY3=stop8.seq
			set KEYVAL=" "_KEY1_","_KEY2_","_KEY3_" "
			do DATA(COLLIST("STOP8"),"STOP8","DOCTYP=:KEY1 AND DOCNUM=:KEY2 AND SEQ=:KEY3",KEYVAL)
			do Db.delete("STOP8","DOCTYP=:KEY1 AND DOCNUM=:KEY2 AND SEQ=:KEY3")

			type DbSet rsa=Db.selectDbSet("STOP8A","DOCTYP=:KEY1 AND DOCNUM=:KEY2 AND SEQ=:KEY3")
			while rsa.next() do {
        		        type RecordSTOP8A stop8a=rsa.getRecord("STOP8A")
				set KEY4=stop8a.ter
				set PNTX="     8"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"8 , "_stop8.doctyp_" , "_stop8.docnum_" , "_stop8.seq_" , "_stop8a.ter
				do PSDLOOP(.rep)

				set KEYVAL1=" "_KEY1_","_KEY2_","_KEY3_","_KEY4_" "
				do DATA(COLLIST("STOP8A"),"STOP8A","DOCTYP=:KEY1 AND DOCNUM=:KEY2 AND SEQ=:KEY3 AND TER=:KEY4",KEYVAL1)
				do Db.delete("STOP8A","DOCTYP=:KEY1 AND DOCNUM=:KEY2 AND SEQ=:KEY3 AND TER=:KEY4")
				}
			}
		}
	quit


STOP9( IO rep,
       IO out)        

	type public Boolean KILL
	type public Date EXP
	type public String COLLIST(),PNTX
	type Date EXPDT
	type String KEYVAL
	type String KEY1,KEY2,KEY3

	if KILL do {
		do out.write($$HEADER("STOP9",.COLLIST()))
		do out.write("EOH")
		}

	type DbSet rs=Db.selectDbSet("STOP9","EXP<=:EXP")
	while rs.next() do {
                type RecordSTOP9 stop9=rs.getRecord("STOP9")
		set EXPDT=stop9.exp

		set PNTX="     9"_"         "_EXPDT.toString("MM/DD/YEAR")_"    "_"9 , "_stop9.doctyp_" , "_stop9.docnum_" , "_stop9.inst

		do PSDLOOP(.rep)
		if KILL do {

			set KEY1=stop9.doctyp
			set KEY2=stop9.docnum
			set KEY3=stop9.inst
			set KEYVAL=" "_KEY1_","_KEY2_","_KEY3_" "
			do DATA(COLLIST("STOP9"),"STOP9","DOCTYP=:KEY1 AND DOCNUM=:KEY2 AND INST=:KEY3",KEYVAL)
			do Db.delete("STOP9","DOCTYP=:KEY1 AND DOCNUM=:KEY2 AND INST=:KEY3")
			}
		}
	quit


HDG     //

       type public Boolean KILL
       type public Number PN
       type public String DESC,HDG(),IOHDG,RN
       type Number IORM

       set HDG(0)=""
       set IORM=132

       // File Purge Report - ~p1
       set RN=$$^MSG(4537,DESC)

       // ~p1 (Anticipated)
       if 'KILL set RN=$$^MSG(4536,RN)

       set PN=1

       do @IOHDG

       quit


HEADER( String TABLE, 
        String COLLIST())	// write header
 	
	//type public String COLLIST()

	set COLLIST = $$COLLIST^DBSDD(TABLE,1,1,1)
	set COLLIST(TABLE) = COLLIST

	quit (TABLE_9.char()_9.char()_9.char()_COLLIST.translate(",",9.char()))


DATA( String COLLIST,
      String TABLE,
      String KEYS,
      String KEYVAL)        // Write output for the records to be deleted

	type public IO out
	type public String KEY1,KEY2,KEY3

	type String DATA

	#ACCEPT DATE=02/07/06;PGM=Sanjay Chhabria
	type ResultSet rs = Db.select(COLLIST,TABLE,KEYS)

	while rs.next() do {

		type Row rw = rs.getRow()
		set DATA = TABLE_9.char()_KEYVAL_rw.toString()

		do out.write(.DATA)
		}

	quit


PSDLOOP( IO rep)  // Write data for PURGE.REP

        type public Boolean KILL,QUIT
        type public Number CNT,IOSL,LNCT
        type public String DATA,IOHDG,PNTX,REC,REC1,SLV

        // Print a record
        if LNCT>IOSL do { quit:QUIT
                do @IOHDG
                set LNCT=0
                }

 	do rep.write(.PNTX)

        set LNCT=LNCT+1

        // Save Record
        set CNT=CNT+1
        if 'KILL quit

	quit


END( IO rep)      //

        type public Boolean KILL
        type public Number CNT
        type public String IOHDG,REP
        type Number PN
        type String REC1

        use REP    

        // Total records purged: ~p1
	if KILL do {
                set REC1=$$^MSG(5732,CNT)_" "
                do rep.write("")
                do rep.write("")
                do rep.write(.REC1)
		}

	// Total records to be purged: ~p1
	else  do {
                set REC1=$$^MSG(5733,CNT)_" "
                do rep.write("")
                do rep.write("")
                do rep.write(.REC1)
                }

        set PN=-1
	do @IOHDG

	do rep.close()

	quit
 

vSIG()	quit "60311^32458^Sethy, Satyanarayan^19091"	// Signature - LTD^TIME^USER^SIZE
