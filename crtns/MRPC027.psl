public MRPC027(String RETURN,Number VERSN,String UID,Number ENCTYPE,String NEWPSWD,String NEWPSWD2,String OLDPSWD,Date PEXPR)
  /*
	ORIG: SCHEETZE - 04/06/2000
	DESC: User Password Maintenance

	---- Comments --------------------------------------------------------

	   . RETURN	Return Value		/NOREQ/MECH=REF

	   . VERSN	Version Number		/REQ/MECH=VAL
			Current version=2

	   . UID	User ID			/REQ/MECH=VAL

	   . ENCTYPE	Encryption Type		/REQ/MECH=VAL
			0 - No encryption
			1 - SCAENC Encryption
			2 - SCAMD5 Encryption

	   . NEWPSWD	New Password		/REQ/MECH=VAL
			Password encrypted with algorithm specified
			by ENCTYPE

	   . NEWPSWD2	New Password		/NOREQ/MECH=VAL
			Password encrypted using the other encryption 
			type than specified by ENCTYPE

	   . OLDPSWD	Old Password		/NOREQ/MECH=VAL

	   . PEXPR	Password Expiration	/NOREQ/MECH=VAL


	   RETURNS:
	   . $$     	Error Message		/TYP=T
	     Null= No Error
	
	   RELATED:
	   . $$^PBSMRPC - MRPC Service Class Driver
	
	   EXAMPLE:
	   S RM=$$^MRPC027(.RETURN,1,1000,0,"xxx")

	---- Revision History ------------------------------------------------

	  03/22/05 - KELLYP - CR 13666
	  	Modified top level of procedure to return RM correctly and
	  	modified entire procedure to conform to current PSL standards.
  */

	type public Boolean ER
	type public String RM
	
	set ER=0
	set RETURN=""
	set RM=""

	// Version number of client message is not compatible with server
	if VERSN'=2 quit $$ERRMSG^PBSUTL($$^MSG(2951))

	// User ID required
	if UID.isNull() quit $$ERRMSG^PBSUTL($$^MSG(2849))
	
	// Encryption type required
	if ENCTYPE.isNull() quit $$ERRMSG^PBSUTL($$^MSG(4315))
	
	// Invalid password
	if NEWPSWD.isNull() quit $$ERRMSG^PBSUTL($$^MSG(1419))
	
	set NEWPSWD2=NEWPSWD2.get()
	set OLDPSWD=OLDPSWD.get()
	set PEXPR=PEXPR.get()

	type RecordSCAU scau=Db.getRecord("SCAU","UID=:UID")
	
	do scau.setAuditFlag(1)

	if 'PEXPR.isNull() set scau.pexpr=PEXPR

	if ENCTYPE=0 do NOENC(.scau)
	if ENCTYPE=1 do SCAENC(.scau)
	if ENCTYPE=2 do SCAMD5(.scau)
	
	if ER quit $$ERRMSG^PBSUTL(RM)

	do scau.save()

	quit ""


NOENC(RecordSCAU scau)	// No encryption utilized

	type public Boolean ER
	type public String NEWPSWD,OLDPSWD

	type Boolean PWDOK
	type Number PWDLEN
	type String PSWD,PSWDAUT

	do scau.setAuditFlag(1)

	//  Validate old password
	set PWDOK=0
	if 'OLDPSWD.isNull() { quit:ER
		if scau.pswdaut do { quit:ER
			set ER=$$ENC^%ENCRYPT(OLDPSWD,.PSWDAUT)
			
			// Server Error - the password encryption is invalid
			if ER do Runtime.setErrSTBLER("SCAU","SV_INVLDENC")
			
			if scau.pswdaut=PSWDAUT set PWDOK=1
			}
		else  if scau.pswd,scau.pswd=$$ENC^SCAENC(OLDPSWD) set PWDOK=1

		// Invalid password		
		if 'PWDOK do Runtime.setErrMSG("SCAU",1419) quit:ER
		}
	
	type RecordSCAU0 scau0=Db.getRecord("SCAU0","UCLS=:scau.%ucls")
	set PWDLEN=scau0.pwdlen
	
	// Password length must be at least ~p1 characters
	if PWDLEN,NEWPSWD.length()<PWDLEN do Runtime.setErrMSG("SCAU",2139,PWDLEN) quit:ER

	// Encrypt new password using SCAMD5 format
	set ER=$$ENC^%ENCRYPT(NEWPSWD,.PSWDAUT)
	
	// Server Error - the password encryption is invalid
	if ER do Runtime.setErrSTBLER("SCAU","SV_INVLDENC") quit:ER
	
	// Password must be changed
	if scau.pswdaut=PSWDAUT do Runtime.setErrMSG("SCAU",2140) quit:ER

	// Encrypt new password using SCAENC format
	set PSWD=$$ENC^SCAENC(NEWPSWD)
	
	// Password must be changed
	if scau.pswd=PSWD do Runtime.setErrMSG("SCAU",2140) quit:ER
	
	set scau.pswd=PSWD
	set scau.pswdaut=PSWDAUT
	
	quit


SCAENC(RecordSCAU scau)	// SCAENC encryption being used

	type public Boolean ER
	type public String NEWPSWD,NEWPSWD2,OLDPSWD

	do scau.setAuditFlag(1)

	// Invalid password
	if 'OLDPSWD.isNull(),scau.pswd'=OLDPSWD do Runtime.setErrMSG("SCAU",1419) quit:ER

	// Password must be changed
	if scau.pswd=NEWPSWD do Runtime.setErrMSG("SCAU",2140) quit:ER
	if 'NEWPSWD2.isNull(),scau.pswdaut=NEWPSWD2 do Runtime.setErrMSG("SCAU",2140) quit:ER

	// Update encrypted passwords
	set scau.pswd=NEWPSWD
	set scau.pswdaut=NEWPSWD2

	quit


SCAMD5(RecordSCAU scau)	// SCAMD5 encryption being used.

	type public Boolean ER
	type public String NEWPSWD,NEWPSWD2,OLDPSWD

	do scau.setAuditFlag(1)

	// Invalid password
	if 'OLDPSWD.isNull(),scau.pswdaut'=OLDPSWD do Runtime.setErrMSG("SCAU",1419) quit:ER

	// Password must be changed
	if scau.pswdaut=NEWPSWD do Runtime.setErrMSG("SCAU",2140) quit:ER
	if 'NEWPSWD2.isNull(),scau.pswd=NEWPSWD2 do Runtime.setErrMSG("SCAU",2140) quit:ER

	// Update encrypted passwords
	set scau.pswdaut=NEWPSWD
	set scau.pswd=NEWPSWD2

	quit

	
 #OPTION ResultClass ON
Public String vSIG()	quit "59982^36127^Pat Kelly^4262"	// Signature - LTD^TIME^USER^SIZE
