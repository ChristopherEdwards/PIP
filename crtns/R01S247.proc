R01S247	// SCA226 - Loan Sale Activity Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date EFD
	type String INV

	set RID="SCA226"
	set RN="Loan Sale Activity Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("EFD")="|10|||||||D|Effective Date|||||"
	set %TAB("INV")="|5|||[LNLS1]INCD:DISTINCT||||T|Investor Code|||||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,EFD#1,INV#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date EFD
	type public String INV
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,GRP,INCD,MADR,PDTH,PL,RID,RN,VL,VLOF,VRF(),VSTATS(),fLNLS1,fLNLS2,fLNLS3,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA226",RN="Loan Sale Activity Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA226","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNLS6]INVAC#1#12,[LNLS8]CID#14#12,[LNLS6]PLRPB#34#12,[LNLS6]PLRSB#47#12,[LNLS6]PLRFC#60#7,[LNLS6]PLROC#68#12,[LNLS6]PLRCA#81#6,[LNLS6]PLRIR#88#12,[LNLS6]PLRPR#101#12,[LNLS6]PLRFR#113#6,[LNLS6]ACCD#120#2,[LNLS6]ACDT#123#10"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"LNLS2.REMLD=:EFD AND LNLS8.INCD=:INV AND LNLS6.POB"
		set VWHERE=VWHERE_"PRPF NOT =1 AND ((LN.PCIDSTAT=0) OR (LN.PCIDSTAT='"
		set VWHERE=VWHERE_"'))"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Loan Sale Activity Report"
		set VBNRINFO("PGM")="R01S247"
		set VBNRINFO("RID")="SCA226"
		set VBNRINFO("TABLES")="LNLS8,LNLS6,LNLS3,LNLS2,LNLS1,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLS8]INCD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLS8]PL"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNLS8]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLS8]CID"

		set VBNRINFO("DOC",1)=" Lists those accounts sold to designated investor(s) with summarized"
		set VBNRINFO("DOC",2)="activity and service fee calculations for the statements."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:10 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNLS8.INCD,LNLS8.PL,LNLS8.GRP,LNLS8.CID,LNLS6.PLRPB,LNLS6.PLRFC,LNLS6.PLRCA,LNLS6.PLRPR,LNLS6.ACTIVE,LNLS6.PLRSB,LNLS6.PLROC,LNLS6.PLRIR,LNLS6.PLRFR,LNLS6.PLRRA,LNLS6.INVAC,LNLS6.ACCD,LNLS6.ACDT,LNLS1.DESCHDG,LNLS2.PL,LNLS2.EFD,LNLS2.PP,LNLS2.PICM,LNLS2.SVN,LNLS2.YIELD,LNLS2.FEEP,LNLS2.SFCM,LNLS2.ACTGRP,LNLS6.PLRPT","LNLS8,LNLS6,LNLS3,LNLS2,LNLS1,LN","LNLS2.REMLD=:EFD AND LNLS8.INCD=:INV AND LNLS6.POBPRPF NOT =1 AND ((LN.PCIDSTAT=0) OR (LN.PCIDSTAT=''))","LNLS8.INCD,LNLS8.PL,LNLS8.GRP,LNLS8.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28
	set vc1=V.piece($C(9),1)			// LNLS8.INCD
	set vc2=V.piece($C(9),2)			// LNLS8.PL
	set vc3=V.piece($C(9),3)			// LNLS8.GRP
	set vc4=V.piece($C(9),4)			// LNLS8.CID
	set vc5=V.piece($C(9),5)			// LNLS6.PLRPB
	set vc6=V.piece($C(9),6)			// LNLS6.PLRFC
	set vc7=V.piece($C(9),7)			// LNLS6.PLRCA
	set vc8=V.piece($C(9),8)			// LNLS6.PLRPR
	set vc9=V.piece($C(9),9)			// LNLS6.ACTIVE
	set vc10=V.piece($C(9),10)			// LNLS6.PLRSB
	set vc11=V.piece($C(9),11)			// LNLS6.PLROC
	set vc12=V.piece($C(9),12)			// LNLS6.PLRIR
	set vc13=V.piece($C(9),13)			// LNLS6.PLRFR
	set vc14=V.piece($C(9),14)			// LNLS6.PLRRA
	set vc15=V.piece($C(9),15)			// LNLS6.INVAC
	set vc16=V.piece($C(9),16)			// LNLS6.ACCD
	set vc17=V.piece($C(9),17)			// LNLS6.ACDT
	set vc18=V.piece($C(9),18)			// LNLS1.DESCHDG
	set vc19=V.piece($C(9),19)			// LNLS2.PL
	set vc20=V.piece($C(9),20)			// LNLS2.EFD
	set vc21=V.piece($C(9),21)			// LNLS2.PP
	set vc22=V.piece($C(9),22)			// LNLS2.PICM
	set vc23=V.piece($C(9),23)			// LNLS2.SVN
	set vc24=V.piece($C(9),24)			// LNLS2.YIELD
	set vc25=V.piece($C(9),25)			// LNLS2.FEEP
	set vc26=V.piece($C(9),26)			// LNLS2.SFCM
	set vc27=V.piece($C(9),27)			// LNLS2.ACTGRP
	set vc28=V.piece($C(9),28)			// LNLS6.PLRPT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public String fLNLS1,fLNLS2,fLNLS3,GRP,MADR,PL
 set (fLNLS3,fLNLS2,fLNLS1,MADR,PL,GRP)=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc9,vc7,vc6,vc13,vc12,vc11,vc5,vc8,vc14,vc10
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc9			// @TOT([LNLS6]ACTIVE)
	set VT(4,2,1)=VT(4,2,1)+vc7			// @TOT([LNLS6]PLRCA)
	set VT(4,3,1)=VT(4,3,1)+vc6			// @TOT([LNLS6]PLRFC)
	set VT(4,4,1)=VT(4,4,1)+vc13			// @TOT([LNLS6]PLRFR)
	set VT(4,5,1)=VT(4,5,1)+vc12			// @TOT([LNLS6]PLRIR)
	set VT(4,6,1)=VT(4,6,1)+vc11			// @TOT([LNLS6]PLROC)
	set VT(4,7,1)=VT(4,7,1)+vc5			// @TOT([LNLS6]PLRPB)
	set VT(4,8,1)=VT(4,8,1)+vc8			// @TOT([LNLS6]PLRPR)
	set VT(4,9,1)=VT(4,9,1)+vc14			// @TOT([LNLS6]PLRRA)
	set VT(4,10,1)=VT(4,10,1)+vc10			// @TOT([LNLS6]PLRSB)
	quit

VSUM2	// Summary
	type public String %TIM,EFD,GRP,I,INCD,IOSL,MADR,PDTH,PL,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=" "_"Totals for"
	set VL=VL_$J("",12-VL.length())_"Inv:"
	set VL=VL_$J("",17-VL.length())_$E(vc1,1,5)
	set V=VT(2,7,1)					// @TOT([LNLS6]PLRPB,)
	set VL=VL_$J("",31-VL.length())_$J($FN(V,",",2),14)
	set V=VT(2,3,1)					// @TOT([LNLS6]PLRFC,)
	set VL=VL_$J("",59-VL.length())_$J(V,7,2)
	set V=0						// @TOT([LNLS6]PLRCA,0)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VL=VL_$J("",80-VL.length())_$J($FN(V,",",2),6)
	set V=VT(2,8,1)					// @TOT([LNLS6]PLRPR,)
	set VL=VL_$J("",98-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="         "_"Active:"
	set V=VT(2,1,1)					// @TOT([LNLS6]ACTIVE,)
	set VL=VL_$J("",17-VL.length())_$E(V,1,7)
	set V=VT(2,10,1)				// @TOT([LNLS6]PLRSB,)
	set VL=VL_$J("",44-VL.length())_$J($FN(V,",",2),14)
	set V=VT(2,6,1)					// @TOT([LNLS6]PLROC,)
	set VL=VL_$J("",65-VL.length())_$J($FN(V,",",2),14)
	set V=VT(2,5,1)					// @TOT([LNLS6]PLRIR,)
	set VL=VL_$J("",85-VL.length())_$J($FN(V,",",2),14)
	set V=VT(2,4,1)					// @TOT([LNLS6]PLRFR,)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="" do VOM
	set VL="     "_"Remittance:"
	set V=VT(2,9,1)					// @TOT([LNLS6]PLRRA,)
	set VL=VL_$J("",17-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CONAM,EFD,ER,GRP,INCD,IOSL,MADR,PDTH,PL,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Investor:"
	set VL=VL_$J("",10-VL.length())_$E(vc18,1,45)
	do VOM
	set VL="" do VOM
	set VL="    "_"Pool:"
	set VL=VL_$J("",10-VL.length())_$E(vc19,1,10)
	set VL=VL_$J("",21-VL.length())_"Dated:"
	set VL=VL_$J("",28-VL.length())_$J($$DAT^%ZM(vc20),10)
	set VL=VL_$J("",40-VL.length())_"Part %:"
	set VL=VL_$J("",48-VL.length())_$J(vc21,9,5)
	set VL=VL_$J("",58-VL.length())_"Rem Method:"
	set VL=VL_$J("",70-VL.length())_$J(vc22,12)
	set VL=VL_$J("",84-VL.length())_"Servicer:"
	set VL=VL_$J("",94-VL.length())_$E(vc23,1,10)
	do VOM
	set VL="                     "_"Yield:"
	set VL=VL_$J("",28-VL.length())_$J(vc24,8,5)
	set VL=VL_$J("",41-VL.length())_"Fee %:"
	set VL=VL_$J("",48-VL.length())_$J(vc25,8,5)
	set VL=VL_$J("",58-VL.length())_"Fee Method:"
	set VL=VL_$J("",70-VL.length())_$E(vc26,1,5)
	set VL=VL_$J("",85-VL.length())_"Pool ID:"
	set VL=VL_$J("",94-VL.length())_$J(vc27,10)
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,EFD,GRP,I,INCD,IOSL,MADR,PDTH,PL,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+5>IOSL do VHDG0 quit:VFMQ  set vh(3)=0 do VHDG3 quit:VFMQ

	set VL="" do VOM
	set VL="Totals for"
	set VL=VL_$J("",11-VL.length())_"Pool:"
	set VL=VL_$J("",17-VL.length())_$E(vc19,1,7)
	set V=VT(3,7,1)					// @TOT([LNLS6]PLRPB,)
	set VL=VL_$J("",31-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,3,1)					// @TOT([LNLS6]PLRFC,)
	set VL=VL_$J("",59-VL.length())_$J(V,7,2)
	set V=VT(3,2,1)					// @TOT([LNLS6]PLRCA,)
	set VL=VL_$J("",80-VL.length())_$J($FN(V,",",2),6)
	set V=VT(3,8,1)					// @TOT([LNLS6]PLRPR,)
	set VL=VL_$J("",98-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="         "_"Active:"
	set V=VT(3,1,1)					// @TOT([LNLS6]ACTIVE,)
	set VL=VL_$J("",17-VL.length())_$E(V,1,7)
	set V=VT(3,10,1)				// @TOT([LNLS6]PLRSB,)
	set VL=VL_$J("",44-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,6,1)					// @TOT([LNLS6]PLROC,)
	set VL=VL_$J("",65-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,5,1)					// @TOT([LNLS6]PLRIR,)
	set VL=VL_$J("",85-VL.length())_$J($FN(V,",",2),14)
	set V=VT(3,4,1)					// @TOT([LNLS6]PLRFR,)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="" do VOM
	set VL="     "_"Remittance:"
	set V=VT(3,9,1)					// @TOT([LNLS6]PLRRA,)
	set VL=VL_$J("",17-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CONAM,EFD,ER,GRP,INCD,IOSL,MADR,PDTH,PL,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="------ Loan Number ------   Paid                 Scheduled   Late     Prin Only  Sched    ----- Remittance -----        Action"
	do VOM
	set VL="    "_"Investor     Internal   Through   Balance     Balance   Charge     Payments  Adjst     Interest    Principal   Fee Cd   Date"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	quit

VDTL4	// Detail
	type public String %TIM,EFD,GRP,INCD,IOSL,MADR,PDTH,PL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL=$J(vc15,12)
	set VL=VL_$J("",13-VL.length())_$J(vc4,12)
	do VP1 quit:VFMQ!verror.get()  set V=$E(PDTH,1,5)
	set VL=VL_$J("",27-VL.length())_V
	set VL=VL_$J("",33-VL.length())_$J($FN(vc5,",",2),12)
	set VL=VL_$J("",46-VL.length())_$J($FN(vc10,",",2),12)
	set VL=VL_$J("",59-VL.length())_$J(vc6,7,2)
	set VL=VL_$J("",67-VL.length())_$J($FN(vc11,",",2),12)
	set VL=VL_$J("",80-VL.length())_$J(vc7,6,2)
	set VL=VL_$J("",87-VL.length())_$J($FN(vc12,",",2),12)
	set VL=VL_$J("",100-VL.length())_$J($FN(vc8,",",2),12)
	set VL=VL_$J("",113-VL.length())_$J(vc13,5,2)
	set VL=VL_$J("",119-VL.length())_$E(vc16,1,2)
	set VL=VL_$J("",122-VL.length())_$J($$DAT^%ZM(vc17),10)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,EFD,GRP,INCD,MADR,PDTH,PL,RID,RN,VL,fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="Remittances Effective "
	set VL=VL_$J("",22-VL.length())_$J($$DAT^%ZM(vc20),10)
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,EFD,GRP,INCD,MADR,PDTH,PL,fLNLS1,fLNLS2,fLNLS3,vc1,vc19,vc20,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="  "_"Report Totals:"
	set V=0						// @TOT([LNLS6]PLRPB,0)
	for I=0:1:4 set V=V+VT(I,7,1)
	set VL=VL_$J("",31-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6]PLRFC,0)
	for I=0:1:4 set V=V+VT(I,3,1)
	set VL=VL_$J("",59-VL.length())_$J(V,7,2)
	set V=0						// @TOT([LNLS6]PLRCA,0)
	for I=0:1:4 set V=V+VT(I,2,1)
	set VL=VL_$J("",80-VL.length())_$J($FN(V,",",2),6)
	set V=0						// @TOT([LNLS6]PLRPR,0)
	for I=0:1:4 set V=V+VT(I,8,1)
	set VL=VL_$J("",98-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="         "_"Active: "
	set V=0						// @TOT([LNLS6]ACTIVE,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	set VL=VL_$J("",17-VL.length())_$E(V,1,7)
	set V=0						// @TOT([LNLS6]PLRSB,0)
	for I=0:1:4 set V=V+VT(I,10,1)
	set VL=VL_$J("",44-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6]PLROC,0)
	for I=0:1:4 set V=V+VT(I,6,1)
	set VL=VL_$J("",65-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6]PLRIR,0)
	for I=0:1:4 set V=V+VT(I,5,1)
	set VL=VL_$J("",85-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS6]PLRFR,0)
	for I=0:1:4 set V=V+VT(I,4,1)
	set VL=VL_$J("",108-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="" do VOM
	set VL="     "_"Remittance:"
	set V=0						// @TOT([LNLS6]PLRRA,0)
	for I=0:1:4 set V=V+VT(I,9,1)
	set VL=VL_$J("",17-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: PDTH

	type public String vc28
 type public String PDTH,A

 set PDTH=""
 set A=vc28
 if A.isNull() quit
 set A=$$^%ZD(A)
 set PDTH=A.extract(1,3)_A.extract(7,8)
	quit
