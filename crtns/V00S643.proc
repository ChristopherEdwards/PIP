V00S643(%ProcessMode,RecordYFEEEXP fYFEEEXP)   //PBS - SRV - SID= <YFEEEXP> Exemption Plan Parameters
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:43 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,CAT1,CAT3,CAT4",VSID="YFEEEXP",VPGM=$T(+0),VSNAME="Exemption Plan Parameters"
 set VFSN("YFEEEXP")="zfYFEEEXP"
 set vPSL=1
 set KEYS(1)=fYFEEEXP.PLAN
 set KEYS(2)=fYFEEEXP.EFD
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fYFEEEXP),VDA1(.fYFEEEXP),^DBSPNT()

 if '%ProcessMode do VNEW(.fYFEEEXP),VPR(.fYFEEEXP),VDA1(.fYFEEEXP)
 if %ProcessMode do VLOD(.fYFEEEXP) quit:$G(ER)  do VPR(.fYFEEEXP),VDA1(.fYFEEEXP)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fYFEEEXP)
	quit


VNEW(RecordYFEEEXP fYFEEEXP) // Initialize arrays if %O=0
 
 do VDEF(.fYFEEEXP)
 do VLOD(.fYFEEEXP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordYFEEEXP fYFEEEXP)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordYFEEEXP fYFEEEXP) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordYFEEEXP fYFEEEXP) // Display screen prompts
 set VO="11||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,15,20,1,0,0,0,0,0,0)_"01TExemption Plan Name:"
 set VO(2)=$C(3,20,15,1,0,0,0,0,0,0)_"01TEffective Date:"
 set VO(3)=$C(6,12,23,0,0,0,0,0,0,0)_"01TFull Exemption Balance:"
 set VO(4)=$C(8,6,29,0,0,0,0,0,0,0)_"01TNumber of Free/Reduced Items:"
 set VO(5)=$C(9,11,24,0,0,0,0,0,0,0)_"01TFree/Reduced Item Basis:"
 set VO(6)=$C(10,22,13,0,0,0,0,0,0,0)_"01TBalance Base:"
 set VO(7)=$C(12,13,22,0,0,0,0,0,0,0)_"01TMethod of Calculation:"
 set VO(8)=$C(14,18,17,0,0,0,0,0,0,0)_"01TCategory 1 Items:"
 set VO(9)=$C(15,18,19,0,0,0,0,0,0,0)_"01TCategory 3 Items:  "
 set VO(10)=$C(16,18,17,0,0,0,0,0,0,0)_"01TCategory 4 Items:"
 set VO(11)=$C(18,11,24,0,0,0,0,0,0,0)_"01TReduce Charge Trn Group:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordYFEEEXP fYFEEEXP)  // Display screen data
 new V
 s CAT1=$G(CAT1)
 s CAT3=$G(CAT3)
 s CAT4=$G(CAT4)
 //
 set VO="22|12|13|0"
 set VO(12)=$C(2,37,6,2,0,0,0,0,0,0)_"01T"_$E(fYFEEEXP.PLAN,1,6)
 set VO(13)=$C(3,37,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fYFEEEXP.EFD)
 set V=$S(fYFEEEXP.FEBAL="":"",1:$J(fYFEEEXP.FEBAL,0,2)) set VO(14)=$C(6,37,9,2,0,0,0,0,0,0)_"00$"_$S(fYFEEEXP.FEBAL="":"",1:$J(fYFEEEXP.FEBAL,0,2))
 set VO(15)=$C(8,37,3,2,0,0,0,0,0,0)_"00N"_fYFEEEXP.FRITS
 set VO(16)=$C(9,37,9,2,0,0,0,0,0,0)_"00T"_$E(fYFEEEXP.FRITSB,1,9)
 set VO(17)=$C(10,37,1,2,0,0,0,0,0,0)_"00N"_fYFEEEXP.BALB
 set VO(18)=$C(12,37,1,2,0,0,0,0,0,0)_"00N"_fYFEEEXP.MOC
 set VO(19)=$C(14,37,1,2,0,0,0,0,0,0)_"00L"_$S($G(CAT1):"Y",1:"N")
 set VO(20)=$C(15,37,1,2,0,0,0,0,0,0)_"00L"_$S($G(CAT3):"Y",1:"N")
 set VO(21)=$C(16,37,1,2,0,0,0,0,0,0)_"00L"_$S($G(CAT4):"Y",1:"N")
 set VO(22)=$C(18,37,8,2,0,0,0,0,0,0)_"00T"_$E(fYFEEEXP.RCTG,1,8)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordYFEEEXP fYFEEEXP)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=11,VPT=2,VPB=18,PGM=$T(+0),DLIB="SYSDEV",DFID="YFEEEXP",VSCRPP=1,VSCRPP=1
 set OLNTB=18037
 
 set VFSN("YFEEEXP")="zfYFEEEXP"
 //
 // 
	
	
 set %TAB(1)=$C(1,36,6)_"21T12401|1|[YFEEEXP]PLAN"
 set %TAB(2)=$C(2,36,10)_"21D12402|1|[YFEEEXP]EFD"
 set %TAB(3)=$C(5,36,9)_"00$12401|1|[YFEEEXP]FEBAL|||do VP1^V00S643(.fYFEEEXP)||||2"
 set %TAB(4)=$C(7,36,3)_"00N12403|1|[YFEEEXP]FRITS"
 set %TAB(5)=$C(8,36,9)_"00T12404|1|[YFEEEXP]FRITSB|||do VP2^V00S643(.fYFEEEXP)"
 set %TAB(6)=$C(9,36,1)_"00N12402|1|[YFEEEXP]BALB|[STBLFEEFB]||do VP3^V00S643(.fYFEEEXP)"
 set %TAB(7)=$C(11,36,1)_"00N12405|1|[YFEEEXP]MOC|[STBLEXPMOC]||do VP4^V00S643(.fYFEEEXP)"
 set %TAB(8)=$C(13,36,1)_"00L|*CAT1|[*]@CAT1|||do VP5^V00S643(.fYFEEEXP)"
 set %TAB(9)=$C(14,36,1)_"00L|*CAT3|[*]@CAT3|||do VP6^V00S643(.fYFEEEXP)"
 set %TAB(10)=$C(15,36,1)_"00L|*CAT4|[*]@CAT4|||do VP7^V00S643(.fYFEEEXP)"
 set %TAB(11)=$C(17,36,8)_"00T12406|1|[YFEEEXP]RCTG|[UTBLTRNGRPT]TRNGRP:DISTINCT||do VP8^V00S643(.fYFEEEXP)"
 do VTBL(.fYFEEEXP)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordYFEEEXP fYFEEEXP) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordYFEEEXP fYFEEEXP
 do VSPP1(.fYFEEEXP)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordYFEEEXP fYFEEEXP)
 if +fYFEEEXP.balb'=0 quit
 if fYFEEEXP.febal+fYFEEEXP.fritsb'=0 do { quit
  	
 	new XMSG
	set XMSG=$$DES^DBSDD("YFEEEXP.BALB")
 	
	// Invalid balance base
 	set ER=1 set RM=$$^MSG(8316,XMSG)    
 	}
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordYFEEEXP fYFEEEXP) //
 /*
 if +X'=0 do { 
	do DEFAULT^DBSMACRO("@CAT1",0,"1","0","0")	
 	do PROTECT^DBSMACRO("@CAT1")
 	}
 else  do UNPROT^DBSMACRO("@CAT1")
 */
 quit

VP2(RecordYFEEEXP fYFEEEXP) //
 // Value of X is number for $ amount
 if X'="",(X?.N) do { quit 
	type String vfid = "*"	// patch
 	do DEFAULT^DBSMACRO("@CAT1",0,"1","0","0")
 	do PROTECT^DBSMACRO("@CAT1")
	set vfid = "YFEEEXP"
 	do UNPROT^DBSMACRO("YFEEEXP.MOC")
 	}

 // Value of X is "PERIOD"
 if X'="",(X'?.U) set X=$$UPPER^%ZFUNC(X)
 if X=""!(X="PERIOD") do { quit 
 	if +fYFEEEXP.febal=0 do UNPROT^DBSMACRO("@CAT1")
  	do DEFAULT^DBSMACRO("YFEEEXP.MOC",0,"1","0","0")
 	do PROTECT^DBSMACRO("YFEEEXP.MOC")
 	}
 
 // Invalid Free Item Basis. Must be $ amount or Period
 new XMSG
 set XMSG=$$DES^DBSDD("YFEEEXP.FRITSB")
 set ER=1 
 set RM=$$^MSG(8316,XMSG)
 quit
VP3(RecordYFEEEXP fYFEEEXP) //
 if +X'=0  quit

 // Invalid Balance Base
 new XMSG
 set XMSG=$$DES^DBSDD("YFEEEXP.BALB")
 if +fYFEEEXP.FEBAL'=0 set ER=1,RM=$$^MSG(8316,XMSG) quit
 if +fYFEEEXP.FRITSB'=0 set ER=1,RM=$$^MSG(8316,XMSG) 
 quit
VP4(RecordYFEEEXP fYFEEEXP) //
 /*
 	Calculation method of 1 (item count) and free item basis (period) 
	can not be used together
 */
 if X=1,fYFEEEXP.FRITSB="PERIOD" set ER=1,RM=$$^MSG(2742)
 quit

VP5(RecordYFEEEXP fYFEEEXP) //
  // Category 1 and calculation method of a 1 can not be used together
  if fYFEEEXP.MOC=1,X=1 set ER=1,RM=$$^MSG(2740,X) 
  quit

VP6(RecordYFEEEXP fYFEEEXP) //
 if X=0 do { 
 	do DEFAULT^DBSMACRO("YFEEEXP.RCTG","","1","0","0")
 	do PROTECT^DBSMACRO("YFEEEXP.RCTG")
 	}
 else  do UNPROT^DBSMACRO("YFEEEXP.RCTG")
 quit

VP7(RecordYFEEEXP fYFEEEXP) //
 // Exemption plan must contain category 1, 3, or 4 
 if X=0,'CAT1,'CAT3 set ER=1 set RM=$$^MSG(2722) quit:ER        
 if X=0 quit
 
 /* Category 4 and calculation method of 1 (item count) cannot be
    used together.
 */
 if fYFEEEXP.MOC=1 set ER=1,RM=$$^MSG(2740,X) quit:ER
 
 // Full Exemption Balance is zero
 if +fYFEEEXP.FEBAL=0 set ER=1,RM=$$^MSG(2723) 
 quit

VP8(RecordYFEEEXP fYFEEEXP) //
	type public Boolean ER
        type public Number CAT3
	type public String PLAN, RM, X

	quit:X.isNull()
 
	if 'CAT3 do { quit
		set ER = 1
		// Reduced charge transaction only valid with category 3
		set RM = $$^MSG(2724)
	}

	type ResultSet rs = Db.select("TRNGRP", "UTBLTRNGRP", "TRNGRP=:X")
	if rs.isEmpty() do { quit
		set ER = 1
		// Transaction group not defined.
		set RM=$$^MSG(2719,X)
	}

	if (X = PLAN) do {
		set ER = 1
		// Transaction group cannnot be the exemption plan name
		set RM=$$^MSG(2738)
	}

	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordYFEEEXP fYFEEEXP
 do VPR(.fYFEEEXP)
 do VDA1(.fYFEEEXP)
 do ^DBSPNT()
 quit

VW(RecordYFEEEXP fYFEEEXP)
 do VDA1(.fYFEEEXP)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordYFEEEXP fYFEEEXP)
 do VDA1(.fYFEEEXP)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordYFEEEXP fYFEEEXP
 do VDA1(.fYFEEEXP)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordYFEEEXP fYFEEEXP
 if sn="YFEEEXP" do vSET1(.fYFEEEXP,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordYFEEEXP fYFEEEXP,di,X)
 do fYFEEEXP.setAuditFlag(1)
 set fYFEEEXP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordYFEEEXP fYFEEEXP
 if fid="YFEEEXP" quit $$vREAD1(.fYFEEEXP,di)
 quit ""
vREAD1(RecordYFEEEXP fYFEEEXP,di)
 quit fYFEEEXP.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
