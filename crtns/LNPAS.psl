LNPAS //PAYMENT APPLICATION STRING MAINT
        /*
               ORIG:  Kathie Pardoe (7070) - 10/06/87
 
          ---- Revision History ------------------------------------------------
           01/21/06 - KumarSS - 19103
           	      Modified VPG00 section to refer the LNPAS2 table instead 
           	      of PAS2 table for the "LOOKUP" variable.

           03/23/05 - JERUCHIMC - 14057
                      Add code to check if lnpas2 record exists before fetching
                      record.
           
           10/01/02 - CHHABRIAS - 49451
                     Converted to PSL
 
          ----------------------------------------------------------------------
        */
 
 
CREATE  //
        do INIT(0)
        quit
 
 
UPD     //
        do INIT(1)
        quit

INQ     //
        do INIT(2)
        quit
 
 
DEL     //
        do INIT(3)
        quit
 
 
INIT(%ProcessMode)      //
 
        new OLNTB,VFMQ
        set %PG=0
        set %PAGE=1
        type RecordLNPAS2 fLNPAS2
        do VPG(.fLNPAS2)
        quit

VPG(RecordLNPAS2 fLNPAS2)               // Page control
 
        new FINISH
        set FINISH=0
        for  do { quit:FINISH
                if %PG=0 do VPG00 if VFMQ="Q" set FINISH=1 quit
                if %PG>0 do VPG01(.fLNPAS2)
                if "DFQ"[VFMQ do VER(.fLNPAS2) set FINISH=1 quit
                set %PG=%PG+1
                }
        quit
 
 
VPG00   // Set-up

         new LOOKTBL
 
        set %TAB("TABLE")=".TABLE2/HLP=[LN]PAS/XPP=D PPTABLE^LNPAS"
        set LOOKTBL="/TBL=""[LNPAS2]DISTRIB/LE=38,TDES/LE=30"""
        if '%ProcessMode set LOOKTBL=LOOKTBL_":NOVAL"
        set %TAB("TABLE")=%TAB("TABLE")_LOOKTBL
        if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)
 
        set %READ="@@%FN,,,TABLE/REQ"
        if %ProcessMode=2 set %READ=%READ_",IO/REQ"
 
        do ^UTLREAD
 
        if VFMQ="Q" quit
 
        if %ProcessMode=2,IO'=$I do OPEN^SCAIO quit:ER
 
        quit

VPG01(RecordLNPAS2 fLNPAS2)     // Screen
 
        set fLNPAS2=Db.getRecord("LNPAS2","TABLE=:TABLE",1)
 
        do DRV^USID(%ProcessMode,"LNPAS",.fLNPAS2)
 
        quit
 
 
ERR     //
 
        set ER=1
 
        do ^UTLERR
 
        set VFMQ="Q"
        quit

VER(RecordLNPAS2 fLNPAS2)       //
 
        if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit
 
        if %ProcessMode=1 do VUPDCHK(.fLNPAS2) quit:ER
 
        if %ProcessMode=3 do VDELCK quit:ER
 
        do FILE(.fLNPAS2)
 
        do END
 
        quit

FILE(RecordLNPAS2 fLNPAS2)      // File data
 
        if %ProcessMode=3 do { quit
                do Db.delete("LNPAS2","TABLE=:TABLE")
                }
 
        set DISTRIB=fLNPAS2.distrib
        
	
	if %ProcessMode do {
	
	type RecordLNPAS2 lnpas2=Db.getRecord("LNPAS2","TABLE=:TABLE",1)
	if 'lnpas2.getMode() do VNEWDIS 
	else  if DISTRIB'=lnpas2.distrib do VNEWDIS
		
	}
	
	
	 
        do fLNPAS2.save()
        quit

PPTABLE // Post processor to allow select for table w/o entry of duplicates
 
        if X="" quit
        type ResultSet rs=Db.select("TABLE" ,"LNPAS2","TABLE=:X")
        if '%OSAVE,'rs.isEmpty() do {
                set ET="LNONFIL"
 
                do ERR^LNPAS
 
                }
        quit

END     //
 
        kill %TAB lock
        if ER!(%ProcessMode=2)!(%ProcessMode=4) quit
        set TABLE=$G(TABLE)
 
        if VFMQ="Q" do {
 
                // Table ~p1 not created
                if %ProcessMode=0 set RM=$$^MSG(2593,TABLE) quit
 
                // Table ~p1 not modified
                if %ProcessMode=1 set RM=$$^MSG(2596,TABLE) quit
 
                // Table ~p1 not deleted
                set RM=$$^MSG(2595,TABLE)
                }
        else  do {

 
                // Table ~p1 created
                if %ProcessMode=0 set RM=$$^MSG(2590,TABLE) quit
 
                // Table ~p1 modified
                if %ProcessMode=1 set RM=$$^MSG(2592,TABLE) quit
 
                // Table ~p1 deleted
                set RM=$$^MSG(2591,TABLE)
                }
        set ER="W"
        quit

VDELCK  // May not delete if has path or is used in MLT
 
        type ResultSet rs=Db.select("PATH","LNPATH","TABLE=:TABLE")
        if 'rs.isEmpty() do { quit
                set ER=1
                set ET="INVLDOPT"
                do ERR
                }
 
        set L=""
        quit

VUPDCHK(RecordLNPAS2 fLNPAS2)
 
        /*
           if table is used by accounts then may not delete item(s) from
           the string and may not change the order of the string, but you may
           add new items anywhere in the string
        */
 
        set L=""
        set ER=0
 
        set NDIS=fLNPAS2.distrib
        type ResultSet rs=Db.select("DISTRIB","LNPAS2","TABLE=:TABLE")
        if rs.next() set ODIS=rs.getCol("DISTRIB")
        set TDIS=""
 	
 	for I=1:1 set P=$P(ODIS,"-",I) quit:P=""!ER  if '$F("-"_NDIS_"-","-"_P_"-") set ER=1
        if ER do { quit
                set ET="INVLDSTRG"
                set fLNPAS2.distrib=ODIS
                do ERR
                }
 
        for I=1:1 set P=$P(NDIS,"-",I) quit:P=""  if $F("-"_ODIS_"-","-"_P_"-") set TDIS=TDIS_P_"-"
        set TDIS=$E(TDIS,1,$L(TDIS)-1)
 
        if TDIS'=ODIS do {
                set ER=1
                set ET="INVLDSTRG"
                set fLNPAS2.distrib=ODIS
                do ERR
                }
        if ER do fLNPAS2.setAuditFlag(0)
 
        quit

VNEWDIS //
 
        new FLAG
        set FLAG=0
        set PATH=""
        type ResultSet rs=Db.select("PATH","LNPATH","TABLE=:TABLE")
        while rs.next() do {
                set PATH=rs.getCol("PATH")
                set ASTR=DISTRIB
                set UL=""
                set PU=1
                type ResultSet rs1=Db.select("STAB,PASTR","LNPATH1","TABLE=:TABLE AND PATH=:PATH")
                while rs1.next() do { quit:FLAG
                        set UL=rs1.getCol("STAB")
                        if UL'="" set PR(PU)=rs1.getCol("PASTR")
                        if UL="" do STR1 set FLAG=1 quit
                        set PU=PU+1
                        }
                }
        quit

STR1    //
 
        set R=""
        set (ER,XR,CT)=0
        set DL=">#Vv0"
 
 
STR2    //
 
        set J=1
        set I=-1
        set ST=""
        set R=$O(PR(R))
        if R="" do STR7 quit
 
        set PR=PR(R)
        set PCT=1
        set XR=XR+1

STR3    //
 
        set P=$P(ASTR,"-",J)
 
        if P="" do STR5A quit
 
        if '$F("-"_PR,"-"_P_"-") do STR5 quit
 
        if P?1A.A1N.N do NUM
        set I=PCT
 
 
STR4    //
 
        set PC=$P(PR,"-",I)
 
        if PC="" do STR5 quit
 
        if P'=PC do STR6 quit
 
        if '$D(XP) do { quit
                set ST1=$P(PR,"-",I-1,I+1)
                set ST=ST_ST1
                set J=J+1
                set PCT=PCT+2
 
                do STR3
 
                }
        set S=$P(PR,"-",I-1,I+1)
        set X=$P(S,"-",2)
        set X=X_N
        set ST1="v-"_X_"-"_$P(S,"-",3)
        set CT=0
        for K=1:1 do {
                set X=$P(ST,"-",K)
                if X="" quit
                set CT=CT+1
                }
        set ST=$P(ST,"-",1,CT-1)_"-"
        set J=J+1
        set ST=ST_ST1
        set PCT=PCT+2
        kill XP
        do STR3
 
        quit
 
 
STR5    //
 
        set ST=ST_"v-"_P_"-V"
        set J=J+1
        set PR=$P(PR,"-",1,I+1)_$S(I>0:"-",1:"")_P_"-V-"_$P(PR,"-",I+2,9999)
        set PCT=PCT+2
 
        do STR3
 
        quit

STR5A   //
 
        set TST(R)=ST
 
        do STR2
        quit
 
 
STR6    //
 
        if DL[PC&(ASTR'[$P(PR,"-",I-1)) do { quit
                set ST=ST_PC
                set I=I+1
 
                do STR4
                }
        if DL'[PC set PCT=PCT+2
        set I=I+1
 
        do STR4
 
        quit
 
 
STR7    //
 
        set I=""
 
 
ST7A    //
 
        set I=$O(TST(I))
 
        if I="" do STR8 quit
 
        set PR=TST(I)
        set J=1
 
 
ST7B    //
 
        set P=$P(PR,"-",J)
        set S=$E(P)
        set VH=0
        if S="" do { quit
                set TS(I)=PR
 
                do ST7A
                }
 
        if DL'[S do { quit
                set J=J+1
 
                do ST7B
 
                }
        set L=$L(P)
        for K=1:1:L do {
                set A=$E(P,K)
 
                do VAL
 
                if ER do KIL quit
                if A="V" set A="v"
                set A(K)=V_"|"_A
                }
 
        for K=1:1:L do {
                set A=A(K)
 
                if A<0 quit
 
                set V=+A
 
                if V>+VH set VH=A
                }
        set $P(PR,"-",J)=$P(VH,"|",2)
        set J=J+1
 
        do ST7B
        quit
 
 
STR8    // Set LNPATH1.pastr=new path
 
        set J=""
	type ResultSet rs=Db.select("STAB","LNPATH1","TABLE=:TABLE AND PATH=:PATH")
	for I=1:1:XR do { quit:rs.isEmpty()
        while rs.next() do {
                set J=rs.getCol("STAB")
        	type RecordLNPATH1 fLNPATH1=Db.getRecord("LNPATH1","TABLE=:TABLE,PATH=:PATH,STAB=:J")
                set fLNPATH1.pastr=$S(DL[$P(TS(I),"-",1):$P(TS(I),"-",2,999),1:TS(I))
                do fLNPATH1.bypassSave()
                }
        }
        do KIL
        quit
 
 
VAL     //
 
        set V=$S(A="V":5,A=">":4,A="#":3,A="v":2,A=0:1,1:0)
        if 'V set ER=1
        quit
 
 
NUM     //
 
        set L=$L(P)
        set XP=P
        for Z=1:1:L do { quit
                set A=$E(P,Z)
                if A?1N.N do {
                        set P=$E(P,1,Z-1)
                        set N=$E(XP,Z,L)
                        set PCT=PCT-2
                        }
                }
        quit
 
 
KIL     //
 
        kill CT,I,J,K,L,N,P,PC,PCT,R,S,ST,ST1,V,VH,X,XP,Z
        quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60289^25189^Sudanthiran S. Kumar^9238"	// Signature - LTD^TIME^USER^SIZE
