public F0100015(RecordDEP dep,FEECAT,FEETYP,FEECNT,NOTFSN,TAMT)	// 12/19/2006 02:36 PM - 1
	// Plan:  INTCK; for date:  06/01/2006; Desc:  Interest Checking Fee Pln
  /*
	ORIG: RUSSELL - 12/22/2001
	DESC: Deposit service fee template
	PROCEDURE ID:  SRVCMP1

---- Comments -----------------------------------------------------------------
	
	This procedure is never run independently.  It is used as a template
	by SRVCMP for the compilation of fee plans.

	Called at tag ENT by service fee program (^SRVFEE).  Called from
	the top for transaction processing, overdraft protection, and
	various inquiries.

	Makes use of FSN^BCHFEEUT and FILE^BCHFEEUT as private functions
	that contain code that does not need to be in the template.

	Note:  The arguments are used when the F* fee routine is generated.

 	ARGUMENTS:

		. dep		Deposit object		/TYP=RecordDEP/REQ/MECH=REF
		. FEECAT	Fee category		/TYP=T/REQ/MECH=VAL
		. FEETYP	Fee type		/TYP=T/REQ/MECH=VAL
		. FEECNT	Fee count		/TYP=T/NOREQ/MECH=VAL
		. NOTFSN	Do not update files	/TYP=T/NOREQ/MECH=VAL
		. TAMT		Transaction amount	/TYP=T/NOREQ/MECH=VAL

	RETURNS:
	
		. CHGOPT	Charge option		/TYP=N
		. FEEAMT	Fee amount		/TYP=$
		. MAXDLY	Maximum daily amount	/TYP=$
		. TR16		Fee info for TTXODC	/TYP=T

	---- Revision History -------------------------------------------------
	08/23/05 - RussellDS - CR16911
		   PSL clean-up to reduce warnings when fee plans are
		   compiled.
		   
		   Removed old revision history.
	*/

	
	/* The following lines are to avoid errors on mass recompiles of
	   procedures and will be removed by SRVCMP
	*/

	type Boolean ONLINE
	type Date SCND, UPNDT
	type Number ANLSYS, PLTP

	set ANLSYS=dep.anlsys
	set SCND=dep.scnd
	set UPNDT=dep.upndt
	set ONLINE=1
	
	do EXEC(.dep)
	
	quit
	

EXEC(RecordDEP dep)	// Process fee type FEETYP

	type public Boolean ER, NOTFSN, ONLINE
	type public Date SCND, UPNDT
	type public Number CHGOPT, FEECAT, FEECNT, MAXDLY, PLTP

	type Boolean HIT
	type Number CNT
	type String CRCD
	
	set FEECNT=$G(FEECNT)
	set NOTFSN=$G(NOTFSN)
	
	do PLAN(.dep)
	
	// Added this code to set the SCND equal to the UPNDT if the 
	// process is a usage credit and not a service fee.
	if $D(ONLINE),PLTP set SCND=UPNDT
	
	set (ER,MAXDLY)="",HIT=0
	
	if FEECAT=1 set HIT=$$FEECAT1(.dep)		// Miscellaneous fees
	else  if FEECAT=2 set HIT=$$FEECAT2(.dep)	// Event related fees
	else  if FEECAT=3 set HIT=$$FEECAT3(.dep)	// Transaction fees
	else  if FEECAT=4 set HIT=$$FEECAT4(.dep)	// Services fees

	/* Do not do FSN if no FEECNT, as FEECNT will be set to 0 for DLY fees
	   if none of the queries is true. This is the only fee type that
	   allows counter updates based on queries.

	   Note that FSN^BCHFEEUT depends on a variety of variables that are
	   defined in this routine.
	*/
	if 'ER,HIT,$D(ONLINE),$G(CHGOPT),FEECNT do FSN^BCHFEEUT
	quit
	

PLAN(RecordDEP dep)	// Plan Information - Get CRCD if convert flag is on.
	type public String CRCD
	type public Number PLTP
	set PLTP=0
	set CRCD=dep.crcd
	//tagplan
	quit
	

FEECAT1(RecordDEP dep)	// Miscellaneous fees (1000-1999)
	type public String FEETYP
	if FEETYP="CECF" do 1000(.dep) quit 1
	if FEETYP="CKFOR" do 1001(.dep) quit 1
	if FEETYP="COPY" do 1002(.dep) quit 1
	if FEETYP="FAX" do 1003(.dep) quit 1
	if FEETYP="FEE" do 1004(.dep) quit 1
	if FEETYP="RCF" do 1005(.dep) quit 1
	if FEETYP="SRVPMT" do 1006(.dep) quit 1
	if FEETYP="TCF" do 1007(.dep) quit 1
	//tag1
	quit 0							// no hits
	

FEECAT2(RecordDEP dep)	// Event related fees (2000-2999)
	type public String FEETYP
	if FEETYP="AVL" do 2000(.dep) quit 1
	if FEETYP="LDG" do 2001(.dep) quit 1
	if FEETYP="LIM" do 2002(.dep) quit 1
	if FEETYP="ODT" do 2003(.dep) quit 1
	if FEETYP="PATF" do 2004(.dep) quit 1
	if FEETYP="PATS" do 2005(.dep) quit 1
	if FEETYP="RET" do 2006(.dep) quit 1
	if FEETYP="STP" do 2007(.dep) quit 1
	if FEETYP="UNC" do 2008(.dep) quit 1
	//tag2
	quit 0							// no hits
	

FEECAT3(RecordDEP dep)	// Transaction fees (3000-3999)
	type public String FEETYP
	if FEETYP="CKFOR" do 3000(.dep) quit 1
	if FEETYP="CKONUS" do 3001(.dep) quit 1
	if FEETYP="FRNATM" do 3002(.dep) quit 1
	//tag3
	quit 0							// no hits
	

FEECAT4(RecordDEP dep)	// Services (4000-4999)
	type public String FEETYP
	if FEETYP="CHARGE" do 4000(.dep) quit 1
	//tag4
	quit 0							// no hits


	// Type of Fee
1000(RecordDEP dep)	// Fee type:  CECF - Certified Check Fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(10,CRCD,"USD",1)*FEECNT)
	quit
1001(RecordDEP dep)	// Fee type:  CKFOR - Foreign Ck Clearing 
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=$$^SCARND(.05*TAMT*FEECNT,,CID)
	quit
1002(RecordDEP dep)	// Fee type:  COPY - Photocopy Fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(2,CRCD,"USD",1)*FEECNT)
	quit
1003(RecordDEP dep)	// Fee type:  FAX - Fax Fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(2,CRCD,"USD",1)*FEECNT)
	quit
1004(RecordDEP dep)	// Fee type:  FEE - General Fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(2,CRCD,"USD",1)*FEECNT)
	quit
1005(RecordDEP dep)	// Fee type:  RCF - Return Check Fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(20,CRCD,"USD",1)*FEECNT)
	quit
1006(RecordDEP dep)	// Fee type:  SRVPMT - Service Item Fee Pay
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=2
	if $D(ONLINE) set FEEAMT=0 quit
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(4,CRCD,"USD",1)*FEECNT)
	quit
1007(RecordDEP dep)	// Fee type:  TCF - Treasurer Check Fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(2,CRCD,"USD",1)*FEECNT)
	quit
2000(RecordDEP dep)	// Fee type:  AVL - Available Balance
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(5,CRCD,"USD",1)*FEECNT)
	quit
2001(RecordDEP dep)	// Fee type:  LDG - Ledger Balance
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(25,CRCD,"USD",1)*FEECNT)
	quit
2002(RecordDEP dep)	// Fee type:  LIM - Overdraft Limit
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(25,CRCD,"USD",1)*FEECNT)
	quit
2003(RecordDEP dep)	// Fee type:  ODT - Overdraft Transfer
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(5,CRCD,"USD",1)*FEECNT)
	quit
2004(RecordDEP dep)	// Fee type:  PATF - PAT Failure Fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(3,CRCD,"USD",1)*FEECNT)
	quit
2005(RecordDEP dep)	// Fee type:  PATS - PAT Success Fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(1,CRCD,"USD",1)*FEECNT)
	quit
2006(RecordDEP dep)	// Fee type:  RET - Return Check
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(25,CRCD,"USD",1)*FEECNT)
	quit
2007(RecordDEP dep)	// Fee type:  STP - Stop Payment Fees
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(15,CRCD,"USD",1)*FEECNT)
	if (FEEAMT=0)!(FEEAMT="*") set FEECNT=0 quit
	quit
2008(RecordDEP dep)	// Fee type:  UNC - Uncollected Balance
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(5,CRCD,"USD",1)*FEECNT)
	quit
3000(RecordDEP dep)	// Fee type:  CKFOR - 
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=2
	if $D(ONLINE) set FEEAMT=0 quit
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(.05,CRCD,"USD",1)*FEECNT)
	quit
3001(RecordDEP dep)	// Fee type:  CKONUS - 
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=2
	if $D(ONLINE) set FEEAMT=0 quit
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(.03,CRCD,"USD",1)*FEECNT)
	quit
3002(RecordDEP dep)	// Fee type:  FRNATM - 
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=1
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(2,CRCD,"USD",1)*FEECNT)
	quit
4000(RecordDEP dep)	// Fee type:  CHARGE - Service fee
	type public Boolean ONLINE
	type public Number CHGOPT, CID, FEEAMT, FEECNT, MAXDLY, TAMT
	type public String CRCD
	set CHGOPT=2
	set MAXDLY=0,FEEAMT=($$CONV^CRCDUTL(5,CRCD,"USD",1)*FEECNT)
	quit
	//tagtyp
	

	// Query modifiers
	//tagqry
	

	// Fee schedules
	//tagsch
	

	// Fee table lookup
	//tagtbl
	


public ENT(RecordDEP dep,FEEBAL,SRVSUM,SCND)	 
	/* Entry point from service fee driver (^SRVFEE)

	ARGUMENTS:
		. dep		Deposit object			/TYP=RecordDEP
								/REQ/MECH=REF

		. FEEBAL	Balance used to compute fees	/TYP=N/REQ
								/MECH=VAL
	
		. SRVSUM()	Service fee summary data	/TYP=N/COND
								/MECH=REFARR:R

		. SCND		Service charge next date	/TYPE=D/NOREQ
								/MECH=VAL
	
	INPUTS:
		. CTL		Control flag			/TYP=N/REQ
				Position 1 = 0 => no updates,
				  inquiry only
				Position 2
				  0 => update directly
				  1 => update FSN for ^DEPCL
				    Note:  no longer used since FSN array
				    no longer used.  Perform update here
				    and caller will rollback if needed
				Position 3 = 1 => adjustment
	  			  from EFD transaction, set up
				  FEER and FEET.  Used by
				  OL^BCHFEEUT for effective
				  dated transactions.

		. FEEPLN	Service fee plan for this	/TYP=T/REQ
				account				/MECH=REF

		. FEEPLN()	Service fee plan information	/TYP=T/REQ
				from SRVSUM			/MECH=REFARR:R
	
		. TRNGRP()	Transaction code groups		/TYP=T/COND
								/MECH=REFARR:R
	RETURNS:
		. FEE()		FEE(1) = direct charge		/TYP=ARRAY
				FEE(2) = charge at SCND
				FEE(3) = offset with earnings

		. FEE3A		Sum of FEECAT=3,CHGOPT=2 fees	/TYP=$

		. FEER		Restated transaction fees
				charged at analysis if
				CTL byte 3 is on.

		. FEET		Original transaction fees
				charged at analysis if
				CTL byte 3 is on.	
	*/
	
	type public Number FEE(), FEE3A, FEER, FEET
	type public String CTL, FEEPLN(), TRNGRP()
	
	type Boolean NOTFSN, ONNLINE
	type Number CHGOPT, FEEAMT, FEECAT, FEECNT, I, MAXDLY
	type String FEETYP, SCH
	
	kill FEE
	for I=1,2,3 set FEE(I)=0
	set FEE3A=0
	
	if $E(CTL,3) set (FEET,FEER)=0
	
	set FEECAT=1 D SRV(.dep)
	set FEECAT=2 D SRV(.dep)
	set FEECAT=3 D TRN(.dep), TRN2(.dep)
	set FEECAT=4 D PLN(.dep)
	quit


SRV(RecordDEP dep)	// Category 1 and 2 fees

	type public Number FEE(), FEECAT

	type ResultSet srvdrs=Db.select("FEETYP,SRVCSTD,SRVCNTA,SRVCSTA,SRVADJ,SRVTAMT","SRVD","CID=:CID AND PLTP=:PLTP AND SCND=:SCND AND FEECAT=:FEECAT")
	quit:srvdrs.isEmpty()
	
	while srvdrs.next() do {
		
		type Boolean QUIT
		type Number FEEAMT, FEECNT, SRVADJ, SRVCNTA, SRVCSTA, TAMT
		type String FEETYP, SCH
		
		set FEEAMT=0
		set FEETYP=srvdrs.getCol(1)
		set SRVCNTA=srvdrs.getCol(3)
		set SRVCSTA=srvdrs.getCol(4)
		set SRVADJ=srvdrs.getCol(5)
		set FEECNT=SRVCNTA+SRVADJ
		set TAMT=srvdrs.getCol(6)			// SRVTAMT
		set FEE(1)=FEE(1)+srvdrs.getCol(2)		// SRVCSTD

		set QUIT=0
		// Special handling for certain event related fees
		if FEECAT=2 do {
			if FEETYP="CRD",FEECNT set QUIT=$$CARDS(.dep)
			else  if FEETYP="STP",FEECNT set QUIT=$$STOPS(.dep)
			else  if FEETYP="DLY" set QUIT=$$DAILY(.dep,SRVADJ,SRVCNTA,SRVCSTA)
		}
		if QUIT quit		

		if FEECNT do EXEC(.dep)
		do FILE^BCHFEEUT
	}
	quit

CARDS(RecordDEP dep)	// Card fees

	type public Number FEEAMT, FEECNT

	type Number TOTFEES
	type String CARDTYPE
	
	set TOTFEES=0
	type ResultSet crdrs=Db.select("CARDTYPE,FEECNT","SRVCRD","CID=:CID AND PLTP=:PLTP AND SCND=:SCND AND FEECNT<>0")
	while crdrs.next() do {
		set CARDTYPE=crdrs.getCol(1)
		set FEECNT=crdrs.getCol(2)
		do EXEC(.dep)
		set TOTFEES=TOTFEES+FEEAMT
	}

	set FEEAMT=TOTFEES
	do FILE^BCHFEEUT
	quit 1

STOPS(RecordDEP dep)	// Stop fees

	type public Number FEEAMT, FEECNT
	
	type Number STPTYP, TOTFEES

	set TOTFEES=0
	type ResultSet stoprs=Db.select("SEQ,COUNT","SRVDTL","CID=:CID AND PLTP=:PLTP AND SCND=:SCND AND FEECAT=:FEECAT AND FEETYP='STP' AND COUNT<>0")
	if 'stoprs.isEmpty() do {	
		while stoprs.next() do {
			set STPTYP=stoprs.getCol(1)
			set FEECNT=stoprs.getCol(2)	// SRVCNTD
			do EXEC(.dep)
			set TOTFEES=TOTFEES+FEEAMT
		}
	}
	set FEEAMT=TOTFEES
	do FILE^BCHFEEUT
	quit 1

DAILY(RecordDEP dep,ADJ,CNTACCUM,CSTACCUM)	// Daily Fee Processing

	type public Number FEEAMT, FEECNT

	set FEECNT=ADJ
	do EXEC(.dep)			// Will return FEEAMT
	set FEEAMT=CSTACCUM+FEEAMT
	set FEECNT=CNTACCUM+ADJ
	do FILE^BCHFEEUT
	quit 1

	
TRN(RecordDEP dep)	// Category 3 fees - part 1

	type public Date SCND
	type public Number CID, FEE(), FEEAMT, FEECNT, FEET, PLTP
	type public String CTL, FEECAT, FEEPLN(,,), SRVSUM(,)

	type String FEETYP
	
	set FEETYP=""
	for  set FEETYP=$O(FEEPLN(FEEPLN,FEECAT,FEETYP)) quit:FEETYP=""  do {
		
		type Number SRVCSTA, SRVCSTD, TAMT
		type String SCH, X
		
		set FEEAMT=0
		set X=$G(SRVSUM(FEECAT,FEETYP))
		set FEECNT=$P(X,"|",1)
		set TAMT=$P(X,"|",2)
		
		type RecordSRVD srvd=Db.getRecord("SRVD","CID=:CID,PLTP=:PLTP,SCND=:SCND,FEECAT=:FEECAT,FEETYP=:FEETYP", 1)

		set SRVCSTA=srvd.srvcsta
		set SRVCSTD=srvd.srvcstd

		if $E(CTL,3) set FEET=FEET+SRVCSTA
		set FEE(1)=FEE(1)+SRVCSTD
		do EXEC(.dep)
		if FEECNT do FILE^BCHFEEUT
		// Restated fee for this fee type is being ec/reversed, so
		// do updates
		if $E(CTL,3),SRVCSTA,'FEECNT do FILE^BCHFEEUT
	}
	quit
	

TRN2(RecordDEP dep)	/* Category 3 fees - part 2
	Accumulate direct transaction fees that are included in the feeplan
	and direct transaction fees not in the account feeplan.
	*/
	
	type public Number FEE(), FEEAMT, FEECAT, FEECNT, FEETYP
	type public String FEEPLN(,,)

	type ResultSet srvdrs=Db.select("FEETYP,SRVCSTD,SRVCNTA,SRVADJ,SRVTAMT","SRVD","CID=:CID AND PLTP=:PLTP AND SCND=:SCND AND FEECAT=:FEECAT")
	
	while srvdrs.next() do {
		
		type Number TAMT
		
		set FEETYP=srvdrs.getCol(1)
		quit:$D(FEEPLN(FEEPLN,FEECAT,FEETYP))
		set FEEAMT=0
		set FEECNT=srvdrs.getCol(3)+srvdrs.getCol(4)	// SRVCNTA, SRVADJ
		set TAMT=srvdrs.getCol(5)			// SRVTAMT
		set FEE(1)=FEE(1)+srvdrs.getCol(2)		// SRVCSTD
		if FEECNT do EXEC(.dep),FILE^BCHFEEUT
	}
	quit

	
PLN(RecordDEP dep)	// Category 4 fees

	type public Number FEEAMT, FEECAT, FEECNT
	type public String FEEPLN(,,)

	type String FEETYP

	set FEETYP=""
	for  set FEETYP=$O(FEEPLN(FEEPLN,FEECAT,FEETYP)) quit:FEETYP=""  do {

		type String SCH
		
		set FEEAMT=0
		set FEECNT=1
		do EXEC(.dep)
		if FEEAMT do FILE^BCHFEEUT
	}
	quit
