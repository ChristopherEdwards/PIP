R01S183	// SCA114 - Loan Sale Payoff Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:44 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1

	set RID="SCA114"
	set RN="Loan Sale Payoff Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[LNLS9]EFD|[LNLS9]EFD:DISTINCT:NOVAL||||D|Payoff Date|||||"

	set %READ="IO/REQ,VIN1#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,AD(),ADD,CID,COL,COLL,CONAM,GRP,INCD,INVAC,PDTHRU,PL,RID,RN,SDAT,VL,VLOF,VRF(),VSTATS(),fLNLS1,fLNLS2,fLNLS3,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate,zEXIT

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA114",RN="Loan Sale Payoff Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA114","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Payoff Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)

		set VWHERE=""
		set VWHERE=VWHERE_"LNLS9.EFD=:VIN1 AND ((LN.PCIDSTAT=0) OR (LN.PCIDST"
		set VWHERE=VWHERE_"AT=''))"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Loan Sale Payoff Summary"
		set VBNRINFO("PGM")="R01S183"
		set VBNRINFO("RID")="SCA114"
		set VBNRINFO("TABLES")="LNLS9,LNLS8,LNLS3,LNLS2,LNLS1,LNLS6,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNLS9]EFD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNLS9]""LSPO"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNLS9]INCD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNLS9]PL"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNLS9]GRP"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,LNLS9]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:9 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNLS9.CID,LNLS9.EFD,LNLS9.INCD,LNLS9.PL,LNLS9.GRP,LNLS9.POBAL,LNLS9.INTOD,LNLS9.PRLRM,LNLS9.POBLI,LNLS9.INTCL,LNLS9.INTRM,LNLS9.LRBAL,LNLS9.INTAD,LNLS9.NETRM,LN.TITLE1,LNLS9.POEFF,LNLS6.INVYLD,LN.TITLE2,LN.TITLE3,LN.TITLE4,LNLS1.DESCHDG,LNLS8.PL,LNLS2.EFD,LNLS2.PP,LNLS2.PICM,LNLS2.SVN,LNLS2.PRIRO,LNLS2.YIELD,LNLS2.FEEP,LNLS2.SFCM,LNLS2.ACTGRP,LNLS2.PRPRO,LNLS9.PONDD,LN.DIST1FRE","LNLS9,LNLS8,LNLS3,LNLS2,LNLS1,LNLS6,LN","LNLS9.EFD=:VIN1 AND ((LN.PCIDSTAT=0) OR (LN.PCIDSTAT=''))","LNLS9.EFD,LNLS9.INCD,LNLS9.PL,LNLS9.GRP,LNLS9.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc3,vovc4,vovc5,vovc1
	set vovc2="",vovc3="",vovc4="",vovc5="",vovc1=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc1,vc1
	set vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc1=vc1
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34
	set vc1=V.piece($C(9),1)			// LNLS9.CID
	set vc2=V.piece($C(9),2)			// LNLS9.EFD
	set vc3=V.piece($C(9),3)			// LNLS9.INCD
	set vc4=V.piece($C(9),4)			// LNLS9.PL
	set vc5=V.piece($C(9),5)			// LNLS9.GRP
	set vc6=V.piece($C(9),6)			// LNLS9.POBAL
	set vc7=V.piece($C(9),7)			// LNLS9.INTOD
	set vc8=V.piece($C(9),8)			// LNLS9.PRLRM
	set vc9=V.piece($C(9),9)			// LNLS9.POBLI
	set vc10=V.piece($C(9),10)			// LNLS9.INTCL
	set vc11=V.piece($C(9),11)			// LNLS9.INTRM
	set vc12=V.piece($C(9),12)			// LNLS9.LRBAL
	set vc13=V.piece($C(9),13)			// LNLS9.INTAD
	set vc14=V.piece($C(9),14)			// LNLS9.NETRM
	set vc15=V.piece($C(9),15)			// LN.TITLE1
	set vc16=V.piece($C(9),16)			// LNLS9.POEFF
	set vc17=V.piece($C(9),17)			// LNLS6.INVYLD
	set vc18=V.piece($C(9),18)			// LN.TITLE2
	set vc19=V.piece($C(9),19)			// LN.TITLE3
	set vc20=V.piece($C(9),20)			// LN.TITLE4
	set vc21=V.piece($C(9),21)			// LNLS1.DESCHDG
	set vc22=V.piece($C(9),22)			// LNLS8.PL
	set vc23=V.piece($C(9),23)			// LNLS2.EFD
	set vc24=V.piece($C(9),24)			// LNLS2.PP
	set vc25=V.piece($C(9),25)			// LNLS2.PICM
	set vc26=V.piece($C(9),26)			// LNLS2.SVN
	set vc27=V.piece($C(9),27)			// LNLS2.PRIRO
	set vc28=V.piece($C(9),28)			// LNLS2.YIELD
	set vc29=V.piece($C(9),29)			// LNLS2.FEEP
	set vc30=V.piece($C(9),30)			// LNLS2.SFCM
	set vc31=V.piece($C(9),31)			// LNLS2.ACTGRP
	set vc32=V.piece($C(9),32)			// LNLS2.PRPRO
	set vc33=V.piece($C(9),33)			// LNLS9.PONDD
	set vc34=V.piece($C(9),34)			// LN.DIST1FRE
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1
 type public Date SDAT
 type public Number CID,COLL,COL
 type public String ADD,AD(),GRP,INVAC,INCD,PL
 type Number I,J

 for I=1:1:3 set AD(I)=""
 set (INVAC,SDAT,COLL)="" 
 kill COL,ADD
 
 set CID=vc1

 type RecordLN ln=Db.getRecord("LN","CID=:CID",1)
 if ln.getMode() do {
	type RecordCOL col=Db.getRecord("COL","COLL=:ln.coll",1)
	if col.getMode() do {
		 set AD(1)=col.ad1
		 set AD(2)=col.ad2
		 set AD(3)=col.ad3
		}
	}

 for I=3:-1:2 if AD(I-1)="" for J=I-1:1:2 set AD(J)=AD(J+1),AD(J+1)="" 
 
 type RecordLNLS8 fLNLS8=Db.getRecord("LNLS8","INCD=:INCD,PL=:PL,GRP=:GRP,CID=:CID",1)
 if fLNLS8.getMode() do { 
	type RecordLNLS6 fLNLS6=Db.getRecord("LNLS6","CID=:CID,PSEQ=:fLNLS8.pseq",1)
 	if fLNLS6.getMode() do {
		set INVAC=fLNLS6.invac
 		set SDAT=fLNLS6.sdat
		}
	}
	quit

VPREAQ	// Pre-processor (after query)

 type public String fLNLS1,fLNLS2,fLNLS3,GRP,INCD,PL,zEXIT

 set zEXIT="",INCD="",PL="",GRP="",fLNLS3="",fLNLS2="",fLNLS1=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG5 quit:VFMQ
	do VHDG6 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc1,vovc1
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(vovc5'=vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc13,vc10,vc7,vc11,vc12,vc14,vc6,vc9,vc8
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+vc13			// @TOT([LNLS9]INTAD)
	set VT(6,2,1)=VT(6,2,1)+vc10			// @TOT([LNLS9]INTCL)
	set VT(6,3,1)=VT(6,3,1)+vc7			// @TOT([LNLS9]INTOD)
	set VT(6,4,1)=VT(6,4,1)+vc11			// @TOT([LNLS9]INTRM)
	set VT(6,5,1)=VT(6,5,1)+vc12			// @TOT([LNLS9]LRBAL)
	set VT(6,6,1)=VT(6,6,1)+vc14			// @TOT([LNLS9]NETRM)
	set VT(6,7,1)=VT(6,7,1)+vc6			// @TOT([LNLS9]POBAL)
	set VT(6,8,1)=VT(6,8,1)+vc9			// @TOT([LNLS9]POBLI)
	set VT(6,9,1)=VT(6,9,1)+vc8			// @TOT([LNLS9]PRLRM)
	quit

VSUM4	// Summary
	type public String %TIM,AD(),ADD,CID,COL,COLL,GRP,I,INCD,INVAC,IOSL,PDTHRU,PL,SDAT,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate,zEXIT

	if 'VT(4) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="     "_"Investor Totals"
	set V=VT(4,7,1)					// @TOT([LNLS9]POBAL,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,3,1)					// @TOT([LNLS9]INTOD,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,9,1)					// @TOT([LNLS9]PRLRM,)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set V=VT(4,8,1)					// @TOT([LNLS9]POBLI,)
	set VL="                                                                             "_$J($FN(V,",",2),14)
	set V=VT(4,2,1)					// @TOT([LNLS9]INTCL,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,4,1)					// @TOT([LNLS9]INTRM,)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set V=VT(4,5,1)					// @TOT([LNLS9]LRBAL,)
	set VL="                                                                             "_$J($FN(V,",",2),14)
	set V=VT(4,1,1)					// @TOT([LNLS9]INTAD,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=VT(4,6,1)					// @TOT([LNLS9]NETRM,)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VHDG5	// Group Header
	type public String %MSKD,%TIM,AD(),ADD,CID,COL,COLL,CONAM,ER,GRP,INCD,INVAC,IOSL,PDTHRU,PL,RID,RN,SDAT,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate,zEXIT

	quit:vh(5)  set vh(5)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="Investor:"
	set VL=VL_$J("",10-VL.length())_$E(vc21,1,45)
	do VOM
	set VL="" do VOM
	set VL="    "_"Pool:"
	set VL=VL_$J("",10-VL.length())_$E(vc22,1,10)
	set VL=VL_$J("",21-VL.length())_"Dated:"
	set VL=VL_$J("",28-VL.length())_$J($$DAT^%ZM(vc23),10)
	set VL=VL_$J("",39-VL.length())_"Part %:"
	set VL=VL_$J("",47-VL.length())_$J(vc24,9,5)
	set VL=VL_$J("",57-VL.length())_"Rem Method: "
	set VL=VL_$J("",70-VL.length())_$J(vc25,11)
	set VL=VL_$J("",84-VL.length())_"Servicer:"
	set VL=VL_$J("",94-VL.length())_$E(vc26,1,10)
	set VL=VL_$J("",106-VL.length())_"P/O Int: "
	set VL=VL_$J("",115-VL.length())_$E(vc27,1,1)
	do VOM
	set VL="                     "_"Yield:"
	set VL=VL_$J("",28-VL.length())_$J(vc28,8,5)
	set VL=VL_$J("",40-VL.length())_"Fee %:"
	set VL=VL_$J("",47-VL.length())_$J(vc29,8,5)
	set VL=VL_$J("",57-VL.length())_"Fee Method:"
	set VL=VL_$J("",69-VL.length())_$E(vc30,1,5)
	set VL=VL_$J("",85-VL.length())_"Pool ID:"
	set VL=VL_$J("",94-VL.length())_$E(vc31,1,10)
	set VL=VL_$J("",106-VL.length())_"P/O Prl:"
	set VL=VL_$J("",115-VL.length())_$E(vc32,1,1)
	do VOM
	set VL="" do VOM
	quit

VSUM5	// Summary
	type public String %TIM,AD(),ADD,CID,COL,COLL,GRP,I,INCD,INVAC,IOSL,PDTHRU,PL,SDAT,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate,zEXIT

	if 'VT(5) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ  set vh(5)=0 do VHDG5 quit:VFMQ

	set VL="" do VOM
	set VL="      "_"Pool Totals"
	set V=VT(5,7,1)					// @TOT([LNLS9]POBAL,)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=VT(5,3,1)					// @TOT([LNLS9]INTOD,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=VT(5,9,1)					// @TOT([LNLS9]PRLRM,)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set V=VT(5,8,1)					// @TOT([LNLS9]POBLI,)
	set VL="                                                                             "_$J($FN(V,",",2),14)
	set V=VT(5,2,1)					// @TOT([LNLS9]INTCL,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=VT(5,4,1)					// @TOT([LNLS9]INTRM,)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set V=VT(5,5,1)					// @TOT([LNLS9]LRBAL,)
	set VL="                                                                             "_$J($FN(V,",",2),14)
	set V=VT(5,1,1)					// @TOT([LNLS9]INTAD,)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=VT(5,6,1)					// @TOT([LNLS9]NETRM,)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set VL="" do VOM
	quit

VHDG6	// Group Header
	type public String %MSKD,%TIM,AD(),ADD,CID,COL,COLL,CONAM,ER,GRP,INCD,INVAC,IOSL,PDTHRU,PL,RID,RN,SDAT,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate,zEXIT

	quit:vh(6)  set vh(6)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="                                                                               "_"Internal Bal        Odd Days      Prin Remit"
	do VOM
	set VL="    "_"Internal                                                                   Investor Bal        Calc Int       Int Remit"
	do VOM
	set VL="    "_"Investor  Borrower                       Effective   Inv Yld  Paid Through Last Rpt Bal         Int Adj     TOTAL REMIT"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,AD(),ADD,CID,COL,COLL,GRP,INCD,INVAC,IOSL,PDTHRU,PL,SDAT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate,zEXIT

	if VLC+5>IOSL do VHDG0 quit:VFMQ  set vh(6)=0 do VHDG6 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc1,12)
	set VL=VL_$J("",14-VL.length())_$E(vc15,1,30)
	set VL=VL_$J("",45-VL.length())_$J($$DAT^%ZM(vc16),10)
	set VL=VL_$J("",56-VL.length())_$J(vc17,8,5)
	do VP1 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(PDTHRU),10)
	set VL=VL_$J("",66-VL.length())_V
	set VL=VL_$J("",77-VL.length())_$J($FN(vc6,",",2),14)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc7,",",2),15)
	set VL=VL_$J("",108-VL.length())_$J($FN(vc8,",",2),15)
	do VOM
	set VL=$J(INVAC,12)
	set VL=VL_$J("",14-VL.length())_$E(vc18,1,40)
	set VL=VL_$J("",55-VL.length())_$J($FN(vc9,",",2),36)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc10,",",2),15)
	set VL=VL_$J("",108-VL.length())_$J($FN(vc11,",",2),15)
	do VOM
	set VL="              "_$E(vc19,1,40)
	set VL=VL_$J("",55-VL.length())_$J($FN(vc12,",",2),36)
	set VL=VL_$J("",92-VL.length())_$J($FN(vc13,",",2),15)
	set VL=VL_$J("",108-VL.length())_$J($FN(vc14,",",2),15)
	do VOM
	set VL="              "_$E(vc20,1,40)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AD(),ADD,CID,COL,COLL,CONAM,GRP,INCD,INVAC,PDTHRU,PL,RID,RN,SDAT,VL,fLNLS1,fLNLS2,fLNLS3,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate,zEXIT
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+4,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  (SCA114)"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="Payoffs Dated "
	set VL=VL_$J("",14-VL.length())_$J($$DAT^%ZM(vc2),10)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,AD(),ADD,CID,COL,COLL,GRP,INCD,INVAC,PDTHRU,PL,SDAT,fLNLS1,fLNLS2,fLNLS3,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate,zEXIT
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="      "_"Report Totals"
	set V=0						// @TOT([LNLS9]POBAL,0)
	for I=0:1:6 set V=V+VT(I,7,1)
	set VL=VL_$J("",77-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS9]INTOD,0)
	for I=0:1:6 set V=V+VT(I,3,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS9]PRLRM,0)
	for I=0:1:6 set V=V+VT(I,9,1)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set V=0						// @TOT([LNLS9]POBLI,0)
	for I=0:1:6 set V=V+VT(I,8,1)
	set VL="                                                                             "_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS9]INTCL,0)
	for I=0:1:6 set V=V+VT(I,2,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS9]INTRM,0)
	for I=0:1:6 set V=V+VT(I,4,1)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	set V=0						// @TOT([LNLS9]LRBAL,0)
	for I=0:1:6 set V=V+VT(I,5,1)
	set VL="                                                                             "_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS9]INTAD,0)
	for I=0:1:6 set V=V+VT(I,1,1)
	set VL=VL_$J("",93-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT([LNLS9]NETRM,0)
	for I=0:1:6 set V=V+VT(I,6,1)
	set VL=VL_$J("",109-VL.length())_$J($FN(V,",",2),14)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: PDTHRU

	type public String vc33,vc34
 type public String FRE,JD,NJD,PDTHRU,PONDD
 type public Boolean ER

 set PDTHRU=""
 set JD=vc33
 set PONDD=vc33
 set FRE=vc34
 if (PONDD.isNull())!(FRE.isNull())  quit
 do ^UFRE 
 if ER quit
 set PDTHRU=NJD
 quit
	quit
