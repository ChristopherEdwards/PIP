R01S299	// SCA296 - GT.M Image Contents File Listing
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:47 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="SCA296"
	set RN="GT.M Image Contents File Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[UTBLIMAGE]NAME|[UTBLIMAGE1]:NOVAL||D EXT^DBSQRY||T|Image Name|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA296",RN="GT.M Image Contents File Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA296","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[UTBLIMAGE]ID#14#12,[UTBLIMAGE]SYSTEM#26#3"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[UTBLIMAGE]NAME "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("UTBLIMAGE,UTBLIMAGE1") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Image Name"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="GT.M Image Contents File Listing"
		set VBNRINFO("PGM")="R01S299"
		set VBNRINFO("RID")="SCA296"
		set VBNRINFO("TABLES")="UTBLIMAGE,UTBLIMAGE1"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,UTBLIMAGE]""IMAGE"""
		set VBNRINFO("ORDERBY",2)="[SYSDEV,UTBLIMAGE]NAME"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,UTBLIMAGE]OPT"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,UTBLIMAGE]ID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	set VRF=""
	set (VR,VRG)=""
	for vI=1:1:1 set VRF(vI)=""			// Initialize print buffers
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"UTBLIMAGE.NAME,UTBLIMAGE.OPT,UTBLIMAGE.ID,UTBLIMAG"
	set VSELECT=VSELECT_"E.SYSTEM,UTBLIMAGE1.NAME,UTBLIMAGE1.DESC,UTBLIMAGE"
	set VSELECT=VSELECT_"1.DATETIM,UTBLIMAGE1.%UID,UTBLIMAGE1.CNT,UTBLIMAGE"
	set VSELECT=VSELECT_"1.DAYS,UTBLIMAGE1.UCLS,UTBLIMAGE1.DEP,UTBLIMAGE1.L"
	set VSELECT=VSELECT_"N,UTBLIMAGE1.RETAIN"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"UTBLIMAGE,UTBLIMAGE1",VWHERE,"UTBLIMAGE.NAME,UTBLIMAGE.OPT,UTBLIMAGE.ID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// UTBLIMAGE.NAME
	set vc2=V.piece($C(9),2)			// UTBLIMAGE.OPT
	set vc3=V.piece($C(9),3)			// UTBLIMAGE.ID
	set vc4=V.piece($C(9),4)			// UTBLIMAGE.SYSTEM
	set vc5=V.piece($C(9),5)			// UTBLIMAGE1.NAME
	set vc6=V.piece($C(9),6)			// UTBLIMAGE1.DESC
	set vc7=V.piece($C(9),7)			// UTBLIMAGE1.DATETIM
	set vc8=V.piece($C(9),8)			// UTBLIMAGE1.%UID
	set vc9=V.piece($C(9),9)			// UTBLIMAGE1.CNT
	set vc10=V.piece($C(9),10)			// UTBLIMAGE1.DAYS
	set vc11=V.piece($C(9),11)			// UTBLIMAGE1.UCLS
	set vc12=V.piece($C(9),12)			// UTBLIMAGE1.DEP
	set vc13=V.piece($C(9),13)			// UTBLIMAGE1.LN
	set vc14=V.piece($C(9),14)			// UTBLIMAGE1.RETAIN
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	if 'VFMQ do VOM2
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		do VTRL0
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VHDG4 quit:VFMQ
	set VR=VR+1,(VRG,VSEQ)=1			// Repeat field
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb2!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	if VH0.get() do VOM2				// Flush print buffer at page break
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL2	// Detail
	type public String %TIM,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+9>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$E(vc5,1,20)
	set VL=VL_$J("",22-VL.length())_$E(vc6,1,40)
	set VL=VL_$J("",64-VL.length())_"Created on:"
	set VL=VL_$J("",77-VL.length())_$E(vc7,1,20)
	set VL=VL_$J("",99-VL.length())_"By:"
	set VL=VL_$J("",104-VL.length())_$E(vc8,1,20)
	do VOM
	set VL="" do VOM
	set VL="                           "_"Function usage over:"
	set VL=VL_$J("",48-VL.length())_$J(vc9,4)
	set VL=VL_$J("",66-VL.length())_"Business days reviewed:"
	set VL=VL_$J("",90-VL.length())_$J(vc10,4)
	do VOM
	set VL="                         "_"User classes selected:"
	set VL=VL_$J("",49-VL.length())_$E(vc11,1,40)
	do VOM
	set VL="                      "_"Include deposit routines:"
	set VL=VL_$J("",49-VL.length())_$S(vc12:"Y",1:"N")
	set VL=VL_$J("",52-VL.length())_"Loan routines:"
	set VL=VL_$J("",68-VL.length())_$S(vc13:"Y",1:"N")
	set VL=VL_$J("",71-VL.length())_"Retain user input:"
	set VL=VL_$J("",91-VL.length())_$S(vc14:"Y",1:"N")
	do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,IOSL,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	do VOM2
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set V=vc2,VO=V set V=$E(V,1,8) do VP1 quit:VFMQ!verror.get()  set VL="    "_V
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+4>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ
	set VRG=1

	set VL="             "_$J(vc3,12)
	set V=vc4,VO=V set V=$E(V,1,3) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",25-VL.length())_V		// [SYSDEV,UTBLIMAGE]SYSTEM
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if VPN do VTRL0
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Image Name"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VTRL0	// Page Trailer
	type Public Number IOSL,verror,vh,VFMQ,VLC,VT(),VX()
	type Public String %TIM,VPN,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String VL

	set VL=""
	for I=VLC:1:IOSL-3 do VOM

	set VL="" do VOM
	set VL="(*) indicates user addition to the file"
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	if VRG do VOM1 quit				// Store line image in print buffer

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

VOM1	// Repeat group print logic
	type Public Number vcrt,vlc,VLC,VR,VRG
	type Public String VL,VRF
	type Number DONE=0
	for  do { quit:DONE
		if VR<5 do { quit
			if VR>1 set VRF=VRF_$J("",((VR-1)*30)-VRF.length())
			set VRF=VRF_VL,VL=""
			set DONE=1
			}
		if vcrt<2 write VRF,!
		if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VRF)
		set VLC=VLC+1,VRF=""
		if VR=999 set VR=0,VRG=0,DONE=1		// End of report
		set VR=1				// Reset repeat field buffer
		}

	quit


VOM2	// Flush print buffer
	type Public Number VR,VRG
	type Public String VL
	if VL="",'VR quit
	if VR set VRG=1,VR=999
	do VOM
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,UTBLIMAGE]OPT

	// Converted to PSL by CNV70RW
	type Public String V

	set V=$S(V=0:"Routines",V=1:"Files",V=2:"Screens",V=5:"Reports")_":"
	quit 

VP2	// Column post-processor - [SYSDEV,UTBLIMAGE]SYSTEM

	type Public String V

	if V set V=""
	else  set V="(*)"
	quit 
