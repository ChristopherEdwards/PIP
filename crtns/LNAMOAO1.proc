LNAMOAO1
	/*

	DAYEND PROCESSING FOR ADD-ONS AND PAYEES

	   ORIG: Chuck Hardy (6721)
	   DESC:
	
	   NOTE: Various applications call this routine. Care should be taken
	         when adding new variables that are expected but are not
	         set directly in this routine.
	
	  ---- Revision History ------------------------------------------------

	  07/31/06 - KELLYP - CR 22048
	  	     Modified 2 section to eliminate DEAD warnings.
	
	  06/16/06 - TITOVE - CR 21819
	  	     Made numeric tags public.

	  03/15/06 - SATYANAS - CR20136
	  	     Put the quit in the section 2 while it is killing DBF and NR.
	  
	  11/03/05 - SATYANAS - CR16994
	  	     Removed the unscoped warnings.
	  
	  09/06/05 - TITOVE - CR 16844
	  	     Modified TP section by removing "newing" of TP variable.
	  	     This is now one of the arguments. Also added code to
	  	     initialize some variables locally, based on LN record.
	  	     Added new arguments, removed DB1 linetag.

	  12/08/03 - CARROLLJ - CR7239
		     Removed dead code in 2 linetag.

	  ----------------------------------------------------------------------
	
	*/
	quit
	
public	TP(RecordLN ln,
            Boolean TP,		// BCHLNDARC sets TP = 0
            Number NEG,		// Set and used by BCHLNNFAM
            Number NPM,		// Payments Satisfied
            Number DIF)

	/*
	 Transaction processing entry and delinquency reclassification entry
	 to calculate add-on interest of bill records that are delinquent.
	*/

	type public Number %AMT
	type public String AM()
	type Number AO, AOB, AOC, AOI, AOT, AS, N, OB, TI
		
	if 'AM.data() quit
	
	set %AMT = 0
	
	if 'ln.iam.extract(2) quit
	
	type RecordSTBLIAM stbliam = Db.getRecord("STBLIAM", "KEY = :ln.iam")
	
	set AO=ln.iun 
	set AOB=(ln.iun-(ln.ipl-ln.extamt)) 
	set AOT=ln.onp 
	set AOI=ln.irn 
	set AOC=NPM 
	set N="" 
	set TI=0
	
	if AOB<0 set (AOB,%AMT)=0 quit
	
	if stbliam.bes set AOC=AOC+1
	
	/*
	Declining Balance calculation interest calculation
	should stop once interest calculated is greater then
	IUN (Interest - Unearned (Original).
	*/
	for  set N=AM(N).order() quit:N.isNull()  quit:(ln.iun-TI)<0  do {
		
		if 'DIF do {
		
			set OB=+AM(N) 
			set AS=AM(N).piece("|",2) 
			set DIF=AS/OB
			}
		
		if stbliam.method=1 do 1(.ln) quit
		if stbliam.method=2 do 2(.ln) quit
		if stbliam.method=3 do 3(.ln) quit
		if stbliam.method=4 do 4(.ln,TP) quit
		
		set %AMT=%AMT*DIF 
		
		set AM(N).piece("|",3)=%AMT
		
		set TI=%AMT+TI 
		
		set AOC=AOC+1
		}
	
	set %AMT=TI.roundDec()
	
	kill TP
	
	quit 
	
	
public	4(RecordLN ln,
	  Boolean TP) 		
	  
	// SL - Straight line calculation method

	// Force the value of DIF to 1 because there should not be any
	// adjustments necessary for straight line method
	
	type public Number %AMT,AO,AOB,AOC,AOT,DIF,IAMAMT,NEG
	type Number AOAOT,CRLAMT
	
	if TP do {
		set DIF=1
		
		set CRLAMT=IAMAMT/(ln.crlmt*ln.iun)
		set %AMT=CRLAMT.roundDec()
		if NEG set %AMT=-%AMT
		}
		
	else  do {
		if 'AOT set %AMT=0 quit 
		
		set AOAOT=AO/AOT
		set %AMT=AOAOT.roundDec()
		 
		if NEG set %AMT=-%AMT
		if %AMT>AOB set %AMT=AOB
		if AOT=AOC set %AMT=AOB set AOB=0
		if AOB set AOB=AOB-%AMT
		}
		
	quit 
	

public	3(RecordLN ln)

	// R78 - Rule of 78ths calculation method
	// If amort counter (AOC) > amort term (AOT), set add-on amt = 0 & quit

	type public Number %AMT,AO,AOB,AOC,AOT,NEG
	type Number AONR,BOT,NR

	set NR=AOT-AOC 
	
	if NR<0 set %AMT=0 quit 
	
	set BOT=(AOT/2)*(AOT+1) 
	
	if 'BOT set %AMT=0 quit 
	
	set AONR=AO*(NR/BOT)
	set %AMT=AONR.roundDec() 
	
	if NEG set %AMT=-%AMT
	if %AMT>AOB set %AMT=AOB
	if AOT=AOC set %AMT=AOB set AOB=0
	if AOB set AOB=AOB-%AMT
	
	quit 
	
	
public	1(RecordLN ln)

	// ACT - Actuarial calculation method
	
	type public Number %AMT,AO,AOB,AOC,AOT,AOI,NEG,NR,%ORG,%REM
	type Number AOBAO,DF,IR,NF
		
	set NR=AOT-AOC set IR=AOI/(ln.dist1af*100)
	
	if NR<0 set %AMT=0 quit 
	
	set %REM=$$EXP^%ZFUNC((NR-1)*$$LNX^%ZFUNC(1+IR))
	set %ORG=$$EXP^%ZFUNC(AOT*$$LNX^%ZFUNC(1+IR))
	
	if '%ORG set %AMT=0 quit 
	
	set NF=((1/%REM)+(IR*(NR-1)))-1 
	set DF=((1/%ORG)+(IR*AOT))-1
	
	if 'DF set %AMT=0 quit 
	
	set AOBAO=AOB-(AO*(NF/DF))
	set %AMT=AOBAO.roundDec() 
	
	if NEG set %AMT=-%AMT
	if %AMT>AOB set %AMT=AOB
	if AOT=AOC set %AMT=AOB set AOB=0
	if AOB set AOB=AOB-%AMT
	
	quit 
	
	
public	2(RecordLN ln)

	// DB - Declining Balance Method

	type public Number %AMT,AO,AOB,AOC,AOT,DBF,NEG,NR
	type Number I
		
	if 'DBF.exists() set DBF=100
	
	set NR=AOT-AOC if NR<0 set %AMT=0 quit 
	set AOB=AO if 'AOT set %AMT=0 quit 
	
	for I=1:1:NR set AOB=AOB-((AOB*(DBF/100))/AOT).roundDec()
	
	set %AMT=AOB if NEG set %AMT=-%AMT kill DBF,NR quit

	set %AMT=((AOB*(DBF/100))/AOT).roundDec()
	 
	if NEG set %AMT=-%AMT
	if %AMT>AOB set %AMT=AOB
	if AOT=AOC set %AMT=AOB set AOB=0
	if AOB set AOB=AOB-%AMT
	
	quit 
	
	

vSIG()	quit "60477^65448^Pat Kelly^4566"	// Signature - LTD^TIME^USER^SIZE
