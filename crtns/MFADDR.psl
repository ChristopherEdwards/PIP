MFADDR	//;User-Defined Mail Flag/Address Functions
	/*
	       ORIG:  DAILEY - 06 MAR 1997
	  CALLED BY:  ^UTLADDR
	      CALLS:
	       DESC:  This utility will return an address based on the extrinsic
	              function corresponding to the user-defined mail flag.

	   RETURNS:
	                          1.  0       (no mail or bad address)
	                          2.  1       (address supplied by this routine)

	   EXAMPLE:
	      			  ADD0^MFADR(FID,KEY)

	  --------------- Revision History -------------------------------------

	   05/02/2002 - TELIV - 49794
			Converted To PSL
	

	*/
	
	quit

ADD0(FID,KEY)	// Use mailing address

	type public Number RPASEQ
	type public String ZAD

	if FID="CIF" set ZAD=$$ADD01(KEY)

	if FID="ACN" do {
                type RecordACNADDR acnaddr=Db.getRecord("ACNADDR","CID=:KEY")
                set ZAD=acnaddr.city_"|"_acnaddr.state_"|"_acnaddr.mzip_"|"_acnaddr.cntry
                set ZAD=ZAD_"|"_acnaddr.ad1_"|"_acnaddr.ad2_"|"_acnaddr.ad3_"|"_acnaddr.ad4
                set ZAD=ZAD_"|"_acnaddr.loc
	}	

	if FID="IRATYPE" do {
		set ZAD=""
		new X
		type RecordIRATYPE iratype=Db.getRecord("IRATYPE","ACN=:KEY,RPASEQ=:RPASEQ",1)

		set X=iratype.rpcity_"|"_iratype.rpstate_"|"_iratype.rpzip
		set X=X_"|"_iratype.rpcntry_"|"_iratype.rpmad1
		set X=X_"|"_iratype.rpmad2_"|"_iratype.rpmad3

		if $TR(X,"|","")'="" set ZAD=X
		else  set ZAD=$$ADD01(KEY)
		}

	quit 1


ADD01(KEY)	// for ^CIF(KEY,5)

	type public String ZAD
	type RecordCIF cif=Db.getRecord("CIF","ACN=:KEY")

	set ZAD=cif.mcity_"|"_cif.mstate_"|"_cif.mzip_"|"_cif.mcntry
	set ZAD=ZAD_"|"_cif.mad1_"|"_cif.mad2_"|"_cif.mad3_"|"_cif.mad4
	set ZAD=ZAD_"|"_cif.mloc
	quit ZAD


ADD1(FID,KEY)	// Use legal address

	type public String ZAD

	if FID="CIF" set ZAD=$$ADD11(KEY)

	if FID="ACN" do {
		new ACN
		type RecordACN acn=Db.getRecord("ACN","CID=:KEY")
		set ACN=acn.acn		// Primary CIF
		set ZAD=$$ADD11(ACN)
		}
	quit 1


ADD11(KEY)	// for ^CIF(KEY,6)

	type public String ZAD

	type RecordCIF cif=Db.getRecord("CIF","ACN=:KEY")

	set ZAD=cif.pcity_"|"_cif.pstate_"|"_cif.pzip_"|"_cif.pcntry
	set ZAD=ZAD_"|"_cif.pad1_"|"_cif.pad2_"|"_cif.pad3_"|"_cif.pad4
	set ZAD=ZAD_"|"_cif.ploc
	quit ZAD


ADD2(FID,KEY)	// Use mailing address from primary CIF for an account
	/*

	   If FID is CIF, then just use its mailing address.  If the
	   FID is ACN, the use the mailing address for the primary CIF
	   from the provided account number in parameter KEY.
	*/
	  
	type public String ZAD

	if FID="CIF" set ZAD=$$ADD01(KEY)

	if FID="ACN" do {
		new ACN
		type RecordACN acn=Db.getRecord("ACN","CID=:KEY")
                set ACN=acn.acn         // Primary CIF
		set ZAD=$$ADD01(ACN)
		}

	quit 1


ADD3(FID,KEY)	// Use branch address based on branch of ownership


	type public String ZAD
	type Number BOO

	if FID="CIF" do {
		type RecordCIF cif=Db.getRecord("CIF","ACN=:KEY")
		set BOO=cif.boo
		}

	if FID="ACN" do {
		type RecordACN acn=Db.getRecord("ACN","CID=:KEY")
		set BOO=acn.boo
		}

	type RecordUTBLBRCD utblbrcd=Db.getRecord("UTBLBRCD","BRCD=:BOO")

	set ZAD=utblbrcd.brcity_"|"_utblbrcd.brstate_"|"_utblbrcd.brzip
	set ZAD=ZAD_"|"_utblbrcd.brcntry_"|"_utblbrcd.brad1
	set ZAD=ZAD_"|"_utblbrcd.brad2_"|"_utblbrcd.brad3

	quit 1


ADD4(FID,KEY)	// Use institution address

	type public String ZAD

	type RecordCUVAR cuvar=Db.getRecord("CUVAR","")

	set ZAD=cuvar.ccity_"|"_cuvar.cstate_"|"_cuvar.czip
        set ZAD=ZAD_"|"_cuvar.ccntry_"|"_cuvar.cad1
        set ZAD=ZAD_"|"_cuvar.cad2_"|"_cuvar.cad3

	quit 1


ADD8(FID,KEY)	// Bad address
	quit 0

ADD9(FID,KEY)	// No mail
	quit 0
 #OPTION ResultClass ON
Public String vSIG()	quit "60261^27781^Dhanalakshmi R^3412"	// Signature - LTD^TIME^USER^SIZE
