RTLOAD		/* 
	 Procedure: RTLOAD
	 DESC: Routing and Transit Number Load
	 ORIG: STATTOND - 02/11/03 ARQ 50505
	
	 DESC: This procedure will load updated routing and transit number
	 information from a Federal Reserve extract file. It will also
	 validate routing and transit numbers for existing ACH/EFT outgoing 
	 transaction records against the updated information.
	
	 INPUTS:  	
	
		.  SYSTEMDATE	Today's IBS processing date
		
	 INTERNAL DATA:
		
		.  ACHFLG	flag that indicates data will be updating 
				UTBLACHRT file			 
		.  EFTFLG	flag that indicates data will be updating 
				UTBLEFTINST file
		.  RTLOAD.DAT   Federal Reserve extract file
	
	 OUTPUTS:  
		
		. ^RTLOAD	stores data from the extract file 
			
	
	 EXTERNAL ENTRY POINTS:
	
	 	ACH^RTLOAD - Called by function @ACHLOAD
		EFT^RTLOAD - Called by function @EFTLOAD
	
	
	--------------------- Revision History --------------------------------
	08/08/05 - SWARNALATHAP - CR16734
		.  Logical fields from table UTBLACHRT and UTBLEFTINST are 
		   set with logical 1 or 0 in place of string Y or N and 
		   sequential file processing are processed using IO class 
		   instead of OPEN, ZREAD etc.
		.  Converted to PSL
	*/

	//-----------------------------------------------------------------------
ACH	// Entry point for ACHLOAD
	//-----------------------------------------------------------------------
	
	type Public Number ACHFLG,EFTFLG
	
	set ACHFLG = 1
	set EFTFLG = ""
	
	do MAIN
	quit
	
	//-----------------------------------------------------------------------
EFT	// Entry point for EFTLOAD
	//-----------------------------------------------------------------------

	type Public Number ACHFLG,EFTFLG
	
	set ACHFLG = ""
	set EFTFLG = 1
	
	do MAIN
	quit
	
	//-----------------------------------------------------------------------
MAIN	// Main Processing 
	//-----------------------------------------------------------------------
	
	type Public Boolean ER
	type Public Number ACHFLG,EFTFLG
	type Public String IO,VREC
			
	type String EOF,ET,RM,XMSG
	
	type IO io = Class.new("IO")
	set io.directory  = CUVAR.SPLDIR
	set io.fileName   = "RTLOAD.DAT"
	set io.openParams = "READ"
	set io.timeout=5
		
	// catching a GT.M error 
	catch vERROR {
		new ET,RM
		if vERROR["IOOPEN" throw Class.new("Error","NOOPEN,"_$$^MSG(7878,io.device))
		if vERROR["IOEOF" do io.close() quit
		if vERROR["IOOTHER" do io.close() write !, "unexpected IO error '", vERROR.type, "'", ! quit
		set ET=vERROR.type
		if ET["%GTM-" do ZE^UTLERR do io.close() quit
		if ET["%PSL-E" do ZE^UTLERR do io.close() quit
		set ET=ET_"-"_vERROR.thrownAt
		set RM=vERROR.description
		do ^UTLERR
		}

	do io.open()
	
	// delete RTLOAD from database
	
	if ACHFLG do Db.fastDelete("RTLOAD")
	if EFTFLG do Db.fastDelete("RTLOAD2")
	
 	for  set VREC=io.read() do PROC
 	
	do io.close()

	quit
	
	//-----------------------------------------------------------------------
PROC	// Process Record
	//-----------------------------------------------------------------------
	
	type Public Boolean ER
	type Public Number ACHFLG,EFTFLG,NEWRT,RTNUM,STATUS,VIEWCD
	type Public String CUSNM
	
	type Date RTDT

	do EXTRACT
	do LOADSTAT

	if (STATUS = 0) quit 
	if (STATUS = 1) do ADD 
	if (STATUS = 2) do DEL 
	if (STATUS = 3) do ADD do DEL 

	// save records for reports
	set RTDT = %SystemDate

	if EFTFLG do { quit:ER
		
		type RecordRTLOAD2 rtload2 = Class.new("RecordRTLOAD2")
			
		set rtload2.recinst = RTNUM
		set rtload2.rtdt = RTDT
		set rtload2.cusnm = CUSNM
		set rtload2.newrt = NEWRT
		set rtload2.viewcd = VIEWCD
		set rtload2.status = STATUS
			
		do rtload2.save()
	}
	if ACHFLG do { quit:ER
		
		type RecordRTLOAD rtload = Class.new("RecordRTLOAD")
			
		set rtload.rtnum = RTNUM
		set rtload.rtdt = RTDT
		set rtload.cusnm = CUSNM
		set rtload.newrt = NEWRT
		set rtload.viewcd = VIEWCD
		set rtload.status = STATUS
			
		do rtload.save()
	}

	quit

	//-----------------------------------------------------------------------
EXTRACT	// Extract Columns 
	//-----------------------------------------------------------------------
	
	type Public Number NEWRT,RTNUM,VIEWCD
	type Public String ADDR,CUSNM,VREC
	
	set RTNUM = VREC.extract(1,9)
	set NEWRT = $$RTB^%ZFUNC(VREC.extract(27,35))
	set CUSNM = $$RTB^%ZFUNC(VREC.extract(36,71))
	set ADDR = $$RTB^%ZFUNC(VREC.extract(72,107))
	set VIEWCD = VREC.extract(150)
	quit
	
	 //-----------------------------------------------------------------------
LOADSTAT // Determine Action Status
	 //-----------------------------------------------------------------------
	
	type Public Number ACHFLG,EFTFLG,NEWRT,RTNUM,STATUS,VIEWCD
	
	type Boolean RECEXST
	
	if NEWRT set STATUS = 3 quit
	if 'NEWRT do { 
		if EFTFLG do {
			set RECEXST = Db.isDefined("UTBLEFTINST","KEY=:RTNUM")
			if RECEXST do {	
				if VIEWCD set STATUS = 0 quit
				if 'VIEWCD set STATUS = 2 quit
				}
			else  if 'RECEXST do {
				if VIEWCD set STATUS = 1 quit
				if 'VIEWCD set STATUS = 0 quit
				}
			}
		if ACHFLG do {
			set RECEXST = Db.isDefined("UTBLACHRT","KEY=:RTNUM")
			if RECEXST do {
				if VIEWCD set STATUS = 0 quit
				if 'VIEWCD set STATUS = 2 quit
				}
			else  if 'RECEXST do {
				if VIEWCD set STATUS = 1 quit
				if 'VIEWCD set STATUS = 0 quit
				}
			}
		}
	
	else  set STATUS = 0
	quit

	//-----------------------------------------------------------------------
DEL	// Delete Retired Numbers
	//-----------------------------------------------------------------------
	
	type Public Number ACHFLG,EFTFLG
	
	if EFTFLG do {
		if Db.isDefined("UTBLEFTINST","KEY=:RTNUM") do {
			do Db.delete("UTBLEFTINST","KEY=:RTNUM")
		}
		
	}
	
	if ACHFLG do {
		if Db.isDefined("UTBLACHRT","KEY=:RTNUM") do {
			do Db.delete("UTBLACHRT","KEY=:RTNUM")
		}
	}
	
	quit
	
	//-----------------------------------------------------------------------
ADD	// Add New Routing Numbers
	//-----------------------------------------------------------------------
	
	type Public Boolean ER
	type Public Number ACHFLG,EFTFLG,NEWRT,RTNUM
	type Public String ADDR,CUSNM
	
	type Number TMPNUM

	if NEWRT set TMPNUM = NEWRT
	else  set TMPNUM = RTNUM
	if EFTFLG do {
		if 'Db.isDefined("UTBLEFTINST","KEY=:TMPNUM") do { quit:ER
		
			type RecordUTBLEFTINST eftinst = Class.new("RecordUTBLEFTINST")
			
			set eftinst.key = TMPNUM
			set eftinst.nam = CUSNM
			set eftinst.onus = 0
			set eftinst.region = 0
			set eftinst.chklim = 0
			set eftinst.addr = ADDR
			set eftinst.finan = 1
			
			do eftinst.save()
			}
		}
		
	if ACHFLG do {
		if 'Db.isDefined("UTBLACHRT","KEY=:TMPNUM") do { quit:ER
			
			type RecordUTBLACHRT achrt = Class.new("RecordUTBLACHRT")
			
			set achrt.key = TMPNUM
			set achrt.iname = CUSNM
			set achrt.onus = 0
			set achrt.borig = 0
			set achrt.forig = 0
			set achrt.fdest = 0
			
			do achrt.save()
			}
		
		}
	
	
	quit

	

vSIG()	quit "60215^23446^P.R. Swarnalatha^6514"	// Signature - LTD^TIME^USER^SIZE
