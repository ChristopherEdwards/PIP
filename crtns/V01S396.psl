V01S396(Number %ProcessMode,RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS)   //PBS - PBS - SID= <LNPDSB> PDS Display Header
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:30 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fLNPDS2(1).exists() set fLNPDS2(1) = Class.new("RecordLNPDS2")
  if 'fLNPDS.exists() set fLNPDS = Class.new("RecordLNPDS")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNPDSB",VPGM=$T(+0),VSNAME="PDS Display Header"
 set VFSN("LNPDS")="zfLNPDS",VFSN("LNPDS2")="zfLNPDS2"
 set vPSL=1
 set KEYS(1)=fLNPDS.TABLE
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=16 do VPR(.fLNPDS2(),.fLNPDS),VDA1(.fLNPDS2(),.fLNPDS),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fLNPDS2(),.fLNPDS),VPR(.fLNPDS2(),.fLNPDS),VDA1(.fLNPDS2(),.fLNPDS)
 if %ProcessMode do VLOD(.fLNPDS2(),.fLNPDS) quit:$G(ER)  do VPR(.fLNPDS2(),.fLNPDS),VDA1(.fLNPDS2(),.fLNPDS)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fLNPDS2(),.fLNPDS)
 type Number ptr
 set ptr=""
 for  set ptr = fLNPDS2(ptr).order() quit:ptr.isNull()  do {
     if fLNPDS2(ptr).UPLIMIT="" kill fLNPDS2(ptr)
     }
	quit


VNEW(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS) // Initialize arrays if %O=0
 
 do VDEF(.fLNPDS2(),.fLNPDS)
 do VLOD(.fLNPDS2(),.fLNPDS)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=16
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS) // Display screen prompts
 set VO="7||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,7,7,0,0,0,0,0,0,0)_"01T Table:"
 set VO(2)=$C(1,55,12,0,0,0,0,0,0,0)_"01T Start Date:"
 set VO(3)=$C(2,1,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(4)=$C(2,57,10,0,0,0,0,0,0,0)_"01T End Date:"
 set VO(5)=$C(4,19,16,1,0,0,0,0,0,0)_"01T   Upper Limit  "
 set VO(6)=$C(4,44,13,1,0,0,0,0,0,0)_"01T Description "
 set VO(7)=$C(5,19,16,1,0,0,0,0,0,0)_"01T (Payments Due) "
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS)  // Display screen data
 new V
 //
 set VO="11|8|13|"
 set VO(8)=$C(1,15,12,2,0,0,0,0,0,0)_"01T"_$E(fLNPDS.TABLE,1,12)
 set VO(9)=$C(1,68,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fLNPDS.STDT)
 set VO(10)=$C(2,15,40,2,0,0,0,0,0,0)_"01T"_$E(fLNPDS.TDES,1,40)
 set VO(11)=$C(2,68,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fLNPDS.EDDT)
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+3,DY=7 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fLNPDS2(),.fLNPDS)
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS)  // Display data %REPEAT times
 //instantiate new object if necessary
  #ACCEPT;DATE=08/08/06; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEPRECATED
  if 'fLNPDS2(I).getPointer() do {
     set fLNPDS2(I)=Class.new("RecordLNPDS2","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY,21,12,2,0,0,0,0,0,0)_"00T"_$E(fLNPDS2(I).UPLIMIT,1,12)
 set VO(VX+2)=$C(DY,44,12,2,0,0,0,0,0,0)_"00T"_$E(fLNPDS2(I).DES,1,12)
 set DY=DY+1,VX=VX+2
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=4,%MOD=2,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=6+%REPEAT,BLKSIZ=(24*%REPEAT)+72,PGM=$T(+0),DLIB="SYSDEV",DFID="LNPDS2,LNPDS"
 set OLNTB=VPB*1000
 
 set VFSN("LNPDS")="zfLNPDS",VFSN("LNPDS2")="zfLNPDS2"
 //
 for I=7:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,14,12)_"21T12401|1|[LNPDS]TABLE|[LNPDS]"
 set %TAB(2)=$C(0,67,10)_"21D12402||[LNPDS]STDT"
 set %TAB(3)=$C(1,14,40)_"21T12401||[LNPDS]TDES"
 set %TAB(4)=$C(1,67,10)_"21D12403||[LNPDS]EDDT"
 set %TAB(5)=$C(6,20,12)_"00T12402|1|[LNPDS2]UPLIMIT|||do VP1^V01S396(.fLNPDS2,.fLNPDS)"
 set %TAB(6)=$C(6,43,12)_"00T12401|1|[LNPDS2]DES|||do VP2^V01S396(.fLNPDS2,.fLNPDS)"
 do VTBL(.fLNPDS2(),.fLNPDS)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS) //
 type public Number ER,z1
 type public String RM,X,V

 // Remove old description
 if X.isNull(),%IPMODE.get()'["NOINT" do DELETE^DBSMACRO("[LNPDS2]DES","1","0")
 quit:X.isNull()

 // Check for increasing values
 quit:z1=1

 // Must be greater than ~p1
 if X'>fLNPDS2(z1-1).uplimit set ER=1,RM=$$^MSG(1810,fLNPDS2(z1-1).uplimit)

 // Enter upper limit first
 if fLNPDS2(z1-1).uplimit.isNull() set ER=1,RM=$$^MSG(959)

 quit
VP2(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS) //
 type public Boolean ER
 type public String X

 quit:X.isNull()&(fLNPDS2(I(1)).uplimit.isNull())

 // Enter upper limit first
 if fLNPDS2(I(1)).uplimit.isNull() do Runtime.setErrMSG("LNPDS2","959") quit:ER

 // Data required
 else  if X.isNull() do Runtime.setErrMSG("LNPDS2","741") quit:ER
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNPDS2 fLNPDS2()
 type Public RecordLNPDS fLNPDS
 do VPR(.fLNPDS2(),.fLNPDS)
 do VDA1(.fLNPDS2(),.fLNPDS)
 do ^DBSPNT()
 quit

VW(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS)
 do VDA1(.fLNPDS2(),.fLNPDS)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNPDS2 fLNPDS2(),RecordLNPDS fLNPDS)
 do VDA1(.fLNPDS2(),.fLNPDS)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNPDS2 fLNPDS2()
 type Public RecordLNPDS fLNPDS
 do VDA1(.fLNPDS2(),.fLNPDS)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordLNPDS2 fLNPDS2()
 if sn="LNPDS2" do vSET1(fLNPDS2(I(1)),di,X)
 type Public RecordLNPDS fLNPDS
 if sn="LNPDS" do vSET2(.fLNPDS,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordLNPDS2 fLNPDS2,di,X)
 do fLNPDS2.setAuditFlag(1)
 set fLNPDS2.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordLNPDS fLNPDS,di,X)
 do fLNPDS.setAuditFlag(1)
 set fLNPDS.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordLNPDS2 fLNPDS2()
 if fid="LNPDS2" quit $$vREAD1(fLNPDS2(I(1)),di)
 type Public RecordLNPDS fLNPDS
 if fid="LNPDS" quit $$vREAD2(.fLNPDS,di)
 quit ""
vREAD1(RecordLNPDS2 fLNPDS2,di)
 quit fLNPDS2.@di
vREAD2(RecordLNPDS fLNPDS,di)
 quit fLNPDS.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
