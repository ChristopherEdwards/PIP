SPSTD	// Securities Processing Standard Utilities
	/*
	       ORIG:  Rick Baldwin (1586) - 10/19/88
	       DESC:

	  ---- Revision History ------------------------------------------------
	   01/11/06 - TELIV - CR 18927
	 	      The Validations for CUSIP number are done fine but the 
	 	      Error message variables ER and RM were local copies of 
	 	      the validation sections VCUSIP and VCD. 
	 	      Removed the newing of variables in the sections.
	 
	   04/28/05 - ARPAV - 15570
	   	      Removed section VISUZ and the call into it as it is
	   	      extra code and returned extrinsic call errors.
	   	      Fixed calls into VISU1 to call extrinsic function.

	   11/06/02 - GRAY - 49794
		      Removed sections no longer called by anything.

	   05/01/02 - GORDONT - 49794
		      Converted to PSL.
		      Removed Pre-2000 revision history.

	   The following functions are specific to the Securities Processing
	   System.  Most are extrinsic functions. The only 'side effect'
	   variables are ER and RM, unless specifically mentioned at the
	   start of the the function.

	   Line tags starting with a V are validation functions which return
	   a zero if the validation fails, and a one if the validation is
	   successful.


	   ** NOTE **  This routine was copied from FMSDEV.  A few modifications
	               were made to the routine for validations of CUSIP.  The
	               EXIST flag will be 0 therefore only validating the
	               issuer's format.  The changing of lowercase letters to
	               uppercase for the issuer was added to the routine.
	  =======================================================================

	*/
	
	quit
	
Public VCUSIP(X)	//========== Validate a CUSIP number
	/*

	   Side effect: If CUSIP is passed by address, it will be translated to
	   uppercase and may have a check digit attatched (if not provided).
	   If the check digit was provided, it will be validated.

	*/

	set ER=0 
	set RM=""

	// Not defined, invalid
	if '$D(X) do NOCUS quit 0

	// Null, invalid
	if X="" do NULLCUS quit 0

	// No punctuation allowed
	if X?.E1P.E do NOPUNC quit 0

	// Minimum of 8 characters
	if $L(X)<8 do LENCUS quit 0

	// Maximum of 9 characters
	if $L(X)>9 do LENCUS quit 0

	// Uppercase if any are lower
	if X?.E1L.E set X=$$UPPER^%ZFUNC(X)

	// Valid format AND exists?
	if '$$VISSUER(.X,1) quit 0

	// Valid format?
	if '$$VISSUE(.X) quit 0

	// Valid format?
	if '$$VCD(.X) quit 0

	// Extract check digit
	set CD=$$CD(.X)

	// Attach check digit
	if CD="" set X=X_$$CCD(X)

	// It's ok...
	quit 1

NOCUS	// CUSIP number does not exis
	set ER=1 set RM=$$^MSG(689) quit 

NULLCUS	// CUSIP number is null	
	set ER=1 set RM=$$^MSG(690) quit
 
NOPUNC	// Punctuation characters not allowed
	set ER=1 set RM=$$^MSG(2281) quit
 
LENCUS	// CUSIP number must be 8 or 9 digits/characters
	set ER=1 set RM=$$^MSG(691) quit 

CD(X)	//Check digit part or CUSIP
	quit $E(X,9)

ISSUER(X)	//Issuer number part of CUSIP
	quit $E(X,1,6) 

ISSUE(X)	//Issue number part of CUSIP	
	quit $E(X,7,8)

EQUITY(ISSUE)	//
	quit '$$DEBT(.ISSUE)

DEBT(ISSUE)	//
	quit ISSUE'?2N
	
VISSUER(X,EXIST)	//Validate X is an ISSUER number
	/*

	   X is the Issuer id number
	   EXIST flag determines whether or not the issuer must already
	   exist in the Issuer file.  If EXIST is 0, verify format only, if
	   EXIST is 1, verify format and issuer.

	*/

	new ER,RM
	set ER=0

	// If validating issuer
	set EXIST=0

	// Must be at least 6 characters
	if $L(X)<6 do ISRLEN quit 0

	if $L(X)=6 set ISSUER=X

	// Extract issuer number
	else  set ISSUER=$$ISSUER(.X)

	// Pattern error
	if '((ISSUER?6N)!(ISSUER?5N1A)) do ISRPAT(.ISSUER) quit 0

	// Reserved
	if "000000|000001|000002|000003"[ISSUER do ISRRES(.ISSUER) quit 0

	// Does not exist
	if EXIST,'Db.isDefined("SPISR","ISSUER=:ISSUER") do ISRNO(.ISSUER) quit 0

	// Internal use
	if $E(ISSUER,1,2)="99" do ISRINT quit 1
	// Internal use
	if $E(ISSUER,4,5)="99" do ISRINT quit 1
	// It's ok
	quit 1

ISRPAT(X)	// ~p1 does not fit pattern:  999999 or 99999X
	set ER=1 set RM=$$^MSG(3032,X) quit
 
ISRRES(X)	// Issuer ~p1 is reserved
	set ER=1 set RM=$$^MSG(1575,X) quit
 
ISRNO(X)	// Issuer ~p1 does not exist
	set ER=1 set RM=$$^MSG(1574,X) quit
 
ISRLEN	// Issuer number must be 6 digits/characters
	set ER=1 set RM=$$^MSG(1573) quit
 
ISRINT	//Internal-use issuer
	do RM($$^MSG(4938)) quit 

VISSUE(X)	//========== Validate CUSIP X's ISSUE number portion

	new ER,RM
	set ER=0

	if $L(X)=2 set ISSUE=X
	// Extract issue number from a CUSIP
	else  set ISSUE=$$ISSUE(.X)

	if ISSUE?2N quit $$VISU1()        // Ok if all numeric
	if ISSUE?1A1N quit $$VISU1()      // Ok if one alpha, one numeric
	if ISSUE?1N1A quit $$VISU1()      // Ok if one numeric, one alpha
	if ISSUE?2A quit $$VISU1()     // Ok if all alpha
	do ISUPAT(.ISSUE)
	quit 0

VISU1()	// Passed the pattern check, now verify it's not a reserved issue number

	// Reserved
	if "00|02|03|04|05|06|07|08|09"[ISSUE do ISURES(.ISSUE) quit 0

	// Computed data item
	set EQUITY=$$EQUITY(.ISSUE)
	// It's an equity if 2 numeric
	if EQUITY do RM("Equity")
	// Else, it's a debt instrument
	if 'EQUITY do RM("Debt")

	// Options not supported
	if ISSUE="01" do NOOPT quit 0

	// Internal-use issue
	if $E(ISSUE)="9" do RM($$^MSG("4937"))

	if EQUITY quit 1  // No more validations for equity

	if ISSUE["I" do ISUEXC quit 0
	if ISSUE["1" do ISUEXC quit 0
	if ISSUE["O" do ISUEXC quit 0
	if ISSUE["0" do ISUEXC quit 0

	quit 1 // It's ok

ISUPAT(X)	// ~p1 does not fit pattern:  99, 9X, X9, or XX
	set ER=1 set RM=$$^MSG(3031,X) quit
 
ISURES(X)	// Issue number ~p1 is reserved
	set ER=1 set RM=$$^MSG(1572,X) quit
 
ISUEXC	// Debt issue numbers cannot contain I, 1, O, or 0
	set ER=1 set RM=$$^MSG(773) quit
 
NOOPT	// Issue number 01 (Option) is not supported
	set ER=1 set RM=$$^MSG(1571) quit 
	/*

	  =======================================================================

	*/
VCD(X)	//========== Validate CUSIP X's Check Digit portion


	set ER=0

	// No check digit, it's ok
	if $L(X)<9 quit 1
	set CUSIP=$$ISSUER(X)_$$ISSUE(X)
	set CD=$$CD(X)
	// Calculate the correct check digit
	set CCD=$$CCD(.CUSIP)

	// Equal to the calculated one?
	if CD=CCD quit 1
	do BADCD(CD,CCD)
	// It's bad
	quit 0

BADCD(CD,SB)	// Invalid check digit provided
	set ER=1
	// CUSIP has invalid check digit '~p1'.  Should be '~p2'.
	set RM=$$^MSG(687,CD,SB)
	quit

CCD(X)	//========== Calculate Check Digit for a CUSIP number
	/*

	   This function calculates the Modulus 10 Double Add Double check digit
	   used in CUSIP numbers.

	*/
	new ER,RM

	set SUM=0
	// The first character is an odd number
	set ODD=1
	set L=$L(X)
	// Compute the sum
	for I=1:1:L do CCD1

	// The check digit is the TENS complement of the last digit of the
	// sum.  The complement of 8 is 2, 7 is 3, 0 is 0, etc.

	// Grab the last digit
	set CCD=$E(SUM,$L(SUM))
	//
	if CCD="0" quit CCD
	//
	quit 10-CCD

CCD1	//===== Calculate number of the N'th character of string X

	set N=$E(X,I)

	// A digit?  Use it's value
	if N?1N set N=+N

	// A character?  Use the ASCII value minus 55 (capital A then = 10 )
	else  set N=$A(N)-55

	// When ODD is false, add the digits of twice the value to the sum
	if 'ODD set N=N*2

	// Add all of the digits to the sum
	for J=1:1:$L(N) set SUM=SUM+$E(N,J)

	// Toggle the flag for the next time through
	set ODD='ODD
	quit

RM(TEXT)	//========== Add TEXT to RM string.

	if '$D(RM) set RM=""
	if RM="" set RM=TEXT quit
	set RM=RM_", "_TEXT
	quit

vSIG()	quit "60376^43093^Dan Russell^7141"	// Signature - LTD^TIME^USER^SIZE
