PROCESC		/* Revision History
	
	02/02/06 - Srinivar / SmithCD - CR 16890
		Declared the sections BEFOREIN,AFTERINS as public.
		Modified the section CREATE by replacing the
		deprecated method Db.update() with Db.save().
		Modified the section UPDATE by replacing the
		deprecated methods Db.getonerow() and Db.update()
		to Db.getRecord() and Db.Save().
	        Modified AFTERINS section to return two error messages,
	        5277 and 5278. 
	        Cleaned up the procedure.
		  
	12/10/04 - Georges - CR 13023
		 Modified section BEFOREIN to move the addition of the
                 ACNADDR record to DEPAI (DEP-AFTER_INSERT)
                 This will eliminate receiving a Referential Integrity
                 error ACNADDR(CID)->ACN  

	  ----------------------------------------------------------------------
	   This procedure code is for the creation of new escrow accounts 
	   during loan create or adding an escrow account to an existing loan 
	   account. It is called by the before insert trigger of the deposit 
	   filer.
	*/
	 
	quit
	
			
public BEFOREIN(RecordDEP dep)

	// Before insert trigger for escrow account - copy like columns 
	// from the related loan to the escrow account
	
	type RecordLN ln = Db.getRecord("LN", "CID=:dep.aref")
	
	set dep.boo = ln.boo
	set dep.crcd = ln.crcd
	set dep.title1 = ln.title1
	set dep.title2 = ln.title2
	set dep.title3 = ln.title3
	set dep.title4 = ln.title4
	set dep.lnm = ln.lnm
	set dep.cc = ln.cc
	set dep.pers = ln.pers
	set dep.odt = ln.odd
	set dep.ccode = ln.ccode
	set dep.acn = ln.acn
	set dep.acnrelc = ln.acnrelc
	set dep.cls = "D"
	set dep.grp = "ESC"
	
	quit 
	
	
public AFTERINS(RecordDEP dep)		// Escrow Account

	// After insert trigger for escrow account
	
	type public Boolean ER
	
	if '(%ProcessMode = 2) do CREATE(.dep) quit:ER
	// ESC - Escrow Account Verification
	else  if %ProcessMode = 2, dep.grp = "ESC" do { quit:ER
	
		// Escrow Acct has Invalid Loan Acct Linkage
		if dep.aref.isNull() do Runtime.setErrXBAD("DEP", 120) quit 
		
		type RecordLN ln = Db.getRecord("LN", "CID=:dep.aref")
	
		// Integrity error if escrow account is opened and loan is closed
		if dep.stat '= 4, ln.stat = 4 do Runtime.setErrXBAD("DEP", 510) quit
	
		// Integrity error if escrow transfer types are not self paid and
		// the payment escrow amount on the loan account does not exist
		if 'dep.espf, dep.stat '= 4, 'ln.pmttrs do Runtime.setErrXBAD("DEP",500) quit
		}
	// Account ~p1 linked
	else  if dep.grp = "ESC", dep.aref.isNull() do Runtime.setErrXBAD("DEP", 120) quit
	
	// Residual Interest processing not allowed for escrow accounts
	if dep.negbalop > 0 do Runtime.setErrMSG("DEP", 5277) quit
	
	// Deferred Interest processing not allowed for escrow accounts
	if dep.definadj do Runtime.setErrMSG("DEP", 5278) quit
	
	quit 

	
CREATE(RecordDEP dep)

	// Create loan linkage to escrow
	
	type public Boolean ER

	// Copy RELCIF records from related loan to new escrow deposit account
	type DbSet ds = Db.selectDbSet("RELCIF", "CID=:dep.aref")
	if ds.isEmpty() quit
	while ds.next() do {
		type RecordRELCIF relcifln = ds.getRecord("RELCIF")

		type RecordRELCIF relcifdp = Db.getRecord("RELCIF", "ACN=:relcifln.acn, CID=:dep.cid", 1)

		set relcifdp.role = relcifln.role
		set relcifdp.fsid = relcifln.fsid
		set relcifdp.proinq = relcifln.proinq
		set relcifdp.profana = relcifln.profana
		set relcifdp.s1099 = relcifln.s1099
		
		do relcifdp.save()
		}
		
	// If inserting an escrow account, update LNBIL0 with the account number
	type Number CID, DEPCID = dep.cid

	// Escrow Acct has Invalid Loan Acct Linkage
	if dep.aref.isNull() do Runtime.setErrXBAD("DEP", 120) quit:ER 

	if dep.curramt do {
		// Update Payment Escrow Amount on loan account related to escrow
		type RecordLN ln = Db.getRecord("LN", "CID=:dep.aref")
		set ln.pmttrs = ln.pmttrs + dep.curramt
		do ln.save()
		}
		
	type RecordLNBIL0 lnbil0 = Db.getRecord("LNBIL0", "CID=:dep.aref")

	// Invalid.  Loan account ~p1 has escrow accounts.
	if dep.esc = lnbil0.pe01da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe02da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe03da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe04da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe05da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe06da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe07da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe08da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe09da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe10da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe11da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe12da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe13da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe14da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe15da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe16da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe17da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe18da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe19da do Runtime.setErrMSG("DEP", 1522) quit
	if dep.esc = lnbil0.pe20da do Runtime.setErrMSG("DEP", 1522) quit

	do {
		if dep.esc = lnbil0.pe01ea set lnbil0.pe01da = DEPCID quit
		if dep.esc = lnbil0.pe02ea set lnbil0.pe02da = DEPCID quit
		if dep.esc = lnbil0.pe03ea set lnbil0.pe03da = DEPCID quit
		if dep.esc = lnbil0.pe04ea set lnbil0.pe04da = DEPCID quit
		if dep.esc = lnbil0.pe05ea set lnbil0.pe05da = DEPCID quit
		if dep.esc = lnbil0.pe06ea set lnbil0.pe06da = DEPCID quit
		if dep.esc = lnbil0.pe07ea set lnbil0.pe07da = DEPCID quit
		if dep.esc = lnbil0.pe08ea set lnbil0.pe08da = DEPCID quit
		if dep.esc = lnbil0.pe09ea set lnbil0.pe09da = DEPCID quit
		if dep.esc = lnbil0.pe10ea set lnbil0.pe10da = DEPCID quit
		if dep.esc = lnbil0.pe11ea set lnbil0.pe11da = DEPCID quit
		if dep.esc = lnbil0.pe12ea set lnbil0.pe12da = DEPCID quit
		if dep.esc = lnbil0.pe13ea set lnbil0.pe13da = DEPCID quit
		if dep.esc = lnbil0.pe14ea set lnbil0.pe14da = DEPCID quit
		if dep.esc = lnbil0.pe15ea set lnbil0.pe15da = DEPCID quit
		if dep.esc = lnbil0.pe16ea set lnbil0.pe16da = DEPCID quit
		if dep.esc = lnbil0.pe17ea set lnbil0.pe17da = DEPCID quit
		if dep.esc = lnbil0.pe18ea set lnbil0.pe18da = DEPCID quit
		if dep.esc = lnbil0.pe19ea set lnbil0.pe19da = DEPCID quit
		if dep.esc = lnbil0.pe20ea set lnbil0.pe20da = DEPCID quit
		
	}
		
	do lnbil0.save()
		
	#IF 'CUVAR.UCID.isNull()
                // Custom New Account Routine
                type String PGM
                set PGM = "do UPD"_CUVAR.UCID_"(""D"","""_dep.grp_""","_dep.type_","_DEPCID_")"
                #ACCEPT DATE=03/19/03;PGM=Mark Spier
                xecute PGM
        #ENDIF 

	quit 

vSIG()	quit "60298^73155^Chad Smith^6686"	// Signature - LTD^TIME^USER^SIZE
