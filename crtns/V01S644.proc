V01S644(%ProcessMode,RecordUTBLCOMINDX fCOMINDX)   // -  - SID= <UTBLCOMINDX1> Commission Index Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,RATE",VSID="UTBLCOMINDX1",VPGM=$T(+0),VSNAME="Commission Index Maintenance"
 set VFSN("UTBLCOMINDX")="zfCOMINDX"
 set vPSL=1
 set KEYS(1)=fCOMINDX.CINDEX
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=13 do VPR(.fCOMINDX),VDA1(.fCOMINDX),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fCOMINDX),VPR(.fCOMINDX),VDA1(.fCOMINDX)
 if %ProcessMode do VLOD(.fCOMINDX) quit:$G(ER)  do VPR(.fCOMINDX),VDA1(.fCOMINDX)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCOMINDX)
	quit


VNEW(RecordUTBLCOMINDX fCOMINDX) // Initialize arrays if %O=0
 
 do VDEF(.fCOMINDX)
 do VLOD(.fCOMINDX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLCOMINDX fCOMINDX)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLCOMINDX fCOMINDX) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=13
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLCOMINDX fCOMINDX) // Display screen prompts
 set VO="6||13|0"
 set VO(0)="|0"
 set VO(1)=$C(3,19,17,0,0,0,0,0,0,0)_"01TCommission Index:"
 set VO(2)=$C(4,23,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(6,21,15,0,0,0,0,0,0,0)_"01T Currency Code:"
 set VO(4)=$C(7,21,15,0,0,0,0,0,0,0)_"01TEffective Date:"
 set VO(5)=$C(9,12,5,0,0,0,0,0,0,0)_"01TLevel"
 set VO(6)=$C(9,27,34,0,0,0,0,0,0,0)_"01TBalance Tier       Commission Rate"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLCOMINDX fCOMINDX)  // Display screen data
 new V
 s EFD=$G(EFD)
 s RATE=$G(RATE)
 //
 set VO="11|7|13|0"
 set VO(7)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD(%FN.get()))
 set VO(8)=$C(3,37,12,2,0,0,0,0,0,0)_"01T"_$E(fCOMINDX.CINDEX,1,12)
 set VO(9)=$C(4,37,40,2,0,0,0,0,0,0)_"01T"_$E(fCOMINDX.DESCR,1,40)
 set VO(10)=$C(6,37,3,2,0,0,0,0,0,0)_"01T"_$E(fCOMINDX.CRCD,1,3)
 set VO(11)=$C(7,37,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM($G(EFD))
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+4,DY=10 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fCOMINDX)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLCOMINDX fCOMINDX)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,RATE(I))=$G(RATE(I))
 
 set VO(VX+1)=$C(DY,13,3,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",1)
 set V=$P(v1,"|",2) set VO(VX+2)=$C(DY,21,18,2,0,0,0,0,0,0)_"00$"_$S(V="":"",1:$J(V,0,2))
 set V=$P(v1,"|",3) set VO(VX+3)=$C(DY,53,8,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,5))
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLCOMINDX fCOMINDX)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=4,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=9+%REPEAT,BLKSIZ=(29*%REPEAT)+65,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLCOMINDX"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLCOMINDX")="zfCOMINDX"
 //
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,36,12)_"21T12401|1|[UTBLCOMINDX]CINDEX"
 set %TAB(2)=$C(3,36,40)_"20T12401||[UTBLCOMINDX]DESCR"
 set %TAB(3)=$C(5,36,3)_"20T12404||[UTBLCOMINDX]CRCD|[CRCD]"
 set %TAB(4)=$C(6,36,10)_"21D|*EFD|[*]@EFD"
 set %TAB(5)=$C(9,12,3)_"20N12401|*RATE(1)|[*]@LEVEL"
 set %TAB(6)=$C(9,20,18)_"00$12402|*RATE(1)|[*]@MINBAL|||do VP1^V01S644(.fCOMINDX)||||2"
 set %TAB(7)=$C(9,52,8)_"00N12403|*RATE(1)|[*]@RATE|||do VP2^V01S644(.fCOMINDX)||||5"
 do VTBL(.fCOMINDX)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLCOMINDX fCOMINDX) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLCOMINDX fCOMINDX) //
 // Check for duplicate tier amounts
 type public Boolean ER
 type public Number DUP(),%PAGE,V,X,z1
 type public String RM
 
 if X'=V do { quit:ER 
	// No Duplicates Allowed
 	if DUP(X).exists() do Runtime.setErrMSG("UTBLCOMINDX",7177) quit
 	kill DUP(V)
 	if 'X.isNull() set DUP(X)=""
 	}
 
 // If this is the last line on the page and it is valued, then add another page
 if 'X.isNull(),z1#13=0 set %PAGE=%PAGE+1
 
 if X.isNull() do {
 	kill DUP(X)
 	do DELETE^DBSMACRO("@RATE","1","0")
 	do GOTO^DBSMACRO("NEXT") quit 
 	}
 quit
 
VP2(RecordUTBLCOMINDX fCOMINDX) //
 type public Number RATE(),X,z1

 // Cannot have a balance tier without a rate  
 if X.isNull(),fCOMINDX.comtype=0,'RATE(z1).piece("|",2).isNull() do Runtime.setErrMSG("UTBLCOMINDX",455) quit 	

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLCOMINDX fCOMINDX
 do VPR(.fCOMINDX)
 do VDA1(.fCOMINDX)
 do ^DBSPNT()
 quit

VW(RecordUTBLCOMINDX fCOMINDX)
 do VDA1(.fCOMINDX)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLCOMINDX fCOMINDX)
 do VDA1(.fCOMINDX)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLCOMINDX fCOMINDX
 do VDA1(.fCOMINDX)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLCOMINDX fCOMINDX
 if sn="UTBLCOMINDX" do vSET1(.fCOMINDX,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLCOMINDX fCOMINDX,di,X)
 do fCOMINDX.setAuditFlag(1)
 set fCOMINDX.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLCOMINDX fCOMINDX
 if fid="UTBLCOMINDX" quit $$vREAD1(.fCOMINDX,di)
 quit ""
vREAD1(RecordUTBLCOMINDX fCOMINDX,di)
 quit fCOMINDX.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
