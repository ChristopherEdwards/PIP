SCA602	// Log Report ; Procedure SCA602 - Public Log Report
 ;;Copyright(c)2005 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/09/05 10:35 - spatola
 ;
 ; **** This is a DATA-QWIK generated routine (level 25) ****
 ;
	/*
	   DESC: Routine to build log file look-up tables based on appropriate
	   systems.  Also extracts information from log files and write them
	   to a temporary global.

	   RELATED:
	   . Report SCA602

	---- Revision History ------------------------------------------------

	11/30/04 - Frans S.C. Witte CR12808
		Changed IO.read() to IO.read(.ETYP) to maintain compatibility
		with new implementation of class IO.
		Changed termination code on FOR-loop from ETYP=0 to +ETYP'=0
		(to maintain compatibility with M version).

	06/06/03 - TELIV - 51351
		Converted to PSL


	----------------------------------------------------------------------	

	*/

	#WARN
	#OPTIMIZE

	quit


Public FTPLOG	// Generates look-up table and runs report for FTP

	type public String %READ,%TAB,ER,FILE,LOC,REC,RID,RM,TBL,VFMQ
	type public Number SEQ

	set SEQ=1
	set LOC="SCAU$SPOOL:FTP*.LOG"

	// Clear search buffer
	set REC=$$SEARCH^%ZFUNC("SCAU$SPOOL:X.X")

	for  set REC=$$SEARCH^%ZFUNC(LOC) quit:REC=""  do {
		set TBL(SEQ)=$$PARSE^%ZFUNC(REC,"NAME")_$$PARSE^%ZFUNC(REC,"TYPE")
		set SEQ=SEQ+1
		}

	//Clear prompt otherwise the value of SEQ will defaultly appear
	set SEQ=""

	set %TAB("SEQ")=".OFILE/TBL=TBL("
	set %READ="@@%FN,,,SEQ/REQ"

	do ^UTLREAD if VFMQ="Q" set ER=1 quit

	set FILE=TBL(SEQ)

	// Invalid RMS file name
	if '$$DIR^%OSSCRPT($$SCAU^%TRNLNM("SPOOL"),FILE,"NOOUTPUT") set ER=1 set RM=$$^MSG(7264) quit

	// Append directory to selected file
	set FILE=$$SCAU^%TRNLNM("SPOOL",FILE) quit:ER

	do EXTRACT(FILE)

	set RID="SCA602"

	do RPT^URID

	quit


Public TFSLOG	// Generates look-up table and runs report for trade finance

	type public String %READ,%TAB,FILE,LOC,REC,RID,RM,TBL,VFMQ
	type public Number ER,SEQ

	set LOC="SCAU$TFSI:*.LOG"

	// Clear search buffer
	set REC=$$SEARCH^%ZFUNC("SCAU$TFSI:X.X")

	for  set REC=$$SEARCH^%ZFUNC(LOC) quit:REC=""  do {
		set TBL($$PARSE^%ZFUNC(REC,"NAME")_$$PARSE^%ZFUNC(REC,"TYPE"))=""
		}

	set %TAB("FILE")=".FILE/TBL=TBL("
	set %READ="@@%FN,,,FILE/REQ"

	do ^UTLREAD 

	if VFMQ="Q" set ER=1 quit

	// Invalid RMS file name
	if '$$DIR^%OSSCRPT($$SCAU^%TRNLNM("TFSI"),FILE,"NOOUTPUT") set ER=1 set RM=$$^MSG(7264) quit

	// Append directory to selected file
	set FILE=$$SCAU^%TRNLNM("TFSI",FILE) quit:ER

	do EXTRACT(FILE)

	set RID="SCA602"

	do RPT^URID

	quit


Public ITSCIF	// Generates look-up table and runs report for treasury customers

	type public String %READ,%TAB,ER,FILE,LOC,REC,RID,RM,TBL,VFMQ
	type public Number SEQ

	set SEQ=1

	type RecordITSOPTIONS itopt=Db.getRecord("ITSOPTIONS",,1)
	set LOC=itopt.oraclfile

	// Clear search buffer
	if LOC["[" set REC=$$SEARCH^%ZFUNC("LOC_X.X")
	else  do {
		set REC=$$SEARCH^%ZFUNC(LOC_":X.X")
		set LOC=LOC_":"
		}

	for  set REC=$$SEARCH^%ZFUNC(LOC_"*.LOG") quit:REC=""  do {
		set TBL(SEQ)=REC
		set SEQ=SEQ+1
		}

	//Clear prompt otherwise the value of SEQ will defaultly appear
	set SEQ=""

	set %TAB("SEQ")=".OFILE/TBL=TBL("
	set %READ="@@%FN,,,SEQ/REQ"

	do ^UTLREAD 
	
	if VFMQ="Q" set ER=1 quit

	set FILE=TBL(SEQ)
	
	do EXTRACT(FILE)

	set RID="SCA602"

	do RPT^URID

	quit


Public ITSIMP	// Generates look-up table and runs report for treasury cash flow

	type public String %READ,%TAB,FILE,LOC,REC,RID,RM,TBL,VFMQ
	type public Number ER,SEQ

	set SEQ=1

	type RecordITSOPTIONS itopt=Db.getRecord("ITSOPTIONS",,1)
	set LOC=itopt.upload

	// Clear search buffer
	if LOC["[" set REC=$$SEARCH^%ZFUNC("LOC_X.X")

	else  do {
		set REC=$$SEARCH^%ZFUNC(LOC_":X.X")
		set LOC=LOC_":"
		}

	for  set REC=$$SEARCH^%ZFUNC(LOC_"*.LOG") quit:REC=""  do {
		set TBL(SEQ)=REC
		set SEQ=SEQ+1
		}

	//Clear prompt otherwise the value of SEQ will defaultly appear
	set SEQ=""

	set %TAB("SEQ")=".OFILE/TBL=TBL("
	set %READ="@@%FN,,,SEQ/REQ"

	do ^UTLREAD if VFMQ="Q" set ER=1 quit

	set FILE=TBL(SEQ)

	do EXTRACT(FILE)

	set RID="SCA602"

	do RPT^URID

	quit


Public ITSSPM	// Generates look-up table and runs report for treasury spot position


	type public String %READ,%TAB,FILE,LOC,REC,RID,RM,TBL,VFMQ
	type public Number ER,SEQ

	set SEQ=1

	type RecordITSOPTIONS itopt=Db.getRecord("ITSOPTIONS",,1)
	set LOC=itopt.oraclfile

	// Clear search buffer
	if LOC["[" set REC=$$SEARCH^%ZFUNC("LOC_X.X")
	else  do {
		set REC=$$SEARCH^%ZFUNC(LOC_":X.X")
		set LOC=LOC_":"
		}

	for  set REC=$$SEARCH^%ZFUNC(LOC_"*.LOG") quit:REC=""  do {
		set TBL(SEQ)=REC
		set SEQ=SEQ+1
		}

	//Clear prompt otherwise the value of SEQ will defaultly appear
	set SEQ=""

	set %TAB("SEQ")=".OFILE/TBL=TBL("
	set %READ="@@%FN,,,SEQ/REQ"

	do ^UTLREAD 

	if VFMQ="Q" set ER=1 quit

	set FILE=TBL(SEQ)

	do EXTRACT(FILE)

	set RID="SCA602"

	do RPT^URID

	quit


EXTRACT(String FILE)	// Extracts information from file and writes to a global

	/*
	
	ARGUMENTS
	. FILE		File Name 	/REQ/MECH=VAL
	
	
	*/

	type public String ER,INFO
	type public Number ETYP,SEQ

	do Db.fastDelete("SCA602","PID=:%ProcessID")

	type IO io=Class.new("IO")
	
	set io.fileName=FILE
	set io.openParams="READ"
	
	do io.open()

	set SEQ=1

	// FSCW CR12808: also replaced termination condition (cf SCA602 in p01)
	//for  set INFO=io.read() quit:ETYP=0  do {
	for  set INFO=io.read(.ETYP) quit:+ETYP'=0  do {
		type RecordSCA602 sca602=Db.getRecord("SCA602","PID=:%ProcessID,SEQ=:SEQ",1)
		set sca602.data=INFO
		do sca602.bypassSave()
				
		set SEQ=SEQ+1
		}
		
	do io.close()

	quit

vSIG()	quit "59886^43604^Sanchez SCM Administrator^5079"	// Signature - LTD^TIME^USER^SIZE
