LNRASTS	//Update Remittance Amounts - Single Account
	/*
	       ORIG:  Kathie Jalbuena (7070) - 07/08/87
	  
	---- Revision History ------------------------------------------------
	
        31/01/06 -Srinivar - CR19137
        	  Cleaned up the warnings
        	  Modified the code to conform to PSL satandards.
        
        07/26/05 - SkariahV- CR16679
	           Removed #WARN directive.
	              
	01/14/04 - RussellDS - CR 7514
		   Eliminated use of table LNRAMT (obsolet) and replace with
		   local array.
	
	08/01/02 - TELIV - 49451
		   Converted to PSL.			              

	----------------------------------------------------------------------
	*/
	do UPD quit

UPD 	//
	do INIT(1) 
	quit


INQ	//
	do INIT(2) 
	quit


INIT(%ProcessMode) //

	type Number OLNTB,%PAGE,%PG
	type String LNRAMT(),VFMQ

	type RecordLN LN
	type RecordCIF CIF
	
	set %PG=0 
	set %PAGE=1

	do VPG(.LN,.LNRAMT(),.CIF)

	quit


VPG(RecordLN LN,String LNRAMT(),RecordCIF CIF) // Page control

	type Public Number %PG
	type Public String VFMQ
	type public Boolean ER

	type Boolean FINISH=0
	type Date BJD
	type Number CID
	type String IO,TRTYPE

        for  do { quit:FINISH
                if %PG=0 do VPG00(.LNRAMT()) if ER set FINISH=1 quit
                if %PG>0 do VPG01(.LN,.LNRAMT(),.CIF)
                if "DFQ"[VFMQ do VER(.LN,.LNRAMT(),.CIF) set FINISH=1 quit
                set %PG=%PG+1
                }
        quit


VPG00(String LNRAMT())	// Set up

	type Public Date BJD
	type Public Number CID
	type Public String ER,IO,%READ,%TAB,TRTYPE,VFMQ

	type String EC

	set %TAB("CID")=".CID3/XPP=D CID^LNRASTS/XPR=S (CLS,ZCLS)=""L"""

	set %TAB("EC")=".ESC/TBL=PR(#10/XPP=D TTP^LNRASTS(X)/XPR=I CID K PR D TT^LNES2"

	set %TAB("TRTYPE")=".TRTYPE1/TBL=TT(/XPP=D TRTYPE^LNRASTS/XPR=D TT^LNRASTS"

	set %TAB("BJD")=".BJD1/XPR=S BJD=$$BJD^LNRASTS(ECID,TRTYPE) S RM=$$DAT^%ZM(BJD,$G(%MSKD))_%_NI"

	if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)

	set %READ="@@%FN,,,CID/REQ,EC/REQ,TRTYPE/REQ,BJD/REQ"
	if %ProcessMode=2 set %READ=%READ_",IO/REQ"

	do ^UTLREAD 

	if VFMQ="Q" set ER=1 quit
		
	if %ProcessMode=2,IO'=$I do OPEN^SCAIO quit:ER
	
	do DATA(.LNRAMT())		// Load data for repeat region

	quit


VPG01(RecordLN LN,String LNRAMT(),RecordCIF CIF) // Screen

	type Public Number CID

	set LN=Db.getRecord("LN","CID=:CID")
	
	set CIF=Db.getRecord("CIF","ACN=:LN.acn")

	do DRV^USID(%ProcessMode,"LNRAMTS",.LN,.CIF) 

	quit


ERR	//

	type Public String ER,VFMQ
	
	set ER=1

	do DSPBP^UTLERR

	set VFMQ="Q"
	
	quit


VER(RecordLN LN,String LNRAMT(),RecordCIF CIF) //

	type Public String VFMQ

	if %ProcessMode=2!(VFMQ="Q") do END quit

	do FILE(.LNRAMT())

	do END 

	quit


FILE(String LNRAMT())	// File data

	type Public Number ECID
	type Public String TRTYPE
	
	type Number I

	// Don't deal with any elements that didn't change
	set I=""
	for  set I=LNRAMT(I).order() quit:I=""  if LNRAMT(I).piece("|",1,3)'=LNRAMT(I).piece("|",4,6) do {
	
		type Date XREMDT
		type Number XREMAMT
		type String XESTFLG
		
		set XREMDT=LNRAMT(I).piece("|",1)
		set XREMAMT=LNRAMT(I).piece("|",2) 
		set XESTFLG=LNRAMT(I).piece("|",3)

		if 'XREMAMT,XESTFLG="" do Db.delete("RAMT","CID=:ECID AND TYP=:TRTYPE AND REMDT=:XREMDT")
		else  do {
			type RecordRAMT ramt=Db.getRecord("RAMT","CID=:ECID,TYP=:TRTYPE,REMDT=:XREMDT",1)
			set ramt.cid=ECID
			set ramt.typ=TRTYPE
			set ramt.remdt=XREMDT
			set ramt.remamt=XREMAMT
			set ramt.estflg=XESTFLG
			do ramt.save()
			}
		}
		
	quit


END	//

	type public Number CID
	type Public String ER,RM,VFMQ

	quit:(ER!(%ProcessMode=2)!(%ProcessMode=4))
	
	set ER="W"

	// Account ~p1 not modified
	if VFMQ="Q" set RM=$$^MSG("135",CID.get())
	// Account ~p1 modified
	else  set RM=$$^MSG("122",CID.get())

	quit


DATA(String LNRAMT())	// Set repeat data

	type Public Date BJD
	type Public Number ECID,%MSKD,%REPEAT
	type Public String ER,RAMT(),TRTYPE

	type Date D,JD,NJD,RDT,NXTD
	type Number CN,N
	type String AA,DT(),FRE,PD,X

	set %REPEAT=6

	type RecordTRTYPE trtype=Db.getRecord("TRTYPE","CID=:ECID,TYP=:TRTYPE")

	set PD=trtype.payid 
	set RDT=trtype.remnd
	set NXTD=RDT 

	set RDT=$$DAT^%ZM(RDT,$G(%MSKD))

	set AA=TRTYPE 
	if AA?1A.A1N.N do {
		type Number I
		
		for I=AA.length():-1:1 quit:AA.extract(I)'?1N
		set AA=AA.extract(1,I)
		}

	type RecordLNTRS1 lntrs1=Db.getRecord("LNTRS1","TRTYPE=:AA,PAYID=:PD")

	set FRE=trtype.cremfre 
	if FRE="" set FRE=lntrs1.cremfre

	set JD=NXTD
	set NJD=$$NJD^UFRE(JD,"-"_FRE) quit:ER
	if NJD<BJD set JD=NXTD,NJD=$$NJD^UFRE(JD,"-"_FRE) quit:ER
	set JD=NJD
        
	for CN=1:1:%REPEAT do { quit:ER
		set NJD=$$NJD^UFRE(JD,FRE)
        	if 'ER S DT(NJD)="",JD=NJD
        	}
        quit:ER
        
	set N=$S(BJD<NXTD:BJD-1,1:NXTD-1),X=N
	
	type ResultSet rs=Db.select("REMDT,REMAMT,ESTFLG","RAMT","CID=:ECID AND TYP=:TRTYPE AND REMDT>:N")
	while rs.next() set RAMT(ECID,TRTYPE,rs.getCol("REMDT"))=rs.getCol("REMAMT")_"|"_rs.getCol("ESTFLG")
        
        set CN=1,D=""
	for  set D=$O(DT(D)) quit:D=""  do {
        	set N=X
		for  set N=$O(RAMT(ECID,TRTYPE,N)) quit:N=""!(N'<D)  do {
			set LNRAMT(CN)=N_"|"_RAMT(ECID,TRTYPE,N)
			set CN=CN+1
			}
        	if RAMT(ECID,TRTYPE,D).exists() set LNRAMT(CN)=D_"|"_RAMT(ECID,TRTYPE,D)
        	else  S LNRAMT(CN)=D
        	
        	set CN=CN+1
        	set X=D
 		}
 		
 	// Save old data in pieces 4-6 to be able to test if changed
 	set N=""
 	for  set N=LNRAMT(N).order() quit:N.isNull()  set LNRAMT(N).piece("|",4,6)=LNRAMT(N).piece("|",1,3)
 	
 	// Initialize remaing records
	for N=1:1:%REPEAT if '$D(LNRAMT(N)) set LNRAMT(N)=""
 	
 	quit


CID	// Post Processor to Account Number

	type Public Number CID,%OSAVE
	type Public String ER,RM
	
	type Number %EXT
	
	set %EXT=1 

	do ^UACN 

	if 'ER,%OSAVE'=2 do {
		type RecordACN acn=Db.getRecord("ACN","CID=:CID")
	
		if acn.stat=4 do {
			set ER=1
			// Account closed
			set RM=$$^MSG(55)
			set CID=""
			}
		}

	quit


TRTYPE	// check for non-escrow processing

	type Public String ER,ET,X
	
	type String AA
	
	set AA=X
	
	if AA?1A.A1N.N do {
		type Number I
		
		for I=AA.length():-1:1 quit:AA.extract(I)'?1N
		set AA=AA.extract(1,I)
		}
	
	type RecordLNTRS lntrs=Db.getRecord("LNTRS","TRTYPE=:AA")
	if lntrs.nepf set ER=1,ET="LNNEPF" do ERR

	quit


TT	// find transfer types in escrow account

	type Public Number ECID
	type Public String EC,PR,TT()

	set ECID=$P(PR(EC),"|",3)

	type ResultSet rs=Db.select("TYP","TRTYPE","CID=:ECID")

	while rs.next()	set TT(rs.getCol("TYP"))=""

	quit

	
	
	
TTP(String X) // Set up call to TTP^LNES2
	
	type public String PR
	type Number CID
	
	set CID=$P(PR(X),"|",3)
	
	do TTP^LNES2(CID)
	
	quit 
	
	
BJD(Number ECID,String TRTYPE)	// Pre-processor for BJD

	type RecordTRTYPE trtype=Db.getRecord("TRTYPE","CID=:ECID,TYP=:TRTYPE",1)
	
	quit trtype.remnd

vSIG()	quit "60306^15111^Srinivasan, Rajesh^6406"	// Signature - LTD^TIME^USER^SIZE
