R01S445	// SCA488 - Client Advisement
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:50 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA488"
	set RN="Client Advisement"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[EFTPAY]DATECRE|||D EXT^DBSQRY||T|Date of Creation|||||"
	set %TAB("VIN3")="|255||[EFTPAY]BRCD|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch Of Ownership|||||"
	set %TAB("VIN4")="|255||[EFTPAY]CID|[EFTPAY]CID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN5")="|255||[EFTPAY]SEQ|[EFTPAY]:NOVAL||D EXT^DBSQRY||T|Sequence Number|||||"

	set %READ="IO/REQ,VIN1#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,OWNER,RID,RN,SNDCRCD1,SNDCRCD2,SNDCRCD3,SNDCRCD4,SNDCRCD5,SNDRCHG1,SNDRCHG2,SNDRCHG3,SNDRCHG4,SNDRCHG5,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA488",RN="Client Advisement"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA488","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[EFTPAY]DATECRE "_VIN1,SEQ=SEQ+1
		set DQQRY(SEQ)="[EFTPAY]EFTTYPE=""NDPOIN""",SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[EFTPAY]BRCD "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[EFTPAY]CID "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[EFTPAY]SEQ "_VIN5,SEQ=SEQ+1
		set DQQRY(SEQ)="[EFTPAY]STATUS=""C""",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("EFTPAY,ACN,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"Date of Creation"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Branch Of Ownership"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Account Number"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Sequence Number"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Client Advisement"
		set VBNRINFO("PGM")="R01S445"
		set VBNRINFO("RID")="SCA488"
		set VBNRINFO("TABLES")="EFTPAY,ACN,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,EFTPAY]DATECRE"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,EFTPAY]EFTTYPE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,EFTPAY]BRCD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,EFTPAY]CID"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,EFTPAY]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"EFTPAY.DATECRE,EFTPAY.EFTTYPE,EFTPAY.BRCD,EFTPAY.C"
	set VSELECT=VSELECT_"ID,EFTPAY.SEQ,EFTPAY.REFNO,EFTPAY.AMOUNT,EFTPAY.CR"
	set VSELECT=VSELECT_"CD,EFTPAY.ACTAMT,ACN.CRCD,EFTPAY.EFD,EFTPAY.ACTFEE"
	set VSELECT=VSELECT_",EFTPAY.RATE,EFTPAY.ACTCNV,EFTPAY.ACN,EFTPAY.BENAD"
	set VSELECT=VSELECT_"1,EFTPAY.BENAD2,EFTPAY.BENAD3,EFTPAY.BENAD4,EFTPAY"
	set VSELECT=VSELECT_".ORDINST,EFTPAY.ORD1,EFTPAY.ORDINST1,EFTPAY.ORD2,E"
	set VSELECT=VSELECT_"FTPAY.ORDINST2,EFTPAY.ORD3,EFTPAY.ORDINST3,EFTPAY."
	set VSELECT=VSELECT_"ORD4,EFTPAY.ORDINST4,EFTPAY.MSG1,EFTPAY.MSG2,EFTPA"
	set VSELECT=VSELECT_"Y.MSG3,EFTPAY.MSG4"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"EFTPAY,ACN,CIF",VWHERE,"EFTPAY.DATECRE,EFTPAY.EFTTYPE,EFTPAY.BRCD,EFTPAY.CID,EFTPAY.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32
	set vc1=V.piece($C(9),1)			// EFTPAY.DATECRE
	set vc2=V.piece($C(9),2)			// EFTPAY.EFTTYPE
	set vc3=V.piece($C(9),3)			// EFTPAY.BRCD
	set vc4=V.piece($C(9),4)			// EFTPAY.CID
	set vc5=V.piece($C(9),5)			// EFTPAY.SEQ
	set vc6=V.piece($C(9),6)			// EFTPAY.REFNO
	set vc7=V.piece($C(9),7)			// EFTPAY.AMOUNT
	set vc8=V.piece($C(9),8)			// EFTPAY.CRCD
	set vc9=V.piece($C(9),9)			// EFTPAY.ACTAMT
	set vc10=V.piece($C(9),10)			// ACN.CRCD
	set vc11=V.piece($C(9),11)			// EFTPAY.EFD
	set vc12=V.piece($C(9),12)			// EFTPAY.ACTFEE
	set vc13=V.piece($C(9),13)			// EFTPAY.RATE
	set vc14=V.piece($C(9),14)			// EFTPAY.ACTCNV
	set vc15=V.piece($C(9),15)			// EFTPAY.ACN
	set vc16=V.piece($C(9),16)			// EFTPAY.BENAD1
	set vc17=V.piece($C(9),17)			// EFTPAY.BENAD2
	set vc18=V.piece($C(9),18)			// EFTPAY.BENAD3
	set vc19=V.piece($C(9),19)			// EFTPAY.BENAD4
	set vc20=V.piece($C(9),20)			// EFTPAY.ORDINST
	set vc21=V.piece($C(9),21)			// EFTPAY.ORD1
	set vc22=V.piece($C(9),22)			// EFTPAY.ORDINST1
	set vc23=V.piece($C(9),23)			// EFTPAY.ORD2
	set vc24=V.piece($C(9),24)			// EFTPAY.ORDINST2
	set vc25=V.piece($C(9),25)			// EFTPAY.ORD3
	set vc26=V.piece($C(9),26)			// EFTPAY.ORDINST3
	set vc27=V.piece($C(9),27)			// EFTPAY.ORD4
	set vc28=V.piece($C(9),28)			// EFTPAY.ORDINST4
	set vc29=V.piece($C(9),29)			// EFTPAY.MSG1
	set vc30=V.piece($C(9),30)			// EFTPAY.MSG2
	set vc31=V.piece($C(9),31)			// EFTPAY.MSG3
	set vc32=V.piece($C(9),32)			// EFTPAY.MSG4
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VDTL5	// Detail
	type public String %TIM,IOSL,OWNER,SNDCRCD1,SNDCRCD2,SNDCRCD3,SNDCRCD4,SNDCRCD5,SNDRCHG1,SNDRCHG2,SNDRCHG3,SNDRCHG4,SNDRCHG5,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+25>IOSL do VHDG0 quit:VFMQ

	set VL="  "_"Reference No.:"
	set VL=VL_$J("",17-VL.length())_$J(vc6,12)
	set VL=VL_$J("",38-VL.length())_"Amount Received:"
	set VL=VL_$J("",55-VL.length())_$J($FN(vc7,",",2),18)
	set VL=VL_$J("",75-VL.length())_$E(vc8,1,3)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_"Creation Date:"
	set VL=VL_$J("",17-VL.length())_$J($$DAT^%ZM(vc1),10)
	set VL=VL_$J("",38-VL.length())_"Amount Credited:"
	set VL=VL_$J("",55-VL.length())_$J($FN(vc9,",",2),18)
	set VL=VL_$J("",75-VL.length())_$E(vc10,1,3)
	if 'VL.translate(" ").isNull() do VOM
	set VL="     "_"Value Date:"
	set VL=VL_$J("",17-VL.length())_$J($$DAT^%ZM(vc11),10)
	set VL=VL_$J("",42-VL.length())_"Process Fee:"
	set VL=VL_$J("",55-VL.length())_$J($FN(vc12,",",2),12)
	set VL=VL_$J("",75-VL.length())_$E(vc10,1,3)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_"Exchange Rate:"
	set VL=VL_$J("",17-VL.length())_$J(vc13,12,6)
	set VL=VL_$J("",39-VL.length())_"Conversion Fee:"
	set VL=VL_$J("",55-VL.length())_$J($FN(vc14,",",2),12)
	set VL=VL_$J("",75-VL.length())_$E(vc10,1,3)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="  "_"Beneficiary:"
	set VL=VL_$J("",15-VL.length())_$J(vc15,12)
	set VL=VL_$J("",38-VL.length())_"Branch:"
	set VL=VL_$J("",46-VL.length())_$J(vc3,6)
	set VL=VL_$J("",57-VL.length())_"Account:"
	set VL=VL_$J("",66-VL.length())_$J(vc4,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc16,1,35)
	do VP1 quit:VFMQ!verror.get()  set V=$E(OWNER,1,40)
	set VL=VL_$J("",38-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc17,1,35)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc18,1,35)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc19,1,35)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="  "_"Orderer:"
	set VL=VL_$J("",38-VL.length())_"Orderer Institution:"
	set VL=VL_$J("",59-VL.length())_$E(vc20,1,12)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc21,1,35)
	set VL=VL_$J("",38-VL.length())_$E(vc22,1,35)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc23,1,35)
	set VL=VL_$J("",38-VL.length())_$E(vc24,1,35)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc25,1,35)
	set VL=VL_$J("",38-VL.length())_$E(vc26,1,35)
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc27,1,35)
	set VL=VL_$J("",38-VL.length())_$E(vc28,1,35)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="  "_"Purpose of Payment:"
	set VL=VL_$J("",38-VL.length())_"Sender's Charges:"
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc29,1,35)
	set VL=VL_$J("",38-VL.length())_"Currency"
	set VL=VL_$J("",52-VL.length())_"Charges"
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc30,1,35)
	do VP2 quit:VFMQ!verror.get()  set V=$E(SNDCRCD1,1,3)
	set VL=VL_$J("",38-VL.length())_V
	set VL=VL_$J("",52-VL.length())_$S(+SNDRCHG1=0:$J("",15),1:$J(SNDRCHG1,15,2))
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc31,1,35)
	set VL=VL_$J("",38-VL.length())_$E(SNDCRCD2,1,3)
	set VL=VL_$J("",52-VL.length())_$S(+SNDRCHG2=0:$J("",15),1:$J(SNDRCHG2,15,2))
	if 'VL.translate(" ").isNull() do VOM
	set VL="  "_$E(vc32,1,35)
	set VL=VL_$J("",38-VL.length())_$E(SNDCRCD3,1,3)
	set VL=VL_$J("",52-VL.length())_$S(+SNDRCHG3=0:$J("",15),1:$J(SNDRCHG3,15,2))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$E(SNDCRCD4,1,3)
	set VL=VL_$J("",52-VL.length())_$S(+SNDRCHG4=0:$J("",15),1:$J(SNDRCHG4,15,2))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                      "_$E(SNDCRCD5,1,3)
	set VL=VL_$J("",52-VL.length())_$S(+SNDRCHG5=0:$J("",15),1:$J(SNDRCHG5,15,2))
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,OWNER,RID,RN,SNDCRCD1,SNDCRCD2,SNDCRCD3,SNDCRCD4,SNDCRCD5,SNDRCHG1,SNDRCHG2,SNDRCHG3,SNDRCHG4,SNDRCHG5,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="  "_$E(CONAM,1,20)
	set VL=VL_$J("",47-VL.length())_"Run Date:"
	set VL=VL_$J("",57-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",69-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="  "_$E(RN,1,30)
	set VL=VL_$J("",46-VL.length())_"System Date:"
	set VL=VL_$J("",57-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",69-VL.length())_"Page:"
	set VL=VL_$J("",75-VL.length())_$J(VPN,3)
	do VOM
	set VL="=============================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: OWNER

	type public String vc4
 type public String OWNER
 type Number CID,OACN
 
 set CID=vc4
 type ResultSet rs=Db.select("ACN","LN","CID=:CID")
 if rs.isEmpty() set OWNER="" quit
 set OACN=rs.getCol("ACN")
 type RecordCIF cif=Db.getRecord("CIF","ACN=:OACN",1)
 set OWNER=cif.nam
	quit

VP2	// Column pre-processor - Variable: SNDCRCD1

	type public String vc4,vc5
 type Number X,XCID,XSEQ
 type String EXEC,EXEC2,FREEPTR,MSG,TXT,XMSG
 type public String SNDCRCD1,SNDCRCD2,SNDCRCD3,SNDCRCD4,SNDCRCD5
 type public Number SNDRCHG1,SNDRCHG2,SNDRCHG3,SNDRCHG4,SNDRCHG5
 
 set (SNDRCHG1,SNDRCHG2,SNDRCHG3,SNDRCHG4,SNDRCHG5)=""
 set (SNDCRCD1,SNDCRCD2,SNDCRCD3,SNDCRCD4,SNDCRCD5)=""
 set XCID=vc4
 set XSEQ=vc5
 type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID=:XCID,SEQ=:XSEQ",1)
 set FREEPTR=eftpay.freeptr
 if FREEPTR="" quit
 set TXT=$$MULT2^SWIFTCDI("IN",FREEPTR,"71F")
 for X=1:1 set MSG=TXT.piece($C(13,10),X) do { quit:MSG=""
 	set XMSG=$$INT^%ZM(MSG.extract(4,20),"$",",.",2)
 	set EXEC="S SNDRCHG"_X_"=XMSG"
 	set EXEC2="S SNDCRCD"_X_"=$E(MSG,1,3)"
 	X EXEC,EXEC2
 	}
	quit
