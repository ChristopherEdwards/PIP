R01S524	// SCA605 - Interest Suspense and Provision Movement
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:51 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String BD,EOP
	type String ZREPQRY
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date BOP
	type Date VIN2
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA605"
	set RN="Interest Suspense and Provision Movement"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("BOP")="|10|||||S BD=X I $$BOMJD^SCADAT(X)'=X S ER=1,RM=""Must be beginning of month""||D|Beginning Date|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|10||[SUSPENSE]EOM|[SUSPENSE]EOM:DISTINCT:QU ZREPQRY||S EOP=X I X'>BOP S ER=1,RM=$$^MSG(896)||D|Month Ending is equal to|||||"
	set %TAB("VIN3")="|255||[ACN]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN4")="|255||[SUSPENSE]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"

	set %READ="IO/REQ,BOP#1,VIN2#1,VIN3#0,VIN4#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String BD,EOP
	type public String ZREPQRY
	type public Date BOP,VIN2
	type public String VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,BOO,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA605",RN="Interest Suspense and Provision Movement"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA605","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[SUSPENSE]CID#3#12,[ACN]LNM#17#20"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[SUSPENSE]EOM = "_$$addqts^DBSRWUTL(VIN2),SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[ACN]BOO "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[SUSPENSE]CID "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("SUSPENSE,ACN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC1|"_"Month Ending is equal to"_"|VIN2|"_$$DAT^%ZM(VIN2.get(),%MSKD)
		set VBNRINFO("PROMPTS",3)="WC2|"_"Branch of Ownership"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Account Number"_"|VIN4|"_VIN4.get()

		if vudwhere.exists() set VWHERE=vudwhere

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Interest Suspense and Provision Movement"
		set VBNRINFO("PGM")="R01S524"
		set VBNRINFO("RID")="SCA605"
		set VBNRINFO("TABLES")="SUSPENSE,ACN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ACN]BOO"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SUSPENSE]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,SUSPENSE]EOM"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:10 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	do VOPRE if VFMQ do VEXIT(0) quit

	set VSELECT=""
	set VSELECT=VSELECT_"ACN.BOO,SUSPENSE.CID,SUSPENSE.EOM,SUSPENSE.SUSBOM,"
	set VSELECT=VSELECT_"SUSPENSE.SUSDMTH,SUSPENSE.SUSWB,SUSPENSE.SUSWO,SUS"
	set VSELECT=VSELECT_"PENSE.SUSEOM,SUSPENSE.PROVBOM,SUSPENSE.PROVDMTH,SU"
	set VSELECT=VSELECT_"SPENSE.PROVWB,SUSPENSE.PROVWO,SUSPENSE.PROVEOM,ACN"
	set VSELECT=VSELECT_".LNM"

	set VWHERE=""
	if vudwhere.exists() set VWHERE=vudwhere
	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"SUSPENSE,ACN",VWHERE,"ACN.BOO,SUSPENSE.CID,SUSPENSE.EOM","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// ACN.BOO
	set vc2=V.piece($C(9),2)			// SUSPENSE.CID
	set vc3=V.piece($C(9),3)			// SUSPENSE.EOM
	set vc4=V.piece($C(9),4)			// SUSPENSE.SUSBOM
	set vc5=V.piece($C(9),5)			// SUSPENSE.SUSDMTH
	set vc6=V.piece($C(9),6)			// SUSPENSE.SUSWB
	set vc7=V.piece($C(9),7)			// SUSPENSE.SUSWO
	set vc8=V.piece($C(9),8)			// SUSPENSE.SUSEOM
	set vc9=V.piece($C(9),9)			// SUSPENSE.PROVBOM
	set vc10=V.piece($C(9),10)			// SUSPENSE.PROVDMTH
	set vc11=V.piece($C(9),11)			// SUSPENSE.PROVWB
	set vc12=V.piece($C(9),12)			// SUSPENSE.PROVWO
	set vc13=V.piece($C(9),13)			// SUSPENSE.PROVEOM
	set vc14=V.piece($C(9),14)			// ACN.LNM
	quit

	// User-defined pre/post-processor code

VOPRE	// OPEN pre-processor

 type public Number BOP, EOP
 type public String vudwhere

 set vudwhere="SUSPENSE.EOM>:BOP AND SUSPENSE.EOM<:EOP+1"
	quit

VPREBQ	// Pre-processor (before query)

 /*
  ---- Revision History ------------------------------------------------
 
        11/08/05 - TITOVE - CR 18151
                   Converted into PSL.
 */
 type public String BD, EOP, ZREPQRY

 set ZREPQRY = "[SUSPENSE]EOM < <<TJD>>"

 //Incoming=BD,EOP
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc9,vc10,vc13,vc11,vc12,vc4,vc5,vc8,vc6,vc7
	type Public String VSTATS

	set VT(3)=VT(3)+1
	set VT(3,1,1)=VT(3,1,1)+vc9			// @TOT([SUSPENSE]PROVBOM)
	set VT(3,2,1)=VT(3,2,1)+vc10			// @TOT([SUSPENSE]PROVDMTH)
	set VT(3,3,1)=VT(3,3,1)+vc13			// @TOT([SUSPENSE]PROVEOM)
	set VT(3,4,1)=VT(3,4,1)+vc11			// @TOT([SUSPENSE]PROVWB)
	set VT(3,5,1)=VT(3,5,1)+vc12			// @TOT([SUSPENSE]PROVWO)
	set VT(3,6,1)=VT(3,6,1)+vc4			// @TOT([SUSPENSE]SUSBOM)
	set VT(3,7,1)=VT(3,7,1)+vc5			// @TOT([SUSPENSE]SUSDMTH)
	set VT(3,8,1)=VT(3,8,1)+vc8			// @TOT([SUSPENSE]SUSEOM)
	set VT(3,9,1)=VT(3,9,1)+vc6			// @TOT([SUSPENSE]SUSWB)
	set VT(3,10,1)=VT(3,10,1)+vc7			// @TOT([SUSPENSE]SUSWO)
	quit

VDTL2	// Detail
	type public String %TIM,BD,BOO,BOP,EOP,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZREPQRY,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="  "_$J(vc2,12)
	set VL=VL_$J("",16-VL.length())_$E(vc14,1,20)
	do VOM
	quit

VSUM2	// Summary
	type public String %TIM,BD,BOO,BOP,EOP,I,IOSL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),ZREPQRY,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere

	if 'VT(2) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="     "_"BRANCH  TOTALS: "
	set VL=VL_$J("",25-VL.length())_"Interest in Suspense:"
	set V=VT(2,6,1)					// @TOT([SUSPENSE]SUSBOM,)
	set VL=VL_$J("",50-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,7,1)					// @TOT([SUSPENSE]SUSDMTH,)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,9,1)					// @TOT([SUSPENSE]SUSWB,)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,10,1)				// @TOT([SUSPENSE]SUSWO,)
	set VL=VL_$J("",92-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,8,1)					// @TOT([SUSPENSE]SUSEOM,)
	set VL=VL_$J("",106-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="                           "_"Specific Provision: "
	set V=VT(2,1,1)					// @TOT([SUSPENSE]PROVBOM,)
	set VL=VL_$J("",50-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,2,1)					// @TOT([SUSPENSE]PROVDMTH,)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,4,1)					// @TOT([SUSPENSE]PROVWB,)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,5,1)					// @TOT([SUSPENSE]PROVWO,)
	set VL=VL_$J("",92-VL.length())_$J($FN(V,",",2),12)
	set V=VT(2,3,1)					// @TOT([SUSPENSE]PROVEOM,)
	set VL=VL_$J("",106-VL.length())_$J($FN(V,",",2),12)
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,BD,BOO,BOP,EOP,I,IOSL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),ZREPQRY,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere

	if 'VT(3) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                         "_"Interest in Suspense:"
	set V=VT(3,6,1)					// @TOT([SUSPENSE]SUSBOM,)
	set VL=VL_$J("",50-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,7,1)					// @TOT([SUSPENSE]SUSDMTH,)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,9,1)					// @TOT([SUSPENSE]SUSWB,)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,10,1)				// @TOT([SUSPENSE]SUSWO,)
	set VL=VL_$J("",92-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,8,1)					// @TOT([SUSPENSE]SUSEOM,)
	set VL=VL_$J("",106-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="                           "_"Specific Provision: "
	set V=VT(3,1,1)					// @TOT([SUSPENSE]PROVBOM,)
	set VL=VL_$J("",50-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,2,1)					// @TOT([SUSPENSE]PROVDMTH,)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,4,1)					// @TOT([SUSPENSE]PROVWB,)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,5,1)					// @TOT([SUSPENSE]PROVWO,)
	set VL=VL_$J("",92-VL.length())_$J($FN(V,",",2),12)
	set V=VT(3,3,1)					// @TOT([SUSPENSE]PROVEOM,)
	set VL=VL_$J("",106-VL.length())_$J($FN(V,",",2),12)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BD,BOO,BOP,CONAM,EOP,RID,RN,VL,ZREPQRY,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Beginning Date:"
	set VL=VL_$J("",21-VL.length())_$J($$DAT^%ZM(BD),10)
	set VL=VL_$J("",40-VL.length())_"Period Ending:"
	set VL=VL_$J("",55-VL.length())_$J($$DAT^%ZM(EOP),10)
	do VOM
	set VL="             "_"Branch:"
	set VL=VL_$J("",21-VL.length())_$E(vc1,1,7)
	do VOM
	set VL="" do VOM
	set VL="       "_"Account                                         Opening                                                 Closing"
	do VOM
	set VL="        "_"Number   Borrower                              Balance     In Period  Written Back   Written Off       Balance"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,BD,BOO,BOP,EOP,VPN,vc1,vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="      "_"REPORT TOTALS:     Interest in Suspense:"
	set V=0						// @TOT([SUSPENSE]SUSBOM,0)
	for I=0:1:3 set V=V+VT(I,6,1)
	set VL=VL_$J("",50-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([SUSPENSE]SUSDMTH,0)
	for I=0:1:3 set V=V+VT(I,7,1)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([SUSPENSE]SUSWB,0)
	for I=0:1:3 set V=V+VT(I,9,1)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([SUSPENSE]SUSWO,0)
	for I=0:1:3 set V=V+VT(I,10,1)
	set VL=VL_$J("",92-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([SUSPENSE]SUSEOM,0)
	for I=0:1:3 set V=V+VT(I,8,1)
	set VL=VL_$J("",106-VL.length())_$J($FN(V,",",2),12)
	do VOM
	set VL="                           "_"Specific Provision: "
	set V=0						// @TOT([SUSPENSE]PROVBOM,0)
	for I=0:1:3 set V=V+VT(I,1,1)
	set VL=VL_$J("",50-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([SUSPENSE]PROVDMTH,0)
	for I=0:1:3 set V=V+VT(I,2,1)
	set VL=VL_$J("",64-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([SUSPENSE]PROVWB,0)
	for I=0:1:3 set V=V+VT(I,4,1)
	set VL=VL_$J("",78-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([SUSPENSE]PROVWO,0)
	for I=0:1:3 set V=V+VT(I,5,1)
	set VL=VL_$J("",92-VL.length())_$J($FN(V,",",2),12)
	set V=0						// @TOT([SUSPENSE]PROVEOM,0)
	for I=0:1:3 set V=V+VT(I,3,1)
	set VL=VL_$J("",106-VL.length())_$J($FN(V,",",2),12)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
