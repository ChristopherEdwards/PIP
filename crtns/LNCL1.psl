LNCL1		/*

	   Modify loan commitment amounts

	   ORIG:  Kathie Jalbuena (7070) - 10/23/87
	   DESC:
	
	---- Revision History ------------------------------------------------

	03/30/06 - KELLYP - CR 19840
		   Modified TTX2 section not to pass EFD in the TPD parameter
		   to TRNSINGL^TRNDRV.  This prevents a problem where ITC8
		   would be updated in TRNDRV incorrectly.

	04/18/05 - KELLYP - CR 13662
		   Modified TTX section to prevent an undefined error on the
		   TYPE variable (use ln.type instead).  Also removed pre-
		   2003 revision history.

	07/28/03 - CARROLLJ - 51349
		   Changed call to TRNDRV to pass in transaction as system
		   generated instead of a secondary and also added .get() 
		   around effective date.

	05/15/03 - CARROLLJ - 51349
		   Modified TTX section to copy ttx object into object array
		   so array can be used in STFUTL.  Also deleted EXT linetag.

	----------------------------------------------------------------------
	*/
	quit

public TTX(RecordLN ln)

	/*
	    INPUTS:
	    . ln    Loan Object                     /TYP=RecordLN/REQ/REF:RW
	*/

	Type Public Cache %CACHE()
	
	set TSO="" set TCMT=$G(TCMT)
	
	set SAVCID=CID
	if %EffectiveDate.get()'<%SystemDate set %EffectiveDate=""
	
	set GRP=ln.grp
	type RecordPRODCTL prodctl=%CACHE("PRODCTL").getRecord("PRODCTL","TYPE=:ln.type")
	
	set ETC=$S(TAMT<0:prodctl.crtrdf,1:prodctl.drtraf)
	if ETC="" do ETC(GRP)

	type RecordTTX ttx()
	set ttx(1)=Class.new("RecordTTX")
	do TTX2(.ln,.ttx(1)) if ER quit 

	set ETC=$S(TAMT<0:prodctl.drtrdf,1:prodctl.crtraf)
	if ETC="" do ETC1(GRP)

	set ttx(2)=Class.new("RecordTTX")
	do TTX2(.ln,.ttx(2)) if ER quit 
	if $G(%STFHOST) do {  quit
		new vzrec
		set vzrec=$$FMTTSSP^STFUTL(.ttx(),"",BRCD,TJD)
		do STFREC^STFUTL(1,vzrec,.ttx())
		}
	set CID=SAVCID
	quit 
	

TTX2(RecordLN ln,RecordTTX ttx) // Build transaction

	type public Cache %CACHE()
	
	type RecordTRN trn=%CACHE("TRN").getRecord("TRN","ETC=:ETC")
	set ITC=trn.itc
	set ITC=$$ITC^TTXEXT(ITC,7,1)

	set ttx.cid=CID
	set ttx.itc=ITC
	set ttx.etc=ETC
	set ttx.tamt=$S(TAMT>0:TAMT,1:-TAMT)
	set ttx.efd=%EffectiveDate.get()
	set ttx.tlo=%UserStation
	set ttx.tso=TSO
	set ttx.tcmt=TCMT
	set ttx.crcd=ln.crcd

	do TRNSINGL^TRNDRV(.ttx,.ln,,ln.boo,4)

	quit 
	
ETC(GRP) // Determine tran code if not provided
	
	if DC set ETC=$S(GRP="MTG":"MUDO",GRP="COM":"CMUDO",GRP="LN":"LUDO",GRP="RC":"RUDO",GRP="DM":"DLUDO",1:"")
	else  set ETC=$S(GRP="MTG":"MUIO",GRP="COM":"CMUIO",GRP="LN":"LUIO",GRP="RC":"RAUIO",GRP="DM":"DLUIO",1:"")
	quit 
	
ETC1(GRP) // Determine tran code if not provided

	if DC set ETC=$S(GRP="MTG":"MUD",GRP="COM":"CMUD",GRP="LN":"LUD",GRP="RC":"RUD",GRP="DM":"DLUD",1:"")
	else  set ETC=$S(GRP="MTG":"MUI",GRP="COM":"CMUI",GRP="LN":"LUI",GRP="RC":"RAUI",GRP="DM":"DLUI",1:"")
	quit 
	
 #OPTION ResultClass ON
Public String vSIG()	quit "60354^51440^Pat Kelly^2689"	// Signature - LTD^TIME^USER^SIZE
