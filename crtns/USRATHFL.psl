USRATHFL(RecordUSRAUTH usrauth, String vpar, Boolean vparNorm) // USRAUTH - Account User Authorization  Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:21 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (3)              11/22/2003
	// Journal File Definition (1)                 04/21/2006
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = usrauth.getMode()                     // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(usrauth,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(usrauth,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("CID").exists()!vx("ACN").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("USRAUTH",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("USRAUTH","CID = :usrauth.cid and ACN = :usrauth.acn") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String CID
	type public String ACN

	type RecordUSRAUTH usrauth = Db.getRecord("USRAUTH","CID=:CID,ACN=:ACN")
	if (%ProcessMode = 2) do {
		do usrauth.setMode(2)

		do USRATHFL(usrauth,vpar)
	}
	else  do VINDEX(usrauth)

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordUSRAUTH usrauth

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("USRAUTH","CID = :usrauth.cid and ACN = :usrauth.acn") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(usrauth)) S ^ACN(vobj(usrauth,-3),97,vobj(usrauth,-4))=vobj(usrauth)
		#ENDBYPASS

		if vpar["/JOURNAL/" do VJOURNAL(.usrauth)             // Create journal files
	}

	if vpar["/INDEX/",'(%O = 1)!'vx("").order().isNull() do VINDEX(.usrauth) // Update Index files

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordUSRAUTH usrauth

	if vpar["/INDEX/" do VINDEX(.usrauth)                  // Delete index entries
	if vpar["/JOURNAL/" do VJOURNAL(.usrauth)              // Create journal entries

	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^ACN(vobj(usrauth,-3),97,vobj(usrauth,-4))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordUSRAUTH usrauth

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordUSRAUTH usrauth

	if usrauth.cid.isNull() do vreqerr("CID") quit
	if usrauth.acn.isNull() do vreqerr("ACN") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("USRAUTH","MSG",1767,"USRAUTH."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordUSRAUTH usrauth
	if 'usrauth.acn.isNull() set vfkey("^CIF("_""""_usrauth.acn_""""_","_1_")")="USRAUTH(ACN) -> CIF"
	if 'usrauth.cid.isNull() set vfkey("^ACN("_""""_usrauth.cid_""""_","_50_")")="USRAUTH(CID) -> ACN"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordUSRAUTH usrauth
	type public Number %O
	type String vERRMSG

	if 'Db.isDefined("CIF",":usrauth.acn") set vERRMSG = $$^MSG(8563,"USRAUTH(ACN) -> CIF") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	if 'Db.isDefined("ACN",":usrauth.cid") set vERRMSG = $$^MSG(8563,"USRAUTH(CID) -> ACN") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordUSRAUTH usrauth

	set X = usrauth.cid if 'X.isNull(),'Db.isDefined("ACN","X") set vRM = $$^MSG(1485,X) do vdderr("CID", vRM) quit
	set X = usrauth.acn if 'X.isNull(),'Db.isDefined("CIF","X") set vRM = $$^MSG(1485,X) do vdderr("ACN", vRM) quit
	set X = usrauth.atm if 'X.isNull(),'Db.isDefined("UTBLATM","X") set vRM = $$^MSG(1485,X) do vdderr("ATM", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("USRAUTH","MSG",979,"USRAUTH."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VJOURNAL(RecordUSRAUTH usrauth)	//USRAUTH Journal file entries

	type Public Date %EffectiveDate
	type Public String %TSRC,vpar,vx()
	type String TSRC,vdi,vdx()

	if %TSRC.get().isNull() set TSRC="O"
	else  set TSRC=%TSRC

	if %ProcessMode=0 do {
		if TSRC="B" do {
			if 'EFD.get() do {
				do vj1(.usrauth)	// Mode=I Tran=B EFD=N Seq=1 JRNID=DAYENDUSRAUT
				}
			}
		else  if TSRC="O" do {
			if 'EFD.get() do {
				do vj1(.usrauth)	// Mode=I Tran=O EFD=N Seq=1 JRNID=DAYENDUSRAUT
				}
			}
		}

	quit


vj1(RecordUSRAUTH usrauth)	// DAYENDUSRAUT  Table DAYENDUSRAUT  Account User Authorization Journal

	type Public String TJD
	type String v1,v2,vlastkey
	set v1=TJD
	set v2=usrauth.cid
	set vlastkey=usrauth.acn
	type RecordDAYENDUSRAUT dayendusraut=Db.getRecord("DAYENDUSRAUT","CTJD=:v1,CID=:v2,ACN=:vlastkey",1)

	do dayendusraut.save("/NOVALFK/NOVALDD/NOVALRI")

	quit



public VINDEX(RecordUSRAUTH usrauth) // Update index entries

		type Public String vx()

	if %ProcessMode=1 do { quit
	}
	do vi1(.usrauth)

	quit
	

vi1(RecordUSRAUTH usrauth) // Maintain USRAUTH index entries (Account User Authorization)

	type Public String vx()
	type Boolean vdelete = 0
	type String v1 = usrauth.acn
	type String v3 = usrauth.cid

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
		#BYPASS
		if $D(^ACN(vobj(usrauth,-3),97,vobj(usrauth,-4)))#2,'$D(^USRAUTHX(v1,97,v3)) do vidxerr("USRAUTH")
		#ENDBYPASS
		}

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	if %O<2 set ^USRAUTHX(v1,97,v3)="" quit
	#ENDBYPASS
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^USRAUTHX(v1,97,v3)
	#ENDBYPASS
	quit

public VIDXBLD(List vlist) // Rebuild index files (External call)


	type Number %ProcessMode=0                             // Create mode
	type Number i

	if vlist.get().isNull() set vlist="VINDEX"             // Build all

	type DbSet ds=Db.selectDbSet("USRAUTH")

	while ds.next() do {
		type RecordUSRAUTH usrauth=ds.getRecord("USRAUTH")
		if vlist.contains("VINDEX") do VINDEX(.usrauth) quit
		if vlist.contains("USRAUTH") do vi1(.usrauth)
	}

	quit


public VIDXBLD1(RecordUSRAUTH usrauth, List vlist) // Rebuild index files for one record (External call)


	type Number i

	if vlist.contains("VINDEX") do VINDEX(.usrauth) quit
	if vlist.contains("USRAUTH") do vi1(.usrauth)

	quit


vidxerr(di) // Error message

	D SETERR^DBSEXECU("USRAUTH","MSG",1225,"USRAUTH."_di)

	quit


vkchged // Access key changed

	type public RecordUSRAUTH usrauth

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("CID").exists() set vux("CID") = vx("CID")
	if vx("ACN").exists() set vux("ACN") = vx("ACN")
	do vkey(1) set voldkey = usrauth.cid_","_usrauth.acn   // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = usrauth.cid_","_usrauth.acn   // Copy new keys into object
	type RecordUSRAUTH vnewrec = usrauth.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("USRAUTH",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordUSRAUTH usrauth

	if vux("CID").exists() set usrauth.cid = vux("CID").piece("|",i)
	if vux("ACN").exists() set usrauth.acn = vux("ACN").piece("|",i)
	quit

VIDXPGM()	quit "USRATHFL"	// Location of index program

