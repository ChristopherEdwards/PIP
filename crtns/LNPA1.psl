LNPA1	// PROFITABILITY/YIELD ANALYSIS CONVERSION ROUTINE
	/*
	       ORIG:  KATHY BRADLEY (4646) - 09/13/89
	       DESC:

	---- Revision History ------------------------------------------------

	02/08/06 - Carrie Baildon - CR 16889
		   Replaced references to M $ functions with PSL
		   accepted equivalents. Removed the re-typing of object
		   paa within FILE to eliminate the warning and to kill the
		   old object between new records. Revised to show the dates
		   as protected data fields rather than text fields. The rules
		   for formatting text fields distorted the alignment of 
		   the fields on the page.

        07/26/05 - SkariahV- CR16679
	           Removed #WARN and #OPTIMIZE directives.
	              	
	05/28/03 - GRAY - 51351
		   Converted to PSL.

	*/

	
	type Date EFD
	type Number MONTH
	type String %CTPRMT, %NOPRMT, %READ, %TAB, HD, HDG1, HDG2, HDG3 
	type String OLNTB, VFMQ
	type Public String DAT()

	set %TAB("EFD") = ".EFD1/HLP=[PAA]EFD/XPP=do DATE^LNPA1"
	set %TAB("CID") = ".CID1/HLP=[PAA]CID/XPP=set %EXT=1 do ^UACN"

	kill OLNTB, VFMQ

	set %READ = "@@%FN,,EFD/REQ,CID/REQ" set %NOPRMT = "F"
	do ^UTLREAD 
	if VFMQ = "Q" quit

	set OLNTB = "05030"
	set %CTPRMT = "2|19"

	set %TAB("IPL") = ".IPL1/HLP=[PAA]IPL"
	set %TAB("ACR") = ".ACR1/HLP=[PAA]ACR"
	set %TAB("IEP(1)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(2)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(3)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(4)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(5)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(6)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(7)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(8)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(9)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(10)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(11)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("IEP(12)") = ".IEP1/HLP=[PAA]IEP/DES="
	set %TAB("DAT(1)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(2)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(3)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(4)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(5)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(6)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(7)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(8)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(9)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(10)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(11)") = "/PROT/HLP=[PAA]EFD/DES="
	set %TAB("DAT(12)") = "/PROT/HLP=[PAA]EFD/DES="

	// AS OF ~p1 :
	set HDG1 = $$^MSG(4196, %EffectiveDate.toString())
	// Period ending	      Int/Div earned
	set HDG2 = "      "_$$^MSG(8272)_"       "_$$^MSG(8273)
	set HDG3 = ""
	
	set %READ="IPL/REQ,,ACR/REQ,,@HDG2,,DAT(1),IEP(1)"
	if MONTH > 2 set %READ = %READ_",DAT(2),IEP(2)"
	if MONTH > 3 set %READ = %READ_",DAT(3),IEP(3)"
	if MONTH > 4 set %READ = %READ_",DAT(4),IEP(4)"
	if MONTH > 5 set %READ = %READ_",DAT(5),IEP(5)"
	if MONTH > 6 set %READ = %READ_",DAT(6),IEP(6)"
	if MONTH > 7 set %READ = %READ_",DAT(7),IEP(7)"
	if MONTH > 8 set %READ = %READ_",DAT(8),IEP(8)"
	if MONTH > 9 set %READ = %READ_",DAT(9),IEP(9)"
	if MONTH > 10 set %READ = %READ_",DAT(10),IEP(10)"
	if MONTH > 11 set %READ = %READ_",DAT(11),IEP(11)"
	if MONTH > 12 set %READ = %READ_",DAT(12),IEP(12)"

	do ^UTLREAD if VFMQ = "Q" quit

	do FILE 

	quit


DATE	// Set up period-ending dates
	
	type Boolean STOP
	type Date JD, NJD, TDT, YEFD
	type Number I
	type String %DS, FRE
	
	type Public Date DT, DT(), X
	type Public Number MONTH
	type Public String DAT(), ER, RM

	if X = "" quit

	set (DT, DT(1)) = X
	set FRE = CUVAR.LPFRE

	set JD = X set NJD = JD.nextFreqDate(FRE) quit:ER  

	set TDT = NJD
	set FRE = "-"_FRE 
	set JD = TDT

	// Invalid.  Date does not coincide with frequency.
	set NJD = JD.nextFreqDate(FRE) 
	if X '= NJD set ER = 1 set RM = $$^MSG(4197) quit

	set %DS = "12/"_DT.day()_"/"_(DT.year() - 1) 
	set YEFD = %DS.toDate("MM/DD/YEAR") quit:ER

	set STOP = 0
	for I = 2:1:13 do { quit:STOP ! ER
		set JD = DT
		set NJD = JD.nextFreqDate(FRE) quit:ER
		if NJD<YEFD set STOP = 1 quit
		set DT = NJD
		set DT(I) = DT
	}
	set MONTH = $S(DT(13).exists():13, 1:I-1)	

	for I = 1:1:MONTH set DAT(I) = DT(I).toString()

	quit


FILE	// File information in ^PAF
	/*
	   IP(I)  - Interest Paid per period
	   IEP(I) - Interest Earned per period
	   IEY(I) - Interest Earned (YTD)
	*/

	type Date XEFD
	type Number I
	type Public Date DT()
	type Public Number ACR, CID, IPL, MONTH
	type Public String IEP(), IEY(), IP()
	type Public String ER, RM, VFMQ

	set IP(2) = ACR + IPL - IEP(1)
	for I = 2:1:MONTH-1 set IP(I+1) = IP(I) - IEP(I)
	set IEY(1) = ACR + IPL - IP(MONTH)
	for I = 2:1:MONTH-1 set IEY(I) = IP(I) - IP(MONTH)
	
	set XEFD = DT(1)
	type RecordPAA paa = Db.getRecord("PAA", "EFD=:XEFD,CID=:CID", 1)
	set paa.acr = ACR
	set paa.ipl = IPL
	set paa.iep = IEP(1)
	set paa.iey = IEY(1)
	do paa.bypassSave()

	for I=2:1:MONTH-1 do {
		set XEFD = DT(I)
		set paa = Db.getRecord("PAA", "EFD=:XEFD,CID=:CID", 1)
		set paa.ipl = IP(I)
		set paa.iep = IEP(I)
		set paa.iey = IEY(I)
		do paa.bypassSave()
		}

	set XEFD = DT(MONTH)
	set paa = Db.getRecord("PAA", "EFD=:XEFD,CID=:CID", 1)
	set paa.ipl = IP(MONTH)
	do paa.bypassSave()
	
	// Account ~p1 not created
	if VFMQ = "Q" set RM = $$^MSG(129,CID)

	// Account ~p1 created
	else  set RM = $$^MSG(107,CID)

	set ER = "W"

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60334^61939^Carrie Baildon^5082"	// Signature - LTD^TIME^USER^SIZE
