V00S035(%ProcessMode,RecordCTBLEFTTYPE fCTBLEFT)   // -  - SID= <CTBLEFTTYPE> EFT Payment Types
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:05 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="CTBLEFTTYPE",VPGM=$T(+0),VSNAME="EFT Payment Types"
 set VFSN("CTBLEFTTYPE")="zfCTBLEFT"
 set vPSL=1
 set KEYS(1)=fCTBLEFT.KEY
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fCTBLEFT),VDA1(.fCTBLEFT),^DBSPNT()

 if '%ProcessMode do VNEW(.fCTBLEFT),VPR(.fCTBLEFT),VDA1(.fCTBLEFT)
 if %ProcessMode do VLOD(.fCTBLEFT) quit:$G(ER)  do VPR(.fCTBLEFT),VDA1(.fCTBLEFT)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCTBLEFT)
	quit


VNEW(RecordCTBLEFTTYPE fCTBLEFT) // Initialize arrays if %O=0
 
 do VDEF(.fCTBLEFT)
 do VLOD(.fCTBLEFT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCTBLEFTTYPE fCTBLEFT)
 if fCTBLEFT.ODP="" set fCTBLEFT.ODP=0
 if fCTBLEFT.REV="" set fCTBLEFT.REV=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCTBLEFTTYPE fCTBLEFT) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCTBLEFTTYPE fCTBLEFT) // Display screen prompts
 set VO="33||13|"
 set VO(0)="2|0"
 set VO(1)=$C(2,31,20,2,0,0,0,0,0,0)_"01TEFT Type Information"
 set VO(2)=$C(4,14,10,0,0,0,0,0,0,0)_"01T EFT Type:"
 set VO(3)=$C(5,11,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(4)=$C(6,7,17,1,0,0,0,0,0,0)_"01T EFT System Type:"
 set VO(5)=$C(6,39,25,0,0,0,0,0,0,0)_"01TPreauthorize Transaction:"
 set VO(6)=$C(7,8,16,1,0,0,0,0,0,0)_"01T Times to Retry:"
 set VO(7)=$C(7,35,29,1,0,0,0,0,0,0)_"01T Invoke Overdraft Protection:"
 set VO(8)=$C(8,1,23,1,0,0,0,0,0,0)_"01T Financial Transaction:"
 set VO(9)=$C(8,42,22,1,0,0,0,0,0,0)_"01T Reversal Transaction:"
 set VO(10)=$C(9,3,21,0,0,0,0,0,0,0)_"01TFin Trans Assessment:"
 set VO(11)=$C(9,42,22,0,0,0,0,0,0,0)_"01TFin Trans Offset Days:"
 set VO(12)=$C(10,1,23,0,0,0,0,0,0,0)_"01TAllow Partial Payments:"
 set VO(13)=$C(10,46,18,1,0,0,0,0,0,0)_"01T Offset Tran Code:"
 set VO(14)=$C(11,2,22,0,0,0,0,0,0,0)_"01TBranch Screen Linkage:"
 set VO(15)=$C(11,41,23,0,0,0,0,0,0,0)_"01TDefault Payment Method:"
 set VO(16)=$C(12,6,18,0,0,0,0,0,0,0)_"01THQ Screen Linkage:"
 set VO(17)=$C(12,45,19,0,0,0,0,0,0,0)_"01TDefault Fee Method:"
 set VO(18)=$C(13,4,20,0,0,0,0,0,0,0)_"01TDefault Margin Code:"
 set VO(19)=$C(13,44,20,0,0,0,0,0,0,0)_"01TDefault Cost Center:"
 set VO(20)=$C(15,4,20,0,0,0,0,0,0,0)_"01TPermanent Hold Code:"
 set VO(21)=$C(15,37,27,0,0,0,0,0,0,0)_"01TAuto Retry Rejected Orders:"
 set VO(22)=$C(16,8,16,0,0,0,0,0,0,0)_"01THold Percentage:"
 set VO(23)=$C(16,46,18,0,0,0,0,0,0,0)_"01THold Until Posted:"
 set VO(24)=$C(17,7,17,0,0,0,0,0,0,0)_"01THold Auto Placed:"
 set VO(25)=$C(17,45,18,0,0,0,0,0,0,0)_"01TMaximum Hold Days:"
 set VO(26)=$C(19,27,27,2,0,0,0,0,0,0)_"01TEFT General Ledger Accounts"
 set VO(27)=$C(20,7,17,1,0,0,0,0,0,0)_"01T Incoming Offset:"
 set VO(28)=$C(20,47,17,1,0,0,0,0,0,0)_"01T Outgoing Offset:"
 set VO(29)=$C(21,4,20,0,0,0,0,0,0,0)_"01TIncoming (Priority):"
 set VO(30)=$C(21,44,20,0,0,0,0,0,0,0)_"01TOutgoing (Priority):"
 set VO(31)=$C(22,3,21,0,0,0,0,0,0,0)_"01TIncoming (3rd Party):"
 set VO(32)=$C(22,43,21,0,0,0,0,0,0,0)_"01TOutgoing (3rd Party):"
 set VO(33)=$C(23,46,18,0,0,0,0,0,0,0)_"01TLocal Settlements:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCTBLEFTTYPE fCTBLEFT)  // Display screen data
 new V
 //
 set VO="64|34|13|"
 set VO(34)=$C(4,25,12,2,0,0,0,0,0,0)_"01T"_$E(fCTBLEFT.KEY,1,12)
 set VO(35)=$C(5,25,50,2,0,0,0,0,0,0)_"00T"_$E(fCTBLEFT.DESC,1,50)
 set VO(36)=$C(6,25,12,2,0,0,0,0,0,0)_"00T"_$E(fCTBLEFT.STBLEFT,1,12)
 set VO(37)=$C(6,65,1,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.PREAUTH
 set VO(38)=$C(7,25,3,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.TRIES
 set VO(39)=$C(7,65,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLEFT.ODP:"Y",1:"N")
 set VO(40)=$C(8,25,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLEFT.FINCL:"Y",1:"N")
 set VO(41)=$C(8,65,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLEFT.REV:"Y",1:"N")
 set VO(42)=$C(9,25,1,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.FINTRAS
 set VO(43)=$C(9,65,2,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.FTOD
 set VO(44)=$C(10,25,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLEFT.PRTPMT:"Y",1:"N")
 set VO(45)=$C(10,65,12,2,0,0,0,0,0,0)_"00T"_$E(fCTBLEFT.ETC,1,12)
 set VO(46)=$C(11,25,12,2,0,0,0,0,0,0)_"00T"_$E(fCTBLEFT.SCRBR,1,12)
 set VO(47)=$C(11,65,12,2,0,0,0,0,0,0)_"00T"_$E(fCTBLEFT.PAYMETDFT,1,12)
 set VO(48)=$C(12,25,12,2,0,0,0,0,0,0)_"00T"_$E(fCTBLEFT.SCRHQ,1,12)
 set VO(49)=$C(12,65,12,2,0,0,0,0,0,0)_"00T"_$E(fCTBLEFT.FEEMETDFT,1,12)
 set VO(50)=$C(13,25,12,2,0,0,0,0,0,0)_"00T"_$E(fCTBLEFT.CCODE,1,12)
 set VO(51)=$C(13,65,6,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.CCDFT
 set VO(52)=$C(15,25,2,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.HLDCODE
 set VO(53)=$C(15,65,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLEFT.RETREJ:"Y",1:"N")
 set V=$S(fCTBLEFT.PERCENT="":"",1:$J(fCTBLEFT.PERCENT,0,3)) set VO(54)=$C(16,25,8,2,0,0,0,0,0,0)_"00N"_$S(fCTBLEFT.PERCENT="":"",1:$J(fCTBLEFT.PERCENT,0,3))
 set VO(55)=$C(16,65,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLEFT.HLDPST:"Y",1:"N")
 set VO(56)=$C(17,25,1,2,0,0,0,0,0,0)_"00L"_$S(fCTBLEFT.HLDAUTO:"Y",1:"N")
 set VO(57)=$C(17,64,2,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.HLDMAX
 set VO(58)=$C(20,25,12,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.GLIN
 set VO(59)=$C(20,65,12,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.GLOUT
 set VO(60)=$C(21,25,12,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.GLINP
 set VO(61)=$C(21,65,12,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.GLOUTP
 set VO(62)=$C(22,25,12,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.GLINT
 set VO(63)=$C(22,65,12,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.GLOUTT
 set VO(64)=$C(23,65,12,2,0,0,0,0,0,0)_"00N"_fCTBLEFT.WASHGL
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCTBLEFTTYPE fCTBLEFT)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=31,VPT=2,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="CTBLEFTTYPE"
 set OLNTB=23065
 
 set VFSN("CTBLEFTTYPE")="zfCTBLEFT"
 //
 // 
	
	
 set %TAB(1)=$C(3,24,12)_"21T12401|1|[CTBLEFTTYPE]KEY"
 set %TAB(2)=$C(4,24,50)_"01T12401|1|[CTBLEFTTYPE]DESC"
 set %TAB(3)=$C(5,24,12)_"01T12429|1|[CTBLEFTTYPE]STBLEFT|[STBLEFTTYPE]"
 set %TAB(4)=$C(5,64,1)_"00N12433|1|[CTBLEFTTYPE]PREAUTH|[STBLEFTPRE]||do VP1^V00S035(.fCTBLEFT)"
 set %TAB(5)=$C(6,24,3)_"01N12402|1|[CTBLEFTTYPE]TRIES"
 set %TAB(6)=$C(6,64,1)_"00L12407|1|[CTBLEFTTYPE]ODP"
 set %TAB(7)=$C(7,24,1)_"00L12403|1|[CTBLEFTTYPE]FINCL"
 set %TAB(8)=$C(7,64,1)_"00L12404|1|[CTBLEFTTYPE]REV|||do VP2^V00S035(.fCTBLEFT)"
 set %TAB(9)=$C(8,24,1)_"00N12427|1|[CTBLEFTTYPE]FINTRAS|[STBLEFTFTROP]||do VP3^V00S035(.fCTBLEFT)|do VP4^V00S035(.fCTBLEFT)"
 set %TAB(10)=$C(8,64,2)_"00N12428|1|[CTBLEFTTYPE]FTOD||||do VP5^V00S035(.fCTBLEFT)"
 set %TAB(11)=$C(9,24,1)_"00L12426|1|[CTBLEFTTYPE]PRTPMT"
 set %TAB(12)=$C(9,64,12)_"01T12423|1|[CTBLEFTTYPE]ETC|[TRN]"
 set %TAB(13)=$C(10,24,12)_"00T12419|1|[CTBLEFTTYPE]SCRBR|[DBTBL2]"
 set %TAB(14)=$C(10,64,12)_"00T12413|1|[CTBLEFTTYPE]PAYMETDFT|[STBLPAYMET]"
 set %TAB(15)=$C(11,24,12)_"00T12420|1|[CTBLEFTTYPE]SCRHQ|[DBTBL2]"
 set %TAB(16)=$C(11,64,12)_"00T12414|1|[CTBLEFTTYPE]FEEMETDFT|[EFTFEE]"
 set %TAB(17)=$C(12,24,12)_"00T12415|1|[CTBLEFTTYPE]CCODE|[UTBLCC]"
 set %TAB(18)=$C(12,64,6)_"00N12416|1|[CTBLEFTTYPE]CCDFT|[UTBLCCNTR]"
 set %TAB(19)=$C(14,24,2)_"00N12418|1|[CTBLEFTTYPE]HLDCODE|[UTBLPHC]"
 set %TAB(20)=$C(14,64,1)_"00L12425|1|[CTBLEFTTYPE]RETREJ"
 set %TAB(21)=$C(15,24,8)_"00N12417|1|[CTBLEFTTYPE]PERCENT|||||||3"
 set %TAB(22)=$C(15,64,1)_"00L12421|1|[CTBLEFTTYPE]HLDPST"
 set %TAB(23)=$C(16,24,1)_"00L12430|1|[CTBLEFTTYPE]HLDAUTO"
 set %TAB(24)=$C(16,63,2)_"00N12431|1|[CTBLEFTTYPE]HLDMAX"
 set %TAB(25)=$C(19,24,12)_"01N12405|1|[CTBLEFTTYPE]GLIN|[GLAD]TYPE"
 set %TAB(26)=$C(19,64,12)_"01N12406|1|[CTBLEFTTYPE]GLOUT|[GLAD]TYPE"
 set %TAB(27)=$C(20,24,12)_"00N12408|1|[CTBLEFTTYPE]GLINP|[GLAD]TYPE"
 set %TAB(28)=$C(20,64,12)_"00N12410|1|[CTBLEFTTYPE]GLOUTP|[GLAD]TYPE"
 set %TAB(29)=$C(21,24,12)_"00N12409|1|[CTBLEFTTYPE]GLINT|[GLAD]TYPE"
 set %TAB(30)=$C(21,64,12)_"00N12411|1|[CTBLEFTTYPE]GLOUTT|[GLAD]TYPE"
 set %TAB(31)=$C(22,64,12)_"00N12424|1|[CTBLEFTTYPE]WASHGL|||do VP6^V00S035(.fCTBLEFT)"
 do VTBL(.fCTBLEFT)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCTBLEFTTYPE fCTBLEFT) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordCTBLEFTTYPE fCTBLEFT) //
 // Preauthorization option 2 can only be used with EFT System Type PO or SPO
 if X=2,fCTBLEFT.stbleft'="PO",fCTBLEFT.stbleft'="SPO" do Runtime.setErrMSG("CTBLEFTTYPE","5155") quit:ER
 quit
VP2(RecordCTBLEFTTYPE fCTBLEFT) //
 if fCTBLEFT.stbleft'="SCO",(fCTBLEFT.stbleft'="CO") do GOTO^DBSMACRO("fCTBLEFT.prtpmt") quit
 quit
VP3(RecordCTBLEFTTYPE fCTBLEFT) //
 if X'=1 do {
 	do DEFAULT^DBSMACRO("[CTBLEFTTYPE]FTOD","","1","0","0")
 	do GOTO^DBSMACRO("[CTBLEFTTYPE]PRTPMT") quit 
 	}
 if X=1,(fCTBLEFT.stbleft="SCO"!(fCTBLEFT.stbleft="SPO")) do Runtime.setErrMSG("CTBLEFTTYPE",1609,X) quit:ER
 quit
VP4(RecordCTBLEFTTYPE fCTBLEFT) //
 if fCTBLEFT.stbleft="SCO"!(fCTBLEFT.stbleft="CO") do CHANGE^DBSMACRO("REQ","") quit 
 quit
VP5(RecordCTBLEFTTYPE fCTBLEFT) //
 do CHANGE^DBSMACRO("REQ","")
 quit

VP6(RecordCTBLEFTTYPE fCTBLEFT) //
 if X="" quit
 if Db.isDefined("ACN","CID=:X") quit
 if Db.isDefined("GLAD","ACN=:X") quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCTBLEFTTYPE fCTBLEFT
 do VPR(.fCTBLEFT)
 do VDA1(.fCTBLEFT)
 do ^DBSPNT()
 quit

VW(RecordCTBLEFTTYPE fCTBLEFT)
 do VDA1(.fCTBLEFT)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCTBLEFTTYPE fCTBLEFT)
 do VDA1(.fCTBLEFT)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCTBLEFTTYPE fCTBLEFT
 do VDA1(.fCTBLEFT)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCTBLEFTTYPE fCTBLEFT
 if sn="CTBLEFTTYPE" do vSET1(.fCTBLEFT,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCTBLEFTTYPE fCTBLEFT,di,X)
 do fCTBLEFT.setAuditFlag(1)
 set fCTBLEFT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCTBLEFTTYPE fCTBLEFT
 if fid="CTBLEFTTYPE" quit $$vREAD1(.fCTBLEFT,di)
 quit ""
vREAD1(RecordCTBLEFTTYPE fCTBLEFT,di)
 quit fCTBLEFT.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
