R01S100	// SCA029 - Annual Retirement Activity Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date FROM
	type Date TO

	set RID="SCA029"
	set RN="Annual Retirement Activity Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("FROM")="|10|||||||D|From Date|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("TO")="|10|||||||D|To Date|||||"

	set %READ="IO/REQ,FROM#1,TO#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date FROM,TO
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ADDR(),CD,CODE,CONAM,DESC,EARN,MNEMONIC,PEN,RID,RN,RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD,SGN,SGN2,TAMT,TVAL,TYPE,VL,VLOF,VRF(),VSTATS(),WHLD,ZCODE,ZTSO(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA029",RN="Annual Retirement Activity Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA029","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[IRAANAC2]RSEQ#28#12,[IRAANAC2]CODE#43#4,[IRAANAC2]AMT#83#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Annual Retirement Activity Report"
		set VBNRINFO("PGM")="R01S100"
		set VBNRINFO("RID")="SCA029"
		set VBNRINFO("TABLES")="IRAANAC2,IRAANAC1,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,IRAANAC2]IRAC"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,IRAANAC2]ACN"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,IRAANAC2]RSEQ"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,IRAANAC2]TYPE"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,IRAANAC2]CODE"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("IRAANAC2.TYPE,IRAANAC2.CODE,IRAANAC2.IRAC,IRAANAC2.ACN,IRAANAC2.RSEQ,CIF.NAM,CIF.TAXID,CIF.DOB,IRAANAC1.BEGBAL,IRAANAC2.AMT,IRAANAC1.EARN,IRAANAC1.PEN,IRAANAC1.WHLD,IRAANAC1.ENDBAL","IRAANAC2,IRAANAC1,CIF","","IRAANAC2.IRAC,IRAANAC2.ACN,IRAANAC2.RSEQ,IRAANAC2.TYPE,IRAANAC2.CODE","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc3,vovc4,vovc5,vovc1,vovc2
	set vovc3="",vovc4="",vovc5="",vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc1,vc1,vovc2,vc2
	set vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14
	set vc1=V.piece($C(9),1)			// IRAANAC2.TYPE
	set vc2=V.piece($C(9),2)			// IRAANAC2.CODE
	set vc3=V.piece($C(9),3)			// IRAANAC2.IRAC
	set vc4=V.piece($C(9),4)			// IRAANAC2.ACN
	set vc5=V.piece($C(9),5)			// IRAANAC2.RSEQ
	set vc6=V.piece($C(9),6)			// CIF.NAM
	set vc7=V.piece($C(9),7)			// CIF.TAXID
	set vc8=V.piece($C(9),8)			// CIF.DOB
	set vc9=V.piece($C(9),9)			// IRAANAC1.BEGBAL
	set vc10=V.piece($C(9),10)			// IRAANAC2.AMT
	set vc11=V.piece($C(9),11)			// IRAANAC1.EARN
	set vc12=V.piece($C(9),12)			// IRAANAC1.PEN
	set vc13=V.piece($C(9),13)			// IRAANAC1.WHLD
	set vc14=V.piece($C(9),14)			// IRAANAC1.ENDBAL
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2
 type public String CODE,DESC,TAMT,TYPE,ZCODE,ZTSO()
 type public Number CD,SGN,SGN2

 set (CD,DESC,SGN)=""
 set TYPE=vc1
 set TAMT=0,SGN2=""
 set CODE=vc2

 if TYPE="C" do {

 	set SGN="+",CD="CONT-"

 	if CODE="ROLL" set DESC="ROLLOVR" quit

 	kill ZTSO

 	set ZTSO="" do OUT^UTSO(.ZTSO,CODE)
 	set ZCODE=ZTSO("IRAC").get()

 	if ZCODE="" quit

 	type RecordUTBLIRACON iracon=Db.getRecord("UTBLIRACON","KEY=:ZCODE",1)
	
 	if iracon.getMode() set DESC=" "_iracon.desc
	else  set DESC=" "_ZCODE

	}
 else  if TYPE="D" do {

 	set SGN="-",CD="DIST-"

 	if CODE="ROLL" set DESC="ROLLOVR" quit

 	kill ZTSO

 	set ZTSO="" do OUT^UTSO(.ZTSO,CODE)
 	set ZCODE=ZTSO("IRAD").get()

 	if ZCODE="" quit

 	type RecordUTBLIRADIS iradis=Db.getRecord("UTBLIRADIS","KEY=:ZCODE",1)
	
 	if iradis.getMode() set DESC=" "_iradis.desc
	else  set DESC=" "_ZCODE

	}
	quit

VPREAQ	// Pre-processor (after query)

 type public String RM
 type public Number ER
 type public Date FROM,TO

 do ^IRAANAC(FROM,TO)

 if ER set RM=$$^MSG(1162) quit
	quit

VRPOST	// Report post-processor

 
 // I18N=OFF

 type public String ADDR()
 set (ADDR(1),ADDR(2),ADDR(3),ADDR(4))=""

 do Db.fastDelete("IRAANAC1")
 do Db.fastDelete("IRAANAC2")
 do Db.fastDelete("IRAANAC3")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG1 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc3,vovc3,vc4,vovc4,vc5,vovc5,vc1,vovc1,vc2,vovc2
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(+vovc3'=+vc3) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(+vovc4'=+vc4) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc5'=+vc5) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(vovc1'=vc1) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VHDG1	// Group Header
	type public String %MSKD,%TIM,ADDR(),CD,CODE,CONAM,DESC,EARN,ER,FROM,IOSL,MNEMONIC,PEN,RID,RM,RN,RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD,SGN,SGN2,TAMT,TO,TVAL,TYPE,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,WHLD,ZCODE,ZTSO(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate

	quit:vh(1)  set vh(1)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "_$J(vc3,3)
	do VP1 quit:VFMQ!verror.get()  set V=$E(MNEMONIC,1,10)
	set VL=VL_$J("",5-VL.length())_V
	do VOM
	quit

VDTL2	// Detail
	type public String %TIM,ADDR(),CD,CODE,DESC,EARN,ER,FROM,IOSL,MNEMONIC,PEN,RM,RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD,SGN,SGN2,TAMT,TO,TVAL,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),WHLD,ZCODE,ZTSO(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$J(V,12) do VP2 quit:VFMQ!verror.get()  set VL="     "_V
	set VL=VL_$J("",19-VL.length())_$E(vc6,1,40)
	set VL=VL_$J("",80-VL.length())_$E(vc7,1,11)
	set VL=VL_$J("",95-VL.length())_$J($$DAT^%ZM(vc8),10)
	do VOM
	set VL="                   "_$E(ADDR(1),1,20)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                   "_$E(ADDR(2),1,20)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                   "_$E(ADDR(3),1,20)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                   "_$E(ADDR(4),1,30)
	set VL=VL_$J("",53-VL.length())_"Account Beginning Balance    "
	set V=vc9,VO=V set V=$J(V,11,2) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",83-VL.length())_V		// [SYSDEV,IRAANAC1]BEGBAL
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL3	// Detail
	type public String %TIM,ADDR(),CD,CODE,DESC,EARN,ER,FROM,IOSL,MNEMONIC,PEN,RM,RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD,SGN,SGN2,TAMT,TO,TVAL,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),WHLD,ZCODE,ZTSO(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                             "_"Beginning Balance"
	do VP4 quit:VFMQ!verror.get()  set V=$J(RPABGBAL,12,2)
	set VL=VL_$J("",82-VL.length())_V
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,ADDR(),CD,CODE,DESC,EARN,ER,FROM,I,IOSL,MNEMONIC,PEN,RM,RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD,SGN,SGN2,TAMT,TO,TVAL,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),WHLD,ZCODE,ZTSO(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate

	if 'VT(3) quit
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                     "_"Account Withholding"
	set VL=VL_$J("",80-VL.length())_"-"
	set V=$J(WHLD,12,2) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",82-VL.length())_V
	do VOM
	set VL="                                                     "_"Account Penaltys"
	set VL=VL_$J("",80-VL.length())_"-"
	set V=$J(PEN,12,2) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",82-VL.length())_V
	do VOM
	set VL="                                                     "_"Account Earnings"
	set VL=VL_$J("",80-VL.length())_"+"
	set VL=VL_$J("",82-VL.length())_$J(EARN,12,2)
	do VOM
	set VL="                                                     "_"Account Ending Balance"
	set VL=VL_$J("",82-VL.length())_$J(TVAL,12,2)
	do VP7 quit:VFMQ!verror.get()  set V=$E(SGN2,1,1)
	set VL=VL_$J("",96-VL.length())_V
	do VOM
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %TIM,ADDR(),CD,CODE,DESC,EARN,ER,FROM,I,IOSL,MNEMONIC,PEN,RM,RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD,SGN,SGN2,TAMT,TO,TVAL,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),WHLD,ZCODE,ZTSO(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate

	if 'VT(4) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="                                                             "_"Withholding        -"
	set V=$J(RSEQWHLD,12,2) do VP8 quit:VFMQ!verror.get()
	set VL=VL_$J("",82-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                             "_"Penalty            -"
	set V=$J(RSEQPEN,12,2) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",82-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                             "_"Earnings           +"
	set VL=VL_$J("",82-VL.length())_$J(RSEQEARN,12,2)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                             "_"Ending Balance"
	set VL=VL_$J("",82-VL.length())_$J(RSEQEB,12,2)
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,ADDR(),CD,CODE,DESC,EARN,ER,FROM,IOSL,MNEMONIC,PEN,RM,RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD,SGN,SGN2,TAMT,TO,TVAL,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),WHLD,ZCODE,ZTSO(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                           "_$J(vc5,12)
	set VL=VL_$J("",40-VL.length())_$J(vc2,6)
	set VL=VL_$J("",48-VL.length())_$E(DESC,1,30)
	set VL=VL_$J("",80-VL.length())_$E(SGN,1,1)
	set V=vc10,VO=V set V=$J(V,12,2) do VP10 quit:VFMQ!verror.get()
	set VL=VL_$J("",82-VL.length())_V		// [SYSDEV,IRAANAC2]AMT
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ADDR(),CD,CODE,CONAM,DESC,EARN,FROM,MNEMONIC,PEN,RID,RM,RN,RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD,SGN,SGN2,TAMT,TO,TVAL,TYPE,VL,WHLD,ZCODE,ZTSO(),vc1,vc10,vc11,vc12,vc13,vc14,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",99-VL.length())_"Run Date:"
	set VL=VL_$J("",109-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",121-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="Annual Activity Report [SCA029]                                                                      System:"
	set VL=VL_$J("",109-VL.length())_$E(TO,1,10)
	set VL=VL_$J("",121-VL.length())_"Page:"
	set VL=VL_$J("",127-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Type"
	do VOM
	set VL="         "_"Customer  Name"
	do VOM
	set VL="                   "_"Address                                                          TIN/SIN Date of Birth"
	do VOM
	set VL="                   "_"Plan Sequence   Code   Description"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: MNEMONIC

	type public String vc3
 type public String MNEMONIC

 type RecordSTBLIRA stblira=Db.getRecord("STBLIRA","IRA=:vc3",1)
 set MNEMONIC=stblira.mnemonic
	quit

VP2	// Column post-processor - [SYSDEV,IRAANAC2]ACN

	type public String vc5
 type public Number ACN
 type public String ADDR()

 do ^UTLADDR(,"ADDR",4,"","IRATYPE",ACN,vc5)
	quit

VP3	// Column post-processor - [SYSDEV,IRAANAC1]BEGBAL

 type public Number BEGBAL
 type public String VO
 
 set BEGBAL=+VO
	quit

VP4	// Column pre-processor - Variable: RPABGBAL

	type public String vc3,vc4,vc5
  type public Number RPABGBAL,RSEQEARN,RSEQEB,RSEQPEN,RSEQWHLD
  type Number ZIRAC,ZACN,ZRSEQ
  
  set ZIRAC=vc3
  set ZACN=vc4
  set ZRSEQ=vc5

  type RecordIRAANAC3 iraanac3=Db.getRecord("IRAANAC3","IRAC=:ZIRAC,ACN=:ZACN,RSEQ=:ZRSEQ")

  set RPABGBAL=iraanac3.begbal
  set RSEQWHLD=iraanac3.whld
  set RSEQPEN=iraanac3.pen
  set RSEQEARN=iraanac3.earn
  set RSEQEB=iraanac3.endbal
	quit

VP5	// Column post-processor - Variable: WHLD

 type public String V,VL
 type public Number WHLD

 if WHLD=0 set (V,VL)=""
	quit

VP6	// Column post-processor - Variable: PEN

 type public String V,VL
 type public Number PEN

 if PEN=0 set (V,VL)=""

	quit

VP7	// Column pre-processor - Variable: SGN2

 type public Number BEGBAL,EARN,PEN,TAMT,TVAL,WHLD
 type public String SGN2

 if TVAL'=(BEGBAL+TAMT+EARN-PEN-WHLD) set SGN2="*"
	quit

VP8	// Column post-processor - Variable: RSEQWHLD

 type public Number RSEQWHLD
 type public Number V,VL

 if RSEQWHLD=0 set (V,VL)=""
	quit

VP9	// Column post-processor - Variable: RSEQPEN

 type public String V,VL
 type public Number RSEQPEN

 if RSEQPEN=0 set (V,VL)=""
	quit

VP10	// Column post-processor - [SYSDEV,IRAANAC2]AMT

	type public String vc10,vc11,vc12,vc13,vc14
 type public String TYPE
 type public Number EARN,PEN,RSEQWHLD,TAMT,TVAL,WHLD

 if TYPE="D" set TAMT=TAMT-vc10
 set TAMT=TAMT+vc10

 set EARN=vc11
 set PEN=vc12
 set WHLD=vc13
 set TVAL=vc14

	quit
