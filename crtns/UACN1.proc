UACN1
	// ACN/CID Look-up from Data-Qwik Screen
	/*
	       ORIG: Allan Mattson
	       DESC:
		     Determine Account Number or CIF Number Based Upon User Input
	
		     This utility serves as a front end for ^UACN (account number
		     lookup utility) and ^UCIF (CIF number lookup utility) for
		     lookup/edit check of account or CIF numbers on Data Qwik
		     screens.  The appropriate call to CID or CUS line tags would
		     be made in the post processor to the CID (ACN) or ACN
		     (CIF) prompts of a Data Qwik screen.
	
		     Depending upon the data entered, the user may be prompted
		     for an account type, and group.
	
		     Sample Calls: @LNSL03 - Convert Student Loan To Permanent
					     (^LNICFE)
	
	
	   Variables:  X - Pattern to match, supplied by Data Qwik
	
			   X may consist of several patterns:
	
			     nnnn...      The account number (if called at
					  CID line tag) or CUS number (if
					  called at CIF line tag).
	
			     a-nnnnnnnn   Will provide an account number
					  stored in ^XACN, the pre-conversion
					  account number cross reference file.
	
			     nn-nnnnnnn   Will provide a list of accounts held
					  for the customer with a matching
					  federal tax ID number.
	
			     nnn-nn-nnnn  Will provide a list of accounts held
					  for the customer with a matching
					  social security number.
	
			     aaaa...      An alpha string which will be
					  matched against other names and
					  provide a list of accounts.
	
		       ZCLS - Narrow the search to this class of account
			      (optional at CID tag)
		       ZGRP - Further narrow the search to this account group
			      (optional at CID tag)
	
	   Parameters: None
	
	     OUTPUT:
	
	   Variables:  CID - Valid Account Number (if called at CID line tag)
		       ACN - Valid CIF Number (if called at CUS line tag)
	
	   Parameters: None
	
	  ---- Revision History ------------------------------------------------
	  
	   01/28/02 - MBUIM - 43583 
	       	      Converted to PSL.

	*/

Public CUS	// Lookup Customer Number

	quit:X=""  
	if X=+X do CUS1 quit 
	if $G(%IPMODE)["NOINT" do { quit
		set ER=1
		set ET="INVLDCIF" 
		do DSPBP^UTLERR
		} 
	
	set ACN=$G(ACN) 
	set XACN=ACN 
	set %EXT=1 
	do ^UCIF 
	quit:'%NET   
	set ER=''ER 
	if ER do { quit
		set ACN=XACN 
		do DSP
		} 
	
	set TACN=ACN 
	set ACN=XACN 

	// Re-paint screen
	do DSP
	set X=TACN 
	set RM($O(RM(""),-1)+1)=X_"|"_NI

	quit 
	
CUS1	// Lookup Customer Number Continued   

	if '%NET quit			 
	if Db.isDefined("CIF","X") do {	quit
		set XACN=$G(ACN) 
		set ACN=X 
		do PROT^UCIF 
		set ACN=XACN 
		set ER=''ER 
		quit:ER  
		set TACN=ACN  
		}
	// Invalid CIF ~p1
	do Runtime.setErrMSG("CIF",7575) quit:ER	
	
	quit 
	
Public CID	// Lookup Account Number	

	quit:X=""  
	if X=+X do CID1 quit 
	if $G(%IPMODE)["NOINT" do { quit
		set ER=1 
		set ET="INVLDACN" 
		do DSPBP^UTLERR 
		} 
	
	set CID=$G(CID) 
	set XCID=CID 
	set %EXT=1 
	do ^UACN 
	quit:'%NET 
	set ER=''ER 
	if ER do { quit
		set CID=XCID 
		do DSP
		} 
	
	set TCID=CID 
	set CID=XCID 

	// Re-paint screen
	do DSP
	set X=TCID 
	set RM($O(RM(""),-1)+1)=X_"|"_NI 
	
	quit 
	
CID1	// Lookup Account Number continued.

	if Db.isDefined("ACN","X") do { quit
		do EDCHK 
		quit:ER  
		set XCID=$G(CID) 
		set CID=X 
		do PROT^UACN 
		set CID=XCID 
		set ER=''ER 
		quit:ER  
		set TCID=CID  
		}
	// Invalid account ~p1
	do Runtime.setErrMSG("ACN",1259) quit:ER	   

	quit 
	
Public EDCHK	// Validate Account

	set ER=0
	type RecordACN acn=Db.getRecord("ACN","X")

	if $L($G(ZCLS)) if (","_ZCLS_",")'[acn.cls do { quit
		set ET="INVLDCLS" 
		do DSPBP^UTLERR 
		set ER=1
		} 
	if $L($G(ZGRP)) if (","_ZGRP_",")'[acn.grp do { quit
		set ET="INVLDGRP" 
		do DSPBP^UTLERR 
		set ER=1
		} 
	
	quit 
	
DSP	// Paint

	do @("VREPRNT^"_PGM)
	set DX=$E(%TAB(NI),3,4)
 	set DY=$E(%TAB(NI),1,2)
 	write *27,*91,DY+1,*59,DX+1,*72 
	S $X=DX
	S $Y=DY 
	
	quit 
	

vSIG()	quit "59886^43621^Sanchez SCM Administrator^3716"	// Signature - LTD^TIME^USER^SIZE
