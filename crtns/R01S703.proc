R01S703	// YER436 - NR4 Earnings Detail Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:55 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="YER436"
	set RN="NR4 Earnings Detail Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[NR4EINF]ACN|[NR4EINF]ACN:DISTINCT:NOVAL||D EXT^DBSQRY||T|Customer Number|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CCODE,CONAM,NONREP,NR4REC,NRMESG,PRIACN,RID,RN,TYPE,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="YER436",RN="NR4 Earnings Detail Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","YER436","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=99999999			// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[NR4EINF]ACN#2#12,[NR4EINF]CID#52#12,[NR4EINF]INCCD#67#2,[NR4EINF]CRCD#71#4,[NR4EINF]GI#77#12,[NR4EINF]GIC#91#12,[NR4EINF]CNTW#106#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[NR4EINF]ACN "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("NR4EINF,DEP") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"NR4EINF.ACN,NR4EINF.BOO,NR4EINF.CID,NR4EINF.GIC,NR"
	set VSELECT=VSELECT_"4EINF.CNTW,NR4EINF.INCCD,NR4EINF.CRCD,NR4EINF.GI,N"
	set VSELECT=VSELECT_"R4EINF.NRI,NR4EINF.NEGAMT,DEP.ACNRELC"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"NR4EINF,DEP",VWHERE,"NR4EINF.ACN,NR4EINF.BOO,NR4EINF.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece($C(9),1)			// NR4EINF.ACN
	set vc2=V.piece($C(9),2)			// NR4EINF.BOO
	set vc3=V.piece($C(9),3)			// NR4EINF.CID
	set vc4=V.piece($C(9),4)			// NR4EINF.GIC
	set vc5=V.piece($C(9),5)			// NR4EINF.CNTW
	set vc6=V.piece($C(9),6)			// NR4EINF.INCCD
	set vc7=V.piece($C(9),7)			// NR4EINF.CRCD
	set vc8=V.piece($C(9),8)			// NR4EINF.GI
	set vc9=V.piece($C(9),9)			// NR4EINF.NRI
	set vc10=V.piece($C(9),10)			// NR4EINF.NEGAMT
	set vc11=V.piece($C(9),11)			// DEP.ACNRELC
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc5,vc4
	type Public String VSTATS

	set VT(3)=VT(3)+1
	set VT(3,1,1)=VT(3,1,1)+vc5			// @TOT([NR4EINF]CNTW)
	set VT(3,2,1)=VT(3,2,1)+vc4			// @TOT([NR4EINF]GIC)
	quit

VDTL3	// Detail
	type public String %TIM,CCODE,IOSL,NONREP,NR4REC,NRMESG,PRIACN,TYPE,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$E(NONREP,1,1) set VL=V
	set VL=VL_$J("",2-VL.length())_$J(vc1,11)
	do VP2 quit:VFMQ!verror.get()  set V=$E(PRIACN,1,20) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",14-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$E(TYPE,1,3) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",35-VL.length())_V
	do VP6 quit:VFMQ!verror.get()  set V=$J(NR4REC,1)
	set VL=VL_$J("",42-VL.length())_V
	do VP7 quit:VFMQ!verror.get()  set V=$E(CCODE,1,3)
	set VL=VL_$J("",47-VL.length())_V
	set VL=VL_$J("",51-VL.length())_$J(vc3,12)
	set VL=VL_$J("",64-VL.length())_$J(vc6,4)
	set VL=VL_$J("",70-VL.length())_$E(vc7,1,4)
	set VL=VL_$J("",75-VL.length())_$J($FN(vc8,",",2),13)
	set VL=VL_$J("",89-VL.length())_$J($FN(vc4,",",2),13)
	set VL=VL_$J("",103-VL.length())_$J($FN(vc5,",",2),14)
	do VOM
	set VL="              "_$E(NRMESG,1,20)
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,CCODE,I,IOSL,NONREP,NR4REC,NRMESG,PRIACN,TYPE,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set V=VT(3,2,1)					// @TOT([NR4EINF]GIC,)
	set VL="                                                                                          "_$J($FN(V,",",2),12)
	set V=VT(3,1,1)					// @TOT([NR4EINF]CNTW,)
	set VL=VL_$J("",105-VL.length())_$J($FN(V,",",2),12)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CCODE,CONAM,NONREP,NR4REC,NRMESG,PRIACN,RID,RN,TYPE,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="Branch "
	set VL=VL_$J("",8-VL.length())_$J(vc2,5)
	do VOM
	set VL="" do VOM
	set VL=" "_"Custome Nbr  Name                Type  Rec  Cntry      Account  Inc  Curr  Gross Income   Canadian GI        Tax W/H"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,CCODE,NONREP,NR4REC,NRMESG,PRIACN,TYPE,VPN,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                                                                      "_"REPORT TOTALS:"
	set V=0						// @TOT([NR4EINF]GIC,0)
	for I=0:1:3 set V=V+VT(I,2,1)
	set VL=VL_$J("",89-VL.length())_$J($FN(V,",",2),13)
	set V=0						// @TOT([NR4EINF]CNTW,0)
	for I=0:1:3 set V=V+VT(I,1,1)
	set VL=VL_$J("",104-VL.length())_$J($FN(V,",",2),13)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	use IO if 'VLC,'vcrt set $Y=1
	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NONREP

	type public String vc9
 // If this account has non-reportable information (i.e. a foreign currency
 // code but no exchange rate.

 type public String NONREP

 if vc9 set NONREP="*"
 else  set NONREP=" "
	quit

VP2	// Column pre-processor - Variable: PRIACN

	type public String vc10,vc9
 type public String NRMESG,PRIACN 
 type public Number ACN

 type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
 set PRIACN=cif.xname

 set NRMESG=""
 
 // If this account contains a negative Gross Income Value.
 
 if vc10 do { quit
	set PRIACN="Tax Data Not Rpted -"
    	set NRMESG="Neg. Reportable Amt."
	}

 /* If this account contains non-reportable interest, then set the PRIACN
  variable to an error message.*/
 
 if vc9 do {
 	set PRIACN="Tax Data Not Rpted -"
    	set NRMESG="No Exchg Rate Found."
	}
	quit

VP3	// Column post-processor - Variable: PRIACN

 type public String PRIACN
 
 set PRIACN=""
	quit

VP4	// Column pre-processor - Variable: TYPE

 type public Number ACN,TYPE

 type RecordCIF cif =Db.getRecord("CIF","ACN=:ACN")

 set TYPE=cif.type
	quit

VP5	// Column post-processor - Variable: TYPE

 type public String TYPE

 set TYPE=""
	quit

VP6	// Column pre-processor - Variable: NR4REC

	type public String vc11
 type public Number NR4REC
 type String RELC

 set RELC=vc11
 
 type RecordRELCODE1 relcode1=Db.getRecord("RELCODE1","REL=:RELC")
 set NR4REC=relcode1.nr4rec
	quit

VP7	// Column pre-processor - Variable: CCODE

 type public String CCODE
 type public Number ACN

 type RecordCIF cif =Db.getRecord("CIF","ACN=:ACN")

 if cif.nrcntry="" set CCODE="OMC"
 else  do {
		type String cntry
		set cntry=cif.nrcntry
		type RecordSTBLCNTRY stbl1=Db.getRecord("STBLCNTRY","CNTRY=:cntry")
		set CCODE=stbl1.isoc
		}











	quit
