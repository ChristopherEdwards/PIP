R01S229	// SCA179 - Credit Bureau Totals Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CNT,CRCTRL,TBAL,TPST
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA179"
	set RN="Credit Bureau Totals Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CNT,CRCTRL,TBAL,TPST
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,A1TOT,A2TOT,A3TOT,CONAM,GT1,GT4,GT7,OD,RID,RN,RT,RTOT,SEG(),SEG1,SEG4,SEG7,STOT,T(),TBY,TSEG,TT(),VL,VLOF,VRF(),VSTATS(),ZTJD,vCOL,vHDG,vc1,vc2,vc3,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA179",RN="Credit Bureau Totals Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA179","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Credit Bureau Totals Report"
		set VBNRINFO("PGM")="R01S229"
		set VBNRINFO("RID")="SCA179"
		set VBNRINFO("TABLES")="LNCRBT"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNCRBT]STAT"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNCRBT]TYPE"

		set VBNRINFO("DOC",1)="		This report may not be run stand-alone.  It is the summary page"
		set VBNRINFO("DOC",2)="		for reports SCA176 and SCA665.  "
		set VBNRINFO("DOC",3)="		When modifying this report, change CUVAR(""CRTRW"") 7th piece and"
		set VBNRINFO("DOC",4)="		test for both reports. "
		set VBNRINFO("DOC",5)="	 "

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LNCRBT.STAT,LNCRBT.TYPE,LNCRBT.TOTAL","LNCRBT","","LNCRBT.STAT,LNCRBT.TYPE","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3
	set vc1=V.piece($C(9),1)			// LNCRBT.STAT
	set vc2=V.piece($C(9),2)			// LNCRBT.TYPE
	set vc3=V.piece($C(9),3)			// LNCRBT.TOTAL
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number CNT,RTOT,SEG(),T(),TT()
 type public String CONAM

 type Number I
 
 set RTOT=0
 for I=1,4,7 set TT(I)=0
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=CNT,CRCTRL,TBAL,TPST
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VSUM2	// Summary
	type public String A1TOT,A2TOT,A3TOT,CNT,CONAM,CRCTRL,GT1,GT4,GT7,I,IOSL,OD,RT,RTOT,SEG(),SEG1,SEG4,SEG7,STOT,T(),TBAL,TBY,TPST,TSEG,TT(),V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),ZTJD,vc1,vc2,vc3,verror,vh(),vovc1,vovc2

	if 'VT(2) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL="Status"
	set V=vc1,VO=V set V=$J(V,2) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",7-VL.length())_V
	set VL=VL_$J("",21-VL.length())_$J(T(1),5)
	set VL=VL_$J("",39-VL.length())_$J(T(4),5)
	set VL=VL_$J("",57-VL.length())_$J(T(7),5)
	set VL=VL_$J("",74-VL.length())_$J(STOT,5)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,A1TOT,A2TOT,A3TOT,CNT,CONAM,CRCTRL,GT1,GT4,GT7,OD,RID,RN,RT,RTOT,SEG(),SEG1,SEG4,SEG7,STOT,T(),TBAL,TBY,TPST,TSEG,TT(),VL,ZTJD,vc1,vc2,vc3,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",63-VL.length())_"Installment Plan"
	do VOM
	set VL="" do VOM
	set VL="                     "_"Activity Period:"
	do VP2 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(OD),8)
	set VL=VL_$J("",38-VL.length())_V
	set VL=VL_$J("",47-VL.length())_"-"
	do VP3 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(ZTJD),10)
	set VL=VL_$J("",49-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="             "_"Trans. Type 1     Trans. Type 4     Trans. Type 7            Total"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String A1TOT,A2TOT,A3TOT,CNT,CONAM,CRCTRL,GT1,GT4,GT7,OD,RT,RTOT,SEG(),SEG1,SEG4,SEG7,STOT,T(),TBAL,TBY,TPST,TSEG,TT(),ZTJD,vc1,vovc1,vovc2
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+25>IOSL do VHDG0 quit:VFMQ

	set VL="-------------------------------------------------------------------------------"
	do VOM
	set VL="Sub-Total Base"
	set VL=VL_$J("",21-VL.length())_$J(TT(1),5)
	set VL=VL_$J("",39-VL.length())_$J(TT(4),5)
	set VL=VL_$J("",57-VL.length())_$J(TT(7),5)
	set VL=VL_$J("",73-VL.length())_$J(RTOT,6)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="Segment A1"
	do VP4 quit:VFMQ!verror.get()  set V=$J(SEG(1,1),5)
	set VL=VL_$J("",21-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V=$J(SEG(1,4),5)
	set VL=VL_$J("",39-VL.length())_V
	do VP6 quit:VFMQ!verror.get()  set V=$J(SEG(1,7),5)
	set VL=VL_$J("",57-VL.length())_V
	do VP7 quit:VFMQ!verror.get()  set V=$J(A1TOT,5)
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Segment A2"
	do VP8 quit:VFMQ!verror.get()  set V=$J(SEG(2,1),5)
	set VL=VL_$J("",21-VL.length())_V
	do VP9 quit:VFMQ!verror.get()  set V=$J(SEG(2,4),5)
	set VL=VL_$J("",39-VL.length())_V
	do VP10 quit:VFMQ!verror.get()  set V=$J(SEG(2,7),5)
	set VL=VL_$J("",57-VL.length())_V
	do VP11 quit:VFMQ!verror.get()  set V=$J(A2TOT,5)
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Segment A3"
	do VP12 quit:VFMQ!verror.get()  set V=$J(SEG(3,1),5)
	set VL=VL_$J("",21-VL.length())_V
	do VP13 quit:VFMQ!verror.get()  set V=$J(SEG(3,4),5)
	set VL=VL_$J("",39-VL.length())_V
	do VP14 quit:VFMQ!verror.get()  set V=$J(SEG(3,7),5)
	set VL=VL_$J("",57-VL.length())_V
	do VP15 quit:VFMQ!verror.get()  set V=$J(A3TOT,5)
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="-------------------------------------------------------------------------------"
	do VOM
	set VL="Sub-Total Segments"
	do VP16 quit:VFMQ!verror.get()  set V=$J(SEG1,5)
	set VL=VL_$J("",21-VL.length())_V
	do VP17 quit:VFMQ!verror.get()  set V=$J(SEG4,5)
	set VL=VL_$J("",39-VL.length())_V
	do VP18 quit:VFMQ!verror.get()  set V=$J(SEG7,5)
	set VL=VL_$J("",57-VL.length())_V
	do VP19 quit:VFMQ!verror.get()  set V=$J(TSEG,5)
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="==============================================================================="
	do VOM
	set VL="Total All"
	do VP20 quit:VFMQ!verror.get()  set V=$J(GT1,5)
	set VL=VL_$J("",21-VL.length())_V
	do VP21 quit:VFMQ!verror.get()  set V=$J(GT4,5)
	set VL=VL_$J("",39-VL.length())_V
	do VP22 quit:VFMQ!verror.get()  set V=$J(GT7,5)
	set VL=VL_$J("",57-VL.length())_V
	do VP23 quit:VFMQ!verror.get()  set V=$J(RT,6)
	set VL=VL_$J("",73-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="Accum. Balance"
	set VL=VL_$J("",59-VL.length())_$J($FN(TBAL,",",2),20)
	do VOM
	set VL="" do VOM
	set VL="Accum. Amt. Past Due"
	set VL=VL_$J("",59-VL.length())_$J($FN(TPST,",",2),20)
	do VOM
	set VL="" do VOM
	set VL="Total Bypassed"
	do VP24 quit:VFMQ!verror.get()  set V=$J(TBY,5)
	set VL=VL_$J("",74-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="          "_"Company name ="
	set VL=VL_$J("",26-VL.length())_$E(CONAM,1,35)
	set VL=VL_$J("",64-VL.length())_"D"_$E(CRCTRL,1,4)
	do VOM
	set VL="                  "_"Plan =  Installment       CYC =  n/a"
	do VOM
	set VL="         "_"Total Records ="
	set VL=VL_$J("",26-VL.length())_$E((CNT*2),1,5)
	do VOM
	set VL="      "_"Reporting Period ="
	do VP25 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(OD),8)
	set VL=VL_$J("",26-VL.length())_V
	set VL=VL_$J("",35-VL.length())_"-"
	do VP26 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(ZTJD),10)
	set VL=VL_$J("",37-VL.length())_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,LNCRBT]STAT

	type public String vc2,vc3
 type public Number RTOT,STOT,T(),TT(),TYPE
 
 set TYPE=vc2
 set T(TYPE)=vc3
 set TT(TYPE)=TT(TYPE)+T(TYPE)
 set RTOT=RTOT+T(TYPE),STOT=STOT+T(TYPE)
	quit

VP2	// Column pre-processor - Variable: OD

	type public Date BJD,OD
 
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set OD=cuvar.crlrd
	if BJD.get() set OD=BJD

	quit

	

VP3	// Column pre-processor - Variable: ZTJD

 type public Date EJD,ZTJD
 
 if EJD.get() set ZTJD=EJD

	quit

VP4	// Column pre-processor - Variable: SEG(1

 type public Number SEG(,)
 
 if 'SEG(1,1).exists() set SEG(1,1)=0
	quit

VP5	// Column pre-processor - Variable: SEG(1

 type public Number SEG(,)
 
 if 'SEG(1,4).exists() set SEG(1,4)=0
	quit

VP6	// Column pre-processor - Variable: SEG(1

 type public Number SEG(,)
 
 if 'SEG(1,7).exists() set SEG(1,7)=0
	quit

VP7	// Column pre-processor - Variable: A1TOT

 type public Number A1TOT,SEG(,)
 
 set A1TOT=SEG(1,1)+SEG(1,4)+SEG(1,7)
	quit

VP8	// Column pre-processor - Variable: SEG(2

 type public Number SEG(,)
 
 if 'SEG(2,1).exists() set SEG(2,1)=0
	quit

VP9	// Column pre-processor - Variable: SEG(2

 type public Number SEG(,)
 
 if 'SEG(2,4).exists() set SEG(2,4)=0
	quit

VP10	// Column pre-processor - Variable: SEG(2

 type public Number SEG(,)
 
 if 'SEG(2,7).exists() set SEG(2,7)=0
	quit

VP11	// Column pre-processor - Variable: A2TOT

 type public Number A2TOT,SEG(,)
 
 set A2TOT=SEG(2,1)+SEG(2,4)+SEG(2,7)
	quit

VP12	// Column pre-processor - Variable: SEG(3

 type public Number SEG(,)
 
 if 'SEG(3,1).exists() set SEG(3,1)=0
	quit

VP13	// Column pre-processor - Variable: SEG(3

 type public Number SEG(,)
 
 if 'SEG(3,4).exists() set SEG(3,4)=0
	quit

VP14	// Column pre-processor - Variable: SEG(3

 type public Number SEG(,)
 
 if 'SEG(3,7).exists() set SEG(3,7)=0
	quit

VP15	// Column pre-processor - Variable: A3TOT

 type public Number A3TOT,SEG(,)
 
 set A3TOT=SEG(3,1)+SEG(3,4)+SEG(3,7)
	quit

VP16	// Column pre-processor - Variable: SEG1

 type public Number SEG(,),SEG1
 
 set SEG1=SEG(1,1)+SEG(2,1)+SEG(3,1)
	quit

VP17	// Column pre-processor - Variable: SEG4

 type public Number SEG(,),SEG4
 
 set SEG4=SEG(1,4)+SEG(2,4)+SEG(3,4)
	quit

VP18	// Column pre-processor - Variable: SEG7

 type public Number SEG(,),SEG7
 
 set SEG7=SEG(1,7)+SEG(2,7)+SEG(3,7)
	quit

VP19	// Column pre-processor - Variable: TSEG

 type public Number SEG1,SEG4,SEG7,TSEG
 
 set TSEG=SEG1+SEG4+SEG7
	quit

VP20	// Column pre-processor - Variable: GT1

 type public Number GT1,SEG1,TT()
 
 set GT1=SEG1+TT(1)
	quit

VP21	// Column pre-processor - Variable: GT4

 type public Number GT4,SEG4,TT()
 
 set GT4=SEG4+TT(4)
	quit

VP22	// Column pre-processor - Variable: GT7

 type public Number GT7,SEG7,TT()
 
 set GT7=SEG7+TT(7)
	quit

VP23	// Column pre-processor - Variable: RT

 type public Number RT,RTOT,TSEG
 
 set RT=RTOT+TSEG
	quit

VP24	// Column pre-processor - Variable: TBY

 type public Number CNT,TBY,TREC
 
 set TBY=TREC-CNT
	quit

VP25	// Column pre-processor - Variable: OD

 type public Date BJD,OD
 
 if BJD.get() set OD=BJD
	quit

VP26	// Column pre-processor - Variable: ZTJD

 type public Date EJD,ZTJD
 
 if EJD.get() set ZTJD=EJD
	quit
