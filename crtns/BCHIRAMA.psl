BCHIRAMA //Batch BCHLETIRAMAD - MAD Withdrawal Requirment Notice
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:08 - joynerd
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHLETIRAMAD Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHLETIRAMAD")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHLETIRAMAD") quit
 do JOBMGR^BCHUTL(%FN,"BCHLETIRAMAD",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHLETIRAMAD")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(ACN,RPASEQ,TAXYR) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHLETIRAMAD","*","",ACN.get()_","_RPASEQ.get()_","_TAXYR.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHLETIRAMAD",ACN.get()_","_RPASEQ.get()_","_TAXYR.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHLETIRAMAD",ACN.get()_","_RPASEQ.get()_","_TAXYR.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,ACN,RPASEQ,TAXYR)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHLETIRAMAD","*","",ACN.get()_","_RPASEQ.get()_","_TAXYR.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHLETIRAMAD",ACN.get()_","_RPASEQ.get()_","_TAXYR.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,ACN,RPASEQ,TAXYR) //
	//Already Defined ACN,RPASEQ,TAXYR
	
	type public Number XAGE
	type public Date BEG,END
	type Date DOB
        type Number EAGE,BAGE,CID,MADAMT
        type String CO,XVAR,XFORM

	type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
	set DOB=cif.dob

	type RecordIRA ira=Db.getRecord("IRA","ACN=:ACN,RPASEQ=:RPASEQ,TAXYR=:TAXYR")
	set CID=ira.firstacc
			
	set CO=$$GETCO^LETTERU(ACN,CID)

        set EAGE=$$NOY^SCADAT(DOB,END,1,1)
	set BAGE=$$NOY^SCADAT(DOB,BEG,1,1)
	set XFORM="IRAMADNOT"
	set XVAR=Db.currVal("UTBLFORMVAR","CO,XFORM")

	if (BAGE'>XAGE),(EAGE'<XAGE) do TRIGGER^LETTERU(CO,XFORM,XVAR)

	quit

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,ACN,RPASEQ,TAXYR
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set ACN=vRECORD.piece($C(9),1)
 set RPASEQ=vRECORD.piece($C(9),2)
 set TAXYR=vRECORD.piece($C(9),3)
 do vPROC(ACN,RPASEQ,TAXYR)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,ACN,RPASEQ,TAXYR
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+31>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
	type Date BEG,DT,END,MNTH,XCURYR,YR
	type Number HOLD,QRT,SANL,UNT,vEXIT,XAGE
	type String RNG,RANGE(),%READ,VFMQ,%TAB
	
	set RANGE("D")="Daily"
	set RANGE("M")="Monthly"
	set RANGE("Q")="Quarterly"
	set RANGE("S")="Semi-Annual"
	set RANGE("A")="Annual"
	
	set DT=%SystemDate
	set DT=DT.toString("MMYEAR")
	set MNTH=(DT.toString()).extract(1,2)
	set (XCURYR,YR)=(DT.toString()).extract(3,6)
	
	set XAGE=70.5
	set %TAB("XAGE")=".XAGE"
	set %TAB("RNG")=".RNG"
	set %TAB("UNT")=".UNT"
	set %READ="@@%FN/REV/CEN,,XAGE,RNG,UNT"
	do ^UTLREAD if VFMQ="Q" set vEXIT=1 quit


	if RNG="D" set (BEG,END)=%SystemDate+UNT

	if RNG="M" do {
		if (MNTH+UNT)>12 set HOLD=(MNTH+UNT)\12,YR=XCURYR+HOLD,MNTH=(MNTH+UNT)#12
		else  set MNTH=MNTH+UNT
		set BEG=MNTH_"/01/"_YR
		set BEG=BEG.toString("MM/DD/YEAR")
		set END=$$EOMJD^SCADAT(BEG,1)
		}	

	if RNG="Q" do {
		set QRT=((MNTH-1)\3)+1
		if (QRT+UNT)>4 set HOLD=(QRT+UNT)\4,YR=XCURYR+HOLD,QRT=(QRT+UNT)#4
                else  set QRT=QRT+UNT
		if QRT=1 do {
			set BEG="0101"_YR
			set BEG=BEG.toString("MMDDYEAR")
			set END="0331"_YR
			set END=END.toString("MMDDYEAR")
			}
		if QRT=2 do {
			set BEG="0401"_YR
			set BEG=BEG.toString("MMDDYEAR")
			set END="0630"_YR
			set END=END.toString("MMDDYEAR")
			}
		if QRT=3 do {
			set BEG="0701"_YR
			set BEG=BEG.toString("MMDDYEAR")
			set END="0930"_YR
			set END=END.toString("MMDDYEAR")
			}
		if QRT=4 do {
			set BEG="1001"_YR
			set BEG=BEG.toString("MMDDYEAR")
			set END="1231"_YR
			set END=END.toString("MMDDYEAR")
			}
		}

	if RNG="S" do {

		set SANL=((MNTH-1)\6)+1
		if (SANL+UNT)>2 set HOLD=(SANL+UNT)\2,YR=XCURYR+HOLD,SANL=(SANL+UNT)#2
		else  set SANL=SANL+UNT
		if SANL=1 do {
			set BEG="0101"_YR
			set BEG=BEG.toString("MMDDYEAR")
			set END="0630"_YR
			set END=END.toString("MMDDYEAR")
			}
		if SANL=2 do {
			set BEG="0701"_YR
			set BEG=BEG.toString("MMDDYEAR")
			set END="1231"_YR
			set END=END.toString("MMDDYEAR")
			}
		}

	if RNG="A" do {
		if UNT set YR=XCURYR+UNT
		set BEG="0101"_YR
		set BEG=BEG.toString("MMDDYEAR")
		set END="1231"_YR
		set END=END.toString("MMDDYEAR")
		}

 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("ACN,RPASEQ,TAXYR","IRA","TAXYR=:XCURYR")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	
	type public Number XAGE
	type public Date BEG,END
	type Number LETTJD	

	set BEG=BEG.get(),END=END.get(),XAGE=XAGE.get()
	set LETTJD=%SystemDate

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
