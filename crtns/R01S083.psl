R01S083	// SCA012 - Escrow Analysis Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:38 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String POST
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number POST
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"

	set RID="SCA012"
	set RN="Escrow Analysis Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("POST")="|1|||||||L|Include Unposted Loans|||||"
	set %TAB("VIN2")="|255||[LNAPCHGE]APCND|[LNAPCHGE]APCND:DISTINCT:NOVAL||D EXT^DBSQRY||T|Analysis Payment Change Date|||||"
	set %TAB("VIN3")="|255||[LN]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN4")="|255||[LN]TYPE|[PRODDFTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN5")="|255||[LNAPCHGE]CID|[LNAPCHGE]CID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Loan Account Number|||||"
	set %TAB("VIN6")="|255||[LN]ANLD|||D EXT^DBSQRY||T|Escrow Analysis - Last Date Posted|||||"

	set %READ="IO/REQ,POST#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=37
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String POST
	type public Number POST
	type public String VIN2,VIN3,VIN4,VIN5,VIN6
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,AED,BEGBAL,CONAM,CUSHF,CUSHO,DISCP,ENDBAL,OPT,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA012",RN="Escrow Analysis Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA012","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNAPCHGE]CID#1#12,[LNAPCHGE]ECID#14#12,[LNAPCHGE]APCND#27#10,[LNAPCHGE]CUSH#45#12,[LNAPCHGE]OPMT#58#12,[LNAPCHGE]CUSH#85#12,[LNAPCHGE]EPMT#120#12\[LN]TYPE#6#5,[LNAPCHGE]LOWBALA#85#12,[LNAPCHGE]DEF#99#12,[LNAPCHGE]DDM#113#6"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LNAPCHGE]APCND "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LN]BOO "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[LN]TYPE "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[LNAPCHGE]CID "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[LN]ANLD "_VIN6,SEQ=SEQ+1
		set DQQRY(SEQ)="[LN]STAT'=4",SEQ=SEQ+1
		set DQQRY(SEQ)="<<POST>>=1 OR ((<<POST>>=0) AND (+[LN]EACIP'=0))",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNAPCHGE,LN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC2|"_"Analysis Payment Change Date"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Branch of Ownership"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Product Type"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Loan Account Number"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Escrow Analysis - Last Date Posted"_"|VIN6|"_VIN6.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Escrow Analysis Report"
		set VBNRINFO("PGM")="R01S083"
		set VBNRINFO("RID")="SCA012"
		set VBNRINFO("TABLES")="LNAPCHGE,LN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNAPCHGE]""APCND"""
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LN]GRP"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNAPCHGE]CID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,LNAPCHGE]ECID"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,LNAPCHGE]APCND"

		set VBNRINFO("DOC",1)="/*"
		set VBNRINFO("DOC",2)="   ---------- Revision History --------------------------------------------"
		set VBNRINFO("DOC",3)=""
		set VBNRINFO("DOC",4)="        01/21/05 - SRINIVAR - 18338"
		set VBNRINFO("DOC",5)="             Converted to PSL   "
		set VBNRINFO("DOC",6)=""
		set VBNRINFO("DOC",7)="   ------------------------------------------------------------------------"
		set VBNRINFO("DOC",8)="*/"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LN.GRP,LNAPCHGE.CID,LNAPCHGE.ECID,LNAPCHGE.APCND,L"
	set VSELECT=VSELECT_"NAPCHGE.CUSH,LNAPCHGE.OPMT,LNAPCHGE.EPMT,LN.TYPE,L"
	set VSELECT=VSELECT_"NAPCHGE.LOWBALA,LNAPCHGE.DEF,LNAPCHGE.DDM,LN.CUSHO"
	set VSELECT=VSELECT_",LNAPCHGE.OVG,LNAPCHGE.SHTG,LNAPCHGE.ODM,LNAPCHGE."
	set VSELECT=VSELECT_"SDM,LN.CUSHF"

	#ACCEPT DATE=09/10/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNAPCHGE,LN",VWHERE,"LN.GRP,LNAPCHGE.CID,LNAPCHGE.ECID,LNAPCHGE.APCND","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17
	set vc1=V.piece($C(9),1)			// LN.GRP
	set vc2=V.piece($C(9),2)			// LNAPCHGE.CID
	set vc3=V.piece($C(9),3)			// LNAPCHGE.ECID
	set vc4=V.piece($C(9),4)			// LNAPCHGE.APCND
	set vc5=V.piece($C(9),5)			// LNAPCHGE.CUSH
	set vc6=V.piece($C(9),6)			// LNAPCHGE.OPMT
	set vc7=V.piece($C(9),7)			// LNAPCHGE.EPMT
	set vc8=V.piece($C(9),8)			// LN.TYPE
	set vc9=V.piece($C(9),9)			// LNAPCHGE.LOWBALA
	set vc10=V.piece($C(9),10)			// LNAPCHGE.DEF
	set vc11=V.piece($C(9),11)			// LNAPCHGE.DDM
	set vc12=V.piece($C(9),12)			// LN.CUSHO
	set vc13=V.piece($C(9),13)			// LNAPCHGE.OVG
	set vc14=V.piece($C(9),14)			// LNAPCHGE.SHTG
	set vc15=V.piece($C(9),15)			// LNAPCHGE.ODM
	set vc16=V.piece($C(9),16)			// LNAPCHGE.SDM
	set vc17=V.piece($C(9),17)			// LN.CUSHF
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

 type public Number POST

 set POST=1
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb2!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,AED,BEGBAL,CONAM,CUSHF,CUSHO,DISCP,ENDBAL,ER,IOSL,OPT,POST,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="Group: "
	set VL=VL_$J("",7-VL.length())_$E(vc1,1,4)
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,AED,BEGBAL,CUSHF,CUSHO,DISCP,ENDBAL,IOSL,OPT,POST,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc2,12)
	set VL=VL_$J("",13-VL.length())_$J(vc3,12)
	set VL=VL_$J("",26-VL.length())_$J($$DAT^%ZM(vc4),10)
	set V=vc12,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,1)
	set VL=VL_$J("",40-VL.length())_V
	set VL=VL_$J("",44-VL.length())_$S(vc5="":"",1:$J(vc5,0,2))
	set VL=VL_$J("",57-VL.length())_$S(vc6="":"",1:$J(vc6,0,2))
	do VP2 quit:VFMQ!verror.get()  set V=$S(BEGBAL="":"",1:$J(BEGBAL,0,2))
	set VL=VL_$J("",71-VL.length())_V
	set VL=VL_$J("",84-VL.length())_$S(vc5="":"",1:$J(vc5,0,2))
	do VP3 quit:VFMQ!verror.get()  set V=$J(DISCP,12)
	set VL=VL_$J("",98-VL.length())_V
	do VP4 quit:VFMQ!verror.get()  set V=$E(OPT,1,6)
	set VL=VL_$J("",112-VL.length())_V
	set VL=VL_$J("",119-VL.length())_$S(vc7="":"",1:$J(vc7,0,2))
	do VOM
	set VL="     "_$E(vc8,1,5)
	do VP5 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(AED),10)
	set VL=VL_$J("",26-VL.length())_V
	set V=vc17,VO=V do VP6 quit:VFMQ!verror.get()  set V=$J(V,5,3)
	set VL=VL_$J("",38-VL.length())_V
	set VL=VL_$J("",71-VL.length())_$S(ENDBAL="":"",1:$J(ENDBAL,0,2))
	set VL=VL_$J("",84-VL.length())_$S(vc9="":"",1:$J(vc9,0,2))
	set VL=VL_$J("",98-VL.length())_$S(vc10="":"",1:$J(vc10,0,2))
	set VL=VL_$J("",112-VL.length())_$E(vc11,1,6)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,AED,BEGBAL,CONAM,CUSHF,CUSHO,DISCP,ENDBAL,OPT,POST,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="Loan Account      Escrow  Analy Strt CushOpt    Cush Amt      Current       Beg Bal   Target LMB    (Ovg)/Shtg  Disc           New"
	do VOM
	set VL="     "_"Type                 Analy End  CushFac                  Payment       End Bal   Actual LMB    Deficiency  Opt            Pmt"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: CUSHO

	type public String vc3,vc12
 type public Number ECID,CUSHO
 set ECID=vc3
 type RecordDEP dep =Db.getRecord("DEP","CID=:ECID")	
 
 set CUSHO=$$VAL^LNEA(dep.cusho,vc12)
	quit

VP2	// Column pre-processor - Variable: BEGBAL

	type public String vc4,vc2,vc3,vc8
 type public Number ER,BEGBAL,TYPE
 type public String ESC,DATA,LNEAM,VFMQ
 type public Date AED
 
 type Date APCND
 type Number CID,ECID

 set APCND=vc4
 set CID=vc2
 set ECID=vc3
 type RecordLNAPCHG lnapchg=Db.getRecord("LNAPCHG","APCND=:APCND,CID=:CID",1)
 type RecordLNAPCHGE lnapchge=Db.getRecord("LNAPCHGE","APCND=:APCND,CID=:CID,ECID=:ECID",1)
 set ESC=$$ESCA^LNU(CID,ECID)
 set AED=$$NJD^UFRE(APCND,"1YA")
 if ER set ER=1 do ^UTLERR set VFMQ="Q" quit
 set AED=AED-1
 type RecordLN ln=Db.getRecord("LN","CID=:CID")
 do EXEC^LNEA(.ln,.lnapchge,CID,.LNEAM,ESC,APCND,AED,"02",.DATA)
 set TYPE=vc8
 set BEGBAL=DATA.piece("|",3)
 do ADJUST^LNEASTS(.lnapchge,.lnapchg)
	quit

VP3	// Column pre-processor - Variable: DISCP

	type public String vc13,vc14,vc4,vc2
 type public Number OVG,SHTG,DISCP,OVER

 type Date APCND
 type Number CID

 set OVG=vc13
 set SHTG=vc14
 set APCND=vc4
 set CID=vc2
 type RecordLNAPCHG lnapchg=Db.getRecord("LNAPCHG","APCND=:APCND,CID=:CID",1)

 if lnapchg.epost set OVG=OVER
 if OVG set DISCP="("_$$^SCARND(OVG,2)_")"
 else  set DISCP=$$^SCARND(SHTG,2)
	quit

VP4	// Column pre-processor - Variable: OPT

	type public String vc13,vc14,vc15,vc16
 type public Number OPT,OVG,SHTG
 set OVG=vc13,SHTG=vc14
 if OVG set OPT=vc15
 if SHTG set OPT=vc16
 if 'OVG,'SHTG set OPT=""
	quit

VP5	// Column pre-processor - Variable: AED

 type public Date AED,APCND
 type public Number ER
 type public String VFMQ

 if AED.get().isNull() do {
  set AED=$$NJD^UFRE(APCND,"1YA")
  if ER do { quit
	set ER=1 
	do ^UTLERR 
	set VFMQ="Q" 
	}
  set AED=AED-1
 }
	quit

VP6	// Column pre-processor - Variable: CUSHF

	type public String vc3,vc17
 type public Number CUSHF
 type Number ECID

 set ECID=vc3
 type RecordDEP dep=Db.getRecord("DEP","CID=:ECID")
 
 set CUSHF=$$VAL^LNEA(dep.cushf,vc17)
	quit
