R01S241	// SCA216 - Kite Suspect/Multiple Entry Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date BDAT
	type Number HITS

	set RID="SCA216"
	set RN="Kite Suspect/Multiple Entry Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("BDAT")="|10|||||||D|From Date|||||"
	set %TAB("HITS")="|2||||||S HITS=2|N|Minimum times suspect||2|99||"
	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,BDAT#1,HITS#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date BDAT
	type public Number HITS
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CID,CONAM,DAT,DAT1,HIT,PER,RID,RN,VCID,VL,VLOF,VRF(),VSTATS(),ZTMPCID,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA216",RN="Kite Suspect/Multiple Entry Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA216","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[KITE]ADAT#6#10,[KITE]AVB#17#12,[KITE]AVC#31#12,[KITE]HB#45#12,[KITE]LB#59#12,[KITE]LB1#74#12,[KITE]NDR#88#6,[KITE]TDR#97#12,[KITE]NCR#112#6,[KITE]TCR#121#12"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Kite Suspect/Multiple Entry Report"
		set VBNRINFO("PGM")="R01S241"
		set VBNRINFO("RID")="SCA216"
		set VBNRINFO("TABLES")="KITE,DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,KITE]CID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,KITE]ADAT"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("KITE.CID,KITE.ADAT,KITE.AVB,KITE.AVC,KITE.HB,KITE.LB,KITE.LB1,KITE.NDR,KITE.TDR,KITE.NCR,KITE.TCR,DEP.CID,DEP.TITLE1,DEP.ODT,CIF.HPH,DEP.TYPE,CIF.CON,DEP.CCLD,DEP.OFF,DEP.BOO,DEP.PERS,CIF.BPH","KITE,DEP,CIF","","KITE.CID,KITE.ADAT","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22
	set vc1=V.piece($C(9),1)			// KITE.CID
	set vc2=V.piece($C(9),2)			// KITE.ADAT
	set vc3=V.piece($C(9),3)			// KITE.AVB
	set vc4=V.piece($C(9),4)			// KITE.AVC
	set vc5=V.piece($C(9),5)			// KITE.HB
	set vc6=V.piece($C(9),6)			// KITE.LB
	set vc7=V.piece($C(9),7)			// KITE.LB1
	set vc8=V.piece($C(9),8)			// KITE.NDR
	set vc9=V.piece($C(9),9)			// KITE.TDR
	set vc10=V.piece($C(9),10)			// KITE.NCR
	set vc11=V.piece($C(9),11)			// KITE.TCR
	set vc12=V.piece($C(9),12)			// DEP.CID
	set vc13=V.piece($C(9),13)			// DEP.TITLE1
	set vc14=V.piece($C(9),14)			// DEP.ODT
	set vc15=V.piece($C(9),15)			// CIF.HPH
	set vc16=V.piece($C(9),16)			// DEP.TYPE
	set vc17=V.piece($C(9),17)			// CIF.CON
	set vc18=V.piece($C(9),18)			// DEP.CCLD
	set vc19=V.piece($C(9),19)			// DEP.OFF
	set vc20=V.piece($C(9),20)			// DEP.BOO
	set vc21=V.piece($C(9),21)			// DEP.PERS
	set vc22=V.piece($C(9),22)			// CIF.BPH
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 // Build sort file to include only multiple hit accounts
 
 type public Date BDAT,DAT,DAT1
 type public Number CID,HIT,ZTMPCID,HITS,VCID
 type String ZDATA
 
  
 set DAT=BDAT-1
 
 type ResultSet rs=Db.select("ADAT","KITE","ADAT>:DAT","ADAT DESC")
 while rs.next()  do {
	set DAT=rs.getCol("ADAT")
	if DAT.isNull() quit
	set CID=0
 	type ResultSet rs1=Db.select("CID","KITE","ADAT=:DAT AND CID>:CID","CID DESC")
 	while rs1.next() do {
 		set CID=rs1.getCol("CID")
 		if CID.isNull() quit
 		set DAT1=DAT,HIT=1
 		type ResultSet rs2=Db.select("KEY1","TMPRPT2","PID=:%ProcessID AND KEY1=:CID")
 		while rs2.next() do {
			set ZTMPCID=rs2.getCol("KEY1")
			if ZTMPCID.isNull() quit
			type ResultSet rs=Db.select("ADAT","KITE","ADAT>:DAT1","ADAT DESC")
			while rs.next() do {
			 	set DAT1=rs.getCol("ADAT")
			 	if DAT1.isNull(),HIT<HITS do {
 					do Db.fastDelete("TMPRPT2","PID=:%ProcessID,KEY1=:CID")  
 					}
				if DAT1.isNull() quit
				if VCID do {
				 	type RecordTMPRPT2 tmprpt2=Class.new("RecordTMPRPT2") do {
			 		set ZDATA=""
			 		set tmprpt2.pid=%ProcessID
			 		set tmprpt2.key1=CID
			 		set tmprpt2.key2=DAT
			 		set tmprpt2.data=ZDATA
 		
			 		do tmprpt2.save()
 					}
					type RecordTMPRPT2 tmprpt2a=Class.new("RecordTMPRPT2") do {
					set ZDATA=""
			 		set tmprpt2a.pid=%ProcessID
			 		set tmprpt2a.key1=CID
			 		set tmprpt2a.key2=DAT1
			 		set tmprpt2a.data=ZDATA
 		
			 		do tmprpt2a.save()
			 		} 	
					}
				}
 			}	
				set HIT=HIT+1
 			}		
				 		
 quit
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VDTL1	// Detail
	type public String %TIM,BDAT,CID,DAT,DAT1,HIT,HITS,IOSL,PER,V,VCID,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZTMPCID,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc12,12)
	set VL=VL_$J("",14-VL.length())_$E(vc13,1,40)
	do VP1 quit:VFMQ!verror.get()  set V=$E(MADDR(1),1,40)
	set VL=VL_$J("",56-VL.length())_V
	set VL=VL_$J("",98-VL.length())_$J($$DAT^%ZM(vc14),10)
	do VP2 quit:VFMQ!verror.get()  set V=$E(PER,1,4)
	set VL=VL_$J("",110-VL.length())_V
	set V=vc15,VO=V set V=$E(V,1,12) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",118-VL.length())_V		// [SYSDEV,CIF]HPH
	do VOM
	set VL="        "_$J(vc16,4)
	set VL=VL_$J("",14-VL.length())_$E(vc17,1,30)
	set VL=VL_$J("",56-VL.length())_$E(MADDR(2),1,40)
	set VL=VL_$J("",98-VL.length())_$J($$DAT^%ZM(vc18),10)
	set VL=VL_$J("",110-VL.length())_$E(vc19,1,6)
	set VL=VL_$J("",118-VL.length())_$E(vc20,1,6)
	do VOM
	set VL="" do VOM
	set VL="     "_"Analysis"
	set VL=VL_$J("",18-VL.length())_"Avg Ledger"
	set VL=VL_$J("",31-VL.length())_"Avg Collect"
	set VL=VL_$J("",48-VL.length())_"High Bal"
	set VL=VL_$J("",63-VL.length())_"Low Bal"
	set VL=VL_$J("",72-VL.length())_"Low Bal (EOD)"
	set VL=VL_$J("",87-VL.length())_"# DR'S"
	set VL=VL_$J("",96-VL.length())_"Total DR Amt"
	set VL=VL_$J("",111-VL.length())_"# CR'S"
	set VL=VL_$J("",120-VL.length())_"Total CR Amt"
	do VOM
	set VL="     "_"------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VDTL2	// Detail
	type public String %TIM,BDAT,CID,DAT,DAT1,HIT,HITS,IOSL,PER,V,VCID,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZTMPCID,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="     "_$J($$DAT^%ZM(vc2),10)
	set VL=VL_$J("",16-VL.length())_$J($FN(vc3,",",2),12)
	set VL=VL_$J("",30-VL.length())_$J($FN(vc4,",",2),12)
	set VL=VL_$J("",44-VL.length())_$J($FN(vc5,",",2),12)
	set VL=VL_$J("",58-VL.length())_$J($FN(vc6,",",2),12)
	set VL=VL_$J("",73-VL.length())_$J($FN(vc7,",",2),12)
	set VL=VL_$J("",86-VL.length())_$J(vc8,7)
	set VL=VL_$J("",96-VL.length())_$J($FN(vc9,",",2),12)
	set VL=VL_$J("",109-VL.length())_$J(vc10,8)
	set VL=VL_$J("",120-VL.length())_$J($FN(vc11,",",2),12)
	do VOM
	quit

VSUM2	// Summary
	type public String %TIM,BDAT,CID,DAT,DAT1,HIT,HITS,I,IOSL,PER,V,VCID,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),ZTMPCID,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "
	do VOM
	set VL=" "
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BDAT,CID,CONAM,DAT,DAT1,HIT,HITS,PER,RID,RN,VCID,VL,ZTMPCID,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",97-VL.length())_"System Date:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="   "_"Account #  Account Title                             Mailing Address                          Date Opened  Per/Comm Phone"
	do VOM
	set VL="        "_"Type  Contact ( If Commercial )                 City, State  ZIP                        Last Contact  Officer  Branch"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: MADDR(1)

 type public String MADDR()
 type public Number CID

 type String MADDR
 
 set MADDR(1)="",MADDR(2)=""
 
 do ^UTLADDR(1,"MADDR",2,"","ACN",CID)
	quit

VP2	// Column pre-processor - Variable: PER

	type public String vc21
 type String PER

 if 'vc21 set PER="PERS"

 else  set PER="COMM"
	quit

VP3	// Column post-processor - [SYSDEV,CIF]HPH

	type public String vc21,vc22
 type public String V

 if vc21 set V=vc22

	quit
