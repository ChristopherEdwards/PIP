public EUROINI	//

	/*
	ORIG: kumarss - 09/26/2005
	DESC: EURO Conversion Initialization
	
	---- Comments --------------------------------------------------------
	
	---- Revision History ------------------------------------------------
	
	05/15/06 - RussellDS - CR21296
		   Replace references to %CACHE, which is reserved for PSL
		   record objects, with cache array.
	
	09/26/05 - KumarSS - 16668
		   Converted to PSL.
		   Removed revision history prior to 2004
	
	----------------------------------------------------------------------
	*/
	
 	do INIT
 	quit
 	
	
	//----------------------------------------------------------------------
INIT	//Initialization
	//----------------------------------------------------------------------

	type public String cache(,,),COLUMNS(),PROC(),TMPBLP(),TMPEUR(,)
	type Date jd
	type Number cid,type,sqlcnt,sqlsta
	type String EMUCRCD,crcd,di,sqldta
	
	kill TMPBLP
	kill TMPEUR
	kill cache("EFD")
	kill cache("CRCD")
	kill cache("EURINT")
	
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set EMUCRCD=cuvar.emucrcd
	
	//*** Optimize by building TMPBLP array ***
	type ResultSet rslnblp=Db.select("BILDT,TYPE,CID","LNBLP")
	
	while rslnblp.next() do {
		
		set jd=rslnblp.getCol("BILDT")
		set type=rslnblp.getCol("TYPE")
		set cid=rslnblp.getCol("CID")
		
		set TMPBLP(cid,jd)=""
		}

	//*** Add required columns to CTBLEURO ***
	for di="AIACR","TAIAMS","TAIANMS","TAIMS","TAINMS","TASPM","TASPNM","TSMPB","TSNMPB" do {

		type RecordCTBLEURO ctbleuro

		set ctbleuro=Db.getRecord("CTBLEURO","FID=""DEP"",CONVTYP=1,DI=:di",1)

		set ctbleuro.fid="DEP"
		set ctbleuro.convtyp=1
		set ctbleuro.di=di

		do ctbleuro.save()
		
		set ctbleuro=Db.getRecord("CTBLEURO","FID=""DEPSEG"",CONVTYP=1,DI=:di",1)

		set ctbleuro.fid="DEPSEG"
		set ctbleuro.convtyp=1
		set ctbleuro.di=di

		do ctbleuro.save()		
		}
	
	type ResultSet rscrcd=Db.select("CRCD,CURDEC,EMU","CRCD","CO=:%CompanyName")
	
	while rscrcd.next() do {

		set crcd=rscrcd.getCol("CRCD")
		set cache("CRCD",crcd)=rscrcd.getCol("CURDEC")_"|"_rscrcd.getCol("EMU")
		
		if crcd'=EMUCRCD,cache("CRCD",crcd).piece("|",2) do rate(EMUCRCD,crcd,.cache())
		}

	type ResultSet rseurint=Db.select("INDEX","UTBLEURINT")
	
	while rseurint.next()  set cache("EURINT",rseurint.getCol("INDEX"))=rseurint.getCol("INDEX")

	// Cache UTBLEURSCH
	type ResultSet rseursch=Db.select("SCH","UTBLEURSCH")
	
	while rseursch.next()  set cache("EURSCH",rseursch.getCol("SCH"))=rseursch.getCol("SCH")

	//Get data items/files names that need to be converted from the CTBLEURO
	do DEP1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Straight Conversion, DEP
	do DEP2(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Threshold Option, DEP
	do DEP3(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Threshold Rounding Option, DEP
	do DEPINV(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DEPINV
	do DEPSEG(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DEPSEG
	do DEPYR1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DEPYR
	do DEPYR2(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Threshold Option, DEPYR
	do DEPXPLN(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DEPEXPLN
	do ROLL1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, ROLLOVR
	do ROLL2(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Threshold Option, ROLLOVR
	do RELCIF(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, RELCIF

	do SUSP(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, SUSPENSE
	do KITE(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, KITE

	do ARS(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)				//Straight Conversion, ARS
	do ARSB(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, ARSB
	do ARSH(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, ARSH
	do ARSCID(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, ARSCID

	do SRV(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)				//Straight Conversion, SRV
	do SRV0(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, SRV0
	do SRVD(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, SRVD
	do SRVD1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, SRVD1
	do SRVDTL(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, SRVDTL
	do SUM(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)				//Straight Conversion, SRVSUM
	do SUM3(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, SRVSUM3

	do HLD7(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, HLD7
	do HLD8(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, HLD8
	do HLDD(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, HLDD
	do PHLD(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, PHLD
	do PHLD9(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, PHLD9

	do EFTPAY(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, EFTPAY

	do DARCB(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DAYENDDARCB
	do DARCBF(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DAYENDDARCBF
	do DLNRP(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DAYENDLNRP
	do DNEG(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DAYENDNEG
	do DRCLS(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, DAYENDRCLS

	do LN1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Straight Conversion,LN
	do LN2(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Threshold Option, LN
	do LN3(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Threshold Rounding Option, LN
	do LNBL1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Straight Conversion, LNBIL1
	do LNBL1A(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Straight Conversion, LNBIL1
	do LNBL5(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Straight Conversion, LNBIL5
	do LNADV(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNADV
	do LNBL0(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt,.cache(),.TMPEUR())	//Straight Conversion, LNBIL0
	do LNBLP1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNBLP
	do LNBL3(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Threshold Rounding Option, LNBLP
	do LNDELP(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNDELP
	do LNDIDE(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNDIDE
	do LNFEE(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNFEE
	do LNENT(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNENT
	do LNFEED(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNFEED
	do LNAMO(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNAMOAO
	do LNVRCHG(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNVRCHG
	do LNPTCH(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNPTCHG
	do LNRAC(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNRACHG
	do LNRENEW1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNRENEW
	do LNRENEW2(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Threshold Conversion, LNRENEW
	do LNDS1(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNDS1
	do LNPS(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNPS1
	do LNYR(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNYR

	do PAA(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)				//Straight Conversion, PAA
	do WTHAUT(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, WTHAUT

	do LNCYCDLD(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNCYCDLD
	do LNCYCINS(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNCYCINS
	do LNCYCMSC(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNCYCMSC
	do LNCYCPTS(.COLUMNS(),.PROC(),sqlsta,sqldta,sqlcnt)			//Straight Conversion, LNCYCPTS	

	quit


	//----------------------------------------------------------------------
DEP1(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt,		// SQL Record Count
     String cache,		// cache Array
     String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Straight Conversion, table DEP.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DEP",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DEP","DEP1",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt)
	
	if COLUMNS("DEP1")="" quit
	
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP1")_" FROM DEP WHERE CID=:CID",,,.DATA)

	set PROC("DEP1")=DATA
	do CACHE("DEP",COLUMNS("DEP1"),1,.cache(),.TMPEUR())

	quit


	//----------------------------------------------------------------------
DEP2(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt,		// SQL Record Count
     String cache(,,),		// cache Array
     String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Threshold Conversion Method, table DEP.

	type String x,DATA,X

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DEP",2,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DEP","DEP2",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP2")="" quit

	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP2")_" FROM DEP WHERE CID=:CID",,,.DATA)

	set PROC("DEP2")=DATA
	do CACHE("DEP",COLUMNS("DEP2"),2,.cache(),.TMPEUR())

	// Create procedures to select product level columns for both the new
	// and old currencies.
	set X=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP2")_" FROM DTYPE WHERE TYPE=:TYPE AND CRCD=:NEWCRCD",,,.DATA) set PROC("DEP73")=DATA
        set X=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP2")_" FROM DTYPE WHERE TYPE=:TYPE AND CRCD=:OLDCRCD",,,.DATA) set PROC("DEP74")=DATA

	quit


	//----------------------------------------------------------------------
DEP3(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt,		// SQL Record Count
     String cache(,,),		// cache Array
     String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Straight Conversion and Round, table DEP.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DEP",3,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DEP","DEP3",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP3")="" quit

	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP3")_" FROM DEP WHERE CID=:CID",,,.DATA)

	set PROC("DEP3")=DATA
	do CACHE("DEP",COLUMNS("DEP3"),3,.cache(),.TMPEUR())

	quit


	//----------------------------------------------------------------------
RELCIF(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table RELCIF.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("RELCIF",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("RELCIF","DEP23",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP23")="" quit

	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP23")_" FROM RELCIF WHERE ACN=:ACN AND CID=:CID",,,.DATA)

	set PROC("DEP23")=DATA

	quit


	//----------------------------------------------------------------------
SUSP(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table SUSPENSE.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("SUSPENSE",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("SUSPENSE","DEP27",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP27")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP27")_" FROM SUSPENSE WHERE EOM=:EOM AND CID=:CID",,,.DATA)

	set PROC("DEP27")=DATA
	quit


	//----------------------------------------------------------------------
KITE(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table KITE.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("KITE",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("KITE","DEP8",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP8")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP8")_" FROM KITE WHERE ADAT=:ADAT AND CID=:CID",,,.DATA)

	set PROC("DEP8")=DATA
	quit


	//----------------------------------------------------------------------
ARS(String COLUMNS,		// Columns List
    String PROC,		// Procedures List
    Number sqlsta,		// SQL Code
    String sqldta,		// SQL Return Data
    Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table ARS.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("ARS",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("ARS","DEP9",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP9")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP9")_" FROM ARS WHERE CKNO=:CKNO AND CID=:CID",,,.DATA)

	set PROC("DEP9")=DATA
	quit


	//----------------------------------------------------------------------
ARSB(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table ARSB.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("ARSB",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("ARSB","DEP10",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP10")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP10")_" FROM ARSB WHERE ARSNDT=:ARSNDT AND CID=:CID",,,.DATA)

	set PROC("DEP10")=DATA
	quit


	//----------------------------------------------------------------------
ARSH(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table ARSH.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("ARSH",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("ARSH","DEP11",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP11")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP11")_" FROM ARSH WHERE ACTDT=:ACTDT AND CKNO=:CKNO AND CSEQ=:CSEQ AND CID=:CID",,,.DATA)

	set PROC("DEP11")=DATA
	quit


	//----------------------------------------------------------------------
ARSCID(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table ARSCID.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("ARSCID",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("ARSCID","DEP12",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP12")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP12")_" FROM ARSCID WHERE CID=:CID",,,.DATA)

	set PROC("DEP12")=DATA
	quit


	//----------------------------------------------------------------------
SRV(String COLUMNS,		// Columns List
    String PROC,		// Procedures List
    Number sqlsta,		// SQL Code
    String sqldta,		// SQL Return Data
    Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table SRV.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("SRV",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("SRV","DEP14",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP14")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP14")_" FROM SRV WHERE PLTP=:PLTP AND SCND=:SCND AND  CID=:CID",,,.DATA)

	set PROC("DEP14")=DATA
	quit


	//----------------------------------------------------------------------
SRV0(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table SRV0.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("SRV0",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("SRV0","DEP15",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP15")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP15")_" FROM SRV0 WHERE PLTP=:PLTP AND SCND=:SCND AND CID=:CID",,,.DATA)

	set PROC("DEP15")=DATA
	quit


	//----------------------------------------------------------------------
SRVD(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table SRVD.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("SRVD",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("SRVD","DEP88",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP88")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP88")_" FROM SRVD WHERE PLTP=:PLTP AND SCND=:SCND AND FEECAT=:FEECAT AND CID=:CID",,,.DATA)

	set PROC("DEP88")=DATA
	quit


	//----------------------------------------------------------------------
SRVD1(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, SRVD1.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("SRVD1",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("SRVD1","DEP16",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP16")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP16")_" FROM SRVD1 WHERE PLTP=:PLTP AND SCND=:SCND AND FEECAT=:FEECAT AND CID=:CID",,,.DATA)

	set PROC("DEP16")=DATA
	quit


	//----------------------------------------------------------------------
SRVDTL(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table SRVDTL.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("SRVDTL",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("SRVDTL","DEP17",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP17")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP17")_" FROM SRVDTL WHERE PLTP=:PLTP AND SCND=:SCND AND FEECAT=:FEECAT AND FEETYP=:FEETYP AND SEQ=:SEQ AND CID=:CID",,,.DATA)

	set PROC("DEP17")=DATA
	quit


	//----------------------------------------------------------------------
SUM(String COLUMNS,		// Columns List
    String PROC,		// Procedures List
    Number sqlsta,		// SQL Code
    String sqldta,		// SQL Return Data
    Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table SRVSUM.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("SRVSUM",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("SRVSUM","DEP18",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP18")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP18")_" FROM SRVSUM WHERE PLTP=:PLTP AND SCND=:SCND AND CID=:CID",,,.DATA)

	set PROC("DEP18")=DATA
	quit


	//----------------------------------------------------------------------
SUM3(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table SRVSUM3.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("SRVSUM3",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("SRVSUM3","DEP19",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP19")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP19")_" FROM SRVSUM3 WHERE PLTP=:PLTP AND SCND=:SCND AND TRNGRP=:TRNGRP AND CID=:CID",,,.DATA)

	set PROC("DEP19")=DATA
	quit


	//----------------------------------------------------------------------
HLD7(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table HLD7.

	type String x,DATA

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("HLD7",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("HLD7","DEP20",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP20")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP20")_" FROM HLD7 WHERE EXPDT=:EXPDT AND CID=:CID",,,.DATA)

	set PROC("DEP20")=DATA
	quit


	//----------------------------------------------------------------------
HLD8(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table HLD8.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("HLD8",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("HLD8","DEP21",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP21")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP21")_" FROM HLD8 WHERE EXPDT=:EXPDT AND CID=:CID",,,.DATA)

	set PROC("DEP21")=DATA
	quit


	//----------------------------------------------------------------------
HLDD(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table HLDD.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("HLDD",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("HLDD","DEP22",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP22")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP22")_" FROM HLDD WHERE TJD=:TJD AND HLDSEQ=:HLDSEQ AND CHKSEQ=:CHKSEQ AND CID=:CID",,,.DATA)

	set PROC("DEP22")=DATA
	quit


	//----------------------------------------------------------------------
PHLD(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table PHLD.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("PHLD",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("PHLD","DEP31",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP31")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP31")_" FROM PHLD WHERE SEQ=:SEQ AND CID=:CID",,,.DATA)

	set PROC("DEP31")=DATA
	quit


	//----------------------------------------------------------------------
PHLD9(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table PHLD9.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("PHLD9",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("PHLD9","DEP30",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP30")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP30")_" FROM PHLD9 WHERE SEQ=:SEQ AND CID=:CID",,,.DATA)

	set PROC("DEP30")=DATA
	quit


	//----------------------------------------------------------------------
ROLL1(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table ROLLOVR.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("ROLLOVR",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("ROLLOVR","DEP65",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP65")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP65")_" FROM ROLLOVR WHERE CID=:CID",,,.DATA)

	set PROC("DEP65")=DATA
	quit


	//----------------------------------------------------------------------
ROLL2(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Threshold Conversion Method, table ROLLOVR.

	type String DATA,x,X

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("ROLLOVR",2,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("ROLLOVR","DEP26",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP26")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP26")_" FROM ROLLOVR WHERE CID=:CID",,,.DATA)

	set PROC("DEP26")=DATA

	// Create procedures to select product level columns for both the new
        // and old currencies.
	set X=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP26")_" FROM DTYPE WHERE TYPE=:TYPE AND CRCD=:NEWCRCD",,,.DATA) set PROC("DEP75")=DATA
	set X=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP26")_" FROM DTYPE WHERE TYPE=:TYPE AND CRCD=:OLDCRCD",,,.DATA) set PROC("DEP76")=DATA
		
	quit


	//----------------------------------------------------------------------
DEPINV(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table DEPINV.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DEPINV",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DEPINV","DEP13",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP13")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP13")_" FROM DEPINV WHERE SWPCID=:SWPCID AND CID=:CID",,,.DATA)

	set PROC("DEP13")=DATA
	quit


	//----------------------------------------------------------------------
DEPSEG(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table DEPSEG.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DEPSEG",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DEPSEG","DEP71",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP71")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP71")_" FROM DEPSEG WHERE SEGMENT=:SEGMENT AND CID=:CID",,,.DATA)

	set PROC("DEP71")=DATA
	quit


	//----------------------------------------------------------------------
DEPYR1(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Threshold Conversion Method, table DEPYR.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DEPYR",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DEPYR","DEP67",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP67")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP67")_" FROM DEPYR WHERE YEAR=:YEAR AND CID=:CID",,,.DATA)

	set PROC("DEP67")=DATA
	quit


	//----------------------------------------------------------------------
DEPYR2(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Threshold Conversion Method, table DEPYR.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DEPYR",2,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DEPYR","DEP68",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP68")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP68")_" FROM DEPYR WHERE YEAR=:YEAR AND CID=:CID",,,.DATA)

	set PROC("DEP68")=DATA
	quit


	//----------------------------------------------------------------------
DEPXPLN(String COLUMNS,		// Columns List
        String PROC,		// Procedures List
        Number sqlsta,		// SQL Code
        String sqldta,		// SQL Return Data
        Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table DEPEXPLN.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DEPEXPLN",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DEPEXPLN","DEP59",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP59")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP59")_" FROM DEPEXPLN WHERE CID=:CID",,,.DATA)

	set PROC("DEP59")=DATA
	quit


	//----------------------------------------------------------------------
LN1(String COLUMNS,		// Columns List
    String PROC,		// Procedures List
    Number sqlsta,		// SQL Code
    String sqldta,		// SQL Return Data
    Number sqlcnt,		// SQL Record Count
    String cache(,,),		// cache Array
    String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Straight Conversion, table LN.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LN",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LN","LN1",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("LN1")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("LN1")_" FROM LN WHERE CID=:CID",,,.DATA)

	set PROC("LN1")=DATA
	do CACHE("LN",COLUMNS("LN1"),1,.cache(),.TMPEUR())
	quit


	//----------------------------------------------------------------------
LN2(String COLUMNS,		// Columns List
    String PROC,		// Procedures List
    Number sqlsta,		// SQL Code
    String sqldta,		// SQL Return Data
    Number sqlcnt,		// SQL Record Count
    String cache(,,),		// cache Array
    String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Threshold Conversion Method, table LN.

	type String DATA,x,X

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LN",2,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LN","LN2",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("LN2")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("LN2")_" FROM LN WHERE CID=:CID",,,.DATA)

	set PROC("LN2")=DATA
	do CACHE("LN",COLUMNS("LN2"),2,.cache(),.TMPEUR())

	// Create procedures to select product level columns for both the new
        // and old currencies.
	set X=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("LN2")_" FROM LTYPE WHERE TYPE=:TYPE AND CRCD=:NEWCRCD",,,.DATA) set PROC("DEP77")=DATA
       	set X=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("LN2")_" FROM LTYPE WHERE TYPE=:TYPE AND CRCD=:OLDCRCD",,,.DATA) set PROC("DEP78")=DATA

	quit


	//----------------------------------------------------------------------
LN3(String COLUMNS,		// Columns List
    String PROC,		// Procedures List
    Number sqlsta,		// SQL Code
    String sqldta,		// SQL Return Data
    Number sqlcnt,		// SQL Record Count
    String cache(,,),		// cache Array
    String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Straight Conversion and Round, table LN.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LN",3,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LN","LN3",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("LN3")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("LN3")_" FROM LN WHERE CID=:CID",,,.DATA)

	set PROC("LN3")=DATA
	do CACHE("LN",COLUMNS("LN3"),3,.cache(),.TMPEUR())
	quit


	//----------------------------------------------------------------------
LNBL0(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt,		// SQL Record Count
      String cache(,,),	// cache Array
      String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Straight Conversion, table LNBIL0.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNBIL0",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNBIL0","DEP46",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP46")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP46")_" FROM LNBIL0 WHERE CID=:CID",,,.DATA)

	set PROC("DEP46")=DATA
	do CACHE("LNBIL0",COLUMNS("DEP46"),1,.cache(),.TMPEUR())
	quit


	//----------------------------------------------------------------------
LNBL1(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt,		// SQL Record Count
      String cache(,,),	// cache Array
      String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Straight Conversion, table LNBIL1.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNBIL1",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNBIL1","DEP45",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP45")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP45")_" FROM LNBIL1 WHERE SCHSEQ=:SCHSEQ AND CID=:CID",,,.DATA)

	set PROC("DEP45")=DATA
	do CACHE("LNBIL1",COLUMNS("DEP45"),1,.cache(),.TMPEUR())
	quit


	//----------------------------------------------------------------------
LNBL1A(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt,		// SQL Record Count
       String cache(,,),	// cache Array
       String TMPEUR(,))	// TMPEUR Array
	//----------------------------------------------------------------------

	// Straight Conversion and round, table LNBIL1.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNBIL1",5,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNBIL1","DEP43",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP43")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP43")_" FROM LNBIL1 WHERE SCHSEQ=:SCHSEQ AND CID=:CID",,,.DATA)

	set PROC("DEP43")=DATA
	do CACHE("LNBIL1",COLUMNS("DEP43"),5,.cache(),.TMPEUR())
	quit


	//----------------------------------------------------------------------
LNBL5(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt,		// SQL Record Count
      String cache(,,),	// cache Array
      String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Straight Conversion, table LNBIL5.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNBIL5",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNBIL5","DEP90",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP90")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP90")_" FROM LNBIL5 WHERE SCHSEQ=:SCHSEQ AND DUEAMT=:DUEAMT AND FEETYP=:FEETYP AND CID=:CID",,,.DATA)

	set PROC("DEP90")=DATA
	do CACHE("LNBIL5",COLUMNS("DEP90"),1,.cache(),.TMPEUR())
	quit


	//----------------------------------------------------------------------
LNADV(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNADV.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNADV",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNADV","DEP47",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP47")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP47")_" FROM LNADV WHERE ADV=:ADV AND CID=:CID",,,.DATA)

	set PROC("DEP47")=DATA
	quit


	//----------------------------------------------------------------------
LNBLP1(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNBLP.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNBLP",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNBLP","DEP48",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP48")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP48")_" FROM LNBLP WHERE BILDT=:BILDT AND TYPE=:TYPE AND CID=:CID",,,.DATA)

	set PROC("DEP48")=DATA
	quit


	//----------------------------------------------------------------------
LNBL3(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion and Round, table LNBLP.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNBLP",3,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNBLP","DEP49",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP49")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP49")_" FROM LNBLP WHERE BILDT=:BILDT AND TYPE=:TYPE AND CID=:CID",,,.DATA)

	set PROC("DEP49")=DATA
	quit


	//----------------------------------------------------------------------
LNDELP(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNDELP.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNDELP",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNDELP","DEP50",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP50")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP50")_" FROM LNDELP WHERE EFD=:NJD AND TSEQ=:TSEQ AND CID=:CID",,,.DATA)

	set PROC("DEP50")=DATA
	quit


	//----------------------------------------------------------------------
LNDIDE(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNDIDE.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNDIDE",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNDIDE","DEP51",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP51")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP51")_" FROM LNDIDE WHERE EFD=:NJD AND CID=:CID AND BDD=:BDD AND DIDI=:DIDI",,,.DATA)

	set PROC("DEP51")=DATA
	quit


	//----------------------------------------------------------------------
LNFEE(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNFEE.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNFEE",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNFEE","DEP52",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP52")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP52")_" FROM LNFEE WHERE CID=:CID AND FEETYP=:FEETYP",,,.DATA)

	set PROC("DEP52")=DATA
	quit


	//----------------------------------------------------------------------
LNENT(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNENT.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNENT",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNENT","DEP53",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP53")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP53")_" FROM LNENT WHERE CID=:CID AND USESRC=:USESRC",,,.DATA)

	set PROC("DEP53")=DATA
	quit


	//----------------------------------------------------------------------
LNFEED(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNFEED.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNFEED",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNFEED","DEP54",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP54")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP54")_" FROM LNFEED WHERE FEETYP=:FEETYP AND FEESEQ=:FEESEQ AND CID=:CID",,,.DATA)

	set PROC("DEP54")=DATA
	quit


	//----------------------------------------------------------------------
LNAMO(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNAMOAO.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNAMOAO",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNAMOAO","DEP55",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP55")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP55")_" FROM LNAMOAO WHERE CID=:CID AND TYP=:TYP",,,.DATA)

	set PROC("DEP55")=DATA
	quit


	//----------------------------------------------------------------------
LNVRCHG(String COLUMNS,		// Columns List
        String PROC,		// Procedures List
        Number sqlsta,		// SQL Code
        String sqldta,		// SQL Return Data
        Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNVRCHG.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNVRCHG",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNVRCHG","DEP56",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP56")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP56")_" FROM LNVRCHG WHERE ICHND=:ICHND AND CID=:CID",,,.DATA)

	set PROC("DEP56")=DATA
	quit


	//----------------------------------------------------------------------
LNPTCH(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNPTCHG.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNPTCHG",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNPTCHG","DEP57",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP57")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP57")_" FROM LNPTCHG WHERE PCHND=:PCHND AND CID=:CID",,,.DATA)

	set PROC("DEP57")=DATA
	quit


	//----------------------------------------------------------------------
LNRAC(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNRACHG.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNRACHG",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNRACHG","DEP58",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP58")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP58")_" FROM LNRACHG WHERE CID=:CID AND RAND=:RAND",,,.DATA)

	set PROC("DEP58")=DATA
	quit


	//----------------------------------------------------------------------
LNRENEW1(String COLUMNS,	// Columns List
         String PROC,		// Procedures List
         Number sqlsta,		// SQL Code
         String sqldta,		// SQL Return Data
         Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Threshold Conversion Method, table LNRENEW.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNRENEW",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNRENEW","DEP40",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP40")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP40")_" FROM LNRENEW WHERE ROSEQ=:ROSEQ AND CID=:CID",,,.DATA)

	set PROC("DEP40")=DATA
	quit


	//----------------------------------------------------------------------
LNRENEW2(String COLUMNS,	// Columns List
         String PROC,		// Procedures List
         Number sqlsta,		// SQL Code
         String sqldta,		// SQL Return Data
         Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Threshold Conversion Method, table LNRENEW.

	type String DATA,x,X

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNRENEW",2,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNRENEW","DEP44",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP44")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP44")_" FROM LNRENEW WHERE ROSEQ=:ROSEQ AND CID=:CID",,,.DATA)

	set PROC("DEP44")=DATA

	// Create procedures to select product level columns for both the new
        // and old currencies.
	set X=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP44")_" FROM LTYPE WHERE TYPE=:TYPE AND CRCD=:NEWCRCD",,,.DATA) set PROC("DEP79")=DATA
       	set X=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP44")_" FROM LTYPE WHERE TYPE=:TYPE AND CRCD=:OLDCRCD",,,.DATA) set PROC("DEP80")=DATA

	quit


	//----------------------------------------------------------------------
LNDS1(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNDS1.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNDS1",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNDS1","DEP60",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP60")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP60")_" FROM LNDS1 WHERE SDD=:SDD AND CID=:CID",,,.DATA)

	set PROC("DEP60")=DATA
	quit


	//----------------------------------------------------------------------
LNPS(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNPS1.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNPS1",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNPS1","DEP92",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP92")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP92")_" FROM LNPS1 WHERE PDD=:PDD AND CID=:CID",,,.DATA)

	set PROC("DEP92")=DATA
	quit


	//----------------------------------------------------------------------
LNYR(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table LNYR.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNYR",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNYR","DEP69",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP69")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP69")_" FROM LNYR WHERE YEAR=:YEAR AND CID=:CID",,,.DATA)

	set PROC("DEP69")=DATA
	quit


	//----------------------------------------------------------------------
EFTPAY(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion// table EFTPAY.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("EFTPAY",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("EFTPAY","DEP66",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP66")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP66")_" FROM EFTPAY WHERE CID=:CID AND SEQ=:SEQ",,,.DATA)

	set PROC("DEP66")=DATA
	quit


	//----------------------------------------------------------------------
DARCB(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table DAYENDDARCB.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DAYENDDARCB",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DAYENDDARCB","DEP61",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP61")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP61")_" FROM DAYENDDARCB WHERE NPDT=:NJD AND ACN=:ACN AND CID=:CID",,,.DATA)

	set PROC("DEP61")=DATA
	quit


	//----------------------------------------------------------------------
DARCBF(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table DAYENDDARCBF.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DAYENDDARCBF",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DAYENDDARCBF","DEP91",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP91")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP91")_" FROM DAYENDDARCBF WHERE NPDT=:NJD AND ACN=:ACN AND CID=:CID",,,.DATA)

	set PROC("DEP91")=DATA
	quit


	//----------------------------------------------------------------------
DLNRP(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table DAYENDLNRP.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DAYENDLNRP",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DAYENDLNRP","DEP62",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP62")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP62")_" FROM DAYENDLNRP WHERE PROVNPDT=:NJD AND CID=:CID",,,.DATA)

	set PROC("DEP62")=DATA
	quit


	//----------------------------------------------------------------------
DNEG(String COLUMNS,		// Columns List
     String PROC,		// Procedures List
     Number sqlsta,		// SQL Code
     String sqldta,		// SQL Return Data
     Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table DAYENDDNEG.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DAYENDNEG",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DAYENDNEG","DEP63",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP63")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP63")_" FROM DAYENDNEG WHERE EFD=:NJD AND CID=:CID",,,.DATA)

	set PROC("DEP63")=DATA
	quit


	//----------------------------------------------------------------------
DRCLS(String COLUMNS,		// Columns List
      String PROC,		// Procedures List
      Number sqlsta,		// SQL Code
      String sqldta,		// SQL Return Data
      Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table DAYENDRCLS.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("DAYENDRCLS",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("DAYENDRCLS","DEP64",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP64")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP64")_" FROM DAYENDRCLS WHERE TJD=:NJD AND BOO=:BOO AND CRCD=:CRCD AND CID=:CID",,,.DATA)

	set PROC("DEP64")=DATA
	quit


	//----------------------------------------------------------------------
PAA(String COLUMNS,		// Columns List
    String PROC,		// Procedures List
    Number sqlsta,		// SQL Code
    String sqldta,		// SQL Return Data
    Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table PAA

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("PAA",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("PAA","DEP72",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP72")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP72")_" FROM PAA WHERE EFD=:EFD AND CID=:CID",,,.DATA)

	set PROC("DEP72")=DATA
	quit


	//----------------------------------------------------------------------
WTHAUT(String COLUMNS,		// Columns List
       String PROC,		// Procedures List
       Number sqlsta,		// SQL Code
       String sqldta,		// SQL Return Data
       Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion, table WTHAUT

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("WTHAUT",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("WTHAUT","DEP70",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP70")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP70")_" FROM WTHAUT WHERE AUTNUM=:AUTNUM AND CID=:CID",,,.DATA)

	set PROC("DEP70")=DATA
	quit


	//----------------------------------------------------------------------
LNCYCDLD(String COLUMNS,	// Columns List
         String PROC,		// Procedures List
         Number sqlsta,		// SQL Code
         String sqldta,		// SQL Return Data
         Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion and Round, table LNCYCDLD.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNCYCDLD",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNCYCDLD","DEP98",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP98")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP98")_" FROM LNCYCDLD WHERE CID=:CID AND TYP=:TYP",,,.DATA)

	set PROC("DEP98")=DATA
	quit


	//----------------------------------------------------------------------
LNCYCINS(String COLUMNS,	// Columns List
         String PROC,		// Procedures List
         Number sqlsta,		// SQL Code
         String sqldta,		// SQL Return Data
         Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion and Round, table LNCYCINS.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNCYCINS",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNCYCINS","DEP99",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP99")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP99")_" FROM LNCYCINS WHERE CID=:CID AND TYP=:TYP",,,.DATA)

	set PROC("DEP99")=DATA
	quit


	//----------------------------------------------------------------------
LNCYCMSC(String COLUMNS,	// Columns List
         String PROC,		// Procedures List
         Number sqlsta,		// SQL Code
         String sqldta,		// SQL Return Data
         Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion and Round, table LNCYCMSC.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNCYCMSC",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNCYCMSC","DEP100",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP100")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP100")_" FROM LNCYCMSC WHERE CID=:CID AND TYP=:TYP",,,.DATA)

	set PROC("DEP100")=DATA
	quit


	//----------------------------------------------------------------------
LNCYCPTS(String COLUMNS,	// Columns List
         String PROC,		// Procedures List
         Number sqlsta,		// SQL Code
         String sqldta,		// SQL Return Data
         Number sqlcnt)		// SQL Record Count
	//----------------------------------------------------------------------

	// Straight Conversion and Round, table LNCYCPTS.

	type String DATA,x

	set (sqlcnt,sqlsta)=0
	set sqldta=""	

	do SQLOPEN("LNCYCPTS",1,.sqlsta,.sqldta,.sqlcnt)
	do SQLFETCH("LNCYCPTS","DEP101",.COLUMNS(),.sqlsta,.sqldta,.sqlcnt) if COLUMNS("DEP101")="" quit
	set x=$$^SQL("CREATE PROCEDURE * AS SELECT "_COLUMNS("DEP101")_" FROM LNCYCPTS WHERE CID=:CID AND TYP=:TYP",,,.DATA)

	set PROC("DEP101")=DATA
	quit


	//----------------------------------------------------------------------
rate(String EMUCRCD,		// Euro Currency Code
     String crcd,		// Currency Code
     String cache(,,))		// Currency Exchange Rate Cache
	//----------------------------------------------------------------------

	// Cache currency exchange rate

	type Number RATE
	//N CC,EQVAMT,EURCHK,EXCAMT
	//N MAXRATE,MINRATE,MULTIPLY,RATE,VARIANCE

	do EXC^CRCDUTL(EMUCRCD,crcd,1,1,2,"00")

	// Cache currency exchange rates
        set cache("CRCD",EMUCRCD,crcd)=RATE
        set cache("CRCD",crcd,EMUCRCD)=1/RATE
	quit


	//----------------------------------------------------------------------
SQLOPEN(String FID,		// File ID
        Number CONVTYP,		// Conversion Type
        Number sqlsta,		// SQL Code
        String sqldta,		// SQL Return Data
        Number sqlcnt)		// SQL Record Count        
	//----------------------------------------------------------------------

	/*
	Open cursor to fetch column names from CTBLEURO
	
	ARGUMENTS:
		.FID		File ID			/TYP=T/REQ/MECH=VAL
		.CONVTYP	Conversion type		/TYP=N/REQ/MECH=VAL
		.sqlsta 	SQL Code 		/TYPE=N/MECH=REF:W
		.sqldta		SQL return data 	/TYPE=T/MECH=REF:W
		.sqlcnt		SQL record count	/TYPE=N/MECH=REF:W
	*/
	
	do OPEN^SQL("FI AS SELECT DI FROM CTBLEURO WHERE FID='"_FID_"' AND CONVTYP="_CONVTYP_" ORDER BY DI",,.sqlsta,.sqldta,.sqlcnt)
	quit


	//----------------------------------------------------------------------
SQLFETCH(String table,		// Table Name
         String list,		// Column List
         String COLUMNS,	// Columns List
         Number sqlsta,		// SQL Code
         String sqldta,		// SQL Return Data
         Number sqlcnt)		// SQL Record Count         
	//----------------------------------------------------------------------

	// Fetch column names from CTBLEURO
	
	type Number cnt
	type String columns

	set COLUMNS(list)=""
	set columns=""

	quit:sqlsta<0!(sqlsta=100)
	for cnt=1:1 do FETCH^SQL("FROM FI",,.sqlsta,.sqldta,.sqlcnt) quit:sqlcnt=0  do {  quit:sqlsta=100
		set columns.piece(",",cnt)=sqldta
		}

	set COLUMNS(list)=columns

	quit


	//----------------------------------------------------------------------
CACHE(String TABLE,		// Table Name
      String COLUMNS,		// Columns
      Number MET,		// Conversion Method
      String cache(,,),		// cache Array
      String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	/*
	Cache column attributes from DBTBL1D
	
	Initialize cache("EUROCNV",) to contain complete list of all DEP and
	LN columns that need to be converted, and their conversion method,
	data type, and decimal precision.
	*/
	
	type Number i
	type String col
	
	for i=1:1 set col=COLUMNS.piece(",",i) quit:col=""  do {
		type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS=""SYSDEV"",FID=:TABLE,DI=:col")

		set TMPEUR(TABLE,col)=dbtbl1d.typ_"|"_dbtbl1d.dec_"||"_MET_"|"_dbtbl1d.sfd
		}

	do TMPEUR(.cache(),.TMPEUR())

	quit


	//----------------------------------------------------------------------
public TMPEUR(String cache(,,),		// cache Array
              String TMPEUR(,))		// TMPEUR Array
	//----------------------------------------------------------------------

	// Load TMPEUR array to cache array.

	type String col,tbl

	set (tbl,col)=""
	for  set tbl=TMPEUR(tbl).order() quit:tbl=""  do {
		for  set col=TMPEUR(tbl,col).order() quit:col=""  do {
			set cache("EUROCNV",tbl,col)=TMPEUR(tbl,col)
			}
		}
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60401^67460^Dan Russell^60934"	// Signature - LTD^TIME^USER^SIZE
