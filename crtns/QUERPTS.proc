QUERPTS	//Job scheduler reports
	/*
	ORIG:  Mike Winigrad (6969) - 12/08/86

	---------- Revision History -------------------------------------------
	  
	01/03/05 - RussellDS - CR13642
		   Eliminate PSL warnings.  Correct miscellaneous PSL related
		   errors.
		   
		   Removed old revision history.
	*/

	quit
	

DAILY	// Daily history for job scheduler

	type public Boolean ER

	type String PGM, RID

	set RID = "SCA025" 
	do ^URID

	if PGM.isNull() do { quit
		type String ET
		// Invalid report linkage <<RID>>
		set ET = "INVLDRPT" 
		set ER = 1 
		do DSPBP^UTLERR 
	}

	do ^@PGM
	
	quit


STATUS	// Status report for job scheduler
	
	type public Boolean ER

	type String PGM, RID

	set RID = "SCA026" 
	do ^URID 

	if PGM.isNull() do { quit
		type String ET
		// Invalid report linkage <<RID>>
		set ET = "INVLDRPT" 
		set ER = 1 
		do DSPBP^UTLERR 
	}

	do ^@PGM
	
	quit


JOBPOST	// Post processor for report SCA026

	type public Number BCHNUM, JOBNUM
	type public String C(), D(), IO, P, P()

	type Number I
	
	kill P, C, D

        type ResultSet rsqueuep = Db.select("SEQ",  "QUEUEP","BCHNUM=:BCHNUM AND JOBNUM=:JOBNUM")
        
        if rsqueuep.isEmpty() set P(1) = "NONE"
        else  do {
	
		type String PR(), Z, ZFUNC
		
		type RecordQUEUEJ queuej = Db.getRecord("QUEUEJ", "BCHNUM=:BCHNUM,JOBNUM=:JOBNUM")
		
		set ZFUNC = queuej.fun
		
		type RecordSCATBL scatbl = Db.getRecord("SCATBL", "FN=:ZFUNC")
		
		set Z = scatbl.pgm_"|"_scatbl.prp_"|"_scatbl.pop

		if (Z.isLike("%DRV^URID%") ! Z.isLike("%RPT^URID%")) do {
    
			// QWIK Report - only device parameter
		 	if Z.isLike("%QRPT^URID%") do {
				// Device:
				set PR(1)="* "_$$^MSG(829)
			}
			
			else  do {
				
				type Number Z

				// Protect IO from a report Pre-processor
				type String ZIO = IO
				type String IO = ZIO
				
				do FUN^DBSQUE(ZFUNC, 0, .PR())
				
				for Z = 1:1 quit:(PR(Z).data() = 0)  set PR(Z)=PR(Z)_":"
			}
		}
	
		if (PR(0).order().isNull()) do {
			
			type Number J
			
			// Get last parameter
			type ResultSet rsqp2 = Db.select("MAX(SEQ)", "QUEUEP", "BCHNUM=:BCHNUM AND JOBNUM=:JOBNUM")
			
			if rsqp2.next() set I = rsqp2.getCol(1)
			else  set I = 0

			// Function Run-time Prompt:
			for J = 1:1:I set PR(J) = $$^MSG(4593)
		}

		//Connect parameters
		for I = 1:1 quit:(PR(I).data() = 0)  do {
			
			type RecordQUEUEP queuep = Db.getRecord("QUEUEP", "BCHNUM=:BCHNUM,JOBNUM=:JOBNUM,SEQ=:I", 1)
			
			set P(I) = PR(I).justify(40,1)_" "_queuep.param
		}
        }
	
	// Dependency info
	for I = 1:1:3 set D(I) = ""

        type ResultSet rsqueued = Db.select("BATCH,JOB", "QUEUED", "BCHNUM=:BCHNUM AND JOBNUM=:JOBNUM")

        if rsqueued.isEmpty() set D(1) = "NONE"
	else  do {
		
		type Number EL, LEN, LV
		
		set P = ""
		while rsqueued.next() set P = P_rsqueued.getCol("BATCH")_"/"_rsqueued.getCol("JOB")_","

		set P = P.extract(1,P.length()-1)
		set LV = 1 
		set EL = 1 
		set LEN = 0
		for I = 1:1 do { quit:(LV = 4)
			
			set LEN = LEN + P.piece(",", I).length()
			set D(LV) = P.piece(",", EL, I - 1)
			if (LEN > (66 - I)) do {
 				set LV = LV + 1
				set EL = I 
				set LEN = P.piece(",",I).length()
			}
		}
	}

	// Conditional info
	for I = 1:1:3 set C(I) = ""

	type ResultSet rsqueuec=Db.select("BATCH,JOB", "QUEUEC", "BCHNUM=:BCHNUM AND JOBNUM=:JOBNUM")
	
        if rsqueuec.isEmpty() set D(1)="NONE"
        else  do {
        	
        	type Number EL, LEN, LV
       
		set P = "" 
		while rsqueuec.next() set P = P_rsqueuec.getCol("BATCH")_"/"_rsqueuec.getCol("JOB")_","

		set P = P.extract(1,P.length()-1)
		set LV = 1 
		set EL = 1 
		set LEN = 0
		for I = 1:1 do { quit:(LV = 4)
			
			set LEN = LEN + P.piece(",", I).length()
			set C(LV) = P.piece(",", EL, I - 1)
			if (LEN > (66 - I)) do {
 				set LV = LV + 1
				set EL = I 
				set LEN = P.piece(",",I).length()
			}
		}
	}
	
	quit

vSIG()	quit "59903^67985^Dan Russell^3632"	// Signature - LTD^TIME^USER^SIZE
