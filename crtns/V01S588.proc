V01S588(%ProcessMode,RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL())   // -  - SID= <TRNGRPL1> Build Loan Fee Transaction Group Table 
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
 // This screen is used to create, maintain, or display the transaction code groups
 // used within loan fee plans to define the transactions for which fees will be
 // charged or to track transaction code usage by account.  The screen supports the
 // entry of a single transaction code or ranges of transaction codes on a single
 // line.  For example, the entry ATM* would include any transaction beginning with
 // ATM; the entry A-BD would include any transaction beginning with A through BD.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="TRNGRPL1",VPGM=$T(+0),VSNAME="Build Loan Fee Transaction Group Table "
 set VFSN("UTBLTRNGRPL")="zTGL",VFSN("UTBLTRNGRPLT")="zfUTBLTRNL"
 set vPSL=1
 set KEYS(1)=fUTBLTRNL.TRNGRP
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=15 do VPR(.fUTBLTRNL,.TGL()),VDA1(.fUTBLTRNL,.TGL()),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fUTBLTRNL,.TGL()),VPR(.fUTBLTRNL,.TGL()),VDA1(.fUTBLTRNL,.TGL())
 if %ProcessMode do VLOD(.fUTBLTRNL,.TGL()) quit:$G(ER)  do VPR(.fUTBLTRNL,.TGL()),VDA1(.fUTBLTRNL,.TGL())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLTRNL,.TGL())
 type Number ptr
 set ptr=""
 for  set ptr = TGL(ptr).order() quit:ptr.isNull()  do {
     if TGL(ptr).TRNCD="" kill TGL(ptr)
     }
	quit


VNEW(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL()) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLTRNL,.TGL())
 do VLOD(.fUTBLTRNL,.TGL())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=15
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL()) // Display screen prompts
 set VO="3||13|"
 set VO(0)="|0"
 set VO(1)=$C(3,7,17,0,0,0,0,0,0,0)_"01T Tran Code Group:"
 set VO(2)=$C(4,11,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(3)=$C(6,31,9,2,0,0,0,0,0,0)_"01TTran Code"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL())  // Display screen data
 new V
 //
 set VO="6|4|13|"
 set VO(4)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(5)=$C(3,25,8,2,0,0,0,0,0,0)_"01T"_$E(fUTBLTRNL.TRNGRP,1,8)
 set VO(6)=$C(4,25,20,2,0,0,0,0,0,0)_"00T"_$E(fUTBLTRNL.DESC,1,20)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=8 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLTRNL,.TGL())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'TGL(I).getPointer() do {
     set TGL(I)=Class.new("RecordUTBLTRNGRPL","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY,24,25,2,0,0,0,0,0,0)_"01T"_$E(TGL(I).TRNCD,1,25)
 set DY=DY+1,VX=VX+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=2,%MOD=1,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=7+%REPEAT,BLKSIZ=(25*%REPEAT)+28,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLTRNGRPLT,UTBLTRNGRPL"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLTRNGRPL")="zTGL",VFSN("UTBLTRNGRPLT")="zfUTBLTRNL"
 //
 for I=4:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,24,8)_"21T12401|1|[UTBLTRNGRPLT]TRNGRP"
 set %TAB(2)=$C(3,24,20)_"01T12401||[UTBLTRNGRPLT]DESC"
 set %TAB(3)=$C(7,23,25)_"20T12402|1|[UTBLTRNGRPL]TRNCD|[TRN]||do VP1^V01S588(.fUTBLTRNL,.TGL)"
 do VTBL(.fUTBLTRNL,.TGL())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL()) //
 /*
  ---- Revision History ------------------------------------------------
 
        01/16/06 - TITOVE - CR 18904
                   Converted into PSL and added message 1498.
 */
 type public String X

 if X.isNull() quit

 type RecordTRN trn = Db.getRecord("TRN", "ETC = :X", 1)
 
 // Invalid transaction code ~p1
 if 'trn.getMode() do Runtime.setErrMSG("TRN",1498,X) quit

 // Transaction code must be in the loan transaction class
 if (trn.cls '= "L") do Runtime.setErrMSG("UTBLTRNGRPL",2980) quit
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLTRNGRPLT fUTBLTRNL
 type Public RecordUTBLTRNGRPL TGL()
 do VPR(.fUTBLTRNL,.TGL())
 do VDA1(.fUTBLTRNL,.TGL())
 do ^DBSPNT()
 quit

VW(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL())
 do VDA1(.fUTBLTRNL,.TGL())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLTRNGRPLT fUTBLTRNL,RecordUTBLTRNGRPL TGL())
 do VDA1(.fUTBLTRNL,.TGL())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLTRNGRPLT fUTBLTRNL
 type Public RecordUTBLTRNGRPL TGL()
 do VDA1(.fUTBLTRNL,.TGL())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLTRNGRPLT fUTBLTRNL
 if sn="UTBLTRNGRPLT" do vSET1(.fUTBLTRNL,di,X)
 type Public RecordUTBLTRNGRPL TGL()
 if sn="UTBLTRNGRPL" do vSET2(TGL(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLTRNGRPLT fUTBLTRNL,di,X)
 do fUTBLTRNL.setAuditFlag(1)
 set fUTBLTRNL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLTRNGRPL TGL,di,X)
 do TGL.setAuditFlag(1)
 set TGL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLTRNGRPLT fUTBLTRNL
 if fid="UTBLTRNGRPLT" quit $$vREAD1(.fUTBLTRNL,di)
 type Public RecordUTBLTRNGRPL TGL()
 if fid="UTBLTRNGRPL" quit $$vREAD2(TGL(I(1)),di)
 quit ""
vREAD1(RecordUTBLTRNGRPLT fUTBLTRNL,di)
 quit fUTBLTRNL.@di
vREAD2(RecordUTBLTRNGRPL TGL,di)
 quit TGL.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
