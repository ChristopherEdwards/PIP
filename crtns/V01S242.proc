V01S242(%ProcessMode,RecordDEAL1 fDEAL1)   // -  - SID= <DEAL1SI6> Deal Settlement Instruction Screen 6
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="DEAL1SI6",VPGM=$T(+0),VSNAME="Deal Settlement Instruction Screen 6"
 set VFSN("DEAL1")="zfDEAL1"
 set vPSL=1
 set KEYS(1)=fDEAL1.NOINT
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fDEAL1),VDA1(.fDEAL1),^DBSPNT()

 if '%ProcessMode do VNEW(.fDEAL1),VPR(.fDEAL1),VDA1(.fDEAL1)
 if %ProcessMode do VLOD(.fDEAL1) quit:$G(ER)  do VPR(.fDEAL1),VDA1(.fDEAL1)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDEAL1)
	quit


VNEW(RecordDEAL1 fDEAL1) // Initialize arrays if %O=0
 
 do VDEF(.fDEAL1)
 do VLOD(.fDEAL1)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordDEAL1 fDEAL1)
 if fDEAL1.EDT="" set fDEAL1.EDT=TJD
 if fDEAL1.MT202PRI="" set fDEAL1.MT202PRI="N"
 if fDEAL1.MT210PRI="" set fDEAL1.MT210PRI="N"
 if fDEAL1.MT300PRI="" set fDEAL1.MT300PRI="N"
 if fDEAL1.STATUS="" set fDEAL1.STATUS=2
 if fDEAL1.TDT="" set fDEAL1.TDT=TJD
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordDEAL1 fDEAL1) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDEAL1 fDEAL1) // Display screen prompts
 set VO="9||13|"
 set VO(0)="|"
 set VO(1)=$C(3,24,31,2,0,0,0,0,0,0)_"01TBroker/Counterparty Information"
 set VO(2)=$C(5,3,15,0,0,0,0,0,0,0)_"01TBroker Id (88):"
 set VO(3)=$C(5,31,4,0,0,0,0,0,0,0)_"01TOpt:"
 set VO(4)=$C(11,3,8,0,0,0,0,0,0,0)_"01TBroker's"
 set VO(5)=$C(12,3,15,0,0,0,0,0,0,0)_"01TCommiss. (71F):"
 set VO(6)=$C(14,3,14,0,0,0,0,0,0,0)_"01TCounterparty's"
 set VO(7)=$C(15,3,15,0,0,0,0,0,0,0)_"01TReference(26H):"
 set VO(8)=$C(17,3,8,0,0,0,0,0,0,0)_"01TBroker's"
 set VO(9)=$C(18,3,15,0,0,0,0,0,0,0)_"01TReference (88):"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordDEAL1 fDEAL1)  // Display screen data
 new V
 //
 set VO="20|10|13|"
 set VO(10)=$C(1,1,80,3,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(11)=$C(5,19,11,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKID,1,11)
 set VO(12)=$C(5,36,1,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKIDOPT,1,1)
 set VO(13)=$C(5,39,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKID1,1,40)
 set VO(14)=$C(6,39,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKID2,1,40)
 set VO(15)=$C(7,39,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKID3,1,40)
 set VO(16)=$C(8,39,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKID4,1,40)
 set VO(17)=$C(9,39,40,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKID5,1,40)
 set VO(18)=$C(12,19,18,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKCM,1,18)
 set VO(19)=$C(15,19,16,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.CNTPREF,1,16)
 set VO(20)=$C(18,19,16,2,0,0,0,0,0,0)_"00T"_$E(fDEAL1.BROKREF,1,16)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordDEAL1 fDEAL1)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=10,VPT=1,VPB=18,PGM=$T(+0),DLIB="SYSDEV",DFID="DEAL1"
 set OLNTB=18019
 
 set VFSN("DEAL1")="zfDEAL1"
 //
 // 
	
	
 set %TAB(1)=$C(4,18,11)_"00T12401|1|[DEAL1]BROKID|[UTBLCORRE]||do VP1^V01S242(.fDEAL1)"
 set %TAB(2)=$C(4,35,1)_"00T12407|1|[DEAL1]BROKIDOPT|,D#D,J#J,A#Institution with account||do VP2^V01S242(.fDEAL1)"
 set %TAB(3)=$C(4,38,40)_"00T12402|1|[DEAL1]BROKID1|||do VP3^V01S242(.fDEAL1)"
 set %TAB(4)=$C(5,38,40)_"00T12403|1|[DEAL1]BROKID2|||do VP4^V01S242(.fDEAL1)"
 set %TAB(5)=$C(6,38,40)_"00T12404|1|[DEAL1]BROKID3|||do VP5^V01S242(.fDEAL1)"
 set %TAB(6)=$C(7,38,40)_"00T12405|1|[DEAL1]BROKID4|||do VP6^V01S242(.fDEAL1)"
 set %TAB(7)=$C(8,38,40)_"00T12406|1|[DEAL1]BROKID5|||do VP7^V01S242(.fDEAL1)"
 set %TAB(8)=$C(11,18,18)_"00T12401|1|[DEAL1]BROKCM|||do VP8^V01S242(.fDEAL1)"
 set %TAB(9)=$C(14,18,16)_"00T12401|1|[DEAL1]CNTPREF|||do VP9^V01S242(.fDEAL1)"
 set %TAB(10)=$C(17,18,16)_"00T12401|1|[DEAL1]BROKREF|||do VP10^V01S242(.fDEAL1)"
 do VTBL(.fDEAL1)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordDEAL1 fDEAL1) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordDEAL1 fDEAL1) //
	/* If this field is filled in, default the option field to A, and 
	   set the information lines to blanks.  This is done so that if the 
	   user had filled in information using option D or J, and then goes 
	   back to use this field (and change the option to A), they will see 
	   that that the information fields are not used with option A, except
	   possibly the first one, for an account number.

	*/

	type public String X
	type public Boolean ER

	if X.isNull() quit

	type String line1, line2, line3, line4, line5, SAVX
	set (line1,line2,line3,line4,line5)=""

	set fDEAL1.brokid1=line1
	set fDEAL1.brokid2=line2
	set fDEAL1.brokid3=line3
	set fDEAL1.brokid4=line4
	set fDEAL1.brokid5=line5

	do DEFAULT^DBSMACRO("DEAL1.BROKID1",line1)
	do DEFAULT^DBSMACRO("DEAL1.BROKID2",line2)
	do DEFAULT^DBSMACRO("DEAL1.BROKID3",line3)
	do DEFAULT^DBSMACRO("DEAL1.BROKID4",line4)
	do DEFAULT^DBSMACRO("DEAL1.BROKID5",line5)

	do DISPLAY^DBSMACRO("DEAL1.BROKID1")
	do DISPLAY^DBSMACRO("DEAL1.BROKID2")
	do DISPLAY^DBSMACRO("DEAL1.BROKID3")
	do DISPLAY^DBSMACRO("DEAL1.BROKID4")
	do DISPLAY^DBSMACRO("DEAL1.BROKID5")

	set SAVX=X

	set X=fDEAL1.brokid1 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.BROKID1") quit
	set X=fDEAL1.brokid2 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.BROKID2") quit
	set X=fDEAL1.brokid3 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.BROKID3") quit
	set X=fDEAL1.brokid4 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.BROKID4") quit
	set X=fDEAL1.brokid5 do CHECKUP^SWFTEDIT if ER do GOTO^DBSMACRO("DEAL1.BROKID5") quit

	set X=SAVX
 
	do DEFAULT^DBSMACRO("DEAL1.BROKIDOPT","A")
	do GOTO^DBSMACRO("DEAL1.BROKID1")

	quit
VP2(RecordDEAL1 fDEAL1) //
	type public String X
	type public Boolean ER

	// Complete previous field to select option A
	if (X="A") &(fDEAL1.brokid.isNull()) do Runtime.setErrMSG("DEAL1",2746) quit:ER

	quit

VP3(RecordDEAL1 fDEAL1) //
	/* Check for the presence of option A for Broker's Identification, 
	   and ensure that if option A is being used, this field must begin 
	   with a slash / or must be empty.
	   If the user does fill in something for this field, and option A 
	   is being used, skip the rest of the information lines by jumping 
	   to Broker's Commission.
	*/

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	// When using this line for option A, enter an account number beginning with /
	if (fDEAL1.brokidopt="A") & ('X.extract()="/") & ('X.isNull()) do Runtime.setErrMSG("DEAL1",2631) quit:ER

	if fDEAL1.brokidopt="A" do GOTO^DBSMACRO("DEAL1.BROKCM")

	quit

VP4(RecordDEAL1 fDEAL1) //
	// This post-processor checks for the presence of invalid characters for
	// SWIFT and prevents the field from being used with option A.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if fDEAL1.brokidopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.BROKID2")
		do GOTO^DBSMACRO("DEAL1.BROKCM")
		}

	quit

VP5(RecordDEAL1 fDEAL1) //
	// This post-processor checks for the presence of invalid characters for
	// SWIFT and prevents the field from being used with option A.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER
	
	if fDEAL1.brokidopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.BROKID3")
		do GOTO^DBSMACRO("DEAL1.BROKCM")
		}
	else  do GOTO^DBSMACRO("DEAL1.BROKID4")		

	quit

VP6(RecordDEAL1 fDEAL1) //
	// This post-processor checks for the presence of invalid characters for
	// SWIFT and prevents the field from being used with option A.
	
	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if fDEAL1.brokidopt="A" do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.BROKID4")
		do GOTO^DBSMACRO("DEAL1.BROKCM")
		}
	
	quit

VP7(RecordDEAL1 fDEAL1) //
	/* Check for the presence of invalid characters for SWIFT and 
	   prevent the field from being used with option A or D.
	   Also, if the option field for Broker's Identification is left blank,
	   but the information lines have been filled in, the option field will
	   be defaulted to option D, or option J, depending on whether the last
	   line has been filled in.
	   If the last line has been filled in, the option is defaulted to J.
	*/

	type public String X
	type public Boolean ER
	type String BIGSTRING2

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	if (fDEAL1.brokidopt="D") ! (fDEAL1.brokidopt="A") do {
		set X=""
		do DISPLAY^DBSMACRO("DEAL1.BROKID5")
		}

	set BIGSTRING2=fDEAL1.brokid1_fDEAL1.brokid2_fDEAL1.brokid3_fDEAL1.brokid4

	if (fDEAL1.brokidopt.isNull()) & (X.isNull()) & ('BIGSTRING2.isNull()) do {
		set fDEAL1.brokidopt="D"
		do DISPLAY^DBSMACRO("DEAL1.BROKIDOPT")
		}

	if (fDEAL1.brokidopt.isNull()) & ('X.isNull()) do {
		set fDEAL1.brokidopt="J"
		do DISPLAY^DBSMACRO("DEAL1.BROKIDOPT")
		}

	quit
VP8(RecordDEAL1 fDEAL1) //
	// Checks for invalid characters for SWIFT.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	quit
VP9(RecordDEAL1 fDEAL1) //
	// Checks for invalid characters for SWIFT.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	quit
VP10(RecordDEAL1 fDEAL1) //
	// Checks for invalid characters for SWIFT.

	type public String X
	type public Boolean ER

	if 'X.isNull() do CHECKUP^SWFTEDIT quit:ER

	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDEAL1 fDEAL1
 do VPR(.fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT()
 quit

VW(RecordDEAL1 fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDEAL1 fDEAL1)
 do VDA1(.fDEAL1)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDEAL1 fDEAL1
 do VDA1(.fDEAL1)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordDEAL1 fDEAL1
 if sn="DEAL1" do vSET1(.fDEAL1,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordDEAL1 fDEAL1,di,X)
 do fDEAL1.setAuditFlag(1)
 set fDEAL1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordDEAL1 fDEAL1
 if fid="DEAL1" quit $$vREAD1(.fDEAL1,di)
 quit ""
vREAD1(RecordDEAL1 fDEAL1,di)
 quit fDEAL1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
