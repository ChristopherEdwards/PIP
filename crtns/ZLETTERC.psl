ZLETTERC //Batch ZLETTERCKPNT - Check Letters printing
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:09 - joynerd
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - ZLETTERCKPNT Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("ZLETTERCKPNT")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("ZLETTERCKPNT") quit
 do JOBMGR^BCHUTL(%FN,"ZLETTERCKPNT",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("ZLETTERCKPNT")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(TJD,CKTYP,CKSEQ) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("ZLETTERCKPNT","*","",TJD.get()_","_CKTYP.get()_","_CKSEQ.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"ZLETTERCKPNT",TJD.get()_","_CKTYP.get()_","_CKSEQ.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"ZLETTERCKPNT",TJD.get()_","_CKTYP.get()_","_CKSEQ.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,TJD,CKTYP,CKSEQ)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("ZLETTERCKPNT","*","",TJD.get()_","_CKTYP.get()_","_CKSEQ.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"ZLETTERCKPNT",TJD.get()_","_CKTYP.get()_","_CKSEQ.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,TJD,CKTYP,CKSEQ) //
        type ResultSet offsite=Db.select("OFFSPNT","UTBLCHKS")
       	while offsite.next()  do {
        	type Boolean OFFSPNT
                set OFFSPNT=offsite.getCol("OFFSPNT")
                if OFFSPNT=1  do CHKSET(OFFSPNT)
                }
                quit 
               
CHKSET(OFFSPNT)                
	
	type Number XCKNO
	type String CKTYP
	
        type ResultSet chkset=Db.select("CHKS,NCHKPNUM","UTBLCHKS","OFFSPNT=:OFFSPNT")
        while chkset.next()  do {
		set CKTYP=chkset.getCol("CHKS")
		set XCKNO=chkset.getCol("NCHKPNUM")
		if (CKTYP="CDWITH")!(CKTYP="LNOVPM")  do XPDO(CKTYP)
                }
                quit

XPDO(CKTYP)

	type public Date XTJD
	type public Number XCKNO
	
	type Number TAMT,CKNO,RCID
	
        type ResultSet rs=Db.select("TAMT,CID","XPDO","TJD=:XTJD AND CKTYP=:CKTYP")
        while rs.next()  do {
                set TAMT=rs.getCol("TAMT")
                set CKNO=XCKNO
                set RCID=rs.getCol("CID")
                do ACNI(RCID,CKTYP,TAMT)
		}		
	
	quit

ACNI(RCID,CKTYP,TAMT)
	
	type ResultSet acn=Db.select("ACN,TYPE,TITLE2","ACN","CID=:RCID")  
        
        while acn.next()  do {
		type Number CID,XACN,XTYPE
		type String TITLE,XLETCD   
	
	        set XACN=acn.getCol("ACN")
	        set XTYPE=acn.getCol("TYPE")
	        set TITLE=acn.getCol("TITLE2")
	        set CID=RCID
	        if CKTYP="CDWITH" set XLETCD="H330"
	        if CKTYP="LNOVPM" set XLETCD="H331"
	        do FILE(XACN,CID,XLETCD,TAMT,TITLE,XTYPE)
		}
        quit	
        				
FILE(XACN,CID,XLETCD,TAMT,TITLE,XTYPE)
	
	type public Date dDATE,XTJD
	type String HEADER,TITLE2,ADDR,XREC
	 
        type RecordZLETTER zlet=Db.getRecord("ZLETTER","TJD=:XTJD,CID=:CID,LETCD=:XLETCD,SEQ=1")
        if 'zlet.getMode() do {
        	set ADDR=$$ADDR^ZLETTERU(XACN)
	        set HEADER=$$HEADER^ZLETTERU(XTYPE,XLETCD,1,CID,XACN)
        	set TITLE2=TITLE
	        set XREC=HEADER_dDATE_ADDR_CID_TITLE2_TAMT
	       	do FILE^ZLETTERU(CID,XLETCD,1,XREC)
		}

        quit
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,TJD,CKTYP,CKSEQ
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set TJD=vRECORD.piece($C(9),1)
 set CKTYP=vRECORD.piece($C(9),2)
 set CKSEQ=vRECORD.piece($C(9),3)
 do vPROC(TJD,CKTYP,CKSEQ)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,TJD,CKTYP,CKSEQ
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+31>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
        
        type public Date XTJD       
        
	set XTJD=%SystemDate-1

 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("TJD,CKTYP,CKSEQ","XPDO","TJD=:XTJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
        type public Date XTJD
        
        type Date dDATE
        type String XLETCD,XLETCD1
        
	set XTJD=XTJD.get(%SystemDate)
        set dDATE=XTJD.toString("MMDDYEAR")
        set XLETCD="H330"
        set XLETCD1="H331"

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
	
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
