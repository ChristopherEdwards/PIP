R01S129	// SCA060 - RSP Account Owners over Age 70 1/2
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 09/10/2007 15:39 - root

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String MINDAT,TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date ASOF=TJD.get()
	type Number MAXAGE

	set RID="SCA060"
	set RN="RSP Account Owners over Age 70 1/2 "
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("ASOF")="|10|||||D MINDATE^IRADBS||D|Age 70 1/2 as of (Date)|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("MAXAGE")="|5|||||||$|Maximum age (as of above date)||||2|"

	set %READ="IO/REQ,ASOF#1,MAXAGE#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=33
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String MINDAT,TJD
	type public Date ASOF
	type public Number MAXAGE
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,EMDATE,IRAEM,RID,RN,TCT,TYPDES,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA060",RN="RSP Account Owners over Age 70 1/2 "
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA060","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DEP]ACN#1#12,[CIF]LNM#15#20,[CIF]DOB#36#10,[DEP]IRA#64#2,[DEP]CID#79#12,[DEP]TYPE#94#4,[DEP]BAL#103#12,[DEP]IRN#120#8"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"DEP.STAT NOT =4 AND DEP.IRA>0 AND ((:ASOF-CIF.DOB)"
		set VWHERE=VWHERE_"/365.25) NOT >:MAXAGE AND CIF.DOB IS NOT NULL AND "
		set VWHERE=VWHERE_"CIF.DOB NOT >:MINDAT"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="RSP Account Owners over Age 70 1/2 "
		set VBNRINFO("PGM")="R01S129"
		set VBNRINFO("RID")="SCA060"
		set VBNRINFO("TABLES")="DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]IRA"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEP]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:2 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DEP.IRA,DEP.CID,DEP.BAL,DEP.ACN,CIF.LNM,CIF.DOB,DEP.TYPE,DEP.IRN","DEP,CIF","DEP.STAT NOT =4 AND DEP.IRA>0 AND ((:ASOF-CIF.DOB)/365.25) NOT >:MAXAGE AND CIF.DOB IS NOT NULL AND CIF.DOB NOT >:MINDAT","DEP.IRA,DEP.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8
	set vc1=V.piece($C(9),1)			// DEP.IRA
	set vc2=V.piece($C(9),2)			// DEP.CID
	set vc3=V.piece($C(9),3)			// DEP.BAL
	set vc4=V.piece($C(9),4)			// DEP.ACN
	set vc5=V.piece($C(9),5)			// CIF.LNM
	set vc6=V.piece($C(9),6)			// CIF.DOB
	set vc7=V.piece($C(9),7)			// DEP.TYPE
	set vc8=V.piece($C(9),8)			// DEP.IRN
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Number TCT
 set TCT=0
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=MINDAT

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),WTIRN,vc3
	type Public String VSTATS

	set VT(2)=VT(2)+1
	set VT(2,1,1)=VT(2,1,1)+WTIRN			// @TOT(<<WTIRN>>)
	set VT(2,2,1)=VT(2,2,1)+vc3			// @TOT([DEP]BAL)
	quit

VDTL2	// Detail
	type public String %TIM,EMDATE,IOSL,IRAEM,MINDAT,TCT,TJD,TYPDES,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc4,12)
	set VL=VL_$J("",14-VL.length())_$E(vc5,1,20)
	set VL=VL_$J("",35-VL.length())_$J($$DAT^%ZM(vc6),10)
	do VP1 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(EMDATE),10)
	set VL=VL_$J("",46-VL.length())_V
	set VL=VL_$J("",57-VL.length())_$E(IRAEM,1,1)
	set VL=VL_$J("",63-VL.length())_$E(vc1,1,2)
	do VP2 quit:VFMQ!verror.get()  set V=$E(TYPDES,1,10)
	set VL=VL_$J("",66-VL.length())_V
	set V=vc2,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",78-VL.length())_V		// [SYSDEV,DEP]CID
	set VL=VL_$J("",93-VL.length())_$J(vc7,4)
	set VL=VL_$J("",102-VL.length())_$J($FN(vc3,",",2),12)
	set V=vc8,VO=V set V=$S(V="":"",1:$J(vc8,0,2)) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",119-VL.length())_V		// [SYSDEV,DEP]IRN
	do VOM
	quit

VSUM2	// Summary
	type public String %TIM,EMDATE,I,IOSL,IRAEM,MINDAT,TCT,TJD,TYPDES,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                 "_"Total For Plan Type"
	do VP5 quit:VFMQ!verror.get()  set V=$E(TYPDES,1,10)
	set VL=VL_$J("",70-VL.length())_V
	set V=VT(2,2,1)					// @TOT([DEP]BAL,)
	set VL=VL_$J("",100-VL.length())_$J($FN(V,",",2),14)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=VT(2,1,1)/VT(2,2,1)		// @TOT(<<WTIRN>>)/@TOT([DEP]BAL)
		}
	set VL=VL_$J("",119-VL.length())_$J(V,8,5)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,EMDATE,IRAEM,MINDAT,RID,RN,TCT,TJD,TYPDES,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",99-VL.length())_"Run Date:"
	set VL=VL_$J("",109-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"   ("_RID_")"
	set VL=VL_$J("",101-VL.length())_"System:"
	set VL=VL_$J("",109-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="       "_"CIF #  Owner's Name        Birth Date  Retire DT  E/M   Plan Type         Account #   Type          Balance     Int Rate"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,EMDATE,IRAEM,TCT,TYPDES,vovc1,vovc2,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="===================================================================================================================================="
	do VOM
	set VL="                                                 "_"Report Total"
	set V=0						// @TOT([DEP]BAL,0)
	for I=0:1:2 set V=V+VT(I,2,1)
	set VL=VL_$J("",100-VL.length())_$J($FN(V,",",2),14)
	set V=0						// @TOT(<<WTIRN>>)
	for I=0:1:2 set V=V+VT(I,1,1)
	set VX(2)=0					// @TOT([DEP]BAL)
	for I=0:1:2 set VX(2)=VX(2)+VT(I,2,1)
	do {
		// Continue with V="" if divide by zero error
		catch error {
			if '(error.type["DIV"&(error.type["ZERO")) throw error
			set V=""
			}
		set V=V/VX(2)				// @TOT(<<WTIRN>>)/@TOT([DEP]BAL)
		}
	set VL=VL_$J("",119-VL.length())_$J(V,8,5)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: EMDATE

	type public String vc4,vc6
 type public Date EMDATE

 set EMDATE=$$EMDATE^CIFCDI(vc4,vc6)
 quit:EMDATE.isNull()
 set EMDATE=EMDATE.toString("MM-DD-YEAR")
	quit

VP2	// Column pre-processor - Variable: TYPDES

	type public String vc1
 type public String TYPDES
 type String TDESC

 set TYPDES="  "

 type RecordSTBLIRA stblira=Db.getRecord("STBLIRA","IRA=:vc1",1)

 if stblira.getMode() do {
	set TDESC=stblira.desc
	if 'TDESC.isNull() set TYPDES="- "_TDESC
	}
	quit

VP3	// Column pre-processor - [SYSDEV,DEP]CID

	type public String vc3,vc8
 type public Number WTIRN
 
 set WTIRN=vc3*vc8
	quit

VP4	// Column post-processor - [SYSDEV,DEP]IRN

 type public Number TCT

 set TCT=TCT+1
	quit

VP5	// Column pre-processor - Variable: TYPDES

 type public String TYPDES
 set TYPDES=TYPDES.get()
 
	quit
