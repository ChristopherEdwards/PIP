LNDE2

	/*

			DAYEND testing routine

	       ORIG:  Chuck Hardy (6721) - 08/05/86
	       DESC:
	
	   LIBRARY:
	         . ACR  - line tag called when accruals should be
	             calculated from closing date to TJD-1
	         . NACR  - line tag called when accruals should not
	                           be calculated.
	
	       NOTE:  There is a known limitation of ^LNDE2 function:
	
	        Assume ICPA (Interest Calculation Principal Adjustment)
	        of the account reduces the principal balance by unpaid due
	        principal (common with mortgages in the U.S.)
	
	              The customer reopens the account, or reverses the payoff.
	              Interim bills are generated.  If ICPA dictates that BALINT
	              should be adjusted by any billed amounts, this will not
	              occur.
	        The accrual adjustment created will not
	        reflect the gradual decrease in BALINT because the bills
	        have not been created at this point.
	
	        This is not a problem if the PCM is 11 because the month
	        end accrual adjustment routine will adjust the accrual.
	
	---- Revision History ------------------------------------------------

	07/06/07 - Giridhal - 28064
		   Modified section BILL to pass in ttx object in the call
		   to the back office billing driver BCHLNBLDB.

	01/30/06 - SmithCD - CR 19343 (16890)
		   Replaced CTL parameter in call to EXTERN^BCHLNSCH with ln.
		   Removed old revision history.

	01/28/04 - CARROLLJ - CR7997
		   Corrected call to BCHLNLD to pass correct parameters.
	
	----------------------------------------------------------------------
	
	
	*/


	quit
	

EXEC(RecordLN ln) // Used as an external line tag called from LNPTSR.

	/*
	
	   INPUTS:
		. ln	Loan Object			/TYP=RecordLN/REQ/REF:RW
	        . CID	Account number			/REQ/TYP=N
	
	*/
	
	// holds ACR accumulation
	new SACR,SEQ,TOTACR,%BAL
	set TOTACR=0

	Type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set SAVTJD=$S($D(%SystemDate):%SystemDate,1:cuvar.tjd)
	set XCID=CID
	
	// New arrays built by billing utility
	new AVGBC,BAOLA,BLDT,DATA,INTA,INTX,LBDD,LBIC,LBLB,LC,LNTRS,MCOBS,PMTTRS
	new PTYPE,TBA
	
	// New arrays built by scheduled date roll
	new BUS,FRE
	
	set SACR=ln.acr 
	set TCMT=""
	set ln.acr=0
	
	// Reset accrual to zero if accrual recalc forced between bills.
	if $E(CTL) set ACRDT=ln.odd-1
	
	/*
	If:   1. processing a new account
	      2. account has not been disbursed
	      3. maximum number of debits is 1
	*/	


	// Then: Load array as if it had been disbursed before proceeding
	if 'ln.bal,'ln.cntdr,ln.maxdrct=1 do {
		set ln.bal=ln.crlmt
		set ln.balint=ln.crlmt
		set ln.cntdr=1
	
		// Set 2nd position of CTL to indicate that this was done.
		set CTL=+$E(CTL)_"1"_$E(CTL,3,99)
		}
	do EXEC2(.ln)
	quit

	
EXEC2(RecordLN ln) //
	
	// Adjusted Balance for Accrual Calculation
	set %BAL=ln.balint

	for  quit:ln.dist1fre=""  quit:(ln.bndt'<SAVTJD&(ln.schnd>SAVTJD))  do { quit:ER
		if ln.schnd'>ln.bndt do SCH(.ln) Q:ER
		do BILL(.ln)
		}
	do EXEND(.ln)
        quit
	


BILL(RecordLN ln)	// Bill generate

	// Brought current from BNDT:

	new BRCD 
	Type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set BRCD=cuvar.bobr
	if TCMT="" set TCMT=$$^MSG(4022)_$$DAT^%ZM(ln.bndt)
	
	/*
	The system normally calculates payments ("bills") as a beginning
	of day process during the morning after the billing date.  This
	ensures that the accrual for the billing date is included in
	the calculation.  We must set TJD equal to one day after the
	billing date so that the system will act normally.  This is
	important when anticipating interest to the due date.  Without
	this change, the system would calculate 1 too many day's interest.
	*/
	
	new TPD
	set TPD=%SystemDate
	new %SystemDate
	#ACCEPT DATE=09/23/01;PGM=John Carroll
	set (%SystemDate,%TJD)=ln.bndt+1
	if $E(CTL) set %ND=ln.bndt do ACRCALC(.ln)
	
	new SACR,CTL
	type RecordTTX ttx=Class.new("RecordTTX")
	do EXEC^BCHLNLD(.ln,0,.ttx)
	
	/*
	Adding calls to loan fee and finance charge offsets.
	Since TPD is set, we need to set it back to cuvar.tjd to
	file properly.
	*/

	//File accumulated loan fee offsets
	type ResultSet rs=Db.select("TJD","TMPBCHOFF","TJD=:TPD")
	if rs.isEmpty() quit
	while rs.next() do {
		new CID

		#ACCEPT DATE=09/23/01;PGM=John Carroll
		set %SystemDate=rs.getCol(1)
	
		// File accumulated loan fee offsets
		set OFFST="OFFST"
		do OFFSET^UMSC(TPD,BRCD,%UserID,.OFFST,1,1)
	
		// File accumulated min finance chg offsets
		set MFCOFF="MFCOFF"
		do OFFSET^UMSC(TPD,BRCD,%UserID,.MFCOFF,1,1)
		}
	
	kill PR,LUMP
	quit 

	
SCH(RecordLN ln) // Scheduled date roll


	// Brought current from SCHND:
	
	if TCMT="" set TCMT=$$^MSG(4023)_$$DAT^%ZM(ln.bndt)
	set CID=XCID
	if ln.schnd>SAVTJD do EXEND(.ln) quit
	#ACCEPT DATE=09/23/01;PGM=John Carroll
	set %SystemDate=ln.schnd
	
	// Update accrual
	if $E(CTL) do {
		set %ND=ln.schnd-1
		do ACRCALC(.ln)
		}
	
	new SACR,CTL
	do EXTERN^BCHLNSCH(.ln)
	set CID=XCID
	quit 

	
EXEND(RecordLN ln) 

	#ACCEPT DATE=09/23/01;PGM=John Carroll
	set %SystemDate=SAVTJD
	set ln.acr=ln.acr-TOTACR+SACR
	
	// Reset values is set simply for purpose of calculation
	if $E(CTL,2) do {
		set ln.bal=ln.bal-ln.crlmt
		set ln.cntdr=""
		set ln.balint=ln.balint-ln.crlmt
	
		}

	quit 

	
ACRCALC(RecordLN ln) //
	
	new CTL
	set %LD=ACRDT+1 
	set ACRDT=%ND
	set %INT=$$^UIC(%BAL,%LD,%ND,ln.iacm,ln.irn,0,ln.dist1af,ln.dist1fre,ln.icpf,ln.schnd,ln.schld) if ER quit 
	set %INT=$$^SCARND(%INT,CID,ln.crcd,5)
	set ln.acr=ln.acr+%INT
	set TOTACR=TOTACR+%INT
	quit 
	
	
public ACR(RecordLN ln)	// Accumulate accrual amount

	/*
 
	INPUTS:
	   . ln    Loan Object			/TYP=RecordLN/REQ/REF:RW

	*/

	new CTL 
	set CTL=1
	do EXEC(.ln)
	quit 
	

NACR(RecordLN ln)	// Do not accumulate accrual amount

	new CTL 
	set CTL=0
	do EXEC(.ln)
	quit 
 #OPTION ResultClass ON
Public String vSIG()	quit "60817^43729^Lakshmi Giridharan^5556"	// Signature - LTD^TIME^USER^SIZE
