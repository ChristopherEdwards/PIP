R01S633	// SCA810 - OTS Schedule LD Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:02 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String SCDATE
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1=$$KEY^DBSREP("LNOTSSC","",1,"D")

	set RID="SCA810"
	set RN="OTS Schedule LD Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNOTSSC]SCDT|[LNOTSSC]SCDT:DISTINCT:NOVAL||D EXT^DBSQRY||T|System Processing Date|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String SCDATE
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,LD(),RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vovc1,vovc2,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA810",RN="OTS Schedule LD Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA810","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNOTSSC]SCDT "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNOTSSC") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT="LNOTSSC.SCDT,LNOTSSC.SCLN"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNOTSSC",VWHERE,"LNOTSSC.SCDT,LNOTSSC.SCLN","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2
	set vc1=V.piece($C(9),1)			// LNOTSSC.SCDT
	set vc2=V.piece($C(9),2)			// LNOTSSC.SCLN
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public Date SCDATE
 type Public Number LD()
 
 type Number LDCOL
 type String SCLN

 type RecordLNOTSSC lnotssc

 for LDCOL=110,120,210:10:260,310,320,410:10:460 do {
 	set SCLN="LD"_LDCOL
	set LD(LDCOL)=""
	set lnotssc=Db.getRecord("LNOTSSC","SCDT=:SCDATE,SCLN=:SCLN",1)
	if lnotssc.getMode() set LD(LDCOL)=lnotssc.tot
 }

	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=SCDATE
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,LD(),RID,RN,SCDATE,VL,vc1,vc2,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+40,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="===================================================================================="
	do VOM
	set VL="" do VOM
	set VL="HIGH LOAN-TO-VALUE LOANS SECURED BY 1-4 FAMILY RESIDENTIAL"
	do VOM
	set VL="PROPERTIES, WITHOUT PMI OR GOVERNMENT GUARANTEE"
	do VOM
	set VL="" do VOM
	set VL="BALANCES AT QUARTER-END:"
	do VOM
	set VL="          "_"90 UP TO 100 LTV                        LD 110"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(110),",",0),18)
	do VOM
	set VL="          "_"100 AND GREATER LTV                     LD 120"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(120),",",0),18)
	do VOM
	set VL="" do VOM
	set VL=" "_"PAST DUE AND NONACCRUAL BALANCES:"
	do VOM
	set VL="     "_"PAST DUE AND STILL ACCRUING:"
	do VOM
	set VL="       "_"30-89 DAYS"
	do VOM
	set VL="          "_"90 UP TO 100 LTV                        LD 210"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(210),",",0),18)
	do VOM
	set VL="          "_"100 AND GREATER LTV                     LD 220"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(220),",",0),18)
	do VOM
	set VL="       "_"90 DAYS OR MORE"
	do VOM
	set VL="          "_"90 UP TO 100 LTV                        LD 230"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(230),",",0),18)
	do VOM
	set VL="          "_"100 AND GREATER LTV                     LD 240"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(240),",",0),18)
	do VOM
	set VL="     "_"NONACCRUAL:"
	do VOM
	set VL="          "_"90 UP TO 100 LTV                        LD 250"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(250),",",0),18)
	do VOM
	set VL="          "_"100 AND GREATER LTV                     LD 260"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(260),",",0),18)
	do VOM
	set VL="" do VOM
	set VL=" "_"NET CHARGE-OFFS AND RECOVERIES:"
	do VOM
	set VL="          "_"90 UP TO 100 LTV                        LD 310"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(310),",",0),18)
	do VOM
	set VL="          "_"100 AND GREATER LTV                     LD 320"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(320),",",0),18)
	do VOM
	set VL="" do VOM
	set VL=" "_"PURCHASES:"
	do VOM
	set VL="          "_"90 UP TO 100 LTV                        LD 410"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(410),",",0),18)
	do VOM
	set VL="          "_"100 AND GREATER LTV                     LD 420"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(420),",",0),18)
	do VOM
	set VL="" do VOM
	set VL=" "_"ORIGINATIONS:"
	do VOM
	set VL="          "_"90 UP TO 100 LTV                        LD 430"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(430),",",0),18)
	do VOM
	set VL="          "_"100 AND GREATER LTV                     LD 440"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(440),",",0),18)
	do VOM
	set VL="" do VOM
	set VL=" "_"SALES:"
	do VOM
	set VL="          "_"90 UP TO 100 LTV                        LD 450"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(450),",",0),18)
	do VOM
	set VL="          "_"100 AND GREATER LTV                     LD 460"
	set VL=VL_$J("",66-VL.length())_$J($FN(LD(460),",",0),18)
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
