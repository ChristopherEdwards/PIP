R01S349	// SCA363 - Invalid Tax Identification Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA363"
	set RN="Invalid Tax Identification Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,CSZ,FORM,RID,RN,STDES,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc8,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA363",RN="Invalid Tax Identification Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA363","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[IRSBNOT]CID#1#15,[IRSBNOT]NAM#20#20,[IRSBNOT]TIN#42#11,[IRSBNOT]AD1#56#25,[IRSBNOT]SEQ#123#8\[IRSBNOT]NAM2#20#20"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Invalid Tax Identification Report"
		set VBNRINFO("PGM")="R01S349"
		set VBNRINFO("RID")="SCA363"
		set VBNRINFO("TABLES")="IRSBNOT,DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,IRSBNOT]CID"

		set VBNRINFO("DOC",1)="/*"
		set VBNRINFO("DOC",2)="  ---------- Revision History --------------------------------------------"
		set VBNRINFO("DOC",3)="    12/28/05 - SWARNALP - 17293"
		set VBNRINFO("DOC",4)="              Converted to PSL  "
		set VBNRINFO("DOC",5)="    03/22/06 - SWARNALP - 20110"
		set VBNRINFO("DOC",6)="              Variables are initialized and codes are rearranged in the "
		set VBNRINFO("DOC",7)="	      Report's Fetch Post Processor section to avoid undefined "
		set VBNRINFO("DOC",8)="              error that are caused due to columns that are assigned with "
		set VBNRINFO("DOC",9)="	      null value"
		set VBNRINFO("DOC",10)="  ------------------------------------------------------------------------"
		set VBNRINFO("DOC",11)="*/"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:1 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("IRSBNOT.STAT,IRSBNOT.DOC,IRSBNOT.CITY,IRSBNOT.ST,IRSBNOT.LZIP,IRSBNOT.TIN,CIF.TYPE,IRSBNOT.CID,IRSBNOT.NAM,IRSBNOT.AD1,IRSBNOT.SEQ,IRSBNOT.NAM2","IRSBNOT,DEP,CIF","","IRSBNOT.CID","","DQMODE=1/PROTECTION=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=rwrs.getRowProt()		// Data item protection
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc8
	set vovc8=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc8,vc8
	set vovc8=vc8
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12
	set vc1=V.piece($C(9),1)			// IRSBNOT.STAT
	set vc2=V.piece($C(9),2)			// IRSBNOT.DOC
	set vc3=V.piece($C(9),3)			// IRSBNOT.CITY
	set vc4=V.piece($C(9),4)			// IRSBNOT.ST
	set vc5=V.piece($C(9),5)			// IRSBNOT.LZIP
	set vc6=V.piece($C(9),6)			// IRSBNOT.TIN
	set vc7=V.piece($C(9),7)			// CIF.TYPE
	set vc8=V.piece($C(9),8)			// IRSBNOT.CID
	set vc9=V.piece($C(9),9)			// IRSBNOT.NAM
	set vc10=V.piece($C(9),10)			// IRSBNOT.AD1
	set vc11=V.piece($C(9),11)			// IRSBNOT.SEQ
	set vc12=V.piece($C(9),12)			// IRSBNOT.NAM2
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
 type public String CSZ,FORM,STDES
 
 type String LZIP,ST,TIN

 set CSZ=""
 set FORM=""
 set LZIP=""
 set ST=""
 set STDES=""

 if +vc1=1 set STDES=$$^MSG(6484)
 if +vc1=2 set STDES=$$^MSG(6485)
 if +vc1=3 set STDES=$$^MSG(6486)
 if +vc1=4 set STDES=$$^MSG(6487)

 if +vc2=91 set FORM="1099-Dividend"
 if +vc2=92 set FORM="1099-INT"
 if +vc2=96 set FORM="1099-OID"
 if +vc2=97 set FORM="1099-PATR"
 
 set CSZ=vc3
 set ST=vc4
 set LZIP=vc5

 if 'CSZ.isNull(),('ST.isNull() ! 'LZIP.isNull()) set CSZ=CSZ_", "
 if 'ST.isNull() set CSZ=CSZ_ST
 if 'ST.isNull(),'LZIP.isNull() set CSZ=CSZ_"  "
 if 'LZIP.isNull() set CSZ=CSZ_LZIP
 
 set TIN=vc6
 if 'TIN.isNull(),TIN do {
 	if vc7=1 set TIN=TIN.extract(1,2)_"-"_TIN.extract(3,99)
 	else  set TIN=TIN.extract(1,3)_"-"_TIN.extract(4,5)_"-"_TIN.extract(6,99)
	}
 set vc6=TIN
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1		// Skip detail
	do VBREAK

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(1)
	type Public String vc8,vovc8
	type Number vb1
	set (vb1)=0
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(1)=VT(1)+1
	quit

VDTL1	// Detail
	type public String %TIM,CSZ,FORM,IOSL,STDES,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc8,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set V=vc8,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,15) set VL=V
	set VL=VL_$J("",19-VL.length())_$E(vc9,1,20)
	set VL=VL_$J("",41-VL.length())_$J(vc6,11)
	set VL=VL_$J("",55-VL.length())_$E(vc10,1,25)
	set VL=VL_$J("",82-VL.length())_$E(STDES,1,20)
	set VL=VL_$J("",106-VL.length())_$E(FORM,1,13)
	set VL=VL_$J("",122-VL.length())_$J(vc11,8)
	do VOM
	set VL="                   "_$E(vc12,1,20)
	set VL=VL_$J("",55-VL.length())_$E(CSZ,1,30)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,CSZ,FORM,RID,RN,STDES,VL,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc8,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="        "_"Account    Customer                  TIN/SIN   Address                    Status                  Form Type       Sequence"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,CSZ,FORM,STDES,vovc8,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set V=(VT(0)+VT(1))				// @CNT(0,N,5)
	set VL=$J(V,5)
	set VL=VL_$J("",7-VL.length())_"Accounts"
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,IRSBNOT]CID

	type public String vc8
 type public String V,VL

 if vc8.isNull() set (V,VL)=""
	quit
