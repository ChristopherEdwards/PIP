R01S257	// SCA241 - Foreign Currency Exchange Rate Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:46 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CO,TJD,ZCO
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date QDAT=TJD.get()
	type String VIN2=CUVAR.co
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA241"
	set RN="Foreign Currency Exchange Rate Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("QDAT")="|10|||||||D|Date Effective|||||"
	set %TAB("VIN2")="|12||[CRCDREP]CO|[CRCD]CO:DISTINCT||set ZCO=X,CO=X||T|Company Name is equal to|||||"
	set %TAB("VIN3")="|255||[CRCDREP]CRCD|[CRCD]:NOVAL||D EXT^DBSQRY||T|Currency Code|||||"
	set %TAB("VIN4")="|255||[CRCDREP]CUSTCD|[UTBLCC]CCODE||D EXT^DBSQRY||T|Customer Code|||||"

	set %READ="IO/REQ,VIN2#1,VIN3#0,VIN4#0,QDAT#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CO,TJD,ZCO
	type public Date QDAT
	type public String VIN2,VIN3,VIN4
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA241",RN="Foreign Currency Exchange Rate Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA241","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[CRCDREP]CUSTCD#39#3,[CRCDREP]TRESREF#50#15,[CRCDREP]BUYCASH#70#12,[CRCDREP]SELLCASH#87#12,[CRCDREP]BUYNCASH#104#12,[CRCDREP]SELLNCASH#121#12\[CRCDREP]TRESREF2#50#15,[CRCDREP]BUYCASH2#70#12,[CRCDREP]SELLCASH2#87#12,[CRCDREP]BUYNCSH2#104#12,[CRCDREP]SELLNCSH2#121#12\[CRCDREP]TRESREF3#50#15"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[CRCDREP]JOB=<<%ProcessID>>",SEQ=SEQ+1
		set DQQRY(SEQ)="[CRCDREP]CO = "_$$addqts^DBSRWUTL(VIN2),SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[CRCDREP]CRCD "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[CRCDREP]CUSTCD "_VIN4,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("CRCDREP,CRCDMG,CRCD") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC1|"_"Company Name is equal to"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Currency Code"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Customer Code"_"|VIN4|"_VIN4.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Foreign Currency Exchange Rate Report"
		set VBNRINFO("PGM")="R01S257"
		set VBNRINFO("RID")="SCA241"
		set VBNRINFO("TABLES")="CRCDREP,CRCDMG,CRCD"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,CRCDREP]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,CRCDREP]CO"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,CRCDREP]CRCD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,CRCDREP]CUSTCD"

		set VBNRINFO("DOC",1)="The Foreign Currency Exchange Rate Report provides a listing of the exchange"
		set VBNRINFO("DOC",2)="rates and margins associated with the non-base currencies established by the"
		set VBNRINFO("DOC",3)="institution.  This report also displays miscellaneous attributes associated"
		set VBNRINFO("DOC",4)="with the currencies, such as:"
		set VBNRINFO("DOC",5)=""
		set VBNRINFO("DOC",6)="*  Authorization to use the currency in retail transactions"
		set VBNRINFO("DOC",7)="*  Authorization to purchase and/or sell the currency in currency exchanges"
		set VBNRINFO("DOC",8)="*  Authorization to use the currency as a system base currency equivalent"
		set VBNRINFO("DOC",9)="*  The country, cost center, and customer associated with the rates and margins"
		set VBNRINFO("DOC",10)=""
		set VBNRINFO("DOC",11)="This report contains only those currencies that have exchange rates AND"
		set VBNRINFO("DOC",12)="margins.  If a currency has an exchange rate but no margin (or vice versa), the"
		set VBNRINFO("DOC",13)="system does not list the currency on this report."
		set VBNRINFO("DOC",14)=""
		set VBNRINFO("DOC",15)="Refer to the Multicurrency Processing - General Reference Manual for further"
		set VBNRINFO("DOC",16)="information."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"CRCDREP.JOB,CRCDREP.CO,CRCDREP.CRCD,CRCDREP.CUSTCD"
	set VSELECT=VSELECT_",CRCD.CRCDNO,CRCD.DESC,CRCDREP.RETAIL,CRCDREP.CASH"
	set VSELECT=VSELECT_"CUR,CRCDREP.SYSCEQ,CRCDREP.BUY,CRCDREP.SELL,CRCDRE"
	set VSELECT=VSELECT_"P.MINRATE,CRCDREP.MAXRATE,CRCDREP.MIDRATE,CRCD.CNT"
	set VSELECT=VSELECT_"RY,CRCDREP.TRESREF,CRCDREP.BUYCASH,CRCDREP.SELLCAS"
	set VSELECT=VSELECT_"H,CRCDREP.BUYNCASH,CRCDREP.SELLNCASH,CRCDREP.TRESR"
	set VSELECT=VSELECT_"EF2,CRCDREP.BUYCASH2,CRCDREP.SELLCASH2,CRCDREP.BUY"
	set VSELECT=VSELECT_"NCSH2,CRCDREP.SELLNCSH2,CRCDREP.TRESREF3,CRCDREP.B"
	set VSELECT=VSELECT_"UYCASH3,CRCDREP.SELLCASH3,CRCDREP.BUYNCSH3,CRCDREP"
	set VSELECT=VSELECT_".SELLNCSH3"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"CRCDREP,CRCDMG,CRCD",VWHERE,"CRCDREP.JOB,CRCDREP.CO,CRCDREP.CRCD,CRCDREP.CUSTCD","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30
	set vc1=V.piece($C(9),1)			// CRCDREP.JOB
	set vc2=V.piece($C(9),2)			// CRCDREP.CO
	set vc3=V.piece($C(9),3)			// CRCDREP.CRCD
	set vc4=V.piece($C(9),4)			// CRCDREP.CUSTCD
	set vc5=V.piece($C(9),5)			// CRCD.CRCDNO
	set vc6=V.piece($C(9),6)			// CRCD.DESC
	set vc7=V.piece($C(9),7)			// CRCDREP.RETAIL
	set vc8=V.piece($C(9),8)			// CRCDREP.CASHCUR
	set vc9=V.piece($C(9),9)			// CRCDREP.SYSCEQ
	set vc10=V.piece($C(9),10)			// CRCDREP.BUY
	set vc11=V.piece($C(9),11)			// CRCDREP.SELL
	set vc12=V.piece($C(9),12)			// CRCDREP.MINRATE
	set vc13=V.piece($C(9),13)			// CRCDREP.MAXRATE
	set vc14=V.piece($C(9),14)			// CRCDREP.MIDRATE
	set vc15=V.piece($C(9),15)			// CRCD.CNTRY
	set vc16=V.piece($C(9),16)			// CRCDREP.TRESREF
	set vc17=V.piece($C(9),17)			// CRCDREP.BUYCASH
	set vc18=V.piece($C(9),18)			// CRCDREP.SELLCASH
	set vc19=V.piece($C(9),19)			// CRCDREP.BUYNCASH
	set vc20=V.piece($C(9),20)			// CRCDREP.SELLNCASH
	set vc21=V.piece($C(9),21)			// CRCDREP.TRESREF2
	set vc22=V.piece($C(9),22)			// CRCDREP.BUYCASH2
	set vc23=V.piece($C(9),23)			// CRCDREP.SELLCASH2
	set vc24=V.piece($C(9),24)			// CRCDREP.BUYNCSH2
	set vc25=V.piece($C(9),25)			// CRCDREP.SELLNCSH2
	set vc26=V.piece($C(9),26)			// CRCDREP.TRESREF3
	set vc27=V.piece($C(9),27)			// CRCDREP.BUYCASH3
	set vc28=V.piece($C(9),28)			// CRCDREP.SELLCASH3
	set vc29=V.piece($C(9),29)			// CRCDREP.BUYNCSH3
	set vc30=V.piece($C(9),30)			// CRCDREP.SELLNCSH3
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Date QDAT
 type public String CO,ZCO

 type Boolean BUY,CASHCUR,RETAIL,SELL,SYSCEQ
 type Number MAXRATE,MIDRATE,MINRATE,ccode
 type String crcd

 set CO=ZCO

 do Db.delete("CRCDREP","JOB=:%ProcessID")
 
 type ResultSet rscrcd=Db.select("BUY,CASHCUR,CRCD,MAXRATE,MINRATE,RETAIL,SELL,SYSCEQ","CRCD","CO=:CO")

 while rscrcd.next() do {

	set crcd=rscrcd.getCol("CRCD")
	set RETAIL=rscrcd.getCol("RETAIL")
	set BUY=rscrcd.getCol("BUY")
	set SELL=rscrcd.getCol("SELL")
	set CASHCUR=rscrcd.getCol("CASHCUR")
	set MINRATE=rscrcd.getCol("MINRATE")
	set MAXRATE=rscrcd.getCol("MAXRATE")
	set SYSCEQ=rscrcd.getCol("SYSCEQ")

	type ResultSet rsmgh=Db.select("CUSTCD,TRESREF,BUYCASH,SELLCASH,BUYNCASH,SELLNCASH,TRESREF2,BUYCASH2,SELLCASH2,BUYNCSH2,SELLNCSH2,TRESREF3,BUYCASH3,SELLCASH3,BUYNCSH3,SELLNCSH3","CRCDMGH","CO=:CO AND EFD<:QDAT+1","EFD,SEQ DESC")

	while rsmgh.next() do {

		set ccode=rsmgh.getCol("CUSTCD")

		type ResultSet rsrateh=Db.select("MIDRATE","CRCDRATEH","CO=:CO AND CRCD=:crcd AND EFD<:QDAT+1","EFD DESC")

		if rsrateh.next() set MIDRATE=rsrateh.getCol("MIDRATE")
		else  quit

		if MIDRATE.get().isNull() set MIDRATE=""

		type RecordCRCDREP crcdrep=Db.getRecord("CRCDREP","JOB=:%ProcessID,CO=:CO,CRCD=:crcd,CUSTCD=:ccode",1)"

		set crcdrep.midrate=MIDRATE
		set crcdrep.retail=RETAIL
		set crcdrep.cashcur=CASHCUR
		set crcdrep.minrate=MINRATE
		set crcdrep.buy=BUY
		set crcdrep.sell=SELL
		set crcdrep.maxrate=MAXRATE
		set crcdrep.sysceq=SYSCEQ
		set crcdrep.tresref=rsmgh.getCol("TRESREF")
		set crcdrep.buycash=rsmgh.getCol("BUYCASH")
		set crcdrep.sellcash=rsmgh.getCol("SELLCASH")
		set crcdrep.buyncash=rsmgh.getCol("BUYNCASH")
		set crcdrep.sellncash=rsmgh.getCol("SELLNCASH")
		set crcdrep.tresref2=rsmgh.getCol("TRESREF2")
		set crcdrep.buycash2=rsmgh.getCol("BUYCASH2")
		set crcdrep.sellcash2=rsmgh.getCol("SELLCASH2")
		set crcdrep.buyncsh2=rsmgh.getCol("BUYNCSH2")
		set crcdrep.sellncsh2=rsmgh.getCol("SELLNCSH2")
		set crcdrep.tresref3=rsmgh.getCol("TRESREF3")
		set crcdrep.buycash3=rsmgh.getCol("BUYCASH3")
		set crcdrep.sellcash3=rsmgh.getCol("SELLCASH3")
		set crcdrep.buyncsh3=rsmgh.getCol("BUYNCSH3")
		set crcdrep.sellncsh3=rsmgh.getCol("SELLNCSH3")

		do crcdrep.save()
		}
	}


 quit
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=CO,ZCO
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL3	// Detail
	type public String %TIM,CO,IOSL,QDAT,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZCO,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$E(vc3,1,3)
	set VL=VL_$J("",5-VL.length())_$E(vc5,1,3)
	set VL=VL_$J("",10-VL.length())_$E(vc6,1,40)
	set VL=VL_$J("",53-VL.length())_$S(vc7:"Y",1:"N")
	set VL=VL_$J("",58-VL.length())_$S(vc8:"Y",1:"N")
	set VL=VL_$J("",63-VL.length())_$S(vc9:"Y",1:"N")
	set VL=VL_$J("",68-VL.length())_$S(vc10:"Y",1:"N")
	set VL=VL_$J("",74-VL.length())_$S(vc11:"Y",1:"N")
	set VL=VL_$J("",80-VL.length())_$J(vc12,13,6)
	set VL=VL_$J("",95-VL.length())_$J(vc13,13,6)
	set VL=VL_$J("",110-VL.length())_$J(vc14,13,6)
	do VOM
	set V=vc15,VO=V set V=$E(V,1,20) do VP1 quit:VFMQ!verror.get()  set VL="          "_V
	do VOM
	quit

VHDG4	// Group Header
	type public String %MSKD,%TIM,CO,CONAM,ER,IOSL,QDAT,RID,RN,TJD,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,ZCO,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="                                "_"Cust Code          Threshold           Buy (Cash)      Sell (Cash)   Buy (Non-Cash)  Sell (Non-Cash)"
	do VOM
	set VL="                                "_"---------     ------------------     ------------     ------------   -------------   ---------------"
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,CO,IOSL,QDAT,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZCO,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+3>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL="                                      "_$J(vc4,3)
	set VL=VL_$J("",49-VL.length())_$S(+vc16=0:$J("",15),1:$J($FN(vc16,",",2),15))
	set VL=VL_$J("",69-VL.length())_$S(+vc17=0:$J("",12),1:$J(vc17,12,5))
	set VL=VL_$J("",86-VL.length())_$S(+vc18=0:$J("",12),1:$J(vc18,12,5))
	set VL=VL_$J("",103-VL.length())_$S(+vc19=0:$J("",12),1:$J(vc19,12,5))
	set VL=VL_$J("",120-VL.length())_$S(+vc20=0:$J("",12),1:$J(vc20,12,5))
	do VOM
	set VL="                                                 "_$S(+vc21=0:$J("",15),1:$J($FN(vc21,",",2),15))
	set VL=VL_$J("",69-VL.length())_$S(+vc22=0:$J("",12),1:$J(vc22,12,5))
	set VL=VL_$J("",86-VL.length())_$S(+vc23=0:$J("",12),1:$J(vc23,12,5))
	set VL=VL_$J("",103-VL.length())_$S(+vc24=0:$J("",12),1:$J(vc24,12,5))
	set VL=VL_$J("",120-VL.length())_$S(+vc25=0:$J("",12),1:$J(vc25,12,5))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                 "_$S(+vc26=0:$J("",15),1:$J($FN(vc26,",",2),15))
	set VL=VL_$J("",69-VL.length())_$S(+vc27=0:$J("",12),1:$J(vc27,12,5))
	set VL=VL_$J("",86-VL.length())_$S(+vc28=0:$J("",12),1:$J(vc28,12,5))
	set VL=VL_$J("",103-VL.length())_$S(+vc29=0:$J("",12),1:$J(vc29,12,5))
	set VL=VL_$J("",120-VL.length())_$S(+vc30=0:$J("",12),1:$J(vc30,12,5))
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CO,CONAM,QDAT,RID,RN,TJD,VL,ZCO,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Company ID: "
	set VL=VL_$J("",12-VL.length())_$E(vc2,1,12)
	set VL=VL_$J("",47-VL.length())_"Rates as of "
	set VL=VL_$J("",59-VL.length())_$J($$DAT^%ZM(QDAT),10)
	do VOM
	set VL="" do VOM
	set VL="Code CC#  Description"
	do VOM
	set VL="          "_"Country                                  Rtl  Cash  Eqv  Buy  Sell         Min Rate       Max Rate       Mid-Rate"
	do VOM
	set V="====================================================================================================================================" do VP2 quit:VFMQ!verror.get()  set VL=V
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,CRCD]CNTRY

 type public String V

 if V.get().isNull() quit

 type RecordSTBLCNTRY cntry=Db.getRecord("STBLCNTRY","CNTRY=:V")
 set V=V_" - "_cntry.desc

 quit
	quit

VP2	// Column post-processor - @CHR(=,132)

 type public String SVCRCD,SVCUSTCD

 set (SVCRCD,SVCUSTCD)=""

 quit
	quit
