R01S508	// SCA586 - Legal Lending Limits Exception Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:51 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA586"
	set RN="Legal Lending Limits Exception Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,LMTAMT,PCTCAP,RID,RN,TOTCAP,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA586",RN="Legal Lending Limits Exception Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA586","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LIMLEGAL2]HHACN#1#12,[LIMLEGAL2]NAM#15#40,[LIMLEGAL2]COMEXP#58#15,[LIMLEGAL2]AVLVSCOM#76#15,[LIMLEGAL2]OUTEXP#95#15,[LIMLEGAL2]AVLVSOUT#114#15"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()



		set VBNRINFO("DESC")="Legal Lending Limits Exception Report"
		set VBNRINFO("PGM")="R01S508"
		set VBNRINFO("RID")="SCA586"
		set VBNRINFO("TABLES")="LIMLEGAL2"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LIMLEGAL2]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LIMLEGAL2]HHACN"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("LIMLEGAL2.JOB,LIMLEGAL2.HHACN,LIMLEGAL2.NAM,LIMLEGAL2.COMEXP,LIMLEGAL2.AVLVSCOM,LIMLEGAL2.OUTEXP,LIMLEGAL2.AVLVSOUT","LIMLEGAL2","","LIMLEGAL2.JOB,LIMLEGAL2.HHACN","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// LIMLEGAL2.JOB
	set vc2=V.piece($C(9),2)			// LIMLEGAL2.HHACN
	set vc3=V.piece($C(9),3)			// LIMLEGAL2.NAM
	set vc4=V.piece($C(9),4)			// LIMLEGAL2.COMEXP
	set vc5=V.piece($C(9),5)			// LIMLEGAL2.AVLVSCOM
	set vc6=V.piece($C(9),6)			// LIMLEGAL2.OUTEXP
	set vc7=V.piece($C(9),7)			// LIMLEGAL2.AVLVSOUT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type Number ACN,CID,MACN
	type String TMP()

	do Db.delete("LIMLEGAL2","JOB=:%ProcessID")

	set (CID,MACN)=0

	type ResultSet rscif=Db.select("ACN","CIF")
	while rscif.next() do {

		set ACN=rscif.getCol("ACN")

		type ResultSet rscifhh0=Db.select("HHTYP,MACN","CIFHH0","ACN=:ACN","HHTYP,MACN")
		while rscifhh0.next() do {

			set MACN=rscifhh0.getCol("MACN")

			type ResultSet rsrelcif=Db.select("CID","RELCIF","ACN=:MACN")
			while rsrelcif.next() do {

				set CID=rsrelcif.getCol("CID")

				do setcid(MACN,CID,.TMP())
				}
			do exp(MACN,.TMP())
			}

		type ResultSet rsrelcif=Db.select("CID","RELCIF","ACN=:ACN")
		while rsrelcif.next() do {

			set CID=rsrelcif.getCol("CID")

			do setcid(ACN,CID,.TMP())
			}
		do exp(ACN,.TMP())
		do tmp(ACN,.TMP())
		}

	kill TMP

	quit


setcid(Number ACN,
       Number CID,
       String TMP)

	type String TOT

	type RecordACN acn=Db.getRecord("ACN","CID=:CID",1)
	if 'acn.getMode() quit
	if ACN'=acn.acn quit

	if acn.cls="D" set TOT=$$DEPOSIT^PROCLIM(CID,0)
	if acn.cls="L" set TOT=$$LOAN^PROCLIM(CID,0)

	if 'TOT,'TOT.piece("|",2) quit

	if TMP(%ProcessID,ACN).get()="" do {
		type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN",1)
		set TMP(%ProcessID,ACN)=cif.nam
		}

	set TMP(%ProcessID,ACN,ACN,CID).piece("|",1)=TOT.get().piece("|",1)
	set TMP(%ProcessID,ACN,ACN,CID).piece("|",2)=TOT.get().piece("|",2)

	quit


exp(Number ACN,
    String TMP)

	type String INTPROD,RECID,SYS,TOT

	set (SYS,INTPROD,RECID)=""

	type ResultSet rsexpos=Db.select("SYS,INTPROD,RECID","EXPOS","ACN=:ACN")
	while rsexpos.next() do {

		set SYS=rsexpos.getCol("SYS")
		set INTPROD=rsexpos.getCol("INTPROD")
		set RECID=rsexpos.getCol("RECID")

		set TOT=$$EXPREC^PROCLIM(ACN,SYS,INTPROD,RECID)

		if 'TOT,'TOT.piece("|",2) quit

		if TMP(%ProcessID,ACN)="" do {

			type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN",1)
			set TMP(%ProcessID,ACN)=cif.nam
			}

		set TMP(%ProcessID,ACN,ACN,RECID).piece("|",1)=TOT.get().piece("|",1)
		set TMP(%ProcessID,ACN,ACN,RECID).piece("|",2)=TOT.get().piece("|",2)
		}

	quit


tmp(Number HHACN,
    Number TMP)

	type Number ACN,CID,LIMIT
	type String TMP1()

	set (ACN,CID)=0

	set ACN=TMP(%ProcessID,HHACN,ACN).order()

	while ACN>0 do {

		set CID=TMP(%ProcessID,HHACN,ACN,CID).order()

		while CID>0 do {
			if TMP1(%ProcessID,HHACN).get().piece("|",1)="" set TMP1(%ProcessID,HHACN).piece("|",1)=TMP(%ProcessID,HHACN).get()

			set TMP1(%ProcessID,HHACN).piece("|",2)=TMP1(%ProcessID,HHACN).get().piece("|",2)+TMP(%ProcessID,HHACN,ACN,CID).piece("|",1)
			set TMP1(%ProcessID,HHACN).piece("|",3)=TMP1(%ProcessID,HHACN).get().piece("|",3)+TMP(%ProcessID,HHACN,ACN,CID).piece("|",2)

			set CID=TMP(%ProcessID,HHACN,ACN,CID).order()
			}

		set ACN=TMP(%ProcessID,HHACN,ACN).order()
		}

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set LIMIT=(cuvar.totcap*cuvar.pctcap)/100

	if TMP1(%ProcessID,HHACN).get().piece("|",2)>LIMIT do {

		set TMP1(%ProcessID,HHACN).piece("|",4)=LIMIT-TMP1(%ProcessID,HHACN).get().piece("|",2)
		set TMP1(%ProcessID,HHACN).piece("|",5)=LIMIT-TMP1(%ProcessID,HHACN).get().piece("|",3)

		type RecordLIMLEGAL2 limlegal2=Class.new("RecordLIMLEGAL2")

		set limlegal2.job=%ProcessID
		set limlegal2.hhacn=HHACN
		set limlegal2.nam=TMP1(%ProcessID,HHACN).get().piece("|",1)

		set limlegal2.comexp=TMP1(%ProcessID,HHACN).get().piece("|",2)
		set limlegal2.outexp=TMP1(%ProcessID,HHACN).get().piece("|",3)
		set limlegal2.avlvscom=TMP1(%ProcessID,HHACN).get().piece("|",4)
		set limlegal2.avlvsout=TMP1(%ProcessID,HHACN).get().piece("|",5)

		do limlegal2.bypassSave()
		}

	kill TMP1

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VDTL2	// Detail
	type public String %TIM,IOSL,LMTAMT,PCTCAP,TOTCAP,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc2,12)
	set VL=VL_$J("",14-VL.length())_$E(vc3,1,40)
	set VL=VL_$J("",55-VL.length())_$J($FN(vc4,",",2),17)
	set VL=VL_$J("",73-VL.length())_$J($FN(vc5,",",2),17)
	set VL=VL_$J("",91-VL.length())_$J($FN(vc6,",",2),18)
	set VL=VL_$J("",110-VL.length())_$J($FN(vc7,",",2),18)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,LMTAMT,PCTCAP,RID,RN,TOTCAP,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Limit Percentage of Capital: "
	do VP1 quit:VFMQ!verror.get()  set V=$J($FN(PCTCAP,",",2),5)
	set VL=VL_$J("",30-VL.length())_V
	set VL=VL_$J("",39-VL.length())_"Total Capital: "
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(TOTCAP,",",2),15)
	set VL=VL_$J("",54-VL.length())_V
	set VL=VL_$J("",74-VL.length())_"Limit Amount: "
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(LMTAMT,",",2),15)
	set VL=VL_$J("",88-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                                                        "_"----- Committed Amounts --------  ----- Outstanding Amounts ------"
	do VOM
	set VL="   "_"Household  Name                                                Total        Available            Total        Available"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: PCTCAP

	type Public Number PCTCAP

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set PCTCAP=cuvar.pctcap
	quit

VP2	// Column pre-processor - Variable: TOTCAP

	type Public Number TOTCAP

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set TOTCAP=cuvar.totcap
	quit

VP3	// Column pre-processor - Variable: LMTAMT

	type Public Number LMTAMT

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	set LMTAMT=(cuvar.totcap*cuvar.pctcap)/100
	quit
