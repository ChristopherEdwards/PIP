V01S518(Number %ProcessMode,RecordRATE1 fRATE1,RecordUTBLRATE UTBL)   // -  - SID= <RATE> Rate Schedule Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:34 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fRATE1.exists() set fRATE1 = Class.new("RecordRATE1")
  if 'UTBL.exists() set UTBL = Class.new("RecordUTBLRATE")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,RATE",VSID="RATE",VPGM=$T(+0),VSNAME="Rate Schedule Maintenance"
 set VFSN("RATE1")="zfRATE1",VFSN("UTBLRATE")="zUTBL"
 set vPSL=1
 set KEYS(1)=UTBL.SCH
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=12 do VPR(.fRATE1,.UTBL),VDA1(.fRATE1,.UTBL),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fRATE1,.UTBL) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fRATE1,.UTBL),VPR(.fRATE1,.UTBL),VDA1(.fRATE1,.UTBL)
 if %ProcessMode do VLOD(.fRATE1,.UTBL) quit:$G(ER)  do VPR(.fRATE1,.UTBL),VDA1(.fRATE1,.UTBL)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fRATE1,.UTBL)
	quit


VNEW(RecordRATE1 fRATE1,RecordUTBLRATE UTBL) // Initialize arrays if %O=0
 
 do VDEF(.fRATE1,.UTBL)
 do VLOD(.fRATE1,.UTBL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordRATE1 fRATE1,RecordUTBLRATE UTBL)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordRATE1 fRATE1,RecordUTBLRATE UTBL) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=12
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordRATE1 fRATE1,RecordUTBLRATE UTBL) // Display screen prompts
 set VO="7||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,9,15,0,0,0,0,0,0,0)_"01T Rate Schedule:"
 set VO(2)=$C(4,8,16,0,0,0,0,0,0,0)_"01T Effective Date:"
 set VO(3)=$C(4,52,16,0,0,0,0,0,0,0)_"01TRounding Option:"
 set VO(4)=$C(5,8,16,0,0,0,0,0,0,0)_"01TMinimum Balance:"
 set VO(5)=$C(5,49,19,0,0,0,0,0,0,0)_"01TCalculation Option:"
 set VO(6)=$C(7,26,27,1,0,0,0,0,0,0)_"01T Rate Schedule Maintenance "
 set VO(7)=$C(9,44,4,2,0,0,0,0,0,0)_"01TRate"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordRATE1 fRATE1,RecordUTBLRATE UTBL)  // Display screen data
 new V
 if %ProcessMode=5 new EFD,MBALTERM,ZTERM
 if  set (EFD,MBALTERM,ZTERM)=""
 else  set EFD=$G(EFD),MBALTERM=$G(MBALTERM),ZTERM=$G(ZTERM)
 
 s EFD=$G(EFD)
 s MBALTERM=$G(MBALTERM)
 s RATE=$G(RATE)
 s ZTERM=$G(ZTERM)
 //
 set VO="13|8|13|"
 set VO(8)=$C(1,25,8,2,0,0,0,0,0,0)_"01T"_$E(UTBL.SCH,1,8)
 set VO(9)=$C(4,25,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(EFD.get())
 set VO(10)=$C(4,69,2,2,0,0,0,0,0,0)_"01T"_$E(UTBL.ROPT,1,2)
 set VO(11)=$C(5,25,12,2,0,0,0,0,0,0)_"01T"_MBALTERM.get()
 set VO(12)=$C(5,69,1,2,0,0,0,0,0,0)_"01T"_$E(UTBL.COPT,1,1)
 set VO(13)=$C(9,28,8,2,0,0,0,0,0,0)_"01T"_ZTERM.get()
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+5,DY=11 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fRATE1,.UTBL)
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordRATE1 fRATE1,RecordUTBLRATE UTBL)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,RATE(I))=$G(RATE(I))
 
 set VO(VX+1)=$C(DY,32,4,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",1)
 set V=$P(v1,"|",2) set VO(VX+2)=$C(DY,41,8,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,5))
 set DY=DY+1,VX=VX+2
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordRATE1 fRATE1,RecordUTBLRATE UTBL)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=6,%MOD=2,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=10+%REPEAT,BLKSIZ=(12*%REPEAT)+41,PGM=$T(+0),DLIB="SYSDEV",DFID="RATE1,UTBLRATE"
 set OLNTB=VPB*1000
 
 set VFSN("RATE1")="zfRATE1",VFSN("UTBLRATE")="zUTBL"
 //
 for I=9:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,24,8)_"21T12401|1|[UTBLRATE]SCH|[UTBLRATE]"
 set %TAB(2)=$C(3,24,10)_"20D|*EFD|[*]@EFD"
 set %TAB(3)=$C(3,68,2)_"20T12403||[UTBLRATE]ROPT"
 set %TAB(4)=$C(4,24,12)_"21T|*MBALTERM|[*]@MBALTERM"
 set %TAB(5)=$C(4,68,1)_"20T12404||[UTBLRATE]COPT"
 set %TAB(6)=$C(8,27,8)_"20T|*ZTERM|[*]@ZTERM"
 set %TAB(7)=$C(10,31,4)_"00N12401|*RATE(1)|[*]@RATE|||do VP1^V01S518(.fRATE1,.UTBL)"
 set %TAB(8)=$C(10,40,8)_"00N12402|*RATE(1)|[*]@RATE|||||||5"
 do VTBL(.fRATE1,.UTBL)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordRATE1 fRATE1,RecordUTBLRATE UTBL) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordRATE1 fRATE1,RecordUTBLRATE UTBL) //
 if X-V=0 quit 
 if X="" quit 
 set R=""
 for I=1:1 set R=$O(RATE(R)) quit:R=""  if $P(RATE(R),"|",1)=X set ER=1 quit
 
 // Term already exists in the table
 if ER set RM=$$^MSG(7635)
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordRATE1 fRATE1
 type Public RecordUTBLRATE UTBL
 do VPR(.fRATE1,.UTBL)
 do VDA1(.fRATE1,.UTBL)
 do ^DBSPNT()
 quit

VW(RecordRATE1 fRATE1,RecordUTBLRATE UTBL)
 do VDA1(.fRATE1,.UTBL)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordRATE1 fRATE1,RecordUTBLRATE UTBL)
 do VDA1(.fRATE1,.UTBL)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordRATE1 fRATE1
 type Public RecordUTBLRATE UTBL
 do VDA1(.fRATE1,.UTBL)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordRATE1 fRATE1
 if sn="RATE1" do vSET1(.fRATE1,di,X)
 type Public RecordUTBLRATE UTBL
 if sn="UTBLRATE" do vSET2(.UTBL,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordRATE1 fRATE1,di,X)
 do fRATE1.setAuditFlag(1)
 set fRATE1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordUTBLRATE UTBL,di,X)
 do UTBL.setAuditFlag(1)
 set UTBL.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordRATE1 fRATE1
 if fid="RATE1" quit $$vREAD1(.fRATE1,di)
 type Public RecordUTBLRATE UTBL
 if fid="UTBLRATE" quit $$vREAD2(.UTBL,di)
 quit ""
vREAD1(RecordRATE1 fRATE1,di)
 quit fRATE1.@di
vREAD2(RecordUTBLRATE UTBL,di)
 quit UTBL.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 //
VSCRPRE(RecordRATE1 fRATE1,RecordUTBLRATE UTBL)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type Public String ZTERM
 set ZTERM=UTBL.tint
 set ZTERM=$S(ZTERM="M":$$^MSG(8260),ZTERM="Y":$$^MSG(8261),1:$$^MSG(8262))
 quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
