V01S569(Number %ProcessMode,RecordSTBLTSD fSTBLTSD)   // -  - SID= <STBLTSD> Transaction Qualifier Screen
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:34 - joynerd
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fSTBLTSD.exists() set fSTBLTSD = Class.new("RecordSTBLTSD")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="STBLTSD",VPGM=$T(+0),VSNAME="Transaction Qualifier Screen"
 set VFSN("STBLTSD")="zfSTBLTSD"
 set vPSL=1
 set KEYS(1)=fSTBLTSD.SEQ
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fSTBLTSD),VDA1(.fSTBLTSD),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fSTBLTSD),VPR(.fSTBLTSD),VDA1(.fSTBLTSD)
 if %ProcessMode do VLOD(.fSTBLTSD) quit:$G(ER)  do VPR(.fSTBLTSD),VDA1(.fSTBLTSD)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fSTBLTSD)
	quit


VNEW(RecordSTBLTSD fSTBLTSD) // Initialize arrays if %O=0
 
 do VDEF(.fSTBLTSD)
 do VLOD(.fSTBLTSD)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordSTBLTSD fSTBLTSD)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordSTBLTSD fSTBLTSD) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordSTBLTSD fSTBLTSD) // Display screen prompts
 set VO="16||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,21,36,0,0,0,0,0,0,0)_"01TTransaction Support Data Maintenance"
 set VO(2)=$C(3,13,9,1,0,0,0,0,0,0)_"01TSequence:"
 set VO(3)=$C(4,14,8,1,0,0,0,0,0,0)_"01TAcronym:"
 set VO(4)=$C(5,4,18,1,0,0,0,0,0,0)_"01TTransaction Class:"
 set VO(5)=$C(6,10,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(6)=$C(7,8,14,0,0,0,0,0,0,0)_"01TTeller Prompt:"
 set VO(7)=$C(9,7,15,0,0,0,0,0,0,0)_"01TFunction/Query:"
 set VO(8)=$C(10,4,18,0,0,0,0,0,0,0)_"01TTransaction Based:"
 set VO(9)=$C(12,14,8,0,0,0,0,0,0,0)_"01TDefault:"
 set VO(10)=$C(13,4,18,0,0,0,0,0,0,0)_"01TDefault Processor:"
 set VO(11)=$C(15,7,15,0,0,0,0,0,0,0)_"01THelp Data Item:"
 set VO(12)=$C(16,8,14,1,0,0,0,0,0,0)_"01TData Location:"
 set VO(13)=$C(17,10,12,0,0,0,0,0,0,0)_"01TData Format:"
 set VO(14)=$C(18,4,18,0,0,0,0,0,0,0)_"01TResponse Required:"
 set VO(15)=$C(20,1,21,0,0,0,0,0,0,0)_"01TDerive Lookup w/MRPC:"
 set VO(16)=$C(21,8,14,0,0,0,0,0,0,0)_"01Tor SQL Select:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordSTBLTSD fSTBLTSD)  // Display screen data
 new V
 //
 set VO="31|17|13|0"
 set VO(17)=$C(3,23,4,2,0,0,0,0,0,0)_"01N"_fSTBLTSD.SEQ
 set VO(18)=$C(4,23,15,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.ACRONYM,1,15)
 set VO(19)=$C(5,23,1,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.CLASS,1,1)
 set VO(20)=$C(6,23,40,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.DES,1,40)
 set VO(21)=$C(7,23,40,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.PROMPT,1,40)
 set VO(22)=$C(9,23,40,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.FUNQRY,1,40)
 set VO(23)=$C(10,23,1,2,0,0,0,0,0,0)_"00L"_$S(fSTBLTSD.QRYTRNBS:"Y",1:"N")
 set VO(24)=$C(12,23,40,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.DEFAULT,1,40)
 set VO(25)=$C(13,23,58,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.PRE,1,100)
 set VO(26)=$C(15,23,40,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.HELP,1,40)
 set VO(27)=$C(16,23,1,2,0,0,0,0,0,0)_"00N"_fSTBLTSD.DATALOC
 set VO(28)=$C(17,23,1,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.TYPE,1,1)
 set VO(29)=$C(18,23,1,2,0,0,0,0,0,0)_"00L"_$S(fSTBLTSD.REQD:"Y",1:"N")
 set VO(30)=$C(20,23,3,2,0,0,0,0,0,0)_"00N"_fSTBLTSD.MRPC
 set VO(31)=$C(21,23,58,2,0,0,0,0,0,0)_"00T"_$E(fSTBLTSD.SQL,1,100)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordSTBLTSD fSTBLTSD)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=15,VPT=1,VPB=21,PGM=$T(+0),DLIB="SYSDEV",DFID="STBLTSD"
 set OLNTB=21023
 
 set VFSN("STBLTSD")="zfSTBLTSD"
 //
 // 
	
	
 set %TAB(1)=$C(2,22,4)_"21N12401|1|[STBLTSD]SEQ|||||||||12"
 set %TAB(2)=$C(3,22,15)_"01T12401|1|[STBLTSD]ACRONYM|[STBLTSO]"
 set %TAB(3)=$C(4,22,1)_"01T12409|1|[STBLTSD]CLASS|[STBLCLS]"
 set %TAB(4)=$C(5,22,40)_"01T12403|1|[STBLTSD]DES"
 set %TAB(5)=$C(6,22,40)_"01T12402|1|[STBLTSD]PROMPT"
 set %TAB(6)=$C(8,22,40)_"00T12411|1|[STBLTSD]FUNQRY"
 set %TAB(7)=$C(9,22,1)_"00L12414|1|[STBLTSD]QRYTRNBS"
 set %TAB(8)=$C(11,22,40)_"00T12404|1|[STBLTSD]DEFAULT"
 set %TAB(9)=$C(12,22,58)_"00T12406|1|[STBLTSD]PRE|||||||||100"
 set %TAB(10)=$C(14,22,40)_"00T12405|1|[STBLTSD]HELP"
 set %TAB(11)=$C(15,22,1)_"01N12412|1|[STBLTSD]DATALOC|[STBLFFTL]"
 set %TAB(12)=$C(16,22,1)_"01T12413|1|[STBLTSD]TYPE|[STBLTSDTYPE]"
 set %TAB(13)=$C(17,22,1)_"00L12410|1|[STBLTSD]REQD"
 set %TAB(14)=$C(19,22,3)_"00N12407|1|[STBLTSD]MRPC"
 set %TAB(15)=$C(20,22,58)_"00T12408|1|[STBLTSD]SQL|||||||||100"
 do VTBL(.fSTBLTSD)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordSTBLTSD fSTBLTSD) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordSTBLTSD fSTBLTSD
 do VPR(.fSTBLTSD)
 do VDA1(.fSTBLTSD)
 do ^DBSPNT()
 quit

VW(RecordSTBLTSD fSTBLTSD)
 do VDA1(.fSTBLTSD)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordSTBLTSD fSTBLTSD)
 do VDA1(.fSTBLTSD)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordSTBLTSD fSTBLTSD
 do VDA1(.fSTBLTSD)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordSTBLTSD fSTBLTSD
 if sn="STBLTSD" do vSET1(.fSTBLTSD,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordSTBLTSD fSTBLTSD,di,X)
 do fSTBLTSD.setAuditFlag(1)
 set fSTBLTSD.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordSTBLTSD fSTBLTSD
 if fid="STBLTSD" quit $$vREAD1(.fSTBLTSD,di)
 quit ""
vREAD1(RecordSTBLTSD fSTBLTSD,di)
 quit fSTBLTSD.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
