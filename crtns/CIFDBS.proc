CIFDBS	//;Pre- and Post- processors for CIF's
	/*
	   ORIG:  Dan S. Russell (2417) - 06/27/86

	   Pre- and Post- processors used by CIF applications

	  ---- Revision History ------------------------------------------------

	   09/07/2006 - KinI - 22447
	   	Modified value section to check if the data item protection 
	   	scheme is set up on the column referenced in TCMT. After the
	   	protection value on the column is determined, and appears that 
	   	the user class has no access to this columns value, returned 
	   	variable VALUE will be reset to null.

	   05/21/2002 - TELIV - 49794
		Converted to PSL , Also removed refernces done by screen CIFHH
		since it was Obsoleted from V6.3

	 ---------------------------------------------------------------------

	*/

PRELNM	// Pre-processing for last name

	new V
	if $D(CIF(1)) set V=$P(CIF(1),"|",1)            
	else  do {
		type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
		set V=cif.nam
		}
	
	do FBL^XALPHA set LN=$E($P(LN,",",1),1,20)

	// Last Name
	set $P(CIF(3),"|",1)=LN
	quit


POSLNM	// Post-processor checking for valid last name

	new V,XX
	set XX=$$UPPER^%ZFUNC(X)

	if $D(CIF(1)) set V=CIF(1)             
	else  do {
		type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
		set V=cif.nam
		}

	set V=$$UPPER^%ZFUNC(V)

	// Last name is not part of full name
	if " "[XX!(V'[XX) set ER=1 set RM=$$^MSG(1593)

	quit

DI	//
	/* Reports for file CIFD - get good DI
	   Called by DQ report SCA310 and routine ^CIFH
	   Remove ACN from front
	*/

	quit:DI'["["  set DI="["_$P(DI,"[",2)

	quit

DIDSC	//
	/* Reports for file CIFD - get description of data item
	   Called by DQ report SCA310 and routine ^CIFH
	*/

	new DFID,DI,DLIB
	set DI=DIDSC 
	do DI 

	set X=DI

	set DFID="CIF" 
	set DLIB=%LIBS 
	do ^DBSDI
	
	set DIDSC=$G(DI(10))

	quit

OLDV	//
	/* Get old value
	   Called by DQ report SCA310
	*/

	set X=OLDV 
	do VALUE 

	set OLDV=X

	quit

NEWV	//
	/* Get new value
	   Called by DQ report SCA310
	*/

	set X=NEWV 
	do VALUE 

	set NEWV=X

	quit

VALUE	//
	/* Convert possible dates for OLDV and NEWV for file CIFD
	   Called by routine ^CIFH
	*/

	quit:'$D(DI)  
	set XDI=DI 
	new DFID,DI,DLIB

	set DFID="CIF" 
	set DLIB=%LIBS 
	do V1

	if $G(DI(9))="D" set X=$$DAT^%ZM(X,$G(%MSKD))

	quit

V1	//
	new X 
	set X=XDI 
	do ^DBSDI

	quit

MMDD	// Check validity of MMDD entry (for data item [CIF]DYE)
	quit:X=""  
	set %DS=$E(X,1,2)_"|"_$E(X,3,4)_"|"_$$DAT^%ZM(+%CurrentDate,"YEAR")

	// Invalid date
	new X 
	set %JD=$$^SCAJD(%DS) 
	if %JD<0 do {
		set ER=1 
		set RM=$$^MSG(1308)
		}
	quit



CIFTYP	//
	/* For UHHOLD screen, validate list of CIF types for household
	   Enter list of valid CIF types separated by commas (e.g., 0,1)
	*/

	new z,ztype
	if X="?"!(%fkey="SEL") set ER=1 set RM=$$^MSG(945) quit

	// Type ~p1 is not a valid CIF type

	type ResultSet rs=Db.select("TYPE","PRODDFTC")
	if 'rs.isEmpty() while rs.next() do {
		set ztype=rs.getCol(1)
		set ztype(ztype)=""
		}

        for I=1:1 quit:$P(X,",",I)=""  if '$D(ztype($P(X,",",I))) set ER=1 set RM=$$^MSG(2771,$P(X,",",I)) quit
 
        quit


di(TCMT)	// DI in CIFH, CIFD, and HIST

	/* 
	This section contains code for computed columns in CIFH, CIFH,
	and HIST
	*/

	new DI
	set DI=$$getdi(TCMT)

	// Make table.column
	if DI'="" set DI=$TR(DI,"][",".")

	quit DI

didsc(TCMT)	// DIDSC in CIFH, CIFD, and HIST
	/* If no data item is involved, return TCMT value
	   In the event of an error, return input value for display
	*/

	new DI,DIDSC

	if $L(TCMT,":")<3 quit TCMT
	set DI=$$getdi(TCMT) if DI="" quit TCMT
	do {
		// Need to N DI, but save value
		new X set X=DI
		new DI set DI=X
		do ^DBSDI
		set DIDSC=$G(DI(10))
		}

	if ER set ER=0 set RM="" set DIDSC=DI

	quit DIDSC

oldv(String TCMT)	// Transaction Comment	

	// OLDV in CIFH, CIFD, and HIST

	quit $$value(TCMT,2)


newv(String TCMT)	// Transaction Comment

	// NEWV in CIFH, CIFD, and HIST

	quit $$value(TCMT,3)


value(String TCMT,	// Transaction Comment
      Number p)		// Old/New Value Indicator (2-Old, 3-New)
      
	// Get value, turn dates into proper format
	
	type public Boolean ER
	type public String %MSKD, RM
	type String DI, VALUE, PROTVAL = ""	

	// Return null if not data item
	if (TCMT.length(":") < 3) quit ""

	set DI = $$getdi(TCMT)
	if DI.isNull() quit ""

	set VALUE = TCMT.piece(":",p)  	// Get value

	// Format date values
	do {
		type String X = DI
		type String DI = X
		type public String FID

		do ^DBSDI

		// Leave original value if error
		if ER set ER = 0 set RM = "" quit
		
		// Check data item protection scheme on DI
		#ACCEPT DATE=09/07/05; PGM=Irina Kin; CR=22447
		type ResultSet rs = Db.select(DI,FID,,,,"/PROTECTION=2")
		if rs.next() set PROTVAL = rs.getColProt(1)
		
		if (DI(9).get() = "D") set VALUE = VALUE.toString(%MSKD.get())
		}

	// null
	if VALUE.isNull() set VALUE = $$^MSG(922)

	// User class has no access to DI columns value - mask return value
	if (PROTVAL = 3) set VALUE = ""
		
	quit VALUE


private	getdi(String TCMT)	// Transaction Comment

	// Get DI from TCMT, return null if no data item
	type String di

	set di = TCMT.piece(":",1)
	if (di'["[") quit ""

	// Strip any keys
	set di.piece("[",1) = ""

	quit di

vSIG()	quit "60527^37812^Irina Kin^4880"	// Signature - LTD^TIME^USER^SIZE
