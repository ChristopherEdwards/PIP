R01S013	// SCA722 - Multiple Investor Custodial Summary
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:53 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number EWASH=1
	type Date FD=TJD.get()
	type Number PWASH=1
	type Date TD=TJD.get()
	type Number TONLY=1

	set RID="SCA722"
	set RN="Multiple Investor Custodial Summary"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("EWASH")="|1|||||||L|Escrow Wash Account|||||"
	set %TAB("FD")="|10|||||||D|Start Date|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("PWASH")="|1|||||||L|P&I Wash Account|||||"
	set %TAB("TD")="|10|||||||D|End Date|||||"
	set %TAB("TONLY")="|1|||||||L|Totals Only|||||"

	set %READ="IO/REQ,PWASH#0,EWASH#0,FD#0,TD#0,TONLY#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD
	type public Date FD,TD
	type public Number PWASH,EWASH,TONLY
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,BEGINBAL,CONAM,CUSTTEST,EBAL,ENDBAL(),RID,RN,TEXT,TOTCR,TOTDR,VL,VLOF,VRF(),VSTATS(),WASH,vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsql,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA722",RN="Multiple Investor Custodial Summary"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA722","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[REP722]FDATE#8#10,[REP722]EDATE#19#10,[REP722]ETC#32#12,[REP722]CRAMT#49#18,[REP722]DRAMT#69#18,[REP722]TCMT#89#40"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE


		set VWHERE="REP722.PROCESSID=:%ProcessID AND REP722.TSEQ>0"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="Multiple Investor Custodial Summary"
		set VBNRINFO("PGM")="R01S013"
		set VBNRINFO("RID")="SCA722"
		set VBNRINFO("TABLES")="REP722"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,REP722]PROCESSID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,REP722]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,REP722]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("REP722.PROCESSID,REP722.CID,REP722.TSEQ,REP722.FDATE,REP722.EDATE,REP722.ETC,REP722.CRAMT,REP722.DRAMT,REP722.TCMT","REP722","REP722.PROCESSID=:%ProcessID AND REP722.TSEQ>0","REP722.PROCESSID,REP722.CID,REP722.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
	set vc1=V.piece($C(9),1)			// REP722.PROCESSID
	set vc2=V.piece($C(9),2)			// REP722.CID
	set vc3=V.piece($C(9),3)			// REP722.TSEQ
	set vc4=V.piece($C(9),4)			// REP722.FDATE
	set vc5=V.piece($C(9),5)			// REP722.EDATE
	set vc6=V.piece($C(9),6)			// REP722.ETC
	set vc7=V.piece($C(9),7)			// REP722.CRAMT
	set vc8=V.piece($C(9),8)			// REP722.DRAMT
	set vc9=V.piece($C(9),9)			// REP722.TCMT
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type String INCD,PL
	type Number PIWASH,ESCWASH
	type Public Number EWASH,PWASH
	type DbSet ds=Db.selectDbSet("LNLS8",,"INCD,PL ASC")
	while ds.next() do {
		type RecordLNLS8 lnls8=ds.getRecord("LNLS8")
		set INCD=lnls8.incd
		set PL=lnls8.pl
		type RecordLNLS2 lnls2=Db.getRecord("LNLS2","INCD=:INCD,PL=:PL")
		set PIWASH=lnls2.wash
		set ESCWASH=lnls2.escwash
		if PWASH,PIWASH'="" do HIST(PIWASH)
		if EWASH,ESCWASH'="" do HIST(ESCWASH)
	}
	quit
HIST(WASH)
	type public Date FD,TD
	type public Number ENDBAL(),vsql
	type Number TSEQ
	type ResultSet rs=Db.select("TJD,ITC,EFD,ETC,TCMT,TAMT,TSEQ,ENDBAL","HIST","CID=:WASH","TSEQ DESC")
	while rs.next() do {
		if rs.getCol("TJD")>TD quit
		if rs.getCol("TJD")<FD set vsql=0 quit
		if 'rs.getCol("TAMT") quit
		set TSEQ=rs.getCol("TSEQ")
		type ResultSet rsbal=Db.select("TSEQ","REP722","PROCESSID=:%ProcessID AND CID=:WASH") 
		if rsbal.isEmpty() set ENDBAL(WASH)=rs.getCol("ENDBAL")
		type RecordREP722 rep722=Db.getRecord("REP722","PROCESSID=:%ProcessID,CID=WASH,TSEQ=TSEQ",1)
		set rep722.edate=rs.getCol("EFD")	
		set rep722.tcmt=rs.getCol("TCMT")
		set rep722.etc=rs.getCol("ETC")
		set rep722.fdate=rs.getCol("TJD")
		if rs.getCol("ITC").extract() set rep722.cramt=rs.getCol("TAMT")
		else  set rep722.dramt=rs.getCol("TAMT")
		do rep722.save()
	}
	quit

VRPOST	// Report post-processor

 do Db.delete("REP722","PROCESSID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,BEGINBAL,CONAM,CUSTTEST,EBAL,ENDBAL(),ER,EWASH,FD,IOSL,PWASH,RID,RN,TD,TEXT,TJD,TOTCR,TOTDR,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,WASH,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsql,vsysdate

	quit:vh(3)  set vh(3)=1				// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	do VP1 quit:VFMQ!verror.get()  set V=$E(CUSTTEST,1,18) do VP2 quit:VFMQ!verror.get()  set VL=V
	set V=vc2,VO=V set V=$J(V,12) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",19-VL.length())_V		// [SYSDEV,REP722]CID
	do VOM
	set VL="" do VOM
	quit

VDTL3	// Detail
	type public String %TIM,BEGINBAL,CUSTTEST,EBAL,ENDBAL(),EWASH,FD,IOSL,PWASH,TD,TEXT,TJD,TOTCR,TOTDR,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),WASH,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsql,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(3)=0 do VHDG3 quit:VFMQ

	set VL="       "_$J($$DAT^%ZM(vc4),10)
	set VL=VL_$J("",18-VL.length())_$J($$DAT^%ZM(vc5),10)
	set VL=VL_$J("",31-VL.length())_$E(vc6,1,12)
	set V=vc7,VO=V set V=$J($FN(V,",",2),22) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",44-VL.length())_V		// [SYSDEV,REP722]CRAMT
	set V=vc8,VO=V set V=$J($FN(V,",",2),19) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",67-VL.length())_V		// [SYSDEV,REP722]DRAMT
	set V=vc9,VO=V set V=$E(V,1,40) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",88-VL.length())_V		// [SYSDEV,REP722]TCMT
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM3	// Summary
	type public String %TIM,BEGINBAL,CUSTTEST,EBAL,ENDBAL(),EWASH,FD,I,IOSL,PWASH,TD,TEXT,TJD,TOTCR,TOTDR,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),WASH,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsql,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(3)=0 do VHDG3 quit:VFMQ

	set VL="                                 "_"Beginning Balance "
	set VL=VL_$J("",57-VL.length())_"Total Credits"
	set VL=VL_$J("",78-VL.length())_"Total Debits"
	set VL=VL_$J("",96-VL.length())_"Ending Balance"
	do VOM
	do VP7 quit:VFMQ!verror.get()  set V=$E(TEXT,1,12) do VP8 quit:VFMQ!verror.get()  set VL="      "_V
	set V=$J(WASH,12) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",19-VL.length())_V
	do VP10 quit:VFMQ!verror.get()  set V=$J($FN(BEGINBAL,",",2),18)
	set VL=VL_$J("",32-VL.length())_V
	set VL=VL_$J("",52-VL.length())_$J($FN(TOTCR,",",2),18)
	set VL=VL_$J("",72-VL.length())_$J($FN(TOTDR,",",2),18)
	do VP11 quit:VFMQ!verror.get()  set V=$J($FN(EBAL,",",2),18)
	set VL=VL_$J("",92-VL.length())_V
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BEGINBAL,CONAM,CUSTTEST,EBAL,ENDBAL(),EWASH,FD,PWASH,RID,RN,TD,TEXT,TJD,TOTCR,TOTDR,VL,WASH,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsql,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",98-VL.length())_"Run Date:"
	set VL=VL_$J("",108-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",100-VL.length())_"System:"
	set VL=VL_$J("",108-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="Start Date: "
	set VL=VL_$J("",12-VL.length())_$J($$DAT^%ZM(FD),10)
	set VL=VL_$J("",36-VL.length())_"End Date:"
	set VL=VL_$J("",46-VL.length())_$J($$DAT^%ZM(TD),10)
	do VOM
	set VL="" do VOM
	set VL="        "_"Tran Date  Effective   Tran Code                   Credits              Debits  Comments"
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: CUSTTEST

 type public String CUSTTEST
 // Custodial Account
 S CUSTTEST=$$^MSG(4733)_":"
	quit

VP2	// Column post-processor - Variable: CUSTTEST

 type public Number IOSL,VLC
 type public String V
 // don't print if near bottom
 if IOSL-VLC<3 set V=""
	quit

VP3	// Column post-processor - [SYSDEV,REP722]CID

	type public String vc2
 type public Number TOTCR,TOTDR,WASH
 set TOTCR=0
 set TOTDR=0
 set WASH=vc2
	quit

VP4	// Column post-processor - [SYSDEV,REP722]CRAMT

	type public String vc7
 type public Number TOTCR
 set TOTCR=TOTCR+vc7
	quit

VP5	// Column post-processor - [SYSDEV,REP722]DRAMT

	type public String vc8
 type public Number TOTDR
 set TOTDR=TOTDR+vc8
	quit

VP6	// Column post-processor - [SYSDEV,REP722]TCMT

 type public Boolean TONLY
 type public String V,V0,VL
 if TONLY set (V,VL,V0)=""
	quit

VP7	// Column pre-processor - Variable: TEXT

 type public String TEXT
 // Totals for
 set TEXT=$$^MSG(4734)_":"
	quit

VP8	// Column post-processor - Variable: TEXT

 type public Boolean TONLY
 type public String V
 if TONLY set V=""
	quit

VP9	// Column post-processor - Variable: WASH

 type public Boolean TONLY
 type public String V
 if TONLY set V=""
	quit

VP10	// Column pre-processor - Variable: BEGINBAL

 type public Number BEGINBAL,ENDBAL(),TOTCR,TOTDR,WASH
 set BEGINBAL=ENDBAL(WASH)-TOTCR+TOTDR
	quit

VP11	// Column pre-processor - Variable: EBAL

 type public Number EBAL,ENDBAL(),WASH
 set EBAL=ENDBAL(WASH)
	quit
