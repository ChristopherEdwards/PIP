DEPAEC2		/*
	   ORIG:  Tom Locke (2424) - 02/23/87

	   Utility to handle AEC transactions. Will use AEC amount and debit
	   accrued, credit interest paid, offset BWA and debit account balance.

	  CALLED BY: ^ITSINT, BCHROLL

	---- Revision History ------------------------------------------------

	11/14/02 - ZWITKOWITSM - 43583
		   PSL clean-up.

	06/13/02 - ZWITKOWITSM - 43583
		   Converted to PSL.

	----------------------------------------------------------------------
	*/

	quit


Public AEC(RecordDEP dep)	// Anticipated earnings check adjustments
	/*
	   Adjust accrual to equal the anticipated earnings check amount,
	   not to exceed maximum adjustment amount.

	   INTAMT must exist coming into this tag
	*/

	type Public Cache %CACHE()

	new TYPE

	set TYPE=dep.type

	type RecordPRODCTL prodctl=%CACHE("PRODCTL").getRecord("PRODCTL","TYPE")

	set ADJ=INTAMT-$$^SCARND(dep.posacr,0,dep.cid)

	if 'ADJ quit

	if $$FN^SCARND(ADJ,"-",dep.cid)>prodctl.maxadj,prodctl.maxadj'="" do { quit

		do Runtime.setErrSTBLER("DEP","MAXADJ")

		// Accrual adj amount exceeds maximum
		if '$D(ITS) do LOG^UTLEXC(%RoutineName,"*",$$^MSG(3463),dep.cid,"",ET)
		}

	// Anticipated earning check adjustment
	set TCMT=$$^MSG(3464)

	do ACR(.dep)

	quit


Public PME(RecordDEP dep) // Projected maturity earnings

	new INT,%EffectiveDate

	set PRIN=+dep.bal
	set %EffectiveDate=dep.pmedat
	set POPT=0

	do EXEC^DEPAES

	set ADJ=$$^SCARND(ACR-dep.posacr,0,dep.cid)
	set ACR=$$^SCARND(ACR,0,dep.cid)

	if 'ADJ quit

	// Proj maturity adj
	set TCMT=$$^MSG(3465)

	do ACR(.dep)

	quit


Public ACR(RecordDEP dep)	// Accrual adjustment

	type Public Cache %CACHE()

	new ETC,GLSC,TYPE

	set TYPE=dep.type
	set GLSC=dep.glsc

	type RecordPRODCTL prodctl=%CACHE("PRODCTL").getRecord("PRODCTL","TYPE")
	type RecordUTBLGLSC utblglsc=%CACHE("UTBLGLSC").getRecord("UTBLGLSC","GLSC")

	if ADJ<0 do {
		set ETC=prodctl.dradin
		set TAMT=-ADJ
		}
	else  do {
		set ETC=prodctl.cradin
		set TAMT=ADJ
		}

	do TRN(.dep,"",ETC)

	if ADJ<0 set ETC="MCR"
	else  set ETC="MDR"

	do TRN(.dep,+utblglsc.dgl2,ETC)

	// Restore TCMT and TSO
	set (TCMT,TSO)=""

	quit


TRN(RecordDEP dep,GL,ETC)

	type Public Cache %CACHE()

	type RecordTRN trn=%CACHE("TRN").getRecord("TRN","ETC=:ETC")
	type RecordTTX ttx=Class.new("RecordTTX")

	set TRC=TRC+1

	set ttx.tjd=TPD
	set ttx.brcd=BRCD
	set ttx.uid=%UserID
	set ttx.tseq=TRC
	if GL="" set ttx.cid=dep.cid
	else  set ttx.cid=GL
	set ttx.itc=trn.itc
	set ttx.etc=ETC
	set ttx.tamt=TAMT
	set ttx.efd=%EffectiveDate
	set ttx.tlo=%UserStation
	set ttx.tso=TSO
	set ttx.tcmt=TCMT
	set ttx.cdt=%CurrentDate
	set ttx.tim=%CurrentTime
	set ttx.brcde=BRCD
	set ttx.trc=TRC
	set ttx.uidt=%UserID

	if $D(ITS) do TRNSINGL^TRNDRV(.ttx,.dep,TPD,BRCD,5)

	else  do ttx.bypassSave()

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "59886^43507^Sanchez SCM Administrator^2635"	// Signature - LTD^TIME^USER^SIZE
