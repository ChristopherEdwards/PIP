V00S174(%ProcessMode,RecordUTBLEXTINT fEXTINT)   // -  - SID= <EXTINT2> External Interface Parameter Setup
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:18 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="EXTINT2",VPGM=$T(+0),VSNAME="External Interface Parameter Setup"
 set VFSN("UTBLEXTINT")="zfEXTINT"
 set vPSL=1
 set KEYS(1)=fEXTINT.INTRFACE
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fEXTINT),VDA1(.fEXTINT),^DBSPNT()

 if '%ProcessMode do VNEW(.fEXTINT),VPR(.fEXTINT),VDA1(.fEXTINT)
 if %ProcessMode do VLOD(.fEXTINT) quit:$G(ER)  do VPR(.fEXTINT),VDA1(.fEXTINT)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEXTINT)
	quit


VNEW(RecordUTBLEXTINT fEXTINT) // Initialize arrays if %O=0
 
 do VDEF(.fEXTINT)
 do VLOD(.fEXTINT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLEXTINT fEXTINT)
 if fEXTINT.PINCOL="" set fEXTINT.PINCOL="PIN"
 if fEXTINT.PINTBL="" set fEXTINT.PINTBL="CIF"
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLEXTINT fEXTINT) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLEXTINT fEXTINT) // Display screen prompts
 set VO="21||13|"
 set VO(0)="3|0"
 set VO(1)=$C(3,32,15,0,0,0,0,0,0,0)_"01TMonitor Process"
 set VO(2)=$C(4,3,20,0,0,0,0,0,0,0)_"01TConnection Attempts:"
 set VO(3)=$C(4,43,17,0,0,0,0,0,0,0)_"01TConnection Timer:"
 set VO(4)=$C(5,7,16,0,0,0,0,0,0,0)_"01TEXCHMSG Timeout:"
 set VO(5)=$C(5,43,17,0,0,0,0,0,0,0)_"01TEXCHMSG Attempts:"
 set VO(6)=$C(6,9,14,0,0,0,0,0,0,0)_"01TProcess Timer:"
 set VO(7)=$C(6,40,20,0,0,0,0,0,0,0)_"01TMonitor Event Timer:"
 set VO(8)=$C(7,8,15,0,0,0,0,0,0,0)_"01TTransport Name:"
 set VO(9)=$C(8,6,17,0,0,0,0,0,0,0)_"01TClient Type Name:"
 set VO(10)=$C(9,4,19,0,0,0,0,0,0,0)_"01TProcess Identifier:"
 set VO(11)=$C(11,28,23,0,0,0,0,0,0,0)_"01TClient Message Exchange"
 set VO(12)=$C(12,5,18,0,0,0,0,0,0,0)_"01TEXCHMSG Timeout 1:"
 set VO(13)=$C(12,41,19,0,0,0,0,0,0,0)_"01TEXCHMSG Attempts 1:"
 set VO(14)=$C(13,6,17,0,0,0,0,0,0,0)_"01TTransport Name 1:"
 set VO(15)=$C(14,4,19,0,0,0,0,0,0,0)_"01TClient Type Name 1:"
 set VO(16)=$C(16,5,18,0,0,0,0,0,0,0)_"01TEXCHMSG Timeout 2:"
 set VO(17)=$C(16,41,19,0,0,0,0,0,0,0)_"01TEXCHMSG Attempts 2:"
 set VO(18)=$C(17,6,17,0,0,0,0,0,0,0)_"01TTransport Name 2:"
 set VO(19)=$C(18,4,19,0,0,0,0,0,0,0)_"01TClient Type Name 2:"
 set VO(20)=$C(20,9,14,0,0,0,0,0,0,0)_"01TTM Queue Type:"
 set VO(21)=$C(20,44,16,0,0,0,0,0,0,0)_"01TMessage Logging:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLEXTINT fEXTINT)  // Display screen data
 new V
 //
 set VO="40|22|13|"
 set VO(22)=$C(4,24,3,2,0,0,0,0,0,0)_"00N"_fEXTINT.MONCONATT
 set VO(23)=$C(4,61,4,2,0,0,0,0,0,0)_"00N"_fEXTINT.MONCONTIM
 set VO(24)=$C(5,24,2,2,0,0,0,0,0,0)_"00N"_fEXTINT.MONEXCHTIM
 set VO(25)=$C(5,61,3,2,0,0,0,0,0,0)_"00N"_fEXTINT.MONEXCHATT
 set VO(26)=$C(6,24,4,2,0,0,0,0,0,0)_"00N"_fEXTINT.MONPROCTIM
 set VO(27)=$C(6,61,4,2,0,0,0,0,0,0)_"00N"_fEXTINT.MONEVNTTIM
 set VO(28)=$C(7,24,8,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT.MONMTNAME,1,8)
 set VO(29)=$C(8,24,40,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT.MONCLTYPE,1,40)
 set VO(30)=$C(9,24,40,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT.MONPROCID,1,40)
 set VO(31)=$C(12,24,2,2,0,0,0,0,0,0)_"00N"_fEXTINT.EXCHTIM1
 set VO(32)=$C(12,61,3,2,0,0,0,0,0,0)_"00N"_fEXTINT.EXCHATT1
 set VO(33)=$C(13,24,8,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT.MTNAME1,1,8)
 set VO(34)=$C(14,24,40,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT.CLTYPE1,1,40)
 set VO(35)=$C(16,24,2,2,0,0,0,0,0,0)_"00N"_fEXTINT.EXCHTIM2
 set VO(36)=$C(16,61,3,2,0,0,0,0,0,0)_"00N"_fEXTINT.EXCHATT2
 set VO(37)=$C(17,24,8,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT.MTNAME2,1,8)
 set VO(38)=$C(18,24,40,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT.CLTYPE2,1,40)
 set VO(39)=$C(20,24,12,2,0,0,0,0,0,0)_"00T"_$E(fEXTINT.QTYPE,1,12)
 set VO(40)=$C(20,61,1,2,0,0,0,0,0,0)_"00N"_fEXTINT.%LOG
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLEXTINT fEXTINT)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=19,VPT=3,VPB=20,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLEXTINT"
 set OLNTB=20061
 
 set VFSN("UTBLEXTINT")="zfEXTINT"
 //
 // 
	
	
 set %TAB(1)=$C(3,23,3)_"00N12401|1|[UTBLEXTINT]MONCONATT"
 set %TAB(2)=$C(3,60,4)_"00N12402|1|[UTBLEXTINT]MONCONTIM"
 set %TAB(3)=$C(4,23,2)_"00N12406|1|[UTBLEXTINT]MONEXCHTIM"
 set %TAB(4)=$C(4,60,3)_"00N12407|1|[UTBLEXTINT]MONEXCHATT"
 set %TAB(5)=$C(5,23,4)_"00N12404|1|[UTBLEXTINT]MONPROCTIM"
 set %TAB(6)=$C(5,60,4)_"00N12405|1|[UTBLEXTINT]MONEVNTTIM"
 set %TAB(7)=$C(6,23,8)_"00T12408|1|[UTBLEXTINT]MONMTNAME"
 set %TAB(8)=$C(7,23,40)_"00T12409|1|[UTBLEXTINT]MONCLTYPE"
 set %TAB(9)=$C(8,23,40)_"00T12403|1|[UTBLEXTINT]MONPROCID"
 set %TAB(10)=$C(11,23,2)_"00N12401|1|[UTBLEXTINT]EXCHTIM1"
 set %TAB(11)=$C(11,60,3)_"00N12402|1|[UTBLEXTINT]EXCHATT1"
 set %TAB(12)=$C(12,23,8)_"00T12403|1|[UTBLEXTINT]MTNAME1"
 set %TAB(13)=$C(13,23,40)_"00T12404|1|[UTBLEXTINT]CLTYPE1"
 set %TAB(14)=$C(15,23,2)_"00N12405|1|[UTBLEXTINT]EXCHTIM2"
 set %TAB(15)=$C(15,60,3)_"00N12406|1|[UTBLEXTINT]EXCHATT2"
 set %TAB(16)=$C(16,23,8)_"00T12407|1|[UTBLEXTINT]MTNAME2"
 set %TAB(17)=$C(17,23,40)_"00T12408|1|[UTBLEXTINT]CLTYPE2"
 set %TAB(18)=$C(19,23,12)_"00T12406|1|[UTBLEXTINT]QTYPE"
 set %TAB(19)=$C(19,60,1)_"00N12408|1|[UTBLEXTINT]%LOG"
 do VTBL(.fEXTINT)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLEXTINT fEXTINT) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLEXTINT fEXTINT
 do VPR(.fEXTINT)
 do VDA1(.fEXTINT)
 do ^DBSPNT()
 quit

VW(RecordUTBLEXTINT fEXTINT)
 do VDA1(.fEXTINT)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLEXTINT fEXTINT)
 do VDA1(.fEXTINT)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLEXTINT fEXTINT
 do VDA1(.fEXTINT)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLEXTINT fEXTINT
 if sn="UTBLEXTINT" do vSET1(.fEXTINT,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLEXTINT fEXTINT,di,X)
 do fEXTINT.setAuditFlag(1)
 set fEXTINT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLEXTINT fEXTINT
 if fid="UTBLEXTINT" quit $$vREAD1(.fEXTINT,di)
 quit ""
vREAD1(RecordUTBLEXTINT fEXTINT,di)
 quit fEXTINT.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
