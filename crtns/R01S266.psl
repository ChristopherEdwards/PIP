R01S266	// SCAER - Profile Error Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 11/09/2007 16:56 - chenardp

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String SCAER
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DSPVAR=0
	type Number MUMPS=0
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"

	set RID="SCAER"
	set RN="Profile Error Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DSPVAR")="|1|||||||L|Display Variables|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("MUMPS")="|1|||||||L|Display MUMPS Errors Only|||||"
	set %TAB("VIN3")="|255||[ERROR9]DATE|[ERROR9]DATE:DISTINCT:NOVAL||D EXT^DBSQRY||T|Calendar Date of Error|||||"
	set %TAB("VIN4")="|255||[ERROR9]ET|[ERROR9]ET:DISTINCT:NOVAL||D EXT^DBSQRY||T|Error Type Code|||||"
	set %TAB("VIN5")="|255||[ERROR9]SEQ|[ERROR9]SEQ:DISTINCT:NOVAL||D EXT^DBSQRY||T|Error Sequence Number|||||"
	set %TAB("VIN6")="|255||[ERROR]RTN|||D EXT^DBSQRY||T|Routine Name|||||"
	set %TAB("VIN7")="|255||[ERROR]TERM|||D EXT^DBSQRY||T|Terminal|||||"
	set %TAB("VIN8")="|255||[ERROR]MPSZTCOM|||D EXT^DBSQRY||T|Attached Comment|||||"

	set %READ="IO/REQ,MUMPS#0,DSPVAR#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String SCAER
	type public Number MUMPS,DSPVAR
	type public String VIN3,VIN4,VIN5,VIN6,VIN7,VIN8
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VARH,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCAER",RN="Profile Error Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCAER","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[ERROR9]VAR#1#20,[ERROR9]VALUE#22#50"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[ERROR9]DATE "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[ERROR9]ET "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[ERROR9]SEQ "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[ERROR]RTN "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[ERROR]TERM "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[ERROR]MPSZTCOM "_VIN8,SEQ=SEQ+1
		set DQQRY(SEQ)="(<<MUMPS>>=1 AND [ERROR]MUMPSZE'="""") OR <<MUMPS>>=0",SEQ=SEQ+1
		set DQQRY(SEQ)="[ERROR]JOB'=""""",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("ERROR9,ERROR") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",3)="WC2|"_"Calendar Date of Error"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Error Type Code"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Error Sequence Number"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Routine Name"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Terminal"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Attached Comment"_"|VIN8|"_VIN8.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Profile Error Report"
		set VBNRINFO("PGM")="R01S266"
		set VBNRINFO("RID")="SCAER"
		set VBNRINFO("TABLES")="ERROR9,ERROR"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,ERROR9]DATE"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,ERROR9]ET"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,ERROR9]SEQ"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,ERROR9]9"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,ERROR9]VAR"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"ERROR9.DATE,ERROR9.ET,ERROR9.SEQ,ERROR9.VAR,ERROR."
	set VSELECT=VSELECT_"SEQ,ERROR.DATE,ERROR.MUMPSZE,ERROR.TERM,ERROR.JOB,"
	set VSELECT=VSELECT_"ERROR.MUMPSZA,ERROR.TIME,ERROR.UID,ERROR.MUMPSZB,E"
	set VSELECT=VSELECT_"RROR.LSTDATE,ERROR.DIR,ERROR.MUMPSZS,ERROR.MPSZTCO"
	set VSELECT=VSELECT_"M,ERROR.ELN1,ERROR.ELN2,ERROR.ELN3,ERROR.ELN4,ERRO"
	set VSELECT=VSELECT_"R.ELN5,ERROR.ELN6,ERROR.ELN7,ERROR9.VALUE"

	#ACCEPT DATE=11/09/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"ERROR9,ERROR",VWHERE,"ERROR9.DATE,ERROR9.ET,ERROR9.SEQ,ERROR9.VAR","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25
	set vc1=V.piece($C(9),1)			// ERROR9.DATE
	set vc2=V.piece($C(9),2)			// ERROR9.ET
	set vc3=V.piece($C(9),3)			// ERROR9.SEQ
	set vc4=V.piece($C(9),4)			// ERROR9.VAR
	set vc5=V.piece($C(9),5)			// ERROR.SEQ
	set vc6=V.piece($C(9),6)			// ERROR.DATE
	set vc7=V.piece($C(9),7)			// ERROR.MUMPSZE
	set vc8=V.piece($C(9),8)			// ERROR.TERM
	set vc9=V.piece($C(9),9)			// ERROR.JOB
	set vc10=V.piece($C(9),10)			// ERROR.MUMPSZA
	set vc11=V.piece($C(9),11)			// ERROR.TIME
	set vc12=V.piece($C(9),12)			// ERROR.UID
	set vc13=V.piece($C(9),13)			// ERROR.MUMPSZB
	set vc14=V.piece($C(9),14)			// ERROR.LSTDATE
	set vc15=V.piece($C(9),15)			// ERROR.DIR
	set vc16=V.piece($C(9),16)			// ERROR.MUMPSZS
	set vc17=V.piece($C(9),17)			// ERROR.MPSZTCOM
	set vc18=V.piece($C(9),18)			// ERROR.ELN1
	set vc19=V.piece($C(9),19)			// ERROR.ELN2
	set vc20=V.piece($C(9),20)			// ERROR.ELN3
	set vc21=V.piece($C(9),21)			// ERROR.ELN4
	set vc22=V.piece($C(9),22)			// ERROR.ELN5
	set vc23=V.piece($C(9),23)			// ERROR.ELN6
	set vc24=V.piece($C(9),24)			// ERROR.ELN7
	set vc25=V.piece($C(9),25)			// ERROR9.VALUE
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	type Public String DSPVAR,VARH


	set VARH=$S(DSPVAR:"Variables:",1:"")
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=SCAER
	quit

VRPOST	// Report post-processor

	type Public Number SCAER,VFMQ

	if SCAER.data() set VFMQ=1	// External call
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1
	if vb3!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(3)=0,vb4=1,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(5)=VT(5)+1
	quit

VDTL3	// Detail
	type public String %TIM,DSPVAR,IOSL,SCAER,V,VARH,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="   "_"Sequence:"
	set VL=VL_$J("",13-VL.length())_$E(vc5,1,20)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="  "_$J($$DAT^%ZM(vc6),10)
	set V=vc7,VO=V set V=$E(V,1,35) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",13-VL.length())_V		// [SYSDEV,ERROR]MUMPSZE
	set VL=VL_$J("",49-VL.length())_$E(vc8,1,9)
	set VL=VL_$J("",59-VL.length())_$E(vc9,1,7)
	set VL=VL_$J("",70-VL.length())_$E(vc10,1,10)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="    "_$J($$TIM^%ZM(vc11),8)
	set VL=VL_$J("",49-VL.length())_$E(vc12,1,20)
	set VL=VL_$J("",70-VL.length())_$E(vc13,1,10)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	do VOM
	set V=vc14,VO=V do VP2 quit:VFMQ!verror.get()  set V=$E(V,1,10) set VL="                                                "_V
	set V=vc15,VO=V set V=$E(V,1,9) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",59-VL.length())_V		// [SYSDEV,ERROR]DIR
	set VL=VL_$J("",70-VL.length())_$E(vc16,1,7)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set V=vc17,VO=V set V=$E(V,1,60) do VP4 quit:VFMQ!verror.get()  set VL="             "_V
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	do VOM
	set V=vc18,VO=V set V=$E(V,1,75) do VP5 quit:VFMQ!verror.get()  set VL="    "_V
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="    "_$E(vc19,1,75)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="    "_$E(vc20,1,75)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="    "_$E(vc21,1,75)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="    "_$E(vc22,1,75)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="    "_$E(vc23,1,75)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="    "_$E(vc24,1,75)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="    "_$E(VARH,1,1)
	if VLC+4>IOSL do VHDG0 quit:VFMQ
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,DSPVAR,IOSL,SCAER,V,VARH,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V set V=$E(V,1,20) do VP6 quit:VFMQ!verror.get()  set VL=V
	set V=vc25,VO=V set V=$E(V,1,50) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",21-VL.length())_V		// [SYSDEV,ERROR9]VALUE
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DSPVAR,RID,RN,SCAER,VARH,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",46-VL.length())_"Run Date:"
	set VL=VL_$J("",56-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL="Profile Error Report                                                  Page:"
	set VL=VL_$J("",76-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	do VOM
	set VL="    "_"Date     Error                               Device    Job        $ZA"
	do VOM
	set VL="    "_"Time                                         User ID              $ZB"
	do VOM
	set VL="                                                 "_"Last Mod  Directory  $ZS"
	do VOM
	set VL="================================================================================"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,ERROR]MUMPSZE

	type public String vc2
	type Public String V
	if V="" set V=vc2
	quit

VP2	// Column pre-processor - [SYSDEV,ERROR]LSTDATE

	type Public String V
	// If not a date, ignore it
	if V'?1.2N1"/"1.2N1"/"1.4N set V=""
	quit

VP3	// Column post-processor - [SYSDEV,ERROR]DIR

	type Public String V
	if V["[" set V=V.piece("]",1).piece("[",2)
	quit

VP4	// Column post-processor - [SYSDEV,ERROR]MPSZTCOM

	type Public String V
	// Comment: ~p1
	if V'="" set V=$$^MSG(6690,V)
	quit

VP5	// Column post-processor - [SYSDEV,ERROR]ELN1

	type Public String V
	if V="?" set V=""
	quit

VP6	// Column post-processor - [SYSDEV,ERROR9]VAR

	type Public Number DSPVAR
	type Public String V,VO
	if 'DSPVAR set V=""
	else  set V=$J(VO,20)_"="
	quit

VP7	// Column post-processor - [SYSDEV,ERROR9]VALUE

	type Public Number DSPVAR
	type Public String V,VO
	if 'DSPVAR set V=""
	else  set V=$$TRCTRL^SCAER(VO)
	if V.length()>480 set V=V.extract(1,480)_"..."
	quit
