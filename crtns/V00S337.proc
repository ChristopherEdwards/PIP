V00S337(%ProcessMode,RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A())   // -  - SID= <LNUB1> Principal Repayment Plan
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:44 - kini
 // The LNUB1 screen allows the institution to create a principal repayment
 // plan on which it bills principal for accounts referencing the plan.  The
 // Principal Repayment Plan data item in the Loan Account Master file
 // (LN.RPP) indicates the payment plan on which the system bases the billed
 // principal amount.
 // The principal repayment plan indicates the percentage of principal to
 // bill, the exact principal amount to bill, or the payment divisor to be 
 // used based on a specified balance.  For example, if the specified balance 
 // is less than 10000 USD, the system may bill 10 percent of the principal 
 // balance.  However, if the balance is greater thanor equal to 10000 USD, the 
 // system may bill 15 percent of the principal balance.
 // The user accesses this screen via the Principal Repayment Plan functions
 // (LNUB0*).
 // Refer to the Payment Due Processing Reference Manual for further information.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNUB1",VPGM=$T(+0),VSNAME="Principal Repayment Plan"
 set VFSN("UTBLRPP")="zLNUB1",VFSN("UTBLRPPB")="zLNUB1A"
 set vPSL=1
 set KEYS(1)=LNUB1.PLAN
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=10 do VPR(.LNUB1,.LNUB1A()),VDA1(.LNUB1,.LNUB1A()),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.LNUB1,.LNUB1A()),VPR(.LNUB1,.LNUB1A()),VDA1(.LNUB1,.LNUB1A())
 if %ProcessMode do VLOD(.LNUB1,.LNUB1A()) quit:$G(ER)  do VPR(.LNUB1,.LNUB1A()),VDA1(.LNUB1,.LNUB1A())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.LNUB1,.LNUB1A())
 type Number ptr
 set ptr=""
 for  set ptr = LNUB1A(ptr).order() quit:ptr.isNull()  do {
     if LNUB1A(ptr).TIER="" kill LNUB1A(ptr)
     }
	quit


VNEW(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A()) // Initialize arrays if %O=0
 
 do VDEF(.LNUB1,.LNUB1A())
 do VLOD(.LNUB1,.LNUB1A())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=10
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A()) // Display screen prompts
 set VO="10||13|"
 set VO(0)="|0"
 set VO(1)=$C(2,23,24,1,0,0,0,0,0,0)_"01TPRINCIPAL REPAYMENT PLAN"
 set VO(2)=$C(4,10,17,0,0,0,0,0,0,0)_"01TCalculation Plan:"
 set VO(3)=$C(5,9,18,1,0,0,0,0,0,0)_"01T Plan Description:"
 set VO(4)=$C(7,2,25,1,0,0,0,0,0,0)_"01TPrincipal Repayment Plan:"
 set VO(5)=$C(7,47,18,1,0,0,0,0,0,0)_"01T Recalc Frequency:"
 set VO(6)=$C(8,7,20,1,0,0,0,0,0,0)_"01T Calculation Option:"
 set VO(7)=$C(8,49,16,1,0,0,0,0,0,0)_"01T Balance Option:"
 set VO(8)=$C(9,6,21,1,0,0,0,0,0,0)_"01T Neg Bal Posting Opt:"
 set VO(9)=$C(11,16,12,2,0,0,0,0,0,0)_"01TBalance Tier"
 set VO(10)=$C(11,44,6,2,0,0,0,0,0,0)_"01TFactor"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A())  // Display screen data
 new V
 //
 set VO="17|11|13|"
 set VO(11)=$C(4,28,6,2,0,0,0,0,0,0)_"01T"_$E(LNUB1.PLAN,1,6)
 set VO(12)=$C(5,28,40,2,0,0,0,0,0,0)_"00T"_$E(LNUB1.DESC,1,40)
 set VO(13)=$C(7,28,2,2,0,0,0,0,0,0)_"00N"_LNUB1.PBT
 set VO(14)=$C(7,66,1,2,0,0,0,0,0,0)_"00T"_$E(LNUB1.RECFRQ,1,1)
 set VO(15)=$C(8,28,1,2,0,0,0,0,0,0)_"00T"_$E(LNUB1.CALOP,1,1)
 set VO(16)=$C(8,66,1,2,0,0,0,0,0,0)_"00N"_LNUB1.BALOP
 set VO(17)=$C(9,28,1,2,0,0,0,0,0,0)_"00L"_$S(LNUB1.NBBO:"Y",1:"N")
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+6,DY=13 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.LNUB1,.LNUB1A())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'LNUB1A(I).getPointer() do {
     set LNUB1A(I)=Class.new("RecordUTBLRPPB","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY,16,12,2,0,0,0,0,0,0)_"00$"_$S(LNUB1A(I).TIER="":"",1:$J(LNUB1A(I).TIER,0,2))
 set V=$S(LNUB1A(I).FACT="":"",1:$J(LNUB1A(I).FACT,0,5)) set VO(VX+2)=$C(DY,38,12,2,0,0,0,0,0,0)_"00N"_$S(LNUB1A(I).FACT="":"",1:$J(LNUB1A(I).FACT,0,5))
 set DY=DY+1,VX=VX+2
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=7,%MOD=2,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=2,VPB=12+%REPEAT,BLKSIZ=(24*%REPEAT)+52,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLRPP"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLRPP")="zLNUB1",VFSN("UTBLRPPB")="zLNUB1A"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(3,27,6)_"20T12401|1|[UTBLRPP]PLAN"
 set %TAB(2)=$C(4,27,40)_"01T12401||[UTBLRPP]DESC"
 set %TAB(3)=$C(6,27,2)_"01N12407||[UTBLRPP]PBT|[STBLPBT]"
 set %TAB(4)=$C(6,65,1)_"01T12404||[UTBLRPP]RECFRQ|[STBLRCFQ]"
 set %TAB(5)=$C(7,27,1)_"01T12403||[UTBLRPP]CALOP|[STBLPCO]"
 set %TAB(6)=$C(7,65,1)_"01N12402||[UTBLRPP]BALOP|[STBLBAL]"
 set %TAB(7)=$C(8,27,1)_"00L12406||[UTBLRPP]NBBO"
 set %TAB(8)=$C(12,15,12)_"00$12402|1|[UTBLRPPB]TIER|||do VP1^V00S337(.LNUB1,.LNUB1A)||||2"
 set %TAB(9)=$C(12,37,12)_"00N12401|1|[UTBLRPPB]FACT|||do VP2^V00S337(.LNUB1,.LNUB1A)||||5"
 do VTBL(.LNUB1,.LNUB1A())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A()) //
 // 14057 - JERUCHIMC 03/25/05
 // Replace vrec reference with I(1) 

 if I(1)=1,(X'=0) do Runtime.setErrMSG("LNUB1",1840) quit
VP2(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A()) //
 // 14057 - JERUCHIMC 03/25/05
 // Replace S ER=1 with do Runtime.SetErrMSG

 I 'X,$L(LNUB1A(I(1)).TIER) do Runtime.setErrMSG("LNUB1",455) quit
 I X,'$L(LNUB1A(I(1)).TIER) do Runtime.setErrMSG("LNUB1",456) quit
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLRPP LNUB1
 type Public RecordUTBLRPPB LNUB1A()
 do VPR(.LNUB1,.LNUB1A())
 do VDA1(.LNUB1,.LNUB1A())
 do ^DBSPNT()
 quit

VW(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A())
 do VDA1(.LNUB1,.LNUB1A())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLRPP LNUB1,RecordUTBLRPPB LNUB1A())
 do VDA1(.LNUB1,.LNUB1A())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLRPP LNUB1
 type Public RecordUTBLRPPB LNUB1A()
 do VDA1(.LNUB1,.LNUB1A())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLRPP LNUB1
 if sn="UTBLRPP" do vSET1(.LNUB1,di,X)
 type Public RecordUTBLRPPB LNUB1A()
 if sn="UTBLRPPB" do vSET2(LNUB1A(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLRPP LNUB1,di,X)
 do LNUB1.setAuditFlag(1)
 set LNUB1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLRPPB LNUB1A,di,X)
 do LNUB1A.setAuditFlag(1)
 set LNUB1A.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLRPP LNUB1
 if fid="UTBLRPP" quit $$vREAD1(.LNUB1,di)
 type Public RecordUTBLRPPB LNUB1A()
 if fid="UTBLRPPB" quit $$vREAD2(LNUB1A(I(1)),di)
 quit ""
vREAD1(RecordUTBLRPP LNUB1,di)
 quit LNUB1.@di
vREAD2(RecordUTBLRPPB LNUB1A,di)
 quit LNUB1A.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
