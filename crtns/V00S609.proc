V00S609(%ProcessMode,RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)   // -  - SID= <UTBLMATATT1> Interest Matrix by EFD 1
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:34 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,MATRIX",VSID="UTBLMATATT1",VPGM=$T(+0),VSNAME="Interest Matrix by EFD 1"
 set VFSN("UTBLMATATT")="zfUTBLMAT",VFSN("UTBLMATATT1")="zfUTBLMT1"
 set vPSL=1
 set KEYS(1)=fUTBLMAT.NAME
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=14 do VPR(.fUTBLMT1,.fUTBLMAT),VDA1(.fUTBLMT1,.fUTBLMAT),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fUTBLMT1,.fUTBLMAT) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLMT1,.fUTBLMAT),VPR(.fUTBLMT1,.fUTBLMAT),VDA1(.fUTBLMT1,.fUTBLMAT)
 if %ProcessMode do VLOD(.fUTBLMT1,.fUTBLMAT) quit:$G(ER)  do VPR(.fUTBLMT1,.fUTBLMAT),VDA1(.fUTBLMT1,.fUTBLMAT)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLMT1,.fUTBLMAT)
	quit


VNEW(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLMT1,.fUTBLMAT)
 do VLOD(.fUTBLMT1,.fUTBLMAT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=14
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT) // Display screen prompts
 set VO="4||13|0"
 set VO(0)="1|0"
 set VO(1)=$C(1,16,13,1,0,0,0,0,0,0)_"01T Matrix Name:"
 set VO(2)=$C(2,13,16,1,0,0,0,0,0,0)_"01T Effective Date:"
 set VO(3)=$C(6,24,27,0,0,0,0,0,0,0)_"01TInterest Matrix Maintenance"
 set VO(4)=$C(7,40,4,0,0,0,0,0,0,0)_"01TRate"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)  // Display screen data
 new V
 s DESC=$G(DESC)
 s MATRIX=$G(MATRIX)
 //
 set VO="7|5|13|0"
 set VO(5)=$C(1,30,12,2,0,0,0,0,0,0)_"01T"_$E(fUTBLMT1.NAME,1,12)
 set VO(6)=$C(2,30,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fUTBLMT1.EFD)
 set VO(7)=$C(7,7,25,2,0,0,0,0,0,0)_"01T"_$G(DESC)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=9 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLMT1,.fUTBLMAT)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,MATRIX(I))=$G(MATRIX(I))
 
 set VO(VX+1)=$C(DY,14,18,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",1)
 set V=$P(v1,"|",3) set VO(VX+2)=$C(DY,40,9,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,5))
 set DY=DY+1,VX=VX+2
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=2,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=8+%REPEAT,BLKSIZ=(27*%REPEAT)+47,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLMATATT1",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("UTBLMATATT")="zfUTBLMAT",VFSN("UTBLMATATT1")="zfUTBLMT1"
 //
 for I=6:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,29,12)_"21T12401|1|[UTBLMATATT1]NAME|[UTBLMATATT]NAME,DESC"
 set %TAB(2)=$C(1,29,10)_"21D12402|1|[UTBLMATATT1]EFD"
 set %TAB(3)=$C(6,6,25)_"21T|*DESC|[*]@DESC"
 set %TAB(4)=$C(8,13,18)_"00T12401|*MATRIX(1)|[*]@MATRIX|||do VP1^V00S609(.fUTBLMT1,.fUTBLMAT)||||2"
 set %TAB(5)=$C(8,39,9)_"00N12403|*MATRIX(1)|[*]@MATRIX1|||do VP2^V00S609(.fUTBLMT1,.fUTBLMAT)||||5"
 do VTBL(.fUTBLMT1,.fUTBLMAT)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordUTBLMATATT1 fUTBLMT1
 type Public RecordUTBLMATATT fUTBLMAT
 do VSPP1(.fUTBLMT1,.fUTBLMAT)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)
 /* Revision History
 
 04/21/05 - SmithCD - CR 15305
            Modified to comply with current PSL standards.
 
 */
 type Number TI
 set TI = ""
 for  set TI = MATRIX(TI).order() quit:TI.isNull()  do { quit:ER 
 	if MATRIX(TI).piece("|", 1)?1"-".N1".".N ! (MATRIX(TI).piece("|", 1)?.N1".".N) set MATRIX(TI).piece("|", 1) = +MATRIX(TI).piece("|", 1)
 	}
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT) //
 /* Revision History
 
 04/21/05 - SmithCD - CR 15305
            Removed third parameter in call to LOAD^SCARND to prevent "More
            actual parameters than formal parameters" error. Modified to
            comply with current PSL standards.
 
 */

 type public String NAME, ITEM1, MATRIX(), V, X
 type public Number dp()
 
 type Number DEC, I
 type String DEC1, DI, R, TBL, TYP

 // No duplicates allowed (duplicate keys row or spread values)
 if X - V = 0 quit 

 if X.isNull() do DELETE^DBSMACRO("@MATRIX1", "1", "0") quit

 // Invalid entry ~p1
 if X'?1"-".N.".".N,X'?.N,(X'?.N1".".N) do Runtime.setErrMSG("UTBLMATATT1", 5791, X) quit

 type RecordUTBLMATATT utblmatt = Db.getRecord("UTBLMATATT", "NAME=:NAME")
 set ITEM = utblmatt.row

 type RecordSTBLMATATT stblmatt = Db.getRecord("STBLMATATT", "ITEM=:ITEM")
 set DEC1 = stblmatt.dep
 
 if DEC1.isNull() set DEC1 = stblmatt.ln
 if 'DEC1.isNull() do {
 	set TBL = DEC1.piece(".", 1)
 	set DI = DEC1.piece(".", 2)

	type ResultSet rs = Db.select("TYP", "DBTBL1D", "%LIBS='SYSDEV' AND FID=:TBL AND DI=:DI")
	if rs.next() set TYP = rs.getCol("TYP")
	else  set TYP = ""

 	if TYP = "$" do {
 		set DEC = $$LOAD^SCARND(%CRCD, .dp())
 		if X?.N1".".N set X = $$^SCARND(X, DEC)
 		if X?.N set X = $$^SCARND(+X, , , %CRCD, 0)
 		}
 	else  if X?.N!(X?.N1".".N) set X = $$^SCARND(+X, , , %CRCD, 0)
 	}

 set R = ""
 for I = 1:1 set R = MATRIX(R).order() quit:R.isNull()  if MATRIX(R).piece("|", 1) = X set ER=1 quit 

 // Invalid value
 if ER do Runtime.setErrMSG("UTBLMATATT1", 7609) quit         

 quit 
VP2(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT) //
 /* Revision History
 
 04/21/05 - SmithCD - CR 15305
            Modified to comply with current PSL standards.
 
 */
 
 type public Number z1, X
 type public String MATRIX()
 
 // Data required
 if X.isNull(), 'MATRIX(z1).piece("|", 1).isNull() do Runtime.setErrMSG("UTBLMATATT2", 741) quit
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLMATATT1 fUTBLMT1
 type Public RecordUTBLMATATT fUTBLMAT
 do VPR(.fUTBLMT1,.fUTBLMAT)
 do VDA1(.fUTBLMT1,.fUTBLMAT)
 do ^DBSPNT()
 quit

VW(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)
 do VDA1(.fUTBLMT1,.fUTBLMAT)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)
 do VDA1(.fUTBLMT1,.fUTBLMAT)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLMATATT1 fUTBLMT1
 type Public RecordUTBLMATATT fUTBLMAT
 do VDA1(.fUTBLMT1,.fUTBLMAT)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLMATATT1 fUTBLMT1
 if sn="UTBLMATATT1" do vSET1(.fUTBLMT1,di,X)
 type Public RecordUTBLMATATT fUTBLMAT
 if sn="UTBLMATATT" do vSET2(.fUTBLMAT,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLMATATT1 fUTBLMT1,di,X)
 do fUTBLMT1.setAuditFlag(1)
 set fUTBLMT1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLMATATT fUTBLMAT,di,X)
 do fUTBLMAT.setAuditFlag(1)
 set fUTBLMAT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLMATATT1 fUTBLMT1
 if fid="UTBLMATATT1" quit $$vREAD1(.fUTBLMT1,di)
 type Public RecordUTBLMATATT fUTBLMAT
 if fid="UTBLMATATT" quit $$vREAD2(.fUTBLMAT,di)
 quit ""
vREAD1(RecordUTBLMATATT1 fUTBLMT1,di)
 quit fUTBLMT1.@di
vREAD2(RecordUTBLMATATT fUTBLMAT,di)
 quit fUTBLMAT.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLMATATT1 fUTBLMT1,RecordUTBLMATATT fUTBLMAT)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 /* Revision History
 
 04/21/05 - SmithCD - CR 15305
            Modified to comply with current PSL standards.
 
 */
 type public String DESC
 type public Number %MODS
 type Number ITEM
 type RecordUTBLMATATT utblmatt = Db.getRecord("UTBLMATATT", "NAME=:NAME")
 set ITEM = utblmatt.row
 type RecordSTBLMATATT stblmatt = Db.getRecord("STBLMATATT", "ITEM=:ITEM")
 set DESC = stblmatt.desc
 set fUTBLMT1.efd = %EffectiveDate
 set %MODS = 1
 quit 
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
