CIFFSDFL(RecordCIFFSD ciffsd, String vpar, Boolean vparNorm) // CIFFSD - Financial Statement Data Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:13 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (4)              01/24/2005
	// Journal File Definition (2)                 01/17/2005
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = ciffsd.getMode()                      // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(ciffsd,.vxins(),10,"|")
	if %O = 1 quit:'ciffsd.isChanged()  do AUDIT^UCUTILN(ciffsd,.vx(),10,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		do vinit                                              // Initialize column values
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("ACN").exists()!vx("FSID").exists() do vkchged quit // Primary key changed
		if vpar["/VALDD/" do VDDUX^DBSFILER("CIFFSD",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("CIFFSD","ACN = :ciffsd.acn and FSID = :ciffsd.fsid") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String ACN
	type public String FSID

	type RecordCIFFSD ciffsd = Db.getRecord("CIFFSD","ACN=:ACN,FSID=:FSID")
	if (%ProcessMode = 2) do {
		do ciffsd.setMode(2)

		do CIFFSDFL(ciffsd,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordCIFFSD ciffsd

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("CIFFSD","ACN = :ciffsd.acn and FSID = :ciffsd.fsid") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		type String n = -1
		type String x

		if %O = 0 for  set n = vobj(ciffsd,n).order() quit:n.isNull()  do {
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
				S ^CIFFSD(vobj(ciffsd,-3),vobj(ciffsd,-4),n)=vobj(ciffsd,n)
			#ENDBYPASS
		}

		else  for  set n = vobj(ciffsd,-100,n).order() quit:n.isNull()  do {
			quit:'$D(vobj(ciffsd,n))
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
				S ^CIFFSD(vobj(ciffsd,-3),vobj(ciffsd,-4),n)=vobj(ciffsd,n)
			#ENDBYPASS
		}


		if vpar["/JOURNAL/" do VJOURNAL(.ciffsd)              // Create journal files
	}

	quit

vload // Record Load - force loading of unloaded data

	type public RecordCIFFSD ciffsd
	type String n = ""

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	for  set n=$order(^CIFFSD(vobj(ciffsd,-3),vobj(ciffsd,-4),n)) quit:n=""  if '$D(vobj(ciffsd,n)),$D(^CIFFSD(vobj(ciffsd,-3),vobj(ciffsd,-4),n))#2 set vobj(ciffsd,n)=^(n)
	#ENDBYPASS
	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordCIFFSD ciffsd

	if 'vkeychg.get(),ciffsd.isChanged() throw Class.new("Error","%PSL-E-DBFILER,Deleted object cannot be modified")

	if vpar["/JOURNAL/" do VJOURNAL(.ciffsd)               // Create journal entries

	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^CIFFSD(vobj(ciffsd,-3),vobj(ciffsd,-4))
	#ENDBYPASS
	quit


vinit // Initialize default values

	type public RecordCIFFSD ciffsd

	// Type local variables for access keys for defaults
	type public String ACN
	type public String FSID

	type public String TJD
	if ciffsd.fsdt.isNull() set ciffsd.fsdt = TJD          // fsdt
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordCIFFSD ciffsd
	if 'ciffsd.acn.isNull() set vfkey("^CIF("_""""_ciffsd.acn_""""_","_1_")")="CIFFSD(ACN) -> CIF"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordCIFFSD ciffsd
	type public Number %O
	type String vERRMSG

	if 'ciffsd.acn.isNull() if 'Db.isDefined("CIF",":ciffsd.acn") set vERRMSG = $$^MSG(8563,"CIFFSD(ACN) -> CIF") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordCIFFSD ciffsd

	if (%O = 2) do vload

	if vobj(ciffsd,1).exists() do {

		if ciffsd.desc.length()>40 set vRM = $$^MSG(1076,40) do vdderr("DESC", vRM) quit
		set X = ciffsd.fsdt if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("FSDT", vRM) quit
	}
	set X = ciffsd.acn if 'X.isNull(),'Db.isDefined("CIF","X") set vRM = $$^MSG(1485,X) do vdderr("ACN", vRM) quit
	set X = ciffsd.fsid if 'X.isNull(),X'?1.4N,X'?1"-"1.3N set vRM=$$^MSG(742,"N") do vdderr("FSID", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CIFFSD","MSG",979,"CIFFSD."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit

VJOURNAL(RecordCIFFSD ciffsd)	//CIFFSD Journal file entries

	type Public Date %EffectiveDate
	type Public String %TSRC,vpar,vx()
	type String TSRC,vdi,vdx()

	if %TSRC.get().isNull() set TSRC="O"
	else  set TSRC=%TSRC

	if %ProcessMode=0 do {
		if TSRC="B" do {
			do vj1(.ciffsd)	// Mode=I Tran=B EFD=N,E Seq=1 JRNID=CIFH_I
			}
		else  if TSRC="O" do {
			do vj1(.ciffsd)	// Mode=I Tran=O EFD=N,E Seq=1 JRNID=CIFH_I
			}
		}
	else  if %ProcessMode=1 do {
		if TSRC="B" do {
			do vj2(.ciffsd)	// Mode=U Tran=B EFD=N,E Seq=1 JRNID=CIFH_U
			}
		else  if TSRC="O" do {
			do vj2(.ciffsd)	// Mode=U Tran=O EFD=N,E Seq=1 JRNID=CIFH_U
			}
		}

	quit


vj1(RecordCIFFSD ciffsd)	// CIFH_I  Table CIFH  History journal

	type Public String EFD,%IDENT,%UID,TJD,TLO
	type String v1,vlastkey
	set v1=ciffsd.acn
	set vlastkey=Db.nextVal("CIFH","ACN=:v1")
	type RecordCIFH cifh=Db.getRecord("CIFH","ACN=:v1,SEQ=:vlastkey",1)
	set cifh.efd=$G(EFD)
	set cifh.hdate=+$H
	set cifh.htime=$P($H,",",2)
	set cifh.ident=%IDENT
	set cifh.tcmt=$$^MSG(1103,ciffsd.fsid)
	set cifh.tjd=TJD
	set cifh.tlo=TLO
	set cifh.uid=%UID

	do cifh.save("/NOVALFK/NOVALDD/NOVALRI")

	quit


vj2(RecordCIFFSD ciffsd)	// CIFH_U  Table CIFH  History file

	type Public String vx()
	type String vdi

	set vdi="" for  set vdi=vx(vdi).order() quit:vdi=""  do {
		type Public String vx(),EFD,%IDENT,%UID,TJD,TLO
		type String v1,vlastkey

		type String vold,vnew

		set vold=vx(vdi).piece("|",1)
		set vnew=vx(vdi).piece("|",2)

		set v1=ciffsd.acn
		set vlastkey=Db.nextVal("CIFH","ACN=:v1")
		type RecordCIFH cifh=Db.getRecord("CIFH","ACN=:v1,SEQ=:vlastkey",1)
		set cifh.efd=$G(EFD)
		set cifh.hdate=+$H
		set cifh.htime=$P($H,",",2)
		set cifh.ident=%IDENT
		set cifh.tcmt=$$TCMT^CIFFUNCS(ciffsd.acn,"CIFFSD",vdi,vold,vnew,$G(EFD))
		set cifh.tjd=TJD
		set cifh.tlo=TLO
		set cifh.uid=%UID

		do cifh.save("/NOVALFK/NOVALDD/NOVALRI")
		}

	quit



vkchged // Access key changed

	type public RecordCIFFSD ciffsd

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("ACN").exists() set vux("ACN") = vx("ACN")
	if vx("FSID").exists() set vux("FSID") = vx("FSID")
	do vkey(1) set voldkey = ciffsd.acn_","_ciffsd.fsid    // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	do vload                                               // Make sure all data is loaded locally
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = ciffsd.acn_","_ciffsd.fsid    // Copy new keys into object
	type RecordCIFFSD vnewrec = ciffsd.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("CIFFSD",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordCIFFSD ciffsd

	if vux("ACN").exists() set ciffsd.acn = vux("ACN").piece("|",i)
	if vux("FSID").exists() set ciffsd.fsid = vux("FSID").piece("|",i)
	quit
