V00S280(%ProcessMode,RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)   // -  - SID= <LNESCADJ2> Loan On-Demand Auto Escrow Mass Change
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:31 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,LNAEU",VSID="LNESCADJ2",VPGM=$T(+0),VSNAME="Loan On-Demand Auto Escrow Mass Change"
 set VFSN("LNAEU1")="zfLNAEU1"
 set vPSL=1
 set KEYS(1)=LN.CID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=12 do VPR(.fLNAEU2,.fLNAEU1,.LN),VDA1(.fLNAEU2,.fLNAEU1,.LN),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fLNAEU2,.fLNAEU1,.LN) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fLNAEU2,.fLNAEU1,.LN),VPR(.fLNAEU2,.fLNAEU1,.LN),VDA1(.fLNAEU2,.fLNAEU1,.LN)
 if %ProcessMode do VLOD(.fLNAEU2,.fLNAEU1,.LN) quit:$G(ER)  do VPR(.fLNAEU2,.fLNAEU1,.LN),VDA1(.fLNAEU2,.fLNAEU1,.LN)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fLNAEU2,.fLNAEU1,.LN)
	quit


VNEW(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN) // Initialize arrays if %O=0
 
 do VLOD(.fLNAEU2,.fLNAEU1,.LN)
 do VDEF(.fLNAEU2,.fLNAEU1,.LN)
 do VLOD(.fLNAEU2,.fLNAEU1,.LN)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VNEWDQ(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN) // Original VNEW section
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VLOD(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN) // User defined access section
 //
 if '$D(%REPEAT) set %REPEAT=12
 if '$D(%MODS) set %MODS=1
 type public Number EXTSEQ
 type public Date EFD
 type RecordLNAEU1 fLNAEU1=Db.getRecord("LNAEU1","EFD=:EFD,EXTSEQ=:EXTSEQ",1)
 #ACCEPT date=11/05/03;pgm=Screen compiler
 quit
VLODDQ(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN) //Original VLOD section
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN) // Display screen prompts
 set VO="12||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,7,10,0,0,0,0,0,0,0)_"01TFile Date:"
 set VO(2)=$C(2,3,14,0,0,0,0,0,0,0)_"01T     Sequence:"
 set VO(3)=$C(3,5,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(4)=$C(5,23,34,1,0,0,0,0,0,0)_"01T On-Demand Auto Escrow Adjustment "
 set VO(5)=$C(6,27,25,1,0,0,0,0,0,0)_"01T Loan Accounts to Ingore "
 set VO(6)=$C(8,41,38,2,0,0,0,0,0,0)_"01T------- Loan Principal Balance -------"
 set VO(7)=$C(9,9,7,2,0,0,0,0,0,0)_"01TAccount"
 set VO(8)=$C(9,18,8,2,0,0,0,0,0,0)_"01TBorrower"
 set VO(9)=$C(9,34,6,2,0,0,0,0,0,0)_"01TBranch"
 set VO(10)=$C(9,46,7,2,0,0,0,0,0,0)_"01TCurrent"
 set VO(11)=$C(9,56,10,2,0,0,0,0,0,0)_"01TAdjustment"
 set VO(12)=$C(9,71,8,2,0,0,0,0,0,0)_"01TAdjusted"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)  // Display screen data
 new V
 s LNAEU=$G(LNAEU)
 //
 set VO="15|13|13|"
 set VO(13)=$C(1,18,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fLNAEU1.EFD)
 set VO(14)=$C(2,18,8,2,0,0,0,0,0,0)_"01N"_fLNAEU1.EXTSEQ
 set VO(15)=$C(3,18,40,2,0,0,0,0,0,0)_"01T"_$E(fLNAEU1.DESC,1,40)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=11 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fLNAEU2,.fLNAEU1,.LN)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,LNAEU(I))=$G(LNAEU(I))
 
 set VO(VX+1)=$C(DY,4,12,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,18,14,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,34,6,2,0,0,0,0,0,0)_"01T"_$P(v1,"|",3)
 set VO(VX+4)=$C(DY,41,12,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",4)
 set VO(VX+5)=$C(DY,54,12,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",5)
 set VO(VX+6)=$C(DY,67,12,2,0,0,0,0,0,0)_"01N"_$P(v1,"|",6)
 set DY=DY+1,VX=VX+6
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=6,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=10+%REPEAT,BLKSIZ=(68*%REPEAT)+58,PGM=$T(+0),DLIB="SYSDEV",DFID="LNAEU2,LNAEU1,LN"
 set OLNTB=VPB*1000
 
 set VFSN("LNAEU1")="zfLNAEU1"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,17,10)_"21D12401|1|[LNAEU1]EFD"
 set %TAB(2)=$C(1,17,8)_"21N12402|1|[LNAEU1]EXTSEQ"
 set %TAB(3)=$C(2,17,40)_"20T12401||[LNAEU1]DESC"
 set %TAB(4)=$C(10,3,12)_"00N12401|*LNAEU(1)|[*]@LNAEU|||do VP1^V00S280(.fLNAEU2,.fLNAEU1,.LN)"
 set %TAB(5)=$C(10,17,14)_"20T12402|*LNAEU(1)|[*]@BORROWER"
 set %TAB(6)=$C(10,33,6)_"20T12403|*LNAEU(1)|[*]@BRANCH"
 set %TAB(7)=$C(10,40,12)_"20N12404|*LNAEU(1)|[*]@CURRENT"
 set %TAB(8)=$C(10,53,12)_"20N12405|*LNAEU(1)|[*]@ADJUSTMENT"
 set %TAB(9)=$C(10,66,12)_"20N12406|*LNAEU(1)|[*]@ADJUSTED"
 do VTBL(.fLNAEU2,.fLNAEU1,.LN),VDEPRE(.fLNAEU2,.fLNAEU1,.LN) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDEPRE(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)  // Data Entry Pre-processor
 
 set %REPEAT=10
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN) //
 type Number ACN,LNM
 type public Number EXTSEQ
 type public Date EFD

 set EXTSEQ=EXTSEQ.get()
 set EFD=EFD.get() 
 set (CLS,ZCLS)="L"

 do CID^UACN1

 if X=""!ER quit 
 
 type RecordLNAEU2 fLNAEU2=Db.getRecord("LNAEU2","EFD=:EFD,EXTSEQ=:EXTSEQ,CID=:X",1)
 if 'fLNAEU2.getMode() do {  quit
 		set ER=1
	 	set RM=$$^MSG(7661)		// Invalid.  Account does not appear in designated extract file.
 		}
 
 if fLNAEU2.ignore do { quit
 		set ER=1
	 	set RM=$$^MSG(7662)		// Invalid.  Account already coded to bypass escrow adjustment posting.
 		}
	 

 // Default remaining fields
 type RecordLN ln=Db.getRecord("LN","CID=:X",1) 

 // Borrower
 set LNM=ln.lnm

 do DEFAULT^DBSMACRO("@BORROWER",LNM,"1","0","0")
 
 // Branch
 do DEFAULT^DBSMACRO("@BRANCH",ln.boo,"1","0","0")
 
 // Current
 do DEFAULT^DBSMACRO("@CURRENT",fLNAEU2.balcmp,"1","0","0")
 
 // Adjustment
 do DEFAULT^DBSMACRO("@ADJUSTMENT",fLNAEU2.ladjamt,"1","0","0")
 
 // Adjusted
 do DEFAULT^DBSMACRO("@ADJUSTED",fLNAEU2.adjlbal,"1","0","0")

 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNAEU2 fLNAEU2
 type Public RecordLNAEU1 fLNAEU1
 type Public RecordLN LN
 do VPR(.fLNAEU2,.fLNAEU1,.LN)
 do VDA1(.fLNAEU2,.fLNAEU1,.LN)
 do ^DBSPNT()
 quit

VW(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)
 do VDA1(.fLNAEU2,.fLNAEU1,.LN)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)
 do VDA1(.fLNAEU2,.fLNAEU1,.LN)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNAEU2 fLNAEU2
 type Public RecordLNAEU1 fLNAEU1
 type Public RecordLN LN
 do VDA1(.fLNAEU2,.fLNAEU1,.LN)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordLNAEU2 fLNAEU2
 if sn="LNAEU2" do vSET1(.fLNAEU2,di,X)
 type Public RecordLNAEU1 fLNAEU1
 if sn="LNAEU1" do vSET2(.fLNAEU1,di,X)
 type Public RecordLN LN
 if sn="LN" do vSET3(.LN,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordLNAEU2 fLNAEU2,di,X)
 do fLNAEU2.setAuditFlag(1)
 set fLNAEU2.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordLNAEU1 fLNAEU1,di,X)
 do fLNAEU1.setAuditFlag(1)
 set fLNAEU1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET3(RecordLN LN,di,X)
 do LN.setAuditFlag(1)
 set LN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordLNAEU2 fLNAEU2
 if fid="LNAEU2" quit $$vREAD1(.fLNAEU2,di)
 type Public RecordLNAEU1 fLNAEU1
 if fid="LNAEU1" quit $$vREAD2(.fLNAEU1,di)
 type Public RecordLN LN
 if fid="LN" quit $$vREAD3(.LN,di)
 quit ""
vREAD1(RecordLNAEU2 fLNAEU2,di)
 quit fLNAEU2.@di
vREAD2(RecordLNAEU1 fLNAEU1,di)
 quit fLNAEU1.@di
vREAD3(RecordLN LN,di)
 quit LN.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordLNAEU2 fLNAEU2,RecordLNAEU1 fLNAEU1,RecordLN LN)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type public Date EFD
 type public Number EXTSEQ
 set EFD=EFD.get()
 set EXTSEQ=EXTSEQ.get()
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
