R01S459	// SCA505 - SWIFT Message Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:59 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN10="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA505"
	set RN="SWIFT Message Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[SWIFT]SWDIRECT|[SWIFT]SWDIRECT:DISTINCT||set SWDIRECT=X D EXT^DBSQRY||T|SWIFT Direction (Incoming/Outgoing)|||||"
	set %TAB("VIN10")="|255||[SWIFT]VCAS|[SWIFT]VCAS,TRREFNO,MSG||D EXT^DBSQRY||T|Value Date/Currency/Amount (Sell)|||||"
	set %TAB("VIN2")="|255||[SWIFT]TRREFNO|[SWIFT]TRREFNO:DISTINCT:QU ""[SWIFT]SWDIRECT=<<SWDIRECT>>""||D EXT^DBSQRY||T|Transaction Reference Number|||||"
	set %TAB("VIN3")="|255||[SWIFT]MSG|[STBLSWFTDSC]||D EXT^DBSQRY||T|Message Type|||||"
	set %TAB("VIN4")="|255||[SWIFT]STATUS|[STBLSWSTAT]KEY,DESC||D EXT^DBSQRY||T|Status|||||"
	set %TAB("VIN5")="|255||[SWIFT]SWFTDT|[SWIFT]SWFTDT:DISTINCT||D EXT^DBSQRY||T|Message Transfer Date|||||"
	set %TAB("VIN6")="|255||[SWIFT]SNDR|[UTBLCORRE]KEY,NAME||D EXT^DBSQRY||T|Sender|||||"
	set %TAB("VIN7")="|255||[SWIFT]RCVR|||D EXT^DBSQRY||T|Receiver|||||"
	set %TAB("VIN8")="|255||[SWIFT]TRNOFMT|||D EXT^DBSQRY||T|Bank Trans Ref Number|||||"
	set %TAB("VIN9")="|255||[SWIFT]VCAB|[SWIFT]VCAB,TRREFNO,MSG||D EXT^DBSQRY||T|Value Date/Currency/Amount (Buy)|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,VIN10#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=38
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9,VIN10
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,STATDES,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA505",RN="SWIFT Message Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA505","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[SWIFT]SWDIRECT#2#3,[SWIFT]SWFTDT#23#10,[SWIFT]TRNOFMT#35#16,[SWIFT]SNDR#58#12,[SWIFT]VCAB#75#30,[SWIFT]INSEQ#109#6\[SWIFT]TRREFNO#2#19,[SWIFT]MSG#23#3,[SWIFT]STATUS#35#1,[SWIFT]RCVR#58#12,[SWIFT]VCAS#75#30,[SWIFT]OUTSEQ#109#6"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[SWIFT]SWDIRECT "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[SWIFT]TRREFNO "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[SWIFT]MSG "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[SWIFT]STATUS "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[SWIFT]SWFTDT "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[SWIFT]SNDR "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[SWIFT]RCVR "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[SWIFT]TRNOFMT "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[SWIFT]VCAB "_VIN9,SEQ=SEQ+1
		if VIN10.get()="" set VIN10="ALL"
		if VIN10'="ALL" set DQQRY(SEQ)="[SWIFT]VCAS "_VIN10,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("SWIFT") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"SWIFT Direction (Incoming/Outgoing)"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Transaction Reference Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Message Type"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Status"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Message Transfer Date"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Sender"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Receiver"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Bank Trans Ref Number"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"Value Date/Currency/Amount (Buy)"_"|VIN9|"_VIN9.get()
		set VBNRINFO("PROMPTS",10)="WC2|"_"Value Date/Currency/Amount (Sell)"_"|VIN10|"_VIN10.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="SWIFT Message Report"
		set VBNRINFO("PGM")="R01S459"
		set VBNRINFO("RID")="SCA505"
		set VBNRINFO("TABLES")="SWIFT"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,SWIFT]SWDIRECT"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,SWIFT]SWFTDT"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,SWIFT]TRREFNO"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,SWIFT]MSG"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"SWIFT.SWDIRECT,SWIFT.SWFTDT,SWIFT.TRREFNO,SWIFT.MS"
	set VSELECT=VSELECT_"G,SWIFT.TRNOFMT,SWIFT.SNDR,SWIFT.VCAB,SWIFT.INSEQ,"
	set VSELECT=VSELECT_"SWIFT.STATUS,SWIFT.RCVR,SWIFT.VCAS,SWIFT.OUTSEQ,SW"
	set VSELECT=VSELECT_"IFT.RECMSG,SWIFT.CRCDAMTB,SWIFT.VCAS2"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"SWIFT",VWHERE,"SWIFT.SWDIRECT,SWIFT.SWFTDT,SWIFT.TRREFNO,SWIFT.MSG","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15
	set vc1=V.piece($C(9),1)			// SWIFT.SWDIRECT
	set vc2=V.piece($C(9),2)			// SWIFT.SWFTDT
	set vc3=V.piece($C(9),3)			// SWIFT.TRREFNO
	set vc4=V.piece($C(9),4)			// SWIFT.MSG
	set vc5=V.piece($C(9),5)			// SWIFT.TRNOFMT
	set vc6=V.piece($C(9),6)			// SWIFT.SNDR
	set vc7=V.piece($C(9),7)			// SWIFT.VCAB
	set vc8=V.piece($C(9),8)			// SWIFT.INSEQ
	set vc9=V.piece($C(9),9)			// SWIFT.STATUS
	set vc10=V.piece($C(9),10)			// SWIFT.RCVR
	set vc11=V.piece($C(9),11)			// SWIFT.VCAS
	set vc12=V.piece($C(9),12)			// SWIFT.OUTSEQ
	set vc13=V.piece($C(9),13)			// SWIFT.RECMSG
	set vc14=V.piece($C(9),14)			// SWIFT.CRCDAMTB
	set vc15=V.piece($C(9),15)			// SWIFT.VCAS2
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VSUM3	// Summary
	type public String %TIM,I,IOSL,STATDES,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=" "_"Subtotal of SWIFT message with sending date "
	set VL=VL_$J("",45-VL.length())_$J($$DAT^%ZM(vc2),10)
	set VL=VL_$J("",56-VL.length())_":"
	set V=VT(3)					// @CNT(,N,8)
	set VL=VL_$J("",58-VL.length())_$J(V,8)
	do VOM
	set VL="" do VOM
	quit

VDTL4	// Detail
	type public String %TIM,IOSL,STATDES,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=" "_$E(vc1,1,3)
	set VL=VL_$J("",22-VL.length())_$J($$DAT^%ZM(vc2),10)
	set VL=VL_$J("",34-VL.length())_$E(vc5,1,16)
	set V=vc6,VO=V set V=$E(V,1,12) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",57-VL.length())_V		// [SYSDEV,SWIFT]SNDR
	set VL=VL_$J("",74-VL.length())_$E(vc7,1,30)
	set VL=VL_$J("",108-VL.length())_$E(vc8,1,6)
	do VOM
	set VL=" "_$E(vc3,1,19)
	set VL=VL_$J("",22-VL.length())_$E(vc4,1,3)
	set VL=VL_$J("",34-VL.length())_$E(vc9,1,1)
	do VP2 quit:VFMQ!verror.get()  set V=$E(STATDES,1,17)
	set VL=VL_$J("",36-VL.length())_V
	set VL=VL_$J("",57-VL.length())_$E(vc10,1,12)
	set VL=VL_$J("",74-VL.length())_$E(vc11,1,30)
	set VL=VL_$J("",108-VL.length())_$E(vc12,1,6)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,STATDES,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL=" "_"SW Direction       Sending Date  Bank Trans Ref Nbr     Sender Addr      ValueDate/Currency/Amount Buy     Incoming Msg Seq"
	do VOM
	set VL=" "_"Reference #          Type        Status Description     Receiver Addr    ValueDate/Currency/Amount Sell    Outgoing Msg Seq"
	do VOM
	set VL=" "_"=============================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,STATDES,VPN,vc2,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=" "_"Total number of SWIFT message :  "
	set V=(VT(0)+VT(1)+VT(2)+VT(3)+VT(4))		// @CNT(0,N,8)
	set VL=VL_$J("",34-VL.length())_$J(V,8)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,SWIFT]SNDR

	type public String vc7,vc13,vc14,vc11,vc15
 type String RECMSG,VCAB,VCAS
                          
 set VCAB=vc7
 set RECMSG=vc13
 if VCAB="" set VCAB=vc14
 if VCAB="" set VCAB=(RECMSG.piece(":32B:",2)).piece(":",1)
 if VCAB="" set VCAB=(RECMSG.piece(":32P:",2)).piece(":",1)
 if VCAB="" set VCAB=(RECMSG.piece(":33P:",2)).piece(":",1)
 if VCAB="" set VCAB=(RECMSG.piece(":34P:",2)).piece(":",1)
 set vc7=VCAB
 
 set VCAS=vc11
 if VCAS="" set VCAS=vc15
 if VCAS="" set VCAS=(RECMSG.piece(":32A:",2)).piece(":",1)
 if VCAS="" set VCAS=(RECMSG.piece(":33B:",2)).piece(":",1)
 if VCAS="" set VCAS=(RECMSG.piece(":32R:",2)).piece(":",1)
 if VCAS="" set VCAS=(RECMSG.piece(":33R:",2)).piece(":",1)
 if VCAS="" set VCAS=(RECMSG.piece(":34R:",2)).piece(":",1)
 set vc11=VCAS
	quit

VP2	// Column pre-processor - Variable: STATDES

	type public String vc9
 type public String STATDES
 type Number STATUS
 
 set STATUS=vc9
 if STATUS.length()'=0 do {
	type RecordSTBLSWSTAT swstat=Db.getRecord("STBLSWSTAT","KEY=:STATUS",1)
	set STATDES=swstat.desc
 	}
 else  set STATDES=""
 quit
	quit
