ALLWTRAN(RecordTTX ttx())
	/* ORIG: HAYMANP May 7, 1999
	   DESC: This procedure will be called from TTXP2 to process a Transaction
		 and generate any necessary restrictions due to Local Currency
	   	 Limitations based on Residency Processing.
	
	  ----Revision History--------------------------------------------------

	  03/19/02 - MBUIM - 43583
		     Modified to work under new Transaction Processing code.

	*/

	new CFLG,CODE,DC,DEST,DFLG,KEY,SRC

	set (DEST,SRC,CFLG,DFLG)=""

	/* Find first debit (source - SRC) and credit (destination - DEST) in TTX
	   Only search primary transactions
	*/

	for SEQ=1:1 quit:'(ttx(SEQ).getPointer())  quit:DFLG&CFLG  do {
		set ETC=ttx(SEQ).etc 
		type ResultSet rs=Db.select("ITC","TRN","ETC=:ETC")

		// External Transaction Code
		if 'rs.isEmpty(),rs.next() set DC=$E(rs.getCol(1))
		else  quit

		if 'DC set SRC=ttx(SEQ).tseq set DFLG=1 quit
		if DC set DEST=ttx(SEQ).tseq set CFLG=1
		}

	
	// Quit if there is not both a debit and a credit (may come from CFANTIC)
	if (SRC="")!(DEST="") quit
	
	// If TSO of ttx(SRC) or ttx(DEST) contains "EXTRF", quit

	if ttx(SRC).tso["EXTRF" quit
	if ttx(DEST).tso["EXTRF" quit
	
	// Get Transaction Type code for SRC and DEST (cash/account)
	set TYP(SRC)=$$GETTYPE(ttx(SRC)) quit:ER
	set TYP(DEST)=$$GETTYPE(ttx(DEST)) quit:ER 
	
	// Quit if both are cash transactions
	if 'TYP(SRC)&'TYP(DEST) quit
	
	// Quit if either are non-cash G/L tranasactions
	if TYP(SRC)=2!(TYP(DEST)=2) quit
	
	for KEY=SRC,DEST do {
		// Get Residency Type (resident/non-resident)
		set RES=$$GETRES(ttx(KEY),.TYP) quit:ER
 
		// Get Currency Type code (local/foreign)
		set CURR=$$GETCURR(ttx(KEY)) quit:ER 

		// If account type, get Convertibility Type code (conv,non-conv)
		if TYP(KEY)=1 set CNV=$$GETCNV(ttx(KEY)) quit:ER 
	
		if 'TYP(KEY) do {
			if 'RES do {
				// local
				if 'CURR set CODE(KEY)=0 quit
				// foreign
				set CODE(KEY)=1
				}
			// non-resident

			// local
			if 'CURR set CODE(KEY)=2 quit

			// foreign
			else  set CODE(KEY)=3
			}
		// account
		if 'RES do {
			// local
			if 'CURR set CODE(KEY)=4 quit

			// foreign
			set CODE(KEY)=5
			}
		// non-resident
		if 'CURR do {
			// conv
			if 'CNV set CODE(KEY)=6 quit
			// non-conv
			set CODE(KEY)=7
			}
		// foreign
		set CODE(KEY)=8
		}
	
	new DCODE,SCODE,UCLS

	set SCODE=CODE(SRC) 
	set DCODE=CODE(DEST)
	
	// Retrieve applicable restiction
	set UCLS=%UserClass
	type ResultSet rs=Db.select("RESTRR","UTBLRESTRR","DISTCHNL=:UCLS AND SOURCE=:SCODE AND DEST=:DCODE")

	if 'rs.isEmpty(),rs.next() set RESTR=rs.getCol(1)
	else  quit

	if RESTR'="" set OVR(CID,"OVR",RESTR)=""
		
	quit 

GETTYPE(RecordTTX ttx)	// Get Account Type code (cash=0, account=1, Non-cash G/L)
	
	new XETC

	set XETC=ttx.etc	
	type ResultSet rs=Db.select("TRNTYP,CLS","TRN","ETC=:XETC")
	
	if 'rs.next() quit 1

	// Cash
	if rs.getCol(1)=1 quit 0

	// Non-cash G/L account
	if rs.getCol(2)="M"!(rs.getCol(2)="*") quit 2
	
	// Account		 

	quit 1
	
GETCURR(RecordTTX ttx)	// Get Currency Type code (local=0, foreign=1)
   	
	// Local Currency
	if ttx.crcd=""!(ttx.crcd=%SystemCurrency) quit 0 
   
	// Foreign Currency

	quit 1	
						
GETRES(RecordTTX ttx(),KEY,TYP)	// Get Residency Type
	
	new RES,TSO,XCID

	set RES=""
	
	if 'TYP(KEY) do {
		// Transaction Source of Funds
		set TSO=ttx(KEY).tso
		set RES=$$FIELD^UTSO(TSO,"RESTYP")
	
		// use RESTYP from TSO if it's there
		if RES'="" quit
	
		/* get residency status from other transaction
		   Account Number
		*/
		
		if KEY=SRC set XCID=ttx(DEST).cid	   
		
		// Account Number
		else  set XCID=ttx(SRC).cid
		}
	
	// account
	if TYP(KEY) set XCID=ttx(KEY).cid
	
	if RES="" do {

		type ResultSet rs=Db.select("RESTYP","ACN","CID=:XCID")

		if 'rs.isEmpty(),rs.next() set RES=rs.getCol(1) 
		}

	quit RES
	
GETCNV(RecordTTX ttx)	// Get Convertibility Type

	new CNV,XCID

	set XCID=ttx.cid

	type ResultSet rs=Db.select("CNVTYP","ACN","CID=:XCID")

	if 'rs.isEmpty(),rs.next() set CNV=rs.getCol(1)
	else  set CNV=""

	quit CNV
 #OPTION ResultClass ON
Public String vSIG()	quit "59886^43489^Sanchez SCM Administrator^3805"	// Signature - LTD^TIME^USER^SIZE
