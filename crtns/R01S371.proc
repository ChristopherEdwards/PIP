R01S371	// SCA399 - Check Register Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:48 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CHKCID
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1
	type String VIN10="ALL"
	type String VIN2=$$DAT^%ZM(%SystemDate)
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA399"
	set RN="Check Register Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|12||[CHKREG1]CO|[CHKREG1]CO:DISTINCT||||T|Company|||||"
	set %TAB("VIN10")="|255||[CHKREG1]TAMT|||D EXT^DBSQRY||T|Transaction Amount|||||"
	set %TAB("VIN2")="|255||[CHKREG1]TJD|||D EXT^DBSQRY||T|Date|||||"
	set %TAB("VIN3")="|255||[CHKREG1]EFD|||D EXT^DBSQRY||T|Effective Date|||||"
	set %TAB("VIN4")="|255||[CHKREG1]GL|[CHKREG1]GL:DISTINCT:NOVAL||D EXT^DBSQRY||T|General Ledger Number|||||"
	set %TAB("VIN5")="|255||[CHKREG1]CKNO|[CHKREG1]CKNO:DISTINCT:NOVAL||D EXT^DBSQRY||T|Check Number|||||"
	set %TAB("VIN6")="|255||[CHKREG1]CTYPE|[UTBLCHKS]||D EXT^DBSQRY||T|Check Type|||||"
	set %TAB("VIN7")="|255||[CHKREG1]UID|[SCAU]:NOVAL||D EXT^DBSQRY||T|Teller ID|||||"
	set %TAB("VIN8")="|255||[CHKREG1]BRCD|[UTBLBRCD]||D EXT^DBSQRY||T|Branch Code|||||"
	set %TAB("VIN9")="|255||[CHKREG1]STATUS|[STBLCHKSTS]||D EXT^DBSQRY||T|Check Status|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,VIN10#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CHKCID
	type public String VIN1,VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9,VIN10
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CCTYI,CCTYV,CGLI,CGLV,CISS,CONAM,CVOID,RID,RN,SAVGL,SAVTJD,SAVTYP,ST,TCISS,TCTYI,TCTYV,TCVOID,TGLI,TGLV,TISS,TTISS,TTVOID,TVOID,TY,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA399",RN="Check Register Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA399","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[CHKREG1]TJD#18#10,[CHKREG1]GL#59#12,[CHKREG1]CTYPE#88#6"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[CHKREG1]CO = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[CHKREG1]TJD "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[CHKREG1]EFD "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[CHKREG1]GL "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[CHKREG1]CKNO "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[CHKREG1]CTYPE "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[CHKREG1]UID "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[CHKREG1]BRCD "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[CHKREG1]STATUS "_VIN9,SEQ=SEQ+1
		if VIN10.get()="" set VIN10="ALL"
		if VIN10'="ALL" set DQQRY(SEQ)="[CHKREG1]TAMT "_VIN10,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("CHKREG1") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Company"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Date"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Effective Date"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"General Ledger Number"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Check Number"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Check Type"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Teller ID"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Branch Code"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"Check Status"_"|VIN9|"_VIN9.get()
		set VBNRINFO("PROMPTS",10)="WC2|"_"Transaction Amount"_"|VIN10|"_VIN10.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Check Register Report"
		set VBNRINFO("PGM")="R01S371"
		set VBNRINFO("RID")="SCA399"
		set VBNRINFO("TABLES")="CHKREG1"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,CHKREG1]CO"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,CHKREG1]TJD"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,CHKREG1]GL"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,CHKREG1]CTYPE"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,CHKREG1]CKNO"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"CHKREG1.CO,CHKREG1.TJD,CHKREG1.GL,CHKREG1.CTYPE,CH"
	set VSELECT=VSELECT_"KREG1.CKNO,CHKREG1.EFD,CHKREG1.CLEAR,CHKREG1.UID,C"
	set VSELECT=VSELECT_"HKREG1.BRCD,CHKREG1.CID,CHKREG1.PAYEE,CHKREG1.TRC,"
	set VSELECT=VSELECT_"CHKREG1.COMBINED,CHKREG1.MEMO,CHKREG1.TAMT,CHKREG1"
	set VSELECT=VSELECT_".STATUS"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"CHKREG1",VWHERE,"CHKREG1.CO,CHKREG1.TJD,CHKREG1.GL,CHKREG1.CTYPE,CHKREG1.CKNO","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16
	set vc1=V.piece($C(9),1)			// CHKREG1.CO
	set vc2=V.piece($C(9),2)			// CHKREG1.TJD
	set vc3=V.piece($C(9),3)			// CHKREG1.GL
	set vc4=V.piece($C(9),4)			// CHKREG1.CTYPE
	set vc5=V.piece($C(9),5)			// CHKREG1.CKNO
	set vc6=V.piece($C(9),6)			// CHKREG1.EFD
	set vc7=V.piece($C(9),7)			// CHKREG1.CLEAR
	set vc8=V.piece($C(9),8)			// CHKREG1.UID
	set vc9=V.piece($C(9),9)			// CHKREG1.BRCD
	set vc10=V.piece($C(9),10)			// CHKREG1.CID
	set vc11=V.piece($C(9),11)			// CHKREG1.PAYEE
	set vc12=V.piece($C(9),12)			// CHKREG1.TRC
	set vc13=V.piece($C(9),13)			// CHKREG1.COMBINED
	set vc14=V.piece($C(9),14)			// CHKREG1.MEMO
	set vc15=V.piece($C(9),15)			// CHKREG1.TAMT
	set vc16=V.piece($C(9),16)			// CHKREG1.STATUS
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type String TGLI,TGLV
 type Number CGLI,CGLV
 type public Date SAVTJD
 type public Number CISS,CCTYI,CCTYV,CVOID,TCVOID
 type public String TISS,SAVGL,SAVTYP,TCISS,TCTYI,TCTYV,TTISS,TTVOID,TVOID

 set (TVOID,TISS,TCTYI,TGLI,TCTYV,TGLV,TTISS,TTVOID)=""
 set (CVOID,CISS,CCTYI,CGLI,CCTYV,CGLV,TCISS,TCVOID)=0
 set (SAVTYP,SAVGL)=""
 set SAVTJD=%SystemDate
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=CHKCID

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,VH0=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc15
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+vc15			// @TOT([CHKREG1]TAMT)
	quit

VSUM2	// Summary
	type public String %TIM,CCTYI,CCTYV,CGLI,CGLV,CHKCID,CISS,CVOID,I,IOSL,SAVGL,SAVTJD,SAVTYP,ST,TCISS,TCTYI,TCTYV,TCVOID,TGLI,TGLV,TISS,TTISS,TTVOID,TVOID,TY,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(2) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="   "_"Totals for Company "_vc1
	do VOM
	set VL="      "_"Number of Check Entries: "
	set V=VT(2)					// @CNT(,N,8)
	set VL=VL_$J("",31-VL.length())_$J(V,8)
	set VL=VL_$J("",43-VL.length())_"Total Amount: "
	set V=VT(2,1,1)					// @TOT([CHKREG1]TAMT,)
	set VL=VL_$J("",58-VL.length())_$J(V,12,2)
	do VOM
	set VL="      "_"Number of Checks Issued:"
	set VL=VL_$J("",31-VL.length())_$J(TCISS,8)
	set VL=VL_$J("",43-VL.length())_"Total Issued:"
	set VL=VL_$J("",58-VL.length())_$J(TTISS,12,2)
	do VOM
	set VL="      "_"Number of Checks Voided: "
	set VL=VL_$J("",31-VL.length())_$J(TCVOID,8)
	set VL=VL_$J("",43-VL.length())_"Total Void  :"
	set VL=VL_$J("",58-VL.length())_$J(TTVOID,12,2)
	do VOM
	quit

VSUM3	// Summary
	type public String %TIM,CCTYI,CCTYV,CGLI,CGLV,CHKCID,CISS,CVOID,I,IOSL,SAVGL,SAVTJD,SAVTYP,ST,TCISS,TCTYI,TCTYV,TCVOID,TGLI,TGLV,TISS,TTISS,TTVOID,TVOID,TY,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(3) quit
	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="   "_"Totals for Date "_$$DAT^%ZM(%SystemDate)
	do VOM
	set VL="      "_"Number of Check Entries: "
	set V=VT(3)					// @CNT(,N,8)
	set VL=VL_$J("",31-VL.length())_$J(V,8)
	set VL=VL_$J("",43-VL.length())_"Total Amount: "
	set V=VT(3,1,1)					// @TOT([CHKREG1]TAMT,)
	set VL=VL_$J("",58-VL.length())_$J(V,12,2)
	do VOM
	set VL="" do VOM
	set VL="   "_"Totals for Company "_vc1
	do VOM
	set VL="      "_"Number of Check Entries: "
	set V=VT(3)					// @CNT(,N,8)
	set VL=VL_$J("",31-VL.length())_$J(V,8)
	set VL=VL_$J("",43-VL.length())_"Total Amount: "
	set V=VT(3,1,1)					// @TOT([CHKREG1]TAMT,)
	set VL=VL_$J("",58-VL.length())_$J(V,12,2)
	do VOM
	set VL="      "_"Number of Checks Issued:"
	set V=$J(CISS,8) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",31-VL.length())_V
	set VL=VL_$J("",43-VL.length())_"Total Issued:"
	set V=$J(TISS,12,2) do VP2 quit:VFMQ!verror.get()
	set VL=VL_$J("",58-VL.length())_V
	do VOM
	set VL="      "_"Number of Checks Voided: "
	set V=$J(CVOID,8) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",31-VL.length())_V
	set VL=VL_$J("",43-VL.length())_"Total Void  :"
	set V=$J(TVOID,12,2) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",58-VL.length())_V
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,CCTYI,CCTYV,CGLI,CGLV,CHKCID,CISS,CVOID,IOSL,SAVGL,SAVTJD,SAVTYP,ST,TCISS,TCTYI,TCTYV,TCVOID,TGLI,TGLV,TISS,TTISS,TTVOID,TVOID,TY,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:VD(4)  set VD(4)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="Transaction"
	set VL=VL_$J("",12-VL.length())_"Date "
	set V=vc2,VO=V do VP5 quit:VFMQ!verror.get()  set V=$J($$DAT^%ZM(V),10)
	set VL=VL_$J("",17-VL.length())_V		// [SYSDEV,CHKREG1]TJD
	set VL=VL_$J("",34-VL.length())_"General Ledger Number:"
	set V=vc3,VO=V do VP6 quit:VFMQ!verror.get()  set V=$J(V,13)
	set VL=VL_$J("",57-VL.length())_V		// [SYSDEV,CHKREG1]GL
	set VL=VL_$J("",75-VL.length())_"Check Type"
	set VL=VL_$J("",87-VL.length())_$E(vc4,1,6)
	do VOM
	quit

VSUM4	// Summary
	type public String %TIM,CCTYI,CCTYV,CGLI,CGLV,CHKCID,CISS,CVOID,I,IOSL,SAVGL,SAVTJD,SAVTYP,ST,TCISS,TCTYI,TCTYV,TCVOID,TGLI,TGLV,TISS,TTISS,TTVOID,TVOID,TY,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="   "_"Totals for G/L Number "_vc3
	do VOM
	set VL="      "_"Number of Check Entries: "
	set V=VT(4)					// @CNT(,N,8)
	set VL=VL_$J("",31-VL.length())_$J(V,8)
	set VL=VL_$J("",43-VL.length())_"Total Amount:  "
	set V=VT(4,1,1)					// @TOT([CHKREG1]TAMT,)
	set VL=VL_$J("",58-VL.length())_$J(V,12,2)
	do VOM
	set VL="      "_"Number of Checks Issued:"
	set VL=VL_$J("",31-VL.length())_$J(CGLI,8)
	set VL=VL_$J("",43-VL.length())_"Total Issued:"
	set VL=VL_$J("",58-VL.length())_$J(TGLI,12,2)
	do VOM
	set VL="      "_"Number of Checks Voided: "
	set VL=VL_$J("",31-VL.length())_$J(CGLV,8)
	set VL=VL_$J("",43-VL.length())_"Total Void  :"
	set VL=VL_$J("",58-VL.length())_$J(TGLV,12,2)
	do VOM
	quit

VDTL5	// Detail
	type public String %TIM,CCTYI,CCTYV,CGLI,CGLV,CHKCID,CISS,CVOID,IOSL,SAVGL,SAVTJD,SAVTYP,ST,TCISS,TCTYI,TCTYV,TCVOID,TGLI,TGLV,TISS,TTISS,TTVOID,TVOID,TY,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+12>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set V=vc5,VO=V set V=$J(V,8) do VP7 quit:VFMQ!verror.get()  set VL=V
	set VL=VL_$J("",10-VL.length())_$J($$DAT^%ZM(vc6),10)
	set VL=VL_$J("",22-VL.length())_$J($$DAT^%ZM(vc7),10)
	set VL=VL_$J("",34-VL.length())_$E(vc8,1,20)
	set VL=VL_$J("",55-VL.length())_$J(vc9,7)
	set V=vc15,VO=V do VP8 quit:VFMQ!verror.get()  set V=$J(V,12,2) do VP9 quit:VFMQ!verror.get()
	set VL=VL_$J("",64-VL.length())_V
	set VL=VL_$J("",77-VL.length())_$J(vc10,13)
	set VL=VL_$J("",92-VL.length())_$E(vc11,1,40)
	if 'VL.translate(" ").isNull() do VOM
	do VP10 quit:VFMQ!verror.get()  set V=$E(TY,1,30) set VL="        "_V
	set VL=VL_$J("",39-VL.length())_$J(vc12,13)
	do VP11 quit:VFMQ!verror.get()  set V=$E(ST,1,30)
	set VL=VL_$J("",55-VL.length())_V
	set VL=VL_$J("",88-VL.length())_$S(vc13:"Y",1:"N")
	set V=vc14,VO=V do VP12 quit:VFMQ!verror.get()  set V=$E(V,1,40)
	set VL=VL_$J("",93-VL.length())_V		// [SYSDEV,CHKREG1]MEMO
	if 'VL.translate(" ").isNull() do VOM
	do VP13 quit:VFMQ!verror.get()  set V=$S(+$P(CHKCID(1),%,1)=0:$J("",15),1:$J($P(CHKCID(1),%,1),15)) set VL="        "_V
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(1),%,2)=0:$J("",12),1:$J($P(CHKCID(1),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(2),%,1)=0:$J("",15),1:$J($P(CHKCID(2),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(2),%,2)=0:$J("",12),1:$J($P(CHKCID(2),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(3),%,1)=0:$J("",15),1:$J($P(CHKCID(3),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(3),%,2)=0:$J("",12),1:$J($P(CHKCID(3),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(4),%,1)=0:$J("",15),1:$J($P(CHKCID(4),%,1),15))
	set V=$S(+$P(CHKCID(4),%,2)=0:$J("",12),1:$J($P(CHKCID(4),%,2),12,2)) do VP14 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_$S(+$P(CHKCID(5),%,1)=0:$J("",15),1:$J($P(CHKCID(5),%,1),15))
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(5),%,2)=0:$J("",12),1:$J($P(CHKCID(5),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(6),%,1)=0:$J("",15),1:$J($P(CHKCID(6),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(6),%,2)=0:$J("",12),1:$J($P(CHKCID(6),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(7),%,1)=0:$J("",15),1:$J($P(CHKCID(7),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(7),%,2)=0:$J("",12),1:$J($P(CHKCID(7),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(8),%,1)=0:$J("",15),1:$J($P(CHKCID(8),%,1),15))
	set V=$S(+$P(CHKCID(8),%,2)=0:$J("",12),1:$J($P(CHKCID(8),%,2),12,2)) do VP15 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_$S(+$P(CHKCID(9),%,1)=0:$J("",15),1:$J($P(CHKCID(9),%,1),15))
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(9),%,2)=0:$J("",12),1:$J($P(CHKCID(9),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(10),%,1)=0:$J("",15),1:$J($P(CHKCID(10),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(10),%,2)=0:$J("",12),1:$J($P(CHKCID(10),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(11),%,1)=0:$J("",15),1:$J($P(CHKCID(11),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(11),%,2)=0:$J("",12),1:$J($P(CHKCID(11),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(12),%,1)=0:$J("",15),1:$J($P(CHKCID(12),%,1),15))
	set V=$S(+$P(CHKCID(12),%,2)=0:$J("",12),1:$J($P(CHKCID(12),%,2),12,2)) do VP16 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_$S(+$P(CHKCID(13),%,1)=0:$J("",15),1:$J($P(CHKCID(13),%,1),15))
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(13),%,2)=0:$J("",12),1:$J($P(CHKCID(13),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(14),%,1)=0:$J("",15),1:$J($P(CHKCID(14),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(14),%,2)=0:$J("",12),1:$J($P(CHKCID(14),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(15),%,1)=0:$J("",15),1:$J($P(CHKCID(15),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(15),%,2)=0:$J("",12),1:$J($P(CHKCID(15),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(16),%,1)=0:$J("",15),1:$J($P(CHKCID(16),%,1),15))
	set V=$S(+$P(CHKCID(16),%,2)=0:$J("",12),1:$J($P(CHKCID(16),%,2),12,2)) do VP17 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_$S(+$P(CHKCID(17),%,1)=0:$J("",15),1:$J($P(CHKCID(17),%,1),15))
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(17),%,2)=0:$J("",12),1:$J($P(CHKCID(17),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(18),%,1)=0:$J("",15),1:$J($P(CHKCID(18),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(18),%,2)=0:$J("",12),1:$J($P(CHKCID(18),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(19),%,1)=0:$J("",15),1:$J($P(CHKCID(19),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(19),%,2)=0:$J("",12),1:$J($P(CHKCID(19),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(20),%,1)=0:$J("",15),1:$J($P(CHKCID(20),%,1),15))
	set V=$S(+$P(CHKCID(20),%,2)=0:$J("",12),1:$J($P(CHKCID(20),%,2),12,2)) do VP18 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_$S(+$P(CHKCID(21),%,1)=0:$J("",15),1:$J($P(CHKCID(21),%,1),15))
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(21),%,2)=0:$J("",12),1:$J($P(CHKCID(21),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(22),%,1)=0:$J("",15),1:$J($P(CHKCID(22),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(22),%,2)=0:$J("",12),1:$J($P(CHKCID(22),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(23),%,1)=0:$J("",15),1:$J($P(CHKCID(23),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(23),%,2)=0:$J("",12),1:$J($P(CHKCID(23),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(24),%,1)=0:$J("",15),1:$J($P(CHKCID(24),%,1),15))
	set V=$S(+$P(CHKCID(24),%,2)=0:$J("",12),1:$J($P(CHKCID(24),%,2),12,2)) do VP19 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_$S(+$P(CHKCID(25),%,1)=0:$J("",15),1:$J($P(CHKCID(25),%,1),15))
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(25),%,2)=0:$J("",12),1:$J($P(CHKCID(25),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(26),%,1)=0:$J("",15),1:$J($P(CHKCID(26),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(26),%,2)=0:$J("",12),1:$J($P(CHKCID(26),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(27),%,1)=0:$J("",15),1:$J($P(CHKCID(27),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(27),%,2)=0:$J("",12),1:$J($P(CHKCID(27),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(28),%,1)=0:$J("",15),1:$J($P(CHKCID(28),%,1),15))
	set V=$S(+$P(CHKCID(28),%,2)=0:$J("",12),1:$J($P(CHKCID(28),%,2),12,2)) do VP20 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_$S(+$P(CHKCID(29),%,1)=0:$J("",15),1:$J($P(CHKCID(29),%,1),15))
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(29),%,2)=0:$J("",12),1:$J($P(CHKCID(29),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(30),%,1)=0:$J("",15),1:$J($P(CHKCID(30),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(30),%,2)=0:$J("",12),1:$J($P(CHKCID(30),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(31),%,1)=0:$J("",15),1:$J($P(CHKCID(31),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(31),%,2)=0:$J("",12),1:$J($P(CHKCID(31),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(32),%,1)=0:$J("",15),1:$J($P(CHKCID(32),%,1),15))
	set V=$S(+$P(CHKCID(32),%,2)=0:$J("",12),1:$J($P(CHKCID(32),%,2),12,2)) do VP21 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_$S(+$P(CHKCID(33),%,1)=0:$J("",15),1:$J($P(CHKCID(33),%,1),15))
	set VL=VL_$J("",25-VL.length())_$S(+$P(CHKCID(33),%,2)=0:$J("",12),1:$J($P(CHKCID(33),%,2),12,2))
	set VL=VL_$J("",40-VL.length())_$S(+$P(CHKCID(34),%,1)=0:$J("",15),1:$J($P(CHKCID(34),%,1),15))
	set VL=VL_$J("",57-VL.length())_$S(+$P(CHKCID(34),%,2)=0:$J("",12),1:$J($P(CHKCID(34),%,2),12,2))
	set VL=VL_$J("",72-VL.length())_$S(+$P(CHKCID(35),%,1)=0:$J("",15),1:$J($P(CHKCID(35),%,1),15))
	set VL=VL_$J("",89-VL.length())_$S(+$P(CHKCID(35),%,2)=0:$J("",12),1:$J($P(CHKCID(35),%,2),12,2))
	set VL=VL_$J("",103-VL.length())_$S(+$P(CHKCID(36),%,1)=0:$J("",15),1:$J($P(CHKCID(36),%,1),15))
	set V=$S(+$P(CHKCID(36),%,2)=0:$J("",12),1:$J($P(CHKCID(36),%,2),12,2)) do VP22 quit:VFMQ!verror.get()
	set VL=VL_$J("",120-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM5	// Summary
	type public String %TIM,CCTYI,CCTYV,CGLI,CGLV,CHKCID,CISS,CVOID,I,IOSL,SAVGL,SAVTJD,SAVTYP,ST,TCISS,TCTYI,TCTYV,TCVOID,TGLI,TGLV,TISS,TTISS,TTVOID,TVOID,TY,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="   "_"Totals for Type "_vc4
	do VOM
	set VL="      "_"Number of Check Entries:"
	set V=VT(5)					// @CNT(,N,8)
	set VL=VL_$J("",31-VL.length())_$J(V,8)
	set VL=VL_$J("",43-VL.length())_"Total Amount:"
	set V=VT(5,1,1)					// @TOT([CHKREG1]TAMT,)
	set VL=VL_$J("",58-VL.length())_$J(V,12,2)
	do VOM
	set VL="      "_"Number of Checks Issued:"
	set VL=VL_$J("",31-VL.length())_$J(CCTYI,8)
	set VL=VL_$J("",43-VL.length())_"Total Issued:"
	set VL=VL_$J("",58-VL.length())_$J(TCTYI,12,2)
	do VOM
	set VL="      "_"Number of Checks Voided: "
	set VL=VL_$J("",31-VL.length())_$J(CCTYV,8)
	set VL=VL_$J("",43-VL.length())_"Total Void  :"
	set VL=VL_$J("",58-VL.length())_$J(TCTYV,12,2)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CCTYI,CCTYV,CGLI,CGLV,CHKCID,CISS,CONAM,CVOID,RID,RN,SAVGL,SAVTJD,SAVTYP,ST,TCISS,TCTYI,TCTYV,TCVOID,TGLI,TGLV,TISS,TTISS,TTVOID,TVOID,TY,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="  "_"Company: "_vc1_" "
	do VOM
	set VL="   "_"Check  Eff Date    Clear Date  Teller ID             Branch   Check Amount  Acct Number  Payee Name"
	do VOM
	set VL="                "_"Check Type              Trace Number          Check Status        Combined                    Memo"
	do VOM
	set VL="" do VOM
	set VL="                "_"Account       Payment           Account       Payment           Account       Payment          Account       Payment"
	do VOM
	set VL="                 "_"Number        Amount            Number        Amount            Number        Amount           Number        Amount"
	do VOM
	set VL="=================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - Variable: CISS

 type public Number CISS,TCISS

 set TCISS=TCISS+CISS
	quit

VP2	// Column post-processor - Variable: TISS

 type public String TTISS,TISS

 set TTISS=TTISS+TISS
	quit

VP3	// Column post-processor - Variable: CVOID

 type public Number TCVOID,CVOID

 set TCVOID=TCVOID+CVOID
	quit

VP4	// Column post-processor - Variable: TVOID

 type public String TTVOID,TVOID

 set TTVOID=TTVOID+TVOID
	quit

VP5	// Column pre-processor - [SYSDEV,CHKREG1]TJD

	type public String vc2
 type public Date SAVTJD
 type public Number CCTYI,CCTYV,CGLI,CGLV,CISS,CVOID
 type public String TCTYI,TCTYV,TGLI,TGLV,TISS,TVOID

 if vc2'=SAVTJD set (CISS,CVOID,CCTYI,CGLI,CCTYV,CGLV)=0,(TISS,TVOID,TCTYI,TGLI,TCTYV,TGLV)=""
 set SAVTJD=vc2


	quit

VP6	// Column pre-processor - [SYSDEV,CHKREG1]GL

	type public String vc3
 type public String GL,SAVGL

 set GL=vc3
 set SAVGL=""


	quit

VP7	// Column post-processor - [SYSDEV,CHKREG1]CKNO

 type public String V,VL,IOTYP
 
 if IOTYP'="TRM" set (V,VL)=""
	quit

VP8	// Column pre-processor - Variable: TAMT

	type public String vc15,vc11,vc16
 type String PAYEE
 type Number TAMT
 type public String TVOID,TISS
 type public Number CVOID,CISS

 set TAMT=vc15
 set PAYEE=vc11  

 if vc16=2 set CVOID=CVOID+1
 else  set CISS=CISS+1

 if vc16=2,PAYEE'["T O T A L" set TVOID=TVOID+vc15 
 if vc16'=2 set TISS=TISS+vc15 
 if PAYEE["T O T A L" set vc15=0,vc11=PAYEE_"  "_TAMT

	quit

VP9	// Column post-processor - Variable: TAMT

	type public String vc15,vc11,vc4,vc16,vc3
 type String PAYEE
 type Number TAMT
 type public String TCTYV,TCTYI,TGLV,TGLI,SAVTYP,SAVGL
 type public Number CCTYV,CCTYI,CGLV,CGLI

 set TAMT=vc15
 set PAYEE=vc11

 if vc4'=SAVTYP set (CCTYI,CCTYV)=0,(TCTYI,TCTYV)=""

 if vc16=2 set CCTYV=CCTYV+1
 else  set CCTYI=CCTYI+1

 if vc16=2,PAYEE'["T O T A L" set TCTYV=TCTYV+vc15

 if vc16'=2 set TCTYI=TCTYI+vc15

 if vc3'=SAVGL set (CGLI,CGLV)=0,(TGLI,TGLV)=""

 if vc16=2 set CGLV=CGLV+1
 else  set CGLI=CGLI+1

 if vc16=2,PAYEE'["T O T A L" set TGLV=TGLV+vc15

 if vc16'=2 set TGLI=TGLI+vc15

 set SAVTYP=vc4
 set SAVGL=vc3

	quit

VP10	// Column pre-processor - Variable: TY

	type public String vc4
 type public String TY
 type String X

 set X=vc4,TY=""

 if X="" quit
 type RecordUTBLCHKS utblchks=Db.getRecord("UTBLCHKS","CHKS=:X",1)
 if 'utblchks.getMode() set TY="* "_$$^MSG(6591,X) quit
 set TY=X_" - "_utblchks.desc

	quit

VP11	// Column pre-processor - Variable: ST

	type public String vc16
 type public String ST
 type Number X

 set X=+vc16
 set ST=""

 if X="" quit

 type RecordSTBLCHKSTS stblchksts=Db.getRecord("STBLCHKSTS","STATUS=:X",1)
 if 'stblchksts.getMode() set ST="* "_$$^MSG(4814,X) quit
 set ST=X_" - "_stblchksts.desc

 if ST.extract()=" " quit
 set ST=$J("",(30-(ST.length())\2))_ST
 
	quit

VP12	// Column pre-processor - [SYSDEV,CHKREG1]MEMO

 type public String V

 if V.extract()=" " quit
 set V=$J("",(40-(V.length())\2))_V
	quit

VP13	// Column pre-processor - Variable: $P(CHKCID(1)

	type public String vc1,vc5,vc4
 type public Number CKNO
 type public String CO
 type public String CTYPE

 set CO=vc1
 set CKNO=vc5
 set CTYPE=vc4		

 do LOOKUP^CHKBUMP
	quit

VP14	// Column post-processor - Variable: $P(CHKCID(4)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit

VP15	// Column post-processor - Variable: $P(CHKCID(8)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit

VP16	// Column post-processor - Variable: $P(CHKCID(12)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit

VP17	// Column post-processor - Variable: $P(CHKCID(16)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit

VP18	// Column post-processor - Variable: $P(CHKCID(20)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit

VP19	// Column post-processor - Variable: $P(CHKCID(24)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit

VP20	// Column post-processor - Variable: $P(CHKCID(28)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit

VP21	// Column post-processor - Variable: $P(CHKCID(32)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit

VP22	// Column post-processor - Variable: $P(CHKCID(36)

	type public String vc13
 type public String V,VL

 if 'vc13 set (V,VL)=""
	quit
