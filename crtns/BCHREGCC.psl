BCHREGCC //Batch BCHREGCCRO - Repeat Overdraft Check
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:09 - joynerd
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHREGCCRO Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit quit
 do JOBMGR^BCHUTL(%FN,"BCHREGCCRO",.vINPUT)
 do ^JOBMGR(.vINPUT)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(EFD,CID) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHREGCCRO","*","",EFD.get()_","_CID.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,EFD,CID)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHREGCCRO","*","",EFD.get()_","_CID.get(),"",et)
 }
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,EFD,CID) //
 	
	new acn
	type RecordACN acn
	set acn=Db.getRecord("ACN",CID)

	if acn.cls'="D" quit	// only process deposit accounts

 	do EXEC(.acn)
 	quit
  
EXEC(RecordDEP dep)	//


 type Number tseq
 type Date NV,ODATE,OV
 type Public Number CID,days,month
 type Public Date EXP,RODT


 if 'dep.regcc quit
 if dep.nsfd1=(%SystemDate-1) quit
 if dep.negbd1=(%SystemDate-1) quit
 
 set OV=dep.negbd1
 set NV=%SystemDate-1

 set dep.negbd15=dep.negbd14 if days=15 set ODATE=dep.negbd15
 set dep.negbd14=dep.negbd13 if days=14 set ODATE=dep.negbd14
 set dep.negbd13=dep.negbd12 if days=13 set ODATE=dep.negbd13
 set dep.negbd12=dep.negbd11 if days=12 set ODATE=dep.negbd12
 set dep.negbd11=dep.negbd10 if days=11 set ODATE=dep.negbd11
 set dep.negbd10=dep.negbd9 if days=10 set ODATE=dep.negbd10
 set dep.negbd9=dep.negbd8 if days=9 set ODATE=dep.negbd9
 set dep.negbd8=dep.negbd7 if days=8 set ODATE=dep.negbd8
 set dep.negbd7=dep.negbd6 if days=7 set ODATE=dep.negbd7
 set dep.negbd6=dep.negbd5 if days=6 set ODATE=dep.negbd6
 set dep.negbd5=dep.negbd4 if days=5 set ODATE=dep.negbd5
 set dep.negbd4=dep.negbd3 if days=4 set ODATE=dep.negbd4
 set dep.negbd3=dep.negbd2 if days=3 set ODATE=dep.negbd3
 set dep.negbd2=dep.negbd1 if days=2 set ODATE=dep.negbd2
 set dep.negbd1=(%SystemDate-1)

 if ODATE>RODT set dep.regccexc=2,dep.regccexp=EXP
 
 if dep.odld'=(%SystemDate-1) do {
	if month=1 set dep.nego13=dep.nego13+1 quit
	if month=2 set dep.nego14=dep.nego14+1 quit
	if month=3 set dep.nego15=dep.nego15+1 quit
	if month=4 set dep.nego16=dep.nego16+1 quit
	if month=5 set dep.nego17=dep.nego17+1 quit
	if month=6 set dep.nego18=dep.nego18+1 quit
	if month=7 set dep.nego19=dep.nego19+1 quit
	if month=8 set dep.nego20=dep.nego20+1 quit
	if month=9 set dep.nego21=dep.nego21+1 quit
	if month=10 set dep.nego22=dep.nego22+1 quit
	if month=11 set dep.nego23=dep.nego23+1 quit
	if month=12 set dep.nego24=dep.nego24+1 quit
 	}

 if dep.bal<-5000 do {
	set ODATE=dep.nsfd1
	set dep.nsfd2=ODATE
	set dep.nsfd1=%SystemDate-1
 	if ODATE>RODT set dep.regccexc=2,dep.regccexp=EXP
 	}

 do dep.bypassSave()

 type RecordHIST hist=Class.new("RecordHIST")

 set tseq=Db.nextVal("HIST","CID")

 set hist.cid=CID
 set hist.tseq=tseq
 set hist.tlo=%UserStation
 set hist.tcmt=CID_"[DEP]NEGBD1:"_OV_":"_NV
 set hist.cdt=%CurrentDate
 set hist.time=%CurrentTime
 set hist.uid=%UserID
 set hist.tjd=%SystemDate
 do hist.bypassSave()

 type RecordDTJFM dtjfm=Class.new("RecordDTJFM")

 set dtjfm.tjd=%SystemDate
 set dtjfm.cls=dep.cls
 set dtjfm.grp=dep.grp
 set dtjfm.typ=dep.type
 set dtjfm.cid=CID
 set dtjfm.tseq=tseq
 set dtjfm.cc=dep.cc
 set dtjfm.tlo=%UserStation
 set dtjfm.tcmt=CID_"[DEP]NEGBD1:"_OV_":"_NV
 set dtjfm.cdt=%CurrentDate
 set dtjfm.time=%CurrentTime
 set dtjfm.uid=%UserID
 do dtjfm.bypassSave()
 quit
 
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,EFD,CID
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set EFD=vRECORD.piece($C(9),1)
 set CID=vRECORD.piece($C(9),2)
 do vPROC(EFD,CID)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,EFD,CID
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32767 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+24>32767 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("EFD,CID","DAYENDNEG","DAYENDNEG.EFD=:TJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
	type Public Number days,month,SIXM
	type Public Date EXP,RODT	
	type RecordCUVAR cuvar=Db.getRecord("CUVAR","*")

	set days=cuvar.regccro if days="" set days=6
	set SIXM=365\2,RODT=%SystemDate-SIXM,EXP=%SystemDate+SIXM

	set month=$$MON^SCADAT(%SystemDate-1,1)
	set %UserID="BATCH"

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
