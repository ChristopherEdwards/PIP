V00S164(%ProcessMode,RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)   // -  - SID= <EFTPAY> Electronic Payments
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:18 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,RECACCT,RECGL,msg",VSID="EFTPAY",VPGM=$T(+0),VSNAME="Electronic Payments"
 set VFSN("CIF")="zCIF",VFSN("CUVAR")="zfCUVAR",VFSN("DEP")="zDEP",VFSN("EFTPAY")="zfEFTPAY"
 set vPSL=1
 set KEYS(1)=DEP.CID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fEFTPAY,.DEP,.CIF,.fCUVAR),VDA1(.fEFTPAY,.DEP,.CIF,.fCUVAR),^DBSPNT()

 set ER=0 do VSCRPRE(.fEFTPAY,.DEP,.CIF,.fCUVAR) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fEFTPAY,.DEP,.CIF,.fCUVAR),VPR(.fEFTPAY,.DEP,.CIF,.fCUVAR),VDA1(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 if %ProcessMode do VLOD(.fEFTPAY,.DEP,.CIF,.fCUVAR) quit:$G(ER)  do VPR(.fEFTPAY,.DEP,.CIF,.fCUVAR),VDA1(.fEFTPAY,.DEP,.CIF,.fCUVAR)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEFTPAY,.DEP,.CIF,.fCUVAR)
	quit


VNEW(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) // Initialize arrays if %O=0
 
 do VDEF(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 do VLOD(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)
 if fEFTPAY.DATECRE="" set fEFTPAY.DATECRE=TJD
 if fEFTPAY.TIMECRE="" set fEFTPAY.TIMECRE=$P($H,",",2)
 if fEFTPAY.UID="" set fEFTPAY.UID=%UID
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) // Display screen prompts
 set VO="34||13|"
 set VO(0)="|0"
 set VO(1)=$C(3,1,23,0,0,0,0,0,0,0)_"01T Transaction Reference:"
 set VO(2)=$C(4,9,15,0,0,0,0,0,0,0)_"01T Customer Name:"
 set VO(3)=$C(5,9,15,0,0,0,0,0,0,0)_"01TAccount Number:"
 set VO(4)=$C(5,50,13,0,0,0,0,0,0,0)_"01T Branch Code:"
 set VO(5)=$C(6,3,21,0,0,0,0,0,0,0)_"01T Customer Short Name:"
 set VO(6)=$C(6,50,13,0,0,0,0,0,0,0)_"01T Cost Center:"
 set VO(7)=$C(7,12,12,0,0,0,0,0,0,0)_"01TCustomer ID:"
 set VO(8)=$C(8,16,8,0,0,0,0,0,0,0)_"01T Status:"
 set VO(9)=$C(8,53,10,0,0,0,0,0,0,0)_"01T Sequence:"
 set VO(10)=$C(9,10,14,0,0,0,0,0,0,0)_"01T Times to Try:"
 set VO(11)=$C(9,47,16,0,0,0,0,0,0,0)_"01TCross Reference:"
 set VO(12)=$C(10,8,16,0,0,0,0,0,0,0)_"01T Payment Method:"
 set VO(13)=$C(11,1,23,1,0,0,0,0,0,0)_"01T Recipient Institution:"
 set VO(14)=$C(12,5,19,0,0,0,0,0,0,0)_"01T Recipient Account:"
 set VO(15)=$C(13,13,11,0,0,0,0,0,0,0)_"01TUtility ID:"
 set VO(16)=$C(13,51,12,0,0,0,0,0,0,0)_"01TG/L Account:"
 set VO(17)=$C(14,3,21,0,0,0,0,0,0,0)_"01TTransaction Sub-Code:"
 set VO(18)=$C(14,44,6,0,0,0,0,0,0,0)_"01TCredit"
 set VO(19)=$C(14,50,13,0,0,0,0,0,0,0)_"01T Cost Center:"
 set VO(20)=$C(15,11,13,0,0,0,0,0,0,0)_"01TRecipient ID:"
 set VO(21)=$C(16,5,19,1,0,0,0,0,0,0)_"01T Payment Frequency:"
 set VO(22)=$C(16,46,17,0,0,0,0,0,0,0)_"01T Expiration Date:"
 set VO(23)=$C(17,8,16,1,0,0,0,0,0,0)_"01T Effective Date:"
 set VO(24)=$C(17,49,14,0,0,0,0,0,0,0)_"01T Process Date:"
 set VO(25)=$C(18,11,13,1,0,0,0,0,0,0)_"01T Amount Type:"
 set VO(26)=$C(18,53,10,1,0,0,0,0,0,0)_"01T Currency:"
 set VO(27)=$C(19,17,7,0,0,0,0,0,0,0)_"01TAmount:"
 set VO(28)=$C(19,48,15,0,0,0,0,0,0,0)_"01T Actual Amount:"
 set VO(29)=$C(20,6,18,0,0,0,0,0,0,0)_"01THolds Auto Placed:"
 set VO(30)=$C(20,49,14,0,0,0,0,0,0,0)_"01THold Sequence:"
 set VO(31)=$C(21,8,16,0,0,0,0,0,0,0)_"01T Variable Field:"
 set VO(32)=$C(21,47,16,0,0,0,0,0,0,0)_"01T Constant Field:"
 set VO(33)=$C(22,9,15,0,0,0,0,0,0,0)_"01TSpecific Field:"
 set VO(34)=$C(22,54,9,0,0,0,0,0,0,0)_"01TMessages:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)  // Display screen data
 new V
 s ATYPDESC=$G(ATYPDESC)
 s EPCID=$G(EPCID)
 s METDSC=$G(METDSC)
 s RECACCT=$G(RECACCT)
 s RECGL=$G(RECGL)
 s STATDSC=$G(STATDSC)
 s msg=$G(msg)
 //
 set VO="72|35|13|"
 set VO(35)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(36)=$C(3,25,9,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.REFNO,1,9)
 set VO(37)=$C(3,37,0,2,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$S($G(pri):$$^MSG(7807),1:""))
 set VO(38)=$C(4,25,40,2,0,0,0,0,0,0)_"01T"_$E(CIF.NAM,1,40)
 set VO(39)=$C(5,25,12,2,0,0,0,0,0,0)_"01N"_$G(EPCID)
 set VO(40)=$C(5,64,6,2,0,0,0,0,0,0)_"00N"_fEFTPAY.BRCD
 set VO(41)=$C(6,25,20,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.LNM,1,20)
 set VO(42)=$C(6,64,6,2,0,0,0,0,0,0)_"01N"_fEFTPAY.CC
 set VO(43)=$C(7,25,32,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CUSTID,1,32)
 set VO(44)=$C(8,25,2,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.STATUS,1,2)
 set VO(45)=$C(8,28,20,2,0,0,0,0,0,0)_"01T"_$G(STATDSC)
 set VO(46)=$C(8,64,12,2,0,0,0,0,0,0)_"01N"_fEFTPAY.SEQ
 set VO(47)=$C(9,25,2,2,0,0,0,0,0,0)_"01N"_fEFTPAY.TRIES
 set VO(48)=$C(9,64,6,2,0,0,0,0,0,0)_"01N"_fEFTPAY.XSEQ
 set VO(49)=$C(10,25,10,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.MET,1,10)
 set VO(50)=$C(10,36,31,2,0,0,0,0,0,0)_"01T"_$G(METDSC)
 set VO(51)=$C(11,25,15,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.RECINST,1,15)
 set VO(52)=$C(12,25,34,2,0,0,0,0,0,0)_"00T"_$G(RECACCT)
 set VO(53)=$C(13,25,24,2,0,0,0,0,0,0)_"01T"_$E(fEFTPAY.UTILITYID,1,24)
 set VO(54)=$C(13,64,17,2,0,0,0,0,0,0)_"00T"_$G(RECGL)
 set VO(55)=$C(14,25,2,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.SUBCODE,1,2)
 set VO(56)=$C(14,64,6,2,0,0,0,0,0,0)_"00N"_fEFTPAY.CRCC
 set VO(57)=$C(15,25,35,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.BENAD1,1,35)
 set VO(58)=$C(16,25,12,2,0,0,0,0,0,0)_"00F"_$E(fEFTPAY.FREQUENCY,1,12)
 set VO(59)=$C(16,64,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fEFTPAY.EXPDT)
 set VO(60)=$C(17,25,10,2,0,0,0,0,0,0)_"00D"_$$DAT^%ZM(fEFTPAY.EFD)
 set VO(61)=$C(17,64,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fEFTPAY.PROCDT)
 set VO(62)=$C(18,25,2,2,0,0,0,0,0,0)_"00N"_fEFTPAY.AMTTYP
 set VO(63)=$C(18,28,20,2,0,0,0,0,0,0)_"01T"_$G(ATYPDESC)
 set VO(64)=$C(18,64,3,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CRCD,1,3)
 set V=$S(fEFTPAY.AMOUNT="":"",1:$J(fEFTPAY.AMOUNT,0,2)) set VO(65)=$C(19,25,15,2,0,0,0,0,0,0)_"00$"_$S(fEFTPAY.AMOUNT="":"",1:$J(fEFTPAY.AMOUNT,0,2))
 set V=$S(fEFTPAY.ACTAMT="":"",1:$J(fEFTPAY.ACTAMT,0,2)) set VO(66)=$C(19,64,15,2,0,0,0,0,0,0)_"01$"_$S(fEFTPAY.ACTAMT="":"",1:$J(fEFTPAY.ACTAMT,0,2))
 set VO(67)=$C(20,25,1,2,0,0,0,0,0,0)_"00L"_$S(fEFTPAY.HLDAUTO:"Y",1:"N")
 set VO(68)=$C(20,64,5,2,0,0,0,0,0,0)_"01N"_fEFTPAY.HLDSEQ
 set VO(69)=$C(21,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.VARIABLE,1,10)
 set VO(70)=$C(21,64,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.CONSTANT,1,10)
 set VO(71)=$C(22,25,10,2,0,0,0,0,0,0)_"00T"_$E(fEFTPAY.SPECIFIC,1,10)
 set VO(72)=$C(22,64,1,2,0,0,0,0,0,0)_"00L"_$S($G(msg):"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=36,VPT=1,VPB=22,PGM=$T(+0),DLIB="SYSDEV",DFID="EFTPAY",VSCRPP=1,VSCRPP=1
 set OLNTB=22064
 
 set VFSN("CIF")="zCIF",VFSN("CUVAR")="zfCUVAR",VFSN("DEP")="zDEP",VFSN("EFTPAY")="zfEFTPAY"
 //
 // 
	
	
 set %TAB(1)=$C(2,24,9)_"20T12404|1|[EFTPAY]REFNO|||||||||20"
 set %TAB(2)=$C(3,24,40)_"20T12401|1|[CIF]NAM"
 set %TAB(3)=$C(4,24,12)_"20N|*EPCID|[*]@EPCID"
 set %TAB(4)=$C(4,63,6)_"00N12425|1|[EFTPAY]BRCD|[UTBLBRCD]|||do VP1^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(5)=$C(5,24,20)_"01T12426|1|[EFTPAY]LNM"
 set %TAB(6)=$C(5,63,6)_"21N12411|1|[EFTPAY]CC|[UTBLCCNTR]"
 set %TAB(7)=$C(6,24,32)_"00T12445|1|[EFTPAY]CUSTID"
 set %TAB(8)=$C(7,24,2)_"21T12412|1|[EFTPAY]STATUS|[STBLESTAT]||||||||3"
 set %TAB(9)=$C(7,27,20)_"20T|*STATDSC|[*]@STATDSC"
 set %TAB(10)=$C(7,63,12)_"21N12402|1|[EFTPAY]SEQ|[EFTPAY]"
 set %TAB(11)=$C(8,24,2)_"21N12414|1|[EFTPAY]TRIES"
 set %TAB(12)=$C(8,63,6)_"20N12424|1|[EFTPAY]XSEQ"
 set %TAB(13)=$C(9,24,10)_"21T12413|1|[EFTPAY]MET|[STBLPAYMET]"
 set %TAB(14)=$C(9,35,31)_"20T|*METDSC|[*]@METDSC"
 set %TAB(15)=$C(10,24,15)_"01T12402|1|[EFTPAY]RECINST|[UTBLEFTINST]||do VP2^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(16)=$C(11,24,34)_"00T|*RECACCT|[*]@RECACCT|||do VP3^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)|do VP4^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(17)=$C(12,24,24)_"20T12444|1|[EFTPAY]UTILITYID"
 set %TAB(18)=$C(12,63,17)_"00T|*RECGL|[*]@RECGL|||do VP5^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)|do VP6^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(19)=$C(13,24,2)_"00T12458|1|[EFTPAY]SUBCODE||||do VP7^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(20)=$C(13,63,6)_"00N12428|1|[EFTPAY]CRCC|[UTBLCCNTR]|||do VP8^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(21)=$C(14,24,35)_"00T12411|1|[EFTPAY]BENAD1"
 set %TAB(22)=$C(15,24,12)_"00F12409|1|[EFTPAY]FREQUENCY|||do VP9^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)|do VP10^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(23)=$C(15,63,10)_"00D12423|1|[EFTPAY]EXPDT|||do VP11^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(24)=$C(16,24,10)_"01D12408|1|[EFTPAY]EFD|||do VP12^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(25)=$C(16,63,10)_"21D12417|1|[EFTPAY]PROCDT"
 set %TAB(26)=$C(17,24,2)_"01N12418|1|[EFTPAY]AMTTYP|[STBLAMTTYP]||do VP13^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)|do VP14^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(27)=$C(17,27,20)_"20T|*ATYPDESC|[*]@ATYPDESC"
 set %TAB(28)=$C(17,63,3)_"01T12404|1|[EFTPAY]CRCD|[CRCD]:QU ""[CRCD]CO=<<%CO>>""||do VP15^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(29)=$C(18,24,15)_"00$12403|1|[EFTPAY]AMOUNT|||do VP16^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)||||2"
 set %TAB(30)=$C(18,63,15)_"20$12415|1|[EFTPAY]ACTAMT|||||||2"
 set %TAB(31)=$C(19,24,1)_"00L12469|1|[EFTPAY]HLDAUTO"
 set %TAB(32)=$C(19,63,5)_"20N12437|1|[EFTPAY]HLDSEQ"
 set %TAB(33)=$C(20,24,10)_"00T12405|1|[EFTPAY]VARIABLE"
 set %TAB(34)=$C(20,63,10)_"01T12406|1|[EFTPAY]CONSTANT|[UTBLECOACT]"
 set %TAB(35)=$C(21,24,10)_"00T12407|1|[EFTPAY]SPECIFIC|||do VP17^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 set %TAB(36)=$C(21,63,1)_"00L|*msg|[*]@MSG|||do VP18^V00S164(.fEFTPAY,.DEP,.CIF,.fCUVAR)"
 do VTBL(.fEFTPAY,.DEP,.CIF,.fCUVAR),VDEPRE(.fEFTPAY,.DEP,.CIF,.fCUVAR) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordEFTPAY fEFTPAY
 type Public RecordDEP DEP
 type Public RecordCIF CIF
 type Public RecordCUVAR fCUVAR
 do VSPP1(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)
 if fEFTPAY.status="" set fEFTPAY.status="A"
 if RECACCT'="" do DEFAULT^DBSMACRO("EFTPAY.RECACCT",RECACCT,"1","0","0")
 if RECGL'="" do DEFAULT^DBSMACRO("EFTPAY.RECACCT",RECGL,"1","0","0")
 /*
 Set up the transaction type field ([EFTPAY]TTYPE)
 Valid values are:
 
              Dr Acct        Cr Acct
              --------       -------
       0 -->  Customer to    Customer
       1 -->  Customer to    G/L
       2 -->  G/L      to    Customer
       3 -->  G/L      to    G/L
 */
 if '$G(gl)&($L(RECACCT)) do DEFAULT^DBSMACRO("EFTPAY.TTYPE",0,"1","0","0")
 if '$G(gl)&($L(RECGL)) do DEFAULT^DBSMACRO("EFTPAY.TTYPE",1,"1","0","0")
 if $G(gl)&($L(RECACCT)) do DEFAULT^DBSMACRO("EFTPAY.TTYPE",2,"1","0","0")
 if $G(gl)&($L(RECGL)) do DEFAULT^DBSMACRO("EFTPAY.TTYPE",3,"1","0","0")
 kill RECACCT,RECGL
 quit 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VDEPRE(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)  // Data Entry Pre-processor
 
 set multiple=$G(multiple) set ogl=$G(ogl) set ATYPDESC=$G(ATYPDESC) set amt=$G(amt)
 if $G(pri) do DEFAULT^DBSMACRO("EFTPAY.PRI",1)
 if 'ogl do PROTECT^DBSMACRO("EFTPAY.BRCD")
 if 'ogl do PROTECT^DBSMACRO("EFTPAY.CC")
 if 'ogl do PROTECT^DBSMACRO("EFTPAY.LNM")
 type RecordCTBLEFTTYPE ctblefttype=Db.getRecord("CTBLEFTTYPE","KEY=:SRC")
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 if %ProcessMode=0!multiple do {
 	do DEFAULT^DBSMACRO("EFTPAY.STATUS","A")
 	do DEFAULT^DBSMACRO("EFTPAY.MET","CC")
 	do DEFAULT^DBSMACRO("EFTPAY.AMTTYP",1)
 	do DEFAULT^DBSMACRO("EFTPAY.TRIES",ctblefttype.tries)
 	do DEFAULT^DBSMACRO("EFTPAY.EFTTYPE",SRC)
 	do DEFAULT^DBSMACRO("@ATYPDESC",$$^MSG(6058)) // Fixed Amount
 	if multiple,'fEFTPAY.amount do DEFAULT^DBSMACRO("EFTPAY.AMOUNT",amt-$G(totalamt))
 	if multiple set rgl=$S(fEFTPAY.ttype=1!(fEFTPAY.ttype=3):1,1:0)
	if fEFTPAY.recinst="",multiple,$G(onus) do DEFAULT^DBSMACRO("EFTPAY.RECINST",cuvar.iso)
 	// 
 	if 'multiple quit 
 	do DEFAULT^DBSMACRO("EFTPAY.EFD",efd)
 	do DEFAULT^DBSMACRO("EFTPAY.PROCDT",procdt)
 	do PROTECT^DBSMACRO("EFTPAY.EFD")
 	do PROTECT^DBSMACRO("EFTPAY.CRCD")
 	do PROTECT^DBSMACRO("EFTPAY.PROCDT")
 	}
 if ogl do {
 	do PROTECT^DBSMACRO("EFTPAY.AMTTYP")
 	if '%ProcessMode set CRCD=%SystemCurrency
 	if %ProcessMode do UNPROT^DBSMACRO("EFTPAY.CC")
 	if '%ProcessMode do DEFAULT^DBSMACRO("EFTPAY.CRCD",%SystemCurrency)
 	if '%ProcessMode!multiple do DEFAULT^DBSMACRO("EFTPAY.CC",$G(CC))
 	}
 else  do {
	type RecordDEP dep=Db.getRecord("DEP","CID=:CID")
 	do DEFAULT^DBSMACRO("EFTPAY.BRCD",dep.boo)
 	if '%ProcessMode!(multiple) do {
 		set CRCD=dep.crcd if CRCD="" set CRCD=%SystemCurrency
 		do DEFAULT^DBSMACRO("EFTPAY.CRCD",CRCD)
 		do DEFAULT^DBSMACRO("EFTPAY.CRCD",CRCD)
 		else  do DEFAULT^DBSMACRO("EFTPAY.CRCD",%SystemCurrency)
 		}
 	do DEFAULT^DBSMACRO("EFTPAY.CC",dep.cc)
 	do PROTECT^DBSMACRO("EFTPAY.CC")
 	}
 if fEFTPAY.lnm="" do {
	type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")
	do DEFAULT^DBSMACRO("EFTPAY.LNM",cif.lnm)
	}
 if 'STDPAY do {
 	do PROTECT^DBSMACRO("EFTPAY.FREQUENCY")
 	do PROTECT^DBSMACRO("EFTPAY.EXPDT")
 	}
 if ((SRC1="PO")!(SRC1="DD")!(SRC1="SPO")),'STDPAY do PROTECT^DBSMACRO("EFTPAY.AMTTYP")
 if fEFTPAY.amttyp=3 do PROTECT^DBSMACRO("EFTPAY.AMOUNT")
 if %ProcessMode=0 do PROTECT^DBSMACRO("EFTPAY.TRIES")
 if fEFTPAY.ttype'="",fEFTPAY.ttype#2 do DEFAULT^DBSMACRO("@RECGL",fEFTPAY.recacct)
 else  do DEFAULT^DBSMACRO("@RECACCT",fEFTPAY.recacct)
 if $G(CANCEL) do PROTECT^DBSMACRO("ALL") do UNPROT^DBSMACRO("@MSG") quit 
 if '(%ProcessMode=0!multiple) do { quit 
 	set iso=fEFTPAY.feetype                // Fee Calculation Method
	type RecordUTBLEFTINST utbleftinst=Db.getRecord("UTBLEFTINST","KEY=:iso")
 	set onus=utbleftinst.onus
 	if 'onus do DEFAULT^DBSMACRO("@RECACCT",fEFTPAY.antrate)       // Anticipated Payment Exchange Rate
 	}
 quit:'%ProcessMode!multiple 
 do DEFAULT^DBSMACRO("@RECACCT",cid)
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 if '$G(ogl) do CHANGE^DBSMACRO("REQ")
 quit

VP2(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 if SRC1="DD" do {
	type RecordUTBLEFTINST utbleftinst=Db.getRecord("UTBLEFTINST","KEY=:X")
 	set TRIES=utbleftinst.retry
 	if TRIES="" do {
		type RecordCTBLEFTTYPE ctblefttype=Db.getRecord("CTBLEFTTYPE","KEY=:SRC")
		set TRIES=ctblefttype.tries
		}
 	do DEFAULT^DBSMACRO("EFTPAY.TRIES",TRIES,"1","0","0")
	do DEFAULT^DBSMACRO("EFTPAY.UTILITYID",utbleftinst.utilityid,"1","0","0")
 	}
 quit 
VP3(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 quit:X="" 
 do VPO1(.fEFTPAY,.DEP,.CIF,.fCUVAR) quit:ER 

 type String STBLEFT
 set STBLEFT=SRC1
 set fEFTPAY.antrate=X                   // Anticipated Payment Exchange Rate

 if GL="" set fEFTPAY.feecrcd=0          // Fee Currency
 else  set fEFTPAY.feecrcd=2             // Fee Currency

 set DEBAUT=$$DEBCHECK^EFTFUNCS(.fEFTPAY,onus)
 if SRC1="DD" set ER=0
 quit 

VPO1(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)  // user library EFT_RCID
 /*
 -------Revision History----------------------------------------------------
 04/06/05 - CARROLLJ - CR15991
            Convert to PSL.
 */
 	if X="" do UNPROT^DBSMACRO("@RECGL")
 	if X="" do UNPROT^DBSMACRO("[EFTPAY]CRCC")
 	quit:X="" 
 	do DELETE^DBSMACRO("@RECGL","1","0")
 	do PROTECT^DBSMACRO("@RECGL")
 	do DELETE^DBSMACRO("[EFTPAY]CRCC","1","0")
 	do PROTECT^DBSMACRO("[EFTPAY]CRCC")
 	do RECACCT
 	quit
RECACCT
	type Public RecordEFTPAY fEFTPAY
 	type String savcid 
	Type RecordDEP dep=Db.getRecord("DEP","CID=:CID")
 	set savcid=CID
 	set RECINST=fEFTPAY.recinst
 	type RecordUTBLEFTINST utbleftinst=Db.getRecord("UTBLEFTINST","KEY=:RECINST")
 	if 'utbleftinst.onus do { quit 
 		set onus=0 do onthem quit:$G(ER) 
 		}
 	if '$G(rgl) do {
		// Currency Code
 		set origcrcd=dep.crcd set:origcrcd="" origcrcd=%SystemCurrency     
 		}
 	else  set origcrcd=$P(vrec1,"|",8)
 
 	set onus=1 
 	set Z=X
 	// MSG 1462: Invalid selection
 	if $G(IDEXCH)="" do UACN if X="" do Runtime.setErrMSG("EFTPAY",1462) quit
 	/*
 	The above line testing IDEXCH is to determine if we are running thru
 	Record Exchange ; UACN does not work for Record Exchange
 	*/
 	set CID=X
 	do LODRCID quit:ER 
 	//MSG 6050: Account "_X_" is closed
 	if dep.stat=4 do Runtime.setErrMSG("EFTPAY",6050,X) set X="" quit
 	quit
ONUS
	type Public RecordEFTPAY fEFTPAY
	type RecordDEP dep=Db.getRecord("DEP","CID=:X")
 	//MSG 7823:Invalid account (""from"" account may not be the ""recipient"" account)
 	if $G(rgl),$G(ogl),savcid=X,$G(OCC)=$G(CCC) do Runtime.setErrMSG("EFTPAY",7823) quit
 	if '$G(ogl),savcid=X do Runtime.setErrMSG("EFTPAY",7823) quit
 	set reccrcd=dep.crcd
 	if reccrcd="" set reccrcd=%SystemCurrency
 	if ((fEFTPAY.efttype="PO")!(fEFTPAY.efttype="SPO")),origcrcd'=reccrcd do { quit:ER 
 		//MSG 6965: Currency "_origcrcd_" not convertible
		type RecordCRCD crcd=Db.getRecord("CRCD","CO=:CO,CRCD=:origcrcd")
 		if '$G(ogl),'crcd.conv do Runtime.setErrMSG("EFTPAY",origcrcd) quit
 		}
 	if ((fEFTPAY.efttype="CO")!(fEFTPAY.efttype="SCO"))&(origcrcd'=reccrcd)&('$G(ogl)) do { quit:ER 
 		//MSG 6965:Currency "_reccrcd_" not convertible
		type RecordCRCD crcd=Db.getRecord("CRCD","CO=:CO,CRCD=:reccrcd")
 		if 'crcd.conv do Runtime.setErrMSG("EFTPAY",6965,reccrcd) quit
 		}
 	quit
UACN	//
 if X=+X do UACN1 quit 
 do UACN2
 set ER=''ER
 if ER set CID=XCID do DSP quit 
 // Re-paint screen
 do DSP                                 
 set RM($O(RM(""),-1)+1)=X_"|"_NI
 quit 
UACN1	//
 // MSG 1259:Invalid account
 if 'Db.isDefined("ACN","CID=:X") do Runtime.setErrMSG("EFTPAY",1259) quit:ER
 do EDCHK^UACN1 quit:ER  set XCID=$G(CID) set CID=X do PROT^UACN set CID=XCID
 quit 
UACN2	//
 type String %TAB,CID,%MAX,NI,PGM,VSCRPP
 set CID=$G(CID) 
 set XCID=CID 
 set %EXT=1 
 do ^UACN
 quit 
onthem	//make sure account follows mod 11 check digit formula
 //MSG 6968:Account must not contain alpha characters
 if $TR(X,"0123456789-","")'="" do Runtime.setErrMSG("EFTPAY",6968) quit:ER
 quit 
DSP	// Paint
 do @("VREPRNT^"_PGM) quit 
 quit
LODRCID	// Load recipient Account data from the server
 if $G(%LOGID) do { if 'ER quit 
 	do STUB^DBSCLI("LODRCID^"_$T(+0),0,,CID,,"v") if ER kill %RPC quit 
 	}
 if $G(%RPC) set CID=$P(%RPC,$C(28),1),%RPC=0
 if 'Db.isDefined("ACN","CID") do Runtime.setErrMSG("EFTPAY",7774) set %RPC=0 quit
 quit 
DEBAUT1
 type Public RecordEFTPAY fEFTPAY
 //Originating account's Cost center
 set fEFTPAY.benad1=$G(OCC)
 quit:'onus 
 set x=X
 if X["|" do { quit:$G(ER)              // G/L number
 	set rgl=1
 	set X=$TR(X,"|","-")
 	set CCC=$P(X,"-",1)
 	set Z=$P(X,"-",2)
 	// MSG 7802:Invalid G/L account: (null)
 	if Z="" do Runtime.setErrMSG("EFTPAY",7802) quit
	// Originating account's Cost center
 	set fEFTPAY.benad1=$G(OCC)
 	if onus do { quit:$G(ER) 
 		set fEFTPAY.feeamt=CCC
 		//MSG 7821: Invalid G/L account: _Z
		if 'Db.isDefined("GLAD","ACN=:Z") do Runtime.setErrMSG("EFTPAY",1364) quit
 		set RECACCT=""
 		set (RECGL,X)=Z
 		}
 	}
 else  do { quit:$G(ER)                 //Account number
 	set rgl=0
 	set Z=X
 	if onus do {
 		set RECACCT=X set RECGL=""
 		//MSG 7822: Invalid account number (account does not exist)
		if 'Db.isDefined("GLAD","ACN=:X") do Runtime.setErrMSG("EFTPAY",7822) quit
		type RecordDEP dep=Db.getRecord("DEP","CID=:CID")
 		set ACCCRCD=dep.crcd
		type RecordCUVAR cuvar=Db.getRecord("CUVAR")
		set DEFCRCD=$S(ACCCRCD'="":ACCCRCD,1:cuvar.%crcd)
 		}
 	else  set RECACCT="" set RECGL=""
 	}
 //Originating account's Cost center
 if $G(ogl) set fEFTPAY.benad1=$G(OCC)
 quit 
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP4(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //

RECPRE	//
 set rgl=0
 set RECINST=fEFTPAY.recinst
 type RecordUTBLEFTINST utbleftinst=Db.getRecord("UTBLEFTINST","KEY=:RECINST")
 set onus=utbleftinst.onus
 if 'onus do CHANGE^DBSMACRO("REQ")
 if 'onus do PROTECT^DBSMACRO("@RECGL")
 quit:'onus 
 do UNPROT^DBSMACRO("@RECACCT")
 do UNPROT^DBSMACRO("@RECGL")
 quit 

VP5(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 //MSG 6059: Must use either customer account or G/L account
 if X=""&(RECACCT="") do Runtime.setErrMSG("EFTPAY",6059) quit:ER
 if   set rgl=0
 if   do GOTO^DBSMACRO("@RECACCT") quit 
 quit:X="" 

 // MSG 1364: Invalid G/L account ~p1
 if 'Db.isDefined("GLAD","ACN=:X") do Runtime.setErrMSG("EFTPAY",1364) quit:ER

 set rgl=1
 // Debit authorization
 type String STBLEFT
 set STBLEFT=SRC1
 set fEFTPAY.antrate=X                   // Anticipated Payment Exchange Rate
 if GL="" set fEFTPAY.feecrcd=1          // Fee Currency
 else  set fEFTPAY.feecrcd=3             // Fee Currency
 //
 set DEBAUT=$$DEBCHECK^EFTFUNCS(.fEFTPAY,onus)
 if SRC1="DD" set ER=0
 quit
VP6(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 // I18N=OFF
 // Do not include header G/Ls in the lookup table.
 type String GLQRY set GLQRY="{GLAD.TYPE}'=""H"""
 do CHANGE^DBSMACRO("TBL","GLAD:QUERY GLQRY")
 quit 
 // I18N=ON
VP7(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 if $G(SRC1)["PO" do CHANGE^DBSMACRO("TBL","UTBLEFTPO")
 if $G(SRC1)["CO" do CHANGE^DBSMACRO("TBL","UTBLEFTCO")
 quit 

VP8(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 if $G(rgl) do CHANGE^DBSMACRO("REQ")
 quit

VP9(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 if X="",STDPAY do Runtime.setErrMSG("EFTPAY",741) quit:ER
 if X=V quit 
 type String JD,FRE
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 set JD=%SystemDate 
 set FRE=X
 do ^UFRE
 set fEFTPAY.efd=NJD
 set DAYS=$S(SRC1="PO"!(SRC1="SPO")!(SRC1["POF"):cuvar.minpay,SRC1="CO"!(SRC1="SCO")!(SRC1["COF"):cuvar.mincol)
 set MINDATE=$$NBD^UNBD(%SystemDate,DAYS)
 set DAYS=$S(SRC1="PO"!(SRC1="SPO")!(SRC1["POF"):cuvar.maxpay,SRC1="CO"!(SRC1="SCO")!(SRC1["COF"):cuvar.maxcol)
 set MAXDATE=$$NBD^UNBD(%SystemDate,DAYS)

 //MSG 878: Effective date must be at least
 if NJD<MINDATE set ER="W" do Runtime.setErrMSG("EFTPAY",878,$$DAT^%ZM(MINDATE)) quit:ER

 //msg 875: Effective date must not be greater than
 if NJD>MAXDATE set ER="W" do Runtime.setErrMSG("EFTPAY",878,$$DAT^%ZM(MINDATE)) quit:ER
 do DISPLAY^DBSMACRO("EFTPAY.EFD","","0")
 quit

VP10(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 if $G(STDPAY)=1 do CHANGE^DBSMACRO("REQ","")
 quit 

VP11(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 quit:'X 
 //MSG 6062: Expiration date must be business day
 if '$$BD^UNBD(X) do Runtime.setErrMSG("EFTPAY",6062) quit:ER
 //MSG 6063: Effective date greater than Expiration date
 if fEFTPAY.efd>X  do Runtime.setErrMSG("EFTPAY",6063) quit:ER
 quit

VP12(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 quit:$G(CANCEL) 

 do VPO3(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 quit:ER 

 // Debit authorization
 type String STBLEFT
 set STBLEFT=SRC1
 set fEFTPAY.ord3=X                      // Ordering Customer Line 3
 //
 set DEBAUT=$$DEBCHECK^EFTFUNCS(.fEFTPAY,onus)
 if SRC1="DD" set ER=0
 quit 

VPO3(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)  // user library EFT_EFD
 /*
 ---- Revision History ------------------------------------------------
 04/06/05 - CARROLLJ - CR15991
	    Converted to PSL.
 */
 
 type String efd
 if X="" do Runtime.setErrMSG("EFTPAY",2385) quit
 // Date must not be in the past
 if X<%SystemDate do Runtime.setErrMSG("EFTPAY",755) quit
 if fEFTPAY.efttype="POC" do DEFAULT^DBSMACRO("EFTPAY.PROCDT",X,"1","0","0")
 if   quit 
 do efd quit
 quit
public efd	//
 type String STBLEFT
 type String savdat 
 type Public RecordEFTPAY fEFTPAY
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 type RecordCTBLEFTTYPE ctblefttype=Db.getRecord("CTBLEFTTYPE","KEY=:fEFTPAY.efttype")
 set STBLEFT=ctblefttype.stbleft
 //
 set savdat=X
 // Effective date greater than Expiration date.
 if (fEFTPAY.expdt'="")&(X>fEFTPAY.expdt) do Runtime.setErrMSG("EFTPAY",6063) quit
 set MINDAYS=$S(STBLEFT["PO":cuvar.minpay,STBLEFT["DD":cuvar.minpay,STBLEFT["CO":cuvar.mincol,1:"")
 set MAXDAYS=$S(STBLEFT["PO":cuvar.maxpay,STBLEFT["DD":cuvar.maxpay,STBLEFT["CO":cuvar.maxcol,1:"")
 set (MINDATE,MAXDATE)=%SystemDate
 if MINDAYS>0 set MINDATE=$$NBD^UNBD(%SystemDate+1,MINDAYS)
 if MAXDAYS>0 set MAXDATE=$$NBD^UNBD(%SystemDate+1,MAXDAYS)
 // Effective date may not be prior to ~p1
 if 'onus&(X<MINDATE) do Runtime.setErrMSG("EFTPAY",878,$$DAT^%ZM(MINDATE,"YY/MM/DD")) quit
 set efd=$$date^EFTFUNCS(X-1,"1DA",onus,0,STBLEFT,fEFTPAY.crcd)
 // Invalid business date.  Use effective date ~p1.
 if X'=efd set ER="W" do Runtime.setErrMSG("EFTPAY",1276,$$DAT^%ZM(efd,"YY/MM/DD"))
 if   set X=efd
 // Effective date may not be greater than ~p1
 if X>MAXDATE do Runtime.setErrMSG("EFTPAY",875,$$DAT^%ZM(MAXDATE,"YY/MM/DD")) quit
 do DEFAULT^DBSMACRO("EFTPAY.PROCDT",procdt,"1","0","0")
 quit 
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP13(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 // Post-processor created for variable amounts
 // Post-processor for data item: Amount Type

 type RecordSTBLAMTTYP stblamttyp=Db.getRecord("STBLAMTTYP","AMTTYP=:X")
 set ATYPDESC=stblamttyp.desc
 set fEFTPAY.amttyp=X
 do DELETE^DBSMACRO("EFTPAY.AMOUNT","1","0")
 if X>2 do PROTECT^DBSMACRO("EFTPAY.AMOUNT")
 if X<3 do UNPROT^DBSMACRO("EFTPAY.AMOUNT")
 if (((SRC1="SCO")!(SRC1="CO"))&(fEFTPAY.amttyp>2)) do {
 	set fEFTPAY.amount=+$$ORDAMT^EFTFUNCS(X,0,CID,fEFTPAY.frequency,fEFTPAY.crcd,"",SRC,fEFTPAY.recacct)
 	do GOTO^DBSMACRO("fEFTPAY.CRCD") quit 
 	}
 do DISPLAY^DBSMACRO("ALL","","0")
 quit
VP14(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 // Pre-processor created for variable amounts
 type String ACCTOPT,CLS,EFTTOPT,XCID

 set XCID=fEFTPAY.cid
 type RecordACN acn=Db.getRecord("ACN","CID=:XCID")
 set CLS=acn.cls
 //
 if CLS="L" set ACCTOPT=1
 else  set ACCTOPT=2
 //
 if SRC1["CO" set EFTTOPT=1
 else  set EFTTOPT=2
 //
 // Modified table lookup based on Account Type and EFT Type
 //set zv="[STBLAMTTYP]AMTTYP,DESC:QU ""[STBLAMTTYP]ACCTOPT'="_ACCTOPT_" & [STBLAMTTYP]EFTTOPT'="_EFTTOPT_"""" 
 do CHANGE^DBSMACRO("TBL","STBLAMTTYP")
 quit 

VP15(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 do VPO5(.fEFTPAY,.DEP,.CIF,.fCUVAR) quit:ER 

 // Determine the amount
 if (((SRC1="SCO")!(SRC1="CO"))&(fEFTPAY.amttyp>1)) do {
 	set fEFTPAY.amount=+$$ORDAMT^EFTFUNCS(fEFTPAY.amttyp,0,CID,fEFTPAY.frequency,X,"",SRC,fEFTPAY.recacct)
 	do DISPLAY^DBSMACRO("ALL","","0")
 	}
 type String STBLEFT
 set STBLEFT=SRC1
 set fEFTPAY.refno=X                     // Transaction Reference Number

 set DEBAUT=$$DEBCHECK^EFTFUNCS(.fEFTPAY,onus)
 if SRC1="DD" set ER=0
 quit 
VPO5(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)  // user library EFT_CRCD
 /*
 -------Revision History----------------------------------------------------
 02/07/07 - KELLYP - CR 19055
	    Removed extra rcurr section.
 04/06/05 - CARROLLJ - CR15840
 	    Convert to PSL.
 */
 quit:X="" 
 type String z,fcurr
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 type RecordDEP dep=Db.getRecord("DEP","CID=:CID")
 if '$D(%CO) set %CO=cuvar.co
 if onus,'$G(ogl),$G(RECACCT)'="" do { quit:$G(ER) 
 	set fcurr=dep.crcd if fcurr="" set fcurr=%SystemCurrency
 	type String rcurr
 	set rcurr=$$rcurr(RECACCT)
 	//MSG 1847: Must use either the recipient or the ""from"" account's currency
 	if onus,X'=rcurr,X'=fcurr do Runtime.setErrMSG("EFTPAY",1847) quit
 	}
 // Recipient's Correspondent
 quit:fEFTPAY.reccorr="POC"
 type RecordCRCD crcd=Db.getRecord("CRCD","CO=:%CO,CRCD=:X")
 if (SRC1["PO")!(SRC1["DD") set CCACC=crcd.poacc
 else  if SRC1["CO" set CCACC=crcd.coacc
 //MSG 6963:Currency "_X_" not accepted by Clearing Center
 if 'onus,'CCACC do Runtime.setErrMSG("EFTPAY",6963,X) quit
 if '$G(rgl)&'$G(ogl) do { quit 
 	set fcurr=dep.crcd
	if fcurr="" set fcurr=%SystemCurrency
 	type String rcurr
 	set rcurr=$$rcurr(RECACCT)
 	if X=rcurr,(X=fcurr) quit             // all same currency is OK
	type RecordCRCD fcrcd=Db.getRecord("CRCD","CO=:%CO,CRCD=:fcurr")
	type RecordCRCD rcrcd=Db.getRecord("CRCD","CO=:%CO,CRCD=:rcurr")
 	if SRC1="PO",X=fcurr,fcrcd.conv quit 
 	if SRC1="PO",X=rcurr,rcrcd.conv quit 
 	if SRC1="DD",X=fcurr,fcrcd.conv quit 
 	if SRC1="DD",X=rcurr,rcrcd.conv quit 
 	if SRC1="SPO",X=fcurr,fcrcd.conv quit 
 	if SRC1="SPO",X=rcurr,rcrcd.conv quit 
 	if SRC1="CO",X=rcurr,rcrcd.conv quit 
 	if SRC1="CO",X=fcurr,fcrcd.conv quit 
 	if SRC1="SCO",X=rcurr,rcrcd.conv quit 
 	if SRC1="SCO",X=fcurr,fcrcd.conv quit 
 	if 'onus,CCACC quit 
 
 	//MSG 6964: Account's currency "_fcurr_" is not convertible
 	if 'rcrcd.conv do Runtime.setErrMSG("EFTPAY",6964,rcurr) quit
 	if 'fcrcd.conv do Runtime.setErrMSG("EFTPAY",6964,fcurr) quit
 	}
 /*
 Modified following line to include "onus" check.  If the payment order
 recipient account is not "on us", the currency of the account is not (cannot)
 be checked.
 */
 if $G(ogl),onus do { quit:ER 
 	set fcurr=X 
	set rcurr=fcurr
 	if $G(RECACCT)'="" set rcurr=$$rcurr(RECACCT)
 	//msg 6965:Currency "_fcurr_" not convertible
	type RecordCRCD fcrcd=Db.getRecord("CRCD","CO=:%CO,CRCD=:fcurr")
 	if fcurr'=rcurr,'fcrcd.conv do Runtime.setErrMSG("EFTPAY",6965,fcurr)
 	}
 quit 
rcurr(cid)	//return the account's currency
 type RecordDEP dep1=Db.getRecord("DEP","CID=:cid")
 type String crcd
 set crcd=dep1.crcd
 if crcd="" set crcd=%SystemCurrency
 quit crcd
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP16(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 /*
 The following section was rewritten to correct problems with the amount
 remaining message displaying negative totals when returning to a screen
 after initial data entry (using prev_screen).
 */

 if fEFTPAY.amttyp=3 do GOTO^DBSMACRO("EFTPAY.HLDAUTO") quit 
 //
 type String amtcol,I
 set amtcol=0 set I=""
 set CRCD=fEFTPAY.crcd
 //
 if $G(multiple) do {
 	for  set I=$O(eft(I)) quit:I=""  do {
 		if I'=%PG set amtcol=amtcol+$P(eft(I),"|",3)
 		}
 	// Amount remaining
 	set ER="W" set RM=$$^MSG(6065)_$$NUM^%ZM($$^SCARND(amt-amtcol-X,0,,CRCD),2)
 	}
 set savamt=X
 do VPO7(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 quit:ER 
 quit 

VPO7(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)  // user library EFT_AMT
 /*
 -------Revision History----------------------------------------------------
 04/06/05 - CARROLLJ - CR15840
            Convert to PSL.
 */
 // Amount must be greater than zero
 if X<0 do Runtime.setErrMSG("EFTPAY",279) quit:ER
 // Amount must be fixed for G/L orders
 if $G(gl)&(fEFTPAY.amttyp'=1) set ER=1 set RM=$$^MSG(277) quit:ER
 if fEFTPAY.amttyp=1 do { quit:ER 
	// Amount is required for fixed amount payment/collection orders
 	if 'X do Runtime.setErrMSG("EFTPAY",276)
 	}
 if fEFTPAY.amttyp=2!(fEFTPAY.amttyp=3) do { quit:ER 
	// One-time payment orders cannot have variable payment amounts.
 	if ((fEFTPAY.efttype="PO")!(fEFTPAY.efttype="SPO"))&('$L(fEFTPAY.frequency)) do Runtime.setErrMSG("EFTPAY",6960) quit
 	}
 if fEFTPAY.amttyp=2 do { quit:ER 
	// Amount threshold must be specified
 	if ((fEFTPAY.efttype="PO")!(fEFTPAY.efttype="SPO"))&($L(fEFTPAY.frequency))&('X) do Runtime.setErrMSG("EFTPAY",284) quit
 	//make sure amount is not greater than the minimum balance requirement.
 	quit:ogl  
	type RecordDEP dep=Db.getRecord("DEP","CID=:CID")	
	// NO MIN BALANCE
 	quit:'dep.minbal                      
	// Amount is less than minimum balance: ~p1
 	if X<dep.minbal do Runtime.setErrMSG("EFTPAY",8621,dep.minbal)
 	}
 quit 
 #ACCEPT DATE=11/05/03;pgm=screen compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VP17(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 if $G(msg) do {
 	type String X,x,HDG
 	//MSG 6066: Modify payment messages?
 	set HDG=$$^MSG(6066)                  // Modify payment messages?
 	set x=$$YN^DBSMBAR("ENT,PUP,PDN,ESC",HDG,1)
 	if 'x do GOTO^DBSMACRO("NEXT")
 	}
 quit 

VP18(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR) //
 quit:X="" 
 if X do {
 	do MSG
 	do VDA do ^DBSPNT(13)
 	}
 quit 

MSG	//
 //type String (%LIBS,%O,fEFTPAY,fEFTMSG,CID,SEQ,MSG,VFMQ,savpay,savmsg,UX)
 set savpay=fEFTPAY set savmsg=fEFTMSG
 set MSG=1
 do INIT^%ZM()
  // ??*** Review calls to USID ***  set SID="EFTMSG" do ^USID
 if $L(PGM) do ^@PGM
 if VFMQ="Q" set fEFTPAY=savpay,fEFTMSG=savmsg
 quit 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEFTPAY fEFTPAY
 type Public RecordDEP DEP
 type Public RecordCIF CIF
 type Public RecordCUVAR fCUVAR
 do VPR(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 do VDA1(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 do ^DBSPNT()
 quit

VW(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)
 do VDA1(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)
 do VDA1(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEFTPAY fEFTPAY
 type Public RecordDEP DEP
 type Public RecordCIF CIF
 type Public RecordCUVAR fCUVAR
 do VDA1(.fEFTPAY,.DEP,.CIF,.fCUVAR)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordEFTPAY fEFTPAY
 if sn="EFTPAY" do vSET1(.fEFTPAY,di,X)
 type Public RecordDEP DEP
 if sn="DEP" do vSET2(.DEP,di,X)
 type Public RecordCIF CIF
 if sn="CIF" do vSET3(.CIF,di,X)
 type Public RecordCUVAR fCUVAR
 if sn="CUVAR" do vSET4(.fCUVAR,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordEFTPAY fEFTPAY,di,X)
 do fEFTPAY.setAuditFlag(1)
 set fEFTPAY.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordDEP DEP,di,X)
 do DEP.setAuditFlag(1)
 set DEP.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET3(RecordCIF CIF,di,X)
 do CIF.setAuditFlag(1)
 set CIF.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET4(RecordCUVAR fCUVAR,di,X)
 do fCUVAR.setAuditFlag(1)
 set fCUVAR.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordEFTPAY fEFTPAY
 if fid="EFTPAY" quit $$vREAD1(.fEFTPAY,di)
 type Public RecordDEP DEP
 if fid="DEP" quit $$vREAD2(.DEP,di)
 type Public RecordCIF CIF
 if fid="CIF" quit $$vREAD3(.CIF,di)
 type Public RecordCUVAR fCUVAR
 if fid="CUVAR" quit $$vREAD4(.fCUVAR,di)
 quit ""
vREAD1(RecordEFTPAY fEFTPAY,di)
 quit fEFTPAY.@di
vREAD2(RecordDEP DEP,di)
 quit DEP.@di
vREAD3(RecordCIF CIF,di)
 quit CIF.@di
vREAD4(RecordCUVAR fCUVAR,di)
 quit fCUVAR.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordEFTPAY fEFTPAY,RecordDEP DEP,RecordCIF CIF,RecordCUVAR fCUVAR)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type RecordCTBLEFTTYPE ctblefttype=Db.getRecord("CTBLEFTTYPE","KEY=:SRC")
 set SRC1=ctblefttype.stbleft
 quit 
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
