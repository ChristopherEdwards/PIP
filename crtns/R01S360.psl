R01S360	// SCA376 - FDIC Schedule RC-N Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DTL,TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DTL="N"
	type String VIN1=$$KEY^DBSREP("LNFDN","",1,"D")

	set RID="SCA376"
	set RN="FDIC Schedule RC-N Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DTL")="|1|||||||L|Print Detail|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNFDN]TJD|[LNFDN]TJD:DISTINCT||if X set TJD=$$FDAT^%ZM(X) D EXT^DBSQRY||T|System Date|||||"

	set %READ="IO/REQ,VIN1#0,DTL#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DTL,TJD
	type public Number DTL
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,DESC1,DESC2,DESC3,DESC4,RID,RN,VL,VLOF,VRF(),VSTATS(),ZAMT0,ZAMT1,ZAMT2,ZAMT3,ZHD1,ZHD2,ZLN(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA376",RN="FDIC Schedule RC-N Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA376","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=57				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[LNFDN]BALCUR#60#12,[LNFDN]BAL3090#77#12,[LNFDN]BAL90#92#12,[LNFDN]BALNACR#107#12,[LNFDN]CID#121#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNFDN]TJD "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNFDN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"System Date"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="FDIC Schedule RC-N Report"
		set VBNRINFO("PGM")="R01S360"
		set VBNRINFO("RID")="SCA376"
		set VBNRINFO("TABLES")="LNFDN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,LNFDN]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,LNFDN]RCNL"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,LNFDN]CID"

		set VBNRINFO("DOC",1)="/*"
		set VBNRINFO("DOC",2)="  ---------- Revision History --------------------------------------------"
		set VBNRINFO("DOC",3)=""
		set VBNRINFO("DOC",4)="     09/25/05 - SWARNALP - 16708"
		set VBNRINFO("DOC",5)="                Converted to PSL   "
		set VBNRINFO("DOC",6)="   "
		set VBNRINFO("DOC",7)="  ------------------------------------------------------------------------"
		set VBNRINFO("DOC",8)="*/"

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNFDN.TJD,LNFDN.RCNL,LNFDN.CID,LNFDN.BALCUR,LNFDN."
	set VSELECT=VSELECT_"BAL3090,LNFDN.BAL90,LNFDN.BALNACR"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNFDN",VWHERE,"LNFDN.TJD,LNFDN.RCNL,LNFDN.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// LNFDN.TJD
	set vc2=V.piece($C(9),2)			// LNFDN.RCNL
	set vc3=V.piece($C(9),3)			// LNFDN.CID
	set vc4=V.piece($C(9),4)			// LNFDN.BALCUR
	set vc5=V.piece($C(9),5)			// LNFDN.BAL3090
	set vc6=V.piece($C(9),6)			// LNFDN.BAL90
	set vc7=V.piece($C(9),7)			// LNFDN.BALNACR
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public Boolean DTL
 type Public String ZHD1,ZHD2,ZLN()

 set ZHD1="",ZHD2="" 

 if DTL.get() set ZHD1="Account",ZHD2="Number"

 set ZLN(1)="Loans Secured By Real Estate|"_$CHAR(1)_"|"
 set ZLN(1)=ZLN(1)_"   Construction, Land Dev. and Land Loans|2759,2769,3492"

 set ZLN(2)="   Secured by Farmland|3493,3494,3495"

 set ZLN(3)="   Secured by 1-4 Family Residential Properties|"_$CHAR(1)_"|"
 set ZLN(3)=ZLN(3)_"      Revolving, Open-end Loans Secured by 1-4 Family|5398,5399,5400"

 set ZLN(4)="      Closed-end Loans Secured by 1-4 Family Res.Properties.|"_$CHAR(1)_"|"
 set ZLN(4)=ZLN(4)_"          Secured by first liens|C236,C237,C229"

 set ZLN(5)="          Secured by junior liens|C238,C239,C230"
 set ZLN(6)="      Multifamily (5 or more) Residential Properties|3499,3500,3501"
 set ZLN(7)="      Secured by Nonfarm Nonresidential Properties|3502,3503,3504"
 set ZLN(8)="Depository Institutions: Loans & Acceptances|B834,B835,B836"
 set ZLN(9)="Commercial & Industrial Loans|1606,1607,1608"

 set ZLN(10)="Loans To Individuals For Household, Family & Personal|"_$CHAR(1)_"|"
 set ZLN(10)=ZLN(10)_"    Credit Cards|B575,B576,B577"

 set ZLN(11)="    Other Consumer Loans & Other Revolving Credit Plans|B578,B579,B580" 
 set ZLN(12)="Loans to Foreign Governments and Official Institutions|5389,5390,5391"
 set ZLN(13)="All Other Loans|5459,5460,5461" 
 set ZLN(14)="Lease Financing Receivables|1226,1227,1228" 

 set ZLN(15)="MEMORANDA|"_$CHAR(1)_"|"
 set ZLN(15)=ZLN(15)_"Restructured Loans and Leases|1658,1659,1661"

 set ZLN(16)="Commercial Real estate, Construction, and|"_$CHAR(1)_"|"
 set ZLN(16)=ZLN(16)_"Land Development (not secured by real estate)|6558,6559,6560"

 set ZLN(17)="Loans Secured by Real Estate to Non-US Addressees|1248,1249,1250"
 set ZLN(18)="Loans to and Acceptances from Foreign Banks|5380,5381,5382" 
 set ZLN(19)="Commercial & Industrial Loans to Non-US Addressees|1254,1255,1256" 
 set ZLN(20)="Lease Financing Receivables of Non-US Addressees|1271,1272,1791" 
 set ZLN(21)="Loans To Finance Agriculture & Other Loans To Farmers|1594,1597,1583" 
 set ZLN(22)="Loans and Leases Held for Sale|C240,C241,C226"
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=DTL,TJD
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(3)=VT(3)+1
	quit

VDTL2	// Detail
	type public String %TIM,DESC1,DESC2,DESC3,DESC4,DTL,IOSL,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZAMT0,ZAMT1,ZAMT2,ZAMT3,ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC1,1,55) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC2,1,55)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC3,1,55)
	set VL=VL_$J("",59-VL.length())_$J($FN(ZAMT0,",",0),12)
	set VL=VL_$J("",76-VL.length())_$J($FN(ZAMT1,",",0),12)
	set VL=VL_$J("",91-VL.length())_$J($FN(ZAMT2,",",0),12)
	set VL=VL_$J("",106-VL.length())_$J($FN(ZAMT3,",",0),12)
	do VOM
	set VL="                                       "_$E(DESC4,1,14)
	do VOM
	quit

VDTL3	// Detail
	type public String %TIM,DESC1,DESC2,DESC3,DESC4,DTL,IOSL,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZAMT0,ZAMT1,ZAMT2,ZAMT3,ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                                                           "_$J($FN(vc4,",",0),12)
	set VL=VL_$J("",76-VL.length())_$J($FN(vc5,",",0),12)
	set VL=VL_$J("",91-VL.length())_$J($FN(vc6,",",0),12)
	set VL=VL_$J("",106-VL.length())_$J($FN(vc7,",",0),12)
	set V=vc3,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,12)
	set VL=VL_$J("",120-VL.length())_V		// [SYSDEV,LNFDN]CID
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DESC1,DESC2,DESC3,DESC4,DTL,RID,RN,TJD,VL,ZAMT0,ZAMT1,ZAMT2,ZAMT3,ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",48-VL.length())_"(Billion, Million, Thousand)                     System Date:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="                                                                          "_"Accruing Loan    Accruing Loan"
	do VOM
	set VL="                                                "_"RCON                      30 to 89 Days   90 Days Or More"
	set VL=VL_$J("",124-VL.length())_$E(ZHD1,1,7)
	do VOM
	set VL="                                               "_"Number           Current     Past Due         Past Due      Non-Accrual"
	set VL=VL_$J("",125-VL.length())_$E(ZHD2,1,6)
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC1

	type public String vc2
 type Public Date TJD
 type Public Number ZAMT0,ZAMT1,ZAMT2,ZAMT3
 type Public String DESC1,DESC2,DESC3,DESC4,RCNL,ZLN()

 type Number L
 type String X

 set RCNL=vc2
 type RecordLNFDN1 lnfdn1=Db.getRecord("LNFDN1","TJD=:TJD,RCNL=:RCNL")

 set ZAMT0=lnfdn1.tbalcur
 set ZAMT1=lnfdn1.tbal3090
 set ZAMT2=lnfdn1.tbal90
 set ZAMT3=lnfdn1.tbalnacr

 set X=ZLN(RCNL).get()

 set L=X.length("|"),X="|||||".extract(1,4-L)_X
 set DESC1=X.piece("|",1)
 set DESC2=X.piece("|",2)
 set DESC3=X.piece("|",3)
 set DESC4=X.piece("|",4)
	quit

VP2	// Column pre-processor - [SYSDEV,LNFDN]CID

	type public String vc3
 type Public Boolean DTL
 type Public String V,VL

 if 'DTL!(vc3=0) set (V,VL)=""
	quit
