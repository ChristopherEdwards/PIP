V01S581(%ProcessMode,RecordTRN %A)   // -  - SID= <TRN3L> Tran Code Processing Control Flags 
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:53 - shetyes
 // This screen only displays if the transaction class associated with the
 // transaction code on the request screen is L (loan).
 // 
 // This screen indicates whether (Y) or not (N) the system includes the processing
 // linked to specific loan processing control flags when posting transactions
 // with the associated transaction code.  These flags are set by Sanchez at
 // the time of installation and upgrade for the standard set of transaction codes.
 // 
 // The institution may change the values of the following loan flags without
 // affecting the standard processing associated with a transaction code.  However,
 // if the institution modifies the settings of any other processing control flags,
 // the system may not produce the appropriate processing results for a specified
 // transaction.
 // 
 // *  Include in Periodic APR Statement Calculations
 // *  Prompt for Budget Code (if appropriate for loan)
 // 
 // For further information, refer to the "Transaction Code Maintenance Reference
 // Manual."
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="TRN3L",VPGM=$T(+0),VSNAME="Tran Code Processing Control Flags "
 set VFSN("TRN")="zA"
 set vPSL=1
 set KEYS(1)=%A.ETC
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.%A),VDA1(.%A),^DBSPNT()

 if '%ProcessMode do VNEW(.%A),VPR(.%A),VDA1(.%A)
 if %ProcessMode do VLOD(.%A) quit:$G(ER)  do VPR(.%A),VDA1(.%A)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.%A)
	quit


VNEW(RecordTRN %A) // Initialize arrays if %O=0
 
 do VDEF(.%A)
 do VLOD(.%A)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordTRN %A)
 if %A.PCFD32="" set %A.PCFD32=0
 if %A.PCFD33="" set %A.PCFD33=0
 if %A.STPNT="" set %A.STPNT=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordTRN %A) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordTRN %A) // Display screen prompts
 set VO="36||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,7,17,0,0,0,0,0,0,0)_"01TTransaction Code:"
 set VO(2)=$C(1,63,6,0,0,0,0,0,0,0)_"01TClass:"
 set VO(3)=$C(2,12,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(4)=$C(2,63,6,0,0,0,0,0,0,0)_"01TGroup:"
 set VO(5)=$C(3,1,23,0,0,0,0,0,0,0)_"01TPosting Action Control:"
 set VO(6)=$C(5,8,25,2,0,0,0,0,0,0)_"01TProcessing Control Flags "
 set VO(7)=$C(5,60,15,2,0,0,0,0,0,0)_"01TConsiderations "
 set VO(8)=$C(7,1,3,0,0,0,0,0,0,0)_"01T11 "
 set VO(9)=$C(7,8,25,0,0,0,0,0,0,0)_"01TAffect Escrow Remittance "
 set VO(10)=$C(7,60,19,0,0,0,0,0,0,0)_"01TEscrow Withdrawals "
 set VO(11)=$C(8,1,3,0,0,0,0,0,0,0)_"01T12 "
 set VO(12)=$C(8,8,26,0,0,0,0,0,0,0)_"01TUpdate Principal Variance "
 set VO(13)=$C(8,60,16,0,0,0,0,0,0,0)_"01TPrin Only Codes "
 set VO(14)=$C(9,1,3,0,0,0,0,0,0,0)_"01T13 "
 set VO(15)=$C(9,8,27,0,0,0,0,0,0,0)_"01TUpdate Interest Adjustment "
 set VO(16)=$C(9,60,16,0,0,0,0,0,0,0)_"01TPrincipal Codes "
 set VO(17)=$C(10,1,3,0,0,0,0,0,0,0)_"01T14 "
 set VO(18)=$C(10,8,66,0,0,0,0,0,0,0)_"01TApply to Single Payment Element                     Payment Codes "
 set VO(19)=$C(11,1,3,0,0,0,0,0,0,0)_"01T15 "
 set VO(20)=$C(11,8,46,0,0,0,0,0,0,0)_"01TCollect Interest to Extent of Accrual Balance "
 set VO(21)=$C(11,60,15,0,0,0,0,0,0,0)_"01TInt Only Codes "
 set VO(22)=$C(12,1,4,0,0,0,0,0,0,0)_"01T16  "
 set VO(23)=$C(12,8,49,0,0,0,0,0,0,0)_"01TIncrease Capped & Decrease Uncapped Deferred Int "
 set VO(24)=$C(12,60,19,0,0,0,0,0,0,0)_"01TInt Adj & Prin Inc "
 set VO(25)=$C(13,1,3,0,0,0,0,0,0,0)_"01T17 "
 set VO(26)=$C(13,8,35,0,0,0,0,0,0,0)_"01TForce Vertical Payment Application "
 set VO(27)=$C(13,60,14,0,0,0,0,0,0,0)_"01TPayment Codes "
 set VO(28)=$C(14,1,3,0,0,0,0,0,0,0)_"01T18 "
 set VO(29)=$C(14,8,31,0,0,0,0,0,0,0)_"01TAffect Unapplied Funds Balance "
 set VO(30)=$C(14,60,14,0,0,0,0,0,0,0)_"01TPayment Codes "
 set VO(31)=$C(15,1,4,0,0,0,0,0,0,0)_"01T19  "
 set VO(32)=$C(15,8,47,0,0,0,0,0,0,0)_"01TInclude in Periodic APR Statement Calculations "
 set VO(33)=$C(15,60,10,0,0,0,0,0,0,0)_"01TLoan Fees "
 set VO(34)=$C(16,1,4,0,0,0,0,0,0,0)_"01T20  "
 set VO(35)=$C(16,8,28,0,0,0,0,0,0,0)_"01TIgnore Interest Paid Fields "
 set VO(36)=$C(16,60,17,0,0,0,0,0,0,0)_"01TInterest Portion "
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordTRN %A)  // Display screen data
 new V
 //
 set VO="51|37|13|"
 set VO(37)=$C(1,25,12,2,0,0,0,0,0,0)_"01T"_$E(%A.ETC,1,12)
 set VO(38)=$C(1,70,1,2,0,0,0,0,0,0)_"01T"_$E(%A.CLS,1,1)
 set VO(39)=$C(2,25,35,2,0,0,0,0,0,0)_"01T"_$E(%A.DES,1,35)
 set VO(40)=$C(2,70,6,2,0,0,0,0,0,0)_"01T"_$E(%A.GRP,1,6)
 set VO(41)=$C(3,25,40,2,0,0,0,0,0,0)_"00T"_$E(%A.PAC,1,40)
 set VO(42)=$C(7,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL11:"Y",1:"N")
 set VO(43)=$C(8,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL12:"Y",1:"N")
 set VO(44)=$C(9,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL13:"Y",1:"N")
 set VO(45)=$C(10,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL14:"Y",1:"N")
 set VO(46)=$C(11,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL15:"Y",1:"N")
 set VO(47)=$C(12,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL16:"Y",1:"N")
 set VO(48)=$C(13,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL17:"Y",1:"N")
 set VO(49)=$C(14,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL18:"Y",1:"N")
 set VO(50)=$C(15,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL19:"Y",1:"N")
 set VO(51)=$C(16,5,1,2,0,0,0,0,0,0)_"00L"_$S(%A.PCFL20:"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordTRN %A)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=15,VPT=1,VPB=16,PGM=$T(+0),DLIB="SYSDEV",DFID="TRN"
 set OLNTB=16060
 
 set VFSN("TRN")="zA"
 //
 // 
	
	
 set %TAB(1)=$C(0,24,12)_"20T12401|1|[TRN]ETC"
 set %TAB(2)=$C(0,69,1)_"21T12403|1|[TRN]CLS|[STBLTRNCLS]"
 set %TAB(3)=$C(1,24,35)_"21T12406|1|[TRN]DES"
 set %TAB(4)=$C(1,69,6)_"21T12404|1|[TRN]GRP|[STBLLIBS]"
 set %TAB(5)=$C(2,24,40)_"00T12421|1|[TRN]PAC"
 set %TAB(6)=$C(6,4,1)_"00L12411|1|[TRN]PCFL11"
 set %TAB(7)=$C(7,4,1)_"00L12412|1|[TRN]PCFL12"
 set %TAB(8)=$C(8,4,1)_"00L12413|1|[TRN]PCFL13"
 set %TAB(9)=$C(9,4,1)_"00L12414|1|[TRN]PCFL14"
 set %TAB(10)=$C(10,4,1)_"00L12415|1|[TRN]PCFL15"
 set %TAB(11)=$C(11,4,1)_"00L12416|1|[TRN]PCFL16"
 set %TAB(12)=$C(12,4,1)_"00L12417|1|[TRN]PCFL17"
 set %TAB(13)=$C(13,4,1)_"00L12418|1|[TRN]PCFL18"
 set %TAB(14)=$C(14,4,1)_"00L12419|1|[TRN]PCFL19"
 set %TAB(15)=$C(15,4,1)_"00L12420|1|[TRN]PCFL20"
 do VTBL(.%A)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordTRN %A) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordTRN %A
 do VPR(.%A)
 do VDA1(.%A)
 do ^DBSPNT()
 quit

VW(RecordTRN %A)
 do VDA1(.%A)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordTRN %A)
 do VDA1(.%A)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordTRN %A
 do VDA1(.%A)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordTRN %A
 if sn="TRN" do vSET1(.%A,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordTRN %A,di,X)
 do %A.setAuditFlag(1)
 set %A.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordTRN %A
 if fid="TRN" quit $$vREAD1(.%A,di)
 quit ""
vREAD1(RecordTRN %A,di)
 quit %A.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
