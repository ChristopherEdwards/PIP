R01S113	// SCA042B - Escrow Analysis Previous Projection Stmt
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:41 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String ESC,NM(),PCNT,PGN
	type String CO
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA042B"
	set RN="Escrow Analysis Previous Projection Stmt"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[LNESTMT3]ANDT|[LNESTMT3]ANDT:DISTINCT:NOVAL||D EXT^DBSQRY||T|Analysis Date/From Date|||||"
	set %TAB("VIN2")="|255||[LNESTMT3]LCID|[LNESTMT3]LCID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Loan Account|||||"
	set %TAB("VIN3")="|255||[LNESTMT3]ECID|[LNESTMT3]ECID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Escrow Account|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String ESC,NM(),PCNT,PGN
	type public String CO
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,ADJEPMT,BEGBAL,CONAM,COURTMSG,INIDEP,MSG(),MSG1,MSG2,MSG3,MSG4,MSG5,MSG6,MSG7,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA042B",RN="Escrow Analysis Previous Projection Stmt"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA042B","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[LNESTMT3]ACTJD#4#10,[LNESTMT3]ESCPMT#15#10,[LNESTMT3]REMANT#29#10,[LNESTMT3]BAL#43#10,[LNESTMT3]DESC#57#20"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[LNESTMT3]ANDT "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[LNESTMT3]LCID "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[LNESTMT3]ECID "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("LNESTMT3,LNESTMT2,LNESTMT") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"LNESTMT3.ANDT,LNESTMT3.LCID,LNESTMT3.ECID,LNESTMT3"
	set VSELECT=VSELECT_".ACTJD,LNESTMT3.ESCPMT,LNESTMT3.REMANT,LNESTMT3.BA"
	set VSELECT=VSELECT_"L,LNESTMT3.DESC,LNESTMT.LCID,LNESTMT.ANDT,LNESTMT."
	set VSELECT=VSELECT_"THRUDT,LNESTMT.PMT,LNESTMT.PMTPI,LNESTMT.PMTTRS,LN"
	set VSELECT=VSELECT_"ESTMT2.INIDEP,LNESTMT2.BEGBAL,LNESTMT2.ADJEPMT,LNE"
	set VSELECT=VSELECT_"STMT2.OVG,LNESTMT2.SHT,LNESTMT2.DEF,LNESTMT2.ODM,L"
	set VSELECT=VSELECT_"NESTMT2.SDM,LNESTMT2.DDM"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"LNESTMT3,LNESTMT2,LNESTMT",VWHERE,"LNESTMT3.ANDT,LNESTMT3.LCID,LNESTMT3.ECID,LNESTMT3.ACTJD","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// LNESTMT3.ANDT
	set vc2=V.piece($C(9),2)			// LNESTMT3.LCID
	set vc3=V.piece($C(9),3)			// LNESTMT3.ECID
	set vc4=V.piece($C(9),4)			// LNESTMT3.ACTJD
	set vc5=V.piece($C(9),5)			// LNESTMT3.ESCPMT
	set vc6=V.piece($C(9),6)			// LNESTMT3.REMANT
	set vc7=V.piece($C(9),7)			// LNESTMT3.BAL
	set vc8=V.piece($C(9),8)			// LNESTMT3.DESC
	set vc9=V.piece($C(9),9)			// LNESTMT.LCID
	set vc10=V.piece($C(9),10)			// LNESTMT.ANDT
	set vc11=V.piece($C(9),11)			// LNESTMT.THRUDT
	set vc12=V.piece($C(9),12)			// LNESTMT.PMT
	set vc13=V.piece($C(9),13)			// LNESTMT.PMTPI
	set vc14=V.piece($C(9),14)			// LNESTMT.PMTTRS
	set vc15=V.piece($C(9),15)			// LNESTMT2.INIDEP
	set vc16=V.piece($C(9),16)			// LNESTMT2.BEGBAL
	set vc17=V.piece($C(9),17)			// LNESTMT2.ADJEPMT
	set vc18=V.piece($C(9),18)			// LNESTMT2.OVG
	set vc19=V.piece($C(9),19)			// LNESTMT2.SHT
	set vc20=V.piece($C(9),20)			// LNESTMT2.DEF
	set vc21=V.piece($C(9),21)			// LNESTMT2.ODM
	set vc22=V.piece($C(9),22)			// LNESTMT2.SDM
	set vc23=V.piece($C(9),23)			// LNESTMT2.DDM
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public String MSG()
 set MSG(8501)=$$^MSG(8501)
 set MSG(8500)=$$^MSG(8500)
 set MSG(8538)=$$^MSG(8538)
 set MSG(8539)=$$^MSG(8539)
 set MSG(8536)=$$^MSG(8536)
 set MSG(8537)=$$^MSG(8537)
 set MSG(8529)=$$^MSG(8529)
 set MSG(8530)=$$^MSG(8530)
 set MSG(8526)=$$^MSG(8526)
 set MSG(8506)=$$^MSG(8506)
 set MSG(8514)=$$^MSG(8514)
 set MSG(8524)=$$^MSG(8524)
 set MSG(8518)=$$^MSG(8518)
 set MSG(8543)=$$^MSG(8543)

 do ADDRESS^DEPDBS
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=ESC,NM(),PGN,PCNT
 type public String CO
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do VSUM2 quit:VFMQ  do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL2	// Detail
	type public String ADJEPMT,BEGBAL,CO,COURTMSG,ESC,INIDEP,IOSL,MSG(),MSG1,MSG2,MSG3,MSG4,MSG5,MSG6,MSG7,NM(),PCNT,PGN,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+18>IOSL do VHDG0 quit:VFMQ

	set VL="     "_$E(NM(1),1,40)
	set VL=VL_$J("",47-VL.length())_"Loan Account: "
	set V=vc9,VO=V set V=$J(V,12) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",63-VL.length())_V		// [SYSDEV,LNESTMT]LCID
	do VOM
	set VL="     "_$E(NM(2),1,40)
	set VL=VL_$J("",47-VL.length())_"Escrow Account: "
	set VL=VL_$J("",63-VL.length())_$E(ESC,1,10)
	do VOM
	set VL="     "_$E(NM(3),1,40)
	do VOM
	set VL="     "_$E(NM(4),1,40)
	do VOM
	set VL="     "_$E(NM(5),1,40)
	do VOM
	set VL="" do VOM
	set VL="              "_"Account Projection For:"
	set VL=VL_$J("",38-VL.length())_$J($$DAT^%ZM(vc10),10)
	set VL=VL_$J("",51-VL.length())_"to "
	set VL=VL_$J("",54-VL.length())_$J($$DAT^%ZM(vc11),10)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"Mortgage Payment:"
	set VL=VL_$J("",21-VL.length())_"$"
	set VL=VL_$J("",23-VL.length())_$FN(vc12,",",2)_$J("",10-$L($FN(vc12,",",2)))
	set VL=VL_$J("",34-VL.length())_"Principal & Interest: $"
	set VL=VL_$J("",58-VL.length())_$J($FN(vc13,",",2),9)
	do VOM
	set VL="                                                "_"Escrow:"
	set VL=VL_$J("",56-VL.length())_"$"
	set VL=VL_$J("",58-VL.length())_$J($FN(vc14,",",2),9)
	do VOM
	set VL="" do VOM
	set VL="   "_"Starting Balance: $ "
	set VL=VL_$J("",24-VL.length())_$J($FN(vc15,",",2),8)
	do VOM
	set VL="" do VOM
	set VL="                 "_"Escrow"
	set VL=VL_$J("",46-VL.length())_"Ending"
	set VL=VL_$J("",56-VL.length())_"Remittance"
	do VOM
	set VL="   "_"Date"
	set VL=VL_$J("",17-VL.length())_"Payment"
	set VL=VL_$J("",28-VL.length())_"Remittance"
	set VL=VL_$J("",45-VL.length())_"Balance"
	set VL=VL_$J("",56-VL.length())_"Description"
	do VOM
	set VL="   "_"================================================================================"
	do VOM
	set VL="" do VOM
	quit

VSUM2	// Summary
	type public String ADJEPMT,BEGBAL,CO,COURTMSG,ESC,I,INIDEP,IOSL,MSG(),MSG1,MSG2,MSG3,MSG4,MSG5,MSG6,MSG7,NM(),PCNT,PGN,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4

	if 'VT(2) quit
	if VLC+13>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="   "_"Your escrow starting balance should have been: "
	set VL=VL_$J("",52-VL.length())_"$"
	set VL=VL_$J("",54-VL.length())_$J($FN(vc15,",",2),9)
	do VOM
	set VL="   "_"Your escrow starting balance actually was:"
	set VL=VL_$J("",52-VL.length())_"$"
	set VL=VL_$J("",54-VL.length())_$J($FN(vc16,",",2),9)
	do VOM
	set VL="" do VOM
	set VL="   "_$E(MSG1,1,70)
	do VOM
	set VL="   "_$E(MSG2,1,70)
	do VOM
	set VL="   "_$E(MSG3,1,70)
	do VOM
	set VL="   "_$E(MSG4,1,70)
	do VOM
	set VL="" do VOM
	set VL="   "_$E(MSG5,1,70)
	do VOM
	set VL="   "_$E(MSG6,1,70)
	do VOM
	set VL="" do VOM
	set VL="   "_$E(MSG7,1,50)
	set VL=VL_$J("",54-VL.length())_$S(+vc17=0:$J("",9),1:$J($FN(vc17,",",2),9))
	do VOM
	quit

VDTL4	// Detail
	type public String ADJEPMT,BEGBAL,CO,COURTMSG,ESC,INIDEP,IOSL,MSG(),MSG1,MSG2,MSG3,MSG4,MSG5,MSG6,MSG7,NM(),PCNT,PGN,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="   "_$J($$DAT^%ZM(vc4),10)
	set VL=VL_$J("",14-VL.length())_$S(+vc5=0:$J("",10),1:$J($FN(vc5,",",2),10))
	set VL=VL_$J("",28-VL.length())_$S(+vc6=0:$J("",10),1:$J($FN(vc6,",",2),10))
	set VL=VL_$J("",42-VL.length())_$S(+vc7=0:$J("",10),1:$J($FN(vc7,",",2),10))
	set VL=VL_$J("",56-VL.length())_$E(vc8,1,20)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,ADJEPMT,BEGBAL,CO,CONAM,COURTMSG,ESC,INIDEP,MSG(),MSG1,MSG2,MSG3,MSG4,MSG5,MSG6,MSG7,NM(),PCNT,PGN,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+20,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                                                                  "_"Page: "
	do VP2 quit:VFMQ!verror.get()  set V=$J(PGN,2) do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",72-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="                 "_"Escrow Analysis Previous Projection Statement"
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="     "_$E(CO(1),1,40)
	do VOM
	set VL="     "_$E(CO(2),1,60)
	do VOM
	set VL="     "_$E(CO(3),1,60)
	do VOM
	set VL="     "_$E(CO(4),1,60)
	do VOM
	set VL="     "_$E(CO(5),1,60)
	do VOM
	set VL="     "_$E(CO(6),1,60)
	do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(COURTMSG,1,50) set VL="     "_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,LNESTMT]LCID

	type public String vc18,vc19,vc20,vc21,vc22,vc23,vc17
 type public Number DEF,ODM,OVG,SHTG
 type public String DDM,MDDM,MODM,MSDM,MSG1,MSG2,MSG3,MSG4,MSG5,MSG6,MSG7,MSG(),SDM
 
 set OVG=vc18
 set OVG=OVG.roundDec(2)
 set SHTG=vc19      
 set SHTG=SHTG.roundDec(2)
 set DEF=vc20
 set DEF=DEF.roundDec(2)
  
 set ODM=vc21 do {
 if ODM=1 set MODM=MSG(8501)
 else  set MODM=MSG(8500) 
 }
 
 set SDM=vc22 do {   
 if SDM="SPD" set MSDM=MSG(8538)
 else  set MSDM=MSG(8539)
 }
 
 set DDM=vc23 do {
 if DDM="SPD" set MDDM=MSG(8536)
 else  set MDDM=MSG(8537)
 }
 
 set (MSG1,MSG2,MSG3,MSG4,MSG5,MSG6,MSG7)=""
 
 if vc17 do { 
 set MSG7=$$^MSG(8540)
 }
  
 if OVG do {
 set MSG1=$$^MSG(8534,OVG)
 set MSG2=MSG(8529)
 set MSG3=MSG(8530)
 set MSG4=MSG(8526)
 set MSG5=MODM
 }
 
 if SHTG,'DEF do {
 set MSG1=$$^MSG(8533,SHTG)
 set MSG2=MSG(8506)
 set MSG3=MSG(8514)
 set MSG4=MSG(8524)
 set MSG5=MSDM
 }
  
 if DEF do {
 set MSG1=$$^MSG(8532,SHTG)
 set MSG2=$$^MSG(8541,DEF)
 set MSG3=MSG(8518)
 set MSG4=MSG(8543)
 set MSG5=MSDM
 set MSG6=MDDM
 }

	quit

VP2	// Column pre-processor - Variable: PGN

 type Public Number PGN

 set PGN=PGN+1
	quit

VP3	// Column post-processor - Variable: PGN

 type Public Number PCNT

 set PCNT=PCNT+1
	quit

VP4	// Column pre-processor - Variable: COURTMSG

 type public String COURTMSG

 set COURTMSG=CUVAR.courtmsg

	quit
