R01S001	// SCA362 - Customer Deposit Account Listing
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:48 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String CLASS
	type String %MCP,CNVOPT,CUSTOMER
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String CNVOPT
	type Number DIRECT
	type Number OWNER
	type Number PRIMARY
	type Number VIN1=$G(ACN)
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"

	set RID="SCA362"
	set RN="Customer Deposit Account Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("CNVOPT")="|1|||[STBLCNVOPT]CNVOPT,DESC:DISTINCT||||T|Currency Conversion Option|||||"
	set %TAB("DIRECT")="|1|||||||L|Loans) Direct Liability Only|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("OWNER")="|1|||||||L|Deposits) Account Owners Only|||||"
	set %TAB("PRIMARY")="|1|||||||L|Primary Owner Only|||||"
	set %TAB("VIN1")="|12||[RELCIF]ACN|[RELCIF]ACN:DISTINCT:NOVAL||set CUST=X,%EXT=1 do ^UCIF if 'ER set CUST=X||N|Customer|||||"
	set %TAB("VIN2")="|255||[DEP]CLS|[STBLCLS]:NOVAL||set CLASS=X set:X=""ALL"" NI=NI+2 D EXT^DBSQRY||T|Product Class|||||"
	set %TAB("VIN3")="|255||[DEP]GRP|[DEP]GRP,DESC:DISTINCT:QU query||set GROUPSV=X set:X=""ALL"" NI=NI+1 D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN4")="|255||[DEP]TYPE|[DEP]TYPE:DISTINCT:QU query1||set TYPESV=X if GROUPSV'?1A.A set I(3)="""" D EXT^DBSQRY||T|Product Type|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,PRIMARY#0,DIRECT#0,OWNER#0,CNVOPT#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	// Conditionally suppress prompt for CNVOPT
	if '$G(%MCP) do {
		set %READ=","_%READ
		set %READ=%READ.piece(",CNVOPT#0,",1)_","_%READ.piece(",CNVOPT#0,",2)
		set %READ=%READ.piece(",",2,99)
		}

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=32
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String CLASS
	type public String %MCP,CNVOPT,CUSTOMER
	type public Number VIN1,PRIMARY,DIRECT,OWNER
	type public String VIN2,VIN3,VIN4,CNVOPT
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %MCP,%TIM,ACRTOT,AVLTOT,BALTOT,CIF(),CONAM,CUSTOMER,GROUPSV,GRP,OPT,RID,RN,TYPESV,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA362",RN="Customer Deposit Account Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA362","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[RELCIF]CID#1#12,[DEP]STAT#14#1,[DEP]ACNRELC#16#2,[RELCIF]ROLE2#19#3,[DEP]BAL#23#10,[DEP]BALAVL#35#10,[DEP]ACR#47#10,[DEP]TLD#59#10,[DEP]ODT#71#10,[DEP]RATS#82#3,[DEP]CRCD#86#3"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[RELCIF]ACN = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DEP]CLS "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]GRP "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DEP]TYPE "_VIN4,SEQ=SEQ+1
		set DQQRY(SEQ)="([DEP]CLS=""D"" & (<<PRIMARY>>=1)  & ([RELCIF]POI=1) & (<<OWNER>>'=1  OR (<<OWNER>>=1  & ([RELCIF]DOI=1)))) OR([DEP]CLS=""D"" & (<<PRIMARY>>'=1)                   & (<<OWNER>>'=1  OR (<<OWNER>>=1  & ([RELCIF]DOI=1)))) OR([DEP]CLS=""L"" & (<<PRIMARY>>=1)  & ([RELCIF]POI=1) & (<<DIRECT>>'=1 OR (<<DIRECT>>=1 & ([RELCIF]LDI=1)))) OR([DEP]CLS=""L"" & (<<PRIMARY>>'=1)                   & (<<DIRECT>>'=1 OR (<<DIRECT>>=1 & ([RELCIF]LDI=1))))",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("RELCIF,CIF,DEP") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"RELCIF.ACN,DEP.CLS,DEP.GRP,DEP.TYPE,RELCIF.CID,CIF"
	set VSELECT=VSELECT_".NAM,CIF.TAXID,DEP.STAT,DEP.ACNRELC,RELCIF.ROLE2,D"
	set VSELECT=VSELECT_"EP.BAL,DEP.BALAVL,DEP.ACR,DEP.TLD,DEP.ODT,DEP.RATS"
	set VSELECT=VSELECT_",DEP.CRCD,CIF.CRCD"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"RELCIF,CIF,DEP",VWHERE,"RELCIF.ACN,DEP.CLS,DEP.GRP,DEP.TYPE,RELCIF.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18
	set vc1=V.piece($C(9),1)			// RELCIF.ACN
	set vc2=V.piece($C(9),2)			// DEP.CLS
	set vc3=V.piece($C(9),3)			// DEP.GRP
	set vc4=V.piece($C(9),4)			// DEP.TYPE
	set vc5=V.piece($C(9),5)			// RELCIF.CID
	set vc6=V.piece($C(9),6)			// CIF.NAM
	set vc7=V.piece($C(9),7)			// CIF.TAXID
	set vc8=V.piece($C(9),8)			// DEP.STAT
	set vc9=V.piece($C(9),9)			// DEP.ACNRELC
	set vc10=V.piece($C(9),10)			// RELCIF.ROLE2
	set vc11=V.piece($C(9),11)			// DEP.BAL
	set vc12=V.piece($C(9),12)			// DEP.BALAVL
	set vc13=V.piece($C(9),13)			// DEP.ACR
	set vc14=V.piece($C(9),14)			// DEP.TLD
	set vc15=V.piece($C(9),15)			// DEP.ODT
	set vc16=V.piece($C(9),16)			// DEP.RATS
	set vc17=V.piece($C(9),17)			// DEP.CRCD
	set vc18=V.piece($C(9),18)			// CIF.CRCD
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Boolean ER
 type public String CLASS
 type Number ACRTOT,AVLTOT,BALTOT

 set (BALTOT,ACRTOT,AVLTOT)=0

 if CLASS="D"!(CLASS="ALL") quit
 do SCA362A
 set ER=1
	quit

VPREBQ	// Pre-processor (before query)

 type public Number CNVOPT,CUSTOMER
 type public String %MCP
 type String query,query1
 type Number ACRTOT,AVLTOT,BALTOT
 //Incoming=CLASS

 set (BALTOT,ACRTOT,AVLTOT)=0
 set CNVOPT=""
 set query="[DEP]CLS=<<CLASS>>"
 set query1="[DEP]CLS=<<CLASS>> AND [DEP]GRP=<<GROUPSV>>"

 type ResultSet rs=Db.select("ACN","RELCIF")
 while rs.next() do {
	set CUSTOMER=rs.getCol("ACN")
	}
 // Set up default for currency conversion option
 if %MCP.get() set CNVOPT=1

 set (BALTOT,ACRTOT,AVLTOT)=0
	quit

VRPOST	// Report post-processor

 type public String CLASS,VFMQ
 type Number VLC

 if CLASS="D" quit

SCA362A // Call to loan report SCA362A

 type public Number CIF(),CUSTOMER
 type public String CNVOPT,DIRECT,GROUPSV,%MCP,PRIMARY,OWNER,TYPESV
 type String INPUT,RID

 set INPUT=CUSTOMER_",L,"_GROUPSV.get()_","_TYPESV.get()
 set INPUT=INPUT_","_PRIMARY_","_DIRECT_","_OWNER
 if %MCP.get() set INPUT=INPUT_","_CNVOPT
 set RID="SCA362A"
 do ^URID,^@PGM

 type ResultSet rs=Db.select("NAM,XNAME,TAXID","CIF")
 while rs.next() do {
	set CIF(1)=rs.getCol("NAM")_"|"_rs.getCol("XNAME")
	set CIF(2)=rs.getCol("TAXID")
	}
 quit
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG6 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(+vovc1'=+vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1
	if vb4!(vovc3'=vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(+vovc4'=+vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VHDG6	// Group Header
	type public String %MCP,%MSKD,%TIM,ACRTOT,AVLTOT,BALTOT,CIF(),CLASS,CNVOPT,CONAM,CUSTOMER,DIRECT,ER,GROUPSV,GRP,IOSL,OPT,OWNER,PRIMARY,RID,RN,TYPESV,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:vh(6)  set vh(6)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$E(vc3,1,18)
	do VOM
	set VL="" do VOM
	quit

VDTL6	// Detail
	type public String %MCP,%TIM,ACRTOT,AVLTOT,BALTOT,CIF(),CLASS,CNVOPT,CUSTOMER,DIRECT,ER,GROUPSV,GRP,IOSL,OPT,OWNER,PRIMARY,TYPESV,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc5,12)
	set VL=VL_$J("",13-VL.length())_$J(vc8,1)
	set VL=VL_$J("",15-VL.length())_$E(vc9,1,2)
	set VL=VL_$J("",18-VL.length())_$E(vc10,1,3)
	set V=vc11,VO=V do VP1 quit:VFMQ!verror.get()  set V=$J(V,10,2)
	set VL=VL_$J("",22-VL.length())_V		// [SYSDEV,DEP]BAL
	set V=vc12,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,11,2)
	set VL=VL_$J("",33-VL.length())_V		// [SYSDEV,DEP]BALAVL
	set V=vc13,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,10,5)
	set VL=VL_$J("",46-VL.length())_V		// [SYSDEV,DEP]ACR
	set VL=VL_$J("",58-VL.length())_$J($$DAT^%ZM(vc14),10)
	set VL=VL_$J("",70-VL.length())_$J($$DAT^%ZM(vc15),10)
	set VL=VL_$J("",81-VL.length())_$E(vc16,1,3)
	set VL=VL_$J("",85-VL.length())_$E(vc17,1,3)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MCP,%MSKD,%TIM,ACRTOT,AVLTOT,BALTOT,CIF(),CLASS,CNVOPT,CONAM,CUSTOMER,DIRECT,GROUPSV,GRP,OPT,OWNER,PRIMARY,RID,RN,TYPESV,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+10,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,40)
	set VL=VL_$J("",47-VL.length())_"Run Date:"
	set VL=VL_$J("",57-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",49-VL.length())_"System:"
	set VL=VL_$J("",57-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Customer: "
	do VP4 quit:VFMQ!verror.get()  set V=$J(CUSTOMER,10)
	set VL=VL_$J("",10-VL.length())_V
	do VOM
	set VL="          "_$E(vc6,1,38)
	set VL=VL_$J("",56-VL.length())_"TIN/SIN: "
	set VL=VL_$J("",65-VL.length())_$E(vc7,1,11)
	do VOM
	set VL="" do VOM
	do VP5 quit:VFMQ!verror.get()  set V=$E(OPT,1,30) set VL=V
	do VOM
	set VL="" do VOM
	set VL="     "_"Account S Rel Rol   Balance   Available    Accrued    Last Trn    Opened    RPA Cur"
	do VOM
	set VL="========================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %MCP,%TIM,ACRTOT,AVLTOT,BALTOT,CIF(),CLASS,CNVOPT,CUSTOMER,DIRECT,ER,GROUPSV,GRP,OPT,OWNER,PRIMARY,TYPESV,VPN,vc3,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="Total Deposits"
	set VL=VL_$J("",21-VL.length())_$J(BALTOT,12,2)
	set V=$J(ACRTOT,12,2) do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",41-VL.length())_V
	do VOM
	set V=$J(AVLTOT,12,2) do VP7 quit:VFMQ!verror.get()  set VL="                                "_V
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,DEP]BAL

	type public String vc17,vc18
 type public Number BALTOT 
 type public String CNVOPT,%CRCD,%MCP,%MSKE,V
 type Number len
 type String BSE,SEC

 if '(%MCP.get())!('CNVOPT.get()) set BALTOT=0 quit

 set BSE=vc17
 set SEC=$S(CNVOPT=1:%CRCD,1:vc18)

 if '(BSE.length()) set BSE=%CRCD
 if '(SEC.length()) set SEC=%CRCD

 // accumulate total for this item
 if BSE=SEC set BALTOT=BALTOT+V quit

 //The following 2 lines and the line after the conversion are custom for
 //Investicni (and other European customers)
 
 set len=V.length()
 set V=V.piece(" ",V.length(" "))
 set V=V.translate(%MSKE,".")

 if %MSKE="" set %MSKE="."
 
 do CAMT^CRCDUTL(BSE,SEC,.V)

 set V=$J(V,0,2)
 
 set BALTOT=BALTOT+V

 //Totals for Non multi currency clients - DFM
 if '(%MCP.get()) set BALTOT=BALTOT+V
	quit

VP2	// Column pre-processor - [SYSDEV,DEP]BALAVL

	type public String vc17,vc18
 type public Number AVLTOT
 type public String CNVOPT,%CRCD,%MCP,%MSKE,V
 type Number len
 type String BSE,SEC

 if '(%MCP.get())!('CNVOPT.get()) set AVLTOT=0 quit

 set BSE=vc17
 set SEC=$S(CNVOPT=1:%CRCD,1:vc18)

 if '(BSE.length()) set BSE=%CRCD
 if '(SEC.length()) set SEC=%CRCD

 // accumulate total for this item
 if BSE=SEC set AVLTOT=AVLTOT+V quit

 //The following 2 lines and the line after the conversion are custom for
 //Investicni (and other European customers)
 
 set len=V.length()
 set V=V.piece(" ",V.length(" "))
 set V=V.translate(%MSKE,".")

 if %MSKE="" set %MSKE="."
 
 do CAMT^CRCDUTL(BSE,SEC,.V)

 set V=$J(V,0,2)
 
 set AVLTOT=AVLTOT+V
 quit

 // Totals for Non multi currency clients - DFM
 if '$G(%MCP) set AVLTOT=AVLTOT+V
	quit

VP3	// Column pre-processor - [SYSDEV,DEP]ACR

	type public String vc17,vc18
 type public Number ACRTOT
 type public String CNVOPT,%CRCD,%MCP,%MSKE,%MSKN,V
 type Number len   
 type String BSE,SEC

 if %MSKN.isNull() set %MSKN="."

 if %MSKE.extract()'=%MSKN.extract() set V=V.translate(%MSKN.extract(),%MSKE.extract())

 if '(%MCP.get())!('CNVOPT.get()) set ACRTOT=0 quit

 set BSE=vc17
 set SEC=$S(CNVOPT=1:%CRCD,1:vc18)

 if '(BSE.length()) set BSE=%CRCD
 if '(SEC.length()) set SEC=%CRCD

 // accumulate total for this item
 if BSE=SEC set ACRTOT=ACRTOT+V quit

 //The following 2 lines and the line after the conversion are custom for
 //Investicni (and other European customers)
 
 set len=V.length()
 set V=V.piece(" ",V.length(" "))
 set V=V.translate(%MSKE,".")

 if %MSKE="" set %MSKE="."
 
 do CAMT^CRCDUTL(BSE,SEC,.V)

 set V=$J(V,0,2)
 
 set ACRTOT=ACRTOT+V
 
 // Totals for Non multi currency clients - DFM
 if '(%MCP.get()) set ACRTOT=ACRTOT+V
	quit

VP4	// Column pre-processor - Variable: CUSTOMER

	type public Number CUST,CUSTOMER
	set CUSTOMER=CUST
	quit

VP5	// Column pre-processor - Variable: OPT

 type public String CIFCRCD,CNVOPT,OPT
 type public Number CUST,BALTOT,ACRTOT,AVLTOT

 set (BALTOT,ACRTOT,AVLTOT)=0

 if 'OPT.exists() set OPT=""

 if (CUVAR.%mcp)=0 set CNVOPT=0

 if CNVOPT.get()=0 set OPT=""

 type RecordCIF cif=Db.getRecord("CIF","ACN=:CUST",1)
 if cif.getMode() set CIFCRCD=cif.crcd

 // All amounts converted to ~p1
 if CNVOPT.get()=1 set OPT=$$^MSG(364,%CRCD)
 
 // All amounts converted to ~p1
 if CNVOPT=2 set OPT=$$^MSG(364,CIFCRCD)     
	quit

VP6	// Column post-processor - Variable: ACRTOT

 type public String CNVOPT,%MCP,V,VL

 if (%MCP.get()),'(CNVOPT.get()) set V="",VL=""
	quit

VP7	// Column post-processor - Variable: AVLTOT

 type public String CNVOPT,%MCP,V,VL

 if (%MCP.get()),'(CNVOPT.get()) set (VL,V)=""
	quit
