R01S591	// SCA663 - Travel Insurance Declaration Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 15:01 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date PEND=TJD.get()
	type Number VIN1
	type String VIN2
	type Date VIN3=TJD.get()

	set RID="SCA663"
	set RN="Travel Insurance Declaration Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("PEND")="|255|||||||D|To date|||||"
	set %TAB("VIN1")="|12||[INSREC]INSTYP|[UTBLINSTYP]:NOVAL||||N|Insurance Type is equal to|||||"
	set %TAB("VIN2")="|12||[INSREC]COCODE|[UTBLCO]:NOVAL||||T|Company Code is equal to|||||"
	set %TAB("VIN3")="|10||[INSREC]SOLDDATE|||||D|From date|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#1,VIN3#1,PEND#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD
	type public Date VIN3,PEND
	type public Number VIN1
	type public String VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,DURDAYS,NAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA663",RN="Travel Insurance Declaration Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA663","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[INSREC]POLNUM#1#12,[INSREC]TAC#53#2,[INSREC]NOACOV#62#2,[INSREC]NCCOV#69#2,[INSREC]SDATE#76#10,[INSREC]HOLDAY#100#1,[INSREC]SDUTY#105#6,[INSREC]TTPREM#113#18"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(),VWHERE

		set VBNRINFO("PROMPTS",1)="WC1|"_"Insurance Type is equal to"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC1|"_"Company Code is equal to"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC1|"_"From date"_"|VIN3|"_$$DAT^%ZM(VIN3.get(),%MSKD)

		set VWHERE=""
		set VWHERE=VWHERE_"INSREC.INSTYP=:VIN1 AND INSREC.COCODE=:VIN2 AND IN"
		set VWHERE=VWHERE_"SREC.SOLDDATE NOT <:VIN3 AND INSREC.SOLDDATE NOT >"
		set VWHERE=VWHERE_":PEND"

		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Travel Insurance Declaration Report"
		set VBNRINFO("PGM")="R01S591"
		set VBNRINFO("RID")="SCA663"
		set VBNRINFO("TABLES")="INSREC"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,INSREC]ACN"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,INSREC]100"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,INSREC]INSTYP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,INSREC]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("INSREC.ACN,INSREC.INSTYP,INSREC.SEQ,INSREC.COCODE,INSREC.TTPREM,INSREC.POLNUM,INSREC.TAC,INSREC.NOACOV,INSREC.NCCOV,INSREC.SDATE,INSREC.HOLDAY,INSREC.SDUTY,INSREC.DTERM","INSREC","INSREC.INSTYP=:VIN1 AND INSREC.COCODE=:VIN2 AND INSREC.SOLDDATE NOT <:VIN3 AND INSREC.SOLDDATE NOT >:PEND","INSREC.ACN,INSREC.INSTYP,INSREC.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13
	set vc1=V.piece($C(9),1)			// INSREC.ACN
	set vc2=V.piece($C(9),2)			// INSREC.INSTYP
	set vc3=V.piece($C(9),3)			// INSREC.SEQ
	set vc4=V.piece($C(9),4)			// INSREC.COCODE
	set vc5=V.piece($C(9),5)			// INSREC.TTPREM
	set vc6=V.piece($C(9),6)			// INSREC.POLNUM
	set vc7=V.piece($C(9),7)			// INSREC.TAC
	set vc8=V.piece($C(9),8)			// INSREC.NOACOV
	set vc9=V.piece($C(9),9)			// INSREC.NCCOV
	set vc10=V.piece($C(9),10)			// INSREC.SDATE
	set vc11=V.piece($C(9),11)			// INSREC.HOLDAY
	set vc12=V.piece($C(9),12)			// INSREC.SDUTY
	set vc13=V.piece($C(9),13)			// INSREC.DTERM
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb3!(+vovc2'=+vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc5
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc5			// @TOT([INSREC]TTPREM)
	quit

VDTL4	// Detail
	type public String %TIM,DURDAYS,IOSL,NAM,PEND,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$E(vc6,1,12)
	do VP1 quit:VFMQ!verror.get()  set V=$E(NAM,1,35)
	set VL=VL_$J("",15-VL.length())_V
	set VL=VL_$J("",52-VL.length())_$J(vc7,2)
	set VL=VL_$J("",61-VL.length())_$J(vc8,2)
	set VL=VL_$J("",68-VL.length())_$J(vc9,2)
	set VL=VL_$J("",75-VL.length())_$J($$DAT^%ZM(vc10),10)
	do VP2 quit:VFMQ!verror.get()  set V=$E(DURDAYS,1,5)
	set VL=VL_$J("",87-VL.length())_V
	set VL=VL_$J("",99-VL.length())_$S(vc11:"Y",1:"N")
	set VL=VL_$J("",104-VL.length())_$J($FN(vc12,",",2),6)
	set VL=VL_$J("",112-VL.length())_$J($FN(vc5,",",2),18)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DURDAYS,NAM,PEND,RID,RN,TJD,VL,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+10,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Insurance Type:"
	set VL=VL_$J("",16-VL.length())_$J(vc2,2)
	do VOM
	set VL="  "_"Company Code:"
	set VL=VL_$J("",16-VL.length())_$J(vc4,12)
	do VOM
	set VL=" "_"Period Ending:"
	set VL=VL_$J("",16-VL.length())_$J($$DAT^%ZM(PEND),10)
	do VOM
	set VL="                                                    "_"Travel"
	do VOM
	set VL="                                                    "_"Area   --Number of--   Start       Duration          Stamp               Total"
	do VOM
	set VL="Policy Number  Customer Name                        Code  Adults Children  Date        in Days  Holiday   Duty             Premium"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VRSUM	// Report Summary
	type Public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type Public String %TIM,DURDAYS,NAM,PEND,VPN,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                                                              "_"Total Travel Insurance Premiums:"
	set V=0						// @TOT([INSREC]TTPREM,0)
	for I=0:1:4 set V=V+VT(I,1,1)
	set VL=VL_$J("",112-VL.length())_$J($FN(V,",",2),18)
	do VOM
	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NAM

	type public String vc1
  /* Revision History:
	 CR-19067 - Giridhal
	 Setting the value of NAM from CIF to variable */
 
  type String iacn = vc1
  type RecordCIF rcif = Db.getRecord("CIF","ACN=:iacn")
  type String NAM = rcif.nam
	quit

VP2	// Column pre-processor - Variable: DURDAYS

	type public String vc13,vc10
 /* Revision History
	CR 19067 - Giridhal
	Converted to PSL by girdhal */

  type String DTERM = vc13
  type Date SDATE = vc10
  type String DURDAYS
 
  if DTERM = "" , SDATE = "" set DURDAYS=""
  else  set DURDAYS=($$EXT^UMDT(DTERM,SDATE)-SDATE)
	quit
