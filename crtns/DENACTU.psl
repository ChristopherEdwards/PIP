DENACTU	//
	/*
	   ORIG: SAVITSKYS - 10/12/95
	   DESC: User Denomination Actual Count Setup

	  ---- Revision History ------------------------------------------------

	   01/25/06 - TITOVE - CR 19226
	   	      Added instantiation of UTBLDENOM table to VPG01 section.
	   	      Corrected passing of error message variables in PPCRCD.

	   05/05/05 - TITOVE - CR 14192
		      Modified as part of DBI2 project. Removed END section.

	   03/27/02 - CHHABRIAS - 49451
		      Converted to PSL.

	  ----------------------------------------------------------------------
	*/

	// Initialize Denomination Breakdown Transaction Processing
	type Boolean DC
	type Number %PAGE, %PG, %REPEAT, SAVAMT, TOTAL, ZPG
	type String VFMQ
	
	type RecordUTBLDENOM fUTBLDEN

	// Function Not Enabled
	if 'CUVAR.DENFLG do Runtime.setErrMSG("CUVAR",8152) quit
	
	set %PG = 0
	set %PAGE = 1
	set DC = 0
	set SAVAMT = 0
	set ZPG = 0
	
	set %ProcessMode = 2

	do DRV^USID(%ProcessMode,"DENWARN")

	if (VFMQ = "Q") quit
	
	set %ProcessMode = 0
	
	do VPG(.fUTBLDEN)
	
	quit


VPG(RecordUTBLDENOM fUTBLDEN)	// Page Control

	type public Number %PG, ER, ZPG
	type public String VFMQ

	type Boolean FINISH = 0, SETFLG = 0
	type String ACTCASH(,), CALCAMT(), CNT(), CRCD, DESC(), MAST(), MCNT()
	type String MDESC(), MMUT(), MUTCNT(), UID
	
	for  do { quit:FINISH
		
		if (%PG = 0) do VPG00 if ER!(VFMQ = "Q") set FINISH = 1 quit
		
		if (%PG > 0) do VPG01(.fUTBLDEN)
		
		if "DFQ"[VFMQ do VER set FINISH = 1 quit
		
		set %PG = %PG + 1
		
		set ZPG = %PG
		}

	quit


VPG00   //

	type public Boolean SETFLG
	type public Number %REPEAT, BRCD, ER, I, SAVAMT
	type public String CALCAMT(), CNT(), CRCD, DESC(), MUTCNT(), UID, VFMQ

	type Date TPD
	type String %READ, %TAB	

	set %READ = ";@@%FN/REV/CEN;;"
	set %TAB("BRCD") = ".BRCD1/TBL=[UTBLBRCD]/REQ"
	set %TAB("UID") = ".UID1/TBL=[SCAU]/REQ"
	set %TAB("CRCD") = ".CRCD1/TBL=[CRCD]/REQ/XPP=D PPCRCD^DENACTU"

	set %READ = %READ_"BRCD;UID;CRCD"

	do ^UTLREAD

	if (VFMQ = "Q") quit

	type ResultSet rs = Db.select("TPD","TPCTRL","BRCD=:BRCD AND UID=:UID","TPD DESC")

	if rs.next() set TPD = rs.getCol("TPD") do {

		type RecordTPCASH tpcash = Db.getRecord("TPCASH", "BRCD = :BRCD, UID = :UID, TPD = :TPD, CRCD = :CRCD", 1)
			
		if tpcash.getMode() set SAVAMT = tpcash.ectot
		}
		
	set I = 0
	
	set (DESC,CNT,CALCAMT,MUTCNT) = ""
	
	set %REPEAT = 16
	
	if 'SETFLG do SETUP
	
	quit 


VPG01(RecordUTBLDENOM fUTBLDEN)	// Screen Setup

	type public Number %PAGE, SAVPG
	type public String CALCAMT(), CNT(), CRCD, DESC(), MUTCNT()

	set %PAGE = SAVPG
	
	do LOAD
	
	set fUTBLDEN = Class.new("RecordUTBLDENOM")
	set fUTBLDEN.crcd = CRCD	

	do DRV^USID(%ProcessMode,"DENOM",.fUTBLDEN)

	do SAVE
	
	// Clear out buffers for display of next page
	kill DESC,CALCAMT,CNT,MUTCNT
	
	quit


LOAD	// Load screen Arrays from Master Arrays

	type public Number %PG, %REPEAT
	type public String CALCAMT(), CNT(), DESC(), MCNT(), MDESC()
	type public String MAST(), MMUT(), MUTCNT()
	
	type Number I, INDX, X

	set INDX = (%PG - 1) * %REPEAT
	
	for I = 1:1:%REPEAT set X = MDESC(I + INDX).get() quit:X.isNull()  set DESC(I) = X
	
	for I = 1:1:%REPEAT do {
		
		set CNT(I) = MCNT(I + INDX).get()

		set MUTCNT(I) = MMUT(I + INDX).get()
		
		if (CNT(I) ! MUTCNT(I)) set CALCAMT(I) = (+CNT(I) + MUTCNT(I)) * MAST(I+INDX).piece("|",4)
		}

	quit 


SAVE	// Save screen Arrays to Master Arrays

	type public Number %REPEAT, ZPG
	type public String CNT(), MCNT(), MMUT(), MUTCNT()
	
	type Number I, INDX

	set INDX = (ZPG  -1) * %REPEAT
	
	for I = 1:1:%REPEAT set MCNT(I + INDX) = CNT(I).get()

	for I = 1:1:%REPEAT set MMUT(I + INDX) = MUTCNT(I).get()

	quit 


SETUP	// Denomination Information Setup

	type public Boolean SETFLG
	type public Number %REPEAT, BRCD, SAVPG
	type public String ACTCASH(,), CRCD, MASTCNT(), MASTMUT()
	type public String MAST(), MCNT(), MDESC(), MMUT(), UID
	
	type Number IDX, TMP

	type ResultSet rs = Db.select("CSEQ","DENACTU","BRCD=:BRCD AND UID=:UID AND CRCD=:CRCD")

	if rs.isEmpty() do {
		
		type ResultSet rs = Db.select("CSEQ","UTBLDENOM","CRCD=:CRCD")
		
		while rs.next() set ACTCASH(CRCD,rs.getCol("CSEQ")) = "0|0"
		}

	type DbSet ds = Db.selectDbSet("UTBLDENOM","CRCD=:CRCD")
	
	while ds.next() do {
		
		type RecordUTBLDENOM udm = ds.getRecord("UTBLDENOM")
		
		if 'ACTCASH(CRCD,udm.cseq).exists() do {

			type RecordDENACTU fDENACTU = Db.getRecord("DENACTU", "BRCD = :BRCD, UID = :UID, CRCD = :CRCD, CSEQ = :udm.cseq", 1)
			
			set ACTCASH(CRCD,udm.cseq).piece("|",1) = fDENACTU.cnt_"|"_fDENACTU.mutilated
			
			type RecordUTBLDENLIMUR udmur = Db.getRecord("UTBLDENLIMUR", "UID = :UID, CRCD = :CRCD, CSEQ = :udm.cseq", 1)
			
			if udmur.getMode() set ACTCASH(CRCD,udm.cseq).piece("|",3) = udmur.mincnt_"|"_udmur.maxcnt			
			else  do {
				
				type RecordUTBLDENLIMUC udmuc = Db.getRecord("UTBLDENLIMUC", "UCLS = :%UserClass, CRCD = :CRCD, CSEQ = :udm.cseq", 1)
				
				if udmuc.getMode() set ACTCASH(CRCD,udm.cseq).piece("|",3) = udmuc.mincnt_"|"_udmuc.maxcnt
				}
			}
			
		set IDX = MDESC(1E18).order(-1) + 1
		
		set MAST(IDX) = udm.cseq

		set MAST(IDX).piece("|",2) = udm.desc_"|"_udm.tpcshlnk_"|"_udm.mult_"|"_udm.roll_"|"_udm.strap_"|"_udm.denomination
		
		set MDESC(IDX) = MAST(IDX).piece("|",2)
		
		if MASTCNT(udm.cseq).exists() set MCNT(IDX) = MASTCNT(udm.cseq)
		
		if MASTMUT(udm.cseq).exists() set MMUT(IDX) = MASTMUT(udm.cseq)
		}

	set TMP = (IDX \ %REPEAT)
	
	if (TMP - (IDX / %REPEAT)) set SAVPG = TMP + 1
	
	set SETFLG = 1
	
	quit 


VER	//

	type public String VFMQ

	if (%ProcessMode = 2) ! (%ProcessMode = 4) ! (VFMQ = "Q") quit

	do FILE

	quit


FILE	// File data

	type public Number BRCD, TOTAL
	type public String ACTCASH(,), CRCD, MAST(), MCNT(), MDESC(), MMUT(), UID

	type Number CSEQ, TMP

	set TMP = 0

	for  set TMP = MCNT(TMP).order() quit:MDESC(TMP).get().isNull()  do {
		
		set CSEQ = MAST(TMP).piece("|",1)

		type RecordDENACTU fDENACTU = Class.new("RecordDENACTU")
		
		set fDENACTU.brcd = BRCD
		set fDENACTU.uid = UID
		set fDENACTU.crcd = CRCD
		set fDENACTU.cseq = CSEQ
		set fDENACTU.cnt = ACTCASH(CRCD,CSEQ).piece("|",1) + MCNT(TMP)
		set fDENACTU.mutilated = ACTCASH(CRCD,CSEQ).piece("|",2) + MMUT(TMP)
		
		do fDENACTU.bypassSave()
		}

	quit


PPCRCD	// Post processor for currency prompt

	type public Number BRCD
	type public String UID, X

	type ResultSet rs = Db.select("CSEQ","DENACTU","BRCD=:BRCD AND UID=:UID AND CRCD=:X")

	// Counts for currency ~p1 already exist for user ~p2
	if 'rs.isEmpty() do Runtime.setErrMSG("DENACTU",8734,X_"~"_UID) quit

	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60290^59933^Eugene Titov^6271"	// Signature - LTD^TIME^USER^SIZE
