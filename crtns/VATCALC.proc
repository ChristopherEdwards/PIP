VATCALC	
VAT
  /*
ORIG: VETSENM - 09/28/2001
DESC: Value Added Taxes processing

---- Comments --------------------------------------------------------

---- Revision History ------------------------------------------------
	
	11/07/05 - Sreeram Panyaram
		   Initialized Unscoped Variables for DBI3.
		   
	06/23/03 - CARROLLJ - 51349
		Removed the use of the TR array.

	01/11/02 - VETSENM - 48917
	        Add $E function for ITC to insure the correct available
		balance calculation when ITC contains more then 1 digit.             	

 */

	quit			//dummy quit

PROC(return,params,RecordDEP dep,RecordTTX ttx,RecordUTBLCTFPLN utblctfpln)
	/*
 
           Arguments:
 
           .ttx		Transaction Array		/TYP=N/REQ
	   .dep		Deposit Record			/TYP=N/REQ

           .params - Parameters				/TYP=T/REQ 
                  
		Parameters needed for VAT tax amount adjusting 
		and calculation.
	   
	Returns:

	  .return - VAT tax amount

	
	*/
	
	type public Number AMT,CID
	type public String SAVSEQ
	type Number AVLBAL,BAL,RATE,TAMT
	
	
	//Define VAT percentage
	set RATE=params("VATRATE").get()

	//Define VAT amount
        set TAMT=(AMT/100)*RATE

	//Select account's available balance when fee transaction posted 
        set BAL=$$BALAVL^ACNCDI(CID)

	/*	
	Check if account's avl. balance is sufficient for VAT tr.
	If balance is not sufficient - adjust the fee and VAT amounts.
	*/
        set SAVSEQ=params("SAVSEQ").get()
	if (ttx.etc).extract()=0 set AVLBAL=BAL+AMT //if debit
        else  set AVLBAL=BAL-AMT                          //if credit
	if '((BAL-TAMT)<0) set return=TAMT
	if (BAL-TAMT)<0 do ADJAMT(.dep,.utblctfpln) 
	
	quit


ADJAMT(RecordDEP dep,RecordUTBLCTFPLN utblctfpln)
 
	type public Number AMT,AVLBAL,CID,RATE,return
	type Number PAMT,TAMT,TYPE,VAMT,VATSAMT,VP,XCID
	type String ET,TCMT,TSO

	/* This section calculates a partial fee and VAT 
	to bring the customer balance to zero by debiting
	suspense G/L */
	
	
      	//Calculate partial fee amount by dividing balance by (VAT %  + 1)
	set VP=1+(RATE/100)  
        set PAMT=AVLBAL/VP

        //Get partial VAT amount by multipying partial fee amount by VAT %
        set VAMT=PAMT*(RATE/100)
 
        //Calculate suspense amount
        set VATSAMT=AMT-PAMT
	set VATSAMT=$$^SCARND(VATSAMT,0,CID)
        set return=VAMT

 
        // Save CID (customer account) into XCID
        set XCID=CID
 
        //Debit suspense account
        set CID=utblctfpln.susgl
 
        //If suspense account is not defined on CTF Plan use Payble G/L.
        if CID="" set CID=utblctfpln.paygl
        set ET="MDR"
        set TAMT=VATSAMT
        set TSO=$$^MSG(5082)
        set TCMT=$$^MSG(5082)
 
        //Update TR array
        do CRTTX^CTFCALC(ET,TAMT,CID,TSO,TCMT,.dep)
	//Cedit customer account
        set CID=XCID
 
        //Define product type to select General Purpose Tran Code.
 	set TYPE=dep.type

        //CR General Purpose Tran Code for customer account.
        type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE",1)
        if prodctl.getMode() do {
        	set ET=prodctl.CRTRGP
        }
        
 
        //Update TR array
	do CRTTX^CTFCALC(ET,TAMT,CID,TSO,TCMT,.dep)
 	
	quit

VATAMT(TTXTAMT)
	/*
	This section is called from MRPC076 to build the amount
	field for a transaction set for VAT (ARQ 46314)
	Transaction set needs to be set up to call this section
	to return the amount.
	
	Returns:
 
          TAMT - VAT tax amount
 
	Example:
           
	  $$VATAMT^VATCALC() 	

	*/

	type public Number CID,TAMT
	type Public Cache %CUVAR
	type Number RATE
	type RecordCUVAR cuvar=%CUVAR.getRecord("CUVAR")
	
	set RATE=cuvar.vat

	/* The amount that we are basing the VAT from will always be the
	preceding sequence in the transaction set. */
	set TAMT=TTXTAMT*(RATE/100)   
	set TAMT=$$^SCARND(TAMT,,CID)
        quit TAMT

vSIG()	quit "60219^32458^Panyaram, Sreeram^3673"	// Signature - LTD^TIME^USER^SIZE
