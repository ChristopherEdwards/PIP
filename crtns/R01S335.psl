R01S335	// SCA346 - ACH Origination Batch Offset Notice
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:56 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA346"
	set RN="ACH Origination Batch Offset Notice"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[ACHBCH]COID|[ACH]:NOVAL||D EXT^DBSQRY||T|Company ID|||||"
	set %TAB("VIN2")="|255||[ACHBCH]PTYPEF|||D EXT^DBSQRY||T|Payment Type|||||"
	set %TAB("VIN3")="|255||[ACHBCH]QND|||D EXT^DBSQRY||T|Effective Entry Date|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CADDR1,CADDR2,CADDR3,CCSZ,CONAM,CSZ,DT,NAME,NAME1,NOTDAT,NUMB,PMT,RID,RN,TAMF,VL,VLOF,VRF(),VSTATS(),WHAT,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA346",RN="ACH Origination Batch Offset Notice"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA346","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[ACHBCH]COID "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[ACHBCH]PTYPEF "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[ACHBCH]QND "_VIN3,SEQ=SEQ+1
		set DQQRY(SEQ)="[ACHDTL]RTC6=0",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("ACHDTL,ACHBCH,ACH1") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"ACHDTL.TJD,ACHDTL.FILE,ACHDTL.BATCH,ACHDTL.SEQ,ACH"
	set VSELECT=VSELECT_"1.CONTACT,ACHBCH.CNAME,ACH1.ADDR,ACHDTL.IBSTC,ACHD"
	set VSELECT=VSELECT_"TL.CID,ACHBCH.PTYPE,ACHBCH.ND,ACH1.CNAME,ACHDTL.TA"
	set VSELECT=VSELECT_"MT,ACH1.CITY,ACH1.STATE,ACH1.CNTRY,ACH1.MZIP"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"ACHDTL,ACHBCH,ACH1",VWHERE,"ACHDTL.TJD,ACHDTL.FILE,ACHDTL.BATCH,ACHDTL.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17
	set vc1=V.piece($C(9),1)			// ACHDTL.TJD
	set vc2=V.piece($C(9),2)			// ACHDTL.FILE
	set vc3=V.piece($C(9),3)			// ACHDTL.BATCH
	set vc4=V.piece($C(9),4)			// ACHDTL.SEQ
	set vc5=V.piece($C(9),5)			// ACH1.CONTACT
	set vc6=V.piece($C(9),6)			// ACHBCH.CNAME
	set vc7=V.piece($C(9),7)			// ACH1.ADDR
	set vc8=V.piece($C(9),8)			// ACHDTL.IBSTC
	set vc9=V.piece($C(9),9)			// ACHDTL.CID
	set vc10=V.piece($C(9),10)			// ACHBCH.PTYPE
	set vc11=V.piece($C(9),11)			// ACHBCH.ND
	set vc12=V.piece($C(9),12)			// ACH1.CNAME
	set vc13=V.piece($C(9),13)			// ACHDTL.TAMT
	set vc14=V.piece($C(9),14)			// ACH1.CITY
	set vc15=V.piece($C(9),15)			// ACH1.STATE
	set vc16=V.piece($C(9),16)			// ACH1.CNTRY
	set vc17=V.piece($C(9),17)			// ACH1.MZIP
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String CADDR1,CADDR2,CADDR3,CCSZ,CSZ,DT,IOSL,NAME,NAME1,NOTDAT,NUMB,PMT,TAMF,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),WHAT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4

	if VLC+21>IOSL do VHDG0 quit:VFMQ

	set VL=$E(CONAM,1,20)
	do VP1 quit:VFMQ!verror.get()  set V=$E(NOTDAT,1,12)
	set VL=VL_$J("",52-VL.length())_V
	do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$E(CADDR1,1,10) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$E(CADDR2,1,10) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(CADDR3,1,10) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	do VP5 quit:VFMQ!verror.get()  set V=$E(CCSZ,1,10) do VP6 quit:VFMQ!verror.get()  set VL=V
	do VOM
	set VL="" do VOM
	set VL="                                            "_"$"
	do VP7 quit:VFMQ!verror.get()  set V=$J($FN(TAMF,",",2),12)
	set VL=VL_$J("",46-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="A "_WHAT_" has been made to your account # "_NUMB_" on "_DT_"."
	do VOM
	set VL="This entry represents ACH transactions originated for "_NAME
	do VOM
	set VL=NAME1_"for the payment type "_PMT_"."
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL=$E(vc5,1,25)
	do VOM
	set VL=$E(vc6,1,16)
	do VOM
	set VL=$E(vc7,1,25)
	do VOM
	do VP8 quit:VFMQ!verror.get()  set V=$E(CSZ,1,10) set VL=V
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CADDR1,CADDR2,CADDR3,CCSZ,CONAM,CSZ,DT,NAME,NAME1,NOTDAT,NUMB,PMT,RID,RN,TAMF,VL,WHAT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: NOTDAT

 type public String MOSTR,NOTDAT

 set NOTDAT=%SystemDate.toString("MM/DD/YEAR")
 set MOSTR="JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC"
 set NOTDAT=MOSTR.piece(",",NOTDAT.piece("/",1))_" "_NOTDAT.piece("/",2)_" "_NOTDAT.piece("/",3)
	quit

VP2	// Column pre-processor - Variable: CADDR1

 type public String CADDR1

 type RecordCUVAR cuvaradd=Db.getRecord("CUVAR")
 set CADDR1=cuvaradd.cad1
	quit

VP3	// Column pre-processor - Variable: CADDR2

 type public String CADDR2

 type RecordCUVAR cuvaradd=Db.getRecord("CUVAR")
 set CADDR2=cuvaradd.cad2
	quit

VP4	// Column pre-processor - Variable: CADDR3

 type public String CADDR3

 type RecordCUVAR cuvaradd=Db.getRecord("CUVAR")
 set CADDR3=cuvaradd.cad3
	quit

VP5	// Column pre-processor - Variable: CCSZ

 type public String CCSZ

 type RecordCUVAR cuvaradd=Db.getRecord("CUVAR")
 set CCSZ=cuvaradd.ccity_", "_cuvaradd.cstate_"  "_cuvaradd.czip
	quit

VP6	// Column post-processor - Variable: CCSZ

	type public String vc8,vc9,vc10,vc11,vc12
 type public Date DT
 type public Number WHAT
 type public String NAME,NAME1
 type Number I
 type String COID,DAT,NAME0,OTC,VAL

 set OTC=vc8

 type RecordTRN trn=Db.getRecord("TRN","ETC=:OTC",1)
 set WHAT=$S(trn.dc:"credit",1:"debit")

 do STRIP^DEPDI("NUMB",vc9,"T")

 do STRIP^DEPDI("PMT",vc10,"T")

 set DAT=vc11

 set DAT=DAT.extract(3,4)_"/"_DAT.extract(5,6)_"/"_DAT.extract(1,2)

 set DT = DAT.toDate("MM-DD-YEAR")
 
 set DT=DT.toString("MM/DD/YEAR")

 set NAME=vc12,NAME1=""

 quit:'NAME.length()'>25

 set NAME0=NAME.extract(1,25)

 for I=25:-1 set VAL=NAME0.extract(I) if VAL.isNull() set NAME1=NAME.extract(I+1,99)
 set NAME=NAME.extract(1,I-1)
	quit

VP7	// Column pre-processor - Variable: TAMF

	type public String vc13
 type public Number TAMF

 set TAMF=+(vc13/100)
	quit

VP8	// Column pre-processor - Variable: CSZ

	type public String vc14,vc15,vc16,vc17
 type public String CSZ

 set CSZ=vc14_", "_vc15

 type RecordCUVAR cuvar=Db.getRecord("CUVAR")

 if (vc16).length() if vc16'=cuvar.cntry set CSZ=CSZ_" "_vc16

 set CSZ=CSZ_"  "_vc17

	quit
