UANTICL		/* Private; FAST UANTIC for specific situations
	
	   ORIG: Tom Locke - 11/18/96
	   DESC: Cash flow/modeler calculations for specific situations
	         to avoid calls into each specific application
	
	   KEYWORDS:
	
	   EXAMPLE:
	
	
	---- Revision History ------------------------------------------------
	04/14/03 - CARROLLJ - 51349
		   Removed use to %A array.

	*/
	quit                                   // Not to be called from the top
	
FAST(RecordLN ln,RecordTTX ttx,CID,EFD,CTL) // FAST UANTIC for standard fixed rate mortgage accounts
	/*
	
	   ARGUMENTS:
	        . CID Account Number   /REQ/TYP=N
	
	        . EFD Effective ("thru") date  /REQ/TYP=D
	
	        . CTL Control    /NOREQ/TYP=N
	
	                 Position 1: file to disk Y/N
	                 Position 2: generate cash offsets Y/N
	
	   INPUTS:
	        . %A for all nodes   /REQ/TYP=ARRAY
	
	        . TJD System Date   /REQ/TYP=D
	
	        . CRCD   Account curreny   /REQ/TYP=T
	
	   OUTPUTS:
	        . ACT  Activity array   /TYP=ARR
	
	        . INQ Inquiry array   /TYP=ARR
	
	        . $$ Fast calc used Y/N  /TYP=L
	
	*/
	new BALINT,DIST1FRE,EVNTJD,EVNTSQ,IRN,MDT,PMTETC,TRN,TYPE
	;

	type Public Cache %CACHE()

	// Backdated
	if $G(LNPTSRV)=1 quit 0

	if ln.iacm'="00" quit 0
	if $E(ln.pcm,2)'=11 quit 0
	// fixed rate
	if ln.index'="" quit 0
	// 12 pmts/yr
	if ln.dist1af'=12 quit 0
	// current
	if ln.dist1nd<TJD quit 0
	// INTA
	if ln.inta quit 0
	//if $O(%A(CID,70,""))'="" quit 0                             ; cycled items

	// Fees
	if ln.lnfeeta'="" quit 0

	if Db.isDefined("LNDS1","CID=:CID,SDD=:ln.dist1nd")
	//if $O(%A(CID,90,""))'="" quit 0                             ; disb. sched.

	// No Balance
	if 'ln.bal quit 0

	set CTL=$G(CTL)
	if $E(CTL) quit 0                                           ; filing data


	Type RecordLNBIL0 lnbil0=Db.getRecord("LNBIL0","CID=:CID")
	
	if $P($P(BL(CID,0),"|",$$ELEMPC^LNU(CID,"I")),"#",5) quit 0 ; lump pmt
	;	
	set EVNTSQ=1				; necessary for SETACT^UANTIC
	set BALINT=ln.balint
	set PMTPI=ln.pmtpi
	set TYPE=ln.type
	type RecordPRODCTL prodctl=%CACHE("PRODCTL").getRecord("PRODCTL","TYPE")
	set ETC=prodctl.crtrgp
	set PMTETC=ETC
	set ETC="CI"
	set EVNTJD=ln.dist1nd
	;
	for  quit:BALINT'>0  quit:ER  quit:EVNTJD>EFD  do {
		new INT,PRN,NJD,SEQ
		set INT=BALINT*ln.irn/100/12
		set INT=$$^SCARND(INT,,,CRCD)
		set PRN=PMTPI-INT
		; payoff ?
		if (BALINT-PRN'>0)!((EVNTJD'<ln.mdt)&ln.mdt) do {
			set PRN=BALINT
			set PMTPI=PRN+INT
			type RecordPRODCTL prodctl=%CACHE("PRODCTL").getRecord("PRODCTL","TYPE")
			set ETC=prodctl.crtrci
			set PMTETC=ETC
			}
		set TRN=CID_"|1|"_PMTETC_"|"_PMTPI_"#"_PRN_"#"_INT_"|"_EVNTJD
		; pass TRN by reference to save a little cpu time
		//do SETACT^UANTIC(.TRN,1)
		;
		; cash in
		if $E(CTL,2) do {
			set TRN=$P(ETC("CI"),"|",13)_"|0|CI|"_PMTPI_"|"_EVNTJD
			//do SETACT^UANTIC(.TRN)
			}
		set EVNTJD=$$NJD^UFRE(EVNTJD,ln.dist1fre)	; Get next date
		set BALINT=BALINT-PRN
		}
	quit 1
 #OPTION ResultClass ON
Public String vSIG()	quit "60204^55443^Chad Smith^2805"	// Signature - LTD^TIME^USER^SIZE
