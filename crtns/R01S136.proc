R01S136	// SCA067 - Current/Projected Dormant/Escheat Accts
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:43 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date PRJDT=%SystemDate
	type String VIN2="ALL"
	type String VIN3="ALL"

	set RID="SCA067"
	set RN="Current/Projected Dormant/Escheat Accts"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("PRJDT")="|10|||||S PRJDT=X||D|Projected to Date|||||"
	set %TAB("VIN2")="|255||[DEP]GRP|[STBLGRP]:QU ""[STBLGRP]CLS=""""D"""""":NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN3")="|255||[DEP]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"

	set %READ="IO/REQ,PRJDT#1,VIN2#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date PRJDT
	type public String VIN2,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,CRCD,DDOR,DESC,DYSDRM,DYSESC,RID,RN,STDES,TDES,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA067",RN="Current/Projected Dormant/Escheat Accts"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA067","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DEP]GRP "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]TYPE "_VIN3,SEQ=SEQ+1
		set DQQRY(SEQ)="[DEP]BAL<>0",SEQ=SEQ+1
		set DQQRY(SEQ)="[DEP]CCLD+($S([PRODCTL]DRMT:[PRODCTL]DRMT,1:[CUVAR]DRMT) < (PRJDT)",SEQ=SEQ+1
		set DQQRY(SEQ)="[DEP]CLS=""D""",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DEP,CIF,PRODDFTD") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Group"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Product Type"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Current/Projected Dormant/Escheat Accts"
		set VBNRINFO("PGM")="R01S136"
		set VBNRINFO("RID")="SCA067"
		set VBNRINFO("TABLES")="DEP,CIF,PRODDFTD"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEP]GRP"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEP]TYPE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEP]CRCD"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DEP]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DEP.GRP,DEP.TYPE,DEP.CRCD,DEP.CID,DEP.LNM,CIF.TAXI"
	set VSELECT=VSELECT_"D,DEP.BAL,DEP.CCLD,DEP.STAT,DEP.BOO,CIF.MAD1,CIF.M"
	set VSELECT=VSELECT_"CSZ,PRODDFTD.CRCD,PRODDFTD.GRP,PRODDFTD.TYPE,PRODD"
	set VSELECT=VSELECT_"FTD.DES"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DEP,CIF,PRODDFTD",VWHERE,"DEP.GRP,DEP.TYPE,DEP.CRCD,DEP.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16
	set vc1=V.piece($C(9),1)			// DEP.GRP
	set vc2=V.piece($C(9),2)			// DEP.TYPE
	set vc3=V.piece($C(9),3)			// DEP.CRCD
	set vc4=V.piece($C(9),4)			// DEP.CID
	set vc5=V.piece($C(9),5)			// DEP.LNM
	set vc6=V.piece($C(9),6)			// CIF.TAXID
	set vc7=V.piece($C(9),7)			// DEP.BAL
	set vc8=V.piece($C(9),8)			// DEP.CCLD
	set vc9=V.piece($C(9),9)			// DEP.STAT
	set vc10=V.piece($C(9),10)			// DEP.BOO
	set vc11=V.piece($C(9),11)			// CIF.MAD1
	set vc12=V.piece($C(9),12)			// CIF.MCSZ
	set vc13=V.piece($C(9),13)			// PRODDFTD.CRCD
	set vc14=V.piece($C(9),14)			// PRODDFTD.GRP
	set vc15=V.piece($C(9),15)			// PRODDFTD.TYPE
	set vc16=V.piece($C(9),16)			// PRODDFTD.DES
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public Number DYSESC,DYSDRM
 type RecordCUVAR cuvar=Db.getRecord("CUVAR")
 set DYSDRM=cuvar.drmt
 set DYSESC=cuvar.esch
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL1	// Detail
	type public String %TIM,CRCD,DDOR,DESC,DYSDRM,DYSESC,IOSL,STDES,TDES,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+5>IOSL do VHDG0 quit:VFMQ

	set VL="Group: "
	set VL=VL_$J("",7-VL.length())_$E(vc14,1,4)
	set VL=VL_$J("",13-VL.length())_"Type: "
	set VL=VL_$J("",20-VL.length())_$J(vc15,3)
	set VL=VL_$J("",25-VL.length())_$E(vc16,1,40)
	set VL=VL_$J("",74-VL.length())_"Currency Code:"
	set V=vc13,VO=V set V=$E(V,1,4) do VP1 quit:VFMQ!verror.get()
	set VL=VL_$J("",89-VL.length())_V		// [SYSDEV,PRODDFTD]CRCD
	do VOM
	set VL="" do VOM
	set VL="              "_"Account Title"
	set VL=VL_$J("",65-VL.length())_"Date Lst"
	set VL=VL_$J("",74-VL.length())_"Date of"
	set VL=VL_$J("",85-VL.length())_"Date of"
	set VL=VL_$J("",94-VL.length())_"Current"
	set VL=VL_$J("",123-VL.length())_"Branch"
	do VOM
	set VL="   "_"Account #"
	set VL=VL_$J("",14-VL.length())_"Address"
	set VL=VL_$J("",36-VL.length())_"TIN/SIN"
	set VL=VL_$J("",54-VL.length())_"Balance"
	set VL=VL_$J("",65-VL.length())_"Activity"
	set VL=VL_$J("",74-VL.length())_"Dormancy"
	set VL=VL_$J("",85-VL.length())_"Escheat"
	set VL=VL_$J("",95-VL.length())_"Status"
	set VL=VL_$J("",103-VL.length())_"Description"
	set VL=VL_$J("",123-VL.length())_"Code"
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	quit

VDTL4	// Detail
	type public String %TIM,CRCD,DDOR,DESC,DYSDRM,DYSESC,IOSL,STDES,TDES,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set V=vc4,VO=V do VP2 quit:VFMQ!verror.get()  set V=$J(V,12) set VL=V
	set VL=VL_$J("",14-VL.length())_$E(vc5,1,20)
	set VL=VL_$J("",36-VL.length())_$E(vc6,1,11)
	set V=vc7,VO=V do VP3 quit:VFMQ!verror.get()  set V=$J(V,13,2)
	set VL=VL_$J("",48-VL.length())_V		// [SYSDEV,DEP]BAL
	set VL=VL_$J("",63-VL.length())_$J($$DAT^%ZM(vc8),10)
	do VP4 quit:VFMQ!verror.get()  set V=$E(DDOR,1,10)
	set VL=VL_$J("",74-VL.length())_V
	do VP5 quit:VFMQ!verror.get()  set V=$E(DESC,1,10)
	set VL=VL_$J("",85-VL.length())_V
	set VL=VL_$J("",96-VL.length())_$J(vc9,5)
	do VP6 quit:VFMQ!verror.get()  set V=$E(STDES,1,18)
	set VL=VL_$J("",103-VL.length())_V
	set VL=VL_$J("",122-VL.length())_$J(vc10,7)
	do VOM
	set VL="              "_$E(vc11,1,40)
	do VOM
	set VL="              "_$E(vc12,1,40)
	do VOM
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %TIM,CRCD,DDOR,DESC,DYSDRM,DYSESC,I,IOSL,STDES,TDES,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	do VP7 quit:VFMQ!verror.get()  set V=$E(TDES,1,20) set VL=V
	set VL=VL_$J("",75-VL.length())_"Currency Code "
	set VL=VL_$J("",89-VL.length())_$E(vc13,1,4)
	do VOM
	set VL="" do VOM
	set VL="              "_"Current Dormant"
	set VL=VL_$J("",42-VL.length())_"Projected Dormant"
	set VL=VL_$J("",74-VL.length())_"Current Escheat"
	set VL=VL_$J("",102-VL.length())_"Projected Escheat"
	do VOM
	set VL="         "_$J($FN(TT(CRCD,1),",",2),20)
	set VL=VL_$J("",39-VL.length())_$J($FN(TT(CRCD,2),",",2),20)
	set VL=VL_$J("",69-VL.length())_$J($FN(TT(CRCD,4),",",2),20)
	set VL=VL_$J("",99-VL.length())_$J($FN(TT(CRCD,3),",",2),20)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,CRCD,DDOR,DESC,DYSDRM,DYSESC,RID,RN,STDES,TDES,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column post-processor - [SYSDEV,PRODDFTD]CRCD

	type public String vc13,vc15
 type Public String CRCD, TT()
 type Public Number DYSDRM
 type Number I, TYPE 

 set CRCD=vc13
 for I=1:1:4 S TT(CRCD,I)=0
 
 set TYPE=vc15
 type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYPE")
 if prodctl.drmt set DYSDRM=prodctl.drmt quit

	quit

VP2	// Column pre-processor - [SYSDEV,DEP]CID

	type public String vc9,vc8,vc4
 /* VARIABLES:
   STATUS - four active stautus 1=Dormant, 2=Proj Dorm, 3=Proj Esc, 4=Esc
 	    Balance by status is totaled for report trailer
   
   CHECK2, CHECK3 - indicate that the account is flagged internally as 
                    dormant or escheat, but the condition is not supported 
                    by CCLD vs DYSDRMT
   DYSDRMT, DYSESC are days to dormancy, days to escheat, respectively.
 */ 

 type public Date PRJDT
 type Public Number CCLD, CHECK=0, CHECK2=0, CHECK3=0, DYSDRM, STAT, STATUS
 type Public String OPT, STDES
 type Number CID, ESC

 set STAT=vc9
 if (STAT=2) ! (STAT=3) set CHECK=1 

 // If status not active ( activity does not update status code )
 set CCLD=vc8                           

 if CHECK set OPT="CHECK"_STAT,@OPT=1

 if CHECK2 set STATUS=1,STDES=$$^MSG(6327) quit
 if CHECK3 set STATUS=4,STDES=$$^MSG(6328) quit
 if CCLD+DYSDRM '> %SystemDate S STATUS=1,STDES=$$^MSG(6327) quit
 
 set CID=vc4

 type RecordDEP dep=Db.getRecord("DEP","CID=:CID")

 set ESC=$$^ESCHEAT(CID,.dep)
 if ESC set STATUS=4,STDES=$$^MSG(6328) quit

 // Set TJD equal to PRJDT to see if account would qualify 
 set TJD=PRJDT 
 set ESC=$$^ESCHEAT(CID,.dep)
 if ESC set STATUS=3,STDES=$$^MSG(6329) quit
 set STATUS=2,STDES=$$^MSG(6330)
	quit

VP3	// Column pre-processor - [SYSDEV,DEP]BAL

	type public String vc7
 type Public String CRCD, STATUS, TT(,)
 type Number BAL

 set BAL=vc7
 set TT(CRCD,STATUS)=TT(CRCD,STATUS)+BAL
	quit

VP4	// Column pre-processor - Variable: DDOR

 type Public String DDOR
 type Public Number CCLD, CHECK2, CHECK3, DYSDRM, STATUS

 // If account status is questionable, don't print date
 if CHECK2 ! CHECK3 set DDOR="" quit

 // Define days to dormancy as Last Contact Date + Days to dormancy
 set DDOR=(CCLD+DYSDRM).toString("MM/DD/YEAR")

 // If status=2 (projected dormant) - add asterick to indicate projected date
 if STATUS=2 set DDOR=DDOR_"*"
	quit

VP5	// Column pre-processor - Variable: DESC

 type Public Number CCLD, CHECK2, CHECK3, DYSESC, STATUS
 type Public String DESC

 // If account status questionable, don't print date of escheat
 if CHECK2 ! CHECK3 set DESC="" quit

 // If STATUS=1!2 (dormant or projected dormant) no escheat date required
 if (STATUS=1) ! (STATUS=2) set DESC="" quit

 // Define date if escheat as date of last contact + days to escheat
 set DESC=$$DAT^%ZM(CCLD+DYSESC)
 
 // If STATUS=3 (projected escheat) flag date with asterick
 if STATUS=3 S DESC=$$DAT^%ZM(DESC)_"*"


	quit

VP6	// Column pre-processor - Variable: STDES

 type Public Number CHECK2, CHECK3
 type Public String STDES 

 if CHECK2!(CHECK3) S STDES=STDES_" **"
	quit

VP7	// Column pre-processor - Variable: TDES

	type public String vc16
 type Public String TDES
 set TDES=$$^MSG(6307)_" - "_vc16
	quit
