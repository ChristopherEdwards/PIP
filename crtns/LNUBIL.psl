LNUBIL
	/*	  
	  Loan bill re-set utility

             ORIG:  Neal E. Gorman
	
	     Recalculates and files the following values into loan accounts
	     based upon values in the bill file

	             BSEQ - Bill sequence (last bill)
	             CUES - Current escrow
	             CUIN - Current interest
	             CUPR - Current principal
	             DIST1LD - Last due date
	             DIST1ND - Next due date
	             DPMT - Payment amount (next due date)
	             DSEQ - Bill sequence (next due date)
	             LBDD - Last bill due date
	             OSEQ - Bill sequence (oldest unsatisfied)
	             PPA - Partial payment amount
	             TBA - Total bill amount
	             TDUE - Total Due
	             UNES - Uncollected escrow
	             UNIN - Uncollected interest
	             UNPR - Uncollected principal
	             BALINT - Balance for interest calculation
	
	     If calling externally, INPUT: CID
	
	                            Do tag EXEC
	
	                            Or pre-define arrays and variables
	                            and Do tag EXEC1
	
	
	---- Revision History ------------------------------------------------

	07/10/07 - KinI - CR 28143
		   Modified CID section to correct PSL conversion issue to 
		   avoid invalid error message.
	
	01/28/06 - SmithCD - CR 19343 (16890)
		   Removed the setting of ln.seq to BSEQ (^LNPTS now saves 
		   BSEQ to the ln object).
	
	05/13/05 - KinI - 15524
		   Modified to make CALC tag public.

	----------------------------------------------------------------------
	*/
	
	type Number %PAGE, %PG, OLNTB
	type String VFMQ

	set %PG = 1 
	set %PAGE = 1
	
	do VPG
	
	quit

	
VPG	// Page control

	type public Number %PG

	if %PG = 1 do VPG01,VPG0 quit

	quit


VPG0	

	type public String VFMQ
	type public Number %PG
	
	if "DFQ" [ VFMQ do VER quit

	set %PG = %PG + 1
	
	do VPG

	quit
	

VPG01	// Screen

	type public String VFMQ
	type public Number CID

	type String %READ, %TAB()
	
	set %TAB("CID") = ".CID3/XPP=D CID^LNUBIL/XPR=set (CLS,ZCLS)=""L"""
	set %READ = "@@%FN,,,CID/REQ"
	
	do ^UTLREAD if VFMQ = "Q" quit
	
	lock +ACN(CID):2 else  set ET = "RECLOC" do ERR quit 

	quit 
	
ERR	

	type public Boolean ER
	
	set ER = 1
	do ^UTLERR
	set VFMQ = "Q"
	
	quit 
	
VER	
	if %ProcessMode = 2 ! (%ProcessMode = 4) ! (VFMQ = "Q") do END quit
	
	do FILE
	do END
	
	quit
	

FILE	// File data

	type public Number CID

	type RecordLN ln = Db.getRecord("LN", "CID=:CID")

	do CALC(.ln, "1101")
	do END
	
	quit

	
END	

	type public Number CID
	type public Boolean ER
	type public String ER
	
	if ER quit
	
	set CID = CID.get()
	
	// Account ~p1 not modified
	if VFMQ = "Q" set RM = $$^MSG(135, CID)
	// Account ~p1 modified
	else  set RM = $$^MSG(122, CID)
	
	quit 
	

CID	// Post processor to CID prompt

	set %EXT=1 do ^UACN quit:ER 

	type Boolean NOERR = 0	// No error indicator
	type Number SCHSEQ = ""
	
	type RecordLN ln = Db.getRecord("LN","CID")
	
	type ResultSet rs = Db.select("SCHSEQ,CDPD","LNBIL1","CID=:CID AND CDPD=:ln.schld","SCHSEQ DESC")

	while rs.next() do { quit:NOERR

		if rs.getCol("CDPD") = ln.schld set NOERR = 1 quit

		set SCHSEQ = rs.getCol("SCHSEQ")
		}

	quit:NOERR
	
	if SCHSEQ - ln.schseq = 0 quit
	
	// Scheduled sequence value not supported by bills
	do Runtime.setErrMSG("LNBIL1", 2456)

	quit

	
EXEC(RecordLN ln)

	// Initializes data, Calculates new values, Files

	do CALC(.ln, "1011")

	quit 

	
EXEC1(RecordLN ln)

	// Initialization done elsewhere, Calculates values, Files

	do CALC(.ln, "0011")
	
	quit
	

public	CALC(RecordLN ln, String CTL)

	/*
	Access Line Tag
	
	   Arguments:	
	          . CTL Control parameter
	            Position 1 - Init arrays from disk
		     2 - Update ln
		     3 - Modify UX
	             4 - File to disk
	             5 - Init variables only
	*/
	
	type public Boolean ER

	// Calculate ACN values based upon ^BIL
	do ^LNPTS(.ln) quit:ER

	if CTL.extract(4) do ln.bypassSave()

	quit 
 #OPTION ResultClass ON
Public String vSIG()	quit "60822^64270^Irina Kin^3756"	// Signature - LTD^TIME^USER^SIZE
