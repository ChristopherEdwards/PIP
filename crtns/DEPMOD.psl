DEPMOD
 /*
    ORIG: GRAY - 01/21/2000
    DESC: Deposit Modeler
    
    ---- Comments --------------------------------------------------------
	
	       FIN(1)  = PMT - Periodic Payment
	       FIN(2)  = PV  - Present Value
	       FIN(3)  = NP  - Number of compounding periods
	       FIN(4)  = FV  - Future Value
	       FIN(5)  = IRN - Nominal Interest Rate
	       FIN(6)  = ANS - Computed Answer
	       FIN(8)  = PFRE - Transaction Frequency
	       FIN(9)  = EAY - Effective Annual Yield
	       FIN(10) = ODT - Date Opened
	       FIN(11) = CFRE - Compounding Frequency
	       FIN(20) = IACM - Interest Accrual Method
	       FIN(21) = BUSOPT - Business Date Option
	       FIN(22) = NBDC - Non-Business Date Calendar
	       FIN(23) = TYPE - Product Type - REQUIRED
    
    ---- Revision History ------------------------------------------------

	03/14/07 - KumarSS - CR 25177
	   	   Removed Invalid Unicode Characters.

	07/28/06 - KELLYP - CR 22048
		   Modified IRNI, PMTI, and IRNO1 sections to eliminate
		   PRECEDENCE warnings.

	02/24/06 - S.Krishnan - 19756
		   Modified "do EXIT quit" at the end of the EXT section to 
	           "quit $$EXIT" and also modified the label of the section 
	           EXIT to EXIT().

	10/18/05 - S.Krishnan - 16885
		   . Eliminated PSL Deprecated features and warnings.
		   . Passed "1" as third parameter to db.getRecord().
		   
	11/01/02 - JERUCHIMC - 51283 
		   Remove fix of 10/8/1.  Make TYPE a
		   required input in the FIN array.

	10/08/01 - JERUCHIMC - 51239 
		   Retrofit CR 1187.  In section EXT, do not new type,
	           and only set it from FIN(23) if FIN(23) has a value.
		   This corrects a flaw that was originated during PSL
	           conversion.

	05/04/01 - DIMAGMALIWG - 44252
	           Bug fix for the error in calculating the future values
	           using the Quarterly and Monthly compounding frequencies
	           Added code to PMTI to ignore the rest of the script
	           when the PAF is equal to CAF, to avoid changing the terms
	           Added code to PMTI1 to compensate for the fractional
	           discrepancy in the adjusted payment and payment frequency
	           Added code to EXIT, to quit with FIN(6)

	03/12/01 - HALPINJ - 43452
		   Modified EXT section to set BUSOPT and NBDC from FIN.
		   This was causing errors in TRMO.  Also added code
		   to TRMC to fix a problem when using a quarterly compounding
		   frequency.

	01/12/01 - ESTERLYP - 43469 (roll forward of 42289)
		   Includes 42289:003.
		   Modify ERR quits to pass argument.
                   EXT section, add processing for Cumulative Deposits.
                   Define TYPE when coming from MRPC045 and DEPMOD1.   	
		   Define NBDC,BUSOPT at top to prevent errors.

	12/08/99 - GRAY - 32507
		   Removed code no longer needed due to the Elimination
		   of Teller/Branch Character Interface and placed remaining
		   code into PSL'd procedure definition.

 */
	
	quit
	
	
Public EXT(FIN)	// External call from MRPC045
	
	/*
	  FIN:  values 0<n<100    are for display.
	        values 100<n<1000 are true values of those less than 100.  i.e.
	                          the true value of "1Y" which is in FIN(3) is
	                          365 if the compounding frequency is "1DA".
	                          365 is stored in FIN(103).
	        values 1000<n     are the values used for internal calculations.
	*/
	
	catch error {
		}
	
	new A,AAF,AF,ANS,BUSPOPT,CAF,CNTR,D,DEC,DEP,E,EXP,F,F1,FRE,FV,I,I2,I3
	new I6,IACM,IAFA,IAFS,IR,IRN,JD,MARG,MDT,N,NBDC,NJD,NP,NUM,ONOF,P,PAF
	new PMT,PTCAL,PV,STD
	
	set (PTCAL,CNTR,ER,RM,NP,IRN,PV,PMT,FV,IR)=""
	
	for I=23,103,105,1003,1005 set FIN(I)=$G(FIN(I))
	
	if FIN(3)'="" set NP=FIN(103)
	if FIN(5)'="" set IRN=+FIN(5),IR=IRN/100
	if FIN(2)'="" set PV=+FIN(2)
	if FIN(1)'="" set PMT=+FIN(1)
	if FIN(4)'="" set FV=+FIN(4)
	
	/*
	If the first four fields have values, force an initialization
	of the future value field.
	*/
	if NP'="",IRN'="",PV'="",PMT'="" set (FIN(4),FV)=""

        

        // Process Cumulative Deposits
	new CRCD,CUMDEP,TYPE
	set TYPE=FIN(23)

	type RecordPRODDFTD proddftd=Db.getRecord("PRODDFTD","TYPE")
	set CUMDEP=proddftd.cumdep
	set CRCD=proddftd.crcd

        if CUMDEP set (FIN(4),FV,FIN(6))=$$CUMDEP(.FIN,IRN,PV,PMT,CRCD) if ER do ERR quit FIN(6)
        if CUMDEP quit FIN(6)
	
	set IACM=FIN(20)
	
	/*
	Determines the value of CNTR.  CNTR is used to determine which values
	were input by the user.  The DEPMOD screen requests 4 of 5 components
	(PMT,PV,NP,FV,IRN).  The 5th item is null.  By assigning a value to
	each component based on a power of 2, we can associate a value with a
	particular calculation.  See the line tag "CAL" for valid formulas and
	"ERCK" for invalid combinations.  A null value is the item to be
	calculated.  The reason that we are checking for > and < than zero, is
	that some formulas can do without a certain value.  For example, rate
	may be calculated with formulas 4 and 5 in ^DEPCALC.  Formula 4 uses a
	payment amount and 5 doesn't.  When the routine determines that 5
	should be used, the value of PMT is 0, not null.
	*/
	
	if (FIN(1)>0)!(FIN(1)<0) set CNTR=CNTR+8		// Sets PMT
	if (FIN(2)>0)!(FIN(2)<0) set CNTR=CNTR+1     		// Sets PV
	if (FIN(3)>0)!(FIN(3)<0) set CNTR=CNTR+16		// Sets NP
	if (FIN(4)>0)!(FIN(4)<0) set CNTR=CNTR+2		// Sets FV
	if (FIN(5)>0)!(FIN(5)<0) set CNTR=CNTR+4		// Sets IRN
	
	if FIN(1)="" set FIN(101)="",FIN(1001)=""
	if FIN(2)="" set FIN(102)="",FIN(1002)=""
	if FIN(3)="" set FIN(103)="",FIN(1003)=""
	if FIN(4)="" set FIN(104)="",FIN(1004)=""
	if FIN(5)="" set FIN(105)="",FIN(1005)=""

	set BUSOPT=FIN(21)
	set NBDC=FIN(22)
	set FIN(111)=FIN(11)		// Internal value of ICF
	
	// I18N=OFF
	if FIN(3)'="" do { if ER do ERR quit FIN(6)
		/*
		Verify that the compounding frequency occurs more frequently
		than the term.  If the compounding is less frequent than the
		term, then redefine the compounding frequency to be the term
		and use the term to compute NP.
		*/
		new ODT,TRM,TAF,TFRE,FRE,JD
		set ODT=FIN(10)
		set TRM=FIN(3)
		set MDT=$$EXT^UMDT(TRM,ODT,0,BUSOPT,NBDC) if ER quit
	
		// Determine the term's frequency to be in days.
		set FRE=(MDT-ODT)_"DA",TFRE=FRE
		set JD=ODT
		set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER
		set TAF=AF		// The term annual factor
	
		set FRE=FIN(11)		// Find the AF of the compounding freq.
		set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER
		if TAF>AF set FRE=TFRE,FIN(111)=FRE
	
		set NP=+$$TRMC(FRE,FIN(3),FIN(10),IACM,1)
		set (FIN(103),FIN(1003))=NP
		}
	
	// I18N=ON
	if FIN(2)'="" set PV=+FIN(2),(FIN(102),FIN(1002))=PV
	if FIN(4)'="" set FV=+FIN(4),(FIN(104),FIN(1004))=FV
	if FIN(5)'="" set (FIN(105),FIN(1005))=FIN(5) do IRNI(FIN(111))
	if FIN(1)'="" set PMT=+FIN(1),(FIN(101),FIN(1001))=PMT
	
	do ERCK if ER do ERR quit FIN(6)
	if PMT do PMTI if ER do ERR quit FIN(6)
	do CAL if ER do ERR quit FIN(6)
	quit $$EXIT
	
EXIT()
	
	if $G(PTX) quit FIN(6)
	if D set FIN(6)=$$^SCARND(FIN(6),0,"","",D)
	quit FIN(6)
	
ERR	
	
	if ER=2 set ER=0 quit
	set ER=1,FIN(6)=""
	quit
	
CALC	// Calculate the value which was null
	
	set FIN(6)=$$^DEPCALC(F,NP,FIN(1005),FIN(1002),FIN(1001),FIN(1004),DEC)
	set FIN(1005)=FIN(105)
	quit
	
TRMC(FRE,TRM,DT,IACM,FRAC)	// Convert frequencies to #payments based on term
	
	new JD,ODT,Y
	set FRAC=$G(FRAC) if 'FRAC set FRAC=1
	set JD=DT do UFRE if ER quit 0
	set ODT=DT set MDT=$$EXT^UMDT(TRM,ODT,0,BUSOPT,NBDC) if ER quit 0
	set Y=IAFS if $E(IACM) set Y=IAFA
	set STD=MDT-ODT    

	/* 
	If using a quarterly compounding frequency and the open date entered
	is within the 2nd or 3rd month, need to get maturity date of next
	quarterly period in order to get an accurate number of payments based
	on that frequency.  Using 60 as an average number of days to represent
	2 months.
	*/
	
	if $$FREC(TRM)="Q",(STD<60) do {		// JMH - 03/09/01
		set ODT=MDT+1 set MDT=$$EXT^UMDT(TRM,ODT,0,BUSOPT,NBDC) if ER quit 0
		set STD=MDT-ODT	
	}

	quit $$^SCARND((STD/365*AF*Y/IAFA*FRAC),0,"","",12)
	
FREC(F)		// Convert standard PROFILE frequency to term
	
	// Returns 2nd part of frequency (eg. 1MAE -> M)
	
	new X
	for  set X=$E(F) quit:X?1A  set F=$E(F,2,999)
	for  set X=$E(F,$L(F)) quit:X?1A  set F=$E(F,1,$L(F)-1)
	for  quit:"ANPE"'[$E(F,$L(F))  set F=$E(F,1,$L(F)-1)
	quit F
	
FREC2(F)	// Convert standard PROFILE frequency to term 
	
	/*
	This is used when calculating payments.  
	Returns first 2 parts of frequency (eg. 1MAE -> 1M)
	*/
	
	new X
	for  set X=$E(F,$L(F)) quit:X?1A!(X="")  set F=$E(F,1,$L(F)-1)
	if F'="" for  quit:"ANPE"'[$E(F,$L(F))  set F=$E(F,1,$L(F)-1)
	quit F
	
Public IRNI(CFRE)	// Restate rate based upon compounding freq
	/*
	  remember:  TRM/RATE
	
	  ARGUMENTS:
	 	. CFRE - Compounding Frequency
	
	  The value of FIN(5) must be adjusted to compensate for 365/360 days
	  basis.
	*/
	
	new JD,FRE,Y
	set JD=FIN(10),FRE=CFRE do UFRE quit:ER
	set Y=$$DY^UIC(1_('$E(IACM,2)),JD)
	set FIN(105)=FIN(5)/AF*Y/36000
	
	// Calculate continuous
	if $E(IACM)=2 set FIN(105)=($$EXP^%ZFUNC(FIN(105)/100)-1)*100,DEC=18
	set FIN(1005)=FIN(105)
	quit
	
PMTI	// Convert compounding frequency to deposit/withdrawal frequency
	
	if CNTR=19!(CNTR>24&(CNTR<27)) set NP=$$TRMC(FIN(8),FIN(3),FIN(10),$S(FIN(8)["M":"0"_$E(IACM,2),1:IACM),1) quit
	new CNTR,I,TRM,FRE,F
	
	set JD=FIN(10)
	set FRE=FIN(8) 
	if FRE'="" do {
		do UFRE set (SVPAF,PAF)=AAF       // PMT FREQ
		set TRM=$$FREC2(FRE)
		}
	set FRE=FIN(111) do UFRE set CAF=AAF      // CMP FREQ

	if PAF=CAF quit                           // ARQ44252	
	if PAF>CAF do PMTI1 quit
	
	// FRE=CMP FREQ, TRM=PMT FREQ
	set NP=$$TRMC(FRE,TRM,JD,$E(IACM)_"0",1)*FIN(8)
	
	set I=($$^DEPCALC("F3",NP,FIN(1005),10000,0,"",18)-10000)*PAF+10000
	set FIN(1005)=$$^DEPCALC("F5",1,"",10000,0,I,18)/PAF/100
	set FRE=FIN(8),TRM=FIN(3)
	set NP=$$TRMC(FRE,TRM,JD,$S(FRE["M":"0"_$E(IACM,2),1:IACM),1),FIN(1003)=NP
	quit
	
PMTI1	//
	/*
	  Convert payment amount and frequency for compounding less frequent
	  than payment frequency.  This corrects for the situation where
	  payments are made at a frequency which is more often than the
	  compounding frequency.  In that case the internal value of the payment
	  (FIN(101)) is increased to be the equaivalent to what it would be
	  if it were paid at the compounding frequency.  
	
  	  The formula to do this is PMT * PaymentAF / CompoundingAF
	
	  In order to make this calculation work, the beginning balance (for
	  FV calculations) and the ending balance (for PV calculations) must
	  be modified.
	
	  The formula to do this is:
	 
	     PMT * PaymentAF / CompoundingAF / 2 - (PMT / 2)
	 
	  Consider the following example where an account has a the beginning
	  balance of $1,000 and receives monthly $100 deposits at the end of
	  the month.  Interest is compounded semi-annually at a nominal annual
	  rate of 26% (IACM=00).  This example reflects the way that PROFILE
	  would process the account:
	
	  Mth     Pmt     Beg Bal EOP ACR  ACR Bal  Int Pd  End Bal
	 
	   1   100.00    1,000.00   21.67    21.67    -    1,100.00 
	   2   100.00    1,100.00   23.83    45.50    -    1,200.00 
	   3   100.00    1,200.00   26.00    71.50    -    1,300.00 
	   4   100.00    1,300.00   28.17    99.67    -    1,400.00 
	   5   100.00    1,400.00   30.33   130.00    -    1,500.00 
	   6   100.00    1,500.00   32.50   162.50  162.50 1,762.50 
	   7   100.00    1,762.50   38.19    38.19    -    1,862.50 
	   8   100.00    1,862.50   40.35    78.54    -    1,962.50 
	   9   100.00    1,962.50   42.52   121.06    -    2,062.50 
	   10  100.00    2,062.50   44.69   165.75    -    2,162.50 
	   11  100.00    2,162.50   46.85   212.60    -    2,262.50 
	   12  100.00    2,262.50   49.02   261.63  261.63 2,624.13 
	 
	  Tot 1,200.00 	           424.13           424.13 
	 
	  Now, consider how the modeler must compute this same scenario using
	  standard formulas, which don't distinguish between compounding and
	  payment frequencies - the formulas assume that compounding occurs at
	  the time that paymnets are applied.
	
	  In these examples, interest is really based upon the average balance
	  in each interest compounding period.  The assumption of the modeler
	  is that payments are made in arrears (at the end of each period).  In
	  the above example, the average balance in the first period is $1,250
	  and in the second period it is $2,012.50.  It's those balances that
	  the $162.50 and $261.63 interest amounts are based on, even though
	  interest is computed more often than semi-annually.
	  
	  In this example, note that the beginning balance was increased by
	  $250 to account for the average of five months that we were making
	  $100 deposits.  The final balance ($2624.13) is determined as follows:
	  
	  Prior month + payment + interest - balance adjustment = ending balance
	 
	  $2,012.50 + 600.00 + 261.63 - 250.00 = $2,624.13
	 
	   Mth   Pmt      Beg Bal EOP ACR  ACR Bal  Int Pd  End Bal
	   1      -      1,250.00   27.08    27.08    -    1,250.00 
	   2      -      1,250.00   27.08    54.17    -    1,250.00 
	   3      -      1,250.00   27.08    81.25    -    1,250.00 
	   4      -      1,250.00   27.08   108.33    -    1,250.00 
	   5      -      1,250.00   27.08   135.42    -    1,250.00 
	   6   600.00    1,250.00   27.08   162.50  162.50 2,012.50 
	   7      -      2,012.50   43.60    43.60    -    2,012.50 
	   8      -      2,012.50   43.60    87.21    -    2,012.50 
	   9      -      2,012.50   43.60   130.81    -    2,012.50 
	   10     -      2,012.50   43.60   174.42    -    2,012.50 
	   11     -      2,012.50   43.60   218.02    -    2,012.50 
	   12  600.00    2,012.50   43.60   261.63  261.63 2,624.13 
	  Tot 1,200.00              424.13           424.13
	 
	  Conversely, when the present value of this account is being
	  determined, we'll add $250 to the FV before making the calculation
	  and we'll subtract $250 from the computed PV.

	*/ 
	
	new P,T,X
	set PTCAL=1
	
	// Find the term component of CFRE
	set T=$$FREC(FIN(111))
	
	// Compute the number of payments in one compounding period
	//set X=$$TRMC(FIN(8),+FIN(111)_T,FIN(10),$E(IACM)_"0",1)\1// replaced by
	set X=$$TRMC(FIN(8),+FIN(111)_T,FIN(10),$E(IACM)_"0",1)    // ARQ44252
	if ((PAF/CAF)=((PAF/CAF)\1)) set X=$$^SCARND(X,0,,,0)      // ARQ44252 added
	
	// Determine the adjusted pmt amount
	set P=(FIN(1)*PAF/(PAF/X))
	set FIN(1001)=P
	
	// Compute the adjustment to PV
	set FIN(1002)=FIN(1002)+(P/2-(FIN(1)/2))
	set PAF=CAF
	quit
	
PMTO	// Convert computed pmt amount to pmt based on pmt freq
	set NP=$$TRMC(FIN(111),FIN(3),FIN(10),IACM,1),FIN(1003)=NP
	
	// Convert payment amount due to more frequent payments than compounding
	if $G(SVPAF)="" quit
	if SVPAF'>CAF quit
	
	new F,I,N,P
	set N=NP/CAF*SVPAF		// convert # pmts to pmt freq
	set I=FIN(1005)*CAF/SVPAF	// convert rate to pmt freq
	
	/*
	Find the PV portion of the FV.  When we're computing the payment 
	amount we need to separate the future value of the present value in
	order to find the future value of the payment series.  For example,
	consider the sample listed at line tag PMTI1.  In this case there
	is a PV of $1,000 and an FV of $2,624.13 resulting from monthly
	payments of $100.  Because of the $1,000 PV, $1,276.90 of the FV is
	attributable from the PV.  That means that $1,347.23 of the $2,624.13
	is related to the payments.  "F" as used here represents the future
	value of the payments.
	*/
	set F=FIN(1004)-$$^DEPCALC("F3",NP,FIN(1005),PV,0,"",DEC)
	
	/*
	"P" represents the payment which will equal "F" when collected NP
	times with a PV of zero.  Note that "P" is based on the compounding
	frequency, not the payment frequency.
	*/
	set P=$$^DEPCALC("F2",NP,FIN(1005),0,"",F,DEC)
	
	/* 
	The answer is computed by finding out what the payment amount must
	be to obtain a value of P.  Note that the answer is based on the
	payment frequency.
	*/
	set FIN(6)=$$^DEPCALC("F2",(SVPAF/CAF),I,0,"",P,DEC)
	quit
	
PVI 	//
	/*
	If PMT and differing PMT freq and compounding freq, adjust FV (see
	info in PMTI1).
	*/
	if $G(SVPAF)="" quit
	if SVPAF'>CAF quit
	
	// Compute the adjustment to FV
	set FIN(1004)=FIN(1004)+((FIN(1)*SVPAF/CAF/2)-(FIN(1)/2))
	quit
	
PVO	// 
	// Convert present value due to more frequent payments than compounding
	if $G(SVPAF)="" quit
	if SVPAF'>CAF quit
	
	// Decrement the computed answer by the adjustment to PV (see PMTI1).
	set FIN(6)=FIN(6)-((FIN(1)*SVPAF/CAF/2)-(FIN(1)/2))
	quit
	
IRNO	// Convert calculated rate to annual
	set JD=FIN(10),FRE=FIN(111)
	if 'PMT do IRNO1 quit
	
	set NP=FIN(1003)
	do IRNO1 quit

IRNO1	
	/* 
	The value of IRN must be adjusted to compensate for 365/360 days
	basis.
	*/
	do UFRE
	set Y=$$DY^UIC(1_('$E(IACM,2)),JD)
	set FIN(6)=$$^SCARND((IRN*AF*360/Y),0,"","",5)
	set FIN(1005)=FIN(6)/AF*Y/36000
	quit
	
TRMO	// Convert calculated term to PROFILE term
	// Term cannot be determined
	if 'FIN(6) set ER=1,RM=$$^MSG(2626) quit
	if PMT do TRMP
	set FIN(103)=NP,FRE=FIN(111)
	set X=$$FREC(FRE)
	if '$E(IACM),X="D" set FIN(6)=FIN(6)*365/360
	if +FRE set FIN(6)=FIN(6)*FRE
	set TRM=$$^SCARND((FIN(6)+.25),0,"","",0)_X
	set ODT=FIN(10) set MDT=$$EXT^UMDT(TRM,ODT,0,BUSOPT,NBDC)
	set X=$$DD^SCADAT(ODT,MDT)
	set M=+X,D=$P(X,"/",2),Y=$P(X,"/",3)
	set FIN(6)=""
	if Y set FIN(6)=Y_"Y"
	if M set FIN(6)=FIN(6)_M_"M"
	if D set FIN(6)=FIN(6)_D_"D"
	quit
	
TRMP	// Handle special TRM/PMT considerations
	
	if '$G(PTCAL) set NP=$$TRMC(FIN(11),FIN(3),FIN(10),$E(IACM)_"0",1)*FIN(8),FIN(6)=FIN(6)*NP quit
	
	if $G(SVPAF)'="",SVPAF>CAF set NP=FIN(6)/CAF*SVPAF quit
	
	set T=+FIN(11)_$$FREC(FIN(11))
	set NP=$$TRMC(FIN(11),T,FIN(10),$E(IACM)_"0",.5) ;*FIN(8)
	set FIN(6)=FIN(6)*NP
	quit
	
FVI	// 
	/*
	Convert future value Iinput due to more frequent payments than
	compounding.
	*/
	if $G(SVPAF)="" quit
	if SVPAF'>CAF quit
	
	// Add in the additional payment.
	new I,P
	set P=FIN(101)*(SVPAF/CAF/2)-(FIN(1)/2)
	set FIN(1004)=FIN(1004)+P
	quit
	
FVO	//
	/*
	Convert future value outpput due to more frequent payments than
	compounding.
	*/
	if $G(SVPAF)="" quit
	if SVPAF'>CAF quit
	
	// Back off the additional payment added
	set FIN(6)=FIN(6)-(FIN(101)*(SVPAF/CAF/2)-(FIN(1)/2))
	quit
	
Public EAY()	// Determine Effective Annual Yield
	
	if 'FIN(1005) quit 0
	new X,D,F,IR
	set IACM=FIN(20),FRE=FIN(111),JD=FIN(10) do UFRE if 'IAFA quit 0
	set D=365 if '$E(IACM) set D=360
	
	set F=$$^DEPCALC("F3",(D/IAFA),FIN(1005),10000,0,"",18)
	quit $$^DEPCALC("F5",1,"",10000,0,F,18)
	
Public UFRE	// Calculate frequency
	
	set NUM=1
	if FRE-1 set SVFRE=FRE,NUM=+FRE,FRE=1_$P(FRE,NUM,2,999)
	set NJD=$$NJD^UFRE(JD,FRE,.AF) quit:ER
	set AAF=AF/NUM
	set X=FRE if +X set X=$P(X,+X,2)
	set X=$E(X)
	set AF=365/(365/AF)
	if X="D" do U2 quit
	do U2 quit
	
U2	// 
	/*
	IAFA = Inverse actual annual factor
	IAFS = Inverse standard annual factor
	*/
	set IAFS=360/AF*NUM
	set IAFA=365/AF*NUM
	if NUM-1 set FRE=SVFRE,AF=AF/NUM
	quit
	
CAL	// Distributes to proper formula based on CNTR.
	
	set ER=0,RM="",DEC=17
	
	// Calculates PV where: PMT,IRN and NP are defined and FV is variable.
	if CNTR=22,FIN(101)=0 set F="F1" do CALC,PVO set FIN(102)=FIN(6),D=2 quit
	if CNTR=28,FV=0 set F="F1" do CALC,PVO set FIN(102)=FIN(6),D=2 quit
	if CNTR=30 set F="F1" do PVI,CALC,PVO set FIN(102)=FIN(6),D=2 quit
	
	// Calculates PMT where: IRN, NP and PV are defined and FV is variable.
	if CNTR=21,FV=0 set F="F2" do PMTI,CALC,PMTO set FIN(101)=FIN(6),D=2 quit
	if CNTR=22,PV=0 set F="F2" do PMTI,CALC,PMTO set FIN(101)=FIN(6),D=2 quit
	if CNTR=23 set F="F2" do PMTI,CALC,PMTO set FIN(101)=FIN(6),D=2 quit
	
	// Calculates FV where: PMT,IRN and NP are defined and PV is variable.
	if CNTR=28,PV=0 set F="F3" do CALC,FVO set FIN(104)=FIN(6),D=2 quit
	if CNTR=29 set F="F3" do CALC,FVO set FIN(104)=FIN(6),D=2 quit
	
	/*
	Calculates IRN through iterative process where PMT,FV,PV and NP are
	defined.
	*/
	if CNTR=25 set F="F4" do CALC,IRNO set D=5 quit
	if CNTR=26 set F="F4" do CALC,IRNO set D=5 quit
	if CNTR=27 set F="F4" do PVI,CALC,IRNO set D=5 quit
	
	// Calculates IRN where PV,FV, and NP are defined and PMT is undefined.
	if CNTR=19,FIN(101)=0 set F="F5" do CALC,IRNO set D=5 quit
	
	// Calculates NP where PMT,PV and IRN are defined and FV is variable.
	if CNTR=7,FIN(101)=0 set F="F6" do CALC,TRMO set D=0 quit
	if CNTR=13,FV=0 set F="F6" do CALC,TRMO set D=0 quit
	if CNTR=14,PV=0 set F="F6" do CALC,TRMO set D=0 quit
	if CNTR=15 set F="F6" do FVI,CALC,TRMO set D=0 quit
	
	// Calculates FV where PV,IRN and NP are known and PMT is undefined.
	if CNTR=21,FIN(101)=0 set F="F7" do CALC,FVO set FIN(104)=FIN(6),D=2 quit
	
	quit

ZT	// Calculation cannot be completed
	
	set ER=1,RM=$$^MSG(403),FIN(6)=""
	quit
	
	
ERCK	// Classifies impossible calculations
	set ER=0,RM=""
	
	// Designate value to be calculated
	if NP'="",IRN'="",PV'="",PMT,FV'="" set ER=1,RM=$$^MSG(812) quit
	
	// Exclude valid calculations
	if CNTR=22,PMT=0 quit
	if CNTR=28,FV=0 quit
	if CNTR=30 quit
	if CNTR=21,FV=0 quit
	if CNTR=22,PV=0 quit
	if CNTR=23 quit
	if CNTR=28,PV=0 quit
	if CNTR=29 quit
	if CNTR=25 quit
	if CNTR=26 quit
	if CNTR=27 quit
	if CNTR=19,PMT=0 quit
	if CNTR=7,PMT=0 quit
	if CNTR=13,FV=0 quit
	if CNTR=14,PV=0 quit
	if CNTR=15 quit
	if CNTR=21,PMT=0 quit
	
	// Check Errors
	if '(PV-FV)&(CNTR=19!(CNTR>24&(CNTR<28))) set ER=2,FIN(6)=0 quit
	
	if CNTR=7,PMT="" do ZT quit
	if CNTR=11 do ZT quit
	if CNTR=13,FV="" do ZT quit
	
	// Set initial deposit to zero
	if CNTR=14,PV="",NP="" set ER=1,RM=$$^MSG(2502) quit
	
	if CNTR=19,IRN=0 do ZT quit
	
	// Set future value or payment to zero
	if CNTR=21,FV="",PMT="" set ER=1,RM=$$^MSG(2500) quit
	// Set payment or initial deposit to zero
	if CNTR=22,PMT="",PV="" set ER=1,RM=$$^MSG(2503) quit
	// Set future value to zero
	if CNTR=25,FV="",IRN="" set ER=1,RM=$$^MSG(2501) quit
	// Set initial deposit to zero
	if CNTR=26,PV="",IRN="" set ER=1,RM=$$^MSG(2502) quit
	// Set future or initial deposit to zero
	if CNTR=28,FV="",PV="" set ER=1,RM=$$^MSG(2499) quit
	
	do ZT
	quit
	
Public FRECK	// Check for standard PROFILE frequency

	// Called by screen DEPMOD field post-processor and routine MRPC045
	
	new SX,F
	set ER=0
	
	if X="" quit
	set (SX,F)=X
	
	type RecordUSRFRE usrfre=Db.getRecord("USRFRE","UFRE=:F",1)
	if usrfre.getMode() do {
		if 'usrfre.fre="" set (X,F)=usrfre.fre
		}
	// ~p1 translates to ~p2
	if  set ER="W",RM=$$^MSG(3085,SX,F)
	
	if +F set F=$P(F,+F,2)
	if "DWMYQ"[$E(F) quit
	
	// Must be standard PROFILE frequency (D,W,M,Y or Q)
	set ER=1,RM=$$^MSG(1818)
	quit

CUMDEP(FIN,IRN,PV,PMT,CRCD)	// Processing for Cumulative Deposits
	
	new BUSOPT,CMPAF,FV,INT,JD,NBDC,PR,SCHDEPN
	set FV=""

	// Initial deposit must equal transaction amount for cumulative deposit product
	if PV'=PMT set RM=$$^MSG(4693)  set ER=1 quit FV
	
	// Transaction frequency required for cumulative deposit product
	if FIN(8)="" set RM=$$^MSG(4692) set ER=1 quit FV

	// Modeler only computes future values for cumulative deposit product
	if (PV="")!(IRN="")!(FIN(3)="")!(PMT="") set RM=$$^MSG(4691) set ER=1 quit FV
	
	// Cumulative deposits must always be calculated on a monthly calendar basis
	set (BUSOPT,NBDC)=""

	// Accrual method is always "11" actual/actual for cumulative
	set IACM=11

	// Needed to calculate EAY - Effective Yield
	set JD=$$NJD^UFRE(FIN(10),FIN(11),.CMPAF) if ER set RM=$$^MSG(403) quit FV
	set FIN(1005)=IRN/(CMPAF*100)
	set FIN(111)=FIN(11)
	
	//  Find number of deposits - # of transactions frequencies in term
	set SCHDEPN=$$TRMC(FIN(8),FIN(3),FIN(10),IACM,1) if ER set RM=$$^MSG(403) quit FV

	// Partial deposits not allowed for Cumulative - round to whole number
	set SCHDEPN=$$^SCARND(SCHDEPN,"","","",0,"") if ER set RM=$$^MSG(403) quit FV

	// Interest calculation for scheduled deposits
	set INT=$$CALC^UACRIND(FIN(8),FIN(11),IRN,PMT,FIN(10),SCHDEPN) if ER set RM=$$^MSG(403) quit FV
	
	// Principal
	set PR=SCHDEPN*PMT

	// Future Value
	set FV=PR+INT
	set FV=$$^SCARND(FV,"","",CRCD) if ER set RM=$$^MSG(403) quit FV

	quit FV
 #OPTION ResultClass ON
Public String vSIG()	quit "60703^23139^Sudanthiran S. Kumar^23193"	// Signature - LTD^TIME^USER^SIZE
