public UMDT
	/*
	Procedure ID: UMDT
	DESC: CALCULATE MATURITY DATE

	Given a julian starting date and a valid Profile term, a julian
	maturity date is calculated.
	
	Terms are comprised of two separate components (A_B).  These
	components are defined below.
	
	A = Multiple associated with the period.
	
	B = The period.  Acceptable values are:
	
		D = Daily
		W = Weekly
		M = Monthly
		Y = Yearly
		Q = Quarterly
	
	Examples of AB combinations:
	
		182D = 182 days
		2W = two weeks
		1M = one month
		3Y = three years
		1Q = one quarter
	
	It is also possible to have ABABAB combinations.  Therefore, 2Y4M2W3D
	is a valid term.

	LIBRARY:  
		. TOP	- The julian maturity date is returned.
			  Sample Calls: @LNN006 - Create New Mortgage
			  (^LNNEW)
		. NEW   - The julian maturity date is calculated, filed
			  into the DEP (deposit account) array, and UX
			  (DATA-QWIK maintenance) array is updated.
			  Sample Calls: @DEP018 - Certificate Rollover
			  Maintenance (^DEPSTS, screen "ROLLOVR")
		. ROLL  - The julian maturity date is calculated, filed
			  into the ROLL (deposit account rollover) array,
			  and UX (DATA-QWIK maintenance) array is updated.
			  Sample Calls: @DEP018 - Certificate Rollover
			  Maintenance (^DEPSTS, screen "ROLLOVR")
		. $$EXT - The julian maturity date is returned.
		
	---- Revision History ------------------------------------------------
	
	08/02/06 - KELLYP - CR 22048
		   Modified CALC section to eliminate PRECEDENCE warning.
	
	03/22/06 - PUTTASWH - 19718
		   Deleted code in section ROLL that checks for ROLL array.
		   The same is addressed in ROLLOVER screen.
		   
	08/29/05 - KinI - 17030
		   Added "do TOP" to the top section as this utility is called
		   by the top section from multiple places. 
		   Added public tag to the top section.
	
	04/06/05 - KinI - 14385
		   Modified DIP section tag to be public.
	
  	10/14/02 - YENDAPALLIS - 43583
		   Cleaned up the procedure.  
	
	06/25/01 - ARCILLAZ - 43583
		   Converted to PSL. Removed old revision history.

	-----------------------------------------------------------------------
	*/
	
	do TOP
	
	quit
	
	
public TOP	// Compute maturity date

	/*
	   KEYWORDS: Date and Time, Deposits, Loans
	
	   INPUTS:
		. TRM	Profile Term				/TYP=T/REQ
			(See top of routine for samples)
	
		. ODT	Opening (or start) Date			/TYP=D/REQ
			The date that the account is opened.
	
		. %ADJ	Used to add an extra day.		/TYP=N/NOREQ
			(0 is default)
	
		Example: 3/31/87, 42M term:
			 If %ADJ=0, MDT=9/30/90
			 If %ADJ=1, MDT=10/1/90
	
		. TJD	Today's System Date (%SystemDate)	/TYP=D/REQ
	
		. BDO	Business Date Option
			A - Actual
			P - Previous business date
			N - Next business date
			("A" is default)
	
		. NBDC	Non-Business Date Calendar
			("IBS" is default)
	
	   RETURNS:
		. ER	Error flag
		. MDT	Maturity Date (in julian format)
		. STD	The number of days in the standard term specified,
			where:

			D = 1 day
			M = 30.4166666666667 days
			Y = 365 days
	
			for example, 6M = 182.5 days (6 * 30.416666666667).
			STD is used exclusively by deposit modeling.
	
	*/

	set (ER,MDT)=""

	if $G(TRM)="" quit 
	if $G(ODT)="" set ODT=%SystemDate
	if $G(BDO)="" set BDO="A"
	if $G(NBDC)="" set NBDC="IBS"
	
	do CALC 	

	quit


CALC	// Calculate maturity date

	//Invalid non-business date calendar
	if $G(NBDC)'="",'Db.isDefined("UTBLNBD","NBDC") set ER=1,RM=$$^MSG(2201) quit

	// First character of term may not be '0'
	if $E(TRM)=0 set ER=1,RM=$$^MSG(1113) quit

	// First character of term must be numeric
	if +TRM=0 set ER=1,RM=$$^MSG(1114) quit

	// Term must contain character D, W, M, Y or Q
	if TRM=+TRM set ER=1,RM=$$^MSG(2629) quit

	// Lowercase characters not allowed
	if TRM?.E1L.E set ER=1,RM=$$^MSG(1662) quit

	// Last character of term must be D, W, M, Y or Q
	if $E(TRM,$L(TRM))?1N set ER=1,RM=$$^MSG(2714) quit
	
	new D,DT,EOM,I,M,Q,W,X,Y,Z
	
	// Ensure that none of the term characters (D,W,M,Y,Q) are repeated
	for X="D","W","M","Y","Q" if $L(TRM,X)>2 set ER=1 quit

	// Invalid term syntax.  Refer to documentation.
	if ER set RM=$$^MSG(1493) quit        
	
	for I=1:1:$L(TRM) if '("DWMYQ"[$E(TRM,I)!($E(TRM,I)?1N)) set ER=1

	// Term may only contain characters D, W, M, Y or Q
	if ER set RM=$$^MSG(2628) quit
	
	// First character of quarter term must be 1,2,3, or 4
	if $E(TRM,2)="Q",$E(TRM)>4 set ER=1,RM=$$^MSG(3869) quit
	
	for I=1:1:$L(TRM) if $E(TRM,I,I+1)?2A set ER=1

	// Term cannot contain 2 consecutive letters
	if ER set RM=$$^MSG(2715) quit
	
	//  Initialize Counters
	set (D,M,W,Y,Q,STD)=0
	set X=TRM

	//  Find the Term Char
	for I=1:1:$L(TRM) do {				
		// Create temp. string for test
		set Z=$E(TRM,I)			
		// Is Term Char included here?
		if "DWMY"[Z do {		
			set @Z=@Z+X
			// Add to Term Char Cnt
			set X=$E(TRM,I+1,999)		
			set STD=STD+$S(D:D,M:((365/12)*M),W:(7*W),Y:(365*Y),1:365)
			}
		if "Q"[Z do {
			new M,X,Y
			set M=$$MON^SCADAT(ODT,1) 
			set X=($E(TRM)-1)*3 
			set Y=(((M-1)\3)+1)*3
			// Returns last day of quarter
			set NJD=$$ADDMJD^SCADAT($$BOYJD^SCADAT(ODT,1),(X+Y))-1
			set D=NJD-ODT
			}
		}

	// Weekly Counter	
	if W set D=D+(7*W)                     
	
	// Days offset only
	if D,'M,'Y set MDT=ODT+D do BDO quit   
	
	// Convert ODT to External
	set DT=$$DAT^%ZM(ODT,"MM/DD/YEAR")     
	
	// Increment months
	set $P(DT,"/",1)=$P(DT,"/",1)+M        
	
	// Account for months > 12
	if $P(DT,"/",1)>12 do {                
		set M=$P(DT,"/",1)
		set $P(DT,"/",3)=$P(DT,"/",3)+((M-1)\12)
		set M=M#12
		if M=0 set M=12
		set $P(DT,"/",1)=M
		}
	
	// Increment years
	set $P(DT,"/",3)=$P(DT,"/",3)+Y        
	
	// Make sure days has not gone
	set EOM=$$DIP(+DT,$P(DT,"/",3))
	
	// Beyond end-of-month
	if $P(DT,"/",2)>EOM set $P(DT,"/",2)=EOM       
	
	// Convert to julian, add days and adjustment
	set MDT=$$FDAT^%ZM(DT,"MM/DD/YEAR")+D+$G(%ADJ)
	
	// Invalid term syntax.  Refer to documentation.
	if MDT<1 do {
		set ER=1 
		set RM=$$^MSG(1493) 
		set MDT=""
		}

	do BDO

	quit 

	
public NEW(RecordDEP dep)  // New deposit account
	
	/*
	   Computes maturity date and files it to the DEP array.
	
	   KEYWORDS:   Date and Time, Deposits, Loans
	
	   INPUTS:
		. DEP	DEP array				/REQ
	
		. TRM	Profile Term				/TYP=T/REQ
			(See top of routine for samples)
	
		. ODT	Opening (or start) Date			/TYP=D/REQ
			The date that the account is opened.
	
		. %ADJ	Used to add an extra day.		/TYP=N/NOREQ
			(0 is default)
	
			Example: 3/31/87, 42M term:
				If %ADJ=0, MDT=9/30/90
				If %ADJ=1, MDT=10/1/90
	
		. TJD	Today's System Date (%SystemDate)	/TYP=D/REQ
	
		. BDO	Business Date Option
			A - Actual
			P - Previous business date
			N - Next business date
			("A" is default)
	
		. NBDC	Non-Business Date Calendar
			("IBS" is default)
	
	   RETURNS:
		. DEP	Updated DEP array
		. ER	Error flag				/TYP=N
		. MDT	Maturity Date (in julian format)	/TYP=D
		. STD	The number of days in the standard	/TYP=$
			term specified, where:
	
			D = 1 day
			M = 30.4166666666667 days
			Y = 365 days
	
			For example, 6M = 182.5 days (6 * 30.416666666667).
			STD is used exclusively by deposit modeling.
	
	*/

	// Date Account Opened
	set TRM=X
	set ODT=dep.odt              
	set NBDC=dep.nbdc
	set BDO=dep.busopt

	if ODT="" set ODT=%SystemDate
	
	do CALC if ER set MDT="" quit 

	if MDT'?5N quit 
	
	// Account Maturity Date
	if dep.mdt=MDT quit
	if $D(%ProcessMode),'%ProcessMode set UX("DEP","MDT")=dep.mdt_"|"_MDT_"|53|02"

	set dep.mdt=MDT
	set RM($O(RM(""),-1)+1)=$$DAT^%ZM(MDT,.%MSKD)_"|[DEP]MDT"

	quit 
	

public ROLL(RecordDEP dep)  // Rollover

	/*
	   Computes maturity date and files it to the ROLL array.
	
	   KEYWORDS:	Date and Time, Deposits, Loans
	
	   INPUTS:
		. ROLL	ROLL array					/REQ
	
		. TRM	Profile Term					/TYP=T/REQ
	                (See top of routine for samples)
	
		. ODT	Opening (or start) Date				/TYP=D/REQ
	                The date that the account is opened.
	
		. %ADJ	Used to add an extra day.			/TYP=N/NOREQ
			(0 is default)
	
			Example: 3/31/87, 42M term:
	                         If %ADJ=0, MDT=9/30/90
	                         If %ADJ=1, MDT=10/1/90
	
		. TJD	Today's System Date (%SystemDate)		/TYP=D/REQ
	
		. BDO	Business Date Option
	                A - Actual
	                P - Previous business date
	                N - Next business date
	                ("A" is default)
	
		. NBDC	Non-Business Date Calendar
	                ("IBS" is default)
	
	   RETURNS:
		. ROLL	Updated ROLL array
		. ER	Error flag					/TYP=N
		. MDT	Maturity Date (in julian format)		/TYP=D
		. STD	The number of days in the standard		/TYP=$
	                term specified, where:
	
	                D = 1 day
	                M = 30.4166666666667 days
	                Y = 365 days
	
	                for example, 6M = 182.5 days (6 * 30.416666666667).
	                STD is used exclusively by deposit modeling.
	
	*/

	// Account Maturity Date
	set TRM=X
	set ODT=dep.mdt
	set BDO=dep.busopt
	set NBDC=dep.nbdc   

	do CALC if ER set MDT="" quit 

	if MDT'?5N quit 	

	quit 
	

public EXT(TRM,ODT,%ADJ,BDO,NBDC)	// External entry point

	/*
	   Function to compute maturity date
	
	   KEYWORDS:	Date and Time, Deposits, Loans
	
	   ARGUMENTS:
		. TRM	Profile Term					/TYP=T/REQ
	                (See top of routine for samples)
	
		. ODT	Opening (or start) Date				/TYP=D/REQ
	                The date that the account is opened.
	
		. %ADJ	Used to add an extra day.			/TYP=N/NOREQ
	                (0 is default)
	
	                Example: 3/31/87, 42M term:
	                         If %ADJ=0, MDT=9/30/90
	                         If %ADJ=1, MDT=10/1/90
	
		. BDO	Business Date Option
	                A - Actual
	                P - Previous business date
	                N - Next business date
	                ("A" is default)
	
	 	. NBDC	Non-Business Date Calendar
	                ("IBS" is default)
	
	   INPUTS:
	   	. TJD	Today's System Date (%SystemDate)		/TYP=D/REQ
	
	   RETURNS:
	   	. ER	Error flag
	   	. MDT	Maturity Date (in julian format)
	   	. STD	The number of days in the standard term specified,
	                where:
	
	                D = 1 day
	                M = 30.4166666666667 days
	                Y = 365 days
	
	                For example, 6M = 182.5 days (6 * 30.416666666667).
	                STD is used exclusively by deposit modeling.
	
	   EXAMPLE:
	         S MDT=$$EXT^UMDT("1Y",TJD)
	
	*/

	if $G(TRM)="" set ER=1 quit ""
	if $G(ODT)="" set ODT=%SystemDate
	if $G(BDO)="" set BDO="A"              
	if $G(NBDC)="" set NBDC="IBS"          
	new MDT,X 
	
	do TOP
	
	quit MDT
	

public	DIP(M,Y)	// Compute Days in Period
	
	if M>12 do {
		set Y=(M\12)+Y
		set M=M#12
		}

	// February, Leap Year
	if (M=2) , (Y#4=0) , ((Y#100) ! (Y#400=0)) quit 29         

	quit ("31,28,31,30,31,30,31,31,30,31,30,31").piece(",",M)


BDO	//Business Date Option

	if "NP"[BDO,'$$BD^UNBD(MDT,NBDC) do { quit:ER
		if $G(BDO)="P" set MDT=$$PRBD^UNBD(MDT,1,NBDC)
		if $G(BDO)="N" set MDT=$$NBD^UNBD(MDT,1,0,NBDC)
		}

	quit 

	

vSIG()	quit "60479^60364^Pat Kelly^10511"	// Signature - LTD^TIME^USER^SIZE
