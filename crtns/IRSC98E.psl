IRSC98E		/*
	ORIG: titove - 11/02/2005
	DESC: IRS Processing - Form 1098-E Correction

	---- Comments --------------------------------------------------------
			  THIS PROCEDURE IS TO BE COMPILED
			      DO NOT RUN STANDALONE

	I18N=QUIT: Excluded from I18N standards.

	---- Revision History ------------------------------------------------

	03/14/07 - KumarSS - CR 25177
		   Removed Invalid Unicode Characters.
	
	05/15/06 - DESHPANDE S K - 21167
		   Modified BRECBLD section to set address variables to mailing 
		   address instead of permanent address.
	
	05/08/06 - TITOVE - CR 21140
		   Modified BRECBLD to set "C" corrected return indicator
		   for a second step of a two-step correction.

	04/07/06 - Hillanbrand - CR 20547
                   Modified the MTRCNTRL section. Declared String INSTADDR, 
                   INSTEIN, PAYERNAM as public to correct undefined since 
                   these variables are defined in IRSTPMTR and only should 
                   be redefined in this section if regions are used.
	
	04/03/06 - TITOVE - CR 20556
		   Added DISTINCT to select statement from TMPRPT3 to prevent
		   processing same records multiple times. Added TJD to
		   select in SORT section to account for multiple dates.

	11/03/05 - TITOVE - CR 17287
		   Converted into PSL. Replaced call to BRREG^DEPDI with code
		   and removed pre-2005 revision history. Deleted tags ACN,
		   B1098E, C2, CID, CNTRL2, CNTRL3, JD, SJD and SCID.

	*/

        // Accept "Dead code" warning during runtime of @IRSTAPE
        #ACCEPT Date=10/26/2005;PGM=Eugene Titov;CR=17287
        quit
        
	
MTRCNTRL	// Master control

	type public Number ER
	type public String INSTADDR, INSTEIN, PAYERNAM, Q(,)
	
	type Number PASSFLG, REG
	type String BRREG, REGION()

	set REG = Q(1).data()
	
	do Db.delete("B1098E")
	
	do SORT
	
	type ResultSet rs = Db.select("DISTINCT KEY1","TMPRPT4","PID=:%ProcessID")
	
	while rs.next() do { quit:ER
		
		set BRREG = rs.getCol("KEY1")

		if 'REGION(BRREG).piece("|",2,9).isNull() do {
		
			set INSTEIN = REGION(BRREG).piece("|",2)
			set PAYERNAM = REGION(BRREG).piece("|",1)
			set INSTADDR = REGION(BRREG).piece("|",3,5)_"|"_REGION(BRREG).piece("|",7,9)
			}

		set PASSFLG = 1
		
		do ARECBLD quit:ER	// Build and write the "A" record - First pass
		do BRECBLD quit:ER	// Build and write the "B" records - First pass
		do CRECBLD quit:ER	// Build and write the "C" record - First pass
	
		set PASSFLG = 2
		
		do ARECBLD quit:ER	// Build and write the "A" record - Second pass
		do BRECBLD quit:ER	// Build and write the "B" records - Second pass
		do CRECBLD quit:ER	// Build and write the "C" record - Second pass
		
		do STORETOT		// Store the TTR report totals
		}
		
	do Db.delete("TMPRPT4","PID=:%ProcessID")
	
	quit
	
	
ARECBLD	// "A" record builder

	type public String TAMT()

	type Number AMTIND, FORMCODE

	set FORMCODE = 2	// IRS form code
	
	set AMTIND = 1		// IRS amount type indicator

	set TAMT(1).piece("|",1) = "Student Interest Received"
	
	do ARECWRT		// Write the record to tape
	
	quit
	

BRECBLD	// "B" record builder

	type public Number AMT(), FAMT(), FCNT, PASSFLG
	type public String BRREG
	
	type Number ACN, BINTIND, BSEQ, IPY
	type String ADDR, CID, CITY, CNTRY, CORRTN, DOCCODE, FORCNTY, FULLADDR
	type String LNAME, NAMCON, NAME, SIN, SPECIAL, STATE, TIN, TINTYPE, X, ZIP

	type DbSet ds = Db.selectDbSet("TMPRPT4","PID=:%ProcessID AND KEY1=:BRREG")
	
	while ds.next() do {
		
		type RecordTMPRPT4 tmp4 = ds.getRecord("TMPRPT4")
		
		set CID = tmp4.key4

		type RecordIRSUPD irsupd = Db.getRecord("IRSUPD","TJD=:tmp4.key2,FTYPE=16,MISCSEQ=:CID,BSEQ=0")
	
		// Skip duplicates when writting to tape
		if (irsupd.ccode = 1),(PASSFLG = 1) quit
		// Skip "New Entry" for first pass
		if (irsupd.ccode = 4),(PASSFLG = 1) quit
		// Skip "change amount" for second pass
		if (irsupd.ccode = 3),(PASSFLG = 2) quit
		
		type RecordLN ln = Db.getRecord("LN", "CID = :CID", 1)

		if (ln.idpf '= 2) quit		// Not Permanent Student Loan Status
	
		if ln.cipy98e set IPY = ln.cipy98e  	// Corrected Interest Paid Prior Year
		else  set IPY = $$IPY98E^PROC98E(CID)	// Interest Paid Prior Year
	
		if (IPY < 0) set IPY = 0	// Don't report negative amount
	
		// Add Loan Origination Fees - Amount to Interest Paid Prior Year
		set IPY = IPY + ln.orgfa

		set ACN = $select(PASSFLG=1:irsupd.ocif,PASSFLG=2:ln.acn) // Original/New CIF number

		type RecordCIF cif = Db.getRecord("CIF", "ACN = :ACN", 1)

		set TIN = $select(PASSFLG=1:irsupd.otin,PASSFLG=2:cif.taxid) // Tax ID number

		set TINTYPE = $select(TIN?2N1"-"7N:1,TIN?3N1"-"2N1"-"4N:2,1:" ")  // Type of TIN

		// The rest of AMT() entries are initialized at the top of template routine
		// Student Loan Interest Received
		set AMT(1) = $select((PASSFLG=1)&(irsupd.ccode=2):0,1:IPY*100)
	
		set DOCCODE = "  "
		set CORRTN = $select(PASSFLG=1:"G",PASSFLG=2:"C")
		
		set NAME = $select(PASSFLG=1:irsupd.oname,PASSFLG=2:cif.nam)  // Payee First Name
		set LNAME = $select(PASSFLG=1:irsupd.olnam,PASSFLG=2:cif.lnm) // Payee Last Name

		set ADDR = cif.mad1_" "_cif.mad2_" "_cif.mad3	// Payee address
		set CITY = cif.mcity 				// Payee city
		set STATE = cif.mstate 				// Payee state
		set ZIP = cif.mzip.piece("-",1)_cif.mzip.piece("-",2) // Payee zip
		set CNTRY = cif.mcntry	 			// Foreign country
		set FORCNTY = $select(cif.mcntry="US":" ",1:1)  	// Foreign country indicator
		
		set BINTIND = ""

		// Recognize Paid Int During Capitalization/Loan Origination Fee - Amount
		if ln.rpidc!ln.orgfa set BINTIND = 1

		//; Blank|544|546
		set SPECIAL = "".justify(3)
		//; Origination Fees/Capitalized Interest Indicator|547
		set SPECIAL = SPECIAL_(BINTIND_"".justify(1)).extract(1,1)
		//; Special Data Entries|548|722
		set SPECIAL = SPECIAL_"".justify(175)
		//; Blank|723|750
		set SPECIAL = SPECIAL_"".justify(28)

		// Skip duplicates
		if (irsupd.ccode '= 1) do BRECWRT
	
		// Insert "B" Records into B1098E File

		if (TINTYPE = 2) set X = LNAME
		else  set X = NAME
		
		do NAMCNTRL^IRSTPMTR
	
		set NAMCON = X

		set SIN = $select(PASSFLG=1:irsupd.otin,PASSFLG=2:cif.taxid)

		set BSEQ = Db.nextVal("B1098E","PDATE=:tmp4.key2,KEY=:CID")

		type RecordB1098E b1098e = Db.getRecord("B1098E","PDATE=:tmp4.key2,KEY=:CID,BSEQ=:BSEQ", 1)
		
		set b1098e.bnamecon = NAMCON
		set b1098e.btintype = TINTYPE
		set b1098e.btin = SIN.piece("|",1).translate(" ","-")
		set b1098e.bamt1 = AMT(1)/100
		set b1098e.bname = NAME
		set b1098e.baddr1 = cif.mad1
		set b1098e.baddr2 = cif.mad2
		set b1098e.baddr3 = cif.mad3
		set b1098e.bcity = CITY
		set b1098e.bstate = STATE
		set b1098e.bzip = cif.mzip
		set b1098e.bintind = +BINTIND
		
		do b1098e.save()
		
		// Calculate number of records and tax form report totals
		set FCNT = FCNT + 1  
		set FAMT(1) = FAMT(1) + (AMT(1) / 100)
		}
		
	quit
	

SORT	// Sort all reportable accounts into a temporary table

	type public Number SRT
	type public String FORM, FORMS(), Q(,), REGION()
	
	type Date DT, JD
	type Number ACN, CID
	type String BRREG, N

	set JD = FORMS(FORM) - 1
	
	type ResultSet rs = Db.select("DISTINCT TJD,MISCSEQ","IRSUPD","TJD>:JD AND FTYPE=16")

	while rs.next() do {
	
		set DT = rs.getCol("TJD")
		set CID = rs.getCol("MISCSEQ")
		
		type RecordACN acn = Db.getRecord("ACN", "CID = :CID", 1)
		
		set ACN = acn.acn
        	set BRREG = "*"
 
        	if SRT,'acn.boo.isNull() do {        	
 
        		type RecordUTBLBRCD ubrcd = Db.getRecord("UTBLBRCD", "BRCD = :acn.boo", 1)
        	
        		set BRREG = ubrcd.region
        		}
		
		#ACCEPT Date=11/02/2005;PGM=Eugene Titov;CR=17287
		if REG set N = "" if 1 for  set N = Q(1,N).order() quit:N.isNull()  xecute Q(1,N) else  quit
			
		if 'REGION(BRREG).exists() do {
		
			type RecordUTBLREGION uregion = Db.getRecord("UTBLREGION","KEY = :BRREG", 1)
			
			if 'uregion.getMode() set REGION(BRREG) = "" quit
			
			set REGION(BRREG).piece("|",1) = uregion.desc
			set REGION(BRREG).piece("|",2) = uregion.taxid
			set REGION(BRREG).piece("|",3) = uregion.city
			set REGION(BRREG).piece("|",4) = uregion.state
			set REGION(BRREG).piece("|",5) = uregion.mzip
			set REGION(BRREG).piece("|",6) = uregion.cntry
			set REGION(BRREG).piece("|",7) = uregion.ad1
			set REGION(BRREG).piece("|",8) = uregion.ad2
			set REGION(BRREG).piece("|",9) = uregion.ad3
			set REGION(BRREG).piece("|",12) = uregion.ctof1099
			}
		
		type RecordTMPRPT4 tmprpt4 = Db.getRecord("TMPRPT4","PID=:%ProcessID,KEY1=:BRREG,KEY2=:DT,KEY3=:ACN,KEY4=:CID", 1)
		
		set tmprpt4.data = ""

		do tmprpt4.save()
		}
		
	quit
	

CRECBLD	// "C" record builder 

	do CRECWRT	// Write the record to tape
	
	quit

%STOPLOD	// Stop %ZRTNLOD from this point on down
	quit
TRECWRT		// Dummy line reference for GT.M
	quit
ARECWRT		// Dummy line reference for GT.M
	quit
BRECWRT		// Dummy line reference for GT.M
	quit
CRECWRT		// Dummy line reference for GT.M
	quit
STORETOT	// Dummy line reference for GT.M
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60703^23172^Sudanthiran S. Kumar^8607"	// Signature - LTD^TIME^USER^SIZE
