V01S690(%ProcessMode,RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT)   // -  - SID= <UTBLOVR1> System-Generated Restriction Maintenance
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:55 - shetyes
 //   /*
 // 	This screen is used during restrictions processing.  It is used to
 // 	link the system-generated restrictions from the System-Generated
 // 	Restrictions user table (OVR) with the transaction codes to which the
 // 	restrictions apply.
 // 	This screen is used with functions OVR001 and OVR002.
 //   */
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="UTBLOVR1",VPGM=$T(+0),VSNAME="System-Generated Restriction Maintenance"
 set VFSN("UTBLOVR")="zfUTBLOVR"
 set vPSL=1
 set KEYS(1)=fOVRLIT.OVR
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fUTBLOVR,.fOVRLIT),VDA1(.fUTBLOVR,.fOVRLIT),^DBSPNT()

 if '%ProcessMode do VNEW(.fUTBLOVR,.fOVRLIT),VPR(.fUTBLOVR,.fOVRLIT),VDA1(.fUTBLOVR,.fOVRLIT)
 if %ProcessMode do VLOD(.fUTBLOVR,.fOVRLIT) quit:$G(ER)  do VPR(.fUTBLOVR,.fOVRLIT),VDA1(.fUTBLOVR,.fOVRLIT)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLOVR,.fOVRLIT)
	quit


VNEW(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLOVR,.fOVRLIT)
 do VLOD(.fUTBLOVR,.fOVRLIT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) // Display screen prompts
 set VO="9||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,15,1,1,0,0,0,0,0,0)_"01T "
 set VO(2)=$C(1,16,49,1,0,0,0,0,0,0)_"01TSystem-Generated Restriction Maintenance/Inquiry "
 set VO(3)=$C(4,4,15,0,0,0,0,0,0,0)_"01T Product Group:"
 set VO(4)=$C(5,6,13,0,0,0,0,0,0,0)_"01T Restriction:"
 set VO(5)=$C(7,6,13,0,0,0,0,0,0,0)_"01T Description:"
 set VO(6)=$C(11,4,72,2,0,0,0,0,0,0)_"01TEnter below those transaction codes for which this restriction does not "
 set VO(7)=$C(12,4,70,2,0,0,0,0,0,0)_"01Tapply. Separate all entries by commas; e.g., LP,LPC,LPCO, etc.  Enter "
 set VO(8)=$C(13,4,73,2,0,0,0,0,0,0)_"01TDR* to indicate all debit transactions.  Enter CR* to indicate all credit"
 set VO(9)=$C(14,4,14,2,0,0,0,0,0,0)_"01Ttransactions. "
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT)  // Display screen data
 new V
 //
 set VO="16|10|13|"
 set VO(10)=$C(4,20,4,2,0,0,0,0,0,0)_"01T"_$E(fUTBLOVR.GRP,1,4)
 set VO(11)=$C(5,20,8,2,0,0,0,0,0,0)_"01T"_$E(fUTBLOVR.OVR,1,8)
 set VO(12)=$C(7,20,60,2,0,0,0,0,0,0)_"01T"_$E(fUTBLOVR.DESC,1,60)
 set VO(13)=$C(16,3,75,2,0,0,0,0,0,0)_"00T"_$E(fUTBLOVR.TRIG1,1,75)
 set VO(14)=$C(17,3,75,2,0,0,0,0,0,0)_"00T"_$E(fUTBLOVR.TRIG2,1,75)
 set VO(15)=$C(18,3,75,2,0,0,0,0,0,0)_"00T"_$E(fUTBLOVR.TRIG3,1,75)
 set VO(16)=$C(19,3,75,2,0,0,0,0,0,0)_"00T"_$E(fUTBLOVR.TRIG4,1,75)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=7,VPT=1,VPB=19,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLOVR,OVRLIT"
 set OLNTB=19003
 
 set VFSN("UTBLOVR")="zfUTBLOVR"
 //
 // 
	
	
 set %TAB(1)=$C(3,19,4)_"21T12401|1|[UTBLOVR]GRP"
 set %TAB(2)=$C(4,19,8)_"21T12402|1|[UTBLOVR]OVR|[OVRLIT]"
 set %TAB(3)=$C(6,19,60)_"20T|*DESC|[UTBLOVR]DESC"
 set %TAB(4)=$C(15,2,75)_"00T12402|1|[UTBLOVR]TRIG1|||do VP1^V01S690(.fUTBLOVR,.fOVRLIT)|do VP2^V01S690(.fUTBLOVR,.fOVRLIT)"
 set %TAB(5)=$C(16,2,75)_"00T12403|1|[UTBLOVR]TRIG2|||do VP3^V01S690(.fUTBLOVR,.fOVRLIT)"
 set %TAB(6)=$C(17,2,75)_"00T12404|1|[UTBLOVR]TRIG3|||do VP4^V01S690(.fUTBLOVR,.fOVRLIT)"
 set %TAB(7)=$C(18,2,75)_"00T12405|1|[UTBLOVR]TRIG4|||do VP5^V01S690(.fUTBLOVR,.fOVRLIT)"
 do VTBL(.fUTBLOVR,.fOVRLIT)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) //
 type String KEYL()

 set KEYL(2) = fUTBLOVR.GRP
 set KEYL(3) = fUTBLOVR.OVR

 do ^UTBLOVR

 quit
VP2(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) //
 type Public String SAVTR

 kill SAVTR
 
 quit
VP3(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) //
 type String KEYL()
 
 set KEYL(2) = fUTBLOVR.GRP
 set KEYL(3) = fUTBLOVR.OVR
 
 do ^UTBLOVR
 
 quit

VP4(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) //
 type String KEYL()
 
 set KEYL(2) = fUTBLOVR.GRP
 set KEYL(3) = fUTBLOVR.OVR
 
 do ^UTBLOVR
 
 quit

VP5(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT) //
 type String KEYL()
 
 set KEYL(2) = fUTBLOVR.GRP
 set KEYL(3) = fUTBLOVR.OVR
 
 do ^UTBLOVR
 
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLOVR fUTBLOVR
 type Public RecordOVRLIT fOVRLIT
 do VPR(.fUTBLOVR,.fOVRLIT)
 do VDA1(.fUTBLOVR,.fOVRLIT)
 do ^DBSPNT()
 quit

VW(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT)
 do VDA1(.fUTBLOVR,.fOVRLIT)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLOVR fUTBLOVR,RecordOVRLIT fOVRLIT)
 do VDA1(.fUTBLOVR,.fOVRLIT)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLOVR fUTBLOVR
 type Public RecordOVRLIT fOVRLIT
 do VDA1(.fUTBLOVR,.fOVRLIT)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLOVR fUTBLOVR
 if sn="UTBLOVR" do vSET1(.fUTBLOVR,di,X)
 type Public RecordOVRLIT fOVRLIT
 if sn="OVRLIT" do vSET2(.fOVRLIT,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLOVR fUTBLOVR,di,X)
 do fUTBLOVR.setAuditFlag(1)
 set fUTBLOVR.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordOVRLIT fOVRLIT,di,X)
 do fOVRLIT.setAuditFlag(1)
 set fOVRLIT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLOVR fUTBLOVR
 if fid="UTBLOVR" quit $$vREAD1(.fUTBLOVR,di)
 type Public RecordOVRLIT fOVRLIT
 if fid="OVRLIT" quit $$vREAD2(.fOVRLIT,di)
 quit ""
vREAD1(RecordUTBLOVR fUTBLOVR,di)
 quit fUTBLOVR.@di
vREAD2(RecordOVRLIT fOVRLIT,di)
 quit fOVRLIT.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
