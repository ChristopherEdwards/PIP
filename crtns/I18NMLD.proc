public I18NMLD(String phrobj,String phrase,Number linenum,String phrtyp) //Master Language Dictionary Utility
  /*
	ORIG: kumarb - 10/21/2005
	DESC: Master Language Dictionary Utility

	 I18N=QUIT     This program does not need to follow I18N standards 
	 DESC:		This program is responsible of interactive use of the 
			Master Language Directory(MLD), and is known as the
			MLD Utility.
	 
			It operates in two different mode defined by the first
			parametre phrobj. If phrobj is set to "S", this
			indicates that the incoming phrase is an source phrase.
			In source mode the program firste builds appropriate 
			prompts for the MLD screen, then it searches the MLD
			globals for any translated target phrases before it
			unnormalizes any found target phrases.
			Then the MLD screen is invoked with the result of the 
			search. After returning from the MLD screen this program
			writes back to the MLD global if a new target phrase is 
			created.
	 
			If phrobj is set to "T" this indicates that the incoming
			phrase is a previous translated target phrase.
			For the target phrases the program runs two passes.
			The first pass gives the translator back the original
			source phrase. This is done by searching the MLD
			crossreference global. Any found source phrases is
			input to the MLD screen. Based upon the translators
			choices in this first pass the second pass acts exactly
			the same as using this program in source modus. 
	 
	 CALLED BY:	I18NOOE			- Interface to MLD for OOE
			I18NCRT			- Interface to MLD for DBSCRT	
	
	 CALL TO:	NRMPHR^I18NNRM		- Normalizes a phrase
			TRANSLATE^I18NUTL       - Translation utility
			UNNRMPHR^I18NNRM	- Unnormalize a phrase
			FORMI18N		- MLD Screen program
	
	 GLOBALS READ:
			I18NMLD			- Master Language Dictionary
			I18NMLDX		- MLD Crossr\eferenc
			
	 GLOBALS SET:
			I18NMLD			- Master Language Dictionary
			I18NMLDX		- MLD Crossr\eferenc
	
	 ARGUMENTS:
	
	 INPUTS:
	
	        	phrobj	 		- "S"ource type
	                                  	  "T"arget type
	         	phrase  		- Phrase for translation
	            	linenum 		- aPositioning of MLD screen
	            	phrtyp  		- Phrase Type 
	
	 RETURNS:      phrase			- Translated phrase
	 EXAMPLE:
	 LIBRARY:
	
	---Revision History-------------------------------------------
	
	10/21/05 - KUMARB - CR 16921
        	Converted to PSL.
	
	--------------------------------------------------------------
	*/
	
	do INIT
	
	quit
	
INIT	// Initial variable test and setting
	
	// New variables specific for this program

	type public Number linenum
	type public String ER,mdtlphr,phrase,phrobj,phrtyp,RM
	
	type Boolean nophrobj
	type Number i,mldex,pN,pUN
	type String %TAB(),char,flddes1,flddes2,fldval1,fldval2,maxphr,mldfv2,phrobjstr,phrtab,phrtab2,srcphr,VFMQ
	
	// Init variables 
	set %ProcessMode=0,nophrobj='phrobj.exists(),mldex=0                           
	set phrobj=phrobj.get(),phrase=phrase.get(),linenum=linenum.get()
	set srcphr=(phrobj="S")
	set phrobjstr=$S(srcphr:"Source",1:"Target")
	
	// No phrase type indicated
	if nophrobj do Runtime.setErrMSG("I18NMLD",5446) quit
	// No phrase to search for ~p1
	if phrase.get()="" do Runtime.setErrMSG("I18NMLD",5442,phrobjstr) quit
	
	// If phrase contains characters > 128, then F9 not allowed
	if phrobj="S" do { quit:ER
		for i=1:1:phrase.length() quit:ER  do {
			set char=phrase.extract(i,i)
			// Non-English Phrases cannot be translated, use F10 or add to MLD.
			if char.ascii()>128 do Runtime.setErrMSG("I18NMLD",5443)
			}
		}
	
	// Manually trans'ing detail phrase--don't normalize	
	if (phrobj="T")!('+mdtlphr.get()) set phrase=$$NRMPHR^I18NNRM(phrase,phrtyp)
	// Manually trans'ing detail phrase--Upper case it
	if (phrobj="S"),(+mdtlphr.get()) set phrase=$$UPPER^%ZFUNC(phrase)
	
	// Build MLD screen prompts
	set flddes1=$S(srcphr:"Source phrase :",1:"Target phrase :")
	set flddes2=$S(srcphr:"Target phrase :",1:"Source phrase :")
	set fldval1=phrase
	
	// "S": Get translated phrase
	// "T": Get normalized phrase 
	set fldval2=$$GETPHR^I18NUTL(phrobj,fldval1,.phrtab,.maxphr) 
	
	// Phrase already translated, use F10
	if (fldval2=""),(phrobj="T") do Runtime.setErrMSG("I18NMLD",5444) quit
	
	// If no perfect match found try bestfit
	if fldval2.get()="" do {
		if phrobj="S" do TRANSLATE^I18NUTL(1,fldval1,.fldval2)
		if fldval2.get()'="" do {
			// Translated by best fit method
			set ER="W",RM=$$^MSG(5467)
			if srcphr set fldval2=$$UNNRMPHR^I18NNRM(fldval2,phrtyp)
			}
		}
	else  do {
		// ~p1 phrase(s) found
		set ER="W",RM=$$^MSG(6079,maxphr)
		
		// Unnormalize fldval2 and phrtab
		if srcphr set fldval2=$$UNNRMPHR^I18NNRM(fldval2,phrtyp)
		set pN=""
		for  set pN=phrtab(pN).order() quit:pN=""  do {
			if srcphr set pUN=$$UNNRMPHR^I18NNRM(pN,phrtyp)
			if 'srcphr set pUN=pN
			set phrtab2(pUN)=phrtab(pN) 
			kill phrtab(pN)
			}
		
		set pUN=""
		// Move array tab2 -> tab
		for  set pUN=phrtab2(pUN).order() quit:pUN=""  do {
			set phrtab(pUN)=phrtab2(pUN) 
			kill phrtab2(pUN)
			}
		}
		
	do VPG
	
	quit
	
VPG	// Page control

	type public Number linenum
	type public String fldval1,fldval2,mldfv2,phrtyp,VFMQ
	
	if (VFMQ.exists()),("DFQ"[VFMQ) do VER quit
	
	// Screen, Call MLD Screen 
	// NB formi18n uses alot of global variables
	do ^FORMI18N(linenum,phrtyp,.fldval1,.fldval2,.mldfv2)	
	
	do VPG0
	
	quit
	
VPG0	//

	type public Number ooevfmq
	type public String fldval2,phrase,phrobj,phrtab,VFMQ
	
	if ("DF"[VFMQ),(phrobj="S") do VER quit
	if ("Q"[VFMQ)!(VFMQ=0) set phrase="",ooevfmq=1 do END quit
	
	set phrobj="S",phrase=fldval2
	kill phrtab

	do INIT
	
	quit
	
VER	//

	type public String fldval2,phrase
	
	set phrase=fldval2.get()
	if phrase="" do END quit

	// If not in create mode, dont write
	if %ProcessMode'=0 do END quit
	
	do FILE
	
	quit	
	
FILE	// File data
	
	type public String fldval1,mldfv2,phrtyp
	
	type String nrmfld1,nrmmldfv2
	
	set nrmmldfv2=$$NRMPHR^I18NNRM(mldfv2,phrtyp)
	// Normallize just in case...
	set nrmfld1=$$NRMPHR^I18NNRM(fldval1,phrtyp)
	// Use norm'd phrase
	type RecordI18NMLD i18nmld=Db.getRecord("I18NMLD","SRCPHR=:nrmfld1,TARGPHR=:mldfv2",1)
	if 'i18nmld.getMode() do {
		set i18nmld.prefphr=0
		set i18nmld.transuid=%UserID
		set i18nmld.transdt=%CurrentDate
		set i18nmld.transtime=%CurrentTime
		do i18nmld.bypassSave()
		}

	type RecordI18NMLDX i18nmldx=Db.getRecord("I18NMLDX","TARGPHR=:nrmmldfv2,SRCPHR=:fldval1",1)
	if 'i18nmldx.getMode() do {
		do i18nmldx.bypassSave()
		}
		
	do END
	
	quit
	
END	// Finish up

	type public String ER,fldval1,mldex,RM,VFMQ
	
	if ER.get()!(%ProcessMode=2)!(%ProcessMode=4) quit
	set ER="W"
	// MLD entry ~p1 ~p2 ~p3
	set RM=$$^MSG(5452,fldval1,$S(VFMQ="Q":" not ",1:" "),$S((%ProcessMode=0)&'(mldex):"created",%ProcessMode=1:"modified",%ProcessMode=3:"deleted",1:"done"))

	quit

vSIG()	quit "60228^23755^Balasubramonian Sankar^6455"	// Signature - LTD^TIME^USER^SIZE
