public	RGLCSH(Date %SystemDate)	// Cash Reconciliation
	/*
	       ORIG:  Frank R. Sanchez (2497) - 09/08/86

	---- Revision History ------------------------------------------------
	
	06/20/07 - KinI - CR 27726
		   Modified main section to add TGL and TGLDTL records deleting 
		   to avoid records double-counting when RGLXFR function is 
		   re-run.	
	*/

	type Number BRCD, CC, GLTS, GLTSTO, GLTSTS, SRC
	type String %UserID, crcd(), CRCD
	
	set CRCD = ""
	set SRC = 3
	
	// Delete G/L Transaction Summary - System table
	do Db.delete("TGL1", "TDT=:TJD AND SRC=:SRC")
	do Db.delete("TGL", "TJD=:TJD AND SRC=:SRC")
	do Db.delete("TGLDTL", "TJD=:TJD AND SRC=:SRC")
	
	do CATCHUP^TTXSUM(%SystemDate)

	do INI
	
	type ResultSet rs = Db.select("DISTINCT BRCD,UID","TPCTRL")

	while rs.next() do {
		
		set BRCD = rs.getCol("BRCD")
		set %UserID = rs.getCol("UID")
		
                type RecordUTBLBRCD utblbrcd = Db.getRecord("UTBLBRCD", "BRCD = :BRCD", 1)
                
		if 'utblbrcd.getMode() quit

		set CC = utblbrcd.ccdef
	
		type RecordSCAU scau = Db.getRecord("SCAU", "UID = :%UserID", 1)
		
		if 'scau.getMode() quit

		type RecordTPCTRL tpctrl = Db.getRecord("TPCTRL", "BRCD = :BRCD, UID = :%UserID, TPD = :%SystemDate", 1)
 
		if 'tpctrl.getMode() do {
		
			set tpctrl.lsttrn = ""
			
			do tpctrl.bypassSave()
			}

	
		for  set CRCD = crcd(CRCD).order() quit:CRCD.isNull()  do CRCD(.scau)
		}

	quit


CRCD(RecordSCAU scau)	// Reconcile currency

	/*

	   1.  Calculate anticipated ending cash for currency

	       Teller starting cash  		begcash
	     - PM'ed cash in + cash out  	pmcash
	     + Today's cash in - cash out 	tdcash
	       ==========================
	       Anticipated ending cash  	antcash


	   2. Calculate teller cash over/short amount for currency

	       Teller ending cash  		endcash
	     - Anticipated ending cash  	antcash
	       =======================
	       Cash over/short   		ovshrt


	   3. Accumulate over/short amount to appropriate G/L accounts

	*/

	type public Number CC, BRCD, GLTS, GLTSTO, GLTSTS, SRC
	type public String CRCD
	
	type Date XTJD
	type Number amt, antcash, begcash, endcash, glacn, glts, itc, ovshrt
	type Number pmcash, tdcash
	type String %UFN, cash
	
	set XTJD = %SystemDate - 1

	type RecordTPCASH yestrday = Db.getRecord("TPCASH", "BRCD = :BRCD, UID = :%UserID, TPD = :XTJD, CRCD = :CRCD", 1)
	set begcash = yestrday.ectot

        type RecordTPCASH today = Db.getRecord("TPCASH", "BRCD = :BRCD, UID = :%UserID, TPD = :%SystemDate, CRCD = :CRCD", 1)
	set endcash = today.ectot

	if endcash.isNull() , 'begcash.isNull() do {
	
		set endcash = begcash
		set today.ectot = endcash
		
		do today.bypassSave()
		}
	
	set cash = $$CASH^TTXSUM(BRCD,%UserID,%SystemDate,CRCD)
	
	set tdcash = cash.piece("|",1) - cash.piece("|",2)
	set pmcash = cash.piece("|",3) - cash.piece("|",4)
	
	set antcash = (begcash - pmcash) + tdcash
	
	set ovshrt = endcash - antcash
	
	if 'ovshrt quit

	if ovshrt < 0 do {
		
		set glacn = scau.csshrt 
		set glts = GLTSTS 
		set amt = -ovshrt 
		set itc = 0
		}
		
	else  do {
		
		set glacn = scau.csovr 
		set glts = GLTSTO 
		set amt = ovshrt 
		set itc = 1
		}
		
	if 'glacn set glacn = GLTS
	
	// Teller over/short		
	type RecordTGL tgl = Db.getRecord("TGL", "TJD = :%SystemDate, SRC = :SRC, CRCD = :CRCD, EFD = :%SystemDate, ACN = :glacn, CC = :CC", 1)

	if itc = 0 do {
		set tgl.drcnt = tgl.drcnt + 1
		set tgl.dramt = tgl.dramt + amt
		}

	if itc = 1 do {
		set tgl.crcnt = tgl.crcnt + 1
		set tgl.cramt = tgl.cramt + amt
		}
	
	do tgl.bypassSave()
	
	set %UFN = scau.%ufn
	
	do DTL(glacn)
	
	set itc = 'itc
	
	// Transaction suspense teller over/short
	type RecordTGL tgls = Db.getRecord("TGL", "TJD = :%SystemDate, SRC = :SRC, CRCD = :CRCD, EFD = :%SystemDate, ACN = :glts, CC = :CC", 1)

	if itc = 0 do {
                set tgls.drcnt = tgls.drcnt + 1
                set tgls.dramt = tgls.dramt + amt
		}
	
	if itc = 1 do {
		              
                set tgls.crcnt = tgls.crcnt + 1
                set tgls.cramt = tgls.cramt + amt
		}

	do tgls.bypassSave()

	do DTL(glts)

	quit


DTL(Number ACN)	// Create G/L Transaction Summary Detail table entry
	
	type public Number amt, itc, CC, SRC 
	type public String %UFN, CRCD

        type RecordTGLDTL tgldtl = Class.new("RecordTGLDTL")

	set tgldtl.tjd = %SystemDate
	set tgldtl.src = SRC
	set tgldtl.crcd = CRCD
	set tgldtl.efd = %SystemDate
	set tgldtl.acn = ACN
	set tgldtl.cc = CC
	set tgldtl.seq = Db.nextVal("TGLDTL", "TJD = :%SystemDate, SRC = :SRC, CRCD = :CRCD, EFD = :%SystemDate, ACN = :ACN, CC = :CC") 

	set tgldtl.glacn = ACN
	set tgldtl.ccntr = CC
	set tgldtl.trn = $S(itc:"CR",1:"DR")
	set tgldtl.tamt = amt
	set tgldtl.cmt = %UFN
        set tgldtl.uid = %UserID
        
	do tgldtl.bypassSave()

	quit


INI	// Initialize variables

	type public Number GLTS, GLTSTO, GLTSTS
	type public String crcd()
	
	type String CO

	set CO = CUVAR.GLS
	set GLTS = +CUVAR.GLTS

	set GLTSTO = CUVAR.GLTSTO 
	if GLTSTO.isNull() set GLTSTO = GLTS

	set GLTSTS = CUVAR.GLTSTS 
	if GLTSTS.isNull() set GLTSTS = GLTS

	type DbSet ds = Db.selectDbSet("CRCD", "CO = :CO")

	while ds.next() do {
		
		type RecordCRCD curr = ds.getRecord("CRCD")
                
		if curr.cashcur set crcd(curr.crcd) = ""
		}
	
	quit

	
 #OPTION ResultClass ON
Public String vSIG()	quit "60803^41541^Irina Kin^5004"	// Signature - LTD^TIME^USER^SIZE
