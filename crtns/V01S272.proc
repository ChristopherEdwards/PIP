V01S272(%ProcessMode,RecordUTBLGCRDS fUTBLGCR)   // -  - SID= <GCRDSTBL> Daily Scoring Table
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,GCRDAILY",VSID="GCRDSTBL",VPGM=$T(+0),VSNAME="Daily Scoring Table"
 set VFSN("UTBLGCRDS")="zfUTBLGCR"
 set vPSL=1
 set KEYS(1)=fUTBLGCR.TBLNM
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=13 do VPR(.fUTBLGCR),VDA1(.fUTBLGCR),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fUTBLGCR) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLGCR),VPR(.fUTBLGCR),VDA1(.fUTBLGCR)
 if %ProcessMode do VLOD(.fUTBLGCR) quit:$G(ER)  do VPR(.fUTBLGCR),VDA1(.fUTBLGCR)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLGCR)
	quit


VNEW(RecordUTBLGCRDS fUTBLGCR) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLGCR)
 do VLOD(.fUTBLGCR)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLGCRDS fUTBLGCR)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLGCRDS fUTBLGCR) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=13
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLGCRDS fUTBLGCR) // Display screen prompts
 set VO="17||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,14,23,0,0,0,0,0,0,0)_"01TGCR Daily Scoring Table"
 set VO(2)=$C(2,20,17,0,0,0,0,0,0,0)_"01TTable Description"
 set VO(3)=$C(4,1,17,0,0,0,0,0,0,0)_"01TMin OD Threshold:"
 set VO(4)=$C(4,38,23,0,0,0,0,0,0,0)_"01TMin Returned Threshold:"
 set VO(5)=$C(5,1,17,0,0,0,0,0,0,0)_"01TMax OD Threshold:"
 set VO(6)=$C(5,38,23,0,0,0,0,0,0,0)_"01TMax Returned Threshold:"
 set VO(7)=$C(6,4,14,0,0,0,0,0,0,0)_"01TMax OD Option:"
 set VO(8)=$C(6,41,20,0,0,0,0,0,0,0)_"01TMax Returned Option:"
 set VO(9)=$C(8,21,2,0,0,0,0,0,0,0)_"01T--"
 set VO(10)=$C(8,24,13,0,0,0,0,0,0,0)_"01TOverdrafts --"
 set VO(11)=$C(8,46,1,0,0,0,0,0,0,0)_"01T-"
 set VO(12)=$C(8,47,1,0,0,0,0,0,0,0)_"01T-"
 set VO(13)=$C(8,49,19,0,0,0,0,0,0,0)_"01TReturned Deposit --"
 set VO(14)=$C(9,2,11,0,0,0,0,0,0,0)_"01T Percentage"
 set VO(15)=$C(9,20,6,0,0,0,0,0,0,0)_"01TOption"
 set VO(16)=$C(9,28,9,0,0,0,0,0,0,0)_"01TDecrement"
 set VO(17)=$C(9,48,19,0,0,0,0,0,0,0)_"01TOption  Decrement  "
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLGCRDS fUTBLGCR)  // Display screen data
 new V
 s GCRDAILY=$G(GCRDAILY)
 s T=$G(T)
 //
 set VO="25|18|13|0"
 set VO(18)=$C(1,38,8,2,0,0,0,0,0,0)_"01T"_$E(fUTBLGCR.TBLNM,1,8)
 set VO(19)=$C(2,38,40,2,0,0,0,0,0,0)_"00T"_$E(fUTBLGCR.DES,1,40)
 set V=$S(fUTBLGCR.MINOD="":"",1:$J(fUTBLGCR.MINOD,0,2)) set VO(20)=$C(4,19,18,2,0,0,0,0,0,0)_"00$"_$S(fUTBLGCR.MINOD="":"",1:$J(fUTBLGCR.MINOD,0,2))
 set V=$S(fUTBLGCR.MINRD="":"",1:$J(fUTBLGCR.MINRD,0,2)) set VO(21)=$C(4,62,18,2,0,0,0,0,0,0)_"00$"_$S(fUTBLGCR.MINRD="":"",1:$J(fUTBLGCR.MINRD,0,2))
 set V=$S(fUTBLGCR.MAXOD="":"",1:$J(fUTBLGCR.MAXOD,0,2)) set VO(22)=$C(5,19,18,2,0,0,0,0,0,0)_"00$"_$S(fUTBLGCR.MAXOD="":"",1:$J(fUTBLGCR.MAXOD,0,2))
 set V=$S(fUTBLGCR.MAXRD="":"",1:$J(fUTBLGCR.MAXRD,0,2)) set VO(23)=$C(5,62,18,2,0,0,0,0,0,0)_"00$"_$S(fUTBLGCR.MAXRD="":"",1:$J(fUTBLGCR.MAXRD,0,2))
 set VO(24)=$C(6,19,2,2,0,0,0,0,0,0)_"00N"_fUTBLGCR.MAXODOPT
 set VO(25)=$C(6,62,2,2,0,0,0,0,0,0)_"00N"_fUTBLGCR.MAXRDOPT
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+7,DY=10 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLGCR)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLGCRDS fUTBLGCR)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1,v2
 if  set (v1,v2)=""
 else  new v1,v2
 else  set (v1,GCRDAILY(I))=$G(GCRDAILY(I)),(v2,T(I))=$G(T(I))
 
 set V=$P(v1,"|",1) set VO(VX+1)=$C(DY,4,9,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,5))
 set VO(VX+2)=$C(DY,24,2,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",2)
 set VO(VX+3)=$C(DY,33,4,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",3)
 set VO(VX+4)=$C(DY,52,2,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",4)
 set VO(VX+5)=$C(DY,61,4,2,0,0,0,0,0,0)_"00N"_$P(v1,"|",5)
 set V="" set VO(VX+6)=$C(DY,71,1,0,0,0,0,0,0,0)_"01T"_""
 set DY=DY+1,VX=VX+6
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLGCRDS fUTBLGCR)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=8,%MOD=6,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=9+%REPEAT,BLKSIZ=(22*%REPEAT)+124,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLGCRDS"
 set OLNTB=VPB*1000
 
 set VFSN("UTBLGCRDS")="zfUTBLGCR"
 //
 for I=15:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,37,8)_"21T12401|1|[UTBLGCRDS]TBLNM"
 set %TAB(2)=$C(1,37,40)_"00T12407||[UTBLGCRDS]DES"
 set %TAB(3)=$C(3,18,18)_"00$12401||[UTBLGCRDS]MINOD|||||||2"
 set %TAB(4)=$C(3,61,18)_"00$12403||[UTBLGCRDS]MINRD|||||||2"
 set %TAB(5)=$C(4,18,18)_"00$12402||[UTBLGCRDS]MAXOD|||||||2"
 set %TAB(6)=$C(4,61,18)_"00$12404||[UTBLGCRDS]MAXRD|||||||2"
 set %TAB(7)=$C(5,18,2)_"01N12405||[UTBLGCRDS]MAXODOPT|[STBLDREOPT]"
 set %TAB(8)=$C(5,61,2)_"01N12406||[UTBLGCRDS]MAXRDOPT|[STBLDREOPT]"
 set %TAB(9)=$C(9,3,9)_"00N12401|*GCRDAILY(1)|[*]@PERCNT|||do VP1^V01S272(.fUTBLGCR)||0||5"
 set %TAB(10)=$C(9,23,2)_"00N12402|*GCRDAILY(1)|[*]@ODOPTION|[STBLDREOPT]||do VP2^V01S272(.fUTBLGCR)"
 set %TAB(11)=$C(9,32,4)_"00N12403|*GCRDAILY(1)|[*]@ODDCRMT||||do VP3^V01S272(.fUTBLGCR)"
 set %TAB(12)=$C(9,51,2)_"00N12404|*GCRDAILY(1)|[*]@RDOPTION|[STBLDREOPT]||do VP4^V01S272(.fUTBLGCR)"
 set %TAB(13)=$C(9,60,4)_"00N12405|*GCRDAILY(1)|[*]@RDDCRMT||||do VP5^V01S272(.fUTBLGCR)"
 set %TAB(14)=$C(9,70,1)_"20T|*T(1)|[*]@T"
 do VTBL(.fUTBLGCR),VDEPRE(.fUTBLGCR) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLGCRDS fUTBLGCR) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDEPRE(RecordUTBLGCRDS fUTBLGCR)  // Data Entry Pre-processor
 
 if PG>0 do {
 	do PROTECT^DBSMACRO("UTBLGCRDS.minod")

 	do PROTECT^DBSMACRO("UTBLGCRDS.maxod")

 	do PROTECT^DBSMACRO("UTBLGCRDS.minrd")

 	do PROTECT^DBSMACRO("UTBLGCRDS.maxrd")

 	do PROTECT^DBSMACRO("UTBLGCRDS.maxodopt")

 	do PROTECT^DBSMACRO("UTBLGCRDS.maxrdopt")
 	}
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLGCRDS fUTBLGCR) //
 new RPT

 // Count percentage entries
 if z1#13=0,(%PG=%PAGE),(X'="") do {
 	if '%ProcessMode set %PAGE=%PAGE+1 quit 

 	do RPTS^GCRDDR

 	if $P(GCRDAILY(z1),"|",1)="" set RPT=RPT+1
 	if %PAGE<RPT/%REPEAT set %PAGE=$P(RPT/%REPEAT,".",1)+1
 	}

 if X=V quit

 // Allow no duplicates - Entry already exists
 if X for I=1:1:$O(GCRDAILY(""),-1) if $P(GCRDAILY(I),"|",1)=X set ER=1 set RM=$$^MSG(964)


 // Remove key was used
 if X="" do {

 	do DELETE^DBSMACRO("@ODOPTION","1","0")

 	do DELETE^DBSMACRO("@ODDCRMT","1","0")

 	do DELETE^DBSMACRO("@RDOPTION","1","0")

 	do DELETE^DBSMACRO("@RDDCRMT","1","0")

 	do GOTO^DBSMACRO("NEXT")
 	}
 quit 

VP2(RecordUTBLGCRDS fUTBLGCR) //
 if X'=3 do {

 	do DELETE^DBSMACRO("@ODDCRMT","1","0")

 	do GOTO^DBSMACRO("@RDOPTION") 
 	}
 quit

VP3(RecordUTBLGCRDS fUTBLGCR) //
 if $P(GCRDAILY(z1),"|",2)=3 do CHANGE^DBSMACRO("REQ","")

 quit 

VP4(RecordUTBLGCRDS fUTBLGCR) //
 if X'=3 do {

 	do DELETE^DBSMACRO("@RDDCRMT","1","0")

 	do GOTO^DBSMACRO("@T") 
 	}
 quit 

VP5(RecordUTBLGCRDS fUTBLGCR) //
 if $P(GCRDAILY(z1),"|",4)=3 do CHANGE^DBSMACRO("REQ","")

 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLGCRDS fUTBLGCR
 do VPR(.fUTBLGCR)
 do VDA1(.fUTBLGCR)
 do ^DBSPNT()
 quit

VW(RecordUTBLGCRDS fUTBLGCR)
 do VDA1(.fUTBLGCR)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLGCRDS fUTBLGCR)
 do VDA1(.fUTBLGCR)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLGCRDS fUTBLGCR
 do VDA1(.fUTBLGCR)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLGCRDS fUTBLGCR
 if sn="UTBLGCRDS" do vSET1(.fUTBLGCR,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLGCRDS fUTBLGCR,di,X)
 do fUTBLGCR.setAuditFlag(1)
 set fUTBLGCR.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLGCRDS fUTBLGCR
 if fid="UTBLGCRDS" quit $$vREAD1(.fUTBLGCR,di)
 quit ""
vREAD1(RecordUTBLGCRDS fUTBLGCR,di)
 quit fUTBLGCR.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLGCRDS fUTBLGCR)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 F I=1:1:99 S T(I)=" "
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
