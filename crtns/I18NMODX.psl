I18NMODX //Create/Delete. Module Manual Entries
  /*
	ORIG: kumarb - 10/21/2005
	DESC: Create/Delete. Module Manual Entries

	 I18N=QUIT
        CALLED BY:
            CALLS:
             DESC: This routine creates and deletes ^I18NMODX entries.  This
		    global is used by the I18NMOD function to add screens and
		    reports to be translated by a module.  When I18NMOD is run
		    for a certain menu, if it is discovered that the I18NMOD 
		    function has missed screens and/or reports that should 
		    belong in the module, these missed screens and/or reports
		    can be entered into the ^I18NMODX global via this function
		    so that when the module is rebuilt, these screens and/or
		    reports will now be included in the module.  When adding
		    entries in the ^I18NMODX global for a menu, any menu that
		    has this menu as a submenu will use the ^I18NMODX entries
		    for this menu.  For example, when creating a module for 
		    menu 100 (where menu 150 is a submenu of this menu), if 
		    there are entries in the ^I18NMODX global for menu 150, 
		    these entries will be included in the module for menu 100. 
		    
         GLOBALS -
             READ:
              SET: ^I18NMODX
        
            INPUT:
           OUTPUT:
        
        EXT ENTRY:
	
	
	---- Revision History ------------------------------------------------
	
	10/21/05 - KUMARB - CR 16921
        	Converted to PSL.

	----------------------------------------------------------------------
	*/
	
	// Do not call from top, call either CREATE or DELETE tags
	
	quit	
	
public CREATE //  Create ^I18NMODX Entries
	
	type Number MODE
	type String HDG
	
	set MODE=0
	set HDG=$J(" ",28)_$$^MSG(5896)_$J(" ",28)
	write !!!!!,"Building Lookup Tables..."
	do BLDXMENU
	do BLDXELMT
	do BLDXNAME
	do SCREEN
	
	quit
	
public DELETE // Delete ^I18NMODX Entries
	
	type Number MODE
	type String HDG

	set MODE=1
	set HDG=$J(" ",28)_$$^MSG(5897)_$J(" ",28)
	
	do SCREEN
	
	quit
	
SCREEN // Screen
	
	type public Number MODE
	type public String XELMT,XMENU,XNAME
	
	type String %READ,%TAB(),elmt,menu,name,VFMQ

	set VFMQ=""
	for  quit:VFMQ="Q"  do {
		set (name)=""
		if MODE=1 do BLDXMENU
		set %TAB("menu")="/LEN=12/TBL=XMENU(:NOVAL/XPP=D PPMENU^I18NMODX/TYP=N/DES=Menu number"
		set %TAB("elmt")="/LEN=2/TBL=XELMT(:NOVAL/XPP=D PPELMT^I18NMODX/TYP=N/DES=Element type"
		set %TAB("name")="/LEN=12/TBL=XNAME(elmt,/XPP=D PPNAME^I18NMODX/TYP=T/DES=Element Name"
		set %READ="@HDG#1,,,menu#1,elmt#1,name#1" 
		if MODE=0 do ^UTLREAD
		if MODE=1 do DEL^UTLREAD
		if VFMQ'="Q" do MAIN
		}

	kill XMENU,XELMT,XNAME

	quit
	
MAIN	// Main

	type public Number elmt,menu,MODE
	type public String name
	
	if MODE=0 do {
		// Entry already exists
		type RecordI18NMODX i18modx=Db.getRecord("I18NMODX","MENU=:menu,ITEM=:elmt,NAME=:name",1)
		// Entry already exists
		if i18modx.getMode() do Runtime.setErrMSG("I18NMODX",964) quit
		type RecordDBTBL dbtbl=Db.getRecord("DBTBL","%LIBS='SYSDEV',DBOPT=:elmt,ID=:name",1)
		set i18modx.desc=dbtbl.desc
		do i18modx.save()
		// ~p1 created
		do Runtime.setErrMSG("I18NMODX",6712,name_" entry")
		}

	if MODE=1 do {
		do Db.delete("I18NMODX","MENU=:menu AND ITEM=:elmt AND NAME=:name")
		// ~p1 deleted
		do Runtime.setErrMSG("I18NMODX",3028,name_" entry")
		}
	
	quit
	
PPMENU // Post-processor for Menu
	
	type public Number MODE
	type public String X,XMENU()

	// Invalid table value ~p1
	if 'XMENU(X).exists() do Runtime.setErrMSG("I18NMODX",1485,X)
	if MODE=1 do BLDXELMT

	quit
	
PPELMT // Post-processor for Elmt

	type public Number MODE
	type public String X,XELMT(),XMENU()
	
	// Invalid table value ~p1
	if 'XELMT(X).exists() do Runtime.setErrMSG("I18NMODX",1485,X)
	if MODE=1 do BLDXNAME

	quit
	
PPNAME // Post-processor for Name
	
	type public Number elmt
	type public String X,XMENU(),XNAME(,)

	// Invalid table value ~p1
	if 'XNAME(elmt,X).exists() do Runtime.setErrMSG("I18NMODX",1485,X)

	quit
	
BLDXMENU // Build XMENU
	
	type public Number MODE
	type public String XMENU

	type Number I
	
	set I=""
	kill XMENU

	if MODE=0 do {
		type ResultSet rs=Db.select("MENU,DES,PRMPT","SCAMENU0")
		while rs.next() do {
			set XMENU(rs.getCol("MENU"))=rs.getCol("DES")_"|"_rs.getCol("PRMPT")
			}
		}
	
	if MODE=1 do {
		type ResultSet rs1=Db.select("MENU","I18NMODX")
		while rs1.next() do {
			set I=rs1.getCol("MENU")
			type RecordSCAMENU0 scamenu0=Db.getRecord("SCAMENU0","MENU=:I",1)
			set XMENU(I)=scamenu0.des_"|"_scamenu0.prmpt
			}
		}

	quit
	
BLDXELMT // Build XELMT

	type public Number MODE
	type public String X,XELMT
	
	kill XELMT

	if MODE=0 do {
		set XELMT(2)="Screen"
		set XELMT(5)="Report"
		}
	if MODE=1 do {
		type ResultSet rs=Db.select("MENU","I18NMODX","MENU=:X AND ITEM=2")
		if 'rs.isEmpty() set XELMT(2)="Screen"
		type ResultSet rs1=Db.select("MENU","I18NMODX","MENU=:X AND ITEM=5")
		if 'rs1.isEmpty() set XELMT(5)="Report"
		}

	quit
	
BLDXNAME // Build XNAME

	type public Number menu,MODE
	type public String X,XNAME
	
	kill XNAME

	if MODE=0 do {
		type ResultSet rs=Db.select("SID,DESC","DBTBL2")
		while rs.next() do {
			set XNAME(2,rs.getCol("SID"))=rs.getCol("DESC")
			}
		
		type ResultSet rs1=Db.select("RID,DESC","DBTBL5H")
		while rs1.next() do {
			set XNAME(5,rs1.getCol("RID"))=rs1.getCol("DESC")
			}
		}
	if MODE=1 do {
		type ResultSet rs=Db.select("NAME,DESC","I18NMODX","MENU=:menu AND ITEM=:X")
		while rs.next() do {
			set XNAME(X,rs.getCol("NAME"))=rs.getCol("DESC")
			}
		}
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60228^23757^Balasubramonian Sankar^5206"	// Signature - LTD^TIME^USER^SIZE
