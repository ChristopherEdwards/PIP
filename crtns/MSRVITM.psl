MSRVITM	
	/*
	ORIG:	Mindy Gill - 08/10/92
		Procedure ID: MSRVITM
		DESC:	Mass Service Item Inventory creation  
			This routine is called by the maintenance functions
			associated with the mass creation of Service Item
			inventory.
	
	  ---- Revision History -------------------------------------------------

	   05/10/05 - KELLYP - CR 15872
		      Rewrote entire procedure to flow better and to conform
		      to current PSL standards.  Also removed pre-2003 revision
		      history.

	  -----------------------------------------------------------------------
	*/

	quit

public SRVITM	// Create new service items (mass creation)

	// Create Service Item Inventory
	do PROC(0)
	
	quit	


public CHECK	// Create new check items (mass creation)

	// Create Check Item Inventory
	do PROC(1)

	quit

	
PROC(Boolean CHKITM)
	
	type public Boolean ER
	
	type Number CNT
	type String FSER,MASTID(),SRVCAT,SRVID(),SRVLOC,SRVTYP,TSER,VFMQ
	
	set ER=0
	
	do QUERY	// Initial query screen
	
	if VFMQ="Q"!ER do END quit
	
	do GETIDS	// Get service item ID's to generate
	
	if VFMQ="Q"!ER do END quit
	
	type RecordSRVITM srvitm=Class.new("RecordSRVITM")

	set srvitm.srvcat=SRVCAT
	set srvitm.srvtyp=SRVTYP
	set srvitm.srvloc=SRVLOC
	
	do SCREEN(.srvitm)	// Collect service item detail info
	
	if VFMQ="Q"!ER do END quit
	
	do FILE(.srvitm)	// Save new service items
	
	do END
	
	quit


QUERY	// Set up initial query screen(s)
	
	type public Boolean CHKITM,ER
	type public String FSER,SRVCAT,SRVLOC,SRVTYP,TSER,VFMQ
	
	type String %READ,%TAB(),GENNAME
	
	set %READ=";@@%FN/REV/CEN;;"

	if 'CHKITM do { quit	// Query fields for service items

		set %TAB("SRVCAT")="[SRVITM]SRVCAT/TBL=[UTBLSRVCAT]:QU ""[UTBLSRVCAT]CHKITM'=1"""
		set %TAB("SRVTYP")="[SRVITM]SRVTYP/TBL=[UTBLSRVTYP]"
		set %TAB("SRVLOC")="[SRVITM]SRVLOC/TBL=[UTBLSRVLOC]"

		set %READ=%READ_"SRVCAT/REQ;SRVTYP/REQ;SRVLOC/REQ"
		
		do ^UTLREAD
		}
	
	else  do { 		// Query fields for check items
		
		set %TAB("SRVCAT")="[SRVITM]SRVCAT/TBL=[UTBLSRVCAT]:QU ""[UTBLSRVCAT]CHKITM=1"""
		set %TAB("SRVTYP")="[SRVITM]SRVTYP/TBL=[UTBLSRVTYP]"
		set %TAB("SRVLOC")="[SRVITM]SRVLOC/TBL=[UTBLSRVLOC]"

		set %READ=%READ_"SRVCAT/REQ;SRVTYP/REQ;SRVLOC/REQ"

		do ^UTLREAD
		if VFMQ="Q" quit

		type RecordUTBLSRVTYP usrvtyp=Db.getRecord("UTBLSRVTYP","SRVCAT,SRVTYP",1)
	
		set GENNAME=usrvtyp.serchk

		// Serial Number Generator/Edit Check Program Name has not been defined.
		if GENNAME.isNull() do Runtime.setErrMSG("UTBLSRVTYP","7544") quit:ER

		kill %TAB

		set %READ=";@@%FN/REV/CEN;;"
		set %TAB("FSER")=".FSER/XPP=do EDTCHK^@GENNAME"
		set %TAB("TSER")=".TSER/XPP=do SERNPP^MSRVITM"
		set %READ=%READ_";FSER/REQ;TSER/REQ"
		
		do ^UTLREAD	// Query for "From" serial number and "To" serial number
		}
	quit 

	
GETIDS	// Get ID's for multiple service items
	
	type public Boolean CHKITM
	type public String FSER,MASTID(),SRVCAT,SRVID(),SRVLOC,SRVTYP,TSER
	
	if CHKITM do { quit
	
		/*
		 The MASTID() array contains all check numbers that
		 need to be added, given the FSER and TSER valuees
		 entered on the 2nd check item query screen.  They
		 need to be added to the SRVID() array so that FILE
		 will create each individual SRVITM record for each
		 check item. 
		*/
	
		type String NOD
		set NOD=""
		for  set NOD=MASTID(NOD).order() quit:NOD.isNull()  do {
			set SRVID(NOD)=MASTID(NOD)
			}
		}
	
	type RecordUTBLSRVLOC usrvloc=Db.getRecord("UTBLSRVLOC","SRVCAT,SRVTYP,SRVLOC")
	
	// Get individual service item id's to add
	do DRV^USID(1,"SRVMSCR",.usrvloc)

	quit 


SCREEN(RecordSRVITM srvitm)	
	// Display the screen specified in SRVCAT to enter details for
	// Service or Check Items being created.
	
	type public Boolean ER
	
	type public String SRVCAT,SRVTYP
	
	type RecordUTBLSRVCAT usrvcat=Db.getRecord("UTBLSRVCAT","SRVCAT",1)

	// Invalid screen linkage
	if usrvcat.srvsc.isNull() do Runtime.setErrSTBLER("UTBLSRVCAT","INVLDSCR") quit:ER

	type RecordUTBLSRVTYP usrvtyp=Db.getRecord("UTBLSRVTYP","SRVCAT,SRVTYP")
	
	do DRV^USID(0,usrvcat.srvsc,.srvitm,.usrvtyp)

	quit 

	
FILE(RecordSRVITM srvitm)	// Collate through SRV() and call SRVFILE
	
	type public Boolean CHKITM
	type public Number CNT
	type public String SRVID()
	
	type Number I
	type String ID,SUB
	
	set SUB="" 
	set CNT=0
	for  set SUB=SRVID(SUB).order() quit:SUB.isNull()  do {
		
		// Check item
		if CHKITM do SRVFILE(.srvitm,SUB) quit

		// Service item
		for I=1:1:4 do {

			set ID=SRVID(SUB).piece("|",I)
			if ID.isNull() quit

			set CNT=CNT+1
			
			do SRVFILE(.srvitm,ID)
			}
		}
	quit 
	

SRVFILE(RecordSRVITM srvitm,String SRVID)   // File the SRVITM Record to Disk

	type public String SRVCAT,SRVLOC,SRVTYP

	type RecordSRVITM srvitmN=srvitm.copy()
	
	do srvitmN.setMode(0)
	
	set srvitmN.srvid=SRVID
	set srvitmN.srva=+srvitmN.srva

	do srvitmN.save()
				
	quit


END	// End of processing

	type public Boolean CHKITM
	type public Number CNT
	type public String ER,FSERN,RM,TSERN,VFMQ
	
	if ER quit
	
	set ER="W"
	
	// Service Items created
	if ('CHKITM),(VFMQ'="Q") set RM=CNT_" "_$$^MSG(7431)   
	
	// Service Items not created
	if ('CHKITM),(VFMQ="Q") set RM=$$^MSG(7432)  
	
	// Check Items created
	if (CHKITM),(VFMQ'="Q") set RM=((TSERN-FSERN)+1)_" "_$$^MSG(7429)
	
	// Check Items not created
	if (CHKITM),(VFMQ="Q") set RM=$$^MSG(7430)  
	
	quit 
	

SERNPP	// Serial Number Post Processor
	
	type public String GENNAME
	
	do EDTCHK^@GENNAME
	do TESTSER^@GENNAME
	
	quit 
	
 #OPTION ResultClass ON
Public String vSIG()	quit "60039^50534^Pat Kelly^5179"	// Signature - LTD^TIME^USER^SIZE
