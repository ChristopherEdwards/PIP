LNSVUP	//Security Value - Apply Val to Collateral Records
	/*

	  ---- Revision History ------------------------------------------------
	
	04/10/06 - ARPAVC - 20672
		   Added check in the COLL section to look for an
		   attached loan before filing.  If there is none, the
		   journal command needs to be turned off because an 
		   account number is needed to HIST.

	03/31/06 - ARPAVC - 20513
		   Modified code to skip entry if there is no
		   securutiry value record for that CUSIP.

	11/11/05 - ARPAVC - 18183
   		   Removed reference to LNCOLC and changed it to reference LNCOL
		   since the index table is being removed.

	04/21/05 - ARPAVC - 15570
		   Cleaned up PSL compiler issues and screen driver 
		   issues as a part of DBI2 project.
		   
	05/16/02 - VETSENM - 49794
		   Converted to PSL.                      


	*/
	
	do INIT
	quit

INIT	// Initialize Page Parameters

	type String COLL,CUSIP,%READ,%TAB(),VFMQ
	type Public Boolean ER

        set ER=0
        set COLL=""

        // Set up
	set %TAB("CUSIP")=".CUSIP1/HLP=[UTBLSVAL]CUSIP/TBL=[UTBLSVAL]/XPP=do CUSIP^LNSVUP" set CUSIP="ALL"
	set %READ="@@%FN,,,CUSIP/REQ"
	
	do ^UTLREAD
	if VFMQ="Q" do END quit
	do FILE(CUSIP)
	do END 
	
	quit

CUSIP	// Post Processor to CUSIP Number

	type Public String I(),RM,X,Z
	type Public Boolean ER
	
	if X="" quit
	if X="ALL" set I(3)="" quit

	set Z=$$VCUSIP^SPSTD(.X) if ER quit

	// CUSIP number does not exist
	if 'Db.isDefined("UTBLSVAL","CUSIP=:X") set ER=1 set RM=$$^MSG(689)

	quit

FILE(String CUSIP)	// File data
	
	if CUSIP'="ALL" do COLL(CUSIP) quit

	// Added where clause to retrieve CUSIP from XREF instead of COL
	type ResultSet rs=Db.select("CUSIP","COL","CUSIP IS NOT NULL")
	if rs.isEmpty() quit
	while rs.next() do {
		set CUSIP=rs.getCol(1)
		do COLL(CUSIP)
		}
	quit

COLL(String CUSIP)	// Collateral Records
	
	type Public Boolean ER
	type Public String ET,RM
	type String COLL
	type Number CVAL,LNCID,VAL
	
	type RecordUTBLSVAL utblsval=Db.getRecord("UTBLSVAL","CUSIP=:CUSIP",1)
	if utblsval.getMode()=0 quit

	type ResultSet rs=Db.select("COLL","COL","CUSIP=:CUSIP")

	// No collateral records tied to CUSIP number ~p1
	if rs.isEmpty() set ER=1 set RM=$$^MSG(1918,CUSIP) quit

        while rs.next() do {
                set COLL=rs.getCol(1)

		// value per unit
		set VAL=utblsval.val

		if VAL=""!(VAL=0) do { quit
			type ResultSet rsc=Db.select("CID","LNCOL","COLL=:COLL")
			if rsc.isEmpty() quit
			
			while rsc.next() do {
				type Boolean ER
				type Number CID,%ZTSEQ
				set CID=rsc.getCol(1)
				// No Security Price Value for CUSIP # ~p1
        			set ER=1 set ET=$$^MSG(4238,CUSIP)
        			// Security Pricing Values Applied
        			do LOG^UTLEXC($T(+0),"*",$$^MSG(4239),$G(CID),$G(%ZTSEQ),$G(ET))
				}
			}
	

		type RecordCOL col=Db.getRecord("COL","COLL=:COLL")

		// number of units held			
		set CVAL=VAL*col.nsh
		if CVAL=col.colval do { quit
			// valuation date
			set col.colrvld=utblsval.efd
			if '$G(%EffectiveDate) set %EffectiveDate=%SystemDate
			do col.bypassSave()
			}

		do col.setAuditFlag(1)
		set col.colval=CVAL
		set col.colrvld=utblsval.efd

		// check for a linked account.  If there is none, do not
		// journal to HIST file
		set LNCID=$$COLCID^LNFUNCS(col.coll)
		if LNCID.isNull() do col.save("/NOJOURNAL") quit
		do col.save()
		}
	quit

END	//

	type Public Boolean ER
	type Public String RM,VFMQ
	
	if ER quit 
  
	// Collateral records not updated
	if VFMQ="Q" set RM=$$^MSG(574)
	
	// Collateral records updated
	else  set RM=$$^MSG(575)
	
	set ER="W"
	
	quit
 #OPTION ResultClass ON
Public String vSIG()	quit "60367^55084^Vincent Arpa^3353"	// Signature - LTD^TIME^USER^SIZE
