R01S240	// SCA215 - Kiting Suspect Report by Period
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"

	set RID="SCA215"
	set RN="Kiting Suspect Report by Period"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[KITE]ADAT|[KITE]:NOVAL||||D|Analysis Date is equal to|||||"
	set %TAB("VIN2")="|255||[DEP]ODT|||D EXT^DBSQRY||T|Date Account Opened|||||"
	set %TAB("VIN3")="|255||[DEP]BOO|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch of Ownership|||||"
	set %TAB("VIN4")="|255||[DEP]OFF|[UTBLOFF]:NOVAL||D EXT^DBSQRY||T|Primary Account Officer Code|||||"
	set %TAB("VIN5")="|255||[KITE]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN6")="|255||[DEP]REGD|[STBLREGD1]:NOVAL||D EXT^DBSQRY||T|Regulation D Category|||||"
	set %TAB("VIN7")="|255||[DEP]PERS|[STBLPERS]:NOVAL||D EXT^DBSQRY||T|Personal/Non-Personal Code|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=31
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date VIN1
	type public String VIN2,VIN3,VIN4,VIN5,VIN6,VIN7
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CCLD,CONAM,DAYS,DLRSPR,MIN,PCTSPR,PER,RID,RN,TOT,TOTA,TOTI,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA215",RN="Kiting Suspect Report by Period"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA215","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[KITE]ADAT = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DEP]ODT "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]BOO "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DEP]OFF "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[KITE]TYPE "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[DEP]REGD "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[DEP]PERS "_VIN7,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("KITE,DEP,CIF") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Analysis Date is equal to"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC2|"_"Date Account Opened"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Branch of Ownership"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Primary Account Officer Code"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Product Type"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Regulation D Category"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Personal/Non-Personal Code"_"|VIN7|"_VIN7.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Kiting Suspect Report by Period"
		set VBNRINFO("PGM")="R01S240"
		set VBNRINFO("RID")="SCA215"
		set VBNRINFO("TABLES")="KITE,DEP,CIF"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,KITE]ADAT"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,KITE]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"KITE.ADAT,KITE.CID,DEP.CID,DEP.TITLE1,CIF.HPH,KITE"
	set VSELECT=VSELECT_".AVB,KITE.HB,KITE.NDR,KITE.TDR,DEP.TYPE,DEP.ODT,DE"
	set VSELECT=VSELECT_"P.OFF,KITE.AVC,KITE.LB,KITE.NCR,KITE.TCR,DEP.BOO,D"
	set VSELECT=VSELECT_"EP.CCLD,KITE.LB1,CIF.CON,DEP.PERS,CIF.BPH"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"KITE,DEP,CIF",VWHERE,"KITE.ADAT,KITE.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22
	set vc1=V.piece($C(9),1)			// KITE.ADAT
	set vc2=V.piece($C(9),2)			// KITE.CID
	set vc3=V.piece($C(9),3)			// DEP.CID
	set vc4=V.piece($C(9),4)			// DEP.TITLE1
	set vc5=V.piece($C(9),5)			// CIF.HPH
	set vc6=V.piece($C(9),6)			// KITE.AVB
	set vc7=V.piece($C(9),7)			// KITE.HB
	set vc8=V.piece($C(9),8)			// KITE.NDR
	set vc9=V.piece($C(9),9)			// KITE.TDR
	set vc10=V.piece($C(9),10)			// DEP.TYPE
	set vc11=V.piece($C(9),11)			// DEP.ODT
	set vc12=V.piece($C(9),12)			// DEP.OFF
	set vc13=V.piece($C(9),13)			// KITE.AVC
	set vc14=V.piece($C(9),14)			// KITE.LB
	set vc15=V.piece($C(9),15)			// KITE.NCR
	set vc16=V.piece($C(9),16)			// KITE.TCR
	set vc17=V.piece($C(9),17)			// DEP.BOO
	set vc18=V.piece($C(9),18)			// DEP.CCLD
	set vc19=V.piece($C(9),19)			// KITE.LB1
	set vc20=V.piece($C(9),20)			// CIF.CON
	set vc21=V.piece($C(9),21)			// DEP.PERS
	set vc22=V.piece($C(9),22)			// CIF.BPH
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

	// Converted to PSL by CNV70RW
	type Public String MIN

	if '$L(MIN(1)) set MIN(1)=0
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(1).get() do VDTL1 quit:VFMQ
	do VHDG2 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type Public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(2)=VT(2)+1
	quit

VDTL1	// Detail
	type public String %TIM,CCLD,DAYS,DLRSPR,IOSL,MIN,PCTSPR,PER,TOT,TOTA,TOTI,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	quit:VD(1)  set VD(1)=1				// Print flag
	if VLC+12>IOSL do VHDG0 quit:VFMQ

	set VL="===================================================================================================================================="
	do VOM
	set VL="" do VOM
	set VL="    "_"Analysis Date"
	set VL=VL_$J("",24-VL.length())_"Total DDA Accounts"
	set VL=VL_$J("",49-VL.length())_"DDA Accounts Subject to Analysis"
	set VL=VL_$J("",88-VL.length())_"Total Qualifying as Suspect"
	do VOM
	set VL="       "_$J($$DAT^%ZM(vc1),10)
	do VP1 quit:VFMQ!verror.get()  set V=$J(TOT,7)
	set VL=VL_$J("",35-VL.length())_V
	set VL=VL_$J("",74-VL.length())_$J(TOTA,7)
	set VL=VL_$J("",108-VL.length())_$J(TOTI,7)
	do VOM
	set VL="" do VOM
	set VL="------------------------------------------------"
	set VL=VL_$J("",49-VL.length())_"Run Time Query Conditions"
	set VL=VL_$J("",76-VL.length())_"------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="       "_"Customer Contact Within (days)"
	set VL=VL_$J("",39-VL.length())_"Percent Spread (BAL/BALCOL*100)"
	set VL=VL_$J("",72-VL.length())_"Amount Spread (BAL-BALCOL)"
	set VL=VL_$J("",100-VL.length())_"# Days History Reviewed"
	do VOM
	set VL="                                  "_$J(vc18,3)
	set VL=VL_$J("",67-VL.length())_$J(PCTSPR,3)
	set VL=VL_$J("",84-VL.length())_$J($FN(DLRSPR,",",2),14)
	set VL=VL_$J("",121-VL.length())_$J(DAYS,2)
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="" do VOM
	set V="No suspect accounts have been found which meet query conditions. " do VP2 quit:VFMQ!verror.get()  set VL=V
	if 'VL.translate(" ").isNull() do VOM
	do VHDG0 quit:VFMQ				// <<#>>
	do VOM
	quit

VHDG2	// Group Header
	type public String %MSKD,%TIM,CCLD,CONAM,DAYS,DLRSPR,ER,IOSL,MIN,PCTSPR,PER,RID,RN,TOT,TOTA,TOTI,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	quit:vh(2)  set vh(2)=1				// Print flag
	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL="   "_"Account #  Account Title                             Phone Number  Per/Comm   Avg Ldg Bal      High Bal  # DRs     Tot DR Amt"
	set V=" " do VP3 quit:VFMQ!verror.get()
	set VL=VL_$J("",130-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_"Type  Mailing Address                           Date Opened   Office     Avg Col Bal       Low Bal  # CRs     Tot CR Amt"
	set V=" " do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",130-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="      "_"Branch  City, State  ZIP                          Last Contact                         Low Bal (EOD)"
	set V=" " do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",130-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="===================================================================================================================================="
	set V=" " do VP6 quit:VFMQ!verror.get()
	set VL=VL_$J("",130-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL2	// Detail
	type public String %TIM,CCLD,DAYS,DLRSPR,IOSL,MIN,PCTSPR,PER,TOT,TOTA,TOTI,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+5>IOSL do VHDG0 quit:VFMQ  set vh(2)=0 do VHDG2 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc3,12)
	set VL=VL_$J("",14-VL.length())_$E(vc4,1,40)
	set V=vc5,VO=V set V=$E(V,1,12) do VP7 quit:VFMQ!verror.get()
	set VL=VL_$J("",56-VL.length())_V		// [SYSDEV,CIF]HPH
	do VP8 quit:VFMQ!verror.get()  set V=$E(PER,1,4)
	set VL=VL_$J("",70-VL.length())_V
	set VL=VL_$J("",80-VL.length())_$J($FN(vc6,",",2),12)
	set VL=VL_$J("",94-VL.length())_$J($FN(vc7,",",2),12)
	set VL=VL_$J("",107-VL.length())_$J(vc8,7)
	set VL=VL_$J("",116-VL.length())_$J($FN(vc9,",",2),12)
	do VOM
	set VL="        "_$J(vc10,4)
	do VP9 quit:VFMQ!verror.get()  set V=$E(MADDR(1),1,40)
	set VL=VL_$J("",14-VL.length())_V
	set VL=VL_$J("",56-VL.length())_$J($$DAT^%ZM(vc11),10)
	set VL=VL_$J("",70-VL.length())_$E(vc12,1,6)
	set VL=VL_$J("",80-VL.length())_$J($FN(vc13,",",2),12)
	set VL=VL_$J("",94-VL.length())_$J($FN(vc14,",",2),12)
	set VL=VL_$J("",107-VL.length())_$J(vc15,7)
	set VL=VL_$J("",116-VL.length())_$J($FN(vc16,",",2),12)
	do VOM
	set VL="      "_$J(vc17,6)
	set VL=VL_$J("",14-VL.length())_$E(MADDR(2),1,40)
	set VL=VL_$J("",56-VL.length())_$J($$DAT^%ZM(vc18),10)
	set VL=VL_$J("",94-VL.length())_$J($FN(vc19,",",2),12)
	do VOM
	set V="CONTACT:" do VP10 quit:VFMQ!verror.get()  set VL="              "_V
	set VL=VL_$J("",24-VL.length())_$E(vc20,1,30)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CCLD,CONAM,DAYS,DLRSPR,MIN,PCTSPR,PER,RID,RN,TOT,TOTA,TOTI,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	if 'VL.translate(" ").isNull() do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: TOT

	type public String vc1
	type Public String ADAT,CCLD,DAYS,DLRSPR,KITE,KITEQ,PCTSPR,TOT,TOTA,TOTI,X,ZKITE0,ZVTJD

	// 11/22/2001 , VinayaK , Arq No. 45497
	// S KITEQ("TJD")=$G(^KITE(vc1))
	set ZVTJD=vc1
	
	do { 
	    new rs 
	    type ResultSet rs=Db.select("DAYS,CCLD,PCTSPR,DLRSPR,BALOPT,TOT,TOTA,TOTI","KITE0","TJD=:ZVTJD") 
	    set ZKITE0="" if 'rs.next()  quit
	    set ZKITE0=rs.getRow()
	   } 
	
	
	set ZKITE0=$TR(ZKITE0,$C(9),"|")
	set KITEQ("TJD")=ZKITE0
	set X=KITEQ("TJD")
	set DAYS=$P(X,"|",1)
	set CCLD=$P(X,"|",2)
	set PCTSPR=$P(X,"|",3)
	set DLRSPR=$P(X,"|",4)
	set TOT=$P(X,"|",6)
	set TOTA=$P(X,"|",7)
	set TOTI=$P(X,"|",8)
	quit

VP2	// Column post-processor - No suspect accounts have been found which meet query conditions.

	type Public String TOTI,V,VD,VH,VL

	if TOTI set V="" set VL=""
	else  set VH(2)=1 set VD(2)=1
	quit

VP3	// Column post-processor -

	type Public String TOTI,V,VL

	if 'TOTI set V="" set VL=""
	quit

VP4	// Column post-processor -

	type Public String TOTI,V,VL

	if 'TOTI set V="" set VL=""
	quit

VP5	// Column post-processor -

	type Public String TOTI,V,VL

	if 'TOTI set V="" set VL=""
	quit

VP6	// Column post-processor -

	type Public String TOTI,V,VL

	if 'TOTI set V="" set VL=""
	quit

VP7	// Column post-processor - [SYSDEV,CIF]HPH

	type public String vc21,vc22
	type Public String BPH,CIF,DEP,PERS,V

	if vc21 set V=vc22
	quit

VP8	// Column pre-processor - Variable: PER

	type public String vc21
	type Public String DEP,PER,PERS

	if 'vc21 set PER="PERS"
	else  set PER="COMM"
	quit

VP9	// Column pre-processor - Variable: MADDR(1)

	type Public String CID,MADDR

	set MADDR(1)="" set MADDR(2)=""
	do ^UTLADDR(1,"MADDR",2,"","ACN",CID)
	quit

VP10	// Column post-processor - CONTACT:

	type public String vc20
	type Public String CIF,CON,V

	if '$L(vc20) set V=""
	quit
