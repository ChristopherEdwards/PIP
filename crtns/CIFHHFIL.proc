CIFHHFIL(RecordCIFHH cifhh, String vpar, Boolean vparNorm) // CIFHH - CIF Household File Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:22 - shetyes
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (5)              11/22/2003
	// Trigger Definition (1)                      12/17/2004
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = cifhh.getMode()                       // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar
	if %O = 0 do AUDIT^UCUTILN(cifhh,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(cifhh,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	// Define local variables for access keys for legacy triggers
	type String ACN = cifhh.acn
	type String HHTYP = cifhh.hhtyp
	type String HEADACN = cifhh.headacn

	if %O = 0 do { quit                                    // Create record control block
		do vinit                                              // Initialize column values
		if vpar["/TRIGBEF/" do VBI                            // Before insert triggers
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("ACN").exists()!vx("HHTYP").exists()!vx("HEADACN").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("CIFHH",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("CIFHH","ACN = :cifhh.acn and HHTYP = :cifhh.hhtyp and HEADACN = :cifhh.headacn") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String ACN
	type public String HHTYP
	type public String HEADACN

	type RecordCIFHH cifhh = Db.getRecord("CIFHH","ACN=:ACN,HHTYP=:HHTYP,HEADACN=:HEADACN")
	if (%ProcessMode = 2) do {
		do cifhh.setMode(2)

		do CIFHHFIL(cifhh,vpar)
	}
	else  do VINDEX(cifhh)

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordCIFHH cifhh

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("CIFHH","ACN = :cifhh.acn and HHTYP = :cifhh.hhtyp and HEADACN = :cifhh.headacn") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBSFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(cifhh))  S ^CIF(vobj(cifhh,-3),97,vobj(cifhh,-4),vobj(cifhh,-5))=vobj(cifhh)
		#ENDBYPASS
	}

	if vpar["/INDEX/",'(%O = 1)!'vx("").order().isNull() do VINDEX(.cifhh) // Update Index files

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordCIFHH cifhh

	if vpar["/CASDEL/" do VCASDEL                          // Cascade delete
	if vpar["/INDEX/" do VINDEX(.cifhh)                    // Delete index entries

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	ZWI ^CIF(vobj(cifhh,-3),97,vobj(cifhh,-4),vobj(cifhh,-5)) // Delete Record
	quit


vinit // Initialize default values

	type public RecordCIFHH cifhh

	// Type local variables for access keys for defaults
	type public String ACN
	type public String HHTYP
	type public String HEADACN

	if cifhh.hhst.isNull() set cifhh.hhst = 0              // hhst
	quit


vreqn // Validate required data items

	type public RecordCIFHH cifhh

	if cifhh.hhst.isNull() do vreqerr("HHST") quit
	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordCIFHH cifhh

	if cifhh.acn.isNull() do vreqerr("ACN") quit
	if cifhh.hhtyp.isNull() do vreqerr("HHTYP") quit
	if cifhh.headacn.isNull() do vreqerr("HEADACN") quit

		if vx("HHST").exists(),cifhh.hhst.isNull() do vreqerr("HHST") quit
	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CIFHH","MSG",1767,"CIFHH."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordCIFHH cifhh
	if 'cifhh.acn.isNull() set vfkey("^CIF("_""""_cifhh.acn_""""_","_1_")")="CIFHH(ACN) -> CIF"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordCIFHH cifhh
	type public Number %O
	type String vERRMSG

	if 'Db.isDefined("CIF",":cifhh.acn") set vERRMSG = $$^MSG(8563,"CIFHH(ACN) -> CIF") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit


VBI //
	type public Number ER = 0
	type public String vx(),RM
	do vbi1 if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vbi1 // Trigger BEFORE_INSERT - Before Insert

	type public RecordCIFHH cifhh
	/*
	-----Revision History--------------------------------------------------
	09/07/99 - CARROLLJ - 33890
		   Convert to PSL.
	*/


	if 'cifhh.headacn quit 
	// validate head-of-household account number
	
	if 'Db.isDefined("CIF","ACN=cifhh.headacn") do Runtime.setErrMSG("CIFHH",7575,"cifhh.headacn") quit 
	quit
	


vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordCIFHH cifhh

	set X = cifhh.acn if 'X.isNull(),'Db.isDefined("CIF","X") set vRM = $$^MSG(1485,X) do vdderr("ACN", vRM) quit
	set X = cifhh.hhtyp if 'X.isNull(),'Db.isDefined("UHHOLD","X") set vRM = $$^MSG(1485,X) do vdderr("HHTYP", vRM) quit
	set X = cifhh.headacn if 'X.isNull(),'Db.isDefined("CIF","X") set vRM = $$^MSG(1485,X) do vdderr("HEADACN", vRM) quit
	if '("01"[cifhh.HHST) set vRM=$$^MSG(742,"L") do vdderr("HHST", vRM) quit
	set X = cifhh.relate if 'X.isNull(),'Db.isDefined("UTBLHRC","X") set vRM = $$^MSG(1485,X) do vdderr("RELATE", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CIFHH","MSG",979,"CIFHH."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


public VINDEX(RecordCIFHH cifhh) // Update index entries

		type Public String vx()

	if %ProcessMode=1 do { quit
	}
	do vi1(.cifhh)
	do vi2(.cifhh)

	quit
	

vi1(RecordCIFHH cifhh) // Maintain HEADACN index entries (Head-of-household CIF Number)

	type Public String vx()
	type Boolean vdelete = 0
	type String v1 = cifhh.headacn
	type String v3 = cifhh.hhtyp
	type String v4 = cifhh.acn

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if $D(^CIF(vobj(cifhh,-3),97,vobj(cifhh,-4),vobj(cifhh,-5)))#2,'$D(^CIF(v1,98,v3,v4)) do vidxerr("HEADACN")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if %ProcessMode<2 set ^CIF(v1,98,v3,v4)="" quit
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^CIF(v1,98,v3,v4)
	quit

vi2(RecordCIFHH cifhh) // Maintain LEGAL index entries (Legal lending limits xref)

	type Public String vx()
	type Boolean vdelete = 0
	type String v3 = cifhh.acn
	type String v4 = cifhh.hhtyp
	type String v5 = cifhh.headacn

	if %ProcessMode=2 do { quit

		// Allow global reference
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
		if $D(^CIF(vobj(cifhh,-3),97,vobj(cifhh,-4),vobj(cifhh,-5)))#2,'$D(^XREF("LEGAL","HEADACN",v3,v4,v5)) do vidxerr("LEGAL")
		}


	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	if %ProcessMode<2 set ^XREF("LEGAL","HEADACN",v3,v4,v5)="" quit
	quit:%ProcessMode=0

	if %ProcessMode=3 set vdelete=1

	// Allow global reference
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602
	kill ^XREF("LEGAL","HEADACN",v3,v4,v5)
	quit

public VIDXBLD(List vlist) // Rebuild index files (External call)


	type Number %ProcessMode=0                             // Create mode
	type Number i

	if vlist.get().isNull() set vlist="VINDEX"             // Build all

	type DbSet ds=Db.selectDbSet("CIFHH")

	while ds.next() do {
		type RecordCIFHH cifhh=ds.getRecord("CIFHH")
		if vlist.contains("VINDEX") do VINDEX(.cifhh) quit
		if vlist.contains("HEADACN") do vi1(.cifhh)
		if vlist.contains("LEGAL") do vi2(.cifhh)
	}

	quit


public VIDXBLD1(RecordCIFHH cifhh, List vlist) // Rebuild index files for one record (External call)


	type Number i

	if vlist.contains("VINDEX") do VINDEX(.cifhh) quit
	if vlist.contains("HEADACN") do vi1(.cifhh)
	if vlist.contains("LEGAL") do vi2(.cifhh)

	quit


vidxerr(di) // Error message

	D SETERR^DBSEXECU("CIFHH","MSG",1225,"CIFHH."_di)

	quit


vkchged // Access key changed

	type public RecordCIFHH cifhh

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("ACN").exists() set vux("ACN") = vx("ACN")
	if vx("HHTYP").exists() set vux("HHTYP") = vx("HHTYP")
	if vx("HEADACN").exists() set vux("HEADACN") = vx("HEADACN")
	do vkey(1) set voldkey = cifhh.acn_","_cifhh.hhtyp_","_cifhh.headacn // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = cifhh.acn_","_cifhh.hhtyp_","_cifhh.headacn // Copy new keys into object
	type RecordCIFHH vnewrec = cifhh.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("CIFHH",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordCIFHH cifhh

	if vux("ACN").exists() set cifhh.acn = vux("ACN").piece("|",i)
	if vux("HHTYP").exists() set cifhh.hhtyp = vux("HHTYP").piece("|",i)
	if vux("HEADACN").exists() set cifhh.headacn = vux("HEADACN").piece("|",i)
	quit

VCASDEL // Cascade delete logic

	type public RecordCIFHH cifhh
	type public String vpar

	do Db.delete("CIFHH0","ACN=:cifhh.acn AND HHTYP=:cifhh.hhtyp AND MACN=:cifhh.headacn",vpar) // Cascade delete

	quit

VIDXPGM()	quit "CIFHHFIL"	// Location of index program

