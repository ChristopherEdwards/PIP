GCRPKGFL(RecordGCRPKG gcrpkg, String vpar, Boolean vparNorm) // GCRPKG - GCR Package Linkage File Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:16 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (4)              11/22/2003
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = gcrpkg.getMode()                      // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(gcrpkg,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(gcrpkg,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("SDATE").exists()!vx("CID").exists()!vx("LCID").exists() do vkchged quit // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("GCRPKG",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("GCRPKG","SDATE = :gcrpkg.sdate and CID = :gcrpkg.cid and LCID = :gcrpkg.lcid") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String SDATE
	type public String CID
	type public String LCID

	type RecordGCRPKG gcrpkg = Db.getRecord("GCRPKG","SDATE=:SDATE,CID=:CID,LCID=:LCID")
	if (%ProcessMode = 2) do {
		do gcrpkg.setMode(2)

		do GCRPKGFL(gcrpkg,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordGCRPKG gcrpkg

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("GCRPKG","SDATE = :gcrpkg.sdate and CID = :gcrpkg.cid and LCID = :gcrpkg.lcid") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(gcrpkg)) S ^GCRPKG(vobj(gcrpkg,-3),vobj(gcrpkg,-4),vobj(gcrpkg,-5))=vobj(gcrpkg)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordGCRPKG gcrpkg


	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^GCRPKG(vobj(gcrpkg,-3),vobj(gcrpkg,-4),vobj(gcrpkg,-5))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordGCRPKG gcrpkg

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordGCRPKG gcrpkg

	if gcrpkg.sdate.isNull() do vreqerr("SDATE") quit
	if gcrpkg.cid.isNull() do vreqerr("CID") quit
	if gcrpkg.lcid.isNull() do vreqerr("LCID") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("GCRPKG","MSG",1767,"GCRPKG."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordGCRPKG gcrpkg

	set X = gcrpkg.sdate if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("SDATE", vRM) quit
	set X = gcrpkg.cid if 'X.isNull(),'Db.isDefined("ACN","X") set vRM = $$^MSG(1485,X) do vdderr("CID", vRM) quit
	set X = gcrpkg.lcid if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("LCID", vRM) quit
	set X = gcrpkg.gcravgbal if 'X.isNull() set vRM = $$VAL^DBSVER("$",18,0,,,,,2) if 'vRM.isNull() set vRM = $$^MSG(979,"GCRPKG.GCRAVGBAL"_" "_vRM) throw Class.new("Error","%PSL-E-DBFILER,"_vRM.replace(",","~"))
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("GCRPKG","MSG",979,"GCRPKG."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordGCRPKG gcrpkg

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("SDATE").exists() set vux("SDATE") = vx("SDATE")
	if vx("CID").exists() set vux("CID") = vx("CID")
	if vx("LCID").exists() set vux("LCID") = vx("LCID")
	do vkey(1) set voldkey = gcrpkg.sdate_","_gcrpkg.cid_","_gcrpkg.lcid // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = gcrpkg.sdate_","_gcrpkg.cid_","_gcrpkg.lcid // Copy new keys into object
	type RecordGCRPKG vnewrec = gcrpkg.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("GCRPKG",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordGCRPKG gcrpkg

	if vux("SDATE").exists() set gcrpkg.sdate = vux("SDATE").piece("|",i)
	if vux("CID").exists() set gcrpkg.cid = vux("CID").piece("|",i)
	if vux("LCID").exists() set gcrpkg.lcid = vux("LCID").piece("|",i)
	quit
