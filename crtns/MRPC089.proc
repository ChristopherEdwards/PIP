MRPC089(return,versn,ACN,RPASEQ,PLAN)
        /*
        Procedure ID: MRPC089

        DESC:New procedure will accurately compute a minimum annual
             distribution amount that a retirement plan account holder
             is required to take each year based on the customer number, 
             plan sequence and plan value.


        KEYWORDS: RPC,mad modeler
 
        ARGUMENTS:
                . return         /TYP=N/REQ/MECH=REFNAM
 
                . versn          /TYP=N/REQ/MECH=VAL
        	                 current version=1
 		. acn            customer number

                . rpaseq         plan sequence

                . value          plan value
        RETURNS:
                . $$      Error Message                 /TYP=T
                          Null= No Error

                . RETURN         minimum annual distribution amount      
                                
        RELATED:
                 . $$^PBSMRPC - MRPC Service Class Driver
 
        EXAMPLE:
                S RM=$$^MRPC089(.return,versn,acn,rpaseq,value)

	---- Revision History ------------------------------------------------

	09/09/05 - DHANALAKSHMI R - 16851
		   Corrected Warnings - DBI3 clean up.

	12/13/02 - ZWITKOWITSM - 51349
		   Correct %GTM-E-ACTLSTEXP,EXEC^RSPMADA error.  Changed to
		   quit with various error messages when conditions arose that
		   would cause failures.

        08/23/00 - ROYTENBERGE - 35729
                   Substituted all global references with PSL methods
                   Db.isDefined and Db.getOneRow accordingly. Declared 
		   TAXBCY (tax year beginning) and TAXECY (tax year end) 
		   variables to make calculations based on them instead of 
		   calendar year settings. Returned error message to PFW window
		   if customer isn't eligible for MAD calculations because of 
		   the age limit. 

	*/

	set return=""

	// Version number of client message is not compatible with server
	if $G(versn)'=1 quit $$ERRMSG^PBSUTL($$^MSG(2951))

	type String str,RM
	type Number %O,ER,IAR,LIVE,MODELER,RSPTYP,SWITCH,XYR
	type Date TAXBCY,TAXECY

	// Invalid input
	if $G(ACN)="" quit $$ERRMSG^PBSUTL($$^MSG(1379))
	// Invalid input
	if $G(RPASEQ)="" quit $$ERRMSG^PBSUTL($$^MSG(1379))
	// Invalid input
	if $G(PLAN)="" quit $$ERRMSG^PBSUTL($$^MSG(1379))

	set (%O,SWITCH)=0
	set (LIVE,IAR)=0
	set MODELER=1

	type RecordIRATYPE iratype=Db.getRecord("IRATYPE","ACN,RPASEQ",1)

	// Invalid retirement plan account type
	if iratype.getMode()=0 quit $$ERRMSG^PBSUTL($$^MSG(1381))

	set RSPTYP=iratype.iratyp
	set TAXBCY=$$BOTY^SCADAT(%SystemDate,1)
	set TAXECY=$$EOTY^SCADAT(%SystemDate,1)
	if %SystemDate<TAXBCY set XYR=$$YEAR^SCADAT(TAXBCY,1)
	if (%SystemDate=TAXBCY)!(%SystemDate>TAXBCY) set XYR=$$YEAR^SCADAT(TAXECY,1)

	type RecordCIF cif=Db.getRecord("CIF","ACN")

	// Invalid birth date. Unable to verify age.
	if cif.dob="" quit $$ERRMSG^PBSUTL($$^MSG(1136))

	do EXEC^RSPMADA(.cif)

	if ER quit $$ERRMSG^PBSUTL($G(RM))

	type RecordMADCALC madcalc=Db.getRecord("MADCALC","ACN,RPASEQ")

	type String tab
	type Date AUTDND,MADDOB,MADSDOB
	
	set tab=$C(9)
	set MADDOB=madcalc.dob
	set MADSDOB=iratype.madsdob
	set AUTDND=madcalc.autdnd

	set str=madcalc.acn_tab_madcalc.nam_tab_madcalc.taxid_tab_madcalc.iratyp_tab_iratype.planid_tab_madcalc.rpaseq_tab
	set str=str_iratype.planman_tab_MADDOB.toString()_tab_MADSDOB.toString()_tab
	set str=str_madcalc.pvmad_tab_madcalc.origmad_tab_madcalc.madamt_tab_madcalc.rspmado_tab_madcalc.rspmadb_tab
	set str=str_iratype.madpct_tab_madcalc.autupd_tab_AUTDND.toString()_tab_madcalc.autfre_tab_madcalc.autamt_tab_iratype.discid

	if $G(RM)!$G(ER) quit $$ERRMSG^PBSUTL($G(RM))

	set return=$$V2LV^MSG(str)
	quit ""

vSIG()	quit "60216^32665^Dhanalakshmi R^3557"	// Signature - LTD^TIME^USER^SIZE
