R01S294	// SCA291 - Staff Rates Report by Customer Code
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:56 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String CUSTCD
	type Date EFD
	type String VIN3="ALL"

	set RID="SCA291"
	set RN="Staff Rates Report by Customer Code"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("CUSTCD")="|3|||[UTBLCC]CCODE||||T|Customer Code|||||"
	set %TAB("EFD")="|10|||||||D|Effective Date|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN3")="|255||[REP291]CRCD|||D EXT^DBSQRY||T|Currency Code|||||"

	set %READ="IO/REQ,EFD#1,CUSTCD#1,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public Date EFD
	type public String CUSTCD,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CNAM,CONAM,DCRCD,Q(),RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA291",RN="Staff Rates Report by Customer Code"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA291","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[REP291]CID#27#12,[REP291]TAMT#41#12,[REP291]CRCD#57#6,[REP291]EQUIV#65#12,[REP291]BRCD#79#6,[REP291]UID#89#20,[REP291]TSEQ#112#6"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[REP291]CRCD "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("REP291,CIF,UTBLCC") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",3)="WC2|"_"Currency Code"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Staff Rates Report by Customer Code"
		set VBNRINFO("PGM")="R01S294"
		set VBNRINFO("RID")="SCA291"
		set VBNRINFO("TABLES")="REP291,CIF,UTBLCC"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,REP291]JOB"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,REP291]ACN"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,REP291]CID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,REP291]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"REP291.JOB,REP291.ACN,REP291.CID,REP291.SEQ,UTBLCC"
	set VSELECT=VSELECT_".CCODE,CIF.EMPCD,CIF.NAM,REP291.EQUIV,REP291.TAMT,"
	set VSELECT=VSELECT_"REP291.CRCD,REP291.BRCD,REP291.UID,REP291.TSEQ"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"REP291,CIF,UTBLCC",VWHERE,"REP291.JOB,REP291.ACN,REP291.CID,REP291.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13
	set vc1=V.piece($C(9),1)			// REP291.JOB
	set vc2=V.piece($C(9),2)			// REP291.ACN
	set vc3=V.piece($C(9),3)			// REP291.CID
	set vc4=V.piece($C(9),4)			// REP291.SEQ
	set vc5=V.piece($C(9),5)			// UTBLCC.CCODE
	set vc6=V.piece($C(9),6)			// CIF.EMPCD
	set vc7=V.piece($C(9),7)			// CIF.NAM
	set vc8=V.piece($C(9),8)			// REP291.EQUIV
	set vc9=V.piece($C(9),9)			// REP291.TAMT
	set vc10=V.piece($C(9),10)			// REP291.CRCD
	set vc11=V.piece($C(9),11)			// REP291.BRCD
	set vc12=V.piece($C(9),12)			// REP291.UID
	set vc13=V.piece($C(9),13)			// REP291.TSEQ
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type public Date EFD
 type public String CUSTCD,DCRCD,Q()
 
 type Number I,MULTIPLY,RATE,SEQ,TSEQ
 type String BR,CRCD,UID,X

 do Db.delete("REP291","JOB=:%ProcessID")
 do CRCD^TTXSUM

 set SEQ=1

 type ResultSet rsttx=Db.select("BRCD,CRCD,CUSTCD,MULT,RATE,TSEQ,UID","TTX","TJD=:EFD")
 while rsttx.next() do {

	set BR=rsttx.getCol("BRCD")
	set UID=rsttx.getCol("UID")
	set TSEQ=rsttx.getCol("TSEQ")
	set MULTIPLY=rsttx.getCol("MULT")
	set RATE=rsttx.getCol("RATE")

	if rsttx.getCol("CUSTCD")'=CUSTCD set TSEQ=((TSEQ\1000)+1)*1000 quit
	if RATE.isNull() quit

	set CRCD=rsttx.getCol("CRCD") if CRCD.isNull() set CRCD=DCRCD

	do TTXSEQ(EFD,BR,UID,RATE,MULTIPLY,TSEQ,.SEQ)
	set TSEQ=((TSEQ\1000)+1)*1000
	}
 quit


TTXSEQ(Date EFD,
       String BR,
       String UID,
       Number RATE,
       Number MULTIPLY,
       Number TSEQ,
       Number SEQ)

 type public String DCRCD

 type Number ACN,AMT,CID,EXCAMT,T
 type String CRCD,ETC

 set SEQ=TSEQ+999

 type ResultSet rs=Db.select("CID,CRCD,ETC,TAMT,TSEQ","TTX","TJD=:EFD AND BRCD=:BR AND UID=:UID AND TSEQ>:TSEQ")

 while rs.next() do {

	set T=rs.getCol("TSEQ")

	if T>SEQ quit

	set ETC=rs.getCol("ETC")
	set AMT=rs.getCol("TAMT")
	set CRCD=rs.getCol("CRCD")
	set CID=rs.getCol("CID")

	type RecordTRN trn=Db.getRecord("TRN","ETC=:ETC")

	if trn.cls'="D",trn.cls'="L" quit
	if CRCD.isNull() set CRCD=DCRCD

	type RecordACN acn=Db.getRecord("ACN","CID=:CID")

	set ACN=acn.acn
	do EXCAMT^CRCDUTL

	type RecordREP291 rep291=Class.new("RecordREP291")

	set rep291.job=%ProcessID
	set rep291.acn=ACN
	set rep291.cid=CID
	set rep291.seq=SEQ
	set rep291.tamt=AMT
	set rep291.crcd=CRCD
	set rep291.equiv=EXCAMT
	set rep291.brcd=BR
	set rep291.uid=UID
	set rep291.tseq=T

	do rep291.bypassSave()

	set SEQ=SEQ+1
	}
 quit

	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do VSUM3 quit:VFMQ  do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc8
	type Public String VSTATS

	set VT(4)=VT(4)+1
	set VT(4,1,1)=VT(4,1,1)+vc8			// @TOT([REP291]EQUIV)
	quit

VDTL2	// Detail
	type public String %TIM,CNAM,CUSTCD,DCRCD,EFD,IOSL,Q(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL=$J(vc2,12)
	set VL=VL_$J("",18-VL.length())_$E(vc6,1,2)
	set VL=VL_$J("",26-VL.length())_$E(vc7,1,40)
	do VOM
	set VL="" do VOM
	quit

VSUM3	// Summary
	type public String %TIM,CNAM,CUSTCD,DCRCD,EFD,I,IOSL,Q(),V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate

	if 'VT(3) quit
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set V=VT(3)					// @CNT(,N,4)
	set VL="              "_$J(V,4)
	set VL=VL_$J("",19-VL.length())_"Records"
	set VL=VL_$J("",32-VL.length())_"Total:"
	set V=VT(3,1,1)					// @TOT([REP291]EQUIV,)
	set VL=VL_$J("",40-VL.length())_$S(V="":"",1:$J(V,0,2))
	do VOM
	set VL="" do VOM
	quit

VDTL4	// Detail
	type public String %TIM,CNAM,CUSTCD,DCRCD,EFD,IOSL,Q(),V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                          "_$J(vc3,12)
	set VL=VL_$J("",40-VL.length())_$S(vc9="":"",1:$J(vc9,0,2))
	set VL=VL_$J("",56-VL.length())_$E(vc10,1,6)
	set VL=VL_$J("",64-VL.length())_$S(vc8="":"",1:$J(vc8,0,2))
	set VL=VL_$J("",78-VL.length())_$E(vc11,1,6)
	set VL=VL_$J("",88-VL.length())_$E(vc12,1,20)
	set VL=VL_$J("",111-VL.length())_$J(vc13,6)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CNAM,CONAM,CUSTCD,DCRCD,EFD,Q(),RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",122-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$J($$DAT^%ZM(EFD),10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="Customer Code: "_CUSTCD_" - "_vc5
	do VP1 quit:VFMQ!verror.get()  set V=$E(CNAM,1,40)
	set VL=VL_$J("",28-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="  "_"CIF Number    Emp Code  Name"
	do VOM
	set VL="                               "_"Account   Tran Amount   Currency   Equivalent  Branch    User ID                Seq"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: CNAM

 type public String CNAM,CUSTCD

 type RecordUTBLCC utblcc=Db.getRecord("UTBLCC","CCODE=:CUSTCD")

 set CNAM=utblcc.desc
	quit
