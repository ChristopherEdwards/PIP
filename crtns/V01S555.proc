V01S555(%ProcessMode,RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN)   //PBS - DEP - SID= <SRVPLN4> Service Fee Plan Definition 
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:52 - shetyes
 // This screen is used to add category 4 (service fees) to a service fee plan and
 // to define the fee specifications (charge option and fee amount or fee schedule)
 // for each fee item to be included in the fee plan.  The services listed on the
 // screen are from the Services sub-table of the Service Fee user table
 // (FEE"SRVFEE").
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="SRVPLN4",VPGM=$T(+0),VSNAME="Service Fee Plan Definition "
 set VFSN("FEEPLN")="zfFEEPLN",VFSN("FEESRV1")="zfFEESRV1"
 set vPSL=1
 set KEYS(1)=fFEESRV1(1).PLAN.get()
 set KEYS(2)=fFEESRV1(1).FEEDT.get()
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=12 do VPR(.fFEESRV1(),.fFEEPLN),VDA1(.fFEESRV1(),.fFEEPLN),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fFEESRV1(),.fFEEPLN),VPR(.fFEESRV1(),.fFEEPLN),VDA1(.fFEESRV1(),.fFEEPLN)
 if %ProcessMode do VLOD(.fFEESRV1(),.fFEEPLN) quit:$G(ER)  do VPR(.fFEESRV1(),.fFEEPLN),VDA1(.fFEESRV1(),.fFEEPLN)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fFEESRV1(),.fFEEPLN)
 type Number ptr
 set ptr=""
 for  set ptr = fFEESRV1(ptr).order() quit:ptr.isNull()  do {
     if fFEESRV1(ptr).FEEDT="" kill fFEESRV1(ptr)
     }
	quit


VNEW(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) // Initialize arrays if %O=0
 
 do VLOD(.fFEESRV1(),.fFEEPLN)
 do VDEF(.fFEESRV1(),.fFEEPLN)
 do VLOD(.fFEESRV1(),.fFEEPLN)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VNEWDQ(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) // Original VNEW section
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VLOD(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) // User defined access section
 //
 if '$D(%REPEAT) set %REPEAT=12
 if '$D(%MODS) set %MODS=1
 //I '$D(fFEEPLN) S fFEEPLN=$G(^UTBL("FEEPLN",PLAN))
 // Balance of load previously done in ^SRVPLN
 Q
 #ACCEPT date=11/05/03;pgm=Screen compiler
 quit
VLODDQ(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) //Original VLOD section
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) // Display screen prompts
 set VO="12||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,25,29,1,0,0,0,0,0,0)_"01T Service Fee Plan Definition "
 set VO(2)=$C(3,2,17,0,0,0,0,0,0,0)_"01TService Fee Plan:"
 set VO(3)=$C(3,49,13,0,0,0,0,0,0,0)_"01TServices Fees"
 set VO(4)=$C(3,63,12,0,0,0,0,0,0,0)_"01T- Category 4"
 set VO(5)=$C(4,7,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(6)=$C(4,49,15,0,0,0,0,0,0,0)_"01TEffective Date:"
 set VO(7)=$C(9,2,8,2,0,0,0,0,0,0)_"01TServices"
 set VO(8)=$C(9,14,11,2,0,0,0,0,0,0)_"01TDescription"
 set VO(9)=$C(9,37,3,2,0,0,0,0,0,0)_"01TOpt"
 set VO(10)=$C(9,47,6,2,0,0,0,0,0,0)_"01TAmount"
 set VO(11)=$C(9,55,8,2,0,0,0,0,0,0)_"01TSchedule"
 set VO(12)=$C(9,65,9,2,0,0,0,0,0,0)_"01TFee Table"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN)  // Display screen data
 new V
 //
 set VO="15|13|13|"
 set VO(13)=$C(3,20,5,2,0,0,0,0,0,0)_"01T"_$E(fFEEPLN.PLAN,1,5)
 set VO(14)=$C(4,20,25,2,0,0,0,0,0,0)_"01T"_$E(fFEEPLN.DESC,1,25)
 set VO(15)=$C(4,65,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fFEESRV1(1).FEEDT)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=11 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fFEESRV1(),.fFEEPLN)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN)  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'fFEESRV1(I).getPointer() do {
     set fFEESRV1(I)=Class.new("RecordFEESRV1","$G(KEYS(1)),$G(KEYS(2))")
     }
 set VO(VX+1)=$C(DY,2,8,2,0,0,0,0,0,0)_"01T"_$E(fFEESRV1(I).MISCTC,1,8)
 set VO(VX+2)=$C(DY,14,20,2,0,0,0,0,0,0)_"01T"_$E(fFEESRV1(I).DESC,1,20)
 set VO(VX+3)=$C(DY,38,1,2,0,0,0,0,0,0)_"00N"_fFEESRV1(I).CHGOPT
 set V=$S(fFEESRV1(I).FEEAMT="":"",1:$J(fFEESRV1(I).FEEAMT,0,4)) set VO(VX+4)=$C(DY,41,12,2,0,0,0,0,0,0)_"00N"_$S(fFEESRV1(I).FEEAMT="":"",1:$J(fFEESRV1(I).FEEAMT,0,4))
 set VO(VX+5)=$C(DY,57,6,2,0,0,0,0,0,0)_"00T"_$E(fFEESRV1(I).FEESCH,1,6)
 set VO(VX+6)=$C(DY,65,12,2,0,0,0,0,0,0)_"00T"_$E(fFEESRV1(I).FEETBL,1,12)
 set DY=DY+1,VX=VX+6
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=6,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=10+%REPEAT,BLKSIZ=(59*%REPEAT)+40,PGM=$T(+0),DLIB="SYSDEV",DFID="FEESRV1,FEEPLN",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("FEEPLN")="zfFEEPLN",VFSN("FEESRV1")="zfFEESRV1"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,19,5)_"21T12401|1|[FEEPLN]PLAN||if X?1AN.AN"
 set %TAB(2)=$C(3,19,25)_"21T12401||[FEEPLN]DESC"
 set %TAB(3)=$C(3,64,10)_"21D12402|1|[FEESRV1]FEEDT"
 set %TAB(4)=$C(10,1,8)_"21T12406|1|[FEESRV1]MISCTC"
 set %TAB(5)=$C(10,13,20)_"21T12401|1|[FEESRV1]DESC"
 set %TAB(6)=$C(10,37,1)_"00N12402|1|[FEESRV1]CHGOPT|[STBLFEECO]||do VP1^V01S555(.fFEESRV1,.fFEEPLN)"
 set %TAB(7)=$C(10,40,12)_"00N12403|1|[FEESRV1]FEEAMT|||do VP2^V01S555(.fFEESRV1,.fFEEPLN)||0|999999|4"
 set %TAB(8)=$C(10,56,6)_"00T12404|1|[FEESRV1]FEESCH|[UTBLFEESCH]FEESCH:DISTINCT||do VP3^V01S555(.fFEESRV1,.fFEEPLN)"
 set %TAB(9)=$C(10,64,12)_"00T12408|1|[FEESRV1]FEETBL|[UTBLFEETBL]||do VP4^V01S555(.fFEESRV1,.fFEEPLN)"
 do VTBL(.fFEESRV1(),.fFEEPLN)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordFEESRV1 fFEESRV1()
 type Public RecordFEEPLN fFEEPLN
 do VSPP1(.fFEESRV1(),.fFEEPLN)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN)
 // 
 // vvvvvvvvvvvvvvv Start Original Code vvvvvvvvvvvvvvv
 // S VAL="",ER=""
 // F I=1:1 S VAL=$O(FEESRV1(VAL)) Q:VAL=""  Q:ER  S LIN=FEESRV1(VAL) D CHECK
 // Q
 //CHECK ; FOR VALID ENTRIES AT FEETYP LEVEL - MAKE SURE ONE OF TWO IS THERE
 // ;
 // I $L($P(LIN,"|",2,5))'>3 Q  ; IF NO DATA ENTRY ON LINE, QUIT
 // I ''($P(LIN,"|",3))+''($P(LIN,"|",4))+''($P(LIN,"|",8))>1 S ER=1,RM=$$^MSG(2097) Q
 // I '$L($P(LIN,"|",3)),'$L($P(LIN,"|",4)),'$L($P(LIN,"|",8)) S ER=1,RM=$$^MSG(1064) Q
 // Q
 // ^^^^^^^^^^^^^^^ End Original Code ^^^^^^^^^^^^^^^^^
 // 
 set VAL="" set ER=""
 for I=1:1 set VAL=$O(FEESRV1(VAL)) quit:VAL=""  quit:ER  set LIN=FEESRV1(VAL) do CHECK
 quit 

CHECK	// FOR VALID ENTRIES AT FEETYP LEVEL - MAKE SURE ONE OF TWO IS THERE
 //
 if $L($P(LIN,"|",2,5))'>3 quit         // IF NO DATA ENTRY ON LINE, QUIT
 if ''($P(LIN,"|",3))+''($P(LIN,"|",4))+''($P(LIN,"|",8))>1 set ER=1 set RM=$$^MSG(2097) quit   // Only fee amount, fee schedule, or fee lookup table allowed for any line item
 if '$L($P(LIN,"|",3)),'$L($P(LIN,"|",4)),'$L($P(LIN,"|",8)) set ER=1 set RM=$$^MSG(1064) quit  // Fee amount, fee schedule, or fee lookup table required for each line item
 quit 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) //
 // 
 // vvvvvvvvvvvvvvv Start Original Code vvvvvvvvvvvvvvv
 // I X=1 D  Q
 // .	I [FEEPLN]PLTP(I(1)).=0 S ER=1,RM=$$^MSG(2488) Q
 // .	I [FEEPLN]PLTP(I(1)).=1 S ER=1,RM=$$^MSG(3135) Q
 // I X="",V'="" D DEL Q
 // Q
 //DEL ; Delete balance of line if Chg Opt is removed
 // .DELETE. [FEESRV1]FEEAMT(I(1)).
 // .DELETE. [FEESRV1]FEESCH(I(1)).
 // .DELETE. [FEESRV1]FEETBL(I(1)).
 // Q
 // ^^^^^^^^^^^^^^^ End Original Code ^^^^^^^^^^^^^^^^^
 // 
 if X=1 do { quit 
 	if fFEEPLN.PLTP=0 set ER=1 set RM=$$^MSG(2488) quit   // Service fees only assessed on analysis (Option 1 not valid)
 	if fFEEPLN.PLTP=1 set ER=1 set RM=$$^MSG(3135) quit   // Usage credit plans only assess on analysis (charge option 2)
 	}
 if X="",V'="" do DEL quit 
 quit 

DEL	// Delete balance of line if Chg Opt is removed
 do DELETE^DBSMACRO("[FEESRV1]FEEAMT","1","0")
 do DELETE^DBSMACRO("[FEESRV1]FEESCH","1","0")
 do DELETE^DBSMACRO("[FEESRV1]FEETBL","1","0")
 quit 
VP2(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) //
 // 
 // vvvvvvvvvvvvvvv Start Original Code vvvvvvvvvvvvvvv
 // I X="" Q
 // I '$L([FEESRV1]CHGOPT(I(1)).) S ER=1,RM=$$^MSG(1838) Q
 // .DELETE. [FEESRV1]FEESCH(I(1)).
 // .DELETE. [FEESRV1]FEETBL(I(1)).
 // ^^^^^^^^^^^^^^^ End Original Code ^^^^^^^^^^^^^^^^^
 // 
 if X="" quit 
 if '$L(fFEESRV1(I(1)).CHGOPT) set ER=1 set RM=$$^MSG(1838) quit      // Must have charge option before entering fee amount
 do DELETE^DBSMACRO("[FEESRV1]FEESCH","1","0")
 do DELETE^DBSMACRO("[FEESRV1]FEETBL","1","0")
 quit
VP3(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) //
 // 
 // vvvvvvvvvvvvvvv Start Original Code vvvvvvvvvvvvvvv
 // I '$L([FEESRV1]CHGOPT(I(1)).),$L(X) S ER=1,RM=$$^MSG(1839) Q
 // Q:'$L([FEESRV1]CHGOPT(I(1)).)
 // I X="" Q
 // I '$D(^UTBL("FEE","FEESCH",X)) Q
 // .DELETE. [FEESRV1]FEEAMT(I(1)).
 // .DELETE. [FEESRV1]FEETBL(I(1)).
 // ^^^^^^^^^^^^^^^ End Original Code ^^^^^^^^^^^^^^^^^
 // 
 if '$L(fFEESRV1(I(1)).CHGOPT),$L(X) set ER=1 set RM=$$^MSG(1839) quit        // Must have charge option before entering fee schedule
 quit:'$L(fFEESRV1(I(1)).CHGOPT) 
 if X="" quit 
 type String KEY
 set KEY="""FEESCH"""
 if 'Db.isDefined("UTBLFEE","KEY,X") quit
 do DELETE^DBSMACRO("[FEESRV1]FEEAMT","1","0")
 do DELETE^DBSMACRO("[FEESRV1]FEETBL","1","0")
 quit
VP4(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN) //
 // 
 // vvvvvvvvvvvvvvv Start Original Code vvvvvvvvvvvvvvv
 // I '$L([FEESRV1]CHGOPT(I(1)).),$L(X) S ER=1,RM=$$^MSG(28) Q
 // Q:'$L([FEESRV1]CHGOPT(I(1)).)
 // I X="",'$L([FEESRV1]FEEAMT(I(1)).),'$L([FEESRV1]FEESCH(I(1)).) S ER=1,RM=$$^MSG(1063) Q
 // I X="" Q
 // .DELETE. [FEESRV1]FEEAMT(I(1)).
 // .DELETE. [FEESRV1]FEESCH(I(1)).
 // ^^^^^^^^^^^^^^^ End Original Code ^^^^^^^^^^^^^^^^^
 // 
 if '$L(fFEESRV1(I(1)).CHGOPT),$L(X) set ER=1 set RM=$$^MSG(28) quit  // Must have charge option before entering fee lookup table
 quit:'$L(fFEESRV1(I(1)).CHGOPT) 
 if X="",'$L(fFEESRV1(I(1)).FEEAMT),'$L(fFEESRV1(I(1)).FEESCH) set ER=1 set RM=$$^MSG(1063) quit    // Fee amount, fee schedule, or fee lookup table required
 if X="" quit 
 do DELETE^DBSMACRO("[FEESRV1]FEEAMT","1","0")
 do DELETE^DBSMACRO("[FEESRV1]FEESCH","1","0")
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordFEESRV1 fFEESRV1()
 type Public RecordFEEPLN fFEEPLN
 do VPR(.fFEESRV1(),.fFEEPLN)
 do VDA1(.fFEESRV1(),.fFEEPLN)
 do ^DBSPNT()
 quit

VW(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN)
 do VDA1(.fFEESRV1(),.fFEEPLN)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordFEESRV1 fFEESRV1(),RecordFEEPLN fFEEPLN)
 do VDA1(.fFEESRV1(),.fFEEPLN)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordFEESRV1 fFEESRV1()
 type Public RecordFEEPLN fFEEPLN
 do VDA1(.fFEESRV1(),.fFEEPLN)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordFEESRV1 fFEESRV1()
 if sn="FEESRV1" do vSET1(fFEESRV1(I(1)),di,X)
 type Public RecordFEEPLN fFEEPLN
 if sn="FEEPLN" do vSET2(.fFEEPLN,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordFEESRV1 fFEESRV1,di,X)
 do fFEESRV1.setAuditFlag(1)
 set fFEESRV1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordFEEPLN fFEEPLN,di,X)
 do fFEEPLN.setAuditFlag(1)
 set fFEEPLN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordFEESRV1 fFEESRV1()
 if fid="FEESRV1" quit $$vREAD1(fFEESRV1(I(1)),di)
 type Public RecordFEEPLN fFEEPLN
 if fid="FEEPLN" quit $$vREAD2(.fFEEPLN,di)
 quit ""
vREAD1(RecordFEESRV1 fFEESRV1,di)
 quit fFEESRV1.@di
vREAD2(RecordFEEPLN fFEEPLN,di)
 quit fFEEPLN.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
