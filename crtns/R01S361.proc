R01S361	// SCA380 - Overdraft Protection Notice
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:48 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type String I(),PGM,PROG,typtbl()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"

	set RID="SCA380"
	set RN="Overdraft Protection Notice"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DTJ]TJD|[DTJ]TJD:DISTINCT:NOVAL||D EXT^DBSQRY||T|System Processing Date|||||"
	set %TAB("VIN2")="|255||[DTJ]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY|D PREQUER^@PROG|T|Product Type|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String I(),PGM,PROG,typtbl()
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CID,CONAM,FMBAL,FMCID,FMDT,RID,RN,VL,VLOF,VRF(),VSKIPREC,VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA380",RN="Overdraft Protection Notice"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA380","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=9999999			// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DTJ]TJD "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DTJ]TYPE "_VIN2,SEQ=SEQ+1
		set DQQRY(SEQ)="[DTJ]ETC=[PRODCTL]CRTROT AND [DTJ]ETC IS NOT NULL",SEQ=SEQ+1
		set DQQRY(SEQ)="[ACN]CLS=""D""",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DTJ,ACN,PRODCTL") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}


	// Alignment pattern
	if cuvar.alcount,IOTYP'="TRM",'VRWOPT("NOALIGN").get() do ^DBSRWALN(RID,IO,cuvar.alcount)

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DTJ.TSO,DTJ.TJD,DTJ.CID,DTJ.TSEQ,DTJ.DATETIME,DTJ."
	set VSELECT=VSELECT_"TAMT,DTJ.ENDBAL"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DTJ,ACN,PRODCTL",VWHERE,"DTJ.TJD,DTJ.CID,DTJ.TSEQ,DTJ.DATETIME","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc2,vovc3,vovc4,vovc5
	set vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece($C(9),1)			// DTJ.TSO
	set vc2=V.piece($C(9),2)			// DTJ.TJD
	set vc3=V.piece($C(9),3)			// DTJ.CID
	set vc4=V.piece($C(9),4)			// DTJ.TSEQ
	set vc5=V.piece($C(9),5)			// DTJ.DATETIME
	set vc6=V.piece($C(9),6)			// DTJ.TAMT
	set vc7=V.piece($C(9),7)			// DTJ.ENDBAL
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3
 /*
 ---- Revision History ------------------------------------------------
 06/19/06 - NATRAJAH - CR21257
	    The code has been moved from Fetch Pre processor to Fetch 
	    post Processor since the report level records are used in 
	    the code.
 	    Modified the Code to set FMBAL and FMDT correctly.
	    VSKIPREC has been used to process only the overdraft source 
	    account
 */

 type Public Date FMDT
 type public Number CID,FMBAL,FMCID,VSKIPREC
 type Number FMSEQ,FMTYP,FOUND
 type String array,FMCLS,FMCRCD,FMGRP,FMTRN,TSO
 type Date FTJD

 kill FMSEQ
 set TSO=vc1
 do OUT^UTSO(.array,TSO)
 set FMCID=array("TFR")
 //
 if FMCID="" set VSKIPREC=1 quit
 type RecordACN acn=Db.getRecord("ACN","CID=:FMCID")
 set FMTYP=acn.type,FMCLS=acn.cls,FMGRP=acn.grp,FMCRCD=acn.crcd
 type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:FMTYP",1)
 set FMTRN=prodctl.drtrot
 set FMSEQ="",FOUND=0
 set FTJD=vc2
 set CID=vc3
 type ResultSet rs2=Db.select("TSEQ,ETC,TAMT,TCMT,ENDBAL","DTJ","TJD=:FTJD AND CID=:FMCID")
 if rs2.isEmpty() set VSKIPREC=1 quit
 while rs2.next() do {
        set FMSEQ=rs2.getCol("TSEQ")
        if FMCLS'="L" do {
                if rs2.getCol("ETC")'=FMTRN set VSKIPREC=1 quit
                if (rs2.getCol("TCMT")).piece("-",2)'=CID set VSKIPREC=1 quit
                if FMSEQ(FMCID,FMSEQ).exists() set VSKIPREC=1 quit
                }
        set FMSEQ(FMCID,FMSEQ)=""
        set FOUND=1
        if FMCLS="L" do {
                type ResultSet rs3=Db.select("DIST1ND,BALCOL","LN","CID=:FMCID")
                if rs3.next() do {
                        set FMBAL=rs3.getCol("BALCOL"),FMDT=rs3.getCol("DIST1ND")
                        }
                }
        else  set FMBAL=rs2.getCol("ENDBAL"),FMDT=""
        }

	quit

VPREBQ	// Pre-processor (before query)

 type Public String PGM,PROG,RID
 set RID="SCA380" do ^URID set PROG=PGM quit
 //
PREQUER    //; Lookup table pre-processor
 type Public String I(),typtbl()
 type String des
 type Number type
 kill typtbl
 type ResultSet rs=Db.select("TYPE,DES","PRODDFTD","CLS='D'")
 while rs.next() do {
 	set type=rs.getCol("TYPE")
 	set des=rs.getCol("DES")
 	if 'typtbl(type).exists() set typtbl(type)=des_$J("",40-des.length())
 }
 set I(3)="typtbl("
 quit
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc2'=vc2) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc3'=+vc3) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(+vovc4'=+vc4) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String CID,FMBAL,FMCID,FMDT,I(),IOSL,PGM,PROG,RID,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VSKIPREC,VT(),typtbl(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc2,vovc3,vovc4,vovc5

	if VLC+20>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="                                        "_"Account Nbr."
	set VL=VL_$J("",56-VL.length())_"Date Due"
	set VL=VL_$J("",67-VL.length())_"New Odp Bal"
	do VOM
	set VL="" do VOM
	set VL="   "_"Overdraft Protection Notice"
	set VL=VL_$J("",40-VL.length())_$J(FMCID,12)
	set VL=VL_$J("",54-VL.length())_$J($$DAT^%ZM(FMDT),10)
	set VL=VL_$J("",67-VL.length())_$J(FMBAL,12,2)
	do VOM
	set VL="                                            "_"Checking Account:"
	set VL=VL_$J("",62-VL.length())_$J(vc3,12)
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="  "_"AN ADVANCE HAS BEEN MADE FROM YOUR OVERDRAFT PROTECTION ACCOUNT IN THE AMOUNT "
	do VOM
	set VL="  "_"OF "
	set VL=VL_$J("",5-VL.length())_$J(vc6,12)
	set VL=VL_$J("",18-VL.length())_". "
	set VL=VL_$J("",20-VL.length())_"YOUR NEW CHECKING ACCOUNT BALANCE IS "
	set VL=VL_$J("",57-VL.length())_$J($FN(vc7,",",2),12)
	set VL=VL_$J("",70-VL.length())_"."
	do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(ADDR(1),1,40) set VL="       "_V
	do VOM
	set VL="       "_$E(ADDR(2),1,40)
	do VOM
	set VL="       "_$E(ADDR(3),1,40)
	do VOM
	set VL="       "_$E(ADDR(4),1,40)
	do VOM
	set VL="       "_$E(ADDR(5),1,40)
	do VOM
	set VL="" do VOM
	quit

VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CID,CONAM,FMBAL,FMCID,FMDT,I(),PGM,PROG,RID,RN,VL,VSKIPREC,typtbl(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+0,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit

VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	use IO if 'VLC,'vcrt set $Y=1
	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: ADDR(1)

 type Public Number CID,I
 type Public Boolean ER
 type Public String ADDR()
 do ^UTLADDR(,"ADDR",5,2,"ACN",CID)
 if ER set ADDR(1)=$$^MSG(6504) for I=2:1:5 set ADDR(I)=""
	quit
