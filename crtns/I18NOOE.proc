public I18NOOE // OOE/MLD Utility Interface
  /*
	ORIG: kumarb - 10/21/2005

	I18N=QUIT     This program does not need to follow I18N standards 
	 DESC:		This program is an interface between OOE and the
			MLD Utility. It is responsible for controlling that
			the MLD is invoked with valid phrases and that this
			phrases has assigned the proper phrasetype.
			After returning from the MLD Utility this programs
			recalculate the starting position of the phrase in
			a right justified manner.
			
	 CALLED BY:	OOE Object Oriented Editor.
			FORMINST with I18N modification will connect the
			use of F9 and F10 keystrokes to the appropriate 
			linetag in this program.
	
	 CALL TO:      $$PHRTYP^I18NUTL	- Assign phrasetype 
			I18NMLD			- MLD Utility
			PUTRGN^FORMFUN		- Form region Utility
	
	 GLOBALS READ:
	 GLOBALS SET:
	 ARGUMENTS:
	 INPUTS:
	
	 RETURNS:
	 EXAMPLE:
	 LIBRARY:
	
	---Revision History-------------------------------------------
	
	10/21/05 - KUMARB - CR 16921
        	Converted to PSL.

	--------------------------------------------------------------
	*/
	
	do TRNST()
	
	quit
	
TRNST() // Translate phrases from Source to Target
	
	type String phrobj
	
	set phrobj="S"

	do PLOOP quit
	
TRNTS() // Translate phrases from Target to Source
	
	type String phrobj
	
	set phrobj="T"

	do PLOOP quit
	
PLOOP	// Looping the select buffer P(py,px)

	type public String D(,),M(,),P(,),RID,SID
	
	type Number dataerr,dbtyp,i,lenX,max,ooevfmq,phrtyp,px,pxM,pxP,py
	type String char,I18NOOE,Ophr,phr,phrobj,tab,val,X
	
	//  Used by MLDSCR^FORMI18N
	set I18NOOE="YES"
	//  Used to chek if element is data-elem.
	set dataerr=0
	//  Used to trac quit in multiselect obj.
	set ooevfmq=0
	set py="",px=""

	if 'P.data() write $$MSG^FORM("Select buffer is empty") quit

	for  set py=P(py).order() quit:py=""  for  set px=P(py,px).order() quit:px=""!(ooevfmq)  do {
		
		// Don't touch data
		if (D(py,px).exists()),(D(py,px).extract()'="@") do { quit
			set dataerr=1
			write $$MSG^FORM("Select buffer contains data element")
			}
		
		set X=M(py,px).extract(7,9999),lenX=X.length()
		
		// Assigning phrasetype to phrase
		if SID.exists() set dbtyp=2
		if RID.exists() set dbtyp=5
		if ('SID.exists()),('RID.exists()) do { quit
			write $$MSG^FORM("You are not in OOE!")
			set dataerr=1
			}
		
		set phr=X,Ophr=X
		set phrtyp=$$PHRTYP^I18NNRM(phr,dbtyp,"UXFI","UXDI")
		
		// Phrasetype 0 is not valid
		if phrtyp=0 do { quit
			write $$MSG^FORM(phr_" not translatable")
			set dataerr=1
			}
		
		// Make sure F9 not used to translate already translated phraes
		set max=0
		if phrobj="S" do {
			set val=$$GETPHR^I18NUTL("T",$$NRMPHR^I18NNRM(X,phrtyp),.tab,.max)
			if max>0 write $$MSG^FORM("Phrase already translated, use F10")
			}
		
		if max>0 set dataerr=1 quit
	
		if phrobj="T" do {
			set max=0
			set val=$$GETPHR^I18NUTL("T",$$NRMPHR^I18NNRM(X,phrtyp),.tab,.max)
			if max=0 write $$MSG^FORM("Phrase not translated, use F9")
			if max=0 set dataerr=1
			}
		
		if dataerr=1 quit
		
		// Make sure not translating non-english phrase
	 	if phrobj="S" do {
			set dataerr=0
			for i=1:1:X.length() quit:dataerr=1  do {
				set char=X.extract(i,i)
				if char.ascii()>128 do {
					set dataerr=1
					write $$MSG^FORM("Non-English phrase, use F10 or MLD add") 
					}
				}
			}
		
		if dataerr=1 quit
		
		// call the common I18NMLD utility
		do ^I18NMLD(phrobj,.phr,$S(py<17:18,1:1),phrtyp)
		
		if phr="" set X=Ophr
		else  set X=phr
		// Can't go to far left
		if (X.length()>lenX),((X.length()-lenX)>(px-1)) do {
			/* If the translated is longer than the original, 
			 and the diff is greater than the orig start
			 position, error clear the MLD form here */
			kill I18NOOE
			do PUTRGN^FORMFUN() 
			set dataerr=1
			write $$MSG^FORM("Phrase too Large for Screen")
			write $$CURPOS
			quit
			}
		if dataerr quit
		
		set M(py,px)=M(py,px).extract(1,6)_X
		
		// Calculating the starting position of phrase
		if lenX'=X.length() do {
	 		set pxM=M(py,px),pxP=P(py,px) kill M(py,px),P(py,px)
	 		set px=px+(lenX-X.length()),M(py,px)=pxM,P(py,px)=pxP
	 		}
	
		// Write out phrase
		do PUTOBJ^FORMFUN(py,px) quit
	}

	kill I18NOOE

	if 'dataerr do PUTRGN^FORMFUN() 

	write $$CURPOS
	
	quit
	
CURPOS() //

	type public String CSI,PX,PY

	quit CSI_PY_";"_PX_"H"

vSIG()	quit "60234^24058^Balasubramonian Sankar^4072"	// Signature - LTD^TIME^USER^SIZE
