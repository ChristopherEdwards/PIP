R01S637	// SCA827 - FDIC Schedule RC-E
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:54 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DTL,REDT
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DTL="N"
	type String VIN1=$$KEY^DBSREP("DEPFDE1","",1,"D")

	set RID="SCA827"
	set RN="FDIC Schedule RC-E"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DTL")="|1|||||||L|Print Detail|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DEPFDE1]REDT|[DEPFDE1]REDT:DISTINCT:NOVAL||if X set REDT=$$FDAT^%ZM(X) D EXT^DBSQRY||T|System Processing Date|||||"

	set %READ="IO/REQ,VIN1#0,DTL#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DTL,REDT
	type public Number DTL
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CIDNTAMT,CIDTAMT,CONAM,DESC,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DUMMY,FIRST,NTAAMT,RID,RN,TAAMT,VL,VLOF,VRF(),VSTATS(),ZHD1,ZHD2,ZLN(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA827",RN="FDIC Schedule RC-E"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA827","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DEPFDE1]CID#120#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DEPFDE1]REDT "_VIN1,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DEPFDE1") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC2|"_"System Processing Date"_"|VIN1|"_VIN1.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="FDIC Schedule RC-E"
		set VBNRINFO("PGM")="R01S637"
		set VBNRINFO("RID")="SCA827"
		set VBNRINFO("TABLES")="DEPFDE1"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DEPFDE1]REDT"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DEPFDE1]RCEL"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DEPFDE1]RECN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DEPFDE1]CID"

		set VBNRINFO("DOC",1)="The FDIC Schedule RC-E report summarizes the information needed for an"
		set VBNRINFO("DOC",2)="institution to complete the FDIC Schedule RC-E Deposit and Liabilities report."
		set VBNRINFO("DOC",3)=""
		set VBNRINFO("DOC",4)="---- Revision History -------------------------------------------------------"
		set VBNRINFO("DOC",5)=""
		set VBNRINFO("DOC",6)="06/10/05 - SWARNALATHAP - CR 16708"
		set VBNRINFO("DOC",7)="	   Converted to PSL"
		set VBNRINFO("DOC",8)="	"
		set VBNRINFO("DOC",9)=""

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DEPFDE1.REDT,DEPFDE1.RCEL,DEPFDE1.RECN,DEPFDE1.CID"
	set VSELECT=VSELECT_",DEPFDE1.REBAL"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DEPFDE1",VWHERE,"DEPFDE1.REDT,DEPFDE1.RCEL,DEPFDE1.RECN,DEPFDE1.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5
	set vc1=V.piece($C(9),1)			// DEPFDE1.REDT
	set vc2=V.piece($C(9),2)			// DEPFDE1.RCEL
	set vc3=V.piece($C(9),3)			// DEPFDE1.RECN
	set vc4=V.piece($C(9),4)			// DEPFDE1.CID
	set vc5=V.piece($C(9),5)			// DEPFDE1.REBAL
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public Boolean DTL
 type Public Number FIRST
 type Public String DESC,ZHD1,ZHD2,ZLN()

 // I18N=OFF
 set ZHD1="",ZHD2=""
 if DTL.get() set ZHD1="Account",ZHD2="Number"

 set ZLN(10)="Deposits of:"_"|"_$CHAR(1)_"|"
 set ZLN(10)=ZLN(10)_"Individuals, partnerships, & corporations|B549,B550"
 set ZLN(20)="U.S. Government|2202,2520"
 set ZLN(30)="States & political subdivisions in the U.S.|2203,2530"
 set ZLN(40)="Commercial banks & other depository"_"|"
 set ZLN(40)=ZLN(40)_"institutions in the U.S.|B551,B552"
 set ZLN(50)="Banks in foreign countries|2213,2236"
 set ZLN(60)="Foreign Governments and Official Institutions"_"|"
 set ZLN(60)=ZLN(60)_"(including foreign central banks)|2216,2377"
 set ZLN(70)="Total (sum of items 1 through 6)|2215,2385"
 set ZLN(80)="Total Demand Deposits|     2210"
 set ZLN(90)="Memorandum Items"_"|"_$CHAR(1)_"|"
 set ZLN(90)=ZLN(90)_"Total IRA & Keogh Plan accounts|     6835"
 set ZLN(100)="Savings Deposits"_"|"_$CHAR(1)_"|"
 set ZLN(100)=ZLN(100)_"   Money Market Deposit Accounts|     6810"

 set ZLN(110)="   Other savings deposits (excludes MMA)|     0352"
 set ZLN(120)="Total time deposits of less than $100,000|     6648"
 set ZLN(130)="Total time deposits of $100,000 or more|     2604"
 set ZLN(140)="Maturity & repricing data for time deposits of less than $100,000"_"|"	
 set ZLN(140)=ZLN(140)_"Time deposits of less than $100,000 w/remaining maturity"_"|"
 set ZLN(140)=ZLN(140)_"or next repricing date of"_"|"_$CHAR(1)_"|"
 set ZLN(140)=ZLN(140)_"   Three months or less|     A579"
 set ZLN(150)="   Over three months through 12 months|     A580"
 set ZLN(160)="   Over one year through three years|     A581"
 set ZLN(170)="   Over three years|     A582"
 set ZLN(180)="Time deposits of less than $100,000 w/a"_"|"
 set ZLN(180)=ZLN(180)_"remaining maturity of one year or less|     A241"
 set ZLN(190)="Maturity & repricing data for time deposits of $100,000 or more"_"|"
 set ZLN(190)=ZLN(190)_"Time deposits of $100,000 or more w/remaining maturity or next repricing date of:"_"|"_$CHAR(1)_"|"
 set ZLN(190)=ZLN(190)_"   Three months or less|     A584"
 set ZLN(200)="   Over three months through 12 months|     A585"

 set ZLN(210)="   Over one year through three years|     A586"
 set ZLN(220)="   Over three years|     A587"
 set ZLN(230)="Time deposits of $100,000 or more w/a"_"|"_$CHAR(1)_"|"
 set ZLN(230)=ZLN(230)_"Maturity of one year or less|     A242" 
 // I18N=ON
	quit

VPREBQ	// Pre-processor (before query)

 //Incoming=DTL,REDT
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL2	// Detail
	type public String %TIM,CIDNTAMT,CIDTAMT,DESC,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DTL,DUMMY,FIRST,IOSL,NTAAMT,REDT,TAAMT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,vc4,vc5,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+6>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC1,1,80) set VL=V
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC2,1,80)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC3,1,80)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC4,1,80)
	if 'VL.translate(" ").isNull() do VOM
	set VL=$E(DESC5,1,60)
	set VL=VL_$J("",62-VL.length())_$E(DESC6,1,9)
	set VL=VL_$J("",73-VL.length())_$J($FN(TAAMT,",",0),16)
	set VL=VL_$J("",93-VL.length())_$J($FN(NTAAMT,",",0),16)
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL3	// Detail
	type public String %TIM,CIDNTAMT,CIDTAMT,DESC,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DTL,DUMMY,FIRST,IOSL,NTAAMT,REDT,TAAMT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,vc4,vc5,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	quit:VD(3)  set VD(3)=1				// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP2 quit:VFMQ!verror.get()  set V=$E(DUMMY,1,2) set VL=" "_V
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL4	// Detail
	type public String %TIM,CIDNTAMT,CIDTAMT,DESC,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DTL,DUMMY,FIRST,IOSL,NTAAMT,REDT,TAAMT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,vc4,vc5,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(CIDTAMT,",",0),16) set VL="                                                                         "_V
	do VP4 quit:VFMQ!verror.get()  set V=$J($FN(CIDNTAMT,",",0),16)
	set VL=VL_$J("",93-VL.length())_V
	set V=vc4,VO=V do VP5 quit:VFMQ!verror.get()  set V=$J(V,21)
	set VL=VL_$J("",110-VL.length())_V		// [SYSDEV,DEPFDE1]CID
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CIDNTAMT,CIDTAMT,CONAM,DESC,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DTL,DUMMY,FIRST,NTAAMT,REDT,RID,RN,TAAMT,VL,ZHD1,ZHD2,ZLN(),vc1,vc2,vc3,vc4,vc5,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",46-VL.length())_"(Billion, Million, Thousand)                            System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="                                                                  "_"RCON            Total          Total"
	set VL=VL_$J("",124-VL.length())_$E(ZHD1,1,7)
	do VOM
	set VL="                                                                 "_"Number        Trans Acct    Non-Trans Acct"
	set VL=VL_$J("",125-VL.length())_$E(ZHD2,1,6)
	do VOM
	set VL="==================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC1

	type public String vc2
 type Public Date REDT
 type Public Number CIDTAMT,CIDNTAMT,FIRST,NTAAMT,RCEL,TAAMT
 type Public String DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,ZLN()

 type Boolean FLAG
 type Number L,XRECN,XRETOT 
 type String X
 
 // I18N=OFF
 set RCEL=vc2
 set FIRST=1
 set X=ZLN(RCEL)
 set L=X.length("|")
 set X="|||||||||".extract(1,6-L)_X
 set DESC1=X.piece("|",1)
 set DESC2=X.piece("|",2)
 set DESC3=X.piece("|",3)
 set DESC4=X.piece("|",4)
 set DESC5=X.piece("|",5)
 set DESC6=X.piece("|",6)

 // Trans Acct totals
 set TAAMT=0

 // Non-Trans Acct totals
 set NTAAMT=0

 // Indicates whether or no total balance for Trans Acct is 0.  
 set FLAG=0

 set CIDTAMT=0

 set CIDNTAMT=0
 
 // Select all cell numbers for the current line.
 type ResultSet rs = Db.select("RECN,RETOT","DEPFDE","REDT=:REDT AND RCEL=:RCEL")
 if 'rs.isEmpty() do {
 	while rs.next()  do {	
 		set XRECN=rs.getCol("RECN")
                set XRETOT=rs.getCol("RETOT")

                /*
		 There is only one cell per line for all lines over 70. The Total balance
                 of these cells should be reported under Non-Trans Acct totals (NTAAMT) 
                */

                if RCEL>70 set NTAAMT=XRETOT quit
                
	        /*
		 Value of the first selected cell corresponds to Trans Acct totals (TAAMT). 
                 If value of the TAAMT is 0 and this is a first selected cell - set TAAMT
                */

                if (TAAMT=0),('FLAG) set TAAMT=XRETOT
                else  set NTAAMT=XRETOT
                if FLAG quit

                // If this is a first selected cell and total balance is 0 - set FLAG
                if (TAAMT=0),(XRETOT=0) set FLAG=1
	}
 }

 // I18N=ON
	quit

VP2	// Column pre-processor - Variable: DUMMY

 type Public String DUMMY

 set DUMMY=""
	quit

VP3	// Column pre-processor - Variable: CIDTAMT

	type public String vc5
 type Public Number CIDTAMT,FIRST,RCEL
 
 if RCEL>70 set FIRST=0
 if FIRST set CIDTAMT=vc5
	quit

VP4	// Column pre-processor - Variable: CIDNTAMT

	type public String vc5
 type Public Number CIDNTAMT,FIRST
 
 if 'FIRST set CIDNTAMT=vc5
	quit

VP5	// Column pre-processor - [SYSDEV,DEPFDE1]CID

	type public String vc4
 type Public Boolean DTL
 type Public String V,VL

 if 'DTL!(vc4=0) set (V,VL)=""
	quit
