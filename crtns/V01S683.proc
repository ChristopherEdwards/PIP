V01S683(%ProcessMode,RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)   // -  - SID= <UTBLMATATT2> Interest Matrix by EFD 2
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:55 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,MPAGES,MATRIX",VSID="UTBLMATATT2",VPGM=$T(+0),VSNAME="Interest Matrix by EFD 2"
 set VFSN("UTBLMATATT")="zfUTBLMAT",VFSN("UTBLMATATT2")="zfUTBLMT2"
 set vPSL=1
 set KEYS(1)=fUTBLMAT.NAME
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=11 do VPR(.fUTBLMAT,.fUTBLMT2),VDA1(.fUTBLMAT,.fUTBLMT2),V5^DBSPNT quit

 set ER=0 do VSCRPRE(.fUTBLMAT,.fUTBLMT2) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fUTBLMAT,.fUTBLMT2),VPR(.fUTBLMAT,.fUTBLMT2),VDA1(.fUTBLMAT,.fUTBLMT2)
 if %ProcessMode do VLOD(.fUTBLMAT,.fUTBLMT2) quit:$G(ER)  do VPR(.fUTBLMAT,.fUTBLMT2),VDA1(.fUTBLMAT,.fUTBLMT2)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fUTBLMAT,.fUTBLMT2)
	quit


VNEW(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2) // Initialize arrays if %O=0
 
 do VDEF(.fUTBLMAT,.fUTBLMT2)
 do VLOD(.fUTBLMAT,.fUTBLMT2)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=11
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2) // Display screen prompts
 set VO="6||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,13,21,0,0,0,0,0,0,0)_"01TInterest Matrix Name:"
 set VO(2)=$C(2,14,20,1,0,0,0,0,0,0)_"01T Matrix Description:"
 set VO(3)=$C(3,18,16,1,0,0,0,0,0,0)_"01T Effective Date:"
 set VO(4)=$C(4,50,11,0,0,0,0,0,0,0)_"01TMore pages:"
 set VO(5)=$C(8,21,27,0,0,0,0,0,0,0)_"01TInterest Matrix Maintenance"
 set VO(6)=$C(10,57,4,0,0,0,0,0,0,0)_"01TRate"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)  // Display screen data
 new V
 s DESC1=$G(DESC1)
 s DESC2=$G(DESC2)
 s MATRIX=$G(MATRIX)
 s MPAGES=$G(MPAGES)
 //
 set VO="12|7|13|0"
 set VO(7)=$C(1,35,12,2,0,0,0,0,0,0)_"01T"_$E(fUTBLMT2.NAME,1,12)
 set VO(8)=$C(2,35,40,2,0,0,0,0,0,0)_"01T"_$E(fUTBLMAT.DESC,1,40)
 set VO(9)=$C(3,35,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fUTBLMT2.EFD)
 set VO(10)=$C(4,62,1,2,0,0,0,0,0,0)_"00L"_$S($G(MPAGES):"Y",1:"N")
 set VO(11)=$C(10,5,20,2,0,0,0,0,0,0)_"01T"_$G(DESC1)
 set VO(12)=$C(10,30,20,2,0,0,0,0,0,0)_"01T"_$G(DESC2)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+5,DY=12 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fUTBLMAT,.fUTBLMT2)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)  // Display data %REPEAT times
 //instantiate new object if necessary
 if %ProcessMode=5 new v1
 if  set (v1)=""
 else  new v1
 else  set (v1,MATRIX(I))=$G(MATRIX(I))
 
 set VO(VX+1)=$C(DY,5,18,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",1)
 set VO(VX+2)=$C(DY,30,18,2,0,0,0,0,0,0)_"00T"_$P(v1,"|",2)
 set V=$P(v1,"|",3) set VO(VX+3)=$C(DY,57,9,2,0,0,0,0,0,0)_"00N"_$S(V="":"",1:$J(V,0,5))
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=6,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=11+%REPEAT,BLKSIZ=(45*%REPEAT)+103,PGM=$T(+0),DLIB="SYSDEV",DFID="UTBLMATATT,UTBLMATATT2",VSCRPP=1,VSCRPP=1
 set OLNTB=VPB*1000
 
 set VFSN("UTBLMATATT")="zfUTBLMAT",VFSN("UTBLMATATT2")="zfUTBLMT2"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,34,12)_"21T12401|1|[UTBLMATATT2]NAME"
 set %TAB(2)=$C(1,34,40)_"21T12401||[UTBLMATATT]DESC"
 set %TAB(3)=$C(2,34,10)_"21D12402|1|[UTBLMATATT2]EFD"
 set %TAB(4)=$C(3,61,1)_"00L|*MPAGES|[*]@MPAGES|||do VP1^V01S683(.fUTBLMAT,.fUTBLMT2)"
 set %TAB(5)=$C(9,4,20)_"21T|*DESC1|[*]@DESC1"
 set %TAB(6)=$C(9,29,20)_"20T|*DESC2|[*]@DESC2"
 set %TAB(7)=$C(11,4,18)_"00T12401|*MATRIX(1)|[*]@MATRIX|^UTBL(""MATATT"",NAME,EFD,:NOVAL||do VP2^V01S683(.fUTBLMAT,.fUTBLMT2)"
 set %TAB(8)=$C(11,29,18)_"00T12402|*MATRIX(1)|[*]@MATRIX1|||do VP3^V01S683(.fUTBLMAT,.fUTBLMT2)"
 set %TAB(9)=$C(11,56,9)_"00N12403|*MATRIX(1)|[*]@RATE|||do VP4^V01S683(.fUTBLMAT,.fUTBLMT2)||||5"
 do VTBL(.fUTBLMAT,.fUTBLMT2)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordUTBLMATATT fUTBLMAT
 type Public RecordUTBLMATATT2 fUTBLMT2
 do VSPP1(.fUTBLMAT,.fUTBLMT2)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)
 /* Revision History
 04/21/05 - SmithCD - CR 15305
            Modified to comply with current PSL standards.
 
 */
 type Number TI
 set TI = ""
 for  set TI = MATRIX(TI).order() quit:TI.isNull()  do { quit:ER 
 	if MATRIX(TI).piece("|", 1)?1"-".N1".".N ! (MATRIX(TI).piece("|", 1)?.N1".".N) set MATRIX(TI).piece("|", 1) = +MATRIX(TI).piece("|", 1)
 	if MATRIX(TI).piece("|", 2)?1"-".N1".".N ! (MATRIX(TI).piece("|", 2)?.N1".".N) set MATRIX(TI).piece("|", 2) = +MATRIX(TI).piece("|", 2)
 	}
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2) //
 /* Revision History
 
 04/21/05 - SmithCD - CR 15305
            Modified to comply with current PSL standards.
 
 */

 type public String X

 if %ProcessMode = 0 do {
 	if (%PAGE > 1), (X - V = 0) set %PAGE = %PAGE + 1
 	if ('X),(%PAGE > 1) set %PAGE = %PG
 	if X - V = 0 quit 
 	if X - V = -1 quit 
 	if X set %PAGE = %PAGE + 1 quit
 	}

 if %ProcessMode = 1 do {
 	if X set %PAGE = %PAGE + 1 set V = 1
 	if (%PAGE > 1), (X - V = 0) set %PAGE = %PAGE + 1
 	if (%PAGE > 1), ('X) set %PAGE = %PG
 	if (X - V = 0) ! (X - V = -1) quit
 	}

 quit
VP2(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2) //
 /* Revision History

 04/21/05 - SmithCD - CR 15305
	    Removed third parameter in call to LOAD^SCARND to prevent "More 
	    actual parameters than formal parameters" error. Modified to 
	    comply with current PSL standards.

 */

 type public String NAME, ITEM1, V, X
 type public Number dp()
 
 type Number DEC
 type String DEC1, DI, TBL, TYP

 // No duplicates allowed (duplicate keys row or spread values)
 if X - V = 0 quit

 if X.isNull() do { quit
 	do DELETE^DBSMACRO("@MATRIX1", "1", "0")
 	do DELETE^DBSMACRO("@RATE", "1", "0")
 }

 type RecordUTBLMATATT utblmatt = Db.getRecord("UTBLMATATT", "NAME=:NAME")
 set ITEM1 = utblmatt.row

 type RecordSTBLMATATT stblmatt = Db.getRecord("STBLMATATT", "ITEM=:ITEM1")
 set DEC1 = stblmatt.dep
 if DEC1.isNull() set DEC1 = stblmatt.ln

 if 'DEC1.isNull() do {
 	set TBL = DEC1.piece(".", 1)
 	set DI = DEC1.piece(".", 2)

	type ResultSet rs = Db.select("TYP", "DBTBL1D", "%LIBS='SYSDEV' AND FID=:TBL AND DI=:DI")
	if rs.next() set TYP = rs.getCol("TYP")
	else  set TYP = ""

 	if TYP = "$" do {
 		set DEC = $$LOAD^SCARND(%CRCD, .dp())
 		if X?.N1".".N set X = $$^SCARND(X, DEC)
 		if X?.N set X = $$^SCARND(+X, , , %CRCD, 0)
 		}
 	else  if X?.N!(X?.N1".".N) set X = $$^SCARND(+X, , ,%CRCD, 0)
 	}

 quit 
VP3(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2) //
 /* Revision History
 
 04/21/05 - SmithCD - CR 15305
            Removed third parameter in call to LOAD^SCARND to prevent "More
            actual parameters than formal parameters" error. Modified to 
	    comply with current PSL standards.
 
 */

 type public String NAME, ITEM1, X
 type public Number dp()

 type Number DEC1, DEC
 type String DEC1, DI, TBL, TYP

 if X.isNull() quit

 // Invalid entry ~p1
 if X'?.N, (X'?.N1".".N), (X'?."-".N), (X'?."-".N1".".N) do Runtime.setErrMSG("UTBLMATATT2", 5791, X) quit

 type RecordUTBLMATATT utblmatt = Db.getRecord("UTBLMATATT", "NAME=:NAME")
 set ITEM1 = utblmatt.row

 type RecordSTBLMATATT stblmat1 = Db.getRecord("STBLMATATT", "ITEM=:ITEM1")
 set DEC1 = stblmat1.dep
 if DEC1.isNull() set DEC1 = stblmat1.ln

 if 'DEC1.isNull() do {
 	set TBL = $P(DEC1,".",1)
 	set DI = $P(DEC1,".",2)
	type ResultSet rs = Db.select("TYP","DBTBL1D","%LIBS='SYSDEV' AND FID=:TBL AND DI=:DI")
        if rs.next() set TYP = rs.getCol("TYP")
	else  set TYP = ""

 	if TYP = "$" do {
 		set DEC = $$LOAD^SCARND(%CRCD, .dp())
 		if X?.N1".".N set X = $$^SCARND(X, DEC)
 		if X?.N set X = $$^SCARND(+X, , , %CRCD, 0)
 		}
 	else  do {
 		if X?.N!(X?.N1".".N) set X = $$^SCARND(+X, , ,%CRCD, 0) quit
 		}
 	}

 // Data required
 if X.isNull(), 'MATRIX(z1).piece("|", 1).isNull(), 'MATRIX(z1).piece("|", 3).isNull() do Runtime.setErrMSG("UTBLMATATT2", 741) quit

 quit
VP4(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2) //
 /* Revision History

 04/21/05 - SmithCD - CR 15305
	    Modified to comply with current PSL standards.

 */

 type public Number z1, X
 type public String MATRIX()

 // Data required
 if X.isNull(), 'MATRIX(z1).piece("|", 2).isNull(), 'MATRIX(z1).piece("|", 1).isNull() do Runtime.setErrMSG("UTBLMATATT2", 741) quit

 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordUTBLMATATT fUTBLMAT
 type Public RecordUTBLMATATT2 fUTBLMT2
 do VPR(.fUTBLMAT,.fUTBLMT2)
 do VDA1(.fUTBLMAT,.fUTBLMT2)
 do ^DBSPNT()
 quit

VW(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)
 do VDA1(.fUTBLMAT,.fUTBLMT2)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)
 do VDA1(.fUTBLMAT,.fUTBLMT2)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordUTBLMATATT fUTBLMAT
 type Public RecordUTBLMATATT2 fUTBLMT2
 do VDA1(.fUTBLMAT,.fUTBLMT2)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordUTBLMATATT fUTBLMAT
 if sn="UTBLMATATT" do vSET1(.fUTBLMAT,di,X)
 type Public RecordUTBLMATATT2 fUTBLMT2
 if sn="UTBLMATATT2" do vSET2(.fUTBLMT2,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordUTBLMATATT fUTBLMAT,di,X)
 do fUTBLMAT.setAuditFlag(1)
 set fUTBLMAT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordUTBLMATATT2 fUTBLMT2,di,X)
 do fUTBLMT2.setAuditFlag(1)
 set fUTBLMT2.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordUTBLMATATT fUTBLMAT
 if fid="UTBLMATATT" quit $$vREAD1(.fUTBLMAT,di)
 type Public RecordUTBLMATATT2 fUTBLMT2
 if fid="UTBLMATATT2" quit $$vREAD2(.fUTBLMT2,di)
 quit ""
vREAD1(RecordUTBLMATATT fUTBLMAT,di)
 quit fUTBLMAT.@di
vREAD2(RecordUTBLMATATT2 fUTBLMT2,di)
 quit fUTBLMT2.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VSCRPRE(RecordUTBLMATATT fUTBLMAT,RecordUTBLMATATT2 fUTBLMT2)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 /* Revision History
 
 04/21/05 - SmithCD - CR 15305
            Modified to comply with current PSL standards.
 
 */
 type public Number MPAGES
 type public String DESC1, DESC2
 type Number ITEM1, ITEM2
 set MPAGES = 0
  
 type RecordUTBLMATATT utblmatt = Db.getRecord("UTBLMATATT", "NAME=:NAME")
 set ITEM1 = utblmatt.row
 type RecordSTBLMATATT stblmatt = Db.getRecord("STBLMATATT", "ITEM=:ITEM1")
 set DESC1 = stblmatt.desc
 
 set fUTBLMT2.efd = %EffectiveDate
 set ITEM2 = utblmatt.matcol
 type RecordSTBLMATATT stblmat2 = Db.getRecord("STBLMATATT", "ITEM=:ITEM2")
 set DESC2 = stblmat2.desc
 quit 
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
