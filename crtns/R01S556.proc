R01S556	// SCA637A - Daily MMF by Transaction Account Product
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:52 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="SCA637A"
	set RN="Daily MMF by Transaction Account Product"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %BLK,%NOCLOSE,%NOOPEN,%TIM,CONAM,ITYPE,PGM,RID,RN,VL,VLOF,VRF(),VSTATS(),fDEPINVC,fDEPINVS,fDEPINVT,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA637A",RN="Daily MMF by Transaction Account Product"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA637A","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:4 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DEPINVSORT.CRCD,DEPINVSORT.CC,DEPINVSORT.TYPE,DEPINVSORT.ITYPE,DEPINVSORT.CID,DEPINVSORT.ICID,DEPINVTYPE.TYPE,DEPINVTYPE.TBAL,DEPINVTYPE.TBALCOL,DEPINVTYPE.TSWPILE,DEPINVTYPE.TSWPINVB,DEPINVSORT.BAL,DEPINVSORT.ACR,DEPINVSORT.IYTD,DEPINVSORT.BWY","DEPINVSORT,DEPINVTYPE","","DEPINVSORT.CRCD,DEPINVSORT.CC,DEPINVSORT.TYPE,DEPINVSORT.ITYPE,DEPINVSORT.CID,DEPINVSORT.ICID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15
	set vc1=V.piece($C(9),1)			// DEPINVSORT.CRCD
	set vc2=V.piece($C(9),2)			// DEPINVSORT.CC
	set vc3=V.piece($C(9),3)			// DEPINVSORT.TYPE
	set vc4=V.piece($C(9),4)			// DEPINVSORT.ITYPE
	set vc5=V.piece($C(9),5)			// DEPINVSORT.CID
	set vc6=V.piece($C(9),6)			// DEPINVSORT.ICID
	set vc7=V.piece($C(9),7)			// DEPINVTYPE.TYPE
	set vc8=V.piece($C(9),8)			// DEPINVTYPE.TBAL
	set vc9=V.piece($C(9),9)			// DEPINVTYPE.TBALCOL
	set vc10=V.piece($C(9),10)			// DEPINVTYPE.TSWPILE
	set vc11=V.piece($C(9),11)			// DEPINVTYPE.TSWPINVB
	set vc12=V.piece($C(9),12)			// DEPINVSORT.BAL
	set vc13=V.piece($C(9),13)			// DEPINVSORT.ACR
	set vc14=V.piece($C(9),14)			// DEPINVSORT.IYTD
	set vc15=V.piece($C(9),15)			// DEPINVSORT.BWY
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

  type public String fDEPINVT,fDEPINVC,fDEPINVS 
  //Initialize variables in case there is no data
  set (fDEPINVT,fDEPINVC,fDEPINVS)=""
	quit

VRPOST	// Report post-processor

  type public String %BLK,%NOOPEN,%NOCLOSE,PGM,RM,RID
  type public Number IO
  set (%NOOPEN,%NOCLOSE)=""
  set %BLK=""
  set RM=""
  if $$INTRACT^%ZFUNC,$P=IO write $$MSG^%TRMVT("",,1)   
  set RID="SCA637B" do ^URID 
  if PGM.length() do V0^@PGM
  kill %NOCLOSE
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc13,vc12,vc15,vc14
	type Public String VSTATS

	set VT(6)=VT(6)+1
	set VT(6,1,1)=VT(6,1,1)+vc13			// @TOT([DEPINVSORT]ACR)
	set VT(6,2,1)=VT(6,2,1)+vc12			// @TOT([DEPINVSORT]BAL)
	set VT(6,3,1)=VT(6,3,1)+vc15			// @TOT([DEPINVSORT]BWY)
	set VT(6,4,1)=VT(6,4,1)+vc14			// @TOT([DEPINVSORT]IYTD)
	quit

VSUM4	// Summary
	type public String %BLK,%NOCLOSE,%NOOPEN,%TIM,I,IO,IOSL,ITYPE,PGM,RID,RM,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),fDEPINVC,fDEPINVS,fDEPINVT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL="                                     "_"Investment Totals:"
	set V=VT(4,2,1)					// @TOT([DEPINVSORT]BAL,)
	set VL=VL_$J("",61-VL.length())_$J(V,17,2)
	set V=VT(4,1,1)					// @TOT([DEPINVSORT]ACR,)
	set VL=VL_$J("",78-VL.length())_$J(V,17,5)
	set V=VT(4,4,1)					// @TOT([DEPINVSORT]IYTD,)
	set VL=VL_$J("",95-VL.length())_$J(V,17,2)
	set V=VT(4,3,1)					// @TOT([DEPINVSORT]BWY,)
	set VL=VL_$J("",112-VL.length())_$J(V,17,2)
	do VOM
	quit

VSUM5	// Summary
	type public String %BLK,%NOCLOSE,%NOOPEN,%TIM,I,IO,IOSL,ITYPE,PGM,RID,RM,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),fDEPINVC,fDEPINVS,fDEPINVT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if 'VT(5) quit
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="                        "_"Product Type"
	set VL=VL_$J("",38-VL.length())_$J(vc4,4)
	set VL=VL_$J("",45-VL.length())_"Count"
	set V=VT(5)					// @CNT(,N,9)
	set VL=VL_$J("",52-VL.length())_$J(V,9)
	set V=VT(5,2,1)					// @TOT([DEPINVSORT]BAL,)
	set VL=VL_$J("",62-VL.length())_$J(V,16,2)
	set V=VT(5,1,1)					// @TOT([DEPINVSORT]ACR,)
	set VL=VL_$J("",79-VL.length())_$J(V,16,5)
	set V=VT(5,4,1)					// @TOT([DEPINVSORT]IYTD,)
	set VL=VL_$J("",96-VL.length())_$J(V,16,2)
	set V=VT(5,3,1)					// @TOT([DEPINVSORT]BWY,)
	set VL=VL_$J("",113-VL.length())_$J(V,16,2)
	do VOM
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %BLK,%MSKD,%NOCLOSE,%NOOPEN,%TIM,CONAM,IO,ITYPE,PGM,RID,RM,RN,VL,fDEPINVC,fDEPINVS,fDEPINVT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+15,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="             "_"Currency Code:  "
	set VL=VL_$J("",32-VL.length())_$E(vc1,1,3)
	do VOM
	set VL="               "_"Cost Center:"
	set VL=VL_$J("",28-VL.length())_$J(vc2,7)
	do VOM
	set VL="=================================================================================================================================="
	do VOM
	set VL=" TOTALS - TRANSACTION ACCOUNT PRODUCT TYPE:"
	set VL=VL_$J("",44-VL.length())_$J(vc7,4)
	do VOM
	set VL="------------------------------------------------"
	do VOM
	set VL=" "_"Trans Acct Unswept Balance    Unavail (Fed) Funds         Loan Proceeds      Liquidity Balance"
	do VOM
	set VL="=================================================================================================================================="
	do VOM
	set VL="           "_$J(vc8,16,2)
	set VL=VL_$J("",34-VL.length())_$J(vc8-vc9,16,2)
	set VL=VL_$J("",51-VL.length())_$J(vc10,21,2)
	set VL=VL_$J("",79-VL.length())_$J(vc8+vc11,16,2)
	do VOM
	set VL="" do VOM
	set VL="                                             "_"Ledger Bal > .00   Ledger Balance  Div This Period     Div Paid YTD      Div W/H YTD"
	do VOM
	set VL="=================================================================================================================================="
	do VOM
	set VL="Totals By Investment Account Product Type:"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
