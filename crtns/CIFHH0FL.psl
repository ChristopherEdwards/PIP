CIFHH0FL(RecordCIFHH0 cifhh0, String vpar, Boolean vparNorm) // CIFHH0 - Members of Household Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:13 - joynerd
	// Generated from DATA-QWIK schema in: /profile/v72qa_gtmlx  by: /v72qa_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (3)              11/22/2003
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type public String verrors()

	type String vx(), vxins()                              // audit column array
	type Number %O = cifhh0.getMode()                      // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(cifhh0,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(cifhh0,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("ACN").exists()!vx("HHTYP").exists()!vx("MACN").exists() do vkchged quit // Primary key changed
		if vpar["/VALDD/" do VDDUX^DBSFILER("CIFHH0",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("CIFHH0","ACN = :cifhh0.acn and HHTYP = :cifhh0.hhtyp and MACN = :cifhh0.macn") // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String ACN
	type public String HHTYP
	type public String MACN

	type RecordCIFHH0 cifhh0 = Db.getRecord("CIFHH0","ACN=:ACN,HHTYP=:HHTYP,MACN=:MACN")
	if (%ProcessMode = 2) do {
		do cifhh0.setMode(2)

		do CIFHH0FL(cifhh0,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordCIFHH0 cifhh0

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("CIFHH0","ACN = :cifhh0.acn and HHTYP = :cifhh0.hhtyp and MACN = :cifhh0.macn") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	if vpar["/VALFK/" do CHKFKS                            // Check foreign keys
	if vpar["/VALRI/" do VFKEYS                            // Foreign key definition

	if vpar'["/NOUPDATE/" do {

		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(cifhh0)) S ^CIF(vobj(cifhh0,-3),98,vobj(cifhh0,-4),vobj(cifhh0,-5))=vobj(cifhh0)
		#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordCIFHH0 cifhh0


	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	ZWI ^CIF(vobj(cifhh0,-3),98,vobj(cifhh0,-4),vobj(cifhh0,-5))
	#ENDBYPASS
	quit


VFKEYS // Foreign keys

	type public String vfkey(),vpar

	type public RecordCIFHH0 cifhh0
	if 'cifhh0.macn.isNull() set vfkey("^CIF("_""""_cifhh0.acn_""""_","_97_","_""""_cifhh0.hhtyp_""""_","_""""_cifhh0.macn_""""_")")="CIFHH0(ACN,HHTYP,MACN) -> CIFHH"
	quit

CHKFKS   // Check foreign keys when not under buffer


	type public RecordCIFHH0 cifhh0
	type public Number %O
	type String vERRMSG

	if 'cifhh0.acn.isNull(),'cifhh0.hhtyp.isNull(),'cifhh0.macn.isNull() if 'Db.isDefined("CIFHH",":cifhh0.acn,:cifhh0.hhtyp,:cifhh0.macn") set vERRMSG = $$^MSG(8563,"CIFHH0(ACN,HHTYP,MACN) -> CIFHH") throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordCIFHH0 cifhh0

	set X = cifhh0.acn if 'X.isNull(),'Db.isDefined("CIF","X") set vRM = $$^MSG(1485,X) do vdderr("ACN", vRM) quit
	set X = cifhh0.hhtyp if 'X.isNull(),'Db.isDefined("UHHOLD","X") set vRM = $$^MSG(1485,X) do vdderr("HHTYP", vRM) quit
	set X = cifhh0.macn if 'X.isNull(),X'?1.12N,X'?1"-"1.11N set vRM=$$^MSG(742,"N") do vdderr("MACN", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("CIFHH0","MSG",979,"CIFHH0."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordCIFHH0 cifhh0

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	if vx("ACN").exists() set vux("ACN") = vx("ACN")
	if vx("HHTYP").exists() set vux("HHTYP") = vx("HHTYP")
	if vx("MACN").exists() set vux("MACN") = vx("MACN")
	do vkey(1) set voldkey = cifhh0.acn_","_cifhh0.hhtyp_","_cifhh0.macn // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALDD/" do vddver
	do vexec

	do vkey(2) set vnewkey = cifhh0.acn_","_cifhh0.hhtyp_","_cifhh0.macn // Copy new keys into object
	type RecordCIFHH0 vnewrec = cifhh0.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("CIFHH0",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	do vkey(1)                                             // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit

vkey(Number i) // Restore access keys

	type public String vux()
	type public RecordCIFHH0 cifhh0

	if vux("ACN").exists() set cifhh0.acn = vux("ACN").piece("|",i)
	if vux("HHTYP").exists() set cifhh0.hhtyp = vux("HHTYP").piece("|",i)
	if vux("MACN").exists() set cifhh0.macn = vux("MACN").piece("|",i)
	quit
