R01S346	// SCA359 - Daily File Maintenance Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1=TJD.get()
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA359"
	set RN="Daily File Maintenance Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[DTJFM]TJD|[DTJFM]TJD:DISTINCT:NOVAL||||D|Transaction Date|||||"
	set %TAB("VIN2")="|255||[DTJFM]CLS|[STBLCLS]:QU ""[STBLCLS]CLS=""""D"""" OR [STBLCLS]CLS=""""L""""""||D EXT^DBSQRY||T|Product Class|||||"
	set %TAB("VIN3")="|255||[DTJFM]GRP|[STBLGRP]:NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN4")="|255||[DTJFM]TYP|[DTJFM]TYP:DISTINCT:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN5")="|255||[DTJFM]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Range|||||"
	set %TAB("VIN6")="|255||[DTJFM]BRCD|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch Code|||||"
	set %TAB("VIN7")="|255||[DTJFM]UID|||D EXT^DBSQRY||T|Teller ID|||||"
	set %TAB("VIN8")="|255||[DTJFM]DI|||D EXT^DBSQRY||T|Data Item|||||"
	set %TAB("VIN9")="|255||[DTJFM]NEWVUF|||D EXT^DBSQRY||T|New Value|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String TJD
	type public Date VIN1
	type public String VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %ED,%TIM,CONAM,GRPTYP,LNNUM,LNTAG,NEWV,NEWV1,NEWV2,NEWV3,NEWV4,OLDV1,OLDV2,OLDV3,OLDV4,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA359",RN="Daily File Maintenance Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA359","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DTJFM]TJD = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DTJFM]CLS "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DTJFM]GRP "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DTJFM]TYP "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DTJFM]CID "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[DTJFM]BRCD "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[DTJFM]UID "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[DTJFM]DI "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[DTJFM]NEWVUF "_VIN9,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DTJFM") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Transaction Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC2|"_"Product Class"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Product Group"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Product Type"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Account Range"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Branch Code"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Teller ID"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Data Item"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"New Value"_"|VIN9|"_VIN9.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Daily File Maintenance Report"
		set VBNRINFO("PGM")="R01S346"
		set VBNRINFO("RID")="SCA359"
		set VBNRINFO("TABLES")="DTJFM"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DTJFM]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DTJFM]CLS"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DTJFM]GRP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DTJFM]TYP"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,DTJFM]CID"
		set VBNRINFO("ORDERBY",6)="[SYSDEV,DTJFM]TSEQ"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DTJFM.TJD,DTJFM.CLS,DTJFM.GRP,DTJFM.TYP,DTJFM.CID,"
	set VSELECT=VSELECT_"DTJFM.TSEQ,DTJFM.BRCD,DTJFM.UID,DTJFM.TIME,DTJFM.T"
	set VSELECT=VSELECT_"LO,DTJFM.DI,DTJFM.DESC,DTJFM.DATA"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DTJFM",VWHERE,"DTJFM.TJD,DTJFM.CLS,DTJFM.GRP,DTJFM.TYP,DTJFM.CID,DTJFM.TSEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5,vovc6,vc6
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13
	set vc1=V.piece($C(9),1)			// DTJFM.TJD
	set vc2=V.piece($C(9),2)			// DTJFM.CLS
	set vc3=V.piece($C(9),3)			// DTJFM.GRP
	set vc4=V.piece($C(9),4)			// DTJFM.TYP
	set vc5=V.piece($C(9),5)			// DTJFM.CID
	set vc6=V.piece($C(9),6)			// DTJFM.TSEQ
	set vc7=V.piece($C(9),7)			// DTJFM.BRCD
	set vc8=V.piece($C(9),8)			// DTJFM.UID
	set vc9=V.piece($C(9),9)			// DTJFM.TIME
	set vc10=V.piece($C(9),10)			// DTJFM.TLO
	set vc11=V.piece($C(9),11)			// DTJFM.DI
	set vc12=V.piece($C(9),12)			// DTJFM.DESC
	set vc13=V.piece($C(9),13)			// DTJFM.DATA
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 type Public Date %ED

 set %ED=$$DAT^%ZM(%SystemDate)
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5,vc6,vovc6
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,vb6=1,VH0=1
	if vb3!(vovc3'=vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc4'=+vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1,VH0=1
	if vb5!(+vovc5'=+vc5) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(6)=VT(6)+1
	quit

VDTL6	// Detail
	type public String %ED,%TIM,GRPTYP,IOSL,LNNUM,LNTAG,NEWV,NEWV1,NEWV2,NEWV3,NEWV4,OLDV1,OLDV2,OLDV3,OLDV4,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate

	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc5,12)
	set VL=VL_$J("",13-VL.length())_$E(vc7,1,6)
	set VL=VL_$J("",21-VL.length())_$E(vc8,1,12)
	set VL=VL_$J("",37-VL.length())_$J($$TIM^%ZM(vc9),11)
	set VL=VL_$J("",46-VL.length())_$E(vc10,1,12)
	set VL=VL_$J("",59-VL.length())_$E(vc11,1,12)
	set VL=VL_$J("",72-VL.length())_$E(vc12,1,20)
	do VP1 quit:VFMQ!verror.get()  set V=$E(OLDV1,1,35)
	set VL=VL_$J("",93-VL.length())_V
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	set V=$J(LNNUM,12) do VP2 quit:VFMQ!verror.get()  set VL=V
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                             "_$E(OLDV2,1,35)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                             "_$E(OLDV3,1,35)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                             "_$E(OLDV4,1,35)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                             "_$E(NEWV,1,35)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                             "_$E(NEWV1,1,35)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                             "_$E(NEWV2,1,35)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                             "_$E(NEWV3,1,35)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                             "_$E(NEWV4,1,35)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	set VL="" do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %ED,%MSKD,%TIM,CONAM,GRPTYP,LNNUM,LNTAG,NEWV,NEWV1,NEWV2,NEWV3,NEWV4,OLDV1,OLDV2,OLDV3,OLDV4,RID,RN,TJD,VL,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",97-VL.length())_"System Date:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$E(GRPTYP,1,60) set VL=V
	do VOM
	set VL="" do VOM
	set VL="   Account # Branch  User            Time     Location     Data         Description          Old Value                "
	do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(LNTAG,1,6) set VL="      "_V
	set VL=VL_$J("",21-VL.length())_"ID                                    Item                              New Value                "
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: OLDV1

	type public String vc13
 type public String DATA,OLDV1,OLDV2,OLDV3,OLDV4,NEWV,NEWV1,NEWV2,NEWV3,NEWV4
 set DATA=vc13
 set OLDV1=DATA.piece("|",3)
 set OLDV2=DATA.piece("|",4)
 set OLDV3=DATA.piece("|",5)
 set OLDV4=DATA.piece("|",6)
 set NEWV=DATA.piece("|",11)
 set NEWV1=DATA.piece("|",7)
 set NEWV2=DATA.piece("|",8)
 set NEWV3=DATA.piece("|",9)
 set NEWV4=DATA.piece("|",10)
	quit

VP2	// Column post-processor - Variable: LNNUM


	quit

VP3	// Column pre-processor - Variable: GRPTYP

	type public String vc2,vc3,vc4
 /*
  ------- Revision History ---------------------------------------------

	06/14/06 - KELLYP - CR 21769
		   Modified to initialize GRP and GRPTYP to null and to
		   quit when CLS and GRP aren't defined.  These changes 
		   prevent UNDEFINED and SQLFAIL errors when the report 
		   query does not return any data.

  ---------------------------------------------------------------------
 */
 type public String GRP,GRPTYP
 
 type String CLS,ZGRP
 type Number TYP,ZTYP

 set GRP=""
 set GRPTYP=""

 set CLS=vc2
 if CLS.isNull() quit

 set GRP=vc3
 if GRP.isNull() quit

 type RecordSTBLGRP stblgrp=Db.getRecord("STBLGRP","CLS=:CLS,GRP=:GRP",1)
 set ZGRP=stblgrp.des
 set TYP=vc4

 type RecordPRODCTL prodctl=Db.getRecord("PRODCTL","TYPE=:TYP",1)
 set ZTYP=prodctl.des

 set GRPTYP=GRP_" - "_ZGRP_"   "_TYP_" - "_ZTYP
	quit

VP4	// Column pre-processor - Variable: LNTAG

	type public String vc5
 type Public String GRP,LNTAG
 type Public Number LNNUM
 type Number CID1

 set LNTAG=""
 set LNNUM=""
 if GRP="ESC" D { quit
        set LNTAG="Loan #"
	set CID1=vc5
	type RecordDEP dep1=Db.getRecord("DEP","CID=:CID1")
	set LNNUM=dep1.aref
 }
	quit
