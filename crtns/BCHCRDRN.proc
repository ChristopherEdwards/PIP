BCHCRDRN //Batch BCHCRDRNW - Create Renewal Cards
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes
 //
 // ********** This is a DATA-QWIK generated Routine **********
 // Level 33  - BCHCRDRNW Batch Definition
 // ***********************************************************
 //
 //
 type public Number ER
 type public String %FN,RM
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 type Number %BatchExit,%BatchRestart,vBCHSTS
 type String vCONTEXT,vINPUT,vSYSVAR,vRESULT
 set %BatchExit=0,%BatchRestart=0,ER=0,RM=""
 do INIT^BCHUTL(.vSYSVAR)
 set vBCHSTS=$$STATUS^BCHUTL("BCHCRDRNW")
 if vBCHSTS=1 set ER=1,RM=$$^MSG(3410) quit
 if vBCHSTS=2 set ER=1,RM=$$^MSG(3414) quit
 if vBCHSTS=0 set %BatchRestart=1
 do vOPEN(.vINPUT,.%BatchExit) if %BatchExit do EXIT^BCHUTL("BCHCRDRNW") quit
 do JOBMGR^BCHUTL(%FN,"BCHCRDRNW",.vINPUT)
 do ^JOBMGR(.vINPUT)
 do EXIT^BCHUTL("BCHCRDRNW")
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vPROC(CRDTYP,CRDNUM) //
 type public Number ER
 type public String ET,%EVENT,%FN,%INTRPT(),RM,vCONTEXT
 catch vERROR {
 type public Number ER
 type public String RM
 
 do Runtime.rollback()
 
 do LOG^UTLEXC("BCHCRDRNW","*","",CRDTYP.get()_","_CRDNUM.get(), vERROR.thrownAt, vERROR.type)
 
 // DBFILER errors do not log on a call to ZE^UTLERR
 if vERROR.type="%PSL-E-DBFILER" do {
  type String ET = vERROR.type
  do ^UTLERR
 }
 else  do ZE^UTLERR
 
 set ER = 1
 set RM = vERROR.description
 }
 if ('%INTRPT.get().isNull())!(%INTRPT.data() > 1) do INTRPT^BCHUTL(%EVENT.get())
 if %BatchRestart,$$CHKLOG^BCHUTL(%SystemDate,%FN,"BCHCRDRNW",CRDTYP.get()_","_CRDNUM.get()) do { quit
 do LOG^BCHUTL(%SystemDate,%FN,"BCHCRDRNW",CRDTYP.get()_","_CRDNUM.get(),"Record already processed")
 }
 do Runtime.start("BA")
 set vCONTEXT=""
 set (ET,RM)=""
 set ER=0
 do vEXEC(.vCONTEXT,CRDTYP,CRDNUM)
 if ER.get() do { quit
 type String et
 set et=$S(ET.get().isNull():RM.get(),1:ET)
 
 do Runtime.rollback()
 do LOG^UTLEXC("BCHCRDRNW","*","",CRDTYP.get()_","_CRDNUM.get(),"",et)
 }
 do UPDLOG^BCHUTL(%SystemDate,%FN,"BCHCRDRNW",CRDTYP.get()_","_CRDNUM.get(),vCONTEXT)
 do Runtime.commit()
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vEXEC(vCONTEXT,CRDTYP,CRDNUM) //
 type public Boolean ER
 type public Number NEXTSEQ
 type public String RM
 type Number actopt,RPLCRD
 type String CID,CO,GRP
 
 // Get next expiring card
 type RecordCRD crd=Db.getRecord("CRD","CRDTYP=:CRDTYP,CRDNUM=:CRDNUM")

 if '((crd.stat=0)!(crd.stat=3)) quit

 set CO=crd.co
 set ER=0
	 
 type RecordCRD rcrd=Class.new("RecordCRD")
 set rcrd=crd.copy() 
 do rcrd.setMode(0)

 // Keep track of changes
 do crd.setAuditFlag(1)

 // Get and set replacement card number
	
 set RPLCRD=$$^CRDNUMGN(CRDTYP,crd.acn,CRDNUM,1)
	
 if RPLCRD="" do { quit
	if ER set ER=0
	// Could not generate replacement card number
	if RM.get()="" do Runtime.setErrMSG("CRDTYP",4006)
	do EXC
	}
	
 set crd.rplcrd=RPLCRD
 set rcrd.crdnum=crd.rplcrd
 set rcrd.crdtyp=crd.crdtyp

 do crd.save()

 // Set new status to renewal
 set rcrd.stat=7

 // Set new issue date
 set rcrd.isdt=crd.expdt			

 // Calculate and set new expiration date
 set rcrd.expdt=$$EOMJD^SCADAT(($$EXT^UMDT(crd.term,crd.expdt)),1)	//TANY

 type RecordCRDTYP crdtyp=Db.getRecord("CRDTYP","CARDTYPE=:CRDTYP")
 
 // Set new card replacement date
 set rcrd.rexpdt=rcrd.expdt-crdtyp.rnwroff
 
 // Set new expiration report date 
 set rcrd.rcrddt=rcrd.expdt-crdtyp.rnwoff
 
 do rcrd.save()

 // Link all accounts to the new card
 set CRDTYP=crd.crdtyp,CRDNUM=crd.crdnum
 
 type ResultSet rs=Db.select("GRP,CID","CRDGRP","CRDTYP=:CRDTYP AND CRDNUM=:CRDNUM")
 
 if rs.isEmpty() quit
 
 for  quit:'rs.next()  do {
 	set GRP=rs.getCol("GRP")
	set CID=rs.getCol("CID")
	type RecordCRDGRP crdgrp=Db.getRecord("CRDGRP","CRDTYP=:CRDTYP,CRDNUM=:CRDNUM,GRP=:GRP,CID=:CID",1)
	type RecordCRDGRP rcrdgrp=Class.new("RecordCRDGRP")
	set rcrdgrp=crdgrp.copy()
	do rcrdgrp.setMode(0) 
	set rcrdgrp.crdtyp=CRDTYP
	set rcrdgrp.crdnum=rcrd.crdnum
	set rcrdgrp.grp=GRP
	set rcrdgrp.cid=CID 
	do rcrdgrp.save()
	}

 // Create the action file entry if CUVAR.CMSACOPT is set.

 set actopt=CUVAR.cmsacopt
 quit:actopt'=1
 
 if NEXTSEQ.get().isNull() do { quit:ER 
	type ResultSet rscmsact=Db.select("SEQ","CMSACT",,"SEQ DESC")
      	if rscmsact.next() set NEXTSEQ=rscmsact.getCol("SEQ")+1
	else  set NEXTSEQ=1
	}

 set AC=11
 if AC'=SVAC.get() do { quit:ER
	type ResultSet rscmsact=Db.select("SEQ","CMSACT",,"SEQ DESC")
	if rscmsact.next() set NEXTSEQ=rscmsact.getCol("SEQ")+1
	else  set NEXTSEQ=1
	}

 if AC=SVAC.get() quit
 
 type RecordCMSACT cmsact=Class.new("RecordCMSACT")

 // Action table sequence
 set cmsact.seq=NEXTSEQ	
 // Renewal action code
 set cmsact.ac=11  			
 // Old Card Number
 set cmsact.ocrdnum=crd.crdnum		
 // New Card Number
 set cmsact.crdnum=crd.rplcrd		
 // Card Type
 set cmsact.crdtyp=crd.crdtyp		
 // Customer Number
 set cmsact.acn=crd.acn	
 // Date Time stamp		
 set cmsact.dttime=1	
 do cmsact.save()

 quit
	
	
EXC	// Log error to DAYEND
	
	type public String CRDNUM,%FN,RM,%ZTSEQ
	type String DESC
	
	type RecordSCATBL scatbl=Db.getRecord("SCATBL","FN=:%FN",1)
	set DESC=scatbl.desc
	
	do LOG^UTLEXC($T(+0),"*",DESC,CRDNUM.get(),%ZTSEQ.get(),RM.get())
	kill RM,%ZTSEQ
	
	quit
	
	
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXEC(vINPUT,vRETURN) //
 type String vRECORD,CRDTYP,CRDNUM
 for  set vRECORD=vINPUT.piece("|",1),vINPUT=vINPUT.extract(vRECORD.length()+2,99999) quit:vRECORD.isNull()  do {
 set CRDTYP=vRECORD.piece($C(9),1)
 set CRDNUM=vRECORD.piece($C(9),2)
 do vPROC(CRDTYP,CRDNUM)
 }
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXEC(vINPUT,vRETURN) //
 type public String vBUFOVFL
 type String vRECORD,vrow,CRDTYP,CRDNUM
 type Number vcur,vlen
 set vINPUT=vBUFOVFL.get()
 set vBUFOVFL="",vlen=0
 type public ResultSet vRESULT
 for  do { quit:'vcur
 set vcur=vRESULT.next() if 'vcur quit
 set vrow=vRESULT.getRow()_"|",vlen=vlen+vrow.length()
 if vlen>32000 set vBUFOVFL=vrow,vcur=0 quit
 set vINPUT=vINPUT_vrow if vlen+34>32000 set vcur=0 quit
 }
 set vINPUT=vINPUT.extract(1,vINPUT.length()-1)
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHPOST(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vOPEN(String vINPUT, Boolean %BatchExit) //
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 type public ResultSet vRESULT=Db.select("CRDTYP,CRDNUM","CRD","CRD.RCRDDT=:TJD")
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 if vRESULT.isEmpty() set %BatchExit=1 quit
 #ACCEPT Date=08/01/03;PGM=Allan Mattson;CR=20967
 set %BatchExit=0
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHRINIT(vINPUT,vRETURN) //
 set %UserID="BATCH"

 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vTHREXIT(vINPUT,vRETURN) //
  
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHINIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
private vSCHEXIT(vINPUT,vRETURN) //
 #ACCEPT Date=07/15/03;PGM=Allan Mattson;CR=20967
 quit
vVERSION() // Compiler Version ID
 quit "V7-0.02"
