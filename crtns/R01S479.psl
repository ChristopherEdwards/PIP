R01S479	// SCA533 - Provision Posting Verification Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:59 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String PID,vudwhere
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date RUNDAT

	set RID="SCA533"
	set RN="Provision Posting Verification Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("RUNDAT")="|10|||||D RUNDAT^PROVVER(X) I ER S RM=$$^MSG(1308)||D|Enter Posting Date|||||"

	set %READ="IO/REQ,RUNDAT#1,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String PID,vudwhere
	type public Date RUNDAT
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,PN,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA533",RN="Provision Posting Verification Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA533","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()


		if vudwhere.exists() set VWHERE=vudwhere

		set VBNRINFO("DESC")="Provision Posting Verification Report"
		set VBNRINFO("PGM")="R01S479"
		set VBNRINFO("RID")="SCA533"
		set VBNRINFO("TABLES")="PROVVER"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,PROVVER]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,PROVVER]CLS"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,PROVVER]TYPE"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,PROVVER]CID"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"PROVVER.PID,PROVVER.CLS,PROVVER.TYPE,PROVVER.CID,P"
	set VSELECT=VSELECT_"ROVVER.TITLE,PROVVER.OLDPROV,PROVVER.PROVADJ,PROVV"
	set VSELECT=VSELECT_"ER.NEWPROV,PROVVER.OPROVCAT,PROVVER.NPROVCAT,PROVV"
	set VSELECT=VSELECT_"ER.GLNUM1,PROVVER.GLAMT1,PROVVER.GLIND1,PROVVER.GL"
	set VSELECT=VSELECT_"NUM2,PROVVER.GLAMT2,PROVVER.GLIND2,PROVVER.GLNUM3,"
	set VSELECT=VSELECT_"PROVVER.GLAMT3,PROVVER.GLIND3,PROVVER.GLNUM4,PROVV"
	set VSELECT=VSELECT_"ER.GLAMT4,PROVVER.GLIND4"

	set VWHERE=""
	if vudwhere.exists() set VWHERE=vudwhere
	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"PROVVER",VWHERE,"PROVVER.PID,PROVVER.CLS,PROVVER.TYPE,PROVVER.CID","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4
	set vovc1="",vovc2="",vovc3="",vovc4=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22
	set vc1=V.piece($C(9),1)			// PROVVER.PID
	set vc2=V.piece($C(9),2)			// PROVVER.CLS
	set vc3=V.piece($C(9),3)			// PROVVER.TYPE
	set vc4=V.piece($C(9),4)			// PROVVER.CID
	set vc5=V.piece($C(9),5)			// PROVVER.TITLE
	set vc6=V.piece($C(9),6)			// PROVVER.OLDPROV
	set vc7=V.piece($C(9),7)			// PROVVER.PROVADJ
	set vc8=V.piece($C(9),8)			// PROVVER.NEWPROV
	set vc9=V.piece($C(9),9)			// PROVVER.OPROVCAT
	set vc10=V.piece($C(9),10)			// PROVVER.NPROVCAT
	set vc11=V.piece($C(9),11)			// PROVVER.GLNUM1
	set vc12=V.piece($C(9),12)			// PROVVER.GLAMT1
	set vc13=V.piece($C(9),13)			// PROVVER.GLIND1
	set vc14=V.piece($C(9),14)			// PROVVER.GLNUM2
	set vc15=V.piece($C(9),15)			// PROVVER.GLAMT2
	set vc16=V.piece($C(9),16)			// PROVVER.GLIND2
	set vc17=V.piece($C(9),17)			// PROVVER.GLNUM3
	set vc18=V.piece($C(9),18)			// PROVVER.GLAMT3
	set vc19=V.piece($C(9),19)			// PROVVER.GLIND3
	set vc20=V.piece($C(9),20)			// PROVVER.GLNUM4
	set vc21=V.piece($C(9),21)			// PROVVER.GLAMT4
	set vc22=V.piece($C(9),22)			// PROVVER.GLIND4
	quit

	// User-defined pre/post-processor code

VPREAQ	// Pre-processor (after query)

 /* 
  ---- Revision History ------------------------------------------------
 
	04/18/05 - TITOVE - CR 15089
		   Converted to PSL.
 */

 // Populate PROVVER table with values for the report.
 do START^PROVVER
	quit

VPREBQ	// Pre-processor (before query)

 /*
  ---- Revision History ------------------------------------------------
 
        04/08/05 - TITOVE - CR 15089
                   Added special WHERE clause to report's select
                   statement, to ensure correct process ID will
                   be used to extract data from TMP global.
 */
 
 type public Number PID
 type public String vudwhere
 
 set PID=%ProcessID
 set vudwhere="PROVVER.PID=:PID"

 //Incoming=PID,vudwhere
	quit

VRPOST	// Report post-processor

 /*
  ---- Revision History ------------------------------------------------
 
        04/08/05 - TITOVE - CR 15089
		   Modified as part of DBI2 project.
                   Added special WHERE clause to report's select
                   statement, to ensure correct process ID will
                   be used to extract data from TMP global.
		   Removed logic to delete teporary tables. It will
		   now be done by SCA534 report's post processor.
 */
 
 type public Number ER, PN, VFMQ, vcrt

 type Number PID
 type String PGM, RID, vudwhere
 
 // SOM page break logic
 if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)

 // Need to reset the where clause before calling SCA534
 set PID=%ProcessID
 set vudwhere="PROVGL.PID=:PID"

 set RID="SCA534" 

 do ^URID 

 // Invalid Report ~p1
 if PGM.isNull() do Runtime.setErrMSG("PROVVER",8074,RID) quit:ER

 // Run SCA534 report
 do V0^@PGM
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %TIM,ER,IOSL,PID,PN,RUNDAT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate,vudwhere

	if VLC+4>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc3,4)
	set VL=VL_$J("",6-VL.length())_$J(vc4,12)
	set VL=VL_$J("",20-VL.length())_$E(vc5,1,20)
	set VL=VL_$J("",49-VL.length())_$S(vc6="":"",1:$J(vc6,0,2))
	set VL=VL_$J("",63-VL.length())_$S(vc7="":"",1:$J(vc7,0,2))
	set VL=VL_$J("",77-VL.length())_$S(vc8="":"",1:$J(vc8,0,2))
	set VL=VL_$J("",91-VL.length())_$J(vc9,3)
	set VL=VL_$J("",96-VL.length())_$J(vc10,3)
	set VL=VL_$J("",101-VL.length())_$J(vc11,10)
	set VL=VL_$J("",113-VL.length())_$S(vc12="":"",1:$J(vc12,0,2))
	set VL=VL_$J("",127-VL.length())_$E(vc13,1,2)
	do VOM
	set VL="                                                                                                     "_$J(vc14,10)
	set VL=VL_$J("",113-VL.length())_$S(vc15="":"",1:$J(vc15,0,2))
	set VL=VL_$J("",127-VL.length())_$E(vc16,1,2)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                     "_$J(vc17,10)
	set VL=VL_$J("",113-VL.length())_$S(+vc18=0:$J("",12),1:$S(vc18="":"",1:$J(vc18,0,2)))
	set VL=VL_$J("",127-VL.length())_$E(vc19,1,2)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                     "_$J(vc20,10)
	set VL=VL_$J("",113-VL.length())_$S(+vc21=0:$J("",12),1:$S(vc21="":"",1:$J(vc21,0,2)))
	set VL=VL_$J("",127-VL.length())_$E(vc22,1,2)
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,PID,RID,RN,RUNDAT,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vrundate,vsysdate,vudwhere
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+9,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E($G(CONAM),1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="Verification for: "
	set VL=VL_$J("",18-VL.length())_$J($$DAT^%ZM(RUNDAT),10)
	do VOM
	set VL="" do VOM
	set VL="         "_"  Account                                  Old Prov.                   New Prov.  Old  New                            CR"
	do VOM
	set VL="Type        Number                  Name              Balance    Adjustment       Balance  Cat  Cat  G/L Number   Tran amount  DR"
	do VOM
	set VL="-----------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors
