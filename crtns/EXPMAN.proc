EXPMAN	
	/*
	ORIG: kumarss - 09/13/2005
	DESC: Manual Exposure Record Maintenance

	---- Comments --------------------------------------------------------

	---- Revision History ------------------------------------------------
	
	09/13/05 - KumarSS - CR 16667
		   Initial revision.
		   Converted into PSL.

	*/

	quit


NEW
	do INIT(0)
	quit


UPD
	do INIT(1)
	quit


DIS
	do INIT(2)
	quit


DEL
	do INIT(3)
	quit


	//---------------------------------------------------------------------
INIT(Number %ProcessMode)	// Process Mode
	//---------------------------------------------------------------------

	type RecordEXPOS fEXPOS

	do VPG(%ProcessMode,.fEXPOS)

	quit


	//---------------------------------------------------------------------
VPG(Number %ProcessMode,	// Prodcess Mode
    RecordEXPOS fEXPOS)		// EXPOS record object
	//---------------------------------------------------------------------
	
	// Page Control
	
	type public Number %PG,%PAGE
	type public String ER
	type Boolean FINISH = 0
        type Date OLDMDT
	type Number ACN,OLDCOMEXP,OLDOUTEXP
	type String INTPROD,OLDCRCD,OLNTB,RECID,SYS,VFMQ

	set %PG=0,%PAGE=1
	set (OLDCOMEXP,OLDOUTEXP)=0
	set (OLDMDT,OLDCRCD)=""
	
	for  do { quit:FINISH 
		
		if %PG=0 do VPG00(.ACN,.INTPROD,.RECID,.SYS,%ProcessMode) if ER!(VFMQ="Q") set FINISH=1 quit
                
		if %PG>0 do VPG01(ACN,INTPROD,RECID,SYS,%ProcessMode,.fEXPOS,.OLDCOMEXP,.OLDOUTEXP,.OLDCRCD,.OLDMDT)
	
		if "DFQ"[VFMQ do VER(ACN,INTPROD,RECID,SYS,%ProcessMode,.fEXPOS,.OLDCOMEXP,.OLDOUTEXP,.OLDCRCD,.OLDMDT) set FINISH=1 quit

  		set %PG=%PG+1
		}
		
	quit


	//---------------------------------------------------------------------
VPG00(Number ACN,		// Customer Number
      String INTPROD,		// Integrated Product Type
      String RECID,		// Record ID
      String SYS,		// System Name
      Number %ProcessMode)	// Process Mode

	//---------------------------------------------------------------------
	
	// Set up
	type public Number %OLNTB
	type public IO IO
	type public String %READ,%TAB(),ER,RM,VFMQ
	
	set %TAB("IO")=$$IO^SCATAB($I)
	set %OLNTB=0
	
	set %TAB("ACN")=".ACN1/XPP=S %EXT=1" do ^UCIF
	set %TAB("SYS")=".SYS/XPP=D POSP^EXPMAN/TBL=[STBLFTPSYS]"
	set %TAB("INTPROD")=".INTPROD/TBL=[UTBLINTPROD]:QU ""[UTBLINTPROD]SYS=<<SYS>>"""

	if %ProcessMode'=0 set %TAB("RECID")=".RECID/TBL=[EXPOS]:QU ""[EXPOS]ACN=<<ACN>> AND [EXPOS]SYS=<<SYS>> AND [EXPOS]INTPROD=<<INTPROD>>"""
	else  set %TAB("RECID")=".RECID"
	
	set %READ="@@%FN,,ACN/REQ,SYS/REQ,INTPROD/REQ,RECID/REQ"
	if %ProcessMode=2 set %READ=%READ_",,IO/REQ"

	do ^UTLREAD if VFMQ="Q" quit

	if %ProcessMode=2,IO'=$I do OPEN^SCAIO if ER set VFMQ="Q" quit

	if %ProcessMode=0 do {

		type ResultSet rsexpos=Db.select("RECID","EXPOS","ACN=:ACN AND SYS=:SYS AND INTPROD=:INTPROD")

		while rsexpos.next()  if rsexpos.getCol("RECID")=RECID set ER=1
		}
		
	// Record already exists
	if ER do Runtime.setErrMSG("EXPOS",2327) quit:ER

	quit


	//---------------------------------------------------------------------
VPG01(Number ACN,		// Customer Number
      String INTPROD,		// Integrated Product Type
      String RECID,		// Record ID
      String SYS,		// System Name
      Number %ProcessMode,	// Process Mode
      RecordEXPOS fEXPOS,	// EXPOS record object
      Number OLDCOMEXP,		// Old Committed Exposure
      Number OLDOUTEXP,		// Old Outstanding Exposure
      String OLDCRCD,		// Old Currency Code
      Date OLDMDT)		// Old Maturity Date
	//---------------------------------------------------------------------

	set fEXPOS = Db.getRecord("EXPOS","ACN=:ACN,SYS=:SYS,INTPROD=:INTPROD,RECID=:RECID",1)

        /*
        If record exists, save off 4 EXPOS columns needed in EXPCIFH
        procedure for new and old values comparizon. Need to do this here
        because unable to audit changes once EXPOS filer is called which
        happens before EXPCIFH call.
        */
        if fEXPOS.getMode()=1 do {
                set OLDCOMEXP=fEXPOS.comexp
                set OLDOUTEXP=fEXPOS.outexp
                set OLDCRCD=fEXPOS.crcd
                set OLDMDT=fEXPOS.mdt
                }

	do DRV^USID(%ProcessMode,"EXPMAN",.fEXPOS)

	quit


ERR
	type public String ER,VFMQ
	
	set ER=1 do ^UTLERR
	set VFMQ="Q"

	quit


	//---------------------------------------------------------------------
VER(Number ACN,			// Customer Number
    String INTPROD,		// Integrated Product Type
    String RECID,		// Record ID
    String SYS,			// System Name
    Number %ProcessMode,	// Process Mode
    RecordEXPOS fEXPOS,		// EXPOS record object
    Number OLDCOMEXP,		// Old Committed Exposure
    Number OLDOUTEXP,		// Old Outstanding Exposure
    String OLDCRCD,		// Old Currency Code
    Date OLDMDT)		// Old Maturity Date    
	//---------------------------------------------------------------------

	// Verification
	
	type public String VFMQ
	
	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END(%ProcessMode) quit

	do FILE(ACN,INTPROD,RECID,SYS,%ProcessMode,.fEXPOS)

	do UPDCIFH^EXPCIFH(.fEXPOS,OLDCOMEXP,OLDOUTEXP,OLDCRCD,OLDMDT,%ProcessMode)

	do END(%ProcessMode)

	quit


	//---------------------------------------------------------------------
FILE(Number ACN,		// Customer Name
     String INTPROD,		// Integrated Product Type
     String RECID,		// Record ID
     String SYS,		// System Name
     Number %ProcessMode,	// Process Mode
     RecordEXPOS fEXPOS)	// EXPOS record object
	//---------------------------------------------------------------------

	// File data

	type public String %UserID,IND,SIC,SYSTEM
	type Boolean GOVT
	type Date MDT
	type Number COMEXP,OUTEXP,TOTCOMEX,TOTOUTEX
	type String CNTRY,CRCD
	
	set SYSTEM=SYS  // needed in UPDATE^PROCLIM

	set COMEXP=fEXPOS.comexp
	set OUTEXP=fEXPOS.outexp
	set MDT=fEXPOS.mdt
	set CRCD=fEXPOS.crcd

	// Insert records into database
	if %ProcessMode=0 do {  quit
		do UPDATE^PROCLIM(fEXPOS.comexp,fEXPOS.outexp,1)
		
		// Log user id of user creating new exposure record
		set fEXPOS.uid=%UserID
		
		do fEXPOS.save()
		}

	// Modify existing records in database
	if %ProcessMode=1 do {  quit
		if fEXPOS.comexp=COMEXP set COMEXP=0
		else  if fEXPOS.comexp'=COMEXP set COMEXP=COMEXP-fEXPOS.comexp

		if fEXPOS.outexp=OUTEXP set OUTEXP=0 
		else  if fEXPOS.outexp'=OUTEXP set OUTEXP=OUTEXP-fEXPOS.outexp
		
		set fEXPOS.crcd=CRCD 
		set fEXPOS.mdt=MDT

		do fEXPOS.save()

		do UPDATE^PROCLIM(fEXPOS.comexp,fEXPOS.outexp,1)
		}
	
	// Delete records from database
	if %ProcessMode=3 do {
		do Db.delete("EXPOS","ACN=:ACN AND SYS=:SYS AND INTPROD=:INTPROD AND RECID=:RECID")
		set COMEXP=-COMEXP 
		set OUTEXP=-OUTEXP 

		type RecordCIF cif=Db.getRecord("CIF","ACN=:ACN")

		set CNTRY=cif.pcntry
		set SIC=cif.sic
		set GOVT=cif.govt

		if CNTRY.get()'="" do {

			type RecordEXPCNTRY expcntry=Db.getRecord("EXPCNTRY","CNTRY=:CNTRY",1)
			if expcntry.getMode()=0 quit

			set TOTCOMEX=expcntry.totcomexp 
			set TOTOUTEX=expcntry.totoutexp 

			set TOTCOMEX=TOTCOMEX+COMEXP 
			set TOTOUTEX=TOTOUTEX+OUTEXP 

			set TOTCOMEX=$$^SCARND(TOTCOMEX,0,"",CRCD)
			set TOTOUTEX=$$^SCARND(TOTOUTEX,0,"",CRCD)

			set expcntry.totcomexp=TOTCOMEX 
			set expcntry.totoutexp=TOTOUTEX
			
			do expcntry.save()
			}

		if SIC.get()'="" do {
			type RecordEXPIND expind=Db.getRecord("EXPIND","IND=:SIC",1)
			if expind.getMode()=0 quit
  
			set IND=SIC 
			set TOTCOMEX=expind.totcomexp 
			set TOTOUTEX=expind.totoutexp 

			set TOTCOMEX=TOTCOMEX+COMEXP
			set TOTOUTEX=TOTOUTEX+OUTEXP

			set TOTCOMEX=$$^SCARND(TOTCOMEX,0,"",CRCD)
			set TOTOUTEX=$$^SCARND(TOTOUTEX,0,"",CRCD)

			set expind.totcomexp=TOTCOMEX 
			set expind.totoutexp=TOTOUTEX
			
			do expind.save()
			}

		if GOVT.get()'="" do {
			type RecordEXPCNSOV expcnsov=Db.getRecord("EXPCNSOV","CNTRY=:GOVT",1)
			if expcnsov.getMode()=0 quit

			set TOTCOMEX=expcnsov.totcomexp
			set TOTOUTEX=expcnsov.totoutexp

			set TOTCOMEX=TOTCOMEX+COMEXP
			set TOTOUTEX=TOTOUTEX+OUTEXP

			set TOTCOMEX=$$^SCARND(TOTCOMEX,0,"",CRCD)
			set TOTOUTEX=$$^SCARND(TOTOUTEX,0,"",CRCD)

			set expcnsov.totcomexp=TOTCOMEX 
			set expcnsov.totoutexp=TOTOUTEX

			do expcnsov.save()
			}
		}
	
	quit
	
	
	//---------------------------------------------------------------------
END(Number %ProcessMode)	// Process Mode	
	//---------------------------------------------------------------------	
	
	// End of processing
	
	type public String ER,RM,VFMQ
	
	quit:ER.get()!(%ProcessMode=2)!(%ProcessMode=4)
	
	if VFMQ="Q" do {
		// Exposure record not created
		if %ProcessMode=0 do Runtime.setErrMSG("EXPOS",2820) quit:ER
		// Exposure record not modified
		if %ProcessMode=1 do Runtime.setErrMSG("EXPOS",2822) quit:ER
		// Exposure record not deleted
		if %ProcessMode=3 do Runtime.setErrMSG("EXPOS",2823) quit:ER
		}
	else  do {
		// Exposure record created
		if %ProcessMode=0 do Runtime.setErrMSG("EXPOS",2816) quit:ER
		// Exposure record modified
		if %ProcessMode=1 do Runtime.setErrMSG("EXPOS",2817) quit:ER
		// Exposure record deleted
		if %ProcessMode=3 do Runtime.setErrMSG("EXPOS",2818) quit:ER
		}

	set ER="W"
	
	quit


	//---------------------------------------------------------------------
POSP	// Post processor for IBS system
	//---------------------------------------------------------------------
	
	type public String ER,RM,X
	
	// Invalid selection
	if X="IBS" do Runtime.setErrMSG("EXPOS",1462)
	quit

vSIG()	quit "60185^29293^Sudanthiran S. Kumar^8974"	// Signature - LTD^TIME^USER^SIZE
