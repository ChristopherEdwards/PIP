BGTCDI		/* 

   	Procedure ID:  BGTCDI
 
        Description: Computed fields for Budget record.  
	Created 9/19/99 - Carol Scott
 
        This procedure definition is compiled into run-time program BGTCDI

	---- Revision History -----------------------------------------
	03/24/06 - TELIV - CR 20335
		   Added sections TAMT and COCDGL
	
	03/01/06 - Srinivar - CR 19799
		   Removed the control character in the section COCD
		   which was causing error during compilation.
		   Modified the COCD section to pass CO instead of X 
		   as the where clause
	
	08/30/05 - Srinivasan Rajesh - CR 16888
	 	   Modified the COCD section by replacing the deprecated 
	 	   method Db.getoneRow() to Db.getRecord().

	07/03/03 - ZWITKOWITSM - 51349
		   Add sections BGTTBL and SETBTBL back into routine.

	05/28/03 - CARROLLJ - 51349
		   Removed sections that use TR array and that are no longer
		   called.

	*/

	quit


BGTBAL(CID,BGTYRSD,BGTSEQ)  //Calculate the balance of a specific budget code

	type Number bgtbal
		       
	type RecordBUDGET budget=Db.getRecord("BUDGET","CID,BGTYRSD,BGTSEQ")

	set bgtbal=(budget.bgtamtcy-budget.amtpd)+budget.misccsh-budget.bgtjrnl 

	quit bgtbal


BGTTBL(CID,EFD,BGTTBL)	// Build BGTTBL select table array

	// Used as a pre-processor by MFVARP table value BGT to return a
	// table for budget sequence

	kill BGTTBL
	new BEFD,BGTYRSD,seqrs,stdtrs
	type ResultSet seqrs,stdtrs

	if EFD set BEFD=EFD
	else  set BEFD=TJD

	// Start date result set
	set stdtrs=Db.select("BGTYRSD","BUDGET","CID=:CID")
	if stdtrs.isEmpty() quit

	while stdtrs.next() do {
		set BGTYRSD=stdtrs.getCol(1)
		if BGTYRSD>BEFD quit		// Find budget record

		// Sequence result set
		set seqrs=Db.select("BGTSEQ,BGTCD,COCD","BUDGET","CID=:CID AND BGTYRSD=:BGTYRSD")
		if seqrs.isEmpty() quit

		while seqrs.next() do SETBTBL(.BGTTBL,.seqrs)
		}

	quit


SETBTBL(BGTTBL,ResultSet seqrs)	// Set budget table entry

	type Number BGTCD,BGTDES,BGTSEQ,COCD,CODES,MAXLEN,PART1,PART2,PARTLEN

	set BGTSEQ=seqrs.getCol(1)		// Budget Sequence
	set BGTCD=seqrs.getCol(2)		// Budget Code
	set COCD=seqrs.getCol(3)		// Company Code

	// Get Budget Code description from user table
	if BGTCD="" set BGTDES=""
	else  do {
		type RecordUTBLBGTCD ubgtcd=Db.getRecord("UTBLBGTCD","BGTCD",1)
		set BGTDES=ubgtcd.des
		}

	// Get Company Code description from user table
	if COCD="" set CODES=""
	else  do {
		type RecordUTBLCO utblco=Db.getRecord("UTBLCO","COCD",1)
		set CODES=utblco.des
		}

	// Truncate descriptions
	set MAXLEN=30
	set PART1=$E(BGTCD_" "_BGTDES,1,MAXLEN)
	set PART2=$E(COCD_" "_CODES,1,MAXLEN)

	// Pad with spaces for readability
	set PARTLEN=$L(PART1)
	for pos=PARTLEN:1:MAXLEN set PART1=PART1_" "
	set PARTLEN=$L(PART2)
	for pos=PARTLEN:1:MAXLEN set PART2=PART2_" "

	set BGTTBL(BGTSEQ)=PART1_$C(9)_PART2

	quit


COCD(String CO) // Check for Company Code
	
               
        type RecordUTBLCO utblco=Db.getRecord("UTBLCO","CO=:CO",1)
        
        // Invalid Company Code
	if 'utblco.getMode() do Runtime.setErrMSG("UTBLCO",1289) quit ""
	
	quit utblco.des
	
	
COCDGL()	// Get company code general ledger for transaction set

	
	type public RecordTTX ttx()
	type public Number SEQ,ER
	type public String RM
	
	type RecordBUDGET BD
	type Number BGTSEQ,CID,GLNBR
	type Date BGTYRSD,EFD
	 
	set CID=ttx(1).cid
	set TSO=ttx(1).tso

	set EFD=ttx(1).efd

	if EFD.isNull() set EFD=%SystemDate

	set BGTSEQ=$$FIELD^UTSO(TSO,"BGT")	// Budget Sequence #
	if BGTSEQ.isNull() quit ""

	set BGTYRSD=""
	
	// Find budget year start date
	type DbSet ds = Db.selectDbSet("BUDGET","CID=:CID")
	if ds.isEmpty() quit ""
	while ds.next() do { quit:BGTYRSD'>EFD
		set BD=ds.getRecord()
		set BGTYRSD=BD.bgtyrsd 
		if BGTYRSD'>EFD quit
	}

	set BD=Db.getRecord("BUDGET","CID,BGTYRSD,BGTSEQ")
	
	if BD.getMode() set COCD=BD.cocd
	else  set COCD=""
	
	if COCD="" set ER=1,RM=$$^MSG(1289) quit ""	// Invalid company ID

	type RecordUTBLCO UCO=Db.getRecord("UTBLCO","COCD")
	set GLNBR=UCO.glnbr

	quit GLNBR
	

TAMT()		// Get transaction amount for transaction set

	type public RecordTTX ttx()
	type Number TAMT

	set TAMT=ttx(1).tamt
	quit TAMT


 
 #OPTION ResultClass ON
Public String vSIG()	quit "60348^62303^Vinayak Teli^3961"	// Signature - LTD^TIME^USER^SIZE
