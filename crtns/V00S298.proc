V00S298(%ProcessMode,RecordLNICNV LNICNV())   //PBS - LN - SID= <LNICNVE1> Interim-to-Permanent Loan Conversion
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:34 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNICNVE1",VPGM=$T(+0),VSNAME="Interim-to-Permanent Loan Conversion"
 set VFSN("LNICNV")="zLNICNV"
 set vPSL=1
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=18 do VPR(.LNICNV()),VDA1(.LNICNV()),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.LNICNV()),VPR(.LNICNV()),VDA1(.LNICNV())
 if %ProcessMode do VLOD(.LNICNV()) quit:$G(ER)  do VPR(.LNICNV()),VDA1(.LNICNV())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.LNICNV())
	quit


VNEW(RecordLNICNV LNICNV()) // Initialize arrays if %O=0
 
 do VLOD(.LNICNV())
 do VDEF(.LNICNV())
 do VLOD(.LNICNV())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordLNICNV LNICNV())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VNEWDQ(RecordLNICNV LNICNV()) // Original VNEW section
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
VLOD(RecordLNICNV LNICNV()) // User defined access section
 //
 if '$D(%REPEAT) set %REPEAT=18
 if '$D(%MODS) set %MODS=1
 ;
 ;
 ;
 #ACCEPT date=11/05/03;pgm=Screen compiler
 quit
VLODDQ(RecordLNICNV LNICNV()) //Original VLOD section
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLNICNV LNICNV()) // Display screen prompts
 set VO="6||13|"
 set VO(0)="|0"
 set VO(1)=$C(3,2,12,2,0,0,0,0,0,0)_"01TInterim Loan"
 set VO(2)=$C(3,16,8,2,0,0,0,0,0,0)_"01TPmt Freq"
 set VO(3)=$C(3,30,4,2,0,0,0,0,0,0)_"01TTerm"
 set VO(4)=$C(3,40,4,2,0,0,0,0,0,0)_"01TRate"
 set VO(5)=$C(3,50,14,2,0,0,0,0,0,0)_"01TInterest Index"
 set VO(6)=$C(3,67,12,2,0,0,0,0,0,0)_"01TPerm Acc't #"
 if '$D(%MODS) set %MODS=1
 set DY=5 for I=%MODS:1:%REPEAT+%MODS-1 do VRPR(.LNICNV())
 set VO=(+VO)_"|"_(VO+1)_"|13" quit  // BOD pointer
 
VRPR(RecordLNICNV LNICNV())  // Display prompts %REPEAT times
 
 set VO(VO+1)=$C(DY+3,17,7,0,0,0,0,0,0,0)_"01T Error:"
 set VO=VO+1,DY=DY+4
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordLNICNV LNICNV())  // Display screen data
 new V
 s DESC=$G(DESC)
 //
 set VX=$P(VO,"|",2)
 set VO(VX+0)=$C(1,2,0,2,0,0,0,0,0,0)_"01T"_$G(DESC)
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+0,DY=5 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.LNICNV())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordLNICNV LNICNV())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'LNICNV(I).getPointer() do {
     set LNICNV(I)=Class.new("RecordLNICNV","")
     }
 set VO(VX+1)=$C(DY,2,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).CID
 set VO(VX+2)=$C(DY,16,12,2,0,0,0,0,0,0)_"00F"_$E(LNICNV(I).DIST1FRE,1,12)
 set VO(VX+3)=$C(DY,30,8,2,0,0,0,0,0,0)_"00T"_$E(LNICNV(I).TRM,1,8)
 set V=$S(LNICNV(I).IRN="":"",1:$J(LNICNV(I).IRN,0,5)) set VO(VX+4)=$C(DY,40,8,2,0,0,0,0,0,0)_"00N"_$S(LNICNV(I).IRN="":"",1:$J(LNICNV(I).IRN,0,5))
 set VO(VX+5)=$C(DY,50,15,2,0,0,0,0,0,0)_"00T"_$E(LNICNV(I).INDEX,1,15)
 set VO(VX+6)=$C(DY,67,12,2,0,0,0,0,0,0)_"00N"_LNICNV(I).PCID
 set VO(VX+7)=$C(DY+3,25,50,2,0,0,0,0,0,0)_"00T"_$E(LNICNV(I).ERR,1,50)
 set DY=DY+4,VX=VX+7
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordLNICNV LNICNV())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=4
 set %MODOFF=1,%MOD=7,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=4+(%REPEAT*4),BLKSIZ=(117*%REPEAT)+0,PGM=$T(+0),DLIB="SYSDEV",DFID="LNICNV"
 set OLNTB=VPB*1000
 
 set VFSN("LNICNV")="zLNICNV"
 //
 for I=9:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,1,0)_"21T|*DESC|[*]@T1"
 set %TAB(2)=$C(4,1,12)_"01N12401|1|[LNICNV]CID|||do VP1^V00S298(.LNICNV)"
 set %TAB(3)=$C(4,15,12)_"01F12402|1|[LNICNV]DIST1FRE"
 set %TAB(4)=$C(4,29,8)_"01T12403|1|[LNICNV]TRM"
 set %TAB(5)=$C(4,39,8)_"01N12404|1|[LNICNV]IRN|||||||5"
 set %TAB(6)=$C(4,49,15)_"00T12405|1|[LNICNV]INDEX"
 set %TAB(7)=$C(4,66,12)_"00N12406|1|[LNICNV]PCID|||do VP2^V00S298(.LNICNV)"
 set %TAB(8)=$C(7,24,50)_"00T12430|1|[LNICNV]ERR"
 do VTBL(.LNICNV())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordLNICNV LNICNV()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordLNICNV LNICNV()) //
        type public Boolean ER
        type public Number IDPF
	type public String ET, X

        type Number %EXT

	if 'X.length() quit
	set ER = 0
	set %EXT = 1 do CID^UACN1
	if ER quit               
	set ER = 0	

	type RecordLN ln1 = Db.getRecord("LN", "CID = :X", 1)

	if ln1.relcid '= IDPF set ER = 1
	set ET = "INVLDIFLG"
	if ER do ^UTLERR
	
	quit
VP2(RecordLNICNV LNICNV()) //
	type public Boolean ER
	type public String ET, X

	if 'X.length() quit
	type RecordLN ln1 = Db.getRecord("LN", "CID = :X", 1)
	if ln1.exists() set ER = 1
	set ET = "RECOF" do ^UTLERR
	
	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLNICNV LNICNV()
 do VPR(.LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT()
 quit

VW(RecordLNICNV LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLNICNV LNICNV())
 do VDA1(.LNICNV())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLNICNV LNICNV()
 do VDA1(.LNICNV())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordLNICNV LNICNV()
 if sn="LNICNV" do vSET1(LNICNV(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordLNICNV LNICNV,di,X)
 do LNICNV.setAuditFlag(1)
 set LNICNV.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordLNICNV LNICNV()
 if fid="LNICNV" quit $$vREAD1(LNICNV(I(1)),di)
 quit ""
vREAD1(RecordLNICNV LNICNV,di)
 quit LNICNV.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
