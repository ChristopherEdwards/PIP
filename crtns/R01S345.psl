R01S345	// SCA358 - Daily Transaction Journal
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/30/2007 14:57 - joynerd

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String %CRCD,TJD
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Number DET=1
	type String OPT=1
	type Date VIN1=TJD.get()
	type String VIN10="ALL"
	type String VIN11="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"
	type String VIN6="ALL"
	type String VIN7="ALL"
	type String VIN8="ALL"
	type String VIN9="ALL"

	set RID="SCA358"
	set RN="Daily Transaction Journal"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("DET")="|1|||||||L|Print Detail|||||"
	set %TAB("IO")=$$IO^SCATAB
	set %TAB("OPT")="|1|||OPT(||||T|Report Option|||||"
	set %TAB("VIN1")="|10||[DTJ]TJD|[DTJ]TJD:DISTINCT:NOVAL||||D|Transaction Date|||||"
	set %TAB("VIN10")="|255||[DTJ]ETC|[TRN]:NOVAL||D EXT^DBSQRY||T|Transaction Code|||||"
	set %TAB("VIN11")="|255||[DTJ]TAMT|||D EXT^DBSQRY||T|Transaction Amount|||||"
	set %TAB("VIN2")="|255||[DTJ]CRCD|[CRCD]||D EXT^DBSQRY||T|Currency Code|||||"
	set %TAB("VIN3")="|255||[ACN]CLS|[STBLCLS]:NOVAL||D EXT^DBSQRY||T|Product Class|||||"
	set %TAB("VIN4")="|255||[ACN]GRP|[STBLGRP]:NOVAL||D EXT^DBSQRY||T|Product Group|||||"
	set %TAB("VIN5")="|255||[ACN]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN6")="|255||[DTJ]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Range|||||"
	set %TAB("VIN7")="|255||[DTJ]BRCD|[UTBLBRCD]:NOVAL||D EXT^DBSQRY||T|Branch Code|||||"
	set %TAB("VIN8")="|255||[DTJ]CC|[UTBLCCNTR]:NOVAL||D EXT^DBSQRY||T|Cost Center|||||"
	set %TAB("VIN9")="|255||[DTJ]UID|||D EXT^DBSQRY||T|Teller ID|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,VIN5#0,VIN6#0,VIN7#0,VIN8#0,VIN9#0,VIN10#0,VIN11#0,DET#0,OPT#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String %CRCD,TJD
	type public Date VIN1
	type public Number DET
	type public String VIN2,VIN3,VIN4,VIN5,VIN6,VIN7,VIN8,VIN9,VIN10,VIN11,OPT
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %ED,%MCP,%TIM,CNT,CONAM,DTJ,ETC,OVR,P(),PD(),PINT,POU,PPRIN,PRIN,PTAMT,RID,RN,STBL,TAMT,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc10,vovc11,vovc12,vovc13,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA358",RN="Daily Transaction Journal"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA358","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		write $$CLEARXY^%TRMVT
		write $$SCR132^%TRMVT			// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DTJ]TJD = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DTJ]CRCD "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[ACN]CLS "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[ACN]GRP "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[ACN]TYPE "_VIN5,SEQ=SEQ+1
		if VIN6.get()="" set VIN6="ALL"
		if VIN6'="ALL" set DQQRY(SEQ)="[DTJ]CID "_VIN6,SEQ=SEQ+1
		if VIN7.get()="" set VIN7="ALL"
		if VIN7'="ALL" set DQQRY(SEQ)="[DTJ]BRCD "_VIN7,SEQ=SEQ+1
		if VIN8.get()="" set VIN8="ALL"
		if VIN8'="ALL" set DQQRY(SEQ)="[DTJ]CC "_VIN8,SEQ=SEQ+1
		if VIN9.get()="" set VIN9="ALL"
		if VIN9'="ALL" set DQQRY(SEQ)="[DTJ]UID "_VIN9,SEQ=SEQ+1
		if VIN10.get()="" set VIN10="ALL"
		if VIN10'="ALL" set DQQRY(SEQ)="[DTJ]ETC "_VIN10,SEQ=SEQ+1
		if VIN11.get()="" set VIN11="ALL"
		if VIN11'="ALL" set DQQRY(SEQ)="[DTJ]TAMT "_VIN11,SEQ=SEQ+1
		set DQQRY(SEQ)="[DTJ]ETC'="""" AND [DTJ]ITC1'=""F""",SEQ=SEQ+1
		set DQQRY(SEQ)="([DTJ]ITC8=0 AND <<OPT>>'=2) OR ([DTJ]ITC8=1 AND <<OPT>>'=3)",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DTJ,ACN") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Transaction Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC2|"_"Currency Code"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Product Class"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Product Group"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Product Type"_"|VIN5|"_VIN5.get()
		set VBNRINFO("PROMPTS",6)="WC2|"_"Account Range"_"|VIN6|"_VIN6.get()
		set VBNRINFO("PROMPTS",7)="WC2|"_"Branch Code"_"|VIN7|"_VIN7.get()
		set VBNRINFO("PROMPTS",8)="WC2|"_"Cost Center"_"|VIN8|"_VIN8.get()
		set VBNRINFO("PROMPTS",9)="WC2|"_"Teller ID"_"|VIN9|"_VIN9.get()
		set VBNRINFO("PROMPTS",10)="WC2|"_"Transaction Code"_"|VIN10|"_VIN10.get()
		set VBNRINFO("PROMPTS",11)="WC2|"_"Transaction Amount"_"|VIN11|"_VIN11.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Daily Transaction Journal"
		set VBNRINFO("PGM")="R01S345"
		set VBNRINFO("RID")="SCA358"
		set VBNRINFO("TABLES")="DTJ,ACN"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DTJ]TJD"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DTJ]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DTJ]TSEQ"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DTJ]DATETIME"


		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DTJ.ITC,DTJ.CRCD,ACN.CLS,ACN.GRP,ACN.TYPE,DTJ.TAMT"
	set VSELECT=VSELECT_",DTJ.ETC,DTJ.PRIN,DTJ.INT,DTJ.TJD,DTJ.CID,DTJ.TSEQ"
	set VSELECT=VSELECT_",DTJ.DATETIME,DTJ.BRCD,DTJ.CC,DTJ.UID,DTJ.EFD,DTJ."
	set VSELECT=VSELECT_"ITC8,DTJ.BCRCD,DTJ.CUSTCD,DTJ.BSEAMT,DTJ.TRESREF,D"
	set VSELECT=VSELECT_"TJ.RATE"

	#ACCEPT DATE=08/30/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DTJ,ACN",VWHERE,"DTJ.TJD,DTJ.CID,DTJ.TSEQ,DTJ.DATETIME","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc10,vovc11,vovc12,vovc13
	set vovc10="",vovc11="",vovc12="",vovc13=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc10,vc10,vovc11,vc11,vovc12,vc12,vovc13,vc13
	set vovc10=vc10,vovc11=vc11,vovc12=vc12,vovc13=vc13
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23
	set vc1=V.piece($C(9),1)			// DTJ.ITC
	set vc2=V.piece($C(9),2)			// DTJ.CRCD
	set vc3=V.piece($C(9),3)			// ACN.CLS
	set vc4=V.piece($C(9),4)			// ACN.GRP
	set vc5=V.piece($C(9),5)			// ACN.TYPE
	set vc6=V.piece($C(9),6)			// DTJ.TAMT
	set vc7=V.piece($C(9),7)			// DTJ.ETC
	set vc8=V.piece($C(9),8)			// DTJ.PRIN
	set vc9=V.piece($C(9),9)			// DTJ.INT
	set vc10=V.piece($C(9),10)			// DTJ.TJD
	set vc11=V.piece($C(9),11)			// DTJ.CID
	set vc12=V.piece($C(9),12)			// DTJ.TSEQ
	set vc13=V.piece($C(9),13)			// DTJ.DATETIME
	set vc14=V.piece($C(9),14)			// DTJ.BRCD
	set vc15=V.piece($C(9),15)			// DTJ.CC
	set vc16=V.piece($C(9),16)			// DTJ.UID
	set vc17=V.piece($C(9),17)			// DTJ.EFD
	set vc18=V.piece($C(9),18)			// DTJ.ITC8
	set vc19=V.piece($C(9),19)			// DTJ.BCRCD
	set vc20=V.piece($C(9),20)			// DTJ.CUSTCD
	set vc21=V.piece($C(9),21)			// DTJ.BSEAMT
	set vc22=V.piece($C(9),22)			// DTJ.TRESREF
	set vc23=V.piece($C(9),23)			// DTJ.RATE
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9
	type Public String DTJ,ETC,OPT,OVR,P(),PD(),POU,STBL

	// Summarize activity by transaction code for report SCA468

	type Public Number CNT,PRIN,PTAMT,PPRIN,PINT,TAMT
	type Number I
	type String CLS,CRCD,CRDR,GRP,ITC,PM,TYPE,X
	
	set (CNT,GRP,OVR,PINT,POU,PPRIN,PTAMT,TYPE)=""
	
	for I=1:1:12 set P(I)="",PD(I)=""

	// Internal transaction code 
	set ITC=vc1

	// Debit or credit indicator
	set CRDR=+$E(ITC)

	// PM indicator
	set PM=+$E(ITC,8)

	// PMed activity only.
	if OPT=2,'PM quit

	// Non PMed activity only.
	if OPT=3,PM quit

	set CRCD=vc2
	if CRCD="" set CRCD=%SystemCurrency

	set CLS=vc3
	set GRP=vc4
	set TYPE=vc5

	type RecordDTJTMP dtjtmp=Db.getRecord("DTJTMP","JOB=:%ProcessID,CRCD=:CRCD,CLS=:CLS,GRP=:GRP,TYPE=:TYPE",1)

	if 'CRDR do {
		set dtjtmp.dramt=dtjtmp.dramt+vc6
		set dtjtmp.drcnt=dtjtmp.drcnt+1
		}
	else  do {
		set dtjtmp.cramt=dtjtmp.cramt+vc6
		set dtjtmp.crcnt=dtjtmp.crcnt+1
		}

	do dtjtmp.bypassSave()

        set ETC=vc7
        set ITC=vc1
        set TAMT=vc6
        set PRIN=vc8
        set PTAMT=PTAMT+vc6
        set PPRIN=PPRIN+PRIN
        set PINT=PINT+vc9
        set CNT=CNT+1

        for I=1:1:12 set X=$P(TAMT,"#",I+3) do {
		if X do {
                        set P(I)=X
                        set PD(I)=STBL(CLS,I+3)
                        }
                }

        set OVR=$E(ITC,2)
        set POU=$S($E(ITC,8):"P",1:" ")
        set POU=POU_$S($E(ITC,10):"O",1:" ")
        set POU=POU_$S($E(ITC,11):"U",1:" ")
 
        // System generated transaction
        if $E(ITC,7) set $P(ETC,"|",3)=ETC_"+"

	quit 


VPREAQ	// Pre-processor (after query)

 /*
  ---- Revision History ---------------------------------------------------
	06/06/07 - LAN - CR 27490
		   Get the first 11 characters of the value of short 
		   description field of system tables 
		   STBLGLDESCD and STBLGLDESCL instead of 7.
	 	   Also replaced deprecated $D with .exists() method.
 */
	type Public String %ED,%MCP,DET,STBL
	type String data
	type Number I

	if 'DET do rwopt^DBSRWUTL("NODTL","")
	if 'DET do rwopt^DBSRWUTL("NOHDR","")

	set %ED=$$DAT^%ZM(%SystemDate)

	if '%MCP.exists() set %MCP=CUVAR.%mcp

	for I=4:1:20 do {
		type RecordSTBLGLDESCD stblgld=Db.getRecord("STBLGLDESCD","KEY=:I",1)
        	set data=stblgld.sdesc
		set STBL("D",I)=$E(data,1,11)
	
		type RecordSTBLGLDESCL stblgldl=Db.getRecord("STBLGLDESCL","KEY=:I",1)
		set data=stblgldl.sdesc
		set STBL("L",I)=$E(data,1,11)
		}
	quit 

VPREBQ	// Pre-processor (before query)

	//Incoming=%SystemDate,%SystemCurrency

	type Public String OPT

	// Report options
	set OPT(1)=$$^MSG(4609)                // All activity
	set OPT(2)=$$^MSG(4611)                // PMed activity only
	set OPT(3)=$$^MSG(4610)                // Non-PMed activity only

	do Db.fastDelete("DTJTMP","JOB=:%ProcessID")
	quit

VRPOST	// Report post-processor

	// Transaction Summary Report
	do rwopt^DBSRWUTL("LINKRPT","SCA468")

	// kill temp table
	do Db.fastDelete("DTJTMP","JOB=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type Public String vc10,vovc10,vc11,vovc11,vc12,vovc12,vc13,vovc13
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc10'=vc10) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb2!(+vovc11'=+vc11) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1
	if vb3!(+vovc12'=+vc12) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT()
	type Public String VSTATS

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %CRCD,%ED,%MCP,%TIM,CNT,DET,DTJ,ETC,IOSL,OPT,OVR,P(),PD(),PINT,POU,PPRIN,PRIN,PTAMT,STBL,TAMT,TJD,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc10,vovc11,vovc12,vovc13,vrundate,vsysdate

	if VLC+12>IOSL do VHDG0 quit:VFMQ

	set VL=$J(vc11,12)
	set VL=VL_$J("",13-VL.length())_$J(vc12,5)
	set VL=VL_$J("",19-VL.length())_$J(vc14,6)
	set VL=VL_$J("",26-VL.length())_$J(vc15,6)
	set VL=VL_$J("",33-VL.length())_$E(vc7,1,8)
	set VL=VL_$J("",43-VL.length())_$E(vc16,1,6)
	set VL=VL_$J("",50-VL.length())_$J($$DAT^%ZM(vc17),10)
	set V=vc6,VO=V do VP1 quit:VFMQ!verror.get()  set V=$E(V,1,16)
	set VL=VL_$J("",61-VL.length())_V		// [SYSDEV,DTJ]TAMT
	set VL=VL_$J("",78-VL.length())_$J($FN(vc8,",",2),14)
	set VL=VL_$J("",93-VL.length())_$J($FN(vc9,",",2),12)
	set VL=VL_$J("",106-VL.length())_$J($FN(P(1),",",2),14)
	set VL=VL_$J("",121-VL.length())_$E(PD(1),1,11)
	do VOM
	set VL=" "_$S(vc18:"Y",1:"N")
	set VL=VL_$J("",17-VL.length())_$S(OVR:"Y",1:"N")
	set VL=VL_$J("",26-VL.length())_$E(POU,1,3)
	set VL=VL_$J("",33-VL.length())_$E(vc19,1,3)
	set VL=VL_$J("",43-VL.length())_$E(vc2,1,3)
	set VL=VL_$J("",51-VL.length())_$E(vc20,1,3)
	set VL=VL_$J("",65-VL.length())_$J($FN(vc21,",",2),12)
	set VL=VL_$J("",82-VL.length())_$J(vc22,10)
	set VL=VL_$J("",97-VL.length())_$J(vc23,8,5)
	do VP2 quit:VFMQ!verror.get()  set V=$S(+P(2)=0:$J("",14),1:$J($FN(P(2),",",2),14))
	set VL=VL_$J("",106-VL.length())_V
	set VL=VL_$J("",121-VL.length())_$E(PD(2),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(3)=0:$J("",14),1:$J($FN(P(3),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(3),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(4)=0:$J("",14),1:$J($FN(P(4),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(4),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(5)=0:$J("",14),1:$J($FN(P(5),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(5),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(6)=0:$J("",14),1:$J($FN(P(6),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(6),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(7)=0:$J("",14),1:$J($FN(P(7),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(7),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(8)=0:$J("",14),1:$J($FN(P(8),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(8),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(9)=0:$J("",14),1:$J($FN(P(9),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(9),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(10)=0:$J("",14),1:$J($FN(P(10),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(10),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(11)=0:$J("",14),1:$J($FN(P(11),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(11),1,11)
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                          "_$S(+P(12)=0:$J("",14),1:$J($FN(P(12),",",2),14))
	set VL=VL_$J("",121-VL.length())_$E(PD(12),1,11)
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %CRCD,%ED,%MCP,%MSKD,%TIM,CNT,CONAM,DET,DTJ,ETC,OPT,OVR,P(),PD(),PINT,POU,PPRIN,PRIN,PTAMT,RID,RN,STBL,TAMT,TJD,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc10,vovc11,vovc12,vovc13,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,45)
	set VL=VL_$J("",100-VL.length())_"Run Date:"
	set VL=VL_$J("",110-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",123-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",102-VL.length())_"System:"
	set VL=VL_$J("",110-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",122-VL.length())_"Page:"
	set VL=VL_$J("",128-VL.length())_$J(VPN,3)
	do VOM
	set VL="" do VOM
	set VL="     "_"Account   Seq BrCode CstCtr TranCode TellerID Effective      Transaction      Principal      Int/Div         Amount Desc"
	do VOM
	set VL="                "_"OR        POU    BaseCurr Acc Curr CustCode          Base Amt      Treas Ref     Exc Rate"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,DTJ]TAMT

	type public String vc6
	type Public String V
	set V=+vc6
	set V=$J($FN(V,",",2),16)
	quit

VP2	// Column pre-processor - Variable: P(2)

	type Public String %MCP,VL

	if '%MCP set VL=""
	quit
