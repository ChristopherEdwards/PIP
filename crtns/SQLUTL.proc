SQLUTL
	/*
	ORIG: 6915 - 09/19/2002
	DESC: SQL Utilities
 
	---- Comments --------------------------------------------------------
	This procedure contains SQL related utilities.
 
	---- Revision History ------------------------------------------------
	07/25/06 - Pete Chenard - 20048
		Corrected parameter type in BSL section and added () to the
		end of the .length method in that section
	*/

	quit

public ROWS(ByteString str)
	/*
	This function returns the number of rows contained in
	the length-value string 'str'.
	
	ARGUMENTS:
	     .str	Length-value string

	RETURNS:
	     .$$	Number of rows
	*/

	type ByteString del,row,rows
	type Number i,size

	set del=255.byte()
	set size=0

	for i=1:1:str.length(del)-1 do {
		set row=str.piece(del,i)
		set size=size+(row.ascii(8)*256)
		set size=size+(row.ascii(9))+2
	}

	set rows=(1022000-str.length())\(size+2)
	if rows<1 set rows=1

	quit rows


public SQLDTA(ByteString str,
              ByteString sqlcur,
              ByteString sqldta)
	/*
	This function wraps string 'sqlcur' with a 2 byte header
	and appends it to string 'str'.

	ARGUMENTS:
	     .str	String
	     .sqlcur	Cursor
	     .sqldta	Data

	RETURNS:
	     .$$	Length-value string
	*/

	type ByteString v
	type Number len
	type String del

	set del=255.char()

	set v=sqlcur_del_str
	set len=v.length() 
	set sqldta=(len\256).byte()_(len#256).byte()_v_sqldta

	quit sqldta


LVU(ByteString str, Number ptr)
	/*
	This function unwraps and removes the header of
	length-value string 'str' at the specified
	location within the string (ptr).

	ARGUMENTS:
	     .str	Length-value string
	     .ptr	String pointer

	RETURNS:
	     .$$	Unwrapped string
	*/

	type ByteString z
	type Number len

	if 'ptr.exists() set ptr=0
	set len=str.ascii(ptr+1)*256
	set len=len+str.ascii(ptr+2)

	set ptr=ptr+len
	set z=str.extract(ptr-len+3,ptr)
	if ptr=str.length()!(len<0) set ptr=0

	quit z


LVW(ByteString str)	
	/*
	This function wraps string 'str' with a 2 byte header.

	ARGUMENTS:
	     .str	String

	RETURNS:
	     .$$	Length-value string
	*/

	type Number len

	set len=str.length()+2
	if len<256 quit 0.byte()_len.byte()_str
	quit (len\256).byte()_(len#256).byte()_str

BSL(String str)
	/*
	This function provides the byte string length for a string. It is
	a wrapper for .toByteString().length() for use by existing M routines
	until they are converted to PSL, at which point this can be removed.
	ARGUMENTS:
	.str String
	RETURNS:
	.$$ Length of string in bytes /TYP=N
	*/
	quit str.toByteString().length()


public BSASCII(ByteString INSTRING, // Input string
             Number POS)            // Position

      /*
      Return ByteString.ascii in support of code still in M that needs to
      be Unicode compliant.

      Once all code using this is converted to PSL, this section can be
      eliminated.
      */      

      quit INSTRING.ascii(POS)


public BYTECHAR(Number INNUM)       // Input number

      /*
      Return Number.byte in support of code still in M that needs to
      be Unicode compliant.

      Once all code using this is converted to PSL, this section can be
      eliminated.

      */
      quit INNUM.byte()

vSIG()	quit "60473^39284^Pete Chenard^3004"	// Signature - LTD^TIME^USER^SIZE
