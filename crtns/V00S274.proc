V00S274(%ProcessMode,RecordLN LN,RecordLNES fLNES())   //PBS -  - SID= <LNCONES1> Escrow Balance/Payment Summary 
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:29 - kini
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="LNCONES1",VPGM=$T(+0),VSNAME="Escrow Balance/Payment Summary "
 set VFSN("LN")="zLN",VFSN("LNES")="zfLNES"
 set vPSL=1
 set KEYS(1)=LN.CID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=10 do VPR(.LN,.fLNES()),VDA1(.LN,.fLNES()),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.LN,.fLNES()),VPR(.LN,.fLNES()),VDA1(.LN,.fLNES())
 if %ProcessMode do VLOD(.LN,.fLNES()) quit:$G(ER)  do VPR(.LN,.fLNES()),VDA1(.LN,.fLNES())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.LN,.fLNES())
	quit


VNEW(RecordLN LN,RecordLNES fLNES()) // Initialize arrays if %O=0
 
 do VDEF(.LN,.fLNES())
 do VLOD(.LN,.fLNES())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordLN LN,RecordLNES fLNES())
 if LN.AOMCODE="" set LN.AOMCODE=0
 if LN.DL1="" set LN.DL1=0
 if LN.DL2="" set LN.DL2=0
 if LN.DL3="" set LN.DL3=0
 if LN.DL4="" set LN.DL4=0
 if LN.DL5="" set LN.DL5=0
 if LN.DL6="" set LN.DL6=0
 if LN.DL7="" set LN.DL7=0
 if LN.DP1="" set LN.DP1=0
 if LN.DP2="" set LN.DP2=0
 if LN.DP3="" set LN.DP3=0
 if LN.DP4="" set LN.DP4=0
 if LN.DP5="" set LN.DP5=0
 if LN.DP6="" set LN.DP6=0
 if LN.DP7="" set LN.DP7=0
 if LN.DY1="" set LN.DY1=0
 if LN.DY2="" set LN.DY2=0
 if LN.DY3="" set LN.DY3=0
 if LN.DY4="" set LN.DY4=0
 if LN.DY5="" set LN.DY5=0
 if LN.DY6="" set LN.DY6=0
 if LN.DY7="" set LN.DY7=0
 if LN.FLAT="" set LN.FLAT=0
 if LN.GENPRN="" set LN.GENPRN=0
 if LN.ODT="" set LN.ODT=TJD
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordLN LN,RecordLNES fLNES()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=10
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordLN LN,RecordLNES fLNES()) // Display screen prompts
 set VO="11||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,6,13,0,0,0,0,0,0,0)_"01TLoan Account:"
 set VO(2)=$C(2,10,9,0,0,0,0,0,0,0)_"01TBorrower:"
 set VO(3)=$C(6,50,17,0,0,0,0,0,0,0)_"01TNext Change Date:"
 set VO(4)=$C(10,1,6,2,0,0,0,0,0,0)_"01TEscrow"
 set VO(5)=$C(10,9,47,2,0,0,0,0,0,0)_"01TCurrent  Accrual   Current  Add Next   Payment "
 set VO(6)=$C(10,56,8,2,0,0,0,0,0,0)_"01TTransfer"
 set VO(7)=$C(10,66,12,2,0,0,0,0,0,0)_"01TRemitted YTD"
 set VO(8)=$C(11,1,7,2,0,0,0,0,0,0)_"01TAccount"
 set VO(9)=$C(11,9,47,2,0,0,0,0,0,0)_"01TBalance  Balance   Payment   Payment   Nxt Chg "
 set VO(10)=$C(11,56,4,2,0,0,0,0,0,0)_"01TType"
 set VO(11)=$C(11,66,15,2,0,0,0,0,0,0)_"01TPrior  Current "
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordLN LN,RecordLNES fLNES())  // Display screen data
 new V
 if %ProcessMode=5 new CHG,TACR,TBAL,v1,TNPMT,TPMT
 if  set (CHG,TACR,TBAL,v1,TNPMT,TPMT)=""
 else  new v1
 else  set CHG=$G(CHG),TACR=$G(TACR),TBAL=$G(TBAL),v1=$G(TEXT(1)),TNPMT=$G(TNPMT),TPMT=$G(TPMT)
 
 //
 set VO="21|12|13|"
 set VO(12)=$C(1,20,12,2,0,0,0,0,0,0)_"01N"_LN.CID
 set VO(13)=$C(1,53,0,0,0,0,0,0,0,0)_"01T"_"Run Date: "_$S(%ProcessMode=5:"",1:$$DAT^%ZM(TJD))
 set VO(14)=$C(2,20,27,2,0,0,0,0,0,0)_"01T"_$E(LN.NAM,1,27)
 set VO(15)=$C(4,32,0,1,0,0,0,0,0,0)_"01T"_" "_v1
 set VO(16)=$C(6,4,0,0,0,0,0,0,0,0)_"01T"_"Total Escrow Balance: "_TBAL
 set VO(17)=$C(6,68,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(LN.APCND)
 set VO(18)=$C(7,2,0,0,0,0,0,0,0,0)_"01T"_"Current Escrow Payment: "_TPMT
 set VO(19)=$C(7,48,0,0,0,0,0,0,0,0)_"01T"_"Anticipated Change: "_CHG
 set VO(20)=$C(8,1,0,0,0,0,0,0,0,0)_"01T"_"Escrow Interest Accrued: "_TACR
 set VO(21)=$C(8,48,0,0,0,0,0,0,0,0)_"01T"_"New Escrow Payment: "_TNPMT
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+9,DY=13 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.LN,.fLNES())
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordLN LN,RecordLNES fLNES())  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'fLNES(I).getPointer() do {
     set fLNES(I)=Class.new("RecordLNES","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY,1,6,2,0,0,0,0,0,0)_"01T"_$E(fLNES(I).ECID,1,6)
 set V=$S(fLNES(I).BAL="":"",1:$J(fLNES(I).BAL,0,2)) set VO(VX+2)=$C(DY,8,11,2,0,0,0,0,0,0)_"00$"_$S(fLNES(I).BAL="":"",1:$J(fLNES(I).BAL,0,2))
 set V=$S(fLNES(I).ACR="":"",1:$J(fLNES(I).ACR,0,2)) set VO(VX+3)=$C(DY,18,7,2,0,0,0,0,0,0)_"00$"_$S(fLNES(I).ACR="":"",1:$J(fLNES(I).ACR,0,2))
 set V=$S(fLNES(I).CPMT="":"",1:$J(fLNES(I).CPMT,0,2)) set VO(VX+4)=$C(DY,27,8,2,0,0,0,0,0,0)_"00$"_$S(fLNES(I).CPMT="":"",1:$J(fLNES(I).CPMT,0,2))
 set V=$S(fLNES(I).LPMT="":"",1:$J(fLNES(I).LPMT,0,2)) set VO(VX+5)=$C(DY,37,8,2,0,0,0,0,0,0)_"00$"_$S(fLNES(I).LPMT="":"",1:$J(fLNES(I).LPMT,0,2))
 set V=$S(fLNES(I).NPMT="":"",1:$J(fLNES(I).NPMT,0,2)) set VO(VX+6)=$C(DY,47,8,2,0,0,0,0,0,0)_"00$"_$S(fLNES(I).NPMT="":"",1:$J(fLNES(I).NPMT,0,2))
 set VO(VX+7)=$C(DY,56,6,2,0,0,0,0,0,0)_"01T"_$E(fLNES(I).TRTYPE,1,6)
 set V=$S(fLNES(I).REMPY="":"",1:$J(fLNES(I).REMPY,0,2)) set VO(VX+8)=$C(DY,63,8,2,0,0,0,0,0,0)_"00$"_$S(fLNES(I).REMPY="":"",1:$J(fLNES(I).REMPY,0,2))
 set V=$S(fLNES(I).REMYTD="":"",1:$J(fLNES(I).REMYTD,0,2)) set VO(VX+9)=$C(DY,72,8,2,0,0,0,0,0,0)_"00$"_$S(fLNES(I).REMYTD="":"",1:$J(fLNES(I).REMYTD,0,2))
 set DY=DY+1,VX=VX+9
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordLN LN,RecordLNES fLNES())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=9,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=12+%REPEAT,BLKSIZ=(71*%REPEAT)+49,PGM=$T(+0),DLIB="SYSDEV",DFID="LN"
 set OLNTB=VPB*1000
 
 set VFSN("LN")="zLN",VFSN("LNES")="zfLNES"
 //
 for I=13:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(0,19,12)_"21N12401|1|[LN]CID|[ACN]"
 set %TAB(2)=$C(1,19,27)_"20T|*NAM|[LN]NAM"
 set %TAB(3)=$C(5,67,10)_"20D12425|58|[LN]APCND"
 set %TAB(4)=$C(12,0,6)_"20T12415|1|[LNES]ECID"
 set %TAB(5)=$C(12,7,11)_"00$12407|1|[LNES]BAL|||||||2||12"
 set %TAB(6)=$C(12,17,7)_"01$12406|1|[LNES]ACR|||||||2"
 set %TAB(7)=$C(12,26,8)_"00$12404|1|[LNES]CPMT|||||||2"
 set %TAB(8)=$C(12,36,8)_"00$12405|1|[LNES]LPMT|||||||2"
 set %TAB(9)=$C(12,46,8)_"00$12409|1|[LNES]NPMT|||||||2"
 set %TAB(10)=$C(12,55,6)_"21T12403|1|[LNES]TRTYPE"
 set %TAB(11)=$C(12,62,8)_"00$12412|1|[LNES]REMPY|||||||2"
 set %TAB(12)=$C(12,71,8)_"00$12413|1|[LNES]REMYTD|||do VP1^V00S274(.LN,.fLNES)||||2"
 do VTBL(.LN,.fLNES())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordLN LN,RecordLNES fLNES()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordLN LN,RecordLNES fLNES()) //
 /*
 
   ---- Revision History------------------------------------------------
 
	02/21/05 - KELLYP - CR 14452
		Converted to PSL
 
   ---------------------------------------------------------------------
 
 */


 type Public String I(),NI

 if 'fLNES(I(1)+1).exists() quit
 if fLNES(I(1)+1).ecid.isNull() set NI=NI+5
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordLN LN
 type Public RecordLNES fLNES()
 do VPR(.LN,.fLNES())
 do VDA1(.LN,.fLNES())
 do ^DBSPNT()
 quit

VW(RecordLN LN,RecordLNES fLNES())
 do VDA1(.LN,.fLNES())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordLN LN,RecordLNES fLNES())
 do VDA1(.LN,.fLNES())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordLN LN
 type Public RecordLNES fLNES()
 do VDA1(.LN,.fLNES())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordLN LN
 if sn="LN" do vSET1(.LN,di,X)
 type Public RecordLNES fLNES()
 if sn="LNES" do vSET2(fLNES(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordLN LN,di,X)
 do LN.setAuditFlag(1)
 set LN.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordLNES fLNES,di,X)
 do fLNES.setAuditFlag(1)
 set fLNES.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordLN LN
 if fid="LN" quit $$vREAD1(.LN,di)
 type Public RecordLNES fLNES()
 if fid="LNES" quit $$vREAD2(fLNES(I(1)),di)
 quit ""
vREAD1(RecordLN LN,di)
 quit LN.@di
vREAD2(RecordLNES fLNES,di)
 quit fLNES.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
