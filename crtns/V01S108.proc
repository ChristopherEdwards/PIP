V01S108(%ProcessMode,RecordTRNAUT fTRNAUT(),RecordTRN %A)   //PBS - U - SID= <AUTRN> Transaction Code Authorization
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:50 - shetyes
 // This screen allows a user to authorize specific userclasses to post book,
 // no-book, and/or reversal transactions using specified transaction codes.
 // If the user belongs to a secure userclass (SECUCLS=Y), the system
 // displays all userclasses on this screen.  The user may then give or deny
 // transaction code authorization to any or all of the secure and non-secure
 // userclasses displayed.
 // If the user belongs to a non-secure userclass (SECUCLS=N), the system
 // displays only non-secure userclasses on this screen.  The user may then give or
 // deny transaction code authorization to any or all of the non-secure userclasses
 // displayed.
 // For further information, refer to the "Transaction Code Maintenance Reference
 // Manual."
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,ALL",VSID="AUTRN",VPGM=$T(+0),VSNAME="Transaction Code Authorization"
 set VFSN("TRN")="zA",VFSN("TRNAUT")="zfTRNAUT"
 set vPSL=1
 set KEYS(1)=%A.ETC
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=14 do VPR(.fTRNAUT(),.%A),VDA1(.fTRNAUT(),.%A),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fTRNAUT(),.%A),VPR(.fTRNAUT(),.%A),VDA1(.fTRNAUT(),.%A)
 if %ProcessMode do VLOD(.fTRNAUT(),.%A) quit:$G(ER)  do VPR(.fTRNAUT(),.%A),VDA1(.fTRNAUT(),.%A)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fTRNAUT(),.%A)
 type Number ptr
 set ptr=""
 for  set ptr = fTRNAUT(ptr).order() quit:ptr.isNull()  do {
     if fTRNAUT(ptr).UCLS="" kill fTRNAUT(ptr)
     }
	quit


VNEW(RecordTRNAUT fTRNAUT(),RecordTRN %A) // Initialize arrays if %O=0
 
 do VDEF(.fTRNAUT(),.%A)
 do VLOD(.fTRNAUT(),.%A)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordTRNAUT fTRNAUT(),RecordTRN %A)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordTRNAUT fTRNAUT(),RecordTRN %A) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=14
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordTRNAUT fTRNAUT(),RecordTRN %A) // Display screen prompts
 set VO="6||13|"
 set VO(0)="|0"
 set VO(1)=$C(1,15,45,1,0,0,0,0,0,0)_"01T Transaction Code Authorization by Userclass "
 set VO(2)=$C(3,1,18,0,0,0,0,0,0,0)_"01T Transaction Code:"
 set VO(3)=$C(3,33,12,0,0,0,0,0,0,0)_"01TDescription:"
 set VO(4)=$C(4,2,17,1,0,0,0,0,0,0)_"01T All Userclasses:"
 set VO(5)=$C(6,46,2,0,0,0,0,0,0,0)_"01TNo"
 set VO(6)=$C(7,2,52,0,0,0,0,0,0,0)_"01T                          Userclass    Book Book Rev"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordTRNAUT fTRNAUT(),RecordTRN %A)  // Display screen data
 new V
 s ALL=$G(ALL)
 //
 set VO="9|7|13|"
 set VO(7)=$C(3,20,12,2,0,0,0,0,0,0)_"01T"_$E(%A.ETC,1,12)
 set VO(8)=$C(3,46,35,2,0,0,0,0,0,0)_"01T"_$E(%A.DES,1,35)
 set VO(9)=$C(4,20,1,2,0,0,0,0,0,0)_"00L"_$S($G(ALL):"Y",1:"N")
  
 set:'$D(%MODS) %MODS=1 set VX=$P(VO,"|",2)+2,DY=9 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fTRNAUT(),.%A)
 set $piece(VO,"|",1)=VX quit  // EOD pointer
 
VRDA(RecordTRNAUT fTRNAUT(),RecordTRN %A)  // Display data %REPEAT times
 //instantiate new object if necessary
  if 'fTRNAUT(I).getPointer() do {
     set fTRNAUT(I)=Class.new("RecordTRNAUT","$G(KEYS(1))")
     }
 set VO(VX+1)=$C(DY,28,12,2,0,0,0,0,0,0)_"01T"_$E(fTRNAUT(I).UCLS,1,12)
 set VO(VX+2)=$C(DY,41,1,2,0,0,0,0,0,0)_"00L"_$S(fTRNAUT(I).BOOK:"Y",1:"N")
 set VO(VX+3)=$C(DY,46,1,2,0,0,0,0,0,0)_"00L"_$S(fTRNAUT(I).NOBOOK:"Y",1:"N")
 set VO(VX+4)=$C(DY,51,1,2,0,0,0,0,0,0)_"00L"_$S(fTRNAUT(I).REVERSAL:"Y",1:"N")
 set DY=DY+1,VX=VX+4
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordTRNAUT fTRNAUT(),RecordTRN %A)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=3,%MOD=4,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=8+%REPEAT,BLKSIZ=(15*%REPEAT)+48,PGM=$T(+0),DLIB="SYSDEV",DFID="TRNAUT,TRN"
 set OLNTB=VPB*1000
 
 set VFSN("TRN")="zA",VFSN("TRNAUT")="zfTRNAUT"
 //
 for I=8:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,19,12)_"21T12401|1|[TRN]ETC"
 set %TAB(2)=$C(2,45,35)_"21T12406|0|[TRN]DES"
 set %TAB(3)=$C(3,19,1)_"00L|*ALL|[*]@ALL|||do VP1^V01S108(.fTRNAUT,.%A)"
 set %TAB(4)=$C(8,27,12)_"20T12402|1|[TRNAUT]UCLS"
 set %TAB(5)=$C(8,40,1)_"00L12401|1|[TRNAUT]BOOK||||||||~~~1"
 set %TAB(6)=$C(8,45,1)_"00L12401|1|[TRNAUT]NOBOOK||||||||~~~2"
 set %TAB(7)=$C(8,50,1)_"00L12401|1|[TRNAUT]REVERSAL||||||||~~~3"
 do VTBL(.fTRNAUT(),.%A)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordTRNAUT fTRNAUT(),RecordTRN %A) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordTRNAUT fTRNAUT(),RecordTRN %A) //
 /*
 
   ---- Revision History------------------------------------------------
 
	06/07/04 - KELLYP - CR 10372
		Converted to PSL
 
   ---------------------------------------------------------------------
 
 */

 type Public String X

 if X do GOTO^DBSMACRO("END") quit 

 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordTRNAUT fTRNAUT()
 type Public RecordTRN %A
 do VPR(.fTRNAUT(),.%A)
 do VDA1(.fTRNAUT(),.%A)
 do ^DBSPNT()
 quit

VW(RecordTRNAUT fTRNAUT(),RecordTRN %A)
 do VDA1(.fTRNAUT(),.%A)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordTRNAUT fTRNAUT(),RecordTRN %A)
 do VDA1(.fTRNAUT(),.%A)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordTRNAUT fTRNAUT()
 type Public RecordTRN %A
 do VDA1(.fTRNAUT(),.%A)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordTRNAUT fTRNAUT()
 if sn="TRNAUT" do vSET1(fTRNAUT(I(1)),di,X)
 type Public RecordTRN %A
 if sn="TRN" do vSET2(.%A,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordTRNAUT fTRNAUT,di,X)
 do fTRNAUT.setAuditFlag(1)
 set fTRNAUT.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET2(RecordTRN %A,di,X)
 do %A.setAuditFlag(1)
 set %A.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordTRNAUT fTRNAUT()
 if fid="TRNAUT" quit $$vREAD1(fTRNAUT(I(1)),di)
 type Public RecordTRN %A
 if fid="TRN" quit $$vREAD2(.%A,di)
 quit ""
vREAD1(RecordTRNAUT fTRNAUT,di)
 quit fTRNAUT.@di
vREAD2(RecordTRN %A,di)
 quit %A.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
