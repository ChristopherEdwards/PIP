V01S307(%ProcessMode,RecordEFTPAY fEFTPAY)   // -  - SID= <INTPAYSNDCHG> NDPO Sender's Charges
 ;;Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 11:54 - shetyes
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,CRCD1,AMT1,CRCD2,AMT2,CRCD3,AMT3,CRCD4,AMT4,CRCD5,AMT5,CRCD6,AMT6",VSID="INTPAYSNDCHG",VPGM=$T(+0),VSNAME="NDPO Sender's Charges"
 set vPSL=1
 set KEYS(1)=fEFTPAY.CID
 set KEYS(2)=fEFTPAY.SEQ
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fEFTPAY),VDA1(.fEFTPAY),^DBSPNT()

 // Display Pre-Processor
 //
 if '%ProcessMode do VNEW(.fEFTPAY),VDSPPRE(.fEFTPAY) quit:$G(ER)  do VPR(.fEFTPAY),VDA1(.fEFTPAY)
 if %ProcessMode do VLOD(.fEFTPAY) quit:$G(ER)  do VDSPPRE(.fEFTPAY) quit:$G(ER)  do VPR(.fEFTPAY),VDA1(.fEFTPAY)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fEFTPAY)
	quit


VNEW(RecordEFTPAY fEFTPAY) // Initialize arrays if %O=0
 
 do VDEF(.fEFTPAY)
 do VLOD(.fEFTPAY)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordEFTPAY fEFTPAY)
 if fEFTPAY.DATECRE="" set fEFTPAY.DATECRE=TJD
 if fEFTPAY.TIMECRE="" set fEFTPAY.TIMECRE=$P($H,",",2)
 if fEFTPAY.UID="" set fEFTPAY.UID=%UID
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordEFTPAY fEFTPAY) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordEFTPAY fEFTPAY) // Display screen prompts
 set VO="37||13|"
 set VO(0)="6|0"
 set VO(1)=$C(6,19,1,0,0,0,0,0,0,0)_"11Tl"
 set VO(2)=$C(6,20,1,0,0,0,0,0,0,0)_"11Tq"
 set VO(3)=$C(6,21,1,0,0,0,0,0,0,0)_"11Tq"
 set VO(4)=$C(6,22,1,0,0,0,0,0,0,0)_"11Tq"
 set VO(5)=$C(6,23,38,0,0,0,0,0,0,0)_"11Tqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk"
 set VO(6)=$C(7,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(7)=$C(7,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(8)=$C(8,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(9)=$C(8,32,16,1,0,0,0,0,0,0)_"01T Sender Charges "
 set VO(10)=$C(8,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(11)=$C(9,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(12)=$C(9,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(13)=$C(10,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(14)=$C(10,25,8,0,52,0,0,0,0,0)_"01TCurrency"
 set VO(15)=$C(10,48,7,0,52,0,0,0,0,0)_"01TCharges"
 set VO(16)=$C(10,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(17)=$C(11,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(18)=$C(11,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(19)=$C(12,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(20)=$C(12,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(21)=$C(13,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(22)=$C(13,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(23)=$C(14,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(24)=$C(14,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(25)=$C(15,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(26)=$C(15,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(27)=$C(16,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(28)=$C(16,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(29)=$C(17,19,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(30)=$C(17,60,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(31)=$C(18,19,1,0,0,0,0,0,0,0)_"11Tm"
 set VO(32)=$C(18,20,36,0,0,0,0,0,0,0)_"11Tqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
 set VO(33)=$C(18,56,1,0,0,0,0,0,0,0)_"11Tq"
 set VO(34)=$C(18,57,1,0,0,0,0,0,0,0)_"11Tq"
 set VO(35)=$C(18,58,1,0,0,0,0,0,0,0)_"11Tq"
 set VO(36)=$C(18,59,1,0,0,0,0,0,0,0)_"11Tq"
 set VO(37)=$C(18,60,1,0,0,0,0,0,0,0)_"11Tj"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordEFTPAY fEFTPAY)  // Display screen data
 new V
 s AMT1=$G(AMT1)
 s AMT2=$G(AMT2)
 s AMT3=$G(AMT3)
 s AMT4=$G(AMT4)
 s AMT5=$G(AMT5)
 s AMT6=$G(AMT6)
 s CRCD1=$G(CRCD1)
 s CRCD2=$G(CRCD2)
 s CRCD3=$G(CRCD3)
 s CRCD4=$G(CRCD4)
 s CRCD5=$G(CRCD5)
 s CRCD6=$G(CRCD6)
 //
 set VO="49|38|13|"
 set VO(38)=$C(11,25,3,2,0,0,0,0,0,0)_"00T"_$G(CRCD1)
 set VO(39)=$C(11,40,15,2,0,0,0,0,0,0)_"00$"_$S($G(AMT1)="":"",1:$J($G(AMT1),0,2))
 set VO(40)=$C(12,25,3,2,0,0,0,0,0,0)_"00T"_$G(CRCD2)
 set VO(41)=$C(12,40,15,2,0,0,0,0,0,0)_"00$"_$S($G(AMT2)="":"",1:$J($G(AMT2),0,2))
 set VO(42)=$C(13,25,3,2,0,0,0,0,0,0)_"00T"_$G(CRCD3)
 set VO(43)=$C(13,40,15,2,0,0,0,0,0,0)_"00$"_$S($G(AMT3)="":"",1:$J($G(AMT3),0,2))
 set VO(44)=$C(14,25,3,2,0,0,0,0,0,0)_"00T"_$G(CRCD4)
 set VO(45)=$C(14,40,15,2,0,0,0,0,0,0)_"00$"_$S($G(AMT4)="":"",1:$J($G(AMT4),0,2))
 set VO(46)=$C(15,25,3,2,0,0,0,0,0,0)_"00T"_$G(CRCD5)
 set VO(47)=$C(15,40,15,2,0,0,0,0,0,0)_"00$"_$S($G(AMT5)="":"",1:$J($G(AMT5),0,2))
 set VO(48)=$C(16,25,3,2,0,0,0,0,0,0)_"00T"_$G(CRCD6)
 set VO(49)=$C(16,40,15,2,0,0,0,0,0,0)_"00$"_$S($G(AMT6)="":"",1:$J($G(AMT6),0,2))
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordEFTPAY fEFTPAY)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=12,VPT=6,VPB=18,PGM=$T(+0),DLIB="SYSDEV",DFID="EFTPAY",VSCRPP=1,VSCRPP=1
 set OLNTB=18060
 
 // 
	
	
 set %TAB(1)=$C(10,24,3)_"00T|*CRCD1|[*]@CRCD1|[CRCD]||do VP1^V01S307(.fEFTPAY)"
 set %TAB(2)=$C(10,39,15)_"00$|*AMT1|[*]@AMT1|||do VP2^V01S307(.fEFTPAY)||||2"
 set %TAB(3)=$C(11,24,3)_"00T|*CRCD2|[*]@CRCD2|[CRCD]||do VP3^V01S307(.fEFTPAY)"
 set %TAB(4)=$C(11,39,15)_"00$|*AMT2|[*]@AMT2|||do VP4^V01S307(.fEFTPAY)||||2"
 set %TAB(5)=$C(12,24,3)_"00T|*CRCD3|[*]@CRCD3|[CRCD]||do VP5^V01S307(.fEFTPAY)"
 set %TAB(6)=$C(12,39,15)_"00$|*AMT3|[*]@AMT3|||do VP6^V01S307(.fEFTPAY)||||2"
 set %TAB(7)=$C(13,24,3)_"00T|*CRCD4|[*]@CRCD4|[CRCD]||do VP7^V01S307(.fEFTPAY)"
 set %TAB(8)=$C(13,39,15)_"00$|*AMT4|[*]@AMT4|||do VP8^V01S307(.fEFTPAY)||||2"
 set %TAB(9)=$C(14,24,3)_"00T|*CRCD5|[*]@CRCD5|[CRCD]||do VP9^V01S307(.fEFTPAY)"
 set %TAB(10)=$C(14,39,15)_"00$|*AMT5|[*]@AMT5|||do VP10^V01S307(.fEFTPAY)||||2"
 set %TAB(11)=$C(15,24,3)_"00T|*CRCD6|[*]@CRCD6|[CRCD]||do VP11^V01S307(.fEFTPAY)"
 set %TAB(12)=$C(15,39,15)_"00$|*AMT6|[*]@AMT6|||do VP12^V01S307(.fEFTPAY)||||2"
 do VTBL(.fEFTPAY)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordEFTPAY fEFTPAY) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VSPP   // screen post proc
 type Public RecordEFTPAY fEFTPAY
 do VSPP1(.fEFTPAY)
 #ACCEPT Date=11/05/03; pgm=Screen Compilerxxx
 quit
VSPP1(RecordEFTPAY fEFTPAY)
 type public Number AMT1,AMT2,AMT3,AMT4,AMT5,AMT6
 type public String CRCD1,CRCD2,CRCD3,CRCD4,CRCD5,CRCD6,EFT71F
 
 // Redefine sender's charges
 set EFT71F=""
 
 // Amounts stored in EFT71F must be in 12345,67 format
 if CRCD1'="" set EFT71F=EFT71F_$$LJ^%ZTEXT(CRCD1,3)_AMT1.toString(2,",")_$C(13,10)
 if CRCD2'="" set EFT71F=EFT71F_$$LJ^%ZTEXT(CRCD2,3)_AMT2.toString(2,",")_$C(13,10)
 if CRCD3'="" set EFT71F=EFT71F_$$LJ^%ZTEXT(CRCD3,3)_AMT3.toString(2,",")_$C(13,10)
 if CRCD4'="" set EFT71F=EFT71F_$$LJ^%ZTEXT(CRCD4,3)_AMT4.toString(2,",")_$C(13,10)
 if CRCD5'="" set EFT71F=EFT71F_$$LJ^%ZTEXT(CRCD5,3)_AMT5.toString(2,",")_$C(13,10)
 if CRCD6'="" set EFT71F=EFT71F_$$LJ^%ZTEXT(CRCD6,3)_AMT6.toString(2,",")_$C(13,10)
 
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordEFTPAY fEFTPAY) //
 type public String X
 
 if X="" do DEFAULT^DBSMACRO("@AMT1","")
VP2(RecordEFTPAY fEFTPAY) //
 type public Number X
 type public String CRCD1
 
 if (X=""),(CRCD1'="") do Runtime.setErrMSG("EFTPAY",283) quit
VP3(RecordEFTPAY fEFTPAY) //
 type public String X
 
 if X="" do DEFAULT^DBSMACRO("@AMT2","")
VP4(RecordEFTPAY fEFTPAY) //
 type public Number X
 type public String CRCD2
 
 if (X=""),(CRCD2'="") do Runtime.setErrMSG("EFTPAY",283) quit
VP5(RecordEFTPAY fEFTPAY) //
 type public String X
 
 if X="" do DEFAULT^DBSMACRO("@AMT3","")
VP6(RecordEFTPAY fEFTPAY) //
 type public Number X
 type public String CRCD3
 
 if (X=""),(CRCD3'="") do Runtime.setErrMSG("EFTPAY",283) quit
VP7(RecordEFTPAY fEFTPAY) //
 type public String X
 
 if X="" do DEFAULT^DBSMACRO("@AMT4","")
VP8(RecordEFTPAY fEFTPAY) //
 type public Number X
 type public String CRCD4
 
 if (X=""),(CRCD4'="") do Runtime.setErrMSG("EFTPAY",283) quit
VP9(RecordEFTPAY fEFTPAY) //
 type public String X
 
 if X="" do DEFAULT^DBSMACRO("@AMT5","")
VP10(RecordEFTPAY fEFTPAY) //
 type public Number X
 type public String CRCD5
 
 if (X=""),(CRCD5'="") do Runtime.setErrMSG("EFTPAY",283) quit
VP11(RecordEFTPAY fEFTPAY) //
 type public String X
 
 if X="" do DEFAULT^DBSMACRO("@AMT6","")
VP12(RecordEFTPAY fEFTPAY) //
 type public Number X
 type public String CRCD1,CRCD2,CRCD3,CRCD4,CRCD5,CRCD6
 
 if X="",CRCD6'="" do Runtime.setErrMSG("EFTPAY",283) quit
 
 // At least one sender's charge is required if FEEPAYOR="BEN"
 if fEFTPAY.FEEPAYOR'="BEN" quit
 if CRCD1="",CRCD2="",CRCD3="",CRCD4="",CRCD5="",CRCD6="" do Runtime.setErrMSG("EFTPAY",5068) quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordEFTPAY fEFTPAY
 do VPR(.fEFTPAY)
 do VDA1(.fEFTPAY)
 do ^DBSPNT()
 quit

VW(RecordEFTPAY fEFTPAY)
 do VDA1(.fEFTPAY)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordEFTPAY fEFTPAY)
 do VDA1(.fEFTPAY)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordEFTPAY fEFTPAY
 do VDA1(.fEFTPAY)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordEFTPAY fEFTPAY
 if sn="EFTPAY" do vSET1(.fEFTPAY,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordEFTPAY fEFTPAY,di,X)
 do fEFTPAY.setAuditFlag(1)
 set fEFTPAY.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordEFTPAY fEFTPAY
 if fid="EFTPAY" quit $$vREAD1(.fEFTPAY,di)
 quit ""
vREAD1(RecordEFTPAY fEFTPAY,di)
 quit fEFTPAY.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VDSPPRE(RecordEFTPAY fEFTPAY)  // Display Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 type Number AMT,I
 type String CHG,ZAMT,ZCRCD
 
 type public String EFT71F
 
 // EFT71F is defined by calling process
 set EFT71F=EFT71F.get()
 
 // Load Sender's Charge ccys and amts into local variables on the screen
 // Sender Charge amounts stored in EFT71F have a 12345,67 format
 for I=1:1:6 do {
 	set ZCRCD="CRCD"_I
 	set ZAMT="AMT"_I
 	set CHG=EFT71F.piece($C(13,10),I)
 	set @ZCRCD=CHG.extract(1,3)
 	set AMT=CHG.extract(4,CHG.length())
 	set @ZAMT=$S(AMT="":"",1:$$INT^%ZM(AMT,"$",",.",2))
 	}
 
 quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
