DBSSPFIL(RecordDBTBLSP dbtblsp, String vpar, Boolean vparNorm) // DBTBLSP - SQL Stored Procedure Definition Filer
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 11/09/2007 15:13 - chenardp
	// Generated from DATA-QWIK schema in: /profile/v72framework_gtm  by: /v72framework_gtmlx/crtns/DBSFILB.obj

	// Data Dictionary Data Items (9)              12/12/2005
	/*
		vpar      Runtime qualifiers:      /NOREQ/MECH=REFARR:R

		/[NO]CASDEL   - Cascade delete
		/[NO]FRMFILER - Called from another filer
		/[NO]INDEX    - Update Indexes
		/[NO]JOURNAL  - Journal update
		/[NO]TRIGAFT  - After update triggers
		/[NO]TRIGBEF  - Before update triggers
		/[NO]UPDATE   - Update primary table
		/[NO]VALDD    - Validate column values
		/[NO]VALFK    - Validate foreign keys
		/[NO]VALREQ   - Validate not null values
		/[NO]VALRI    - Validate transaction integrity
		/[NO]VALST    - Validate database state
	*/

	type Public Number ER = 0
	type Public String RM

	type public String verrors()

	catch fERROR {
		if fERROR.type="%PSL-E-DBFILER" do {
			set ER = 1
			set RM = fERROR.description
		}
		else  throw fERROR
	}
	type String vx(), vxins()                              // audit column array
	type Number %O = dbtblsp.getMode()                     // Processing mode
	set vpar = vpar.get()                                  // Initialize vpar

	if %O = 0 do AUDIT^UCUTILN(dbtblsp,.vxins(),1,"|")
	if %O = 1 do AUDIT^UCUTILN(dbtblsp,.vx(),1,"|")

	if 'vparNorm.get() set vpar = $$initPar^UCUTILN(vpar)  // Run-time qualifiers

	if %O = 0 do { quit                                    // Create record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		if vpar["/VALDD/" do vddver                           // Check values
		do vexec
	}

	if %O = 1 do { quit                                    // Update record control block
		if vx("PID").exists() do vkchged quit                 // Primary key changed
		if vpar["/VALREQ/" do vrequ                           // Check required
		if vpar["/VALDD/" do VDDUX^DBSFILER("DBTBLSP",.vx)
		set %O = 1 do vexec
	}

	if %O = 2 do { quit                                    // Verify record control block
		if vpar["/VALREQ/" do vreqn                           // Check required
		set vpar = $$setPar^UCUTILN(vpar,"NOJOURNAL/NOUPDATE")
		do vexec
	}

	if %O = 3 do { quit                                    // Delete record control block
		quit:'Db.isDefined("DBTBLSP","PID = :dbtblsp.pid")    // No record exists
		do vdelete(0)
	}

	quit

vlegacy(Number %ProcessMode,String vpar) // Legacy interface (^DBSDF9 for %O=0, EXT^DBSFILER for %O = 2)

	type public String PID

	type RecordDBTBLSP dbtblsp = Db.getRecord("DBTBLSP","PID=:PID")
	if (%ProcessMode = 2) do {
		do dbtblsp.setMode(2)

		do DBSSPFIL(dbtblsp,vpar)
	}

	quit

vLITCHK() quit 0 // Table does not have columns involved in literals


vexec // Execute transaction

	type public Number %O
	type public String vpar,vobj(),vx(),vxins()

	type public RecordDBTBLSP dbtblsp

	type String vERRMSG

	if vpar["/VALST/" if '(''Db.isDefined("DBTBLSP","PID = :dbtblsp.pid") = ''%O) set vERRMSG = $$^MSG($select(%O:7932,1:2327)) throw Class.new("Error","%PSL-E-DBFILER,"_vERRMSG.replace(",","~"))

	if vpar'["/NOUPDATE/" do {

		if %O = 0  set dbtblsp.LTD = %CurrentDate
		if %O = 0  set dbtblsp.TIME = %CurrentTime
		if %O = 0  if 'dbtblsp.isChanged("USER", "USER") set dbtblsp.USER = %UserName
		// Allow global reference and M source code
		#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
		#BYPASS
		if $D(vobj(dbtblsp)) K:$D(vobj(dbtblsp,1,1)) ^DBTBLSP(vobj(dbtblsp,-3)) S ^DBTBLSP(vobj(dbtblsp,-3))=vobj(dbtblsp)
		#ENDBYPASS
			// Allow global reference and M source code
			#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
			#BYPASS
			if $D(vobj(dbtblsp,1,1)) N vS1,vS2 S vS1=0 F vS2=1:450:$L(vobj(dbtblsp,1,1)) S vS1=vS1+1,^DBTBLSP(vobj(dbtblsp,-3),vS1)=$E(vobj(dbtblsp,1,1),vS2,vS2+449)
			#ENDBYPASS
	}

	quit

vdelete(Boolean vkeychg) // Record Delete

	type public String vobj(),vpar
	type public RecordDBTBLSP dbtblsp


	// Allow global reference - Delete record
	#ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
	#BYPASS
	kill ^DBTBLSP(vobj(dbtblsp,-3))
	#ENDBYPASS
	quit


vreqn // Validate required data items

	type public RecordDBTBLSP dbtblsp

	quit

vrequ // Valid required columns on update


	type public String vx()
	type public RecordDBTBLSP dbtblsp

	if dbtblsp.pid.isNull() do vreqerr("PID") quit

	quit

vreqerr(di) // Required error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DBTBLSP","MSG",1767,"DBTBLSP."_di)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit




vddver // Validate data dictionary attributes

	type public Number %O
	type public String vpar,vx()

	type String vRM,X
	type public RecordDBTBLSP dbtblsp

	if dbtblsp.pid.length()>40 set vRM = $$^MSG(1076,40) do vdderr("PID", vRM) quit
	if dbtblsp.hashkey.length()>25 set vRM = $$^MSG(1076,25) do vdderr("HASHKEY", vRM) quit
	if dbtblsp.hvars.length()>255 set vRM = $$^MSG(1076,255) do vdderr("HVARS", vRM) quit
	set X = dbtblsp.ltd if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"D") do vdderr("LTD", vRM) quit
	if dbtblsp.pars.length()>80 set vRM = $$^MSG(1076,80) do vdderr("PARS", vRM) quit
	if dbtblsp.pgm.length()>8 set vRM = $$^MSG(1076,8) do vdderr("PGM", vRM) quit
	if dbtblsp.sptype.length()>6 set vRM = $$^MSG(1076,6) do vdderr("SPTYPE", vRM) quit
	set X = dbtblsp.time if 'X.isNull(),X'?1.5N set vRM=$$^MSG(742,"C") do vdderr("TIME", vRM) quit
	if dbtblsp.user.length()>20 set vRM = $$^MSG(1076,20) do vdderr("USER", vRM) quit
	quit

vdderr(di, vRM) // Column attribute error

	type public Boolean ER = 0
	type public String RM
	do SETERR^DBSEXECU("DBTBLSP","MSG",979,"DBTBLSP."_di_" "_vRM)
	if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~"))
	quit


vkchged // Access key changed

	type public RecordDBTBLSP dbtblsp

	type public Boolean ER = 0
	type public String RM,vpar,vx()

	type Number %O = 1
	type String vnewkey,voldkey,vux

	set vux = vx("PID")
	set voldkey = vux.piece("|",1),vobj(dbtblsp,-3) = voldkey // Copy old keys into object

	set vpar = $$setPar^UCUTILN(vpar,"NOINDEX")            // Switch Index off
	if vpar["/VALREQ/" do vrequ
	if vpar["/VALDD/" do vddver
	do vexec

	set vnewkey = vux.piece("|",2),vobj(dbtblsp,-3) = vnewkey // Copy new keys into object
	type RecordDBTBLSP vnewrec = dbtblsp.copy()
	do vnewrec.setMode(0)
	do vnewrec.save("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")

	set %O = 1 do CASUPD^DBSEXECU("DBTBLSP",voldkey,vnewkey) if ER throw Class.new("Error","%PSL-E-DBFILER,"_RM.get().replace(",","~")) // Cascade update

	set vobj(dbtblsp,-3) = vux.piece("|",1)                // Reset key for delete
	set vpar = $$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
	set %O = 3 do vdelete(1)                               // Delete old record

	quit
