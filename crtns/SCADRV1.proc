SCADRV1
 	/*
 	 PROCEDURE ID:	SCADRV1
 	     Original:	Vitaliy Antonov
		 Date:	08/16/01 - 11:49:15 AM
 	         Desc:	Password setup/delete
 
 	---- Revision History ------------------------------------------------
	11/29/06 - chhabris - CR23365
		   Added INIT section in the beginning and called the same from
		   MGR section. User ID (Other) Password Maintenance was not
		   working because of the same.

	03/17/05 - KELLYP - CR 13666
		   Corrected several cuvar references (should be CUVAR) in the 
		   CHKPSWH section and modified same section to conform to 
		   current PSL standards.  Also removed pre-2003 revision 
		   history.
	----------------------------------------------------------------------
	*/

	do INIT
	quit
	
INIT	//
	set UID=%UserID
	set UCLS=%UserClass
	
	new %UCLS

	type RecordSCAU scau=Db.getRecord("SCAU","UID=:UID",1)
	if 'scau.getMode() quit

	do VPG0(.scau)

	quit


VPG0(RecordSCAU scau)
	
	new ENC,PSWDAUT,PWDCHG
	
	set PWDCHG=""

	set %TAB("UID")=".UID1/HLP=[SCAU]UID/TBL=[SCAU]"
	set %TAB("PWD")=".PWD1/XPP=D PWD^SCADRV1(.scau,.ENC,.PSWDAUT,.PWDCHG)"
	
	if $G(MGRFLG) set %READ="@@%FN,,,UID/REQ,PWD/SEC/REQ"
	else  set %READ="@@%FN,,,PWD/REQ/SEC"
	
	do ^UTLREAD
	// No password set up
	if VFMQ="Q" set ER="W" set RM=$$^MSG(1968) quit
	
	// Update DB with a new password
	do scau.setAuditFlag(1)
	set scau.newpwdreq=0
	set scau.pswd=ENC
	set scau.pswdaut=PSWDAUT
	do scau.save()

	// New password accepted.  Change it again in ~p1 days.
	do Runtime.setErrMSG("SCAU",1873,PWDCHG)
	set ER="W"

	quit 
	

Public PWD(RecordSCAU scau,ENC,PSWDAUT,PWDCHG)	
	/* Post processor for password field on SCAUSR screen.
	
	Arguments:
		. scau		User identification 	TYP=RecordSCAU/REQ
				data
		. ENC		Encripted password	TYP=N/MECH=REFNAM/REQ
		. PSWDAUT	Password Authentication TYP=T/MECH=REFNAM/REQ
		. PWDCHG 	Forced password change	TYP=N/MECH=REFNAM/REQ
				frequency (Days)

	Inputs:
		. X		New Password		TYP=T
		
	*/
	new PWDLEN,UCLS

	set UCLS=scau.%ucls

	type RecordSCAU0 scau0=Db.getRecord("SCAU0","UCLS=:UCLS",1)
	// Invalid password
	if 'scau0.getMode() do Runtime.setErrMSG("SCAU0",1419) quit

	// Password change frequency
	set PWDCHG=scau0.pwdchg

	// Password length must be at least ~p1 characters
	if $L(X)<scau0.pwdlen do Runtime.setErrMSG("SCAU0",2139,scau0.pwdlen) quit 

	set ENC=$$ENC^SCAENC(X)
	// Invalid password
	set ER=$$ENC^%ENCRYPT(X,.PSWDAUT) if ER do Runtime.setErrMSG("SCAU0",1419) quit
	
	// Password must be changed
	if ENC=scau.pswd do Runtime.setErrMSG("SCAU",2140) quit
	if PSWDAUT=scau.pswdaut do Runtime.setErrMSG("SCAU",2140) quit
	
	// Check Password history to prevent old passwords from being reused
	do CHKPSWH(scau.uid,ENC) quit:ER 
	do CHKPSWH(scau.uid,PSWDAUT) quit:ER 
	
	if $G(%IPMODE)["NOINT" quit
	do TERM^%ZUSE(0,"NOECHO")
	
	// Reenter password to verify:
	write $$BTM^%TRMVT,$$^MSG(8355) read Z
	do TERM^%ZUSE(0,"ECHO")
	
	// Invalid verification
	if $$ENC^SCAENC(Z)'=ENC do Runtime.setErrMSG("SCAU",1506) quit

	quit 
	

MGR	// Entry point for privileged user (manager)
	
	set (UID,UCLS)=""
	set MGRFLG=1
	do INIT
	quit 
	

public CHKPSWH(Number UID,String ENCPSWD)
	/*
	Arguments:
		. UID User ID   		TYP=N/MECH=VAL/REQ
		. ENCPSWD Encrypted password	TYP=T/MECH=VAL/REQ
	
	Check the Password History table to verify that the new password has
	not been used since the "validation date."  The validation date is
	calculated by subtracting the # of Password History Days, determined
	by the institution, from the current calendar date.
	*/

	type Public Boolean ER

	// Password History Days
	#IF 'CUVAR.pswdh.isNull()
	
	type Date VDATE

	// Validation Date = Current Date - # of Password History Days
	set VDATE=%CurrentDate-CUVAR.pswdh
	
	/* Check the Password History table to verify that the new password has
	not been used since the validation date. */
	type ResultSet rs=Db.select("TJD","SCAUPH","UID=:UID AND TJD>=:VDATE AND ENCPSWD=:ENCPSWD")

	// Password used previously, please try again
	if 'rs.isEmpty() do Runtime.setErrSTBLER("SCAU","PWDUSED") quit:ER
	#ENDIF

	quit 
	

Public VALIDATE(PWD,UID)
	/*
	Arguments:
		. PWD - SCAU User Password  	TYP=T/MECH=VAL/REQ
		. UID - SCAU User ID   		TYP=T/MECH=VAL/NOREQ
	Returns:
		. $$	Password validity flag
			1 - Password Valid
			0 - Password Invalid
	*/

	new ENC,ENCMETH,PSWD,VALID
	
	if '$D(UID) set UID=%UserID
	if UID="" quit 0
	set ENCMETH=1
	set VALID=0	

	type RecordSCAU scau=Db.getRecord("SCAU","UID=:UID",1)
	if 'scau.getMode() quit 0

	if scau.pswdaut="" set PSWD=scau.pswd set ENCMETH=0
	else  set PSWD=scau.pswdaut

	if ENCMETH do {
		set ER=$$ENC^%ENCRYPT(PWD,.ENC)
		if ENC=scau.pswdaut set VALID=1
		}
	
	else  if $$ENC^SCAENC(PWD)=scau.pswd set VALID=1
	
	quit VALID


Public SCA017	// Entry Point for SCA017 function

	new UCLS,UID

	set UID=%UserID
	set UCLS=%UserClass
	
	type RecordSCAU scau=Db.getRecord("SCAU","UID",1) 

	do VPG0(.scau)

	quit

vSIG()	quit "60598^23466^Sanjay Chhabria^4695"	// Signature - LTD^TIME^USER^SIZE
