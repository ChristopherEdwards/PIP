EFTREV	/*	EFT Payment Review

	  ----------------------- Revision History -----------------------------

	   05/02/05 - CARROLLJ - CR15840
		      Modified VPG01 section to include screen name EFTREV 
		      in call to DRV^USID.

	   09/30/02 - TELIV - 49451
		      Converting to PSL

	   06/11/01 - SIGDAE - 45301
	              Replaced call to $$date^BCHEFT with $$date^EFTFUNCS.
	              Replaced call to ptyp^BCHEFT with direct global call
	              to CTBLEFTTYPE to get value of tries.

	   11/09/00 - ZWITKOWITSM - 41094:1
	        Added crcd as a parameter to the indirection call to
	        $$date^BCHEFT.  This corrects an Undefined error.

	-----------------------------------------------------------------------
	*/

INIT	//
	new VFMQ,OLNT
	set %PG=0 
	set %PAGE=0 
	set %ProcessMode=1

	type RecordEFTPAY1 eftpay1

	do VPG(.eftpay1)

	set DTREC=""
	quit


VPG(RecordEFTPAY1 eftpay1)	// Page control
	new FINISH
	set FINISH=0
	
	for  do { quit:FINISH
		if $D(VFMQ),"CDFQ"[VFMQ do VER(.eftpay1) set FINISH=1 quit

		if %PG=0 do VPG00 if ER set FINISH=1 quit

		if %PG>0 do VPG01(.eftpay1) 

		if $D(VFMQ),"CDFQ"[VFMQ do VER(.eftpay1) set FINISH=1 quit

		set %PG=%PG+1
		}

	quit


VPG00	// Set up
	set %NOPRMT="C"
	set (BRCD,CID,RSEQ)="" 
	set EFTTYPE="POC"

	// /DES=Date Received/TYP=D/LEN=10
	set %TAB("DTREC")=".DTREC/TBL=[EFTREV]DTREC:DISTINCT"

	// /DES=Branch Code/TYP=T/LEN=4
	set %TAB("BRCD")=".BRCD1/TBL=[EFTREV]BRCD:DISTINCT QU:""[EFTREV]DTREC=<<DTREC>>"",/XPP=I X=""ALL"" do CHANGE^DBSMACRO(""TBL"",""""),GOTO^DBSMACRO(""END"")"

	// /DES=Account Number/TYP=T/LEN=12
	set %TAB("CID")=".CID1/TBL=[EFTREV]CID:DISTINCT QU:""[EFTREV]DTREC=<<DTREC>> AND [EFTREV]BRCD=<<BRCD>>""/XPP=I X=""ALL"" do CHANGE^DBSMACRO(""TBL"",""""),GOTO^DBSMACRO(""END"")"

	// /DES=Electronic Payment Type/TYP=T/LEN=6
	set %TAB("EFTTYPE")=".EFTTYPE/TBL=[EFTREV]EFTTYPE:DISTINCT QU:""[EFTREV]DTREC=<<DTREC>> AND [EFTREV]BRCD=<<BRCD>> AND [EFTREV]CID=<<CID>>"""

	// /DES=Review File Sequence/TYP=T/LEN=12
	set %TAB("RSEQ")=".RSEQ2/TBL=[EFTREV]RSEQ QU:""[EFTREV]DTREC=<<DTREC>> AND [EFTREV]BRCD=<<BRCD>> AND [EFTREV]CID=<<CID>> AND [EFTREV]EFTTYPE"",/XPP=I X=""ALL"" do CHANGE^DBSMACRO(""TBL"","""")"

	set %READ="@@%FN#1,,DTREC#1,BRCD#1,CID#1,RSEQ#1,"

	do ^UTLREAD 

	if "Q"[VFMQ set ER=1 quit

	kill VFMQ
	set %PG=0 
	set %PAGE=0

	// Create temporary lookup-table for allowed Inqueries
	// msg 5487: Account History
	set TMP(1)=$$^MSG(5487)


VPG00A	// Load the review data Items into screen array

	set B="" 
	set C="" 
	set E=""


BRCD	// Get subscripts for BRCD

	if BRCD="ALL" do { quit:B=""
		type ResultSet rs=Db.select("BRCD","EFTREV","DTREC=:DTREC AND BRCD>:B","BRCD")
		if rs.next() set B=rs.getCol(1)
		}

	set B=BRCD 

	do CID 

	quit


CID	// Get subscripts for CID
	N QFLAG
	set QFLAG=0
	if CID="ALL" do { quit:QFLAG
                type ResultSet rs=Db.select("CID","EFTREV","DTREC=:DTREC AND BRCD=:B AND CID>:C","CID")
                if rs.next() set C=rs.getCol("CID")
		if (BRCD'="ALL")&(C="") set QFLAG=1 quit
		if C="" do BRCD set QFLAG=1 quit
                }

	set C=CID 

	do RSEQ 

	quit


RSEQ	// Get subscripts for RSEQ
	new QFLAG
	set QFLAG=0

	if RSEQ="ALL" do { quit:QFLAG
		type ResultSet rs=Db.select("RSEQ","EFTREV","DTREC=:DTREC AND BRCD=:B AND CID=:C AND EFTTYPE=:EFTTYPE AND RSEQ>:E","RSEQ")
		if rs.next() set E=rs.getCol("RSEQ")
		if (CID'="ALL")&(E="") set QFLAG=1 quit

		if E="" do BRCD set QFLAG=1 quit

		do RECLOD

		do RSEQ 

		set QFLAG=1 quit
		}


	set E=RSEQ 

	do RECLOD

	quit


RECLOD	//
	new eftrevdat
	set %PAGE=%PAGE+1
	type RecordACN acn=Db.getRecord("ACN","CID=:C")

	set KEY(%PAGE)=DTREC_"|"_B_"|"_C_"|"_EFTTYPE_"|"_E_"|"_acn.title1

	type ResultSet rs=Db.select("RECACCT,RECINST,AMOUNT,CRCD,VARIABLE,CONSTANT,SPECIFIC,EFD,FREQUENCY,LASTDT,NEXTDT,STATUS,MET,TRIES,ACTAMT,THOLD,PROCDT,AMTTYP,,PRI,ACC,TSEQ,EFTPAY,SEQ","EFTREV","DTREC=:DTREC AND BRCD=:B AND CID=:C AND EFTTYPE=:EFTTYPE AND RSEQ=:E")

	if rs.next() set eftrevdat=rs.getRow()
	set REC(%PAGE)=$TR(eftrevdat,$C(9),"|")

	quit


VPG01(RecordEFTPAY1 eftpay1)	// Screen
	set RECPTR=%PG 
	set EFTREV=REC(RECPTR) 
	set EFTRKEY=KEY(RECPTR)

	set eftpay1=Db.getRecord("EFTPAY1","CID=:CID")

	do DRV^USID(%ProcessMode,"EFTREV",.eftpay1)

	set REC(RECPTR)=EFTREV
	quit


VER(RecordEFTPAY1 eftpay1)	//

	set I=""
	for  set I=$O(REC(I)) quit:I=""  if $D(FILESTAT(I)) do FILE(.eftpay1)

	do END

	quit


FILE(RecordEFTPAY1 eftpay1)	// File data
	new %O
	type RecordEFTPAY fEFTPAY

	// File new entry in EFTPAY file-structure
	if $P(FILESTAT(I),"|",2)=0 do {
		set (cid,CID)=$P(KEY(I),"|",3)

		new efd,ER,LOCK,procdt,SEQ,Z

		set ogl=$S(Db.isDefined("ACN","CID"):0,1:1)
		set onus=0 
		set fre="1DA" 
		set SRC="POCVAL" 
		set ER=0

		set fEFTPAY=Db.getRecord("EFTPAY","CID=:CID,SEQ=:SEQ",1)

		set fEFTPAY.recacct=$P(REC(I),"|",1)
                set fEFTPAY.recinst=$P(REC(I),"|",2)
                set fEFTPAY.amount=$P(REC(I),"|",3)
                set fEFTPAY.crcd=$P(REC(I),"|",4)
                set fEFTPAY.variable=$P(REC(I),"|",5)
                set fEFTPAY.constant=$P(REC(I),"|",6)
                set fEFTPAY.specific=$P(REC(I),"|",7)
                set fEFTPAY.efd=$P(REC(I),"|",8)
                set fEFTPAY.frequency=$P(REC(I),"|",9)
                set fEFTPAY.source=$P(REC(I),"|",10)
                set fEFTPAY.cc=$P(REC(I),"|",11)
                set fEFTPAY.status=$P(REC(I),"|",12)
                set fEFTPAY.met=$P(REC(I),"|",13)
                set fEFTPAY.tries=$P(REC(I),"|",14)
                set fEFTPAY.actamt=$P(REC(I),"|",15)
                set fEFTPAY.thold=$P(REC(I),"|",16)
                set fEFTPAY.procdt=$P(REC(I),"|",17)
                set fEFTPAY.amttyp=$P(REC(I),"|",18)
                set fEFTPAY.efttype=$P(REC(I),"|",19)
                set fEFTPAY.pri=$P(REC(I),"|",20)
                set fEFTPAY.nxtpmt=$P(REC(I),"|",21)
                set fEFTPAY.tseq=$P(REC(I),"|",22)
                set fEFTPAY.expdt=$P(REC(I),"|",23)
                set fEFTPAY.xseq=$P(REC(I),"|",24)

		set EFTTYPE="POCVAL"

		type RecordEFTPAY eftpay=Db.getRecord("EFTPAY","CID,SEQ")

		// Transaction Reference Number
		set efd=$$date^EFTFUNCS(%SystemDate,"1DA",onus,0,EFTTYPE,eftpay.refno)

		type RecordCTBLEFTTYPE ctblefttype=Db.getRecord("CTBLEFTTYPE","KEY=:EFTTYPE")
		if '$D(tries) set tries=ctblefttype.tries

		//process date
		set fEFTPAY.procdt=procdt
	
		//Effective date date
		set fEFTPAY.efd=efd

		//Added
		set fEFTPAY.status="A"

		//Reset retries
		set fEFTPAY.tries=tries

		//Reset actual amoumt
		set fEFTPAY.thold=""

		//Payment type
		set fEFTPAY.efttype=SRC

		// Fee Currency
		if ogl set eftpay.ttype=2

		set LOCK=1

		for Z=1:1:10 do { quit:'LOCK
			type RecordEFTPAY1 eftpay1=Db.getRecord("EFTPAY1","CID=:CID")
			set SEQ=eftpay1.seq+1

			lock +EFTPAY(CID,SEQ):1
			else  quit

			if Db.isDefined("EFTPAY","CID=:CID,SEQ=:SEQ") lock -EFTPAY(CID,SEQ) quit

			set LOCK=0
			}

		// Record locked by another user
		if LOCK do {
			set ER=1 
			set RM=$$^MSG(2333) quit
			}

		set ZSEQ=SEQ
		set $P(REC(I),"|",23)=SEQ
		set %ProcessMode=0

		//Call DATA-QWIK filer routine
		do fEFTPAY.save()

		lock -EFTPAY(CID,SEQ)
		}

	// Delete entry in EFTPAY file-strucrure
	if $P(FILESTAT(I),"|",2)=3 do {
		set SEQ=$P(REC(I),"|",23)
		set CID=$P(KEY(I),"|",3)
		if '$L(SEQ)!'$L(CID) quit
		set %ProcessMode=3
		do Db.delete("EFTPAY","CID=:CID AND SEQ=:SEQ")
		}

	// File update in EFTREV global
	if $P(FILESTAT(I),"|",1)=1 do {
		new brcd,cid,efttype,jd,rseq
		set $P(REC(I),"|",8)=%SystemDate 
		if '$$BD^UNBD(%SystemDate) set $P(REC(I),"|",8)=$$NBD^UNBD(%SystemDate)
		set jd=$P(KEY(I),"|",1)
		if jd="" quit
		set brcd=$P(KEY(I),"|",2)
		if brcd="" quit
		set cid=$P(KEY(I),"|",3)
		if cid="" quit
		set efttype=$P(KEY(I),"|",4) quit:efttype=""
		if efttype="" quit
		set rseq=$P(KEY(I),"|",5)
		if rseq="" quit

		if $P(FILESTAT(I),"|",2)=3 do {
			set $P(REC(I),"|",23)="" 
			set $P(REC(I),"|",22)=""
			}

		type RecordEFTREV eftrev=Db.getRecord("EFTREV","DTREC=:jd,BRCD=:brcd,CID=:cid,EFTTYPE=:efttype,RSEQ=:rseq")

		set eftrev.recacct=$P(REC(I),"|",1)
		set eftrev.recinst=$P(REC(I),"|",2)
		set eftrev.amount=$P(REC(I),"|",3)
                set eftrev.crcd=$P(REC(I),"|",4)
		set eftrev.variable=$P(REC(I),"|",5)
                set eftrev.constant=$P(REC(I),"|",6)
                set eftrev.specific=$P(REC(I),"|",7)
                set eftrev.efd=$P(REC(I),"|",8)
		set eftrev.frequency=$P(REC(I),"|",9)
                set eftrev.lastdt=$P(REC(I),"|",10)
                set eftrev.nextdt=$P(REC(I),"|",11)
                set eftrev.status=$P(REC(I),"|",12)
                set eftrev.met=$P(REC(I),"|",13)
                set eftrev.tries=$P(REC(I),"|",14)
                set eftrev.actamt=$P(REC(I),"|",15)
                set eftrev.thold=$P(REC(I),"|",16)
		set eftrev.procdt=$P(REC(I),"|",17)
                set eftrev.amttyp=$P(REC(I),"|",18)
                set eftrev.pri=$P(REC(I),"|",20)
                set eftrev.acc=$P(REC(I),"|",21)
                set eftrev.tseq=$P(REC(I),"|",22)
                set eftrev.eftpay=$P(REC(I),"|",23)
                set eftrev.seq=$P(REC(I),"|",24)

		do eftrev.bypassSave()
	
		}
	quit


END	//
	set ER="W"

	// Review function done
	set RM=$$^MSG(5490)

	quit


	//

vSIG()	quit "60032^36722^John Carroll^8917"	// Signature - LTD^TIME^USER^SIZE
