LNPTS31(RecordLN ln, RecordTTX ttx, RecordTRN trn) //
	/*

	Process Charge-off Transactions


	       ORIG:  MILLER - 15 AUG 1990
	       DESC:
	---- Revision History -------------------------------------------------
	
	09/15/05 - BHOLT - 17069
		   Modified the Depricated method to Current Standard.

	06/05/01 - ARCILLAZ - 43583
		   Converted to PSL. Removed old revision history.

	10/09/01 - ANTONOVS - 47569
		   Modified section INIT to initialize variables FINB ,TAXB,
		   YEOFF, and TAXYEOFF under this section.

	*/


	type public Date T
	type public Number BRCD, CID, EC, TSEQ, ZAMT
	type public String ETC, UID
	
	set EC = 0
	
	do INIT(.ln, .ttx, .trn)
		
	quit
	
INIT(RecordLN ln, RecordTTX ttx, RecordTRN trn)	//

	type public Date CUVAR2, FINB, TAXB, TAXYEOFF, YEOFF
	type public Number INCRS
	
	type Number BALCMP1S

	if 'CUVAR2.data() set CUVAR2 = %SystemDate
	set FINB = $$BOFY^SCADAT(CUVAR2, 1)
	set TAXB = $$BOTY^SCADAT(CUVAR2, 1)
	type RecordCUVAR cuvar = Db.getRecord("CUVAR")	
	set YEOFF = cuvar.yeoff
	set TAXYEOFF = cuvar.taxyeoff

	// Internal Transaction Code	
	set INCRS = ln.trb - (ttx.itc).extract()

	// Recovery Amount
	do EXEC(.ln, .ttx, .trn)
	quit

Public EXEC(RecordLN ln, RecordTTX ttx, RecordTRN trn)
	
	type public Date CUVAR2, FINB, T, TAXB, TAXYEOFF, YEOFF
	type public Number BRCD, CID, EC, ER, INCRS, TSEQ, ZAMT
	type public String ET, ETC, UID, X
	
	type Number BALCMP1
	
	// Transaction Amount
	set ZAMT = + ttx.tamt

	// Ledger Balances
	set BALCMP1 = ln.bal - ln.coa + ln.rec

	// Unadvanced Balance
	if ln.aruf set BALCMP1 = BALCMP1 - ln.udbal

	// Verify that charge-off transaction amount does not exceed
	// balance not charged-off.
	if 'INCRS, ZAMT > BALCMP1 set ER = 1 set ET = "COAEXBAL" do ^UTLERR quit

	if 'EC do GL^LNPTSU(.ttx, ZAMT, 10)

	// Charge-off reduction may not exceed net charge-off amount.
	if INCRS set ZAMT = - ZAMT 
	if - ZAMT > (ln.coa - ln.rec) set ER = 1 set ET = "COAEXCOA" do ^UTLERR quit

	// Charge-Off Amount
	set ln.coa = ln.coa + ZAMT
	if (YEOFF) & (%EffectiveDate < FINB) & (CUVAR2 '> (FINB + YEOFF - 1)) set ln.copy = ln.copy + ZAMT
	else  set ln.coytd = ln.coytd + ZAMT
	if (TAXYEOFF) & (%EffectiveDate < TAXB) & (CUVAR2 '> (TAXB + TAXYEOFF - 1)) set ln.copty = ln.copty + ZAMT
	else  set ln.cotytd = ln.cotytd + ZAMT

	// Problem Loan Flag
	set ln.plf = 2

	set X = "" do RSEQ(.ttx)

	set ZAMT = 0
			
	if EC do ^LNPTSR(.ln, .ttx, .trn)
	
	quit

RSEQ(RecordTTX ttx)	// If a Restructured Loan record is associated with this transaction,
	
	type public Number CID, RSEQ, TSO, ZAMT

	// update its charge-off amount [LNPL3A]COTR
	set TSO = ttx.tso
	do OUT^UTSO(.TSO, TSO)
	
	set RSEQ = TSO("RSEQ").get()
	if 'RSEQ.length() quit
	
	type RecordLNPL3A lnpl3a = Db.getRecord("LNPL3A", "CID = :CID, RSEQ = :RSEQ", 1)
	if lnpl3a.getMode() do {
		set lnpl3a.cotr = lnpl3a.cotr + ZAMT
		do lnpl3a.save()
		}
	
	quit

Public EC(RecordLN ln, RecordTTX ttx, RecordTRN trn)	// Error correct; called from CHP^LNPTSE

	type public Number EC 
	
	set EC = 1
	do INIT(.ln, .ttx, .trn)
	quit

vSIG()	quit "60225^460^Tanuja Bhol^2882"	// Signature - LTD^TIME^USER^SIZE
