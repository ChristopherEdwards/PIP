V00S017(%ProcessMode,RecordCHKINS fCHKINS)   // -  - SID= <CHKINS> Allocate Checks to Institution
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 11:04 - kini
 // 
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="CHKINS",VPGM=$T(+0),VSNAME="Allocate Checks to Institution"
 set VFSN("CHKINS")="zfCHKINS"
 set vPSL=1
 set KEYS(1)=fCHKINS.CHKS
 set KEYS(2)=fCHKINS.HIGH
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fCHKINS),VDA1(.fCHKINS),^DBSPNT()

 // Display Pre-Processor
 //
 if '%ProcessMode do VNEW(.fCHKINS),VDSPPRE(.fCHKINS) quit:$G(ER)  do VPR(.fCHKINS),VDA1(.fCHKINS)
 if %ProcessMode do VLOD(.fCHKINS) quit:$G(ER)  do VDSPPRE(.fCHKINS) quit:$G(ER)  do VPR(.fCHKINS),VDA1(.fCHKINS)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fCHKINS)
	quit


VNEW(RecordCHKINS fCHKINS) // Initialize arrays if %O=0
 
 do VDEF(.fCHKINS)
 do VLOD(.fCHKINS)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordCHKINS fCHKINS)
 if fCHKINS.UID="" set fCHKINS.UID=%UID
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordCHKINS fCHKINS) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordCHKINS fCHKINS) // Display screen prompts
 set VO="4||13|0"
 set VO(0)="|0"
 set VO(1)=$C(5,12,12,1,0,0,0,0,0,0)_"01T Check Type:"
 set VO(2)=$C(7,5,19,1,0,0,0,0,0,0)_"01T High Check Number:"
 set VO(3)=$C(9,6,18,1,0,0,0,0,0,0)_"01T Low Check Number:"
 set VO(4)=$C(11,7,17,0,0,0,0,0,0,0)_"01TNumber of Checks:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordCHKINS fCHKINS)  // Display screen data
 new V
 s AUXCNT=$G(AUXCNT)
 //
 set VO="9|5|13|0"
 set VO(5)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID(%FN))
 set VO(6)=$C(5,25,6,2,0,0,0,0,0,0)_"01T"_$E(fCHKINS.CHKS,1,6)
 set VO(7)=$C(7,25,12,2,0,0,0,0,0,0)_"01T"_$E(fCHKINS.HIGH,1,12)
 set VO(8)=$C(9,25,12,2,0,0,0,0,0,0)_"00T"_$E(fCHKINS.LOW,1,12)
 set VO(9)=$C(11,25,12,2,0,0,0,0,0,0)_"01N"_$G(AUXCNT)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordCHKINS fCHKINS)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=4,VPT=1,VPB=11,PGM=$T(+0),DLIB="SYSDEV",DFID="CHKINS"
 set OLNTB=11025
 
 set VFSN("CHKINS")="zfCHKINS"
 //
 // 
	
	
 set %TAB(1)=$C(4,24,6)_"21T12401|1|[CHKINS]CHKS|[UTBLCHKS]"
 set %TAB(2)=$C(6,24,12)_"21T12402|1|[CHKINS]HIGH"
 set %TAB(3)=$C(8,24,12)_"01T12401|1|[CHKINS]LOW|||do VP1^V00S017(.fCHKINS)"
 set %TAB(4)=$C(10,24,12)_"20N|*AUXCNT|[*]@AUXCNT"
 do VTBL(.fCHKINS)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordCHKINS fCHKINS) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordCHKINS fCHKINS) //
	type public Boolean ER
	type public Number AUXCNT,EXT,HIGH
	type public String CHKB,RM,X

	set CHKB=X

	if $$INVFMT^CHKNUTL(X) quit
 
	// Must be less than or equal to ~p1
 	if X]HIGH set ER=1 set RM=$$^MSG(8689,HIGH) quit
 
 	set EXT=$$EXTINST^CHKINS(CHKS,X,HIGH)
 
 	// Check range allocated to institution
 	if '%ProcessMode,EXT set ER=1 set RM=$$^MSG(8700) quit        

 	// Check range not allocated to institution
 	if %ProcessMode,(EXT'=2) set ER=1 set RM=$$^MSG(8699) quit
 
 	set EXT=$$EXTBRCD^CHKINS(CHKS,X,HIGH)
 	if EXT set ER=1 quit 
 
 	set EXT=$$EXTCUS^CHKINS(CHKS,X,HIGH)
 	if EXT set ER=1 quit 
 
 	// Count the checks
 
 	set AUXCNT=$$CHKCNT^CHKNUTL(X,HIGH)
 
 	do DISPLAY^DBSMACRO("@AUXCNT",AUXCNT,"0")
  
 	quit 
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordCHKINS fCHKINS
 do VPR(.fCHKINS)
 do VDA1(.fCHKINS)
 do ^DBSPNT()
 quit

VW(RecordCHKINS fCHKINS)
 do VDA1(.fCHKINS)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordCHKINS fCHKINS)
 do VDA1(.fCHKINS)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordCHKINS fCHKINS
 do VDA1(.fCHKINS)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordCHKINS fCHKINS
 if sn="CHKINS" do vSET1(.fCHKINS,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordCHKINS fCHKINS,di,X)
 do fCHKINS.setAuditFlag(1)
 set fCHKINS.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordCHKINS fCHKINS
 if fid="CHKINS" quit $$vREAD1(.fCHKINS,di)
 quit ""
vREAD1(RecordCHKINS fCHKINS,di)
 quit fCHKINS.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 //
VDSPPRE(RecordCHKINS fCHKINS)  // Display Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
	type public Boolean ER
	if '%ProcessMode quit
	if fCHKINS.chks="" quit
 	set AUXCNT=$$CHKCNT^CHKNUTL(fCHKINS.low,fCHKINS.high)
 	if ER.get() quit
	quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler
 quit
