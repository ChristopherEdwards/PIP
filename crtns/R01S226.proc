R01S226	// SCA174 - Earnings Allowance Calculation Report
	// Copyright(c)2007 Sanchez Computer Associates, Inc.  All Rights Reserved - 01/31/2007 12:45 - shetyes

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String Q,QDAT
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type Date VIN1
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="SCA174"
	set RN="Earnings Allowance Calculation Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()			// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|10||[SRV]SCND|[SRV]SCND:DISTINCT:NOVAL||S QDAT=$$^SCAJD(X)||D|Service Charge Date|||||"
	set %TAB("VIN2")="|255||[SRV]CID|[ACN]:NOVAL||D EXT^DBSQRY||T|Account Number|||||"
	set %TAB("VIN3")="|255||[DEP]TYPE|[PRODCTL]:NOVAL||D EXT^DBSQRY||T|Product Type|||||"
	set %TAB("VIN4")="|255||[DEP]FEEPLN|[FEEPLN]PLAN:DISTINCT:QU ""[FEEPLN]PLTP=0"":NOVAL||D EXT^DBSQRY||T|Service Fee Plan|||||"
	set %TAB("VIN5")="|255||[DEP]OFF|[UTBLOFF]:NOVAL||D EXT^DBSQRY||T|Primary Account Officer Code|||||"

	set %READ="IO/REQ,VIN1#1,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=31
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String Q,QDAT
	type public Date VIN1
	type public String VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,CURR,ERNALL,RID,RN,TOT,TOTADJ,VL,VLOF,VRF(),VSTATS(),VWHERE,vCOL,vHDG,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="SCA174",RN="Earnings Allowance Calculation Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=MISMATCH
			type String CHRSET=$$^UCIOENCD("Report","SCA174","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60				// Non-interactive
	else  do {					// Interactive
		do TERM^%ZUSE(IO,"WIDTH=81")
		write $$CLEARXY^%TRMVT
		}

	do INIT^%ZM()

	set vCOL="[TMPSRV]FDATE#10#10,[TMPSRV]DAYS#23#4,[TMPSRV]CALBAL#29#12,[TMPSRV]CALRAT#43#8,[TMPSRV]CALERN#56#12"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[SRV]SCND = "_$$addqts^DBSRWUTL(VIN1),SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[SRV]CID "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DEP]TYPE "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DEP]FEEPLN "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DEP]OFF "_VIN5,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("TMPSRV,SRV") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO()

		set VBNRINFO("PROMPTS",1)="WC1|"_"Service Charge Date"_"|VIN1|"_$$DAT^%ZM(VIN1.get(),%MSKD)
		set VBNRINFO("PROMPTS",2)="WC2|"_"Account Number"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Product Type"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Service Fee Plan"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"Primary Account Officer Code"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Earnings Allowance Calculation Report"
		set VBNRINFO("PGM")="R01S226"
		set VBNRINFO("RID")="SCA174"
		set VBNRINFO("TABLES")="TMPSRV,SRV"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,TMPSRV]PID"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,TMPSRV]CID"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,TMPSRV]PLTP"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,TMPSRV]SCND"
		set VBNRINFO("ORDERBY",5)="[SYSDEV,TMPSRV]SEQ"

		set VBNRINFO("DOC",1)="This report provides information about earnings allowance calculations for"
		set VBNRINFO("DOC",2)="a specified service fee period.  When this report is run, IBS calculates"
		set VBNRINFO("DOC",3)="earnings for lead accounts that are subject to earnings analysis (that is, in"
		set VBNRINFO("DOC",4)="which the [DEP]ANLTYP data item is set to 1) and is set up to calculate"
		set VBNRINFO("DOC",5)="earnings (that is, the [DEP]ANLRCB data item is set to any value except 0)."
		set VBNRINFO("DOC",6)="Following this calculation, IBS compares the resulting amount with the"
		set VBNRINFO("DOC",7)="earnings allowance calculated during service fee processing for the"
		set VBNRINFO("DOC",8)="specified fee period and reports any variance between the two amounts."
		set VBNRINFO("DOC",9)="Typically, this report is run at the end of each service fee period and"
		set VBNRINFO("DOC",10)="used to verify earnings allowance calculations."

		do ^DBSRWBNR(IO,.VBNRINFO)		// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:5 do {
			set (vh(I),VD(I))=0,vs(I)=1	// Group break flags
			set VT(I)=0			// Group count
			for J=1:1:1 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data
	if VDISTKEY.get()="" do { quit:VFMQ		// Report Pre-processor (after query)
		do VPREAQ
		if VFMQ set vh(0)=1 do VEXIT(0)
		}

	set vh(0)=0

	// Run report directly
	do VINILAST
	do VOPRE if VFMQ do VEXIT(0) quit

	set VSELECT=""
	set VSELECT=VSELECT_"TMPSRV.PID,TMPSRV.CID,TMPSRV.PLTP,TMPSRV.SCND,TMPS"
	set VSELECT=VSELECT_"RV.SEQ,TMPSRV.CALERN,SRV.TOTADJ,SRV.ERNALL,TMPSRV."
	set VSELECT=VSELECT_"FDATE,TMPSRV.DAYS,TMPSRV.CALBAL,TMPSRV.CALRAT"

	#ACCEPT DATE=01/31/2007;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"TMPSRV,SRV",VWHERE,"TMPSRV.PID,TMPSRV.CID,TMPSRV.PLTP,TMPSRV.SCND,TMPSRV.SEQ","","DQMODE=1")
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type Public String vovc1,vovc2,vovc3,vovc4,vovc5
	set vovc1="",vovc2="",vovc3="",vovc4="",vovc5=""
	quit

VSAVLAST	// Save last access keys values
	type Public String vovc1,vc1,vovc2,vc2,vovc3,vc3,vovc4,vc4,vovc5,vc5
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5
	quit


VGETDATA(String V,String VI)	//
	type Public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12
	set vc1=V.piece($C(9),1)			// TMPSRV.PID
	set vc2=V.piece($C(9),2)			// TMPSRV.CID
	set vc3=V.piece($C(9),3)			// TMPSRV.PLTP
	set vc4=V.piece($C(9),4)			// TMPSRV.SCND
	set vc5=V.piece($C(9),5)			// TMPSRV.SEQ
	set vc6=V.piece($C(9),6)			// TMPSRV.CALERN
	set vc7=V.piece($C(9),7)			// SRV.TOTADJ
	set vc8=V.piece($C(9),8)			// SRV.ERNALL
	set vc9=V.piece($C(9),9)			// TMPSRV.FDATE
	set vc10=V.piece($C(9),10)			// TMPSRV.DAYS
	set vc11=V.piece($C(9),11)			// TMPSRV.CALBAL
	set vc12=V.piece($C(9),12)			// TMPSRV.CALRAT
	quit

	// User-defined pre/post-processor code

VOPRE	// OPEN pre-processor

	type public String VWHERE

	set VWHERE = "TMPSRV.PID = "_%ProcessID
	quit

VPREAQ	// Pre-processor (after query)

	type public Date QDAT
	type public String Q

	type String WHERE

	//  Recalculate earning allowance and store the result in TMPSRV

	do Db.delete("TMPSRV", "PID=:%ProcessID")

        // Build temporary table
        set WHERE = "(SRV.SCND = "_QDAT_" AND SRV.PLTP = 0 AND DEP.FEEPLN IS NOT NULL AND DEP.ANLTYP = 1)"
 
        if Q.data() set WHERE = WHERE_" AND ("_$$Q2SQL^SQLCONV(.Q())_")"
 
        set WHERE = WHERE_" AND DEP.CID = SRV.CID"
 
        #ACCEPT Date=08/18/05; PGM=RussellDS; CR=16911
        type ResultSet rs = Db.select("CID", "SRV,DEP", WHERE)

	while rs.next() do {

		type Number CID, PLTP,SEQ
		type Date SCND, SCLD
		type String DTL(), RCB

		set CID = rs.getCol("CID")

		set SCND = QDAT

		type ResultSet rs2 = Db.select("SCND", "SRV", "CID=:CID AND SCND<:SCND", "SCND DESC")

		// If first analysis, use opening date - 1 for sch last date
		if rs2.isEmpty() do {

			type Date NJD, ODT

			type RecordDEP dep = Db.getRecord("DEP", "CID=:CID")

			set ODT = dep.odt - 1
			set NJD = SCND.nextFreqDate(dep.scfre)
			if ((dep.odt - 1) '> NJD) set SCLD = dep.odt - 1
			else  set SCLD = NJD
		}
		else  if rs2.next() set SCLD = rs2.getCol("SCND")

		type RecordSRV0 srv0 = Db.getRecord("SRV0", "CID=:CID,PLTP=0,SCND=:SCND",1)
	
		set RCB = srv0.avgbal_"|"_srv0.avgcol_"|"_srv0.avgres_"|"
		set RCB = RCB_srv0.lwbal1_"|"_srv0.lwbal2_"|"_srv0.ledger_"|"
		set RCB = RCB_srv0.avgcolc_"|"_srv0.avgresc_"|"_srv0.balcol_"|"
		set RCB = RCB_srv0.dlyinv

		set PLTP = 0

		do ERNALL^BCHFEEUT(2,RCB)

		// Save results to TMPSRV
		set SEQ = ""
		for  set SEQ = DTL(SEQ).order() quit:SEQ.isNull()  do {

			type RecordTMPSRV tmpsrv = Class.new("RecordTMPSRV", "PID=:%ProcessID,CID=:CID,PLTP=0,SCND=:SCND,SEQ=:SEQ")

			set tmpsrv.fdate = DTL(SEQ).piece("|", 1)
			set tmpsrv.tdate = DTL(SEQ).piece("|", 2)
			set tmpsrv.calbal = DTL(SEQ).piece("|", 3)
			set tmpsrv.calrat = DTL(SEQ).piece("|", 5)
			set tmpsrv.calern = DTL(SEQ).piece("|", 6)

			do tmpsrv.save()
		}
	}














































	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=Q,QDAT

	type public String Q

	// Query array
	kill Q
	quit

VRPOST	// Report post-processor

	do Db.delete("TMPSRV", "PID=:%ProcessID")
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type Public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type Public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VRPOST			// Report Post-Processor
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")	// Report browser data

	quit

VPRINT	// Print section
	type Public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0	// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	if 'vskp(5).get() do VDTL5 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type Public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(5)
	type Public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5
	set (vb1,vb2,vb3,vb4,vb5)=0
	if vb1!(+vovc1'=+vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,VH0=1
	if vb2!(+vovc2'=+vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,vb4=1,vb5=1,VH0=1
	if vb3!(+vovc3'=+vc3) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1
	if vb4!(vovc4'=vc4) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1
	quit

VSUM	// Report Group Summary
	type Public Number VFMQ,vs()
	if 'vs(5) set vs(5)=1 do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type Public Number VRWOPT(),VT(),vc6
	type Public String VSTATS

	set VT(5)=VT(5)+1
	set VT(5,1,1)=VT(5,1,1)+vc6			// @TOT([TMPSRV]CALERN)
	quit

VDTL2	// Detail
	type public String %TIM,CURR,ERNALL,IOSL,Q,QDAT,TOT,TOTADJ,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),VWHERE,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	quit:VD(2)  set VD(2)=1				// Print flag
	if VLC+10>IOSL do VHDG0 quit:VFMQ

	set VL="" do VOM
	set VL="" do VOM
	set VL="Account: "
	set VL=VL_$J("",10-VL.length())_$J(vc2,11)
	do VOM
	set VL="" do VOM
	set VL="Earnings Allowance Calculation Date:"
	set VL=VL_$J("",37-VL.length())_$J($$DAT^%ZM(vc4),10)
	do VOM
	set VL="" do VOM
	set VL="                             "_"Calculation"
	set VL=VL_$J("",44-VL.length())_"Invest"
	set VL=VL_$J("",59-VL.length())_"Earnings"
	do VOM
	set VL="         "_"Date"
	set VL=VL_$J("",22-VL.length())_"Days"
	set VL=VL_$J("",33-VL.length())_"Balance"
	set VL=VL_$J("",46-VL.length())_"Rate"
	set VL=VL_$J("",58-VL.length())_"Allowance"
	do VOM
	set VL="         "_"----------------------------------------------------------"
	do VOM
	set VL="" do VOM
	quit

VSUM4	// Summary
	type public String %TIM,CURR,ERNALL,I,IOSL,Q,QDAT,TOT,TOTADJ,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VWHERE,VX(),vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if 'VT(4) quit
	if VLC+8>IOSL do VHDG0 quit:VFMQ

	set VL="         "_"----------------------------------------------------------"
	do VOM
	set VL="" do VOM
	set VL="                   "_"Total Earnings Allowance"
	set V=VT(4,1,1)					// @TOT([TMPSRV]CALERN,)
	do VP1 quit:VFMQ!verror.get()  set V=$J($FN(V,",",2),12)
	set VL=VL_$J("",52-VL.length())_V		// @TOT([TMPSRV]CALERN,)
	do VOM
	set VL="                   "_"Total Adjustments"
	set VL=VL_$J("",52-VL.length())_$J($FN(vc7,",",2),12)
	do VOM
	set VL="                   "_"Net Earnings Allowance"
	do VP2 quit:VFMQ!verror.get()  set V=$J($FN(TOT,",",2),12)
	set VL=VL_$J("",52-VL.length())_V
	do VOM
	set VL="" do VOM
	set VL="        "_"** Variance between current calculation of "
	do VP3 quit:VFMQ!verror.get()  set V=$J($FN(CURR,",",2),12) do VP4 quit:VFMQ!verror.get()
	set VL=VL_$J("",51-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="        "_"and prior earning allowance calculation of "
	set V=vc8,VO=V set V=$J($FN(V,",",2),12) do VP5 quit:VFMQ!verror.get()
	set VL=VL_$J("",51-VL.length())_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="" do VOM
	quit

VDTL5	// Detail
	type public String %TIM,CURR,ERNALL,IOSL,Q,QDAT,TOT,TOTADJ,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),VWHERE,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="         "_$J($$DAT^%ZM(vc9),10)
	set VL=VL_$J("",20-VL.length())_$J(vc10,6)
	set VL=VL_$J("",28-VL.length())_$J($FN(vc11,",",2),12)
	set VL=VL_$J("",42-VL.length())_$J(vc12,8,4)
	set VL=VL_$J("",55-VL.length())_$J($FN(vc6,",",5),12)
	do VOM
	quit


VHDG0	// Page Header
	type Public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,CURR,ERNALL,Q,QDAT,RID,RN,TOT,TOTADJ,VL,VWHERE,vc1,vc10,vc11,vc12,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vovc4,vovc5,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit			// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM,1,40)
	set VL=VL_$J("",48-VL.length())_"Run Date:"
	set VL=VL_$J("",58-VL.length())_$E(vrundate,1,10)
	set VL=VL_$J("",70-VL.length())_$E(%TIM,1,8)
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_$J("",50-VL.length())_"System:"
	set VL=VL_$J("",58-VL.length())_$E(vsysdate,1,10)
	set VL=VL_$J("",70-VL.length())_"Page:"
	set VL=VL_$J("",76-VL.length())_$E($J(VPN,3),1,3)
	do VOM
	set VL="" do VOM
	set VL="================================================================================"
	do VOM
	set VL="" do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)		// Lock report page heading

	quit


VOM	// Output print line
	type Public Number AUXPTR,vcrt,vlc,VLC,VRG
	type Public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {				// Non-CRT device (form feed)
		if 'AUXPTR.get() write $C(12),!
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	if vcrt<2 write VL,!				// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)	// Save in BROWSER buffer
	set VLC=VLC+1,VL=""				// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - @TOT([TMPSRV]CALERN,,E,12)

	type public Number ERNTOT, V

	set ERNTOT = V
	quit

VP2	// Column pre-processor - Variable: TOT

	type public String vc7
	type public Number ERNTOT, TOT

	set TOT = ERNTOT + vc7
	quit

VP3	// Column pre-processor - Variable: CURR

	type public String vc2,vc8
	type public Number CURR, ERNTOT, ORIG

	type Number CID
	type String CRCD

	set CID = vc2

	type RecordDEP dep = Db.getRecord("DEP", "CID=:CID")

	set CRCD = dep.crcd

	set ORIG = vc8
	set ORIG = ORIG.roundCur(CRCD, "", 0)
	set CURR = ERNTOT.roundCur(CRCD, "", 0)
	quit

VP4	// Column post-processor - Variable: CURR

	type public Number CURR, ORIG
	type public String V, VL

	// Don't display message if no variance

	if (ORIG = CURR) set (V, VL) = ""
	quit

VP5	// Column post-processor - [SYSDEV,SRV]ERNALL

	type public Number CURR, ORIG
        type public String V, VL
 
        // Don't display message if no variance
 
        if (ORIG = CURR) set (V, VL) = ""
	quit
