MRPC023(RETURN,VERSN,CID)	//Public;MRPC call for Effective Dated Transaction Detail
	/*

	   KEYWORDS: RPC

	   ARGUMENTS:
	         . RETURN        Effective Dated Transaction Detail	 /TYP=T/REQ/MECH=REFNAM:W

	         . VERSN         ^MRPC023 version number    		 /TYP=N/REQ/MECH=VAL
	                         current version=1

	         . CID           Account Number           		 /TYP=N/REQ/MECH=VAL

	   RETURNS:
	         . $$    Error Message             			 /TYP=T
	                 Null= No Error

	   RELATED:
	         . $$^PBSMRPC - MRPC Service Class Driver

	   EXAMPLE:
	         S RM=$$^MRPC023(.VAL,1,CID)

	  ----Revision History --------------------------------------------
	  
	  02/01/05 - SmithCD - CR13661
	  	     Changed EXEC^RECALC call to VER^RECALC, which allowed 
	  	     for the removal of unnecessary code. Fixes undefined 
	  	     error on the ttx object. Cleaned up code (including 
	  	     incorrect usage of TMPRPT tables) and compiler 
	  	     warnings.
	  
	   04/16/2002 - DATTAR- ARQ 49794
		        Coverted to PSL
          ----------------------------------------------------------------

	*/

	type public Date %EffectiveDate
	type public String ER,ET,RM
	
	type Number SEQ
	type String CRLF,DATA,RESULT,STR,TAB

	// Version number of client message is not compatible with server
	if $G(VERSN)'=1 quit $$ERRMSG^PBSUTL($$^MSG(2951))

	// Invalid account ~p1
	if 'Db.isDefined("ACN","CID=:CID") quit $$ERRMSG^PBSUTL($$^MSG(1259,CID))

	// Invalid Account Class
	type RecordACN acn=Db.getRecord("ACN","CID=:CID")
	if acn.cls'="D" set ET="INVLDCLS" do ^UTLERR quit $$ERRMSG^PBSUTL($G(RM))

	// Effective-dating not enabled
	type RecordCUVAR cuvar=Db.getRecord("CUVAR")
	if 'cuvar.efd quit $$ERRMSG^PBSUTL($$^MSG(886))

	set (ER,RM)="" 
	set %EffectiveDate=%SystemDate 

	do VER^RECALC(.acn,1)
	if ER quit $$ERRMSG^PBSUTL(RM)

	// No data found to satisfy request
	if 'Db.isDefined("TMPRPT0","PID=:%ProcessID") quit $$ERRMSG^PBSUTL($$^MSG(1122))

	set TAB=$C(9)
	set CRLF=$C(13)_$C(10)

	type RecordTMPRPT0 tmprpt0=Db.getRecord("TMPRPT0","PID=:%ProcessID")
	set DATA=tmprpt0.data

	// Create formatted output string
	
	/* Account Level Information - Account Number, Group, Type, 
	   Interest Method, Calc Base, Index
	*/
	set STR=DATA.piece("|",1,6).translate("|",TAB)_CRLF

	/* Calculated Data - Original Interest, Original Accrued, 
	   Adjustment Interest
	*/
	set STR=STR_DATA.piece("|",7)_TAB_DATA.piece("|",10)_TAB_DATA.piece("|",8)

	// Adjustment Accrued, New Interest, New Accrued
	set STR=STR_TAB_DATA.piece("|",11)_TAB_DATA.piece("|",9)_TAB_DATA.piece("|",12)_CRLF

	/* Account History Information - From Date, Through Date, Basis, 
	   Compounded, Rate, Accrued, Total Accrued
	*/
	set SEQ=""
	type ResultSet tmp1=Db.select("KEY1,DATA","TMPRPT1","PID=:%ProcessID","KEY1")
	if 'tmp1.isEmpty() while tmp1.next() do {
		set SEQ=tmp1.getCol(1)
		set RESULT=tmp1.getCol(2)
		set STR=STR_RESULT.translate("|",TAB)_CRLF
		}
	set RETURN=$$V2LV^MSG(STR)
	
	quit ""
 #OPTION ResultClass ON
Public String vSIG()	quit "59932^39056^Chad Smith^2829"	// Signature - LTD^TIME^USER^SIZE
