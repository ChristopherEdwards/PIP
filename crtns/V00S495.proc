V00S495(%ProcessMode,RecordSTMPRM ST)   // -  - SID= <STMPRM> Statement Parameters
 ;;Copyright(c)2006 Sanchez Computer Associates, Inc.  All Rights Reserved - 08/24/2006 12:10 - kini
 // This screen is used to define the statement processing parameters for
 // each institution, including whether or not an institution chooses to
 // create statements using standard statement processing or has created a
 // custom hard-coded routine to process customer statements.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'$D(%ProcessMode) %ProcessMode=5
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="STMPRM",VPGM=$T(+0),VSNAME="Statement Parameters"
 set VFSN("STMPRM")="zST"
 set vPSL=1
 set KEYS(1)=ST.KEY
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.ST),VDA1(.ST),^DBSPNT()

 if '%ProcessMode do VNEW(.ST),VPR(.ST),VDA1(.ST)
 if %ProcessMode do VLOD(.ST) quit:$G(ER)  do VPR(.ST),VDA1(.ST)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.ST)
	quit


VNEW(RecordSTMPRM ST) // Initialize arrays if %O=0
 
 do VDEF(.ST)
 do VLOD(.ST)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
VDEF(RecordSTMPRM ST)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
 ;
VLOD(RecordSTMPRM ST) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordSTMPRM ST) // Display screen prompts
 set VO="16||13|"
 set VO(0)="|0"
 set VO(1)=$C(2,21,37,1,0,0,0,0,0,0)_"01T Combined Statement Parameter Set-up "
 set VO(2)=$C(5,3,22,2,0,0,0,0,0,0)_"01TStatement Run Defaults"
 set VO(3)=$C(5,48,20,2,0,0,0,0,0,0)_"01TException Processing"
 set VO(4)=$C(7,2,23,0,0,0,0,0,0,0)_"01TPrint When No Activity:"
 set VO(5)=$C(7,38,21,0,0,0,0,0,0,0)_"01TException Conditions:"
 set VO(6)=$C(8,13,12,0,0,0,0,0,0,0)_"01TSort Option:"
 set VO(7)=$C(8,34,25,0,0,0,0,0,0,0)_"01TCustomer Code Exceptions:"
 set VO(8)=$C(9,1,24,0,0,0,0,0,0,0)_"01TMax Title/Address Lines:"
 set VO(9)=$C(10,4,21,0,0,0,0,0,0,0)_"01TSegregate Statements:"
 set VO(10)=$C(11,3,22,0,0,0,0,0,0,0)_"01TUse Cycle Data Report:"
 set VO(11)=$C(14,3,21,2,0,0,0,0,0,0)_"01TStandard Form Options"
 set VO(12)=$C(14,43,25,2,0,0,0,0,0,0)_"01TNon-Standard Form Options"
 set VO(13)=$C(16,8,16,0,0,0,0,0,0,0)_"01TStandard Format:"
 set VO(14)=$C(16,39,24,0,0,0,0,0,0,0)_"01T Statement Routine Name:"
 set VO(15)=$C(17,5,19,1,0,0,0,0,0,0)_"01T Print Institution:"
 set VO(16)=$C(18,2,22,0,0,0,0,0,0,0)_"01TStatement Description:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VDA1(RecordSTMPRM ST)  // Display screen data
 new V
 //
 set VO="27|17|13|"
 set VO(17)=$C(7,26,1,2,0,0,0,0,0,0)_"00L"_$S(ST.PNA:"Y",1:"N")
 set VO(18)=$C(7,60,20,2,0,0,0,0,0,0)_"00T"_$E(ST.EXC,1,20)
 set VO(19)=$C(8,26,1,2,0,0,0,0,0,0)_"00N"_ST.SSO
 set VO(20)=$C(8,60,20,2,0,0,0,0,0,0)_"00T"_$E(ST.CCEF,1,20)
 set VO(21)=$C(9,26,1,2,0,0,0,0,0,0)_"00N"_ST.ADDRLNS
 set VO(22)=$C(10,26,1,2,0,0,0,0,0,0)_"00L"_$S(ST.SEGR:"Y",1:"N")
 set VO(23)=$C(11,26,1,2,0,0,0,0,0,0)_"00L"_$S(ST.SEGRPT:"Y",1:"N")
 set VO(24)=$C(16,25,1,0,0,0,0,0,0,0)_"00L"_$S(ST.STNDRD:"Y",1:"N")
 set VO(25)=$C(16,64,8,2,0,0,0,0,0,0)_"00T"_$E(ST.CMBPGM,1,8)
 set VO(26)=$C(17,25,1,0,0,0,0,0,0,0)_"00L"_$S(ST.PRNTINST:"Y",1:"N")
 set VO(27)=$C(18,25,40,0,0,0,0,0,0,0)_"00T"_$E(ST.STMDSC,1,40)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
	
	
VTAB(RecordSTMPRM ST)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=11,VPT=2,VPB=18,PGM=$T(+0),DLIB="SYSDEV",DFID="STMPRM"
 set OLNTB=18025
 
 set VFSN("STMPRM")="zST"
 //
 // 
	
	
 set %TAB(1)=$C(6,25,1)_"00L12403|1|[STMPRM]PNA"
 set %TAB(2)=$C(6,59,20)_"00T12408|1|[STMPRM]EXC|[STBLSEGEXC]"
 set %TAB(3)=$C(7,25,1)_"00N12404|1|[STMPRM]SSO|[UTBLSSO]"
 set %TAB(4)=$C(7,59,20)_"00T12410|1|[STMPRM]CCEF|[UTBLCC]"
 set %TAB(5)=$C(8,25,1)_"00N12411|1|[STMPRM]ADDRLNS|||||1"
 set %TAB(6)=$C(9,25,1)_"00L12407|1|[STMPRM]SEGR|||do VP1^V00S495(.ST)"
 set %TAB(7)=$C(10,25,1)_"00L12409|1|[STMPRM]SEGRPT"
 set %TAB(8)=$C(15,24,1)_"00L12402|1|[STMPRM]STNDRD"
 set %TAB(9)=$C(15,63,8)_"00T12401|1|[STMPRM]CMBPGM|||do VP2^V00S495(.ST)"
 set %TAB(10)=$C(16,24,1)_"00L12405|1|[STMPRM]PRNTINST"
 set %TAB(11)=$C(17,24,40)_"00T12406|1|[STMPRM]STMDSC"
 do VTBL(.ST)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


VTBL(RecordSTMPRM ST) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit


  //user-defined post procs
 //
VP1(RecordSTMPRM ST) //
 if 'X do GOTO^DBSMACRO("[STMPRM]STNDRD") quit 
 quit

VP2(RecordSTMPRM ST) //
 if $L(X) set ER=$$DQ^%ZRTNS("^"_X)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordSTMPRM ST
 do VPR(.ST)
 do VDA1(.ST)
 do ^DBSPNT()
 quit

VW(RecordSTMPRM ST)
 do VDA1(.ST)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordSTMPRM ST)
 do VDA1(.ST)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordSTMPRM ST
 do VDA1(.ST)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
 
vSET(sn,di,X)
 type Public RecordSTMPRM ST
 if sn="STMPRM" do vSET1(.ST,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
vSET1(RecordSTMPRM ST,di,X)
 do ST.setAuditFlag(1)
 set ST.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
vREAD(fid,di)
 type Public RecordSTMPRM ST
 if fid="STMPRM" quit $$vREAD1(.ST,di)
 quit ""
vREAD1(RecordSTMPRM ST,di)
 quit ST.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler
	quit
