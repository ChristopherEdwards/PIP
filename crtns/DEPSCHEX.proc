public DEPSCHEX	//; -  - V4.2 - Deposit Schedule SI and YD Extract
	/*
	      ORIG:  PARDOE -  4 JUN 1991
	      DESC:  Project V42.IBS_200975010


	  ---- Revision History ------------------------------------------------

	  07/28/06 - KELLYP - CR 22048
	  	     Modified EX3 section to eliminate PRECEDENCE warning.

	  09/15/05 - SWARNALATHAP - 16708
	  	     .	Modified EXEC section to exclude Debit Balance Deposit 
	  	        Accounts among the account numbers provided as input 
	  	        while running the function @DPF002 (Schedule DI and 
	  	        YD Audit Extract).
	  	     All references to SI are modified to DI. The INIT and 
		     EXEC sections are modified by adding code for new cells
		     DI120,DI130,DI310,DI320,DI330 and DI340 for the project 
		     "OTS TFR March 2004 Reporting".
		     
	  04/12/02 - CHHABRIAS - 49794
		     Converted to PSL

	  02/12/02 - AHMEDS - 49056
		     Removed coding related to cell numbers SI120, SI130, SI140,
		     SI150,SI160 from EX2 section. Coding for cells SI170 and
		     SI180 have been replaced by coding for cell SI165 in the
		     EXEC section. Also coding for cells SI190 and SI200 have
		     been replaced by coding for new cell SI175. The INIT
		     section has been modified to exclude all the removed cells.


	*/

	do INIT
	
	do CID
	
	quit

CID	//
	type ResultSet rs=Db.select("CLS,GRP,TYPE,CID","ACN","CLS='D' AND GRP NOT='DBD'")
	while rs.next()  do {
		set CID=rs.getCol(4)
		do EXEC
		}
	do FILE
	
	quit

EXEC	//
	type RecordDEP dep=Db.getRecord("DEP","CID",1)
	if '(dep.getMode()) ! (dep.grp="DBD") quit
	
	set BAL=dep.bal
	
	// closed
	if dep.stat>0 do EXEND quit

	set REGD=dep.regd

	set STDAT=dep.odt
	set MDT=dep.mdt
	if dep.dlr>STDAT set STDAT=dep.dlr
	do TRM(.dep)

	// ------ Schedule DI ------

	// DI 200 - IRA balance
	if dep.ira>0 set DI(200)=DI(200)+BAL

	// DI 610 - demand deposit balance ([DEP]REGD)
	if REGD>0,REGD<4 set DI(610)=DI(610)+BAL

	// DI 150 - balances < or = 100,000
	// DI 160 - and >100,000
	if BAL>100000 set DI(160)=DI(160)+1
	else  set DI(150)=DI(150)+1

	// DI 120 - balances < or = $100,000 and DDA, CD, SAV, WASH
	// DI 130 - balance > 100,000 and DDA, CD, SAV, WASH
	if BAL'>100000 set DI(120)=DI(120)+BAL
	else  set DI(130)=DI(130)+BAL

	// DI 310 - Transaction Accounts (Including Demand Deposits)
	if (REGD="")!(REGD<4) set DI(310)=DI(310)+BAL

	// DI 320 - Money Market Deposit Accounts
	if REGD=5 S DI(320)=DI(320)+BAL

	// DI 330 - Passbook Accounts (Including Non-demand Escrows)
	if (REGD=4)!((REGD=6)&(MDT'>%SystemDate)) set DI(330)=DI(330)+BAL

	// DI 340 - Time Deposits
	if (REGD=6)&(MDT>%SystemDate) set DI(340)=DI(340)+BAL

EX2	// fixed maturity deposit accounts
	if REGD'=6 do EX3 quit

	// if IRN="" and TRATE="" or TREXD'>TJD - not interest bearing 
	if dep.irn="",((dep.trate="")!(dep.trexd'>%SystemDate)) do EX3 quit

EX3	// ------ Schedule YD ------

	if %SystemDate-STDAT>7 do EXEND quit

	// if IRN="" and TRATE="" or TREXD'>TJD - not interest bearing
	if dep.irn="",((dep.trate)=""!((dep.trexd)'>%SystemDate))) do EXEND quit

	// calculate annual compound amount
	set IRN=$$^SCARND(+dep.irn,0,"","",2)
	do COMP(.dep)

	// YD 110 - transaction accounts
	if REGD>0,REGD<4 do SET(110) do EXEND quit

	// YD 120 - money markets
	if REGD=5 do SET(120) do EXEND quit

	// fixed rate - fixed term cd's
	if REGD'=6 do EXEND quit
	if dep.index'="" do EXEND quit

	// YD 220 - bal > 100,000 up to 1 mo
	// YD 230 - bal > 100,000 1 mo thru 2 mo
	// YD 240 - bal > 100,000 2 mo thru 3 mo
	// YD 250 - bal > 100,000 3 mo thru 6 mo
	// YD 260 - bal > 100,000 6 mo thru 12 mo

	if BAL>100000,TRM'>1 do SET(220) do EXEND quit
	if BAL>100000,TRM'>2 do SET(230) do EXEND quit
	if BAL>100000,TRM'>3 do SET(240) do EXEND quit
	if BAL>100000,TRM'>6 do SET(250) do EXEND quit
	if BAL>100000,TRM'>12 do SET(260) do EXEND quit
	if BAL>100000 do EXEND quit

	// YD 190 - bal '< 80,000 and < 100,000 up to 1 mo
	// YD 200 - bal '< 80,000 and < 100,000 1 mo thru 2 mo
	// YD 210 - bal '< 80,000 and < 100,000 2 mo thru 3 mo

	if BAL'<80000,TRM'>1 do SET(190) do EXEND quit
	if BAL'<80000,TRM'>2 do SET(200) do EXEND quit
	if BAL'<80000,TRM'>3 do SET(210) do EXEND quit
	if BAL'<80000 do EXEND quit

	// YD 130 - bal < 80,000 32 to 91 days
	// YD 140 - bal < 80,000 92 to 182 days
	// YD 150 - bal < 80,000 183 days to 1 yr
	// YD 160 - bal < 80,000 1 yr thru 2 yr
	// YD 170 - bal < 80,000 2 yr thru 3 yr
	// YD 180 - bal < 80,000 over 3 yr
	if TRM>36 do SET(180) do EXEND quit
	if TRM>24 do SET(170) do EXEND quit
	if TRM>12 do SET(160) do EXEND quit

	// calc number of days in term
	set D=dep.mdt-STDAT
	if D'<183 do SET(150) do EXEND quit
	if D'<92 do SET(140) do EXEND quit
	if D'<32 do SET(130) do EXEND quit

EXEND	//
	kill BAL,REGD,TRM,DEP,STDAT,IRN
	quit

FILE	// file date
	// set YD array with YD1 array with greatest number of accounts
	new CODE1
	set (N,R)=""
	for  set N=YD1(N).order() quit:N=""  do {
		for  set R=YD1(N,R).order() quit:R=""  do {
			if YD1(N,R)'<YD(N) set YD(N)=YD1(N,R)_"|"_R
			}
		}

	type RecordDEPOTS depots
	set CODE1="DI"
	set N="" for  set N=DI(N).order() quit:N=""  do {
		if 'Db.isDefined("DEPOTS","CODE=:CODE1,LNBR=:N") do {
			set depots=Class.new("RecordDEPOTS")
			set depots.code=CODE1
			set depots.lnbr=N
			}
		else  do {
			set depots=Db.getRecord("DEPOTS","CODE=:CODE1,LNBR=:N")
			}
		set depots.pc1=DI(N).piece("|",1)
		set depots.pc2=DI(N).piece("|",2)
		set depots.pc3=DI(N).piece("|",3)
		set depots.pc4=DI(N).piece("|",4)
	
		do depots.bypassSave()
		}
	
	set N="" for  set N=YD(N).order() quit:N=""  do {
	        set CODE1="YD"
	
		if 'Db.isDefined("DEPOTS","CODE=:CODE1,LNBR=:N") do {
                	set depots=Class.new("RecordDEPOTS")
			set depots.code=CODE1
		        set depots.lnbr=N
			}
		else  do {
			set depots=Db.getRecord("DEPOTS","CODE=:CODE1,LNBR=:N")
			}
	        set depots.pc1=YD(N).piece("|",1)
        	set depots.pc2=YD(N).piece("|",2)
	        set depots.pc3=YD(N).piece("|",3)
	        set depots.pc4=YD(N).piece("|",4)
	
		do depots.bypassSave()
	
	        }
	quit

SET(Y)	// set YD array totals

	new X set X=YD1(Y,IRN).get()
	set X.piece("|",1)=X.piece("|",1)+1
	set X.piece("|",2)=X.piece("|",2)+COMP
	set X.piece("|",3)=X.piece("|",3)+BAL
	set YD1(Y,IRN)=X
	quit

TRM(RecordDEP dep)	// calculate term

	// use open date or renewal date, whichever is greater
	set TRM=$$CALTERM^LNOTSCMR(STDAT,dep.mdt)
	quit

COMP(RecordDEP dep)	// calculate annual compound amount

	//   FIN(10)=TJD   FIN(11)=[DEP]ICF   FIN(5)=[DEP]IRN

	set COMP=0
	new AF,D,FIN,FRE,IACM,IAFA,JD,Y
	set IACM=dep.iacm

	// Int/Div Compounding Frequency
	set (FIN(11),FRE)=dep.icf if FRE="" set (FIN(11),FRE)="1YA"

	if Db.isDefined("USRFRE","UFRE=:FRE") do {
		type RecordUSRFRE usrfre=Db.getRecord("USRFRE","UFRE=:FRE")
		set (FIN(11),FRE)=usrfre.fre
		}
	
	if '$D(JD) set JD=%SystemDate
	
	set (FIN(10),JD)=%SystemDate set FIN(5)=IRN if 'FIN(5) set FIN(5)=".01"

	// calc FIN(1005) - rate adjusted for 365 or 360 days
	do IRNI^DEPMOD(FIN(11))

	if '$D(IAFA) do UFRE^DEPMOD

	if 'IAFA quit

	set D=365 if '$E(IACM) set D=360
	set COMP=$$^DEPCALC("F3",(D/IAFA),FIN(1005),BAL,0,"",18)
	set COMP=$$^SCARND((COMP-BAL),0,CID)
	quit

INIT	//
	do Db.delete("DEPOTS","")
	kill DI,YD,YD1
	for I=120,130,150,160,200,310,320,330,340,610 set DI(I)=""
	set (YD(110),YD(120),YD(130),YD(140),YD(150),YD(160),YD(170))=""
	set (YD(180),YD(190),YD(200),YD(210),YD(220),YD(230),YD(240))=""
	set (YD(250),YD(260))=""
	quit

TEST	//
	kill OLNTB,ACCOUNTS
	set %TAB("ACCOUNTS")=".ACCOUNTS1/XPP=D PP^DEPSCHEX"

	set %READ="@@%FN,,,ACCOUNTS/REP=15"
	do ^UTLREAD if VFMQ="Q" quit

	if ACCOUNTS(1)="" quit

	do INIT

	for ACCN=1:1:15 if ACCOUNTS(ACCN)'="" do LEV0
	do FILE 
	quit

LEV0	//
	set X=ACCOUNTS(ACCN)
	if X?1"A".E!(X?1"a".E) set CID=0 set LAST=999999999999999 do LEV1 quit

	set CID=X-1
	if X'["-" set LAST=X
	else  set LAST=X.piece("-",2)

LEV1	//
	type ResultSet rs=Db.select("CID","ACN","CID>:CID")
	if rs.isEmpty() quit
	while rs.next() do { quit:CID>LAST
		set CID=rs.getCol(1)
		if CID>LAST quit

		do EXEC
	
		}
	
	quit

PP	//
	if X="" quit

	if X?1"A".E quit

	if X?1N.N1"-"1N.N quit

	// Invalid account
	if 'Db.isDefined("ACN","CID=:X") do Runtime.setErrMSG("ACN",1259) quit:ER

	quit

vSIG()	quit "60480^49891^Pat Kelly^7879"	// Signature - LTD^TIME^USER^SIZE
